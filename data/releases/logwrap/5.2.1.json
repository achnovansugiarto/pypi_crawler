{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy3 3.5+\n\n.. note:: Python 3.4 and 2.7 is supported in versions < 5.0.0\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback: bool = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\nCD system\n=========\n`Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>, Alexey Stepanov <penguinolog@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/5.2.1/",
    "requires_dist": [
      "typing (>=3.6); python_version < \"3.8\""
    ],
    "requires_python": ">=3.5.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "5.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbd70313e13e7122923327c011a3efd54182f532d2ea4653962d5326c7e1fdac",
        "md5": "17f50b3d3970006345904b49ae97d48e",
        "sha256": "c2d6f4eef6403ccb0383ed8f5399bf11652335c34c7b9ccc349615dfb9978ac7"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "17f50b3d3970006345904b49ae97d48e",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 722722,
      "upload_time": "2018-11-12T10:13:50",
      "upload_time_iso_8601": "2018-11-12T10:13:50.133854Z",
      "url": "https://files.pythonhosted.org/packages/bb/d7/0313e13e7122923327c011a3efd54182f532d2ea4653962d5326c7e1fdac/logwrap-5.2.1-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "590f4d63cec725d4bcd85929e6dc6d48fe5c329737f05b59d271b593e2dddfdb",
        "md5": "7bccef2474ebc63d1d849288c93c3f87",
        "sha256": "95c2fa7aeb9eaccb3b8f7161bc78f00a560845b87d4f1d6c52c5c56a0ac5116d"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7bccef2474ebc63d1d849288c93c3f87",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 799830,
      "upload_time": "2018-11-12T10:13:52",
      "upload_time_iso_8601": "2018-11-12T10:13:52.155855Z",
      "url": "https://files.pythonhosted.org/packages/59/0f/4d63cec725d4bcd85929e6dc6d48fe5c329737f05b59d271b593e2dddfdb/logwrap-5.2.1-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14e42c93d0821e9c486504b3b577a57e97a5e30d8f4fad55d2e66fda55c277e2",
        "md5": "818426918543fcaf4269b6ce003d7ce5",
        "sha256": "76a1cb628fb8144e9bd74073ade5ac3eaa222f91b0142539d0f51294374ea6a8"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "818426918543fcaf4269b6ce003d7ce5",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 743370,
      "upload_time": "2018-11-12T10:13:54",
      "upload_time_iso_8601": "2018-11-12T10:13:54.087501Z",
      "url": "https://files.pythonhosted.org/packages/14/e4/2c93d0821e9c486504b3b577a57e97a5e30d8f4fad55d2e66fda55c277e2/logwrap-5.2.1-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9daa005fea87b17baa071904e9b5e5c7d825191979917e5c43914b891c91bc8",
        "md5": "d96e33cf136a44aaf87cf327ff4245f3",
        "sha256": "e0b4df804421e61da41329448d239135af56b02334e07282900fe4f6529bfae3"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d96e33cf136a44aaf87cf327ff4245f3",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 819917,
      "upload_time": "2018-11-12T10:13:55",
      "upload_time_iso_8601": "2018-11-12T10:13:55.972244Z",
      "url": "https://files.pythonhosted.org/packages/f9/da/a005fea87b17baa071904e9b5e5c7d825191979917e5c43914b891c91bc8/logwrap-5.2.1-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab0937f53d4ba5a4d55d55f8e4053114ca43fe7a6caa9f8e75ad44988703a5df",
        "md5": "d959dfda7f48b590e9a2aab245b172ec",
        "sha256": "495107d0cab4e3d9186819856f33b5c892d4559fdabe585f1ca44e84d932b4e8"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "d959dfda7f48b590e9a2aab245b172ec",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 734817,
      "upload_time": "2018-11-12T10:13:57",
      "upload_time_iso_8601": "2018-11-12T10:13:57.687862Z",
      "url": "https://files.pythonhosted.org/packages/ab/09/37f53d4ba5a4d55d55f8e4053114ca43fe7a6caa9f8e75ad44988703a5df/logwrap-5.2.1-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b59ab66cb9b04d53a2c8fb7c91236ee0042f49ecd74b55e27b76ca0ddf010a9d",
        "md5": "49e5b7dfef2c45ac807689bd1c4ac7c7",
        "sha256": "f750e478ef506720ec9ec6a9892608cf32cfd76d68aafc4554c92434cb9c6a31"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "49e5b7dfef2c45ac807689bd1c4ac7c7",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 810365,
      "upload_time": "2018-11-12T10:13:59",
      "upload_time_iso_8601": "2018-11-12T10:13:59.574812Z",
      "url": "https://files.pythonhosted.org/packages/b5/9a/b66cb9b04d53a2c8fb7c91236ee0042f49ecd74b55e27b76ca0ddf010a9d/logwrap-5.2.1-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "176c77d605c4f5cd5db88658d5482eace21b933afff9b5ca0d155ce1025bc7be",
        "md5": "95f705eaf386eea4fcc8c9311b867b2f",
        "sha256": "2cf505f2383004e5e466435dec195fcbbe798b3a492e62aacd5bfd9dc9bc0dd3"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95f705eaf386eea4fcc8c9311b867b2f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.0",
      "size": 16843,
      "upload_time": "2018-11-12T10:14:01",
      "upload_time_iso_8601": "2018-11-12T10:14:01.137181Z",
      "url": "https://files.pythonhosted.org/packages/17/6c/77d605c4f5cd5db88658d5482eace21b933afff9b5ca0d155ce1025bc7be/logwrap-5.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac9b623a6e63e680b993c5a5ce742f64f6323206b434fa5d65e3e2b3b013515d",
        "md5": "a4d14927b04c2b571144c33a01bfec8b",
        "sha256": "d1f2354bba5882527c5081922971e42b76930f03c8b997e8407d75702345f32b"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a4d14927b04c2b571144c33a01bfec8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 30697,
      "upload_time": "2018-11-12T10:14:02",
      "upload_time_iso_8601": "2018-11-12T10:14:02.609764Z",
      "url": "https://files.pythonhosted.org/packages/ac/9b/623a6e63e680b993c5a5ce742f64f6323206b434fa5d65e3e2b3b013515d/logwrap-5.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}