{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 2.7\n    Python 3.4\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy\n    PyPy3 3.5+\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\nCD system\n=========\n`Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>, Alexey Stepanov <penguinolog@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/4.0.1/",
    "requires_dist": [
      "six (>=1.9)",
      "typing (>=3.6); python_version < \"3.8\"",
      "funcsigs (>=1.0); python_version == \"2.7\"",
      "enum34 (>=1.1); python_version == \"2.7\""
    ],
    "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "4.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53f8dc57201bbb61bdfcde25ef19123b3c9787ea9d41df1d43254143a9b9ff9a",
        "md5": "a2289ab7a0956836c0b43f8df57fab53",
        "sha256": "c801710a7efa01a4635c0ac8ecfa277280418a0133dcd6b6232d7c1b1af10a68"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp34-cp34m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "a2289ab7a0956836c0b43f8df57fab53",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 712698,
      "upload_time": "2018-07-18T15:32:59",
      "upload_time_iso_8601": "2018-07-18T15:32:59.895348Z",
      "url": "https://files.pythonhosted.org/packages/53/f8/dc57201bbb61bdfcde25ef19123b3c9787ea9d41df1d43254143a9b9ff9a/logwrap-4.0.1-cp34-cp34m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8bab9e0014eeb8a899dc55cc84fd65bdefcf12ec9c22126ce59975d5ad809a0",
        "md5": "0a52e466ab7b368979bb0355ffc5fd1c",
        "sha256": "11fd0325878162b777f830e3a1ede5abf03bbfd8172092da6b087c7f5d129466"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp34-cp34m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0a52e466ab7b368979bb0355ffc5fd1c",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 754511,
      "upload_time": "2018-07-18T15:33:01",
      "upload_time_iso_8601": "2018-07-18T15:33:01.795809Z",
      "url": "https://files.pythonhosted.org/packages/e8/ba/b9e0014eeb8a899dc55cc84fd65bdefcf12ec9c22126ce59975d5ad809a0/logwrap-4.0.1-cp34-cp34m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b960057b04eacb2a233b93da0d705cea04e67ce4551e5be45ff5ca7a4893020",
        "md5": "37335b0cd25a5b2939e79d7d6d91e124",
        "sha256": "3451ea3ba7805f6d497d98717ae0d8ce0e1b9a6560e96e64e0a8838afba61e11"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "37335b0cd25a5b2939e79d7d6d91e124",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 696324,
      "upload_time": "2018-07-18T15:33:03",
      "upload_time_iso_8601": "2018-07-18T15:33:03.310668Z",
      "url": "https://files.pythonhosted.org/packages/5b/96/0057b04eacb2a233b93da0d705cea04e67ce4551e5be45ff5ca7a4893020/logwrap-4.0.1-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13971fbb7608999c93ebc03cb23a8e73b83d30210b3f09399f0fd14e41649931",
        "md5": "87ef03bafb3ba2d329d6fc6b93844288",
        "sha256": "7696505643a0c4b438b4b3bd5287999db37b4358a2b272031b70f1efb053164e"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "87ef03bafb3ba2d329d6fc6b93844288",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 740399,
      "upload_time": "2018-07-18T15:33:05",
      "upload_time_iso_8601": "2018-07-18T15:33:05.097339Z",
      "url": "https://files.pythonhosted.org/packages/13/97/1fbb7608999c93ebc03cb23a8e73b83d30210b3f09399f0fd14e41649931/logwrap-4.0.1-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e65b29ee5446d62974adde4ae1d7c1e3a3ca53181dd6f7c1b757cfa1f404809",
        "md5": "d02819069ec4070e5bf17d8446542964",
        "sha256": "f0b39d4af6890a1b6264a8e8d0e7f8f211ea176a37f748878339da88fb40f7ff"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "d02819069ec4070e5bf17d8446542964",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 714568,
      "upload_time": "2018-07-18T15:33:07",
      "upload_time_iso_8601": "2018-07-18T15:33:07.897689Z",
      "url": "https://files.pythonhosted.org/packages/9e/65/b29ee5446d62974adde4ae1d7c1e3a3ca53181dd6f7c1b757cfa1f404809/logwrap-4.0.1-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db5c78157f4db0f09948edda0fc56bf92ef4dae2606a81ab1d5ec9555180f158",
        "md5": "f3598ec966d57eeb1263a64f56afe76b",
        "sha256": "ccbef391754746b5eee0e6408e3b26bdd69196ab7f36cb3a55c8995eb8620976"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f3598ec966d57eeb1263a64f56afe76b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 758355,
      "upload_time": "2018-07-18T15:33:09",
      "upload_time_iso_8601": "2018-07-18T15:33:09.800247Z",
      "url": "https://files.pythonhosted.org/packages/db/5c/78157f4db0f09948edda0fc56bf92ef4dae2606a81ab1d5ec9555180f158/logwrap-4.0.1-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4be10629e9fb14372f2a1e1bddc666242b741ea952e9a0b8b25e6191b6e53b7f",
        "md5": "2241ea7ae05c828e699405139ef3490b",
        "sha256": "6ed94adbc70e2b8e52f9c9b0e842c219c7a2722992af2a6adab347ddb05e974c"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "2241ea7ae05c828e699405139ef3490b",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 716332,
      "upload_time": "2018-07-18T15:33:11",
      "upload_time_iso_8601": "2018-07-18T15:33:11.329730Z",
      "url": "https://files.pythonhosted.org/packages/4b/e1/0629e9fb14372f2a1e1bddc666242b741ea952e9a0b8b25e6191b6e53b7f/logwrap-4.0.1-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17e713bd6ed91b6366e709067de0013c589255f68a867bdde8dd7aefb0155417",
        "md5": "83e7cf6fb8d90b1083e4bcbc9638482a",
        "sha256": "7832715f97e9caf70e6bf955a007fb0999af295f7a06ecdf4b0cf4a70bf1b15f"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "83e7cf6fb8d90b1083e4bcbc9638482a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 756140,
      "upload_time": "2018-07-18T15:33:13",
      "upload_time_iso_8601": "2018-07-18T15:33:13.197091Z",
      "url": "https://files.pythonhosted.org/packages/17/e7/13bd6ed91b6366e709067de0013c589255f68a867bdde8dd7aefb0155417/logwrap-4.0.1-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "643a9b265931aa054204eeaf0295385fe514d6fc6e87bbf9a18404077e674e01",
        "md5": "a7c50b3e7bd06f709a963f6a9ad697a2",
        "sha256": "897de0a9dd159112aeda1fa44e07cf9f690fcb430efdc37619a485dbe9bc672d"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7c50b3e7bd06f709a963f6a9ad697a2",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 24558,
      "upload_time": "2018-07-18T15:33:15",
      "upload_time_iso_8601": "2018-07-18T15:33:15.150826Z",
      "url": "https://files.pythonhosted.org/packages/64/3a/9b265931aa054204eeaf0295385fe514d6fc6e87bbf9a18404077e674e01/logwrap-4.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eee144ea738165ba9d3e99672425a443c38a9aec556749274fbda6ba31bd058e",
        "md5": "eadc7e419832230217e62f943dc4122b",
        "sha256": "1dca99d3a3a7989daed6b3c7477d3657000ad0c457a3c5b1ee174e3f68713c80"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eadc7e419832230217e62f943dc4122b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7.5,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 28444,
      "upload_time": "2018-07-18T15:33:16",
      "upload_time_iso_8601": "2018-07-18T15:33:16.271871Z",
      "url": "https://files.pythonhosted.org/packages/ee/e1/44ea738165ba9d3e99672425a443c38a9aec556749274fbda6ba31bd058e/logwrap-4.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}