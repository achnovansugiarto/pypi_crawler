{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 2.7\n    Python 3.4\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy\n    PyPy3 3.5+\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\nCD system\n=========\n`Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/3.3.1/",
    "requires_dist": [
      "six (>=1.9)",
      "typing (>=3.6); python_version < \"3.8\"",
      "funcsigs (>=1.0); python_version == \"2.7\"",
      "enum34 (>=1.1); python_version == \"2.7\""
    ],
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "3.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19e2699b619a27132ff68796bf7ca31b9963cdbb75a9ad773b451a8319fc26a9",
        "md5": "82d429660a46a1f6c03cb00a4bb1ef63",
        "sha256": "ac61406bef01f19ee3d131fe13fd655a81e1ab46c98b83c293587de31cc93599"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp34-cp34m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "82d429660a46a1f6c03cb00a4bb1ef63",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 709305,
      "upload_time": "2018-07-03T12:51:19",
      "upload_time_iso_8601": "2018-07-03T12:51:19.481055Z",
      "url": "https://files.pythonhosted.org/packages/19/e2/699b619a27132ff68796bf7ca31b9963cdbb75a9ad773b451a8319fc26a9/logwrap-3.3.1-cp34-cp34m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fa9c2d4f23b6d9016a954cd7928c7b76fef3d1ed10e4d2b8923aee58a1f1b91",
        "md5": "462ecc427f4434df90c1773363b6f94c",
        "sha256": "1999a0987d74a4c801347ff1df22ed90a4951aab0cb31b113b360a6a1a1abc4e"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp34-cp34m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "462ecc427f4434df90c1773363b6f94c",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 753542,
      "upload_time": "2018-07-03T12:51:20",
      "upload_time_iso_8601": "2018-07-03T12:51:20.987177Z",
      "url": "https://files.pythonhosted.org/packages/3f/a9/c2d4f23b6d9016a954cd7928c7b76fef3d1ed10e4d2b8923aee58a1f1b91/logwrap-3.3.1-cp34-cp34m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fce7f190515d38d5ddb8b34930568b162e2e87dafa7710def35c0477d646b15f",
        "md5": "4b57aacaa614ba60a505db11641903ba",
        "sha256": "17ac55d9af603cf22f26b8383259d1dd7c1dd515457bd84c195ec7d659266523"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "4b57aacaa614ba60a505db11641903ba",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 695072,
      "upload_time": "2018-07-03T12:51:22",
      "upload_time_iso_8601": "2018-07-03T12:51:22.480902Z",
      "url": "https://files.pythonhosted.org/packages/fc/e7/f190515d38d5ddb8b34930568b162e2e87dafa7710def35c0477d646b15f/logwrap-3.3.1-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c067525ffeb04aaa2053f87a37962b3b86aff83ac67436fa3e1a4e429c6eb094",
        "md5": "ba1cdb74a05951494593df5fe4a1efad",
        "sha256": "bcf636bacf04f27ab07aed56f325594143904149d0d4de2fec38ebe9b1403bfd"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ba1cdb74a05951494593df5fe4a1efad",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 740002,
      "upload_time": "2018-07-03T12:51:24",
      "upload_time_iso_8601": "2018-07-03T12:51:24.233950Z",
      "url": "https://files.pythonhosted.org/packages/c0/67/525ffeb04aaa2053f87a37962b3b86aff83ac67436fa3e1a4e429c6eb094/logwrap-3.3.1-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "920553cfd97eb8f4a2d5c2f2e9a01f70f1ac718de2511b972c283c7e0583be03",
        "md5": "b26f7e3d43cbc6bdb94381246e784dce",
        "sha256": "4bd1ec6fda61c94c83c64edaebeabf9dc174dadc4ef4dfbd34618fcbbcb99527"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "b26f7e3d43cbc6bdb94381246e784dce",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 716628,
      "upload_time": "2018-07-03T12:51:26",
      "upload_time_iso_8601": "2018-07-03T12:51:26.070980Z",
      "url": "https://files.pythonhosted.org/packages/92/05/53cfd97eb8f4a2d5c2f2e9a01f70f1ac718de2511b972c283c7e0583be03/logwrap-3.3.1-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7421d378828690380f9d52f65c5eb67d7367d3e574ab671b4e5d7a7a8112498f",
        "md5": "b1864762e6f2573db7af3fa63cc0040b",
        "sha256": "db0dd2f00d43adfd4cd68726587be1951d5e83e1338b75e25d12d14ee0cffa61"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b1864762e6f2573db7af3fa63cc0040b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 757167,
      "upload_time": "2018-07-03T12:51:27",
      "upload_time_iso_8601": "2018-07-03T12:51:27.869577Z",
      "url": "https://files.pythonhosted.org/packages/74/21/d378828690380f9d52f65c5eb67d7367d3e574ab671b4e5d7a7a8112498f/logwrap-3.3.1-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fb351dc1f27df41f5371a9436affd8a269c376209bd7fb99e8673b5a5099c76",
        "md5": "7e7ce1917d2618fc4a47d021c27ecce9",
        "sha256": "9fc568de01b6048569de2c7ca30f492ce4ace72dedf303a2dee33583ce0345a0"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "7e7ce1917d2618fc4a47d021c27ecce9",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 712740,
      "upload_time": "2018-07-03T12:51:29",
      "upload_time_iso_8601": "2018-07-03T12:51:29.834207Z",
      "url": "https://files.pythonhosted.org/packages/1f/b3/51dc1f27df41f5371a9436affd8a269c376209bd7fb99e8673b5a5099c76/logwrap-3.3.1-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2405b4ce1b4c8db3c4d3adbe26deb93579a4bf1917f9d67742d2138795f72140",
        "md5": "a6a1f8fda57262d36ecd1e09c155bce8",
        "sha256": "15a9e3a7325eccc02b3781fc0e8f14a08b1c07657f694391f4313ff17685739f"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a6a1f8fda57262d36ecd1e09c155bce8",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 757597,
      "upload_time": "2018-07-03T12:51:31",
      "upload_time_iso_8601": "2018-07-03T12:51:31.735567Z",
      "url": "https://files.pythonhosted.org/packages/24/05/b4ce1b4c8db3c4d3adbe26deb93579a4bf1917f9d67742d2138795f72140/logwrap-3.3.1-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6523005ce0466eba16ad2f966e4d2bf13fe79b41cb64781ab9fa5b026cb1bb78",
        "md5": "8dad8ecf19ad941d3b4115419cd0e809",
        "sha256": "51552f7c07d75d67051b5f7afaae85c9041ea4d076a02122d7dd05b98c2dd262"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dad8ecf19ad941d3b4115419cd0e809",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 24873,
      "upload_time": "2018-07-03T12:51:33",
      "upload_time_iso_8601": "2018-07-03T12:51:33.151585Z",
      "url": "https://files.pythonhosted.org/packages/65/23/005ce0466eba16ad2f966e4d2bf13fe79b41cb64781ab9fa5b026cb1bb78/logwrap-3.3.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95fdf40e1e38cba34037a74d8d2a911f0bdda576a23de69437cd41a1e02be6c1",
        "md5": "77558371d869a39d7c78fb81d8cd4fca",
        "sha256": "7ae6a7281ccb76eae992a53326003c8a5634543dbc576438de1356ca2e03abc0"
      },
      "downloads": -1,
      "filename": "logwrap-3.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "77558371d869a39d7c78fb81d8cd4fca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 28366,
      "upload_time": "2018-07-03T12:51:33",
      "upload_time_iso_8601": "2018-07-03T12:51:33.990094Z",
      "url": "https://files.pythonhosted.org/packages/95/fd/f40e1e38cba34037a74d8d2a911f0bdda576a23de69437cd41a1e02be6c1/logwrap-3.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}