{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy3 3.5+\n\n.. note:: Python 3.4 and 2.7 is supported in versions < 5.0.0\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback: bool = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\nCD system\n=========\n`Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>, Alexey Stepanov <penguinolog@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/5.2.2/",
    "requires_dist": [
      "typing (>=3.6); python_version < \"3.8\""
    ],
    "requires_python": ">=3.5.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "5.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37482ac4b3c19fc468b88fe81d6e0d2c03db8379306c6b66a2a2360989458f7f",
        "md5": "6a92751367c43cdab8c6a7e9f413ed69",
        "sha256": "9f59f31ae4a97c5fc0be1b1a11bf58872975cb59cce08541ed533a130ba12768"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "6a92751367c43cdab8c6a7e9f413ed69",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 733965,
      "upload_time": "2018-11-14T15:23:53",
      "upload_time_iso_8601": "2018-11-14T15:23:53.678928Z",
      "url": "https://files.pythonhosted.org/packages/37/48/2ac4b3c19fc468b88fe81d6e0d2c03db8379306c6b66a2a2360989458f7f/logwrap-5.2.2-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82a80e8dc4dcf4ae4ac5f9b456bafc3ba854df75f0210b279176572c05669067",
        "md5": "e93923a2c815b37ce5496408cfb1047f",
        "sha256": "e9ef84ddb1ec92266b50935a6f37c20885985f101d8544773b2f5aabfee2d652"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e93923a2c815b37ce5496408cfb1047f",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 812180,
      "upload_time": "2018-11-14T15:23:56",
      "upload_time_iso_8601": "2018-11-14T15:23:56.307553Z",
      "url": "https://files.pythonhosted.org/packages/82/a8/0e8dc4dcf4ae4ac5f9b456bafc3ba854df75f0210b279176572c05669067/logwrap-5.2.2-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "feaf7048d4b37f7185da5e2bc54504e56e96bc5f4df5c8105bf68119e90ac7f8",
        "md5": "1ed96c19c9913600fa98a47aa6665bd2",
        "sha256": "dcbdd66af21981bd2cb27ed6810865be2515f5e2a9a1651c715746f39ded199a"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "1ed96c19c9913600fa98a47aa6665bd2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 755340,
      "upload_time": "2018-11-14T15:23:58",
      "upload_time_iso_8601": "2018-11-14T15:23:58.885108Z",
      "url": "https://files.pythonhosted.org/packages/fe/af/7048d4b37f7185da5e2bc54504e56e96bc5f4df5c8105bf68119e90ac7f8/logwrap-5.2.2-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15f0c6d3a23ea46521708c303055f52e976ddc474c4400d1cb9c7d8323309c18",
        "md5": "77e027800e1b14e4f9719a16702da7d8",
        "sha256": "0d5b147b8ac830a47fecf3ddc5ed2a6d475341ddadc34f851a8d30856e02e2e6"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "77e027800e1b14e4f9719a16702da7d8",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 833064,
      "upload_time": "2018-11-14T15:24:05",
      "upload_time_iso_8601": "2018-11-14T15:24:05.216923Z",
      "url": "https://files.pythonhosted.org/packages/15/f0/c6d3a23ea46521708c303055f52e976ddc474c4400d1cb9c7d8323309c18/logwrap-5.2.2-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b09c787de3ed3099ed2c05d596e3cd0317ade73b44ca2f87b4fe5c1329d9996",
        "md5": "bdd49c852dd9978c6deb8e49599511a8",
        "sha256": "06bf3181d9a09c4d39e0349ba127b1cf04a5a9f2b600ddbb6bea6bf1cc99217f"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "bdd49c852dd9978c6deb8e49599511a8",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 747001,
      "upload_time": "2018-11-14T15:24:09",
      "upload_time_iso_8601": "2018-11-14T15:24:09.630717Z",
      "url": "https://files.pythonhosted.org/packages/5b/09/c787de3ed3099ed2c05d596e3cd0317ade73b44ca2f87b4fe5c1329d9996/logwrap-5.2.2-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebeb46c7be9bf873ee5cffe00cb964d1be82b5f5792465d6acc39f4423705d6",
        "md5": "ebe00fed515e3621b495b79e5020394c",
        "sha256": "6bdfd304d32325f0dcd4eef175a54f71dead34944a5be2772fab779329e9c026"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ebe00fed515e3621b495b79e5020394c",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 823919,
      "upload_time": "2018-11-14T15:24:13",
      "upload_time_iso_8601": "2018-11-14T15:24:13.878848Z",
      "url": "https://files.pythonhosted.org/packages/9e/be/b46c7be9bf873ee5cffe00cb964d1be82b5f5792465d6acc39f4423705d6/logwrap-5.2.2-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e466d96ed43eac186cd81e6e2188284b3e1f0550f9d4aaa3e2fc48c0193a5b65",
        "md5": "898b80f4f5356f1e563f3b246028b724",
        "sha256": "f66082a00a351889966fd91e1a28a154bac233e430b506190f1fafc085ce9b35"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "898b80f4f5356f1e563f3b246028b724",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.0",
      "size": 21120,
      "upload_time": "2018-11-14T15:24:15",
      "upload_time_iso_8601": "2018-11-14T15:24:15.947800Z",
      "url": "https://files.pythonhosted.org/packages/e4/66/d96ed43eac186cd81e6e2188284b3e1f0550f9d4aaa3e2fc48c0193a5b65/logwrap-5.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab72e65a9690124532078b915be16ed41ce7ac0ca1b0ffe69f7edce37effd0f2",
        "md5": "36b0791491e5475514acb756ecbd33cd",
        "sha256": "164cf7a807a8cf6263ca2cd61db829bd2bf58e6de523f43d3ecde190d53c42b5"
      },
      "downloads": -1,
      "filename": "logwrap-5.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "36b0791491e5475514acb756ecbd33cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 48409,
      "upload_time": "2018-11-14T15:24:17",
      "upload_time_iso_8601": "2018-11-14T15:24:17.604607Z",
      "url": "https://files.pythonhosted.org/packages/ab/72/e65a9690124532078b915be16ed41ce7ac0ca1b0ffe69f7edce37effd0f2/logwrap-5.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}