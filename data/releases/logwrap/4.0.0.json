{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 2.7\n    Python 3.4\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy\n    PyPy3 3.5+\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\nCD system\n=========\n`Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Dennis Dmitriev <dis-xcom@gmail.com>, Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/4.0.0/",
    "requires_dist": [
      "six (>=1.9)",
      "typing (>=3.6); python_version < \"3.8\"",
      "funcsigs (>=1.0); python_version == \"2.7\"",
      "enum34 (>=1.1); python_version == \"2.7\""
    ],
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eace587bb966caa24ff8331b23e0f7460adbb24237aa8de7742888708e63257a",
        "md5": "25f51b5d09b7c8fb26084e1799c3e4e8",
        "sha256": "8ce40b88c7bfa31b6af4d9c6722f4354d29e9f6f2fde63d8fe028a5262eb7321"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp34-cp34m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "25f51b5d09b7c8fb26084e1799c3e4e8",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 709334,
      "upload_time": "2018-07-05T10:54:31",
      "upload_time_iso_8601": "2018-07-05T10:54:31.526948Z",
      "url": "https://files.pythonhosted.org/packages/ea/ce/587bb966caa24ff8331b23e0f7460adbb24237aa8de7742888708e63257a/logwrap-4.0.0-cp34-cp34m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ceedb23ebb55ca37f339f60dda97c358f8187735ff4d64465e545d32d01a1a1e",
        "md5": "f1e073f3f67aa4c61e85f1c6b539dc84",
        "sha256": "a903372784a115599bf3c6dbd3ca2f53b9d85fab95109d93863021385ad482ca"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp34-cp34m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f1e073f3f67aa4c61e85f1c6b539dc84",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 753362,
      "upload_time": "2018-07-05T10:54:33",
      "upload_time_iso_8601": "2018-07-05T10:54:33.255373Z",
      "url": "https://files.pythonhosted.org/packages/ce/ed/b23ebb55ca37f339f60dda97c358f8187735ff4d64465e545d32d01a1a1e/logwrap-4.0.0-cp34-cp34m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9704589b632e77c7ed898f22a64917b69f0f0bcf4392e73f6a4067fbb421a728",
        "md5": "0b8c331a905667b76e0d2c67a5a70fa8",
        "sha256": "d61546b8b65f1f0233f4ed57c1d6d3a7e47bd04844f33e62a8de557f6b6f418f"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "0b8c331a905667b76e0d2c67a5a70fa8",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 695242,
      "upload_time": "2018-07-05T10:54:34",
      "upload_time_iso_8601": "2018-07-05T10:54:34.951494Z",
      "url": "https://files.pythonhosted.org/packages/97/04/589b632e77c7ed898f22a64917b69f0f0bcf4392e73f6a4067fbb421a728/logwrap-4.0.0-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6a2728dd81b3cf2fa61c2438f7b237abb5cefee4bb3a11cfdb94d280fb947f5",
        "md5": "5f4b60d2cac9668cd7baa07e3bfba0cd",
        "sha256": "cbfeaa4d12e1dc2826ce8068d7a11fa43fd21af2e5529edf5927826fb9147437"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "5f4b60d2cac9668cd7baa07e3bfba0cd",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 739964,
      "upload_time": "2018-07-05T10:54:36",
      "upload_time_iso_8601": "2018-07-05T10:54:36.842068Z",
      "url": "https://files.pythonhosted.org/packages/c6/a2/728dd81b3cf2fa61c2438f7b237abb5cefee4bb3a11cfdb94d280fb947f5/logwrap-4.0.0-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28042c3624dac13c0ae96cce8d2632741c46b1076e04f11cea5fb4091439319a",
        "md5": "12ad820bb0d90fa34763fdd8b9499ad5",
        "sha256": "e843e5785033f3311f075d0c663be323b4183acbd3cf00350dd237ab15dfda32"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "12ad820bb0d90fa34763fdd8b9499ad5",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 716580,
      "upload_time": "2018-07-05T10:54:38",
      "upload_time_iso_8601": "2018-07-05T10:54:38.665402Z",
      "url": "https://files.pythonhosted.org/packages/28/04/2c3624dac13c0ae96cce8d2632741c46b1076e04f11cea5fb4091439319a/logwrap-4.0.0-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "999ff343ad329e4fd53ee6831606c53681ac8be64469308e956cee4559497459",
        "md5": "14082333390a6b04b73415af8c8d8b93",
        "sha256": "377938aeb91e6cd14848c63f01ec7ba69160481273f6dcd1e83f091e95a3e526"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "14082333390a6b04b73415af8c8d8b93",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 757110,
      "upload_time": "2018-07-05T10:54:40",
      "upload_time_iso_8601": "2018-07-05T10:54:40.431673Z",
      "url": "https://files.pythonhosted.org/packages/99/9f/f343ad329e4fd53ee6831606c53681ac8be64469308e956cee4559497459/logwrap-4.0.0-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83d96009dfd8c3048cfcd7d27158db27f5cd2ea47d5f7ef5aa846fc825125453",
        "md5": "3cbfd50aaf7efa578bda34ba8fcc4a4f",
        "sha256": "9852b50d902d694b15a05928410da612cae1f5157a0dc7611175450bec06ba47"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "3cbfd50aaf7efa578bda34ba8fcc4a4f",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 713064,
      "upload_time": "2018-07-05T10:54:42",
      "upload_time_iso_8601": "2018-07-05T10:54:42.333303Z",
      "url": "https://files.pythonhosted.org/packages/83/d9/6009dfd8c3048cfcd7d27158db27f5cd2ea47d5f7ef5aa846fc825125453/logwrap-4.0.0-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b498a20eb34580b0cf3ae60afae072dd4a51791f47d1fdd6f8ed80e457ed2802",
        "md5": "3db9c1da0f1aa328061876ea8c7201c8",
        "sha256": "7430153665820249b3913575a5fa9df4a9d94e45022003a89ab13e2236de61b0"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3db9c1da0f1aa328061876ea8c7201c8",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 757321,
      "upload_time": "2018-07-05T10:54:43",
      "upload_time_iso_8601": "2018-07-05T10:54:43.835393Z",
      "url": "https://files.pythonhosted.org/packages/b4/98/a20eb34580b0cf3ae60afae072dd4a51791f47d1fdd6f8ed80e457ed2802/logwrap-4.0.0-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67aa57c55719bb4b443f09c7ab2269fca595d1f41cba958d73550bf4a8747dff",
        "md5": "15c0cc8af9f4364aaf5267249bf91a00",
        "sha256": "5265a8be8aaa1540ba808c941bddcd1e1252f929c5c15f21a4faa29b1f7bd3ce"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "15c0cc8af9f4364aaf5267249bf91a00",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 24478,
      "upload_time": "2018-07-05T10:54:45",
      "upload_time_iso_8601": "2018-07-05T10:54:45.456736Z",
      "url": "https://files.pythonhosted.org/packages/67/aa/57c55719bb4b443f09c7ab2269fca595d1f41cba958d73550bf4a8747dff/logwrap-4.0.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c37829a6299243f864980513852443aeabd0d1f50decdf969789670083e66983",
        "md5": "1e4e6cdc9abf05a9684d7d0b30282ff0",
        "sha256": "ebe288ec56853ee9c90a98472898c412bbbc1194c2dcd7413596309eb2387e5d"
      },
      "downloads": -1,
      "filename": "logwrap-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1e4e6cdc9abf05a9684d7d0b30282ff0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 27984,
      "upload_time": "2018-07-05T10:54:46",
      "upload_time_iso_8601": "2018-07-05T10:54:46.592245Z",
      "url": "https://files.pythonhosted.org/packages/c3/78/29a6299243f864980513852443aeabd0d1f50decdf969789670083e66983/logwrap-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}