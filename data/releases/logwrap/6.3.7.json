{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.com/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.com/python-useful-helpers/logwrap\n.. image:: https://dev.azure.com/python-useful-helpers/logwrap/_apis/build/status/python-useful-helpers.logwrap?branchName=master\n    :alt: Azure DevOps builds\n    :target: https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.6\n    Python 3.7\n    Python 3.8\n\n.. note:: 2.7 is supported in versions < 5.0.0, python 3.5 in versions < 6 due to syntax changes.\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\n* `LogOnAccess` - property with logging on successful get/set/delete or failure.\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example (python 3.8):\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg0: str,\n           /,\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg0, arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg0', 'arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_ONLY:\n        'arg0'=u'''arg0''',  # type: <class 'str'>\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg0''',\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nLogOnAccess\n-----------\n\nThis special case of property is useful in cases, where a lot of properties should be logged by similar way without writing a lot of code.\n\nBasic API is conform with `property`, but in addition it is possible to customize logger, log levels and log conditions.\n\nUsage examples:\n\n1. Simple usage. All by default.\n   logger is re-used:\n\n    * from instance if available with names `logger` or `log`,\n    * from instance module if available with names `LOGGER`, `log`,\n    * else used internal `logwrap.log_on_access` logger.\n\n  .. code-block:: python\n\n    import logging\n\n    class Target(object):\n\n        def init(self, val='ok')\n            self.val = val\n            self.logger = logging.get_logger(self.__class__.__name__)  # Single for class, follow subclassing\n\n        def __repr__(self):\n            return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n        @logwrap.LogOnAccess\n        def ok(self):\n            return self.val\n\n        @ok.setter\n        def ok(self, val):\n            self.val = val\n\n        @ok.deleter\n        def ok(self):\n            self.val = \"\"\n\n2. Use with global logger for class:\n\n  .. code-block:: python\n\n    class Target(object):\n\n      def init(self, val='ok')\n          self.val = val\n\n      def __repr__(self):\n          return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n      @logwrap.LogOnAccess\n      def ok(self):\n          return self.val\n\n      @ok.setter\n      def ok(self, val):\n          self.val = val\n\n      @ok.deleter\n      def ok(self):\n          self.val = \"\"\n\n      ok.logger = 'test_logger'\n      ok.log_level = logging.INFO\n      ok.exc_level = logging.ERROR\n      ok.log_object_repr = True  # As by default\n      ok.log_before = True  # As by default\n      ok.log_success = True  # As by default\n      ok.log_failure = True  # As by default\n      ok.log_traceback = True  # As by default\n      ok.override_name = None  # As by default: use original name\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\n3. `Azure CI: <https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1>`_ is used for functional tests on Windows.\n\nCD systems\n==========\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for linux and SDIST package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/6.3.7/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "6.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a07e280f6ef40504f8a10b21cd81b99d9ba157f563f9e7a0ce05b64f99844f9",
        "md5": "5bfbf95dc03c6e51baa51ba1ad4fd03f",
        "sha256": "dcf54e5b6a463e8602b1e76e71b561ddea69971c225cd3e6ba67927cda6dc50f"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "5bfbf95dc03c6e51baa51ba1ad4fd03f",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1036888,
      "upload_time": "2019-10-29T16:18:15",
      "upload_time_iso_8601": "2019-10-29T16:18:15.262190Z",
      "url": "https://files.pythonhosted.org/packages/6a/07/e280f6ef40504f8a10b21cd81b99d9ba157f563f9e7a0ce05b64f99844f9/logwrap-6.3.7-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcdb700524b93bb73b2c38fdb5779dda15df14c3df61c7672954db39745fdee6",
        "md5": "82aefdb38571524364c8ad0b18fe23dc",
        "sha256": "69a77c1b7b471470d29fe34d3b056de63533c7909ba8dc16b6681a3f16febfa3"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "82aefdb38571524364c8ad0b18fe23dc",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1136249,
      "upload_time": "2019-10-29T16:18:17",
      "upload_time_iso_8601": "2019-10-29T16:18:17.940752Z",
      "url": "https://files.pythonhosted.org/packages/fc/db/700524b93bb73b2c38fdb5779dda15df14c3df61c7672954db39745fdee6/logwrap-6.3.7-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adccd1ec59228bf311d79a78e1d63bac066c4af147e1c59ac7c2ec266ce7505b",
        "md5": "7dade143aadabd5303d9c79f7fea69ea",
        "sha256": "ab2db1e81851ebc3ea21d5c6ce4badefa20e122d8dbe47296ec557437609daa7"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp36-cp36m-win32.whl",
      "has_sig": false,
      "md5_digest": "7dade143aadabd5303d9c79f7fea69ea",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 161373,
      "upload_time": "2019-10-29T19:09:54",
      "upload_time_iso_8601": "2019-10-29T19:09:54.941107Z",
      "url": "https://files.pythonhosted.org/packages/ad/cc/d1ec59228bf311d79a78e1d63bac066c4af147e1c59ac7c2ec266ce7505b/logwrap-6.3.7-cp36-cp36m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23aede9e9676748e772f5f78a75f7b9a12d6b8a27d307433d94959ccc75085b7",
        "md5": "0d10bf05a82d5b2b743647603d8bfa9d",
        "sha256": "7604b4cdda368eac971f49b73921f10e9560359f0d504431c5af26a9706778f0"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "0d10bf05a82d5b2b743647603d8bfa9d",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 185360,
      "upload_time": "2019-10-29T19:09:44",
      "upload_time_iso_8601": "2019-10-29T19:09:44.737478Z",
      "url": "https://files.pythonhosted.org/packages/23/ae/de9e9676748e772f5f78a75f7b9a12d6b8a27d307433d94959ccc75085b7/logwrap-6.3.7-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75e8527024b9a1bae6a6f4d5258795f05ff48c5e43ad50a1ab90fbad111bdfd9",
        "md5": "91d7e03d8189f0fd06a3cf3e382fbdf9",
        "sha256": "2f7b61e4067799be0a13804736219f3149f583f5e85019efe76c589ffd735f68"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "91d7e03d8189f0fd06a3cf3e382fbdf9",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1028313,
      "upload_time": "2019-10-29T16:18:20",
      "upload_time_iso_8601": "2019-10-29T16:18:20.695170Z",
      "url": "https://files.pythonhosted.org/packages/75/e8/527024b9a1bae6a6f4d5258795f05ff48c5e43ad50a1ab90fbad111bdfd9/logwrap-6.3.7-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba6022f9e333ee70edd9ea92869c550d19e23418652719a259cdaff13ad2393b",
        "md5": "d2ea3a17a55a9c10ccf02352a8f63e28",
        "sha256": "d7c8f39cfc147c973d7396fdfa96c31283a3aa9cef4afa7eba79c08df8286403"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d2ea3a17a55a9c10ccf02352a8f63e28",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1126437,
      "upload_time": "2019-10-29T16:18:23",
      "upload_time_iso_8601": "2019-10-29T16:18:23.358970Z",
      "url": "https://files.pythonhosted.org/packages/ba/60/22f9e333ee70edd9ea92869c550d19e23418652719a259cdaff13ad2393b/logwrap-6.3.7-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f687f5c640a5941d511b5e446816b29a911104beb3efb25a4449e003954f741",
        "md5": "93ac08bbb6adab64ab2c18576ac2eb70",
        "sha256": "5d8171851256fb7c667e54880523bf65bf844f949f13178844912813b1bce88d"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp37-cp37m-win32.whl",
      "has_sig": false,
      "md5_digest": "93ac08bbb6adab64ab2c18576ac2eb70",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 161341,
      "upload_time": "2019-10-29T19:09:53",
      "upload_time_iso_8601": "2019-10-29T19:09:53.592971Z",
      "url": "https://files.pythonhosted.org/packages/5f/68/7f5c640a5941d511b5e446816b29a911104beb3efb25a4449e003954f741/logwrap-6.3.7-cp37-cp37m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88512e448c4febdcc43738036e6a35e0550229cb852ba826e62cf36f90f41690",
        "md5": "5d6000b6008257d4a11969c4948da4de",
        "sha256": "64f9be07a16dfb7aba97b053cb74dc746c00d561e7b56ee16aaf2c88f905f97b"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "5d6000b6008257d4a11969c4948da4de",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 185639,
      "upload_time": "2019-10-29T19:11:33",
      "upload_time_iso_8601": "2019-10-29T19:11:33.445355Z",
      "url": "https://files.pythonhosted.org/packages/88/51/2e448c4febdcc43738036e6a35e0550229cb852ba826e62cf36f90f41690/logwrap-6.3.7-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "002b077b251baf305eb827817c3b9fddeaaaa13d08e5379ee74a4a624a9cabc1",
        "md5": "bb0f45dd152f31409d9cac54c22e39a7",
        "sha256": "bb50f36739e6dc011d281c4182df58a9ee6f30dbdb2b874dda08f872688bd977"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp38-cp38-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "bb0f45dd152f31409d9cac54c22e39a7",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1146691,
      "upload_time": "2019-10-29T16:18:26",
      "upload_time_iso_8601": "2019-10-29T16:18:26.210962Z",
      "url": "https://files.pythonhosted.org/packages/00/2b/077b251baf305eb827817c3b9fddeaaaa13d08e5379ee74a4a624a9cabc1/logwrap-6.3.7-cp38-cp38-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c5e42f7c53500a175701d377e8e57213d54c38c9c8a4b9365c4d4b1051ce771",
        "md5": "4130279d0521e91ddca97ccf97649727",
        "sha256": "60dfa6822f7fe29ebaed46c1e9ee19852f830e66b9500b4ed9042237abb935a3"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4130279d0521e91ddca97ccf97649727",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1255526,
      "upload_time": "2019-10-29T16:18:28",
      "upload_time_iso_8601": "2019-10-29T16:18:28.806305Z",
      "url": "https://files.pythonhosted.org/packages/0c/5e/42f7c53500a175701d377e8e57213d54c38c9c8a4b9365c4d4b1051ce771/logwrap-6.3.7-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f18dc82e7251763f94589e58d09a8099d7f183c4c010785e4e36fc915261f4ef",
        "md5": "978505eda9c9502bfeb54b7433ce6225",
        "sha256": "038f70d94a65676394657b412c7083fd544f4ff8dbd3d2e837afa1d7e9d884b0"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "978505eda9c9502bfeb54b7433ce6225",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 25288,
      "upload_time": "2019-10-29T16:18:31",
      "upload_time_iso_8601": "2019-10-29T16:18:31.313477Z",
      "url": "https://files.pythonhosted.org/packages/f1/8d/c82e7251763f94589e58d09a8099d7f183c4c010785e4e36fc915261f4ef/logwrap-6.3.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8929997b4055aa9005b2538f017f263bcbc9234af3d0dc50b75eccad43e3e31a",
        "md5": "2b25dd26b6952dc9ba53e884e9588e47",
        "sha256": "88e2609212eb5a652f5780f0accf237041b05eed21592157b3a2b7993b6197f8"
      },
      "downloads": -1,
      "filename": "logwrap-6.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2b25dd26b6952dc9ba53e884e9588e47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 41904,
      "upload_time": "2019-10-29T16:18:33",
      "upload_time_iso_8601": "2019-10-29T16:18:33.506724Z",
      "url": "https://files.pythonhosted.org/packages/89/29/997b4055aa9005b2538f017f263bcbc9234af3d0dc50b75eccad43e3e31a/logwrap-6.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}