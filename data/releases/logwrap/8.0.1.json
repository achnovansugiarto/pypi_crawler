{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.com/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.com/python-useful-helpers/logwrap\n.. image:: https://dev.azure.com/python-useful-helpers/logwrap/_apis/build/status/python-useful-helpers.logwrap?branchName=master\n    :alt: Azure DevOps builds\n    :target: https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.6\n    Python 3.7\n    Python 3.8\n\n.. note:: 2.7 is supported in versions < 5.0.0, python 3.5 in versions < 6 due to syntax changes.\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\n* `LogOnAccess` - property with logging on successful get/set/delete or failure.\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=None,  # if not set: try to find LOGGER, LOG, logger or log object in target module and use it if it logger instance. Fallback: logger named logwrap\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip details in log (no traceback, no exception details - just class name)\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example (python 3.8):\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg0: str,\n           /,\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg0, arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg0', 'arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_ONLY:\n        arg0='arg0',  # type: str\n        # POSITIONAL_OR_KEYWORD:\n        arg1='arg1',  # type: str\n        arg2='arg2',  # type: str\n        # VAR_POSITIONAL:\n        args=(),\n        # KEYWORD_ONLY:\n        kwarg1='kwarg1',  # type: str\n        kwarg2='kwarg2',  # type: str\n        # VAR_KEYWORD:\n        kwargs={\n            'kwarg3': 'kwarg3',\n        },\n    )\n    Done: 'example_function1' with result:\n\n     (\n        'arg0',\n        'arg1',\n        'arg2',\n        (),\n        'kwarg1',\n        'kwarg2',\n        {\n            'kwarg3': 'kwarg3',\n        },\n     )\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nLogOnAccess\n-----------\n\nThis special case of property is useful in cases, where a lot of properties should be logged by similar way without writing a lot of code.\n\nBasic API is conform with `property`, but in addition it is possible to customize logger, log levels and log conditions.\n\nUsage examples:\n\n1. Simple usage. All by default.\n   logger is re-used:\n\n    * from instance if available with names `logger` or `log`,\n    * from instance module if available with names `LOGGER`, `log`,\n    * else used internal `logwrap.log_on_access` logger.\n\n  .. code-block:: python\n\n    import logging\n\n    class Target(object):\n\n        def init(self, val='ok')\n            self.val = val\n            self.logger = logging.get_logger(self.__class__.__name__)  # Single for class, follow subclassing\n\n        def __repr__(self):\n            return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n        @logwrap.LogOnAccess\n        def ok(self):\n            return self.val\n\n        @ok.setter\n        def ok(self, val):\n            self.val = val\n\n        @ok.deleter\n        def ok(self):\n            self.val = \"\"\n\n2. Use with global logger for class:\n\n  .. code-block:: python\n\n    class Target(object):\n\n      def init(self, val='ok')\n          self.val = val\n\n      def __repr__(self):\n          return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n      @logwrap.LogOnAccess\n      def ok(self):\n          return self.val\n\n      @ok.setter\n      def ok(self, val):\n          self.val = val\n\n      @ok.deleter\n      def ok(self):\n          self.val = \"\"\n\n      ok.logger = 'test_logger'\n      ok.log_level = logging.INFO\n      ok.exc_level = logging.ERROR\n      ok.log_object_repr = True  # As by default\n      ok.log_before = True  # As by default\n      ok.log_success = True  # As by default\n      ok.log_failure = True  # As by default\n      ok.log_traceback = True  # As by default\n      ok.override_name = None  # As by default: use original name\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\n3. `Azure CI: <https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1>`_ is used for functional tests on Windows.\n\nCD systems\n==========\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for linux and SDIST package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/8.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "8.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f37927fb03d89abae5e33c7b7f4b837c24a130f1ed3bc36a59f8d3e150aa26a8",
        "md5": "593a79aefd104e9508acf29a505f107d",
        "sha256": "fa8a8f0fa8f2574994aa0be355b5b1f3374b28a97c45b55e1f67dd7b0fdaa368"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "593a79aefd104e9508acf29a505f107d",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1018866,
      "upload_time": "2020-02-04T09:05:06",
      "upload_time_iso_8601": "2020-02-04T09:05:06.054312Z",
      "url": "https://files.pythonhosted.org/packages/f3/79/27fb03d89abae5e33c7b7f4b837c24a130f1ed3bc36a59f8d3e150aa26a8/logwrap-8.0.1-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb841d36f5ccbe6de6764dd70f920bf07dcbf8081b16249bfdde6cc692b7fb93",
        "md5": "b435d4325a0cceff37a1a010ce95f243",
        "sha256": "2008c1447d2eb4904bc56ebfdafa9dd13dd4767ef5f9fa48e3198ddddcc8b88d"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b435d4325a0cceff37a1a010ce95f243",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1117678,
      "upload_time": "2020-02-04T09:05:09",
      "upload_time_iso_8601": "2020-02-04T09:05:09.198970Z",
      "url": "https://files.pythonhosted.org/packages/fb/84/1d36f5ccbe6de6764dd70f920bf07dcbf8081b16249bfdde6cc692b7fb93/logwrap-8.0.1-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22dd4a47305954cb4169db9e690278d02939c471de86e814d6f1ec1768e59c2a",
        "md5": "9415b564e2602a094ddcc11e02859295",
        "sha256": "ad2600c3c78b8095e7420d4d35ac6f2a630f425d00d4e667325b49b3c330ab88"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-manylinux2010_i686.whl",
      "has_sig": true,
      "md5_digest": "9415b564e2602a094ddcc11e02859295",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 926524,
      "upload_time": "2020-02-04T10:24:35",
      "upload_time_iso_8601": "2020-02-04T10:24:35.595512Z",
      "url": "https://files.pythonhosted.org/packages/22/dd/4a47305954cb4169db9e690278d02939c471de86e814d6f1ec1768e59c2a/logwrap-8.0.1-cp36-cp36m-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d07a5e09d11b830ed63e85f2dc400c0d05cceeeb1d115d5d0abf2519dcb79083",
        "md5": "c5ebf9d1bc522c26ba64fd482ce4dc71",
        "sha256": "9660c0c90886db8ebd73781a6a5f4a852c882603de53a128afd96c8c88424bd6"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-manylinux2010_x86_64.whl",
      "has_sig": true,
      "md5_digest": "c5ebf9d1bc522c26ba64fd482ce4dc71",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1225845,
      "upload_time": "2020-02-04T10:24:41",
      "upload_time_iso_8601": "2020-02-04T10:24:41.846548Z",
      "url": "https://files.pythonhosted.org/packages/d0/7a/5e09d11b830ed63e85f2dc400c0d05cceeeb1d115d5d0abf2519dcb79083/logwrap-8.0.1-cp36-cp36m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6011984db04002b0445601a514a7d10a280fa8afcb2982809efe2b81b59d7d11",
        "md5": "364754d89ea2324df1cb916a71018c1a",
        "sha256": "cc11a2067f922b074e34f93d644a5bceea8a03c7541fc6b0e2ed35d21e7cb1aa"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-win32.whl",
      "has_sig": false,
      "md5_digest": "364754d89ea2324df1cb916a71018c1a",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 158678,
      "upload_time": "2020-02-04T10:31:51",
      "upload_time_iso_8601": "2020-02-04T10:31:51.671401Z",
      "url": "https://files.pythonhosted.org/packages/60/11/984db04002b0445601a514a7d10a280fa8afcb2982809efe2b81b59d7d11/logwrap-8.0.1-cp36-cp36m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98b4d3b5c285eb6d91b9fad3f25c5bf508d5b88b5b50912887bdaf0f9e265822",
        "md5": "cf79064bb1ca2b0dc0193e35582dadc2",
        "sha256": "dd4773327b0ba5b4556c4007e37d0b88dd477567b88c7714315a30162cd02b17"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "cf79064bb1ca2b0dc0193e35582dadc2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 181956,
      "upload_time": "2020-02-04T10:31:56",
      "upload_time_iso_8601": "2020-02-04T10:31:56.907454Z",
      "url": "https://files.pythonhosted.org/packages/98/b4/d3b5c285eb6d91b9fad3f25c5bf508d5b88b5b50912887bdaf0f9e265822/logwrap-8.0.1-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccaad5b78dfff6a55661f6e5028c86b057b9ab78e301e753f33150fc3600c709",
        "md5": "3e0b2d288bd9631c901a29246c695d90",
        "sha256": "da5a7a59317dda7ecd7d9f0b4e2e7e79302ad1c108149ac34f07102f56474f61"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "3e0b2d288bd9631c901a29246c695d90",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1011430,
      "upload_time": "2020-02-04T09:05:11",
      "upload_time_iso_8601": "2020-02-04T09:05:11.992205Z",
      "url": "https://files.pythonhosted.org/packages/cc/aa/d5b78dfff6a55661f6e5028c86b057b9ab78e301e753f33150fc3600c709/logwrap-8.0.1-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b04c4d5fe595146c2b3fb5180f344b183f2e91c6b5970d5cb0914568afb7ce3",
        "md5": "ea11ed3c04861a6008515542ab93a6eb",
        "sha256": "991c52717804c87f35284c1a7861258fc7674f801d7d9d61b73e351592460394"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ea11ed3c04861a6008515542ab93a6eb",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1111022,
      "upload_time": "2020-02-04T09:05:14",
      "upload_time_iso_8601": "2020-02-04T09:05:14.742594Z",
      "url": "https://files.pythonhosted.org/packages/9b/04/c4d5fe595146c2b3fb5180f344b183f2e91c6b5970d5cb0914568afb7ce3/logwrap-8.0.1-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa9741e1c93c6acf34587f027e80170f8dd993ca274eaca2aeebff7e191619c3",
        "md5": "f261c2cbe4eb5b5a5b327202d8271516",
        "sha256": "63e58cf1889eb8c07dff631c399457b237bd29c88177314651fd419c2b635f8b"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-manylinux2010_i686.whl",
      "has_sig": true,
      "md5_digest": "f261c2cbe4eb5b5a5b327202d8271516",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 926964,
      "upload_time": "2020-02-04T10:24:46",
      "upload_time_iso_8601": "2020-02-04T10:24:46.238399Z",
      "url": "https://files.pythonhosted.org/packages/fa/97/41e1c93c6acf34587f027e80170f8dd993ca274eaca2aeebff7e191619c3/logwrap-8.0.1-cp37-cp37m-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0fef0446c04299963a2f4e1df4892386b80a933bb100c1a54b614f01dbd3860",
        "md5": "746ed7a4294e68a7547ab5d7060b6b8e",
        "sha256": "b246b98c02d906dcfb49e4bbae9096b072b65ecf1c6973ba9cb506a1d20c5913"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-manylinux2010_x86_64.whl",
      "has_sig": true,
      "md5_digest": "746ed7a4294e68a7547ab5d7060b6b8e",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1227628,
      "upload_time": "2020-02-04T10:24:51",
      "upload_time_iso_8601": "2020-02-04T10:24:51.443459Z",
      "url": "https://files.pythonhosted.org/packages/b0/fe/f0446c04299963a2f4e1df4892386b80a933bb100c1a54b614f01dbd3860/logwrap-8.0.1-cp37-cp37m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9708c1fe991020f0d64425c6621aeeb8b87142876d5bf0849dfd8d8b87eb0583",
        "md5": "3b2f58d738831aaac13df35486bfbe8e",
        "sha256": "07790f2f104b3f5bd7298348fb4344391f05db089cab494b023b12a808760c97"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-win32.whl",
      "has_sig": false,
      "md5_digest": "3b2f58d738831aaac13df35486bfbe8e",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 158598,
      "upload_time": "2020-02-04T10:31:49",
      "upload_time_iso_8601": "2020-02-04T10:31:49.178779Z",
      "url": "https://files.pythonhosted.org/packages/97/08/c1fe991020f0d64425c6621aeeb8b87142876d5bf0849dfd8d8b87eb0583/logwrap-8.0.1-cp37-cp37m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee557c5c42841c6cd7d66cd4436128b570f6e195a0daee3ffdcf6310681a0da5",
        "md5": "76118f46f43affadb8a866027a85b18c",
        "sha256": "c027b5c317a372fdab54faad6ccdd3d619c5cb68eb0a83237f095783081dbeb0"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "76118f46f43affadb8a866027a85b18c",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 182020,
      "upload_time": "2020-02-04T10:31:44",
      "upload_time_iso_8601": "2020-02-04T10:31:44.108332Z",
      "url": "https://files.pythonhosted.org/packages/ee/55/7c5c42841c6cd7d66cd4436128b570f6e195a0daee3ffdcf6310681a0da5/logwrap-8.0.1-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28a150f6c955c96a3246075f26e5d363236a79e31cd221691810816a56dbd106",
        "md5": "82a1ea0e864d38b8a2905a8d8b220ac0",
        "sha256": "c6c93735311657b54eacfd82cfcf4a764961ae375801a98d614f4e77d876e239"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "82a1ea0e864d38b8a2905a8d8b220ac0",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1124227,
      "upload_time": "2020-02-04T09:05:17",
      "upload_time_iso_8601": "2020-02-04T09:05:17.500809Z",
      "url": "https://files.pythonhosted.org/packages/28/a1/50f6c955c96a3246075f26e5d363236a79e31cd221691810816a56dbd106/logwrap-8.0.1-cp38-cp38-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "015fd063ceee70dabbf8337f913cf46cbe5fa3f97eea5fc97cfa0bc927706ea5",
        "md5": "1f78783c2028a7b80d0dc8db6da6e3ae",
        "sha256": "316cfc4ae0aa48ad8f94774e281b6fd28d937f8ee988cf80b44d29b1418b6e97"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1f78783c2028a7b80d0dc8db6da6e3ae",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1239537,
      "upload_time": "2020-02-04T09:05:19",
      "upload_time_iso_8601": "2020-02-04T09:05:19.967115Z",
      "url": "https://files.pythonhosted.org/packages/01/5f/d063ceee70dabbf8337f913cf46cbe5fa3f97eea5fc97cfa0bc927706ea5/logwrap-8.0.1-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f73c8c447f229c9d13e68fa8be451458f7b29af23e072542cb0e24301f9a5709",
        "md5": "903be449f7d24830a7ddc680037c3f02",
        "sha256": "f6b6dfbd94164b974fb03ad1ce69d21d13f2e2bc243ecaf81e4222abf3ff0646"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38-manylinux2010_i686.whl",
      "has_sig": true,
      "md5_digest": "903be449f7d24830a7ddc680037c3f02",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1108849,
      "upload_time": "2020-02-04T10:24:56",
      "upload_time_iso_8601": "2020-02-04T10:24:56.820821Z",
      "url": "https://files.pythonhosted.org/packages/f7/3c/8c447f229c9d13e68fa8be451458f7b29af23e072542cb0e24301f9a5709/logwrap-8.0.1-cp38-cp38-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46765ce3b58c0c9b697864d96d04915f28af912835dbd2041b3ea9b13468b75e",
        "md5": "6ff48cb00489c6c22207fd13d03f43ca",
        "sha256": "b649e22c0eb12da4db6ed3bb9a37ce8a87cea12ea9b566ad3367f992dff282b2"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38-manylinux2010_x86_64.whl",
      "has_sig": true,
      "md5_digest": "6ff48cb00489c6c22207fd13d03f43ca",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1500073,
      "upload_time": "2020-02-04T10:25:02",
      "upload_time_iso_8601": "2020-02-04T10:25:02.860647Z",
      "url": "https://files.pythonhosted.org/packages/46/76/5ce3b58c0c9b697864d96d04915f28af912835dbd2041b3ea9b13468b75e/logwrap-8.0.1-cp38-cp38-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7c3b24f599b6ed470bfe78148e341de5f06ed6cfc5267ae7b59b30896f3f9d0",
        "md5": "48a38fbcd344dcc3d450270be2c969a6",
        "sha256": "c17f886bca0a17f99981c293d654f05bb27d2ce2ccf7c5f88334e93033b854ad"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38m-win32.whl",
      "has_sig": false,
      "md5_digest": "48a38fbcd344dcc3d450270be2c969a6",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 164411,
      "upload_time": "2020-02-04T10:31:41",
      "upload_time_iso_8601": "2020-02-04T10:31:41.333271Z",
      "url": "https://files.pythonhosted.org/packages/d7/c3/b24f599b6ed470bfe78148e341de5f06ed6cfc5267ae7b59b30896f3f9d0/logwrap-8.0.1-cp38-cp38m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44b046dfcd90d1b1a0dec6d8d908d46128587c76133287181b66b091f242b57a",
        "md5": "ecbe08ffa3f30e7655043f07aa7f4e2c",
        "sha256": "413ce0ce060462e102e3b9afdfc91816aef55de64775b7569b1cd7c023c71a53"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-cp38-cp38m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "ecbe08ffa3f30e7655043f07aa7f4e2c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 189944,
      "upload_time": "2020-02-04T10:31:43",
      "upload_time_iso_8601": "2020-02-04T10:31:43.496491Z",
      "url": "https://files.pythonhosted.org/packages/44/b0/46dfcd90d1b1a0dec6d8d908d46128587c76133287181b66b091f242b57a/logwrap-8.0.1-cp38-cp38m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c0d04e16cc1a43e892224d9e61a56d5937944116478c94f43dcd446aa1b0e29",
        "md5": "42fa9585b835fcd1ac8bbebcaa0d4a34",
        "sha256": "e14f78b940f2b7f2f54b2553f89ce900313a1e0d44f453667f3d2e653a00291c"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42fa9585b835fcd1ac8bbebcaa0d4a34",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 26215,
      "upload_time": "2020-02-04T09:05:22",
      "upload_time_iso_8601": "2020-02-04T09:05:22.661385Z",
      "url": "https://files.pythonhosted.org/packages/0c/0d/04e16cc1a43e892224d9e61a56d5937944116478c94f43dcd446aa1b0e29/logwrap-8.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27d1138997d7c14c29953ccc27a07b77aca3961f59ff5566964e622306dc0b23",
        "md5": "44b277e0314cb40228caa406bbd73315",
        "sha256": "da1a7dab762a0bdd6f2505517a21232f19a125635e043ed55692799a350148ed"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "44b277e0314cb40228caa406bbd73315",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 42514,
      "upload_time": "2020-02-04T09:05:24",
      "upload_time_iso_8601": "2020-02-04T09:05:24.930840Z",
      "url": "https://files.pythonhosted.org/packages/27/d1/138997d7c14c29953ccc27a07b77aca3961f59ff5566964e622306dc0b23/logwrap-8.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}