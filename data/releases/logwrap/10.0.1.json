{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://app.travis-ci.com/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://app.travis-ci.com/github/python-useful-helpers/logwrap\n.. image:: https://github.com/python-useful-helpers/logwrap/workflows/Python%20package/badge.svg\n    :target: https://github.com/python-useful-helpers/logwrap/actions\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.8\n    Python 3.9\n    Python 3.10\n\n.. note::\n\n    Support python versions:\n\n    * 2.7: < 5.0.0\n    * 3.5: < 6.0.0\n    * 3.7: < 10.0.0\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\n* `LogOnAccess` - property with logging on successful get/set/delete or failure.\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=None,  # if not set: try to find LOGGER, LOG, logger or log object in target module and use it if it logger instance. Fallback: logger named logwrap\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip details in log (no traceback, no exception details - just class name)\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example (python 3.8):\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg0: str,\n           /,\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg0, arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg0', 'arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_ONLY:\n        arg0='arg0',  # type: str\n        # POSITIONAL_OR_KEYWORD:\n        arg1='arg1',  # type: str\n        arg2='arg2',  # type: str\n        # VAR_POSITIONAL:\n        args=(),\n        # KEYWORD_ONLY:\n        kwarg1='kwarg1',  # type: str\n        kwarg2='kwarg2',  # type: str\n        # VAR_KEYWORD:\n        kwargs={\n            'kwarg3': 'kwarg3',\n        },\n    )\n    Done: 'example_function1' with result:\n\n     (\n        'arg0',\n        'arg1',\n        'arg2',\n        (),\n        'kwarg1',\n        'kwarg2',\n        {\n            'kwarg3': 'kwarg3',\n        },\n     )\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nLogOnAccess\n-----------\n\nThis special case of property is useful in cases, where a lot of properties should be logged by similar way without writing a lot of code.\n\nBasic API is conform with `property`, but in addition it is possible to customize logger, log levels and log conditions.\n\nUsage examples:\n\n1. Simple usage. All by default.\n   logger is re-used:\n\n    * from instance if available with names `logger` or `log`,\n    * from instance module if available with names `LOGGER`, `log`,\n    * else used internal `logwrap.log_on_access` logger.\n\n  .. code-block:: python\n\n    import logging\n\n    class Target(object):\n\n        def init(self, val='ok')\n            self.val = val\n            self.logger = logging.get_logger(self.__class__.__name__)  # Single for class, follow subclassing\n\n        def __repr__(self):\n            return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n        @logwrap.LogOnAccess\n        def ok(self):\n            return self.val\n\n        @ok.setter\n        def ok(self, val):\n            self.val = val\n\n        @ok.deleter\n        def ok(self):\n            self.val = \"\"\n\n2. Use with global logger for class:\n\n  .. code-block:: python\n\n    class Target(object):\n\n      def init(self, val='ok')\n          self.val = val\n\n      def __repr__(self):\n          return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n      @logwrap.LogOnAccess\n      def ok(self):\n          return self.val\n\n      @ok.setter\n      def ok(self, val):\n          self.val = val\n\n      @ok.deleter\n      def ok(self):\n          self.val = \"\"\n\n      ok.logger = 'test_logger'\n      ok.log_level = logging.INFO\n      ok.exc_level = logging.ERROR\n      ok.log_object_repr = True  # As by default\n      ok.log_before = True  # As by default\n      ok.log_success = True  # As by default\n      ok.log_failure = True  # As by default\n      ok.log_traceback = True  # As by default\n      ok.override_name = None  # As by default: use original name\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://app.travis-ci.com/github/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\n3. `GitHub: <https://github.com/python-useful-helpers/logwrap/actions>`_ is used for functional tests.\n\nCD systems\n==========\n1. `Travis CI: <https://app.travis-ci.com/github/python-useful-helpers/logwrap>`_ is used for linux and SDIST package delivery on PyPI.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": null,
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/10.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "10.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b166279541980b942ba0f3f6e53143b07402dcca8ba0058dace5747fb053304",
        "md5": "d05716163f45a84d3400cce299a890d5",
        "sha256": "1808f4df889b7c786ef94b315688a2ea9bcb7a07a6cb71f07f831b49b27cbf6b"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "d05716163f45a84d3400cce299a890d5",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8.0",
      "size": 1014018,
      "upload_time": "2022-06-08T15:32:13",
      "upload_time_iso_8601": "2022-06-08T15:32:13.875998Z",
      "url": "https://files.pythonhosted.org/packages/6b/16/6279541980b942ba0f3f6e53143b07402dcca8ba0058dace5747fb053304/logwrap-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "200dfbf56a7b575b33c0960d25c41ed28171e073247ed7a345db72645d4cb3ac",
        "md5": "019084f233482823e96b9eb84554b339",
        "sha256": "3d78afdb8d729d93160ef0e35d6397a2643cced1d2bf0784b2f4607aa7cbcf27"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "019084f233482823e96b9eb84554b339",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8.0",
      "size": 1028834,
      "upload_time": "2022-06-08T15:13:51",
      "upload_time_iso_8601": "2022-06-08T15:13:51.546834Z",
      "url": "https://files.pythonhosted.org/packages/20/0d/fbf56a7b575b33c0960d25c41ed28171e073247ed7a345db72645d4cb3ac/logwrap-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7eb30bef0536338c41d7375f371a9ae3297fae70fe4857cc76abeadc84784090",
        "md5": "ec8ad7f2d52a1554ca93860c31d79214",
        "sha256": "57fee27dda00d606ee7e4f9a69931b67d70f8b53da67300c66b0db94a0129161"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "ec8ad7f2d52a1554ca93860c31d79214",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8.0",
      "size": 982295,
      "upload_time": "2022-06-08T15:13:54",
      "upload_time_iso_8601": "2022-06-08T15:13:54.152114Z",
      "url": "https://files.pythonhosted.org/packages/7e/b3/0bef0536338c41d7375f371a9ae3297fae70fe4857cc76abeadc84784090/logwrap-10.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4ace610fc285210c3c6546ac78686a278cfed42b9ce4e55806fa7f8dcf25930",
        "md5": "03f9a0b0a911267dcc2040afbd5ff22d",
        "sha256": "dcf3658d05bec93f16168f2b72332e4251a4835f8b93ad34b6a0c5899b234f4d"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp310-cp310-win32.whl",
      "has_sig": false,
      "md5_digest": "03f9a0b0a911267dcc2040afbd5ff22d",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8.0",
      "size": 95242,
      "upload_time": "2022-06-08T15:12:43",
      "upload_time_iso_8601": "2022-06-08T15:12:43.445099Z",
      "url": "https://files.pythonhosted.org/packages/e4/ac/e610fc285210c3c6546ac78686a278cfed42b9ce4e55806fa7f8dcf25930/logwrap-10.0.1-cp310-cp310-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a11b9802b4eb983cd2e5e2aaf0c44ceb6073b92338cdc48dfc88f87d2afb33af",
        "md5": "5f8dd8d4aa81da49d66588c37b1978f6",
        "sha256": "f0887e6d89d1bb2cce34d7dda51918f0c64d6498dc3536415bf0fe7b1e407457"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "5f8dd8d4aa81da49d66588c37b1978f6",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8.0",
      "size": 106532,
      "upload_time": "2022-06-08T15:14:17",
      "upload_time_iso_8601": "2022-06-08T15:14:17.539215Z",
      "url": "https://files.pythonhosted.org/packages/a1/1b/9802b4eb983cd2e5e2aaf0c44ceb6073b92338cdc48dfc88f87d2afb33af/logwrap-10.0.1-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc549c89ace90546ab1cda35a6eafa36cf8a224d423c60003cacf5279982e025",
        "md5": "6c62dfeb45cbf22f840289f311187f6a",
        "sha256": "7bec3755ea2df94103c7d8c7c5762931a711445ebd0e924b8f59f53a07f31ea9"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "6c62dfeb45cbf22f840289f311187f6a",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8.0",
      "size": 1040599,
      "upload_time": "2022-06-08T15:32:16",
      "upload_time_iso_8601": "2022-06-08T15:32:16.173905Z",
      "url": "https://files.pythonhosted.org/packages/bc/54/9c89ace90546ab1cda35a6eafa36cf8a224d423c60003cacf5279982e025/logwrap-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f362f951ae39db6d2f8dd5d4f41cc3f1ee2599248acea2dc7a59d20ef12a282a",
        "md5": "76ade3ab72a4b2f7a16f43b9b4332383",
        "sha256": "b78676ce3fe70cb8fe934f9691dfa1eed0874c12be0db922e03d6ffd65530234"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "76ade3ab72a4b2f7a16f43b9b4332383",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8.0",
      "size": 1057707,
      "upload_time": "2022-06-08T15:13:56",
      "upload_time_iso_8601": "2022-06-08T15:13:56.667110Z",
      "url": "https://files.pythonhosted.org/packages/f3/62/f951ae39db6d2f8dd5d4f41cc3f1ee2599248acea2dc7a59d20ef12a282a/logwrap-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da3c34bf05c64c14c0f9f4aaf75fa34d58229fc838732ca6dbd5a3c5eabcafb3",
        "md5": "e016b87dbf9eac45dd5c1036decaf6de",
        "sha256": "1811529e6b5382e3541a122b59be30b03467920ad9c7ea910c76aaedf384005b"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "e016b87dbf9eac45dd5c1036decaf6de",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8.0",
      "size": 1012001,
      "upload_time": "2022-06-08T15:13:59",
      "upload_time_iso_8601": "2022-06-08T15:13:59.305231Z",
      "url": "https://files.pythonhosted.org/packages/da/3c/34bf05c64c14c0f9f4aaf75fa34d58229fc838732ca6dbd5a3c5eabcafb3/logwrap-10.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95707c9567c744eba9d9925beb3efa343f46f52dc684bb38c5ba3d09cbebfadf",
        "md5": "66e71e2696c15bdf0d10e15f88dbf897",
        "sha256": "cbd4b23b42da3ebedc0308cdd185c90368ff74137b16befd2bd60886dad87cfd"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp38-cp38-win32.whl",
      "has_sig": false,
      "md5_digest": "66e71e2696c15bdf0d10e15f88dbf897",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8.0",
      "size": 95587,
      "upload_time": "2022-06-08T15:12:52",
      "upload_time_iso_8601": "2022-06-08T15:12:52.697849Z",
      "url": "https://files.pythonhosted.org/packages/95/70/7c9567c744eba9d9925beb3efa343f46f52dc684bb38c5ba3d09cbebfadf/logwrap-10.0.1-cp38-cp38-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d68750deb67f6535e23b1ae317335236742ffc9a59f018499210125e9143d8f7",
        "md5": "ef3759eb53cc9e61e3ac0799ab2e4bd7",
        "sha256": "15c69234ca7830d960a4773acf2664caa9bd659e9a6092ed8466428526f4e021"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "ef3759eb53cc9e61e3ac0799ab2e4bd7",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8.0",
      "size": 106755,
      "upload_time": "2022-06-08T15:12:16",
      "upload_time_iso_8601": "2022-06-08T15:12:16.518772Z",
      "url": "https://files.pythonhosted.org/packages/d6/87/50deb67f6535e23b1ae317335236742ffc9a59f018499210125e9143d8f7/logwrap-10.0.1-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e81edfdc2ce968f54972d3634e1e8574b216dfc58d5daee612516645e88e87cd",
        "md5": "51f66acb8910623a6f6a7362341f2bb9",
        "sha256": "1af42d819661ea34694ccb7a9f77db21d3ca030ed616f4f98251d64996df0184"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "51f66acb8910623a6f6a7362341f2bb9",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8.0",
      "size": 1027069,
      "upload_time": "2022-06-08T15:32:18",
      "upload_time_iso_8601": "2022-06-08T15:32:18.482293Z",
      "url": "https://files.pythonhosted.org/packages/e8/1e/dfdc2ce968f54972d3634e1e8574b216dfc58d5daee612516645e88e87cd/logwrap-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a6e2adbe30e408c5fd9ef8d09790cb1f96b1373a24d4c139cf885fbcd29fab0",
        "md5": "6e7c8934d4a3ad018efe821c489ebac1",
        "sha256": "205168b7e5ebd5eb5cf8b9121654004d9c3da03be5c10e2993465fe8ece8aa79"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6e7c8934d4a3ad018efe821c489ebac1",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8.0",
      "size": 1040256,
      "upload_time": "2022-06-08T15:14:01",
      "upload_time_iso_8601": "2022-06-08T15:14:01.825813Z",
      "url": "https://files.pythonhosted.org/packages/6a/6e/2adbe30e408c5fd9ef8d09790cb1f96b1373a24d4c139cf885fbcd29fab0/logwrap-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "007978bc7a772db9030073d5992b11a49152887c055c4d1af9dcee2014b37df9",
        "md5": "5365167098a0185d4f8069f439316a1c",
        "sha256": "5d2138e5dcb005f34904495bb2d12d88afa9e19002d0a4f34b4b1ecd5f25802e"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "5365167098a0185d4f8069f439316a1c",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8.0",
      "size": 991808,
      "upload_time": "2022-06-08T15:14:04",
      "upload_time_iso_8601": "2022-06-08T15:14:04.376879Z",
      "url": "https://files.pythonhosted.org/packages/00/79/78bc7a772db9030073d5992b11a49152887c055c4d1af9dcee2014b37df9/logwrap-10.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58ddd3435782f3e193cb82e314babf9a7d88bd5b63caa404d5bb3f4616ffeb24",
        "md5": "0a507f2e587163cba4d7b48cd5fc5ff6",
        "sha256": "73ee91aa6019b8af123e513e666a071b238b3c4939f3857a9024e7bc5e079f9c"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp39-cp39-win32.whl",
      "has_sig": false,
      "md5_digest": "0a507f2e587163cba4d7b48cd5fc5ff6",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8.0",
      "size": 95987,
      "upload_time": "2022-06-08T15:12:06",
      "upload_time_iso_8601": "2022-06-08T15:12:06.995418Z",
      "url": "https://files.pythonhosted.org/packages/58/dd/d3435782f3e193cb82e314babf9a7d88bd5b63caa404d5bb3f4616ffeb24/logwrap-10.0.1-cp39-cp39-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8af4d88e109ee6466f433f0373e44bbe958b4a38c31cb979bb7b6fc293fab780",
        "md5": "e0e9751856f98a65bf7c86320ff0edd7",
        "sha256": "89c213e57b3bfad85c6eea7fdb3959db7b2ab4b6800eb8890237096e529cce8a"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "e0e9751856f98a65bf7c86320ff0edd7",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8.0",
      "size": 106780,
      "upload_time": "2022-06-08T15:14:37",
      "upload_time_iso_8601": "2022-06-08T15:14:37.994430Z",
      "url": "https://files.pythonhosted.org/packages/8a/f4/d88e109ee6466f433f0373e44bbe958b4a38c31cb979bb7b6fc293fab780/logwrap-10.0.1-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68c6ac42f4d08cba740c50db7f859831203f5925ca7fc9665ff9778a10377ff8",
        "md5": "e729346788aee3158bf6eaffe2f355bb",
        "sha256": "45d642d57d98271c11ba29e222373b7a9a14772a28bc786fb3bcb60cb5102131"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e729346788aee3158bf6eaffe2f355bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0",
      "size": 26957,
      "upload_time": "2022-06-08T15:32:20",
      "upload_time_iso_8601": "2022-06-08T15:32:20.855204Z",
      "url": "https://files.pythonhosted.org/packages/68/c6/ac42f4d08cba740c50db7f859831203f5925ca7fc9665ff9778a10377ff8/logwrap-10.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0dc1f5ba513289f9bf4e585dda4264793b87b8d7a595500a9d5c4da49fd70844",
        "md5": "d261f3ab02a6c74b67554f9c06463a97",
        "sha256": "aa39e67017c0b56a41eedd878987f7989f8794bd47297b9449d5b023c97ed386"
      },
      "downloads": -1,
      "filename": "logwrap-10.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d261f3ab02a6c74b67554f9c06463a97",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 46109,
      "upload_time": "2022-06-08T15:12:09",
      "upload_time_iso_8601": "2022-06-08T15:12:09.271656Z",
      "url": "https://files.pythonhosted.org/packages/0d/c1/f5ba513289f9bf4e585dda4264793b87b8d7a595500a9d5c4da49fd70844/logwrap-10.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}