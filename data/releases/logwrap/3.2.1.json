{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\r\n=======\r\n\r\n.. image:: https://travis-ci.org/penguinolog/logwrap.svg?branch=master\r\n    :target: https://travis-ci.org/penguinolog/logwrap\r\n.. image:: https://img.shields.io/appveyor/ci/penguinolog/logwrap.svg\r\n    :target: https://ci.appveyor.com/project/penguinolog/logwrap\r\n.. image:: https://coveralls.io/repos/github/penguinolog/logwrap/badge.svg?branch=master\r\n    :target: https://coveralls.io/github/penguinolog/logwrap?branch=master\r\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\r\n    :target: http://logwrap.readthedocs.io/\r\n    :alt: Documentation Status\r\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\r\n    :target: https://pypi.python.org/pypi/logwrap\r\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\r\n    :target: https://pypi.python.org/pypi/logwrap\r\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\r\n    :target: https://pypi.python.org/pypi/logwrap\r\n.. image:: https://img.shields.io/github/license/penguinolog/logwrap.svg\r\n    :target: https://raw.githubusercontent.com/penguinolog/logwrap/master/LICENSE\r\n\r\n\r\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\r\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\r\n\r\nCons:\r\n\r\n* Log records are not single line.\r\n\r\nPros:\r\n\r\n* Log records are not single 100500 symbols length line.\r\n  (Especially actual for testing/development environments and for Kibana users).\r\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\r\n* Free software: Apache license\r\n* Open Source: https://github.com/penguinolog/logwrap\r\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\r\n* Self-documented code: docstrings with types in comments\r\n* Tested: see bages on top\r\n* Support multiple Python versions:\r\n\r\n::\r\n\r\n    Python 2.7\r\n    Python 3.4\r\n    Python 3.5\r\n    Python 3.6\r\n    PyPy\r\n    PyPy3 3.5+\r\n\r\nThis package includes helpers:\r\n\r\n* `logwrap` - main helper. The same is `LogWrap`.\r\n\r\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\r\n\r\n* `pretty_repr`\r\n\r\n* `pretty_str`\r\n\r\n* `PrettyFormat`\r\n\r\nUsage\r\n=====\r\n\r\nlogwrap\r\n-------\r\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\r\nNot argumented usage simple calls with default values for all positions.\r\nArgumented usage with arguments from signature:\r\n\r\n.. code-block:: python\r\n\r\n    @logwrap.logwrap(\r\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\r\n        log_level=logging.DEBUG,\r\n        exc_level=logging.ERROR,\r\n        max_indent=20,  # forwarded to the pretty_repr\r\n        spec=None,  # use target callable function for spec\r\n        blacklisted_names=None,  # list argument names, which should be dropped from log\r\n        blacklisted_exceptions=None,  # Exceptions to skip in log\r\n        log_call_args=True,  # Log call arguments before call\r\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\r\n        log_result_obj=True,  # Log result object\r\n    )\r\n\r\nUsage examples:\r\n\r\n.. code-block:: python\r\n\r\n    @logwrap.logwrap()\r\n    def foo():\r\n        pass\r\n\r\nis equal to:\r\n\r\n.. code-block:: python\r\n\r\n    @logwrap.logwrap\r\n    def foo():\r\n        pass\r\n\r\nGet decorator for use without parameters:\r\n\r\n.. code-block:: python\r\n\r\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\r\n\r\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\r\n\r\n    @get_logs\r\n    def foo():\r\n        pass\r\n\r\nCall example:\r\n\r\n.. code-block:: python3\r\n\r\n   import logwrap\r\n\r\n   @logwrap.logwrap\r\n   def example_function1(\r\n           arg1: str,\r\n           arg2: str='arg2',\r\n           *args,\r\n           kwarg1: str,\r\n           kwarg2: str='kwarg2',\r\n           **kwargs\r\n   ) -> tuple():\r\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\r\n\r\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\r\n\r\nThis code during execution will produce log records:\r\n\r\n::\r\n\r\n    Calling:\r\n    'example_function1'(\r\n        # POSITIONAL_OR_KEYWORD:\r\n        'arg1'=u'''arg1''',\r\n        'arg2'=u'''arg2''',\r\n        # VAR_POSITIONAL:\r\n        'args'=(),\r\n        # KEYWORD_ONLY:\r\n        'kwarg1'=u'''kwarg1''',\r\n        'kwarg2'=u'''kwarg2''',\r\n        # VAR_KEYWORD:\r\n        'kwargs'=\r\n             dict({\r\n                'kwarg3': u'''kwarg3''',\r\n             }),\r\n    )\r\n    Done: 'example_function1' with result:\r\n\r\n     tuple((\r\n        u'''arg1''',\r\n        u'''arg2''',\r\n        (),\r\n        u'''kwarg1''',\r\n        u'''kwarg2''',\r\n         dict({\r\n            'kwarg3': u'''kwarg3''',\r\n         }),\r\n     ))\r\n\r\nLimitations:\r\n\r\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\r\n\r\nLogWrap\r\n-------\r\nExample construction and read from test:\r\n\r\n.. code-block:: python\r\n\r\n    log_call = logwrap.LogWrap()\r\n    log_call.log_level == logging.DEBUG\r\n    log_call.exc_level == logging.ERROR\r\n    log_call.max_indent == 20\r\n    log_call.blacklisted_names == []\r\n    log_call.blacklisted_exceptions == []\r\n    log_call.log_call_args == True\r\n    log_call.log_call_args_on_exc == True\r\n    log_call.log_result_obj == True\r\n\r\nOn object change, variable types is validated.\r\n\r\n\r\npretty_repr\r\n-----------\r\nThis is specified helper for making human-readable repr on complex objects.\r\nSignature is self-documenting:\r\n\r\n.. code-block:: python\r\n\r\n    def pretty_repr(\r\n        src,  # object for repr\r\n        indent=0,  # start indent\r\n        no_indent_start=False,  # do not indent the first level\r\n        max_indent=20,  # maximum allowed indent level\r\n        indent_step=4,  # step between indents\r\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\r\n    )\r\n\r\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\r\n\r\npretty_str\r\n----------\r\nThis is specified helper for making human-readable str on complex objects.\r\nSignature is self-documenting:\r\n\r\n.. code-block:: python\r\n\r\n    def pretty_str(\r\n        src,  # object for __str__\r\n        indent=0,  # start indent\r\n        no_indent_start=False,  # do not indent the first level\r\n        max_indent=20,  # maximum allowed indent level\r\n        indent_step=4,  # step between indents\r\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\r\n    )\r\n\r\nLimitations:\r\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\r\n\r\n    Iterable types is not declared, only brackets is used.\r\n\r\n    String and bytes looks the same (its __str__, not __repr__).\r\n\r\nPrettyFormat\r\n------------\r\nPrettyFormat is the main formatting implementation class.\r\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\r\nThis class is mostly exposed for typing reasons.\r\nObject signature:\r\n\r\n.. code-block:: python\r\n\r\n    def __init__(\r\n        self,\r\n        max_indent=20,  # maximum allowed indent level\r\n        indent_step=4,  # step between indents\r\n        py2_str=False,  # use bytes for python 2 __repr__ and __str__\r\n    )\r\n\r\nCallable object (`PrettyFormat` instance) signature:\r\n\r\n.. code-block:: python\r\n\r\n    def __call__(\r\n        self,\r\n        src,  # object for repr\r\n        indent=0,  # start indent\r\n        no_indent_start=False  # do not indent the first level\r\n    )\r\n\r\nAdopting your code\r\n------------------\r\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\r\n\r\n.. code-block:: python\r\n\r\n    def __pretty_repr__(\r\n        self,\r\n        parser  # PrettyFormat class instance,\r\n        indent  # start indent,\r\n        no_indent_start  # do not indent the first level\r\n    ):\r\n        return ...\r\n\r\nThis method will be executed instead of __repr__ on your object.\r\n\r\n.. code-block:: python\r\n\r\n    def __pretty_str__(\r\n        self,\r\n        parser  # PrettyFormat class instance,\r\n        indent  # start indent,\r\n        no_indent_start  # do not indent the first level\r\n    ):\r\n        return ...\r\n\r\nThis method will be executed instead of __str__ on your object.\r\n\r\nTesting\r\n=======\r\nThe main test mechanism for the package `logwrap` is using `tox`.\r\nTest environments available:\r\n\r\n::\r\n\r\n    pep8\r\n    py27\r\n    py34\r\n    py35\r\n    py36\r\n    pypy\r\n    pypy3\r\n    pylint\r\n    pep257\r\n    docs\r\n\r\nCI systems\r\n==========\r\nFor code checking several CI systems is used in parallel:\r\n\r\n1. `Travis CI: <https://travis-ci.org/penguinolog/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\r\n\r\n2. `AppVeyor: <https://ci.appveyor.com/project/penguinolog/threaded>`_ is used for checking windows compatibility.\r\n\r\n3. `coveralls: <https://coveralls.io/github/penguinolog/logwrap>`_ is used for coverage display.\r\n\r\nCD system\r\n=========\r\n`Travis CI: <https://travis-ci.org/penguinolog/logwrap>`_ is used for package delivery on PyPI.\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/penguinolog/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Homepage": "https://github.com/penguinolog/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/3.2.1/",
    "requires_dist": [
      "six",
      "typing (>=3.6)",
      "funcsigs (>=1.0); python_version == \"2.7\""
    ],
    "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "3.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "affb5cc79d3cc2d6a0e50c8d54feb88520ee19a70466ad8520b02a9fbae418ea",
        "md5": "d937412396298213008625847f10c079",
        "sha256": "f686244037a76d65927224f95d1953e4ff95a0b15f6699c006f2cdb332de2e35"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp34-cp34m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "d937412396298213008625847f10c079",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 578018,
      "upload_time": "2018-03-19T16:29:09",
      "upload_time_iso_8601": "2018-03-19T16:29:09.447630Z",
      "url": "https://files.pythonhosted.org/packages/af/fb/5cc79d3cc2d6a0e50c8d54feb88520ee19a70466ad8520b02a9fbae418ea/logwrap-3.2.1-cp34-cp34m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09f60d269e8b88d6d69f3e43f5a9f34929b3eb6c0c6dd1013ae860bf55852ec4",
        "md5": "da3f4a9b4941f5246a264bcf96842ddf",
        "sha256": "7954e6fd6178f9d0556dcc76a88d35a22818c3bcfec5f3baf1e9db0b62c781cb"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp34-cp34m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "da3f4a9b4941f5246a264bcf96842ddf",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 608184,
      "upload_time": "2018-03-19T16:29:11",
      "upload_time_iso_8601": "2018-03-19T16:29:11.339762Z",
      "url": "https://files.pythonhosted.org/packages/09/f6/0d269e8b88d6d69f3e43f5a9f34929b3eb6c0c6dd1013ae860bf55852ec4/logwrap-3.2.1-cp34-cp34m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc7b785cb33c85a7a51a42fe517a6c619edc36fbec5a040e67d1e3fbf9571ea3",
        "md5": "82b3c41834dd55e903ae0162f8bcbb40",
        "sha256": "77c9a50d31e56a8d377a10dbcce0c96496e3cd62dced99b3f2bb184a5967bde7"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp34-none-win32.whl",
      "has_sig": false,
      "md5_digest": "82b3c41834dd55e903ae0162f8bcbb40",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 136212,
      "upload_time": "2018-03-19T16:16:25",
      "upload_time_iso_8601": "2018-03-19T16:16:25.811878Z",
      "url": "https://files.pythonhosted.org/packages/bc/7b/785cb33c85a7a51a42fe517a6c619edc36fbec5a040e67d1e3fbf9571ea3/logwrap-3.2.1-cp34-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b8be94ffdf9b6843b705f8179deacc39fffc94a1e576e6555a49beb7860c48f",
        "md5": "e6c88bfbeb9ad3d29d5cac7ec831e5cc",
        "sha256": "965bc05921e762ee07d163f5fc5cdfbadbcaea59fb6f9089259c9e68e8f0ae6d"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp34-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "e6c88bfbeb9ad3d29d5cac7ec831e5cc",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 149133,
      "upload_time": "2018-03-19T16:18:31",
      "upload_time_iso_8601": "2018-03-19T16:18:31.066749Z",
      "url": "https://files.pythonhosted.org/packages/2b/8b/e94ffdf9b6843b705f8179deacc39fffc94a1e576e6555a49beb7860c48f/logwrap-3.2.1-cp34-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56cb16bf2ec49d40c525d38b562a6373c96ef4f9fa430b5bded5db4f9e6af5c0",
        "md5": "9b5c106c7e5e08d3ad92bd980009ee29",
        "sha256": "4f6ac77fe0f08214922ab7f5fa0d93e103ba74ac3dd029f27afe130ae428d0c1"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "9b5c106c7e5e08d3ad92bd980009ee29",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 562408,
      "upload_time": "2018-03-19T16:29:13",
      "upload_time_iso_8601": "2018-03-19T16:29:13.078007Z",
      "url": "https://files.pythonhosted.org/packages/56/cb/16bf2ec49d40c525d38b562a6373c96ef4f9fa430b5bded5db4f9e6af5c0/logwrap-3.2.1-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "709022cd6a42f568ec3a70a71ec973cd9e05129b974406f864e6c54dcad17768",
        "md5": "ca9cd429b026fb9de360d7f99b3d6e09",
        "sha256": "a46ffa63718b1192b0ce6426796d0c6a063009203c842e81003091883c15e825"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ca9cd429b026fb9de360d7f99b3d6e09",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 597595,
      "upload_time": "2018-03-19T16:29:14",
      "upload_time_iso_8601": "2018-03-19T16:29:14.948465Z",
      "url": "https://files.pythonhosted.org/packages/70/90/22cd6a42f568ec3a70a71ec973cd9e05129b974406f864e6c54dcad17768/logwrap-3.2.1-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ddfb9ca3f7d1ce1e92bffb1a94b9eb7e4edbede8a87f185610cdd37c49c707f",
        "md5": "9642dc30a36d5568708f58e4b1e9dcc1",
        "sha256": "b2cc354ef30a88c0ff31545b41f877d1838aef377818c25eaddafe9c7f6b0c83"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp35-none-win32.whl",
      "has_sig": false,
      "md5_digest": "9642dc30a36d5568708f58e4b1e9dcc1",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 134630,
      "upload_time": "2018-03-19T16:19:25",
      "upload_time_iso_8601": "2018-03-19T16:19:25.337948Z",
      "url": "https://files.pythonhosted.org/packages/9d/df/b9ca3f7d1ce1e92bffb1a94b9eb7e4edbede8a87f185610cdd37c49c707f/logwrap-3.2.1-cp35-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4163db97309feaccfa982bd82e570761d45d36caacb1457a977fce224f82db0",
        "md5": "489fc2c64f8df197c0ad4e1737977220",
        "sha256": "524769bf6aff84fab91a72e832dd6d1899d9179c38d81446f3afcf7242582c76"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp35-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "489fc2c64f8df197c0ad4e1737977220",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 154500,
      "upload_time": "2018-03-19T16:20:38",
      "upload_time_iso_8601": "2018-03-19T16:20:38.949445Z",
      "url": "https://files.pythonhosted.org/packages/d4/16/3db97309feaccfa982bd82e570761d45d36caacb1457a977fce224f82db0/logwrap-3.2.1-cp35-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e5d9a5d116dcd31bc5fa5dea9114fc596d5ad04fef15bbe70a68eff8bbc94ab",
        "md5": "5ccaea52a5a835358217d68b83701ab1",
        "sha256": "a29d517a101ca7d83c8265cf770c33033a329dfaddc24404ad2a5427b77974c5"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "5ccaea52a5a835358217d68b83701ab1",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 576178,
      "upload_time": "2018-03-19T16:29:16",
      "upload_time_iso_8601": "2018-03-19T16:29:16.957040Z",
      "url": "https://files.pythonhosted.org/packages/4e/5d/9a5d116dcd31bc5fa5dea9114fc596d5ad04fef15bbe70a68eff8bbc94ab/logwrap-3.2.1-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b531b998825b15b7b93ae0c9f45e904fadcebff3a5e2a0714b9cee7f4572eff3",
        "md5": "89c966055dd1caff521d7902514ce604",
        "sha256": "f9303b9a13fa6b552a3d7612367e061d32996d1383676b74c7e07599d05902d5"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "89c966055dd1caff521d7902514ce604",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 606719,
      "upload_time": "2018-03-19T16:29:18",
      "upload_time_iso_8601": "2018-03-19T16:29:18.712977Z",
      "url": "https://files.pythonhosted.org/packages/b5/31/b998825b15b7b93ae0c9f45e904fadcebff3a5e2a0714b9cee7f4572eff3/logwrap-3.2.1-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17d4db0e5469f2c14046a78021e212ada89e7d8baceeacc0bc9bebc002a8c537",
        "md5": "969dab028e2f4992630365bc25245d89",
        "sha256": "8fd587ddbab4a399b719c6cbae59f9c71f097825cddc5775efe987ffa03d9745"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp36-none-win32.whl",
      "has_sig": false,
      "md5_digest": "969dab028e2f4992630365bc25245d89",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 136345,
      "upload_time": "2018-03-19T16:22:42",
      "upload_time_iso_8601": "2018-03-19T16:22:42.388983Z",
      "url": "https://files.pythonhosted.org/packages/17/d4/db0e5469f2c14046a78021e212ada89e7d8baceeacc0bc9bebc002a8c537/logwrap-3.2.1-cp36-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90c5246f893476948641652854d475e153ea7ba0b0250e1369f8331019b471fb",
        "md5": "9f725efcb81ba51983f1cfb4ef78d067",
        "sha256": "90557edbcc4cbb964f0dabfdf40f50ed6fdc0bd8e5c7a24a6dc93332aad088f4"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-cp36-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "9f725efcb81ba51983f1cfb4ef78d067",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 156419,
      "upload_time": "2018-03-19T16:23:43",
      "upload_time_iso_8601": "2018-03-19T16:23:43.386959Z",
      "url": "https://files.pythonhosted.org/packages/90/c5/246f893476948641652854d475e153ea7ba0b0250e1369f8331019b471fb/logwrap-3.2.1-cp36-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b5a0833e1cd642f7f3951c00888cd987c5aa5f2fcdb0e0b90416e939d8d19fa",
        "md5": "4602398c86899cd3dce8e8d56e564736",
        "sha256": "869a219d90e36896112e3f358cfba489931660d13d157d6abf7576589853523d"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "4602398c86899cd3dce8e8d56e564736",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 21549,
      "upload_time": "2018-03-19T16:14:58",
      "upload_time_iso_8601": "2018-03-19T16:14:58.375987Z",
      "url": "https://files.pythonhosted.org/packages/6b/5a/0833e1cd642f7f3951c00888cd987c5aa5f2fcdb0e0b90416e939d8d19fa/logwrap-3.2.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b317c7d450ce6a1ce82e145852895509fddc9468225d2aa312a772bb9c188a73",
        "md5": "20a9fa9e47210d8c777bebfda0663c2b",
        "sha256": "2a6ba63f5c31a03960b622bf3305a4b65b508b5e0e791008dda1c475370453b4"
      },
      "downloads": -1,
      "filename": "logwrap-3.2.1.zip",
      "has_sig": false,
      "md5_digest": "20a9fa9e47210d8c777bebfda0663c2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.6,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
      "size": 246903,
      "upload_time": "2018-03-19T16:31:09",
      "upload_time_iso_8601": "2018-03-19T16:31:09.264966Z",
      "url": "https://files.pythonhosted.org/packages/b3/17/c7d450ce6a1ce82e145852895509fddc9468225d2aa312a772bb9c188a73/logwrap-3.2.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}