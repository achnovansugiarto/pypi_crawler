{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.com/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.com/python-useful-helpers/logwrap\n.. image:: https://dev.azure.com/python-useful-helpers/logwrap/_apis/build/status/python-useful-helpers.logwrap?branchName=master\n    :alt: Azure DevOps builds\n    :target: https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.6\n    Python 3.7\n    Python 3.8\n\n.. note:: 2.7 is supported in versions < 5.0.0, python 3.5 in versions < 6 due to syntax changes.\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\n* `LogOnAccess` - property with logging on successful get/set/delete or failure.\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=None,  # if not set: try to find LOGGER, LOG, logger or log object in target module and use it if it logger instance. Fallback: logger named logwrap\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip details in log (no traceback, no exception details - just class name)\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example (python 3.8):\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg0: str,\n           /,\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg0, arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg0', 'arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_ONLY:\n        arg0='arg0',  # type: str\n        # POSITIONAL_OR_KEYWORD:\n        arg1='arg1',  # type: str\n        arg2='arg2',  # type: str\n        # VAR_POSITIONAL:\n        args=(),\n        # KEYWORD_ONLY:\n        kwarg1='kwarg1',  # type: str\n        kwarg2='kwarg2',  # type: str\n        # VAR_KEYWORD:\n        kwargs={\n            'kwarg3': 'kwarg3',\n        },\n    )\n    Done: 'example_function1' with result:\n\n     (\n        'arg0',\n        'arg1',\n        'arg2',\n        (),\n        'kwarg1',\n        'kwarg2',\n        {\n            'kwarg3': 'kwarg3',\n        },\n     )\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nLogOnAccess\n-----------\n\nThis special case of property is useful in cases, where a lot of properties should be logged by similar way without writing a lot of code.\n\nBasic API is conform with `property`, but in addition it is possible to customize logger, log levels and log conditions.\n\nUsage examples:\n\n1. Simple usage. All by default.\n   logger is re-used:\n\n    * from instance if available with names `logger` or `log`,\n    * from instance module if available with names `LOGGER`, `log`,\n    * else used internal `logwrap.log_on_access` logger.\n\n  .. code-block:: python\n\n    import logging\n\n    class Target(object):\n\n        def init(self, val='ok')\n            self.val = val\n            self.logger = logging.get_logger(self.__class__.__name__)  # Single for class, follow subclassing\n\n        def __repr__(self):\n            return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n        @logwrap.LogOnAccess\n        def ok(self):\n            return self.val\n\n        @ok.setter\n        def ok(self, val):\n            self.val = val\n\n        @ok.deleter\n        def ok(self):\n            self.val = \"\"\n\n2. Use with global logger for class:\n\n  .. code-block:: python\n\n    class Target(object):\n\n      def init(self, val='ok')\n          self.val = val\n\n      def __repr__(self):\n          return \"{cls}(val={self.val})\".format(cls=self.__class__.__name__, self=self)\n\n      @logwrap.LogOnAccess\n      def ok(self):\n          return self.val\n\n      @ok.setter\n      def ok(self, val):\n          self.val = val\n\n      @ok.deleter\n      def ok(self):\n          self.val = \"\"\n\n      ok.logger = 'test_logger'\n      ok.log_level = logging.INFO\n      ok.exc_level = logging.ERROR\n      ok.log_object_repr = True  # As by default\n      ok.log_before = True  # As by default\n      ok.log_success = True  # As by default\n      ok.log_failure = True  # As by default\n      ok.log_traceback = True  # As by default\n      ok.override_name = None  # As by default: use original name\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\n3. `Azure CI: <https://dev.azure.com/python-useful-helpers/logwrap/_build?definitionId=1>`_ is used for functional tests on Windows.\n\nCD systems\n==========\n1. `Travis CI: <https://travis-ci.com/python-useful-helpers/logwrap>`_ is used for linux and SDIST package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/8.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "8.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ef5ea5a7eb0dc376578e6b09ba03b5f0259dc0c6e9eed2d83dee0d95c04bba4",
        "md5": "8644cc3c7c3ce76bfa4569c2e2eda034",
        "sha256": "5de9c849326588cbcd7c53e7cbc0afae03cbda461b2c38c7eef0cf279874a3a2"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "8644cc3c7c3ce76bfa4569c2e2eda034",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 926532,
      "upload_time": "2020-02-06T11:53:52",
      "upload_time_iso_8601": "2020-02-06T11:53:52.904795Z",
      "url": "https://files.pythonhosted.org/packages/8e/f5/ea5a7eb0dc376578e6b09ba03b5f0259dc0c6e9eed2d83dee0d95c04bba4/logwrap-8.0.3-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "399e772df52a488f47901b192f8213dfb1789bdcc252fc401fea255f2284ad2a",
        "md5": "7d6830da50634ea89ac0ccc5f9913478",
        "sha256": "3c38ae74b4620306c764ab9fa4a36ba4a839de1f01dde39029a36f3b773af761"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7d6830da50634ea89ac0ccc5f9913478",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1225850,
      "upload_time": "2020-02-06T11:53:55",
      "upload_time_iso_8601": "2020-02-06T11:53:55.410061Z",
      "url": "https://files.pythonhosted.org/packages/39/9e/772df52a488f47901b192f8213dfb1789bdcc252fc401fea255f2284ad2a/logwrap-8.0.3-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cefe0c04a746ebaf51869118ae3721977144bdc21b28af1e935493a29d260a88",
        "md5": "a3a103dc729884b96f00ba27e278d9b0",
        "sha256": "43ffb003f7b117cb275508f5ad5210e87a03505e919a46c2fdbb7244524659f2"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux2010_i686.whl",
      "has_sig": false,
      "md5_digest": "a3a103dc729884b96f00ba27e278d9b0",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 926535,
      "upload_time": "2020-02-06T11:53:57",
      "upload_time_iso_8601": "2020-02-06T11:53:57.740917Z",
      "url": "https://files.pythonhosted.org/packages/ce/fe/0c04a746ebaf51869118ae3721977144bdc21b28af1e935493a29d260a88/logwrap-8.0.3-cp36-cp36m-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7628c779296970961950ba67eed73026ce1498f20054d725d8911870ff6e49f",
        "md5": "2c699cf437df5de991e6e8b8d17f117e",
        "sha256": "bf4aa2049446e402275b53b38645e3200066adb739ad5094b63ee927e2973edc"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2c699cf437df5de991e6e8b8d17f117e",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1225853,
      "upload_time": "2020-02-06T11:53:59",
      "upload_time_iso_8601": "2020-02-06T11:53:59.951413Z",
      "url": "https://files.pythonhosted.org/packages/b7/62/8c779296970961950ba67eed73026ce1498f20054d725d8911870ff6e49f/logwrap-8.0.3-cp36-cp36m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45cabc997a88154ada038ac0f4914fb90fe41d2a5d4c2756804c40f5f8e8e61f",
        "md5": "8b7e2214655383f82e094b8b9db5826f",
        "sha256": "78edd29b37bf835505c208ab25892f2497768f92e34751ac66a7cefe7887f693"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "8b7e2214655383f82e094b8b9db5826f",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1111124,
      "upload_time": "2020-02-06T11:41:13",
      "upload_time_iso_8601": "2020-02-06T11:41:13.644006Z",
      "url": "https://files.pythonhosted.org/packages/45/ca/bc997a88154ada038ac0f4914fb90fe41d2a5d4c2756804c40f5f8e8e61f/logwrap-8.0.3-cp36-cp36m-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf47b8aeb2b53022b213165285b74f75364767aac340257096b5076f1fe113c0",
        "md5": "5864652cab829d28fb1f5227ee78855d",
        "sha256": "642426d6e5b204f29e1acaab797e631a0fc014516934aff8d5ce77962d142721"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "5864652cab829d28fb1f5227ee78855d",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 995591,
      "upload_time": "2020-02-06T11:59:13",
      "upload_time_iso_8601": "2020-02-06T11:59:13.347087Z",
      "url": "https://files.pythonhosted.org/packages/cf/47/b8aeb2b53022b213165285b74f75364767aac340257096b5076f1fe113c0/logwrap-8.0.3-cp36-cp36m-manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f05b2eb2557be51e68ed66b9e545126cbe632ddd3f3e7d71e7d269abff3411e",
        "md5": "f07d44c451d9c5ad618af283a8779dd6",
        "sha256": "7a755f55f3e2b3af34d53ae71b1e286167c1cdc4449f79c98d30802cad370457"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp36-cp36m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f07d44c451d9c5ad618af283a8779dd6",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 1149629,
      "upload_time": "2020-02-06T11:51:08",
      "upload_time_iso_8601": "2020-02-06T11:51:08.743250Z",
      "url": "https://files.pythonhosted.org/packages/7f/05/b2eb2557be51e68ed66b9e545126cbe632ddd3f3e7d71e7d269abff3411e/logwrap-8.0.3-cp36-cp36m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "629440761634dadf38c2b3965e066aee1292ce8a8393d45a9e3d1136ddc61869",
        "md5": "a89d9a25b750898f0f66150c4973ed46",
        "sha256": "ec8b951e3f1b3d4f6adae643ae7015b49ebd87341c5dd6a5db8fbfaa06f1aa57"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "a89d9a25b750898f0f66150c4973ed46",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 926969,
      "upload_time": "2020-02-06T11:54:02",
      "upload_time_iso_8601": "2020-02-06T11:54:02.141580Z",
      "url": "https://files.pythonhosted.org/packages/62/94/40761634dadf38c2b3965e066aee1292ce8a8393d45a9e3d1136ddc61869/logwrap-8.0.3-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb3b25acbae92b570218abca0dceaf09b5883857b0c6b688cb2d84e8c9e98103",
        "md5": "b34929b7247517894b51739a15856d8a",
        "sha256": "a84de7cc91d3d1a788c9f4b6981607bf7b7cb211ddbe2703a20f0f8765f24569"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b34929b7247517894b51739a15856d8a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1227632,
      "upload_time": "2020-02-06T11:54:04",
      "upload_time_iso_8601": "2020-02-06T11:54:04.746053Z",
      "url": "https://files.pythonhosted.org/packages/bb/3b/25acbae92b570218abca0dceaf09b5883857b0c6b688cb2d84e8c9e98103/logwrap-8.0.3-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54e18db45c5d1cce96ea0b8aaaf4223b5de49875951ebd1303c114d59a2a5561",
        "md5": "4e09890204793ce599f6acc4f58cf0fd",
        "sha256": "0ca90abf34df4d6e60c379d4dd7c4daa67432049c9ee7f53dff9fb73ade386c2"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux2010_i686.whl",
      "has_sig": false,
      "md5_digest": "4e09890204793ce599f6acc4f58cf0fd",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 926971,
      "upload_time": "2020-02-06T11:54:07",
      "upload_time_iso_8601": "2020-02-06T11:54:07.041660Z",
      "url": "https://files.pythonhosted.org/packages/54/e1/8db45c5d1cce96ea0b8aaaf4223b5de49875951ebd1303c114d59a2a5561/logwrap-8.0.3-cp37-cp37m-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db50bc60987a638d7a2d37c0235dbd0aa32a3a209903fae923aba7efe1d9f8ee",
        "md5": "ea8e28821963a0428b60bf92339e8118",
        "sha256": "25574c15c482348248bbe07102d5e73a371cc832dbf78ab4a9dfbaec23fc8805"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ea8e28821963a0428b60bf92339e8118",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1227634,
      "upload_time": "2020-02-06T11:54:09",
      "upload_time_iso_8601": "2020-02-06T11:54:09.201340Z",
      "url": "https://files.pythonhosted.org/packages/db/50/bc60987a638d7a2d37c0235dbd0aa32a3a209903fae923aba7efe1d9f8ee/logwrap-8.0.3-cp37-cp37m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "352f8ab4b98bc7649436fd35908e91bee66e7a622cd956aa5ec248e1a447a5c5",
        "md5": "1021df8144a7dbf9d92b1dcf4f45d468",
        "sha256": "9483614e50fa9de245a9b66e7d7237468e559269d4ecff911898ff5e60697426"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "1021df8144a7dbf9d92b1dcf4f45d468",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1114660,
      "upload_time": "2020-02-06T11:41:15",
      "upload_time_iso_8601": "2020-02-06T11:41:15.856543Z",
      "url": "https://files.pythonhosted.org/packages/35/2f/8ab4b98bc7649436fd35908e91bee66e7a622cd956aa5ec248e1a447a5c5/logwrap-8.0.3-cp37-cp37m-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b026479d2607260a189294350e5f5a9165899f8ccd973493e915d21d9c3da11",
        "md5": "2b6b9dfe66ea12eda3af8b3c30118cfc",
        "sha256": "e7d716c3c99f7b3229d7594ed1c8d08c1e9ae695b81aab82e073add89ab45184"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "2b6b9dfe66ea12eda3af8b3c30118cfc",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 988614,
      "upload_time": "2020-02-06T11:59:17",
      "upload_time_iso_8601": "2020-02-06T11:59:17.441741Z",
      "url": "https://files.pythonhosted.org/packages/1b/02/6479d2607260a189294350e5f5a9165899f8ccd973493e915d21d9c3da11/logwrap-8.0.3-cp37-cp37m-manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84b25d3cae3f03a053f9eb75a0e6f2f8a5f1f799fc3bbc7c534182b0fc02ac0a",
        "md5": "eb50e16692279b5f7928f17d9f5f1a66",
        "sha256": "c8b7464fd3b41a1acc59f141c66a9c5dc59be07466741509b815b853b8948dd9"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "eb50e16692279b5f7928f17d9f5f1a66",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 1151580,
      "upload_time": "2020-02-06T11:51:11",
      "upload_time_iso_8601": "2020-02-06T11:51:11.262780Z",
      "url": "https://files.pythonhosted.org/packages/84/b2/5d3cae3f03a053f9eb75a0e6f2f8a5f1f799fc3bbc7c534182b0fc02ac0a/logwrap-8.0.3-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "798fc8700aed83758dd1827c28fe10066f46e8c44ca2fb12de9601b537319f8a",
        "md5": "a870a2fb9e0359a3d37f47646a2a52cc",
        "sha256": "0a009d48cb732c619609bc9a49e89efff189de7e4c2d0e46eea73e77b5a5deca"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "a870a2fb9e0359a3d37f47646a2a52cc",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1108851,
      "upload_time": "2020-02-06T11:54:11",
      "upload_time_iso_8601": "2020-02-06T11:54:11.904385Z",
      "url": "https://files.pythonhosted.org/packages/79/8f/c8700aed83758dd1827c28fe10066f46e8c44ca2fb12de9601b537319f8a/logwrap-8.0.3-cp38-cp38-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3f539e59d71413d9c62d32279bd06547835ba0d63abc7bee10e41df9d295aef",
        "md5": "c7336d01ba4dbc29b5ec3b69ff881d0b",
        "sha256": "25cf74ef8e1884636b724e716975e2680e90c4fb3c5d8e59a7e77de5b4de3794"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c7336d01ba4dbc29b5ec3b69ff881d0b",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1500074,
      "upload_time": "2020-02-06T11:54:14",
      "upload_time_iso_8601": "2020-02-06T11:54:14.359048Z",
      "url": "https://files.pythonhosted.org/packages/f3/f5/39e59d71413d9c62d32279bd06547835ba0d63abc7bee10e41df9d295aef/logwrap-8.0.3-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2744d95947609b4a834a7819fdcf402e34675a3014fb497954f499d31949ce90",
        "md5": "3033bfaa178fe74c04d442d7252fd5b3",
        "sha256": "d39ba64a4ee3927fa11dcb3f7f157f04f0d6b3c7ee8e22d16d82d5dc644ae2fd"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux2010_i686.whl",
      "has_sig": false,
      "md5_digest": "3033bfaa178fe74c04d442d7252fd5b3",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1108859,
      "upload_time": "2020-02-06T11:54:17",
      "upload_time_iso_8601": "2020-02-06T11:54:17.001714Z",
      "url": "https://files.pythonhosted.org/packages/27/44/d95947609b4a834a7819fdcf402e34675a3014fb497954f499d31949ce90/logwrap-8.0.3-cp38-cp38-manylinux2010_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e52a8a8dc1ca8be8168dafe84f38b51ef771e3bf4f5fbb6d5d686ceb57ed13a",
        "md5": "aaf71381b8149460cf4ec8da8ac1aa2d",
        "sha256": "fb3557b72ab5e51defe0ddb186f88416e575cf122ef1dddea2b88d6d98ef89e7"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "aaf71381b8149460cf4ec8da8ac1aa2d",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1500078,
      "upload_time": "2020-02-06T11:54:19",
      "upload_time_iso_8601": "2020-02-06T11:54:19.357025Z",
      "url": "https://files.pythonhosted.org/packages/8e/52/a8a8dc1ca8be8168dafe84f38b51ef771e3bf4f5fbb6d5d686ceb57ed13a/logwrap-8.0.3-cp38-cp38-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f08c308000abf50d9806ebfdfd383d32f1e8e17b8dd43b944e60a0934720b224",
        "md5": "c48009d196972c92f28a0a5019acde88",
        "sha256": "e43046809431fa912f4d21e61c3db566f15ec96d1a40c0773ea9e42d7745c50c"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "c48009d196972c92f28a0a5019acde88",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1329575,
      "upload_time": "2020-02-06T11:41:17",
      "upload_time_iso_8601": "2020-02-06T11:41:17.950805Z",
      "url": "https://files.pythonhosted.org/packages/f0/8c/308000abf50d9806ebfdfd383d32f1e8e17b8dd43b944e60a0934720b224/logwrap-8.0.3-cp38-cp38-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "584b317db5193ee2d7c6cb8ae9d4a019ce9a611d78c252c7d27e446c0e85dd66",
        "md5": "6a26d0beef11aecbe3118a101ce5556f",
        "sha256": "213839a9a9f51a0f4a95fcac53ee238258480165f1b194fa5337ebe7f24b3692"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "6a26d0beef11aecbe3118a101ce5556f",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1098484,
      "upload_time": "2020-02-06T11:59:21",
      "upload_time_iso_8601": "2020-02-06T11:59:21.507640Z",
      "url": "https://files.pythonhosted.org/packages/58/4b/317db5193ee2d7c6cb8ae9d4a019ce9a611d78c252c7d27e446c0e85dd66/logwrap-8.0.3-cp38-cp38-manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42ce7ba3882c3f1dae9696ada07b3e5b952d98e41c38582574aa2ebee076ef4a",
        "md5": "2eed2a83cb3489c9072418640959e4c5",
        "sha256": "c890fb70d8f76993c22ec4f82cca79239571e9877e1bb2fd7f6f3b6ec617238b"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-cp38-cp38-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2eed2a83cb3489c9072418640959e4c5",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 1370887,
      "upload_time": "2020-02-06T11:51:13",
      "upload_time_iso_8601": "2020-02-06T11:51:13.749891Z",
      "url": "https://files.pythonhosted.org/packages/42/ce/7ba3882c3f1dae9696ada07b3e5b952d98e41c38582574aa2ebee076ef4a/logwrap-8.0.3-cp38-cp38-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b00001af8c880a637f49d1a5bf7c242716a26fb5b35dbf7c9c9c77149cc3a12",
        "md5": "795162313e22dc0800c58329ad11a43a",
        "sha256": "22bca706461737398ef453f9d0c78e368558826b82ddbb1c78c90f9d4be5bc29"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "795162313e22dc0800c58329ad11a43a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 26217,
      "upload_time": "2020-02-06T11:41:20",
      "upload_time_iso_8601": "2020-02-06T11:41:20.314673Z",
      "url": "https://files.pythonhosted.org/packages/9b/00/001af8c880a637f49d1a5bf7c242716a26fb5b35dbf7c9c9c77149cc3a12/logwrap-8.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cf45a4cc1fe327ad9aa872f4fcd43bc2b026948ba29aefee048f9c52f84193a",
        "md5": "6089929db1dfba461de99b556d7403c3",
        "sha256": "3f9c4e77f8e94462f0d108b35baeb97d0426ce836e68ddf383888688cc64ecf5"
      },
      "downloads": -1,
      "filename": "logwrap-8.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6089929db1dfba461de99b556d7403c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 43050,
      "upload_time": "2020-02-06T11:41:22",
      "upload_time_iso_8601": "2020-02-06T11:41:22.074822Z",
      "url": "https://files.pythonhosted.org/packages/1c/f4/5a4cc1fe327ad9aa872f4fcd43bc2b026948ba29aefee048f9c52f84193a/logwrap-8.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}