{
  "info": {
    "author": "Jacob Rief",
    "author_email": "jacob.rief@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# djangocms-cascade\n\n[![Build Status](https://travis-ci.org/jrief/djangocms-cascade.png?branch=master)](https://travis-ci.org/jrief/djangocms-cascade)\n[![Python versions](https://img.shields.io/pypi/pyversions/djangocms-cascade.svg)](https://pypi.python.org/pypi/djangocms-cascade)\n[![Software license](https://img.shields.io/pypi/l/djangocms-cascade.svg)](https://github.com/jrief/djangocms-cascade/blob/master/LICENSE-MIT)\n[![Gitter chat room](https://badges.gitter.im/jrief/djangocms-cascade.svg)](https://gitter.im/awesto/djangocms-cascade)\n[![Latest version on PyPI](https://img.shields.io/pypi/v/djangocms-cascade.svg)](https://pypi.python.org/pypi/djangocms-cascade)\n\nThe Swiss army knife for working with Django-CMS plugins.\n\n## Why Use DjangoCMS-Cascade?\n\n**DjangoCMS-Cascade** is a collection of plugins for Django-CMS\n[placeholders](http://docs.django-cms.org/en/latest/introduction/templates_placeholders.html#templates-placeholders).\nInstead of creating one database model for each CMS plugin, Cascade shares one database model for\nall of them. The payload then is stored inside a JSON field instead of declaring each attribute\nexplicitly. This furthermore prevents us to handle all kind of nasty database migration problems.\n\n\n## Version 2.0 (released 2021-02-02)\n\n**Version 2.0 only supports Django versions 3.1 and higher.**\n\nBackward compatibility had to be dropped, because version 2.0 now fully supports the native internal\n`JSONField` as offered by Django version 3.1. It hence is not possible to run a version of Cascade\nwhich can switch between those field types.\n\nFrom a functional point of view, there is no difference to version 1.3.7.\n\nAfter upgrading, run `./manage.py migrate cmsplugin_cascade`. It will rewrite the field type of\nall `JSONField`s to Django's internal `JSONField` without modifying its content. For safety reasons,\nit is highly recommended to backup the database before migrating. \n\n\n## Features\n\n### Perfect for nested grid systems\n\nSince **Cascade** keeps track on the widths of all columns, ``<img>`` and ``<picture>`` elements can\nbe rendered in a responsive way, so that the browser only loads the image required for the visible\nviewport.\n\n\n### Extend plugins with additional features\n\nUsing a JSON field to store the payload gives us much more flexibility. We can for instance enrich\nour plugins with additional attributes, configured during runtime. This can be used to optionally\nshare attributes across different plugins (referenced by an alias name), add CSS classes and styles,\nor offer alternative rendering templates.\n\n\n### Set links onto your own views\n\nAnother nice aspect of this approach is, that we can override the functionality used to set links\nonto pages which are not part of the CMS. This is specially useful, since we do not want to\nre-implement this functionality for all plugins, which require links, ie. images, pictures,\nbuttons and text-links.\n\n\n### Copy content and paste it somewhere else\n\nSince the payload of plugins is already serialized, we can even copy them from one site to another\nsite supporting **djangocms-cascade**.\n\n\n## Documentation\n\nFind detailed documentation on [ReadTheDocs](http://djangocms-cascade.readthedocs.io/en/latest/).\n\nPlease see the [Release Notes](http://djangocms-cascade.readthedocs.io/en/latest/changelog.html)\nbefore upgrading from an older version.\n\n\n## Architecture\n\n### It's pluggable\n\n**DjangoCMS-Cascade** is very modular, keeping its CMS modules in functional groups. These groups\nhave to be activated independently in the project's `settings.py`. It also is possible to activate only\ncertain plugins out of a group. Currently there are two such groups, `cmsplugin_cascade.bootstrap3` and\n`cmsplugin_cascade.bootstrap4`, but this list could be extended by say, **Foundation**,\n**Angular Material** or whatever other CSS framework you prefer.\n\n\n### Configurable individually\n\nEach **Cascade** plugin can be styled individually. The site-administrator can specify which CSS\nstyles and CSS classes can be added to each plugin. Then the page-editor can pick one of the allowed\nstyles to adopt his elements accordingly.\n\n\n### Reuse your data\n\nEach **Cascade** plugin can be configured by the site-administrator to share some or all of its data\nfields. This for instance is handy, to keep references onto external URLs in a central place. Or is\ncan be used to resize all images sharing a cetrain property in one go.\n\n\n### Segment the DOM\n\nIt is even possible to group plugins into seperate evaluation contexts. This for instance is used to\nrender different Plugins, depending on whether a user is authenticated or anonymous.\n\n\n### Responsive Images\n\nIn modern web development, images must adopt to the column width in which they are rendered.\nTherefore the ``<img ...>`` tag, in addition to the well known ``src`` attribute, also accepts\nadditional ``srcset``'s, one for each media query. Here **djangocms-cascade** calculates the\nrequired widths for each image, depending on the current column layout considering all media\nbreakpoints.\n\nThis is also implemented for the ``<picture>`` element with all of it's children, normally\n``<source srcset=\"...\">``.\n\nIt also supports resolutions of more than one physical pixel per logical pixel as found in Retina\ndisplays.\n\n\n### Other Features\n\n* Use the scaffolding technique from the preferred CSS framework to subdivide a placeholder into a\n  [grid system](http://getbootstrap.com/css/#grid).\n* Make full usage of responsive techniques, by allowing\n  [stacked to horizontal](http://getbootstrap.com/css/#grid-example-basic) classes per element.\n* Use styled [buttons](http://getbootstrap.com/css/#buttons) to add links.\n* Wrap special content into a [Jumbotron](http://getbootstrap.com/components/#jumbotron) or a\n  [Carousel](http://getbootstrap.com/javascript/#carousel).\n* Add ``<img>`` and ``<picture>`` elements in a responsive way, so that more than one image URL\n  points onto the resized sources, one for each viewport using the ``srcset`` tags or the\n  ``<source>`` elements.\n* Use segmentation to conditionally render parts of the DOM.\n* Temporarily hide a plugin to show up in the DOM.\n* Upload an self composed font from [Fontello](http://fontello.com/) and use it's icon in plain text\n  or as framed eye catchers.\n* It is very easy to integrate additional elements from the preferred CSS framework. For instance,\n  implementing the Bootstrap Carousel, requires only 50 lines of Python code and two simple Django\n  templates.\n* Since all the data is stored in JSON, no database migration is required if a field is added,\n  modified or removed from the plugin.\n* Currently **Bootstrap-3** and **Bootstrap-4** is supported, but other CSS frameworks can be\n  easily added in a pluggable manner.\n* It follows the \"batteries included\" philosophy, but still remains very modular.\n\nIn addition to easily implement any kind of plugin, **DjangoCMS-Cascade** makes it possible to add\nreusable helpers. Such a helper enriches a plugin with an additional, configurable functionality:\n\n* By making some of the plugin fields sharable, one can reuse these values for other plugins of the\n  same kind. This for instance is handy for the image and picture plugin, so that images always are\n  resized to predefined values.\n* By allowing extra fields, one can add an optional ``id`` tag, CSS classes and inline styles. This\n  is configurable on a plugin and site base.\n* It is possible to customize the rendering templates shipped with the plugins.\n* Since all data is JSON, you can dump the content of one placeholder and insert it into another one,\n  even on a foreign site. This for instance is useful to transfer pages from the staging site to production.\n\n\n### Help needed\n\nIf someone wants to start a subproject for a CSS framework, other than Bootstrap-3/4.\n\nIf you are a native English speaker, please check the documentation for spelling mistakes and\ngrammar, since English is not my mother tongue.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrief/djangocms-cascade",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangocms-cascade",
    "package_url": "https://pypi.org/project/djangocms-cascade/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/djangocms-cascade/",
    "project_urls": {
      "Homepage": "https://github.com/jrief/djangocms-cascade"
    },
    "release_url": "https://pypi.org/project/djangocms-cascade/2.1.1/",
    "requires_dist": [
      "django (>=3.1)",
      "django-classy-tags (>=1.0)",
      "django-cms (<4,>=3.8)",
      "django-entangled (>=0.4)",
      "djangocms-text-ckeditor (>=3.7)",
      "django-select2 (>=7.7)",
      "requests"
    ],
    "requires_python": "",
    "summary": "Build Single Page Applications using the Django-CMS plugin system",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15080625,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4a936a60dd6f803aafbfa6d6f3eb9f453ca0d149d59be82214eaf2e7e99a2de",
        "md5": "0700507f61f47a58908d717f1e3a8350",
        "sha256": "ea23f928f99b9c2e8bf0581bc2fc1dafc37dc13add05bd8563b0b739d555a401"
      },
      "downloads": -1,
      "filename": "djangocms_cascade-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0700507f61f47a58908d717f1e3a8350",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 414679,
      "upload_time": "2021-07-22T09:51:45",
      "upload_time_iso_8601": "2021-07-22T09:51:45.039279Z",
      "url": "https://files.pythonhosted.org/packages/e4/a9/36a60dd6f803aafbfa6d6f3eb9f453ca0d149d59be82214eaf2e7e99a2de/djangocms_cascade-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed62fecc532e5f45ae2c3ee6bca622284cb655c7b4ab6074617af889d966b608",
        "md5": "ce3cc816669de8a19c22bbe9b7a466c6",
        "sha256": "28e7e53b4d5d8b7e2294e0a8a8f68005a52e7bcc9e444fe204e04f4923cac4f5"
      },
      "downloads": -1,
      "filename": "djangocms-cascade-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ce3cc816669de8a19c22bbe9b7a466c6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 310887,
      "upload_time": "2021-07-22T09:51:49",
      "upload_time_iso_8601": "2021-07-22T09:51:49.643679Z",
      "url": "https://files.pythonhosted.org/packages/ed/62/fecc532e5f45ae2c3ee6bca622284cb655c7b4ab6074617af889d966b608/djangocms-cascade-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}