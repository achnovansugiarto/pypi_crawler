{
  "info": {
    "author": "Ties Jan Hefting",
    "author_email": "hello@tiesjan.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Django Convenient Formsets\n\n[![Python unit tests](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_python_unit_tests.yml/badge.svg)](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_python_unit_tests.yml)\n[![End-to-end tests](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_end_to_end_tests.yml/badge.svg)](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_end_to_end_tests.yml)\n[![Linters](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_linters.yml/badge.svg)](https://github.com/tiesjan/django-convenient-formsets/actions/workflows/run_linters.yml)\n[![TestingBot Test Status](https://testingbot.com/buildstatus/e67ac1c27fb0bd343c6f9ec32707a626)](https://testingbot.com/builds/e67ac1c27fb0bd343c6f9ec32707a626)\n\n\nThis Django app aims to make formsets convenient for users and developers\nalike. It extends Django's built-in formset classes and includes support for\ndynamically adding, deleting and ordering of forms on the client side.\n\n\n#### Supported platforms\n- Django: 3.2, 3.1, 3.0, 2.2\n- Python: 3.9, 3.8, 3.7, 3.6, 3.5 (Django 2.2 only)\n- Browsers: Chrome 48+, Firefox 44+, Internet Explorer 11, Edge 16+, Opera 50+,\n  Safari 11+, latest Safari on iOS, latest Chrome on Android\n\nOther platform versions may work, but are not actively tested.\n\n\n## Installation\n1. Install using pip:\n\n    ```shell\n    $ pip install django-convenient-formsets\n    ```\n\n2. Add to `INSTALLED_APPS`:\n\n    ```python\n    INSTALLED_APPS = [\n        # ...\n        'convenient_formsets'\n    ]\n    ```\n\n\n## Quick start\n1. Create a formset in your Python code:\n\n    ```python\n    from convenient_formsets import ConvenientBaseFormSet\n    from django import forms\n\n\n    class EmailForm(forms.Form):\n        email = forms.EmailField()\n\n    EmailFormSet = forms.formset_factory(\n        EmailForm,\n        formset=ConvenientBaseFormset,\n        can_delete=True,\n        can_order=True,\n    )\n\n    email_formset = EmailFormSet(prefix='email-formset')\n    ```\n\n2. Render formset in your template and add JavaScript code for initialization:\n\n    ```htmldjango\n    <!doctype html>\n    <html>\n    <head>\n        <!-- Include the formset's media -->\n        {{ email_formset.media }}\n\n        <!-- Initialize a ConvenientFormset -->\n        <script>\n            window.addEventListener('load', function(event) {\n                new ConvenientFormset({\n                    'formsetPrefix': '{{ email_formset.prefix }}',\n                    'formsContainerSelector': '#email-formset #email-forms-container',\n                    'formSelector': '.email-form',\n\n                    'canAddForms': true,\n                    'addFormButtonSelector': '#email-formset #add-form-button',\n                    'emptyFormSelector': '#email-formset #empty-form .email-form',\n\n                    'canDeleteForms': true,\n                    'deleteFormButtonSelector': '#delete-form-button',\n\n                    'canOrderForms': true,\n                    'moveFormDownButtonSelector': '#move-form-down-button',\n                    'moveFormUpButtonSelector': '#move-form-up-button',\n                });\n            });\n        </script>\n    </head>\n\n    <body>\n        <!-- Render formset using the following basic structure -->\n        <div id=\"email-formset\">\n            <div id=\"email-forms-container\">\n                {% for email_form in email_formset.forms %}\n                <div class=\"email-form\">\n                    {{ email_form.email }}\n                    {% if email_formset.can_delete %}\n                        {{ email_form.DELETE }}\n                        <input type=\"button\" id=\"delete-form-button\" value=\"Delete\">\n                    {% endif %}\n                    {% if email_formset.can_order %}\n                        {{ email_form.ORDER }}\n                        <input type=\"button\" id=\"move-form-up-button\" value=\"Move up\">\n                        <input type=\"button\" id=\"move-form-down-button\" value=\"Move down\">\n                    {% endif %}\n                </div>\n                {% endfor %}\n            </div>\n            <div><input type=\"button\" id=\"add-form-button\" value=\"Add another\"></div>\n            <div id=\"empty-form\" hidden>\n                <div class=\"email-form\">\n                    {{ email_formset.empty_form.email }}\n                    {% if email_formset.can_delete %}\n                        <input type=\"button\" id=\"delete-form-button\" value=\"Delete\">\n                    {% endif %}\n                    {% if email_formset.can_order %}\n                        {{ email_form.ORDER }}\n                        <input type=\"button\" id=\"move-form-up-button\" value=\"Move up\">\n                        <input type=\"button\" id=\"move-form-down-button\" value=\"Move down\">\n                    {% endif %}\n                </div>\n            </div>\n            {{ email_formset.management_form }}\n        </div>\n    </body>\n    </html>\n    ```\n\n\n## Usage\n\n### Server side\nThe Python classes `ConvenientBaseFormSet` and `ConvenientBaseModelFormSet`\nextend Django's built-in `BaseFormSet` and `BaseModelFormset` by:\n- Overriding `deletion_widget` for the `DELETE` field and `ordering_widget` for\n  the `ORDER` field of `BaseFormSet`. They default to the `forms.HiddenInput`\n  widget in order to hide them from the user.  \n  _**Note:** the [`deletion_widget` attribute and corresponding method][1] are\n  available from Django 4.0 and later, and the [`ordering_widget` attribute and\n  corresponding method][2] are available from Django 3.0 and later. They are\n  backported to older Django versions for your convenience._\n- Including the JavaScript files in the formset's `media` attribute required\n  for dynamic formsets.\n\n[1]: https://docs.djangoproject.com/en/dev/topics/forms/formsets/#deletion-widget\n[2]: https://docs.djangoproject.com/en/dev/topics/forms/formsets/#ordering-widget\n\n\n### Client side\nSee the example in the Quick start guide above on how to render the formset in\nyour HTML template. Feel free to add some intermediate DOM elements if it suits\nyour template better, as long as you stick to the basic structure shown above.\n\nCreating an instance of the JavaScript constructor function `ConvenientFormset`\nallows a user to add and delete forms within the rendered formset. When a user\nmakes changes, the management form is updated accordingly. The constructor\nfunction can be passed the parameters outlined below. In case initialization\nfails, check the browser console for some helpful output.\n\n###### GENERAL\n<dl>\n  <dt>formsetPrefix</dt>\n  <dd>The formset's \"prefix\" attribute (required).</dd>\n  <dt>formsContainerSelector</dt>\n  <dd>CSS selector for the DOM element that contains all the forms (required).</dd>\n  <dt>formSelector</dt>\n  <dd>CSS selector for each form within \"formsContainerSelector\" (required).</dd>\n</dl>\n\n---\n\n###### ADDING FORMS\n<dl>\n  <dt>canAddForms</dt>\n  <dd>Enables adding of new forms (default: true).</dd>\n  <dt>addFormButtonSelector</dt>\n  <dd>CSS selector for the DOM element that may be clicked to add an empty form (required if \"canAddForms\" is set).</dd>\n  <dt>emptyFormSelector</dt>\n  <dd>CSS selector for the empty form (required if \"canAddForms\" is set).</dd>\n  <dt>hideAddFormButtonOnMaxForms</dt>\n  <dd>Hides the add button when reaching the maximum number of forms, by applying the \"hidden\" HTML attribute (default: true).</dd>\n</dl>\n\n---\n\n###### DELETING FORMS\n<dl>\n  <dt>canDeleteForms</dt>\n  <dd>Enables deleting of forms (default: false).</dd>\n  <dt>deleteFormButtonSelector</dt>\n  <dd>CSS selector for the DOM element within \"formSelector\" that may be clicked to delete a form (required if \"canDeleteForms\" is set).</dd>\n</dl>\n\n---\n\n###### ORDERING FORMS\n<dl>\n  <dt>canOrderForms</dt>\n  <dd>Enables ordering of forms (default: false).</dd>\n  <dt>moveFormDownButtonSelector</dt>\n  <dd>CSS selector for the DOM element within \"formSelector\" that may be clicked to move a form down among the visible forms (required if \"canOrderForms\" is set).</dd>\n  <dt>moveFormUpButtonSelector</dt>\n  <dd>CSS selector for the DOM element within \"formSelector\" that may be clicked to move a form up among the visible forms (required if \"canOrderForms\" is set).</dd>\n</dl>\n\n\n## Internals\n**Form deletion** is handled in either of the following ways:\n1. If a form includes a `DELETE` field, the field's value is updated and the\n   form will be hidden by applying the \"hidden\" HTML attribute. The deletion\n   will then be handled server side.\n2. If the form _does not_ include a `DELETE` field, the form is removed from\n   the DOM altogether and will not be submitted to the server.\n\n**Form ordering** is handled by moving visible forms above the previous (up)\nand below the next (down) for visual feedback, and by swapping the values of\ntheir `ORDER` fields for the server side. This means that the original values\nare kept, even when in-between forms are deleted. New forms will see the\ninitial value for their `ORDER` field set to the last visible form's `ORDER`\nfield value + 1, as they're added to the bottom of all forms.\n\n\n## License\nThe scripts and documentation in this project are released under the\nBSD-3-Clause License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tiesjan/django-convenient-formsets",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-convenient-formsets",
    "package_url": "https://pypi.org/project/django-convenient-formsets/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-convenient-formsets/",
    "project_urls": {
      "Bugs": "https://github.com/tiesjan/django-convenient-formsets/issues",
      "Homepage": "https://github.com/tiesjan/django-convenient-formsets"
    },
    "release_url": "https://pypi.org/project/django-convenient-formsets/1.0/",
    "requires_dist": [
      "Django (<=4.0,>=2.2)"
    ],
    "requires_python": ">=3.5",
    "summary": "Django formsets made convenient for users and developers alike.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14827984,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "198b07b05745667f990fa9b1a65f2e3f4e51f36985b74153d92e63033677bda6",
        "md5": "efb74bfda2e36361bbe78de982678e1d",
        "sha256": "c462842bca5a607681102252fdbf3c69cb8ba018b2e220a17a1098556086b781"
      },
      "downloads": -1,
      "filename": "django_convenient_formsets-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "efb74bfda2e36361bbe78de982678e1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 13849,
      "upload_time": "2021-08-11T08:01:20",
      "upload_time_iso_8601": "2021-08-11T08:01:20.278787Z",
      "url": "https://files.pythonhosted.org/packages/19/8b/07b05745667f990fa9b1a65f2e3f4e51f36985b74153d92e63033677bda6/django_convenient_formsets-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31164d4b7972a33119bff4d7d51a447ef53d34988964f8ca40f6b9f4b5a66d37",
        "md5": "75d6ac1da9e5aa6b915741a9005b7e61",
        "sha256": "4de49a0459bb75b78c2090eac96e95ad56903353ef58faed816e2acadce7a200"
      },
      "downloads": -1,
      "filename": "django-convenient-formsets-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "75d6ac1da9e5aa6b915741a9005b7e61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 22112,
      "upload_time": "2021-08-11T08:01:21",
      "upload_time_iso_8601": "2021-08-11T08:01:21.393369Z",
      "url": "https://files.pythonhosted.org/packages/31/16/4d4b7972a33119bff4d7d51a447ef53d34988964f8ca40f6b9f4b5a66d37/django-convenient-formsets-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}