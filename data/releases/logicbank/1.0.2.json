{
  "info": {
    "author": "Val Huber",
    "author_email": "valjhuber@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Python Rules - Logic for SQLAlchemy\n===================================\n\nThis package enables you to declare rules that govern SQLAlchemy\nupdate transaction logic (multi-table derivations, constraints,\nand actions such as sending mail or messages).\n\nLogic is stated in Python, and is over an **40X\nmore concise than code.**\n\n\nFeatures\n--------\n\nLogic is declared in Python (example below), and is:\n\n- **Extensible:** logic consists of rules (see below), plus standard Python code\n\n- **Multi-table:** rules like ``sum`` automate multi-table transactions\n\n- **Scalable:** rules are pruned and optimized; for example, sums are processed as *1 row adjustment updates,* rather than expensive SQL aggregate queries\n\n- **Manageable:** develop and debug your rules in IDEs, manage it in SCS systems (such as `git`) using existing procedures\n\n\nExample:\n--------\nThe following 5 rules represent the same logic as 200 lines\nof Python:\n\n.. image:: https://github.com/valhuber/LogicBank/raw/main/images/example.png\n    :width: 800px\n    :align: center\n\n\n\nTo activate the rules declared above:\n\n.. code-block:: Python\n\n    LogicBank.activate(session=session, activator=declare_logic)\n\nDepends on:\n-----------\n- SQLAlchemy\n- Python 3.8\n\n\nMore information:\n-----------------\nThe github project includes documentation and examples.\n\n\nAcknowledgements\n----------------\nMany thanks to\n\n- Tyler Band, for testing and the Banking sample\n- Max Tardiveau, for testing\n- Nishanth Shyamsundar, for testing\n- Achim GÃ¶tz, for design collaboration\n\n\n\nChange Log\n----------\n\n0.0.6 - Initial Version\n\n0.0.7 - Class Name can differ from Table Name\n\n0.0.8 - Much-reduced pip-install dependencies\n\n0.0.9 - Hybrid attribute support, old_row example\n\n0.1.0 - Hybrid attribute support, bug fix\n\n0.1.1 - `Allocation <https://github.com/valhuber/LogicBank/wiki/Sample-Project---Allocation>`_ example -\nallocate a payment to a set of outstanding orders\n\n0.2.0 - Minor design refactoring of allocation\n\n0.3.0 - Include logic_bank.extensions (allocation), constraint exceptions raised as ConstraintExceptions\n\n0.4.0 - Eliminate \"engine\" from runtime, to facilitate use in servers.  Rework nw tests to centralize open logic in setup().\n\n0.5.0 - Support for `Referential Integrity <https://github.com/valhuber/LogicBank/wiki/Sample-Project---Allocation>`_,\nwith examples.\n\n0.5.1 - Support domain object constructors with complex (side effects)\n__init__ behavior; use row_mapper.column_attrs (not all_orm_descriptors)\nto avoid 'flush already in progress' when using flask_sqlalchemy\n\n0.6.0 - Support for\n\n- `Rule Extensibility <https://github.com/valhuber/LogicBank/wiki/Rule-Extensibility>`_\n\n   - e.g., for auditing\n\n- Generic early events: ``early_row_event_all_classes`` (see Rule Extensibility link above)\n\n   - e.g., for time/date stamping\n\n- New LogicRow functions (see Rule Extensibility link above):\n\n   - are_attributes_changed\n\n   - set_same_named_attributes\n\n- Minor rename of logic class in ``nw``.  Some screen shots may still show the old name (`rules_bank.py`) instead of `logic.py`.\n\n- Bug Fix: (normal) row events weren't firing (other events - early and commit events - were fine)\n\n0.7.0 - `Custom Exceptions <https://github.com/valhuber/LogicBank/wiki/Custom-Constraint-Handling>`_, Improved docstrings, samples (and Tutorial) reorganized into ``examples`` folder\n\n0.8.0 - `Custom Exceptions <https://github.com/valhuber/LogicBank/wiki/Custom-Constraint-Handling>`_, callback signature **changed** to include\nadditional parameters\n\n0.9.0 - Add logicRow.get_derived_attributes, which\ncan be used to enforce behaviors such as\n`Unalterable Derivations <https://github.com/valhuber/LogicBank/wiki/Rule-Extensibility#unalterable-derivations>`_\n\n0.9.2 - Add session to logic_row.__str__(), listeners\n\n0.9.3 - Allow for nulls in summed/sum\n\n0.9.4 - Fix bad Warning: Missing Parent:\n\n0.9.5 - Reduce requirement to initialize summed field\n\n0.9.6 - Show Constraint Failures in Console Log\n\n1.0.2 - Replace print with logging for listing rules\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/valhuber/logicbank",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logicbank",
    "package_url": "https://pypi.org/project/logicbank/",
    "platform": "any",
    "project_url": "https://pypi.org/project/logicbank/",
    "project_urls": {
      "Docs": "https://github.com/valhuber/logicbank/wiki",
      "Homepage": "https://github.com/valhuber/logicbank"
    },
    "release_url": "https://pypi.org/project/logicbank/1.0.2/",
    "requires_dist": [
      "python-dateutil (<3,>=2.3)",
      "sqlalchemy-utils (<1,>=0.32.21)"
    ],
    "requires_python": "~=3.8",
    "summary": "Declare multi-table rules for SQLAlchemy update logic -- 40X more concise, Python for extensibility.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17158717,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a12fa7135675bee2a0c567c166c8e386e3de223fde56c60be5e42de0ff241bc",
        "md5": "cdff0cc49fe4b00d42b831070c77c043",
        "sha256": "451ab7384d2a8772e0a6065a195d72f5339af4be1aefd780183e7d08f64f1b9d"
      },
      "downloads": -1,
      "filename": "logicbank-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cdff0cc49fe4b00d42b831070c77c043",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.8",
      "size": 42106,
      "upload_time": "2021-09-11T04:09:16",
      "upload_time_iso_8601": "2021-09-11T04:09:16.979641Z",
      "url": "https://files.pythonhosted.org/packages/3a/12/fa7135675bee2a0c567c166c8e386e3de223fde56c60be5e42de0ff241bc/logicbank-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02257f7e0245e7646caa7f01fc5c326386a1ba1ac0a7b352b745cb6bde997466",
        "md5": "01522a0c264766b61e7fd671b1af003b",
        "sha256": "5a7c4bcf8a599177e1be835ff9c7423624e30bd4e14ec7e9bff09c3c67f25e46"
      },
      "downloads": -1,
      "filename": "logicbank-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "01522a0c264766b61e7fd671b1af003b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.8",
      "size": 33519,
      "upload_time": "2021-09-11T04:09:18",
      "upload_time_iso_8601": "2021-09-11T04:09:18.816955Z",
      "url": "https://files.pythonhosted.org/packages/02/25/7f7e0245e7646caa7f01fc5c326386a1ba1ac0a7b352b745cb6bde997466/logicbank-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}