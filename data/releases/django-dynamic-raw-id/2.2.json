{
  "info": {
    "author": "Martin Mahner, Seth Buntin, Yann Malet",
    "author_email": "info@lincolnloop.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://travis-ci.org/lincolnloop/django-dynamic-raw-id.svg?branch=master\n   :target: https://travis-ci.org/lincolnloop/django-dynamic-raw-id\n\n.. image:: https://codecov.io/gh/lincolnloop/django-dynamic-raw-id/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/lincolnloop/django-dynamic-raw-id\n\n.. important:: django-salmonella was renamed to django-dynamic-raw-id and\n   re-released as version 2.1. The latest django-salmonella version was 1.2.\n   Please upgrade your code, see Installation and Usage below.\n\n=====================\ndjango-dynamic-raw-id\n=====================\n\nA Django admin raw_id_fields widget replacement that handles display of an\nobject's string value on change and can be overridden via a template.\nSee this example:\n\n.. image:: http://d.pr/i/10GtM.png\n    :target: http://d.pr/i/1kv7d.png\n\nInstallation\n============\n\nInstall the package with ``pip``::\n\n    $ pip install django-dynamic-raw-id\n\nPut ``dynamic_raw_id`` to your list of ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        # ... other apps\n        'dynamic_raw_id',\n    )\n\nAnd add the ``urlpattern``::\n\n    urlpatterns = [\n        # ...\n        url(r'^admin/dynamic_raw_id/', include('dynamic_raw_id.urls')),\n    ]\n\n``dynamic_raw_id`` comes with some static files so don't forget to run\n``manage.py collectstatic``.\n\nUsage\n=====\n\nTo start using django-dynamic-raw-id in your application all you need to do is\nimplement ``DynamicRawIDMixin`` in your  ``ModelAdmin`` class and add the desired\nfields to a list of ``dynamic_raw_id_fields``::\n\n    from dynamic_raw_id.admin import DynamicRawIDMixin\n\n    class UserProfileAdmin(DynamicRawIDMixin, admin.ModelAdmin):\n        dynamic_raw_id_fields = ('user',)\n\nYou can use dynamic_raw_id widgets in a Admin filter as well::\n\n    from dynamic_raw_id.admin import DynamicRawIDMixin\n    from dynamic_raw_id.filters import DynamicRawIDFilter\n\n    class UserProfileAdmin(DynamicRawIDMixin, admin.ModelAdmin):\n       list_filter = (\n           ('dynamic_raw_id_fk', DynamicRawIDFilter),\n       )\n\n\nCustomizing the value of the dynamic widget\n===========================================\n\nThe coolest feature of django-dynamic-raw-id is the ability to customize the output\nof the value displayed alongside the ``DynamicRawIDWidget``.  There is a basic\nimplementation if all you want is your object's ``__unicode__`` value. To change\nthe value displayed all you need to do is implement the correct template.\n\ndjango-dynamic-raw-id looks for this template structure ``dynamic_raw_id/<app>/<model>.html``\nand ``dynamic_raw_id/<app>/multi_<model>.html`` (for multi-value lookups).\n\nFor instance, if I have a blog post with a ``User`` dynamic_raw_id field that I want\ndisplay as ``Firstname Lastname``, I would create the template\n``dynamic_raw_id/auth/user.html`` with::\n\n    <span>{{ object.0.first_name }} {{ object.0.last_name }}</span>\n\nA custom admin URL prefix\n=========================\n\nIf you have your admin *and* the dynamic_raw_id scripts located on a different\nprefix than ``/admin/dynamic_raw_id/`` you need adjust the ``DYNAMIC_RAW_ID_MOUNT_URL``\nJS variable.\n\nExample::\n\n    # In case the app is setup at /foobar/dynamic_raw_id/\n    url(r'^foobar/dynamic_raw_id/', include('dynamic_raw_id.urls')),\n\n    # Provide a\n    <script>\n        window.DYNAMIC_RAW_ID_MOUNT_URL = \"{% url \"admin:index\" %}\";\n    </script>\n\nAn ideal place is the admin ``base_site.html`` template. Full example::\n\n    {% extends \"admin/base.html\" %}\n\n    {% block title %}{{ title }} | {{ site_title|default:_('Django site admin') }}{% endblock %}\n\n    {% block extrahead %}\n      {{ block.super }}\n      <script>\n        window.DYNAMIC_RAW_ID_MOUNT_URL = \"{% url \"admin:index\" %}\";\n      </script>\n    {% endblock %}\n\n    {% block branding %}\n    <h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">{{ site_header|default:_('Django administration') }}</a></h1>\n    {% endblock %}\n\n    {% block nav-global %}{% endblock %}\n\n\nTesting and Local Development\n=============================\n\nThe testsuite uses Selenium to do frontend tests, we require Firefox and\ngeckodriver_ to be installed. You can install geckodriver on OS X with\nHomebrew::\n\n    $ brew install geckodriver\n\nRun the testsuite in your local environment using::\n\n    $ cd django-dynamic-raw-id/\n    $ pipenv install --dev\n    $ pipenv run python ./runtests.py\n\nOr use tox to test against various Django and Python versions::\n\n    $ tox -r\n\nYou can also invoke the test suite or other 'manage.py' commands by calling\nthe ``django-admin`` tool with the test app settings::\n\n    $ cd django-dynamic-raw-id/\n    $ pipenv install --dev\n    $ pipenv run django-admin\n    $ pipenv run django-admin test\n\nThis also allows you to run the internal testing app in a testserver, to\npreview a sample of what django-dynamic-raw-id is doing::\n\n    $ pipenv run django-admin migrate\n    $ pipenv run django-admin createsuperuser\n    $ pipenv run django-admin runserver\n\n.. note:: The default settings file is set in the ``.env`` file which\n   pipenv automatically exposes::\n\n    DJANGO_SETTINGS_MODULE=dynamic_raw_id.tests.testapp.settings\n\n\n.. _geckodriver: https://github.com/mozilla/geckodriver\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lincolnloop/django-dynamic-raw-id/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dynamic-raw-id",
    "package_url": "https://pypi.org/project/django-dynamic-raw-id/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dynamic-raw-id/",
    "project_urls": {
      "Homepage": "https://github.com/lincolnloop/django-dynamic-raw-id/"
    },
    "release_url": "https://pypi.org/project/django-dynamic-raw-id/2.2/",
    "requires_dist": [
      "django (>=1.8)",
      "six",
      "coverage; extra == 'tests'",
      "selenium; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "raw_id_fields widget replacement that handles display of an object's string value on change and can be overridden via a template.",
    "version": "2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13231308,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "836c17a4b53cb49770b7d5492eac70c6f88c60a351dbac5e1bbe926481bfa3ba",
        "md5": "e254774c34ff7d67cfdef7fad5af51f9",
        "sha256": "44fc5cdd8b3ce28fc677511fe899721d8911f9e2e50812c920a6209709aa9d94"
      },
      "downloads": -1,
      "filename": "django_dynamic_raw_id-2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e254774c34ff7d67cfdef7fad5af51f9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 23323,
      "upload_time": "2018-01-20T11:52:33",
      "upload_time_iso_8601": "2018-01-20T11:52:33.695041Z",
      "url": "https://files.pythonhosted.org/packages/83/6c/17a4b53cb49770b7d5492eac70c6f88c60a351dbac5e1bbe926481bfa3ba/django_dynamic_raw_id-2.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d0b7bab478065d57c52c4518ceda0ca7173ff0500ee04e8ed2f808c5ab9ea51",
        "md5": "c3e4d2ea9c2c6aba421270add389d8ce",
        "sha256": "83517d21e4f9aa3794c7ddbed0ca8ebef250aa23794a20f9f40cba38decedcef"
      },
      "downloads": -1,
      "filename": "django-dynamic-raw-id-2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c3e4d2ea9c2c6aba421270add389d8ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16811,
      "upload_time": "2018-01-20T11:52:36",
      "upload_time_iso_8601": "2018-01-20T11:52:36.019534Z",
      "url": "https://files.pythonhosted.org/packages/1d/0b/7bab478065d57c52c4518ceda0ca7173ff0500ee04e8ed2f808c5ab9ea51/django-dynamic-raw-id-2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}