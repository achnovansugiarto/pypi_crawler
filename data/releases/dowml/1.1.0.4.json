{
  "info": {
    "author": "Xavier Nodet",
    "author_email": "xavier.nodet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# dowml\nA library and command line client to use Decision Optimization on WML\n\n*Note that this tool is not an official IBM product, and is not supported by IBM. This is educational material, \nuse at your own risks.*\n\n## tldr;\n\n```\n$ pip install dowml\n$ cat my_credentials.txt\n{\n    'apikey': '<apikey>',\n    'url': 'https://us-south.ml.cloud.ibm.com',\n    'cos_resource_crn': 'crn:v1:bluemix:public:cloud-object-storage:global:a/76260f9...',\n    'ml_instance_crn': 'crn:v1:bluemix:public:pm-20:eu-de:a/76260f...'\n}\n$ dowml -w my-credentials.txt\ndowml> solve examples/afiro.mps\ndowml> wait\ndowml> log\ndowml> exit\n```\n\n## Introduction\n\nThe class `DOWMLLib` provides an API to upload Decision Optimization models (CPLEX, CP Optimizer, OPL or docplex) to WML, check their status, and download results.  The script `dowml.py` is an interactive program on top of that library.\n\nIn order to use either of them, you need to provide IBM Cloud credentials.\n1. By default, `DOWMLLib` (and therefore the Interactive) look for these credentials in an environment variable named `DOWML_CREDENTIALS`. This variable shoud have a value looking like\n   ```\n   {\n       'apikey': '<apikey>',\n       'url': 'https://us-south.ml.cloud.ibm.com',\n       'cos_resource_crn': 'crn:v1:bluemix:public:cloud-object-storage:global:a/76260f9...',\n       'ml_instance_crn': 'crn:v1:bluemix:public:pm-20:eu-de:a/76260f...',\n   }\n   ```\n   See below for how/where to get these credentials.\n2. As an alternative, you can specify a file name as argument to \n`DOWMLLib.__init__`. The credentials will then be read from that file instead \nof the environment variable. Accordingly, the Interactive has a command line \noption `-w` (or `--wml-cred-file`) that must be followed by the path of the file.\n3. Finally, if none of the above options are used, the code will look for\nenvironment variable `DOWML_CREDENTIALS_FILE`. If it exists, it must be the path\nto a file that contains credentials such as the ones above.\n\nHere's a sample session:\n```\n$ dowml -h\nusage: dowml [-h] [--wml-cred-file WML_CRED_FILE] [--verbose]\n             [--commands [COMMANDS [COMMANDS ...]]] [--input] [--space SPACE]\n\nDecision Optimization in WML Interactive, version 1.1.0.\nSubmit and manage Decision Optimization models interactively.\n(c) Copyright Xavier Nodet, 2021\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --wml-cred-file WML_CRED_FILE, -w WML_CRED_FILE\n                        Name of the file from which to read WML credentials. If not specified,\n                        credentials are read from environment variable $DOWML_CREDENTIALS. If no\n                        such variable exists, but variable $DOWML_CREDENTIALS_FILE exists, tries\n                        to read that file.\n  --verbose, -v         Verbose mode. Causes the program to print debugging messages about its\n                        progress. Multiple -v options increase the verbosity. The maximum is 4.\n  --commands [COMMANDS [COMMANDS ...]], -c [COMMANDS [COMMANDS ...]]\n                        Carries out the specified commands. Each command is executed as if it had\n                        been specified at the prompt. The program stops after last command, unless\n                        --input is used.\n  --input, -i           Prompts for new input commands even if some commands have been specified\n                        as arguments using --commands.\n  --space SPACE, -s SPACE\n                        Id of the space to connect to. Takes precedence over the one specified in\n                        the credentials under the 'space_id' key, if any.\n$\n$\n$ dowml -c help type size 'inputs inline' 'solve examples/afiro.mps' jobs wait jobs log 'type docplex' 'solve examples/markshare.py examples/markshare1.mps.gz' wait jobs output 'shell ls -l *-*-*-*-*'\n\nDecision Optimization in WML Interactive, version 1.1.0.\nSubmit and manage Decision Optimization models interactively.\n(c) Copyright Xavier Nodet, 2021\n\nType ? for a list of commands.\n\nMost commands need an argument that can be either a job id, or the number\nof the job, as displayed by the 'jobs' command.  If a command requires a\njob id, but none is specified, the last one is used.\n\n\ndowml> help\n\nDocumented commands (type help <topic>):\n========================================\ncancel  details  help    inputs  log     outputs  size   time  version\ndelete  exit     inline  jobs    output  shell    solve  type  wait\n\ndowml> type\nCurrent model type: cplex. Known types: cplex, cpo, opl, docplex\ndowml> size\nCurrent size: S. Known sizes: S, M, XL\ndowml> inputs inline\ndowml> solve examples/afiro.mps\nJob id: d2bac0fc-6a2f-4340-acb3-561982d5e434\ndowml> jobs\n     #  status      id                                    creation date        type     ver.   size  inputs\n=>   1: queued      d2bac0fc-6a2f-4340-acb3-561982d5e434  2021-08-18 10:42:30  cplex    20.1   S     afiro.mps\ndowml> wait\ndowml> jobs\n     #  status      id                                    creation date        type     ver.   size  inputs\n=>   1: completed   d2bac0fc-6a2f-4340-acb3-561982d5e434  2021-08-18 10:42:30  cplex    20.1   S     afiro.mps\ndowml> log\n[2021-08-18T08:42:31Z, INFO] CPLEX version 20010000\n[2021-08-18T08:42:31Z, WARNING] Changed parameter CPX_PARAM_THREADS from 0 to 1\n[2021-08-18T08:42:31Z, INFO] Param[1,067] = 1\n[2021-08-18T08:42:31Z, INFO] Param[1,130] = UTF-8\n[2021-08-18T08:42:31Z, INFO] Param[1,132] = -1\n[2021-08-18T08:42:31Z, INFO]\n[2021-08-18T08:42:31Z, INFO] Selected objective sense:  MINIMIZE\n[2021-08-18T08:42:31Z, INFO] Selected objective  name:  obj\n[2021-08-18T08:42:31Z, INFO] Selected RHS        name:  rhs\n[2021-08-18T08:42:31Z, INFO] Version identifier: 20.1.0.0 | 2020-11-10 | 9bedb6d68\n[2021-08-18T08:42:31Z, INFO] CPXPARAM_Threads                                 1\n[2021-08-18T08:42:31Z, INFO] CPXPARAM_Output_CloneLog                         -1\n[2021-08-18T08:42:31Z, INFO] CPXPARAM_Read_APIEncoding                        \"UTF-8\"\n[2021-08-18T08:42:31Z, INFO] Tried aggregator 1 time.\n[2021-08-18T08:42:31Z, INFO] LP Presolve eliminated 9 rows and 10 columns.\n[2021-08-18T08:42:31Z, INFO] Aggregator did 7 substitutions.\n[2021-08-18T08:42:31Z, INFO] Reduced LP has 11 rows, 15 columns, and 37 nonzeros.\n[2021-08-18T08:42:31Z, INFO] Presolve time = 0.00 sec. (0.03 ticks)\n[2021-08-18T08:42:31Z, INFO]\n[2021-08-18T08:42:31Z, INFO] Iteration log . . .\n[2021-08-18T08:42:31Z, INFO] Iteration:     1   Scaled dual infeas =             1.200000\n[2021-08-18T08:42:31Z, INFO] Iteration:     5   Dual objective     =          -464.753143\n[2021-08-18T08:42:31Z, INFO] There are no bound infeasibilities.\n[2021-08-18T08:42:31Z, INFO] There are no reduced-cost infeasibilities.\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) Ax-b resid.          = 1.77636e-14 (1.77636e-14)\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) c-B'pi resid.        = 5.55112e-17 (5.55112e-17)\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) |x|                  = 500 (500)\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) |slack|              = 500 (500)\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) |pi|                 = 0.942857 (1.88571)\n[2021-08-18T08:42:31Z, INFO] Max. unscaled (scaled) |red-cost|           = 10 (10)\n[2021-08-18T08:42:31Z, INFO] Condition number of scaled basis            = 1.5e+01\n[2021-08-18T08:42:31Z, INFO] optimal (1)\ndowml> type docplex\ndowml> solve examples/markshare.py examples/markshare1.mps.gz\nJob id: b8c9630f-064f-4943-9b08-b013f40ed875\ndowml> wait\n[2021-08-18T08:42:38Z, WARNING] Support for Python 3.7 is now enabled and used as the default.\n[2021-08-18T08:42:38Z, INFO] Reading markshare1.mps.gz...\n[2021-08-18T08:42:38Z, WARNING] Support for Python 3.7 is now enabled and used as the default.\n[2021-08-18T08:42:38Z, INFO] Reading markshare1.mps.gz...\n[2021-08-18T08:42:38Z, WARNING] Support for Python 3.7 is now enabled and used as the default.\n[2021-08-18T08:42:38Z, INFO] Reading markshare1.mps.gz...\n[2021-08-18T08:42:39Z, INFO]         Nodes                                         Cuts/\n[2021-08-18T08:42:39Z, INFO]    Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap\n[2021-08-18T08:42:39Z, INFO]\n[2021-08-18T08:42:39Z, INFO] *     0+    0                         7286.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO]       0     0        0.0000     6     7286.0000        0.0000       11  100.00%\n[2021-08-18T08:42:39Z, INFO] *     0+    0                          263.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *     0+    0                          230.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO]       0     0        0.0000     7      230.0000      Cuts: 15       15  100.00%\n[2021-08-18T08:42:39Z, INFO]       0     0        0.0000     7      230.0000      Cuts: 16       23  100.00%\n[2021-08-18T08:42:39Z, INFO] *     0+    0                          193.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] Detecting symmetries...\n[2021-08-18T08:42:39Z, INFO]       0     2        0.0000     7      193.0000        0.0000       23  100.00%\n[2021-08-18T08:42:39Z, INFO] Elapsed time = 0.01 sec. (2.91 ticks, tree = 0.01 MB, solutions = 4)\n[2021-08-18T08:42:39Z, INFO] *    70+   59                          166.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *    80+   67                          132.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   190+  155                          111.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   220+  166                           96.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   320+  240                           71.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   420+  305                           67.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   420+  303                           66.0000        0.0000           100.00%\n[2021-08-18T08:42:39Z, INFO] *   491   310      integral     0       38.0000        0.0000     1112  100.00%\n[2021-08-18T08:42:39Z, INFO]\n[2021-08-18T08:42:39Z, INFO] Performing restart 1\n[2021-08-18T08:42:39Z, INFO]\n[2021-08-18T08:42:39Z, INFO] Repeating presolve.\n[2021-08-18T08:42:39Z, INFO] Tried aggregator 1 time.\n[2021-08-18T08:42:39Z, INFO] Reduced MIP has 6 rows, 56 columns, and 306 nonzeros.\n[2021-08-18T08:42:39Z, INFO] Reduced MIP has 50 binaries, 6 generals, 0 SOSs, and 0 indicators.\n[2021-08-18T08:42:39Z, INFO] Presolve time = 0.00 sec. (0.14 ticks)\n[2021-08-18T08:42:39Z, INFO] Tried aggregator 1 time.\n[2021-08-18T08:42:39Z, INFO] Reduced MIP has 6 rows, 56 columns, and 306 nonzeros.\n[2021-08-18T08:42:39Z, INFO] Reduced MIP has 50 binaries, 6 generals, 0 SOSs, and 0 indicators.\n[2021-08-18T08:42:39Z, INFO] Presolve time = 0.00 sec. (0.19 ticks)\n[2021-08-18T08:42:39Z, INFO] Represolve time = 0.00 sec. (0.81 ticks)\n[2021-08-18T08:42:39Z, INFO]    1518     0        0.0000     7       38.0000      Cuts: 17     3422  100.00%\n[2021-08-18T08:42:39Z, INFO]    1518     0        0.0000     8       38.0000      Cuts: 17     3429  100.00%\n[2021-08-18T08:42:39Z, INFO]    1518     0        0.0000     7       38.0000      Cuts: 14     3436  100.00%\n[2021-08-18T08:42:39Z, INFO]    1518     0        0.0000     7       38.0000      Cuts: 14     3441  100.00%\n[2021-08-18T08:42:39Z, INFO]    3918  1669        0.0000     6       38.0000        0.0000     8018  100.00%\n[2021-08-18T08:42:40Z, INFO]    6508  2914        0.0000     6       38.0000        0.0000    14256  100.00%\n[2021-08-18T08:42:40Z, INFO]    9718  4470        0.0000     6       38.0000        0.0000    22692  100.00%\n[2021-08-18T08:42:40Z, INFO] Began writing nodes to disk (directory ./cpxeezZXc created)\n[2021-08-18T08:42:44Z, INFO]   10638  4956       13.6062     6       38.0000        0.0000    25327  100.00%\n[2021-08-18T08:42:45Z, INFO]   13478  6155        0.0000     6       38.0000        0.0000    33717  100.00%\n[2021-08-18T08:42:46Z, INFO]   15515  7089    infeasible             38.0000        0.0000    39668  100.00%\ndowml> jobs\n     #  status      id                                    creation date        type     ver.   size  inputs\n     1: completed   d2bac0fc-6a2f-4340-acb3-561982d5e434  2021-08-18 10:42:30  cplex    20.1   S     afiro.mps\n=>   2: completed   b8c9630f-064f-4943-9b08-b013f40ed875  2021-08-18 10:42:36  docplex  20.1   S     markshare.py, markshare1.mps.gz\ndowml> output\nStoring b8c9630f-064f-4943-9b08-b013f40ed875/solution.json\nStoring b8c9630f-064f-4943-9b08-b013f40ed875/kpis.csv\nStoring b8c9630f-064f-4943-9b08-b013f40ed875/stats.csv\nStoring b8c9630f-064f-4943-9b08-b013f40ed875/log.txt\nStoring b8c9630f-064f-4943-9b08-b013f40ed875/details.json\ndowml> shell ls -l *-*-*-*-*\ntotal 56\n-rw-rw-r--  1 nodet  staff  5445 Aug 18 10:42 details.json\n-rw-rw-r--  1 nodet  staff    39 Aug 18 10:42 kpis.csv\n-rw-rw-r--  1 nodet  staff  7087 Aug 18 10:42 log.txt\n-rw-rw-r--  1 nodet  staff  1770 Aug 18 10:42 solution.json\n-rw-rw-r--  1 nodet  staff   343 Aug 18 10:42 stats.csv\n```\n\n\n## WML credentials\n\nThe DOWML client requires some information in order to connect to the Watson\nMachine Learning service.  Two pieces of information are required, and the others\nare optional.\n\n### Required items\n\n1. The `apikey` is a secret that identifies the IBM Cloud user. One typically creates\n   one key per application or service, in order to be able to revoke them individually\n   if needed.\n   To generate such a key, open https://cloud.ibm.com/iam/apikeys, and click the blue\n   'Create an IBM Cloud API key' on the right.\n\n2. The `url` is the base URL for the REST calls to WML.  The possible values are\n   found in https://cloud.ibm.com/apidocs/machine-learning, and depend on which\n   region you want to use.\n\n### Optional items\n\nWatson Studio and Watson Machine Learning use _spaces_ to group together, and\nisolate from each other, the assets that belong to a single project.  These assets \ninclude the data files submitted, the results of the jobs, and the _deployments_\n(software and hardware configurations) that run these jobs.\n\nThe DOWML client will connect to the space specified by the user using\neither the `--space` command-line argument or the `space_id` item in the credentials.\nIf neither of these are specified, the client will look for a space named \n_DOWMLClient-space_, and will try to create such a space if one doesn't exist.\nTo create a new space, the DOWML client will need both `cos_resource_crn` and\n`ml_instance_crn` to have been specified in the credentials.\n\n3. `space_id`: identifier of an existing space to connect to.  Navigate to the \n   'Spaces' tab of your Watson Studio site (e.g. \n   https://eu-de.dataplatform.cloud.ibm.com/ml-runtime/spaces if you are using\n   the instance in Germany), right-click on the name of an existing space to\n   copy the link. The id of the space is the string of numbers, letters and dashes\n   between the last `/` and the `?`.\n\n3. `cos_resource_crn`: WML needs to store some data in a Cloud Object Storage \n   instance.  Open\n   https://cloud.ibm.com/resources and locate the 'Storage' section.  Create an\n   instance of the Cloud Object Storage service if needed. Once it's listed on\n   the resource page, click anywhere on the line for that service, except on its\n   name.  This will open a pane on the right which lists the CRN.  Click on the\n   symbol at the right to copy this information.  This item is required only for \n   the DOWML client to be able to create a space.  If you specified a `space_id`,\n   it is not required.\n   \n4. `ml_instance_crn`: similarly, you need to identify an instance of Machine \n   Learning service to use\n   to solve your jobs.  In the same page https://cloud.ibm.com/resources, open the\n   'Services' section.  The 'Product' columns tells you the type of service.  If\n   you don't have a 'Machine Learning' instance already, create one.  Then click\n   on the corresponding line anywhere except on the name, and copy the CRN displayed\n   in the pane that open on the right.  This item is required only for \n   the DOWML client to be able to create a space.  If you specified a `space_id`,\n   it is not required.\n\n## Using data assets in Watson Studio\n\nThe DOWML library has two modes of operation with respect to sending the models\nto the WML service: inline data, or using data assets in Watson Studio.  By default,\ndata assets are used. This can be changed with the `inline` command.\n\nWith inline data, the model is sent directly to the WML service in the _solve_\nrequest itself.  This is the simplest, but it has a number of drawbacks:\n\n- Sending a large model may take a long time, because of network throughput.  Sending\na very large REST request is not at all guaranteed to succeed.\n\n- When solving several times the same model (e.g. to evaluate different parameters),\nthe model has to be sent each time.\n\n- In order to display the names of the files that were sent, the _jobs_ command\nneeds to request this information, and it comes with the content of the files\n  themselves.  In other words, every _jobs_ command requires downloading the content\n  of all the files for all the jobs that exist in the space.\n\nUsing data assets in Watson Studio as an intermediate step alleviate all these issues:\n\n- Once the model has been uploaded to Watson Studio, it will be reused for\nsubsequent jobs without the need to upload it again.\n\n- The job requests refer to the files indirectly, via URLs.  Therefore, they don't\ntake much space, and listing the jobs doesn't imply to download the content of the\n  files.\n\n- Uploading to Watson Studio is done through specialized code that doesn't just send a single\nrequest.  Rather, it divides the upload in multiple reasonably sized chunks that each\n  are uploaded individually, with restart if necessary.  Uploading big files is\n  therefore much less prone to failure.\n\n\nUser-visible changes\n--------------------\n\nV1.1.0:\n\n- [#3]  Accept 'delete 2-5' to delete a range of jobs\n- [#25] Replace 'inline' command (resp. attribute) in the Interactive\n        (resp. library) with 'inputs'.  Deprecate 'inline'.\n- [#4]  Introduce 'outputs' command to change the type of\n        outputs from inline to data-assets.\n- [#21] Read credentials from file $DOWML_CREDENTIALS_FILE\n        as last resort.\n\n\nV1.0.0:\n\n- Packaging-only changes\n\n\nV0.9.0, first release on PyPi:\n\n- [#17] DOWMLLib now returns tabular outputs as dataframes by default.\n        Also replace the now-deprecated csv_as_dataframe with tabular_as_csv\n- [#18] DOWMLLib.get_output returns a dict instead of a list\n- [#16] 'output' stores files in subdirectories\n- [#12] Add 'shell' command in the Interactive\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nodet/dowml",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dowml",
    "package_url": "https://pypi.org/project/dowml/",
    "platform": "",
    "project_url": "https://pypi.org/project/dowml/",
    "project_urls": {
      "Homepage": "https://github.com/nodet/dowml"
    },
    "release_url": "https://pypi.org/project/dowml/1.1.0.4/",
    "requires_dist": [
      "ibm-watson-machine-learning (>=1.0.95.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "Submit existing Decision Optimization instances to WML",
    "version": "1.1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14271566,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02d3b5d2397ebccc817beddd0915d8a03e2c12c505fd512b9d6d1763a36ab86d",
        "md5": "86422af1b7f295e0c91d5996c7517860",
        "sha256": "22e0674a9d24f147566808ec4fca43e0249017ed1a8f5c313c07f591ebc0d0b4"
      },
      "downloads": -1,
      "filename": "dowml-1.1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86422af1b7f295e0c91d5996c7517860",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 28499,
      "upload_time": "2021-09-15T15:09:59",
      "upload_time_iso_8601": "2021-09-15T15:09:59.187020Z",
      "url": "https://files.pythonhosted.org/packages/02/d3/b5d2397ebccc817beddd0915d8a03e2c12c505fd512b9d6d1763a36ab86d/dowml-1.1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de900cfe21a89fc1f3f0aa7c537d93db32bcf23e6a850556da18eeb358315ce7",
        "md5": "539c06b475e63c118a211d7d86e34634",
        "sha256": "83d3fcdd280f1be990873219dbf318ca2d3a5f9dd5b3ac8241c76cdbeef4b639"
      },
      "downloads": -1,
      "filename": "dowml-1.1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "539c06b475e63c118a211d7d86e34634",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 33389,
      "upload_time": "2021-09-15T15:10:02",
      "upload_time_iso_8601": "2021-09-15T15:10:02.035069Z",
      "url": "https://files.pythonhosted.org/packages/de/90/0cfe21a89fc1f3f0aa7c537d93db32bcf23e6a850556da18eeb358315ce7/dowml-1.1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}