{
  "info": {
    "author": "Marco",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Meetup-API\nUse the combined power of the official Meetup API and a web scraper to implement Meetup into your project.\n\nWant to support the development financially? Donations are always welcomed! \n[Click here to donate on Liberapay](https://liberapay.com/marcoEDU)\n\n[<img src=\"http://img.shields.io/liberapay/receives/marcoEDU.svg?logo=liberapay\">](https://liberapay.com/marcoEDU)\n\n## Usage\n\n### API credentials optional\n\n#### Meetup().events()\n\nBased on [https://www.meetup.com/meetup_api/docs/:urlname/events/#list](https://www.meetup.com/meetup_api/docs/:urlname/events/#list)\n\nMeetup().events() will return a JSON with events from the group you enter. By default it returns the first 10.000 events of the group.\n\nRequired inputs for Meetup():\n```\ngroupname = str\n```\n\nOptional inputs for .events():\n```\nresults_per_page = int\npages = 'all' or int\nmaximum_num_events = int\nfields = list\n```\n\n### API credentials required\n\n#### Meetup().create()\n\nBased on [https://www.meetup.com/meetup_api/docs/:urlname/events/#create](https://www.meetup.com/meetup_api/docs/:urlname/events/#create)\n\nIf successfull, Meetup().create() will return the event it was given, but with the meetup link as event.url_meetup_event.\nIf the request fails, Meetup().create returns None.\n\nRequired inputs for Meetup():\n```\ngroupname = str\nemail = str, (from your meetup account, for authentication)\npassword = str (from your meetup account, for authentication)\nclient_id = str\nclient_secret = str\nredirect_uri = str\n```\n\nOptional inputs for Meetup():\n```\ndefault_space_name = str\ndefault_space_address_street = str\ndefault_space_address_zip = str\ndefault_space_address_city = str\ndefault_space_address_countrycode = str\ndefault_space_how_to_find_us = str\ndefault_space_timezonestring = str\n```\n\nRequired inputs for .create():\n```\nevent = Event class (with fields \n    'str_name_en_US',\n    'text_description_en_US',\n    'int_minutes_duration',\n    'float_lat',\n    'float_lon',\n    'str_name_en_US',\n    'int_UNIXtime_event_start',\n    'url_meetup_event' \n    and Event.save() function)\n```\n\nOptional inputs for .create():\n```\nannounce = boolean (announces the event to group members on meetup)\npublish_status = 'draft' or 'published' (default is 'draft')\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marcoEDU/Meetup-API",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MeetupAPI",
    "package_url": "https://pypi.org/project/MeetupAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/MeetupAPI/",
    "project_urls": {
      "Homepage": "https://github.com/marcoEDU/Meetup-API"
    },
    "release_url": "https://pypi.org/project/MeetupAPI/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Use the combined power of the official Meetup API and a web scraper to implement Meetup into your project.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7534363,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc05ea7b66f82bf3a60c794a5a12ed6d488c278c772d144eca8ff5f0d312a959",
        "md5": "1ee3eedfcd39e75efc9820d37338c1aa",
        "sha256": "1f4e54494e004624fd2684fcdaf001282c0f65bb384133161b7f7d44abb44b80"
      },
      "downloads": -1,
      "filename": "MeetupAPI-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ee3eedfcd39e75efc9820d37338c1aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12611,
      "upload_time": "2020-04-13T17:38:12",
      "upload_time_iso_8601": "2020-04-13T17:38:12.952639Z",
      "url": "https://files.pythonhosted.org/packages/cc/05/ea7b66f82bf3a60c794a5a12ed6d488c278c772d144eca8ff5f0d312a959/MeetupAPI-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffcc9eb61c556b6d8f821ed498b7ccdd01a4636a9c76c068cad29074b5f8f2a4",
        "md5": "472fb0b5948fcc7b19d8b420ad22889b",
        "sha256": "7b6fd8ce4ce53e1ed944ec9464c1da3286611cc8e81c9d0b5276af4a45aad377"
      },
      "downloads": -1,
      "filename": "MeetupAPI-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "472fb0b5948fcc7b19d8b420ad22889b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7740,
      "upload_time": "2020-04-13T17:38:15",
      "upload_time_iso_8601": "2020-04-13T17:38:15.053272Z",
      "url": "https://files.pythonhosted.org/packages/ff/cc/9eb61c556b6d8f821ed498b7ccdd01a4636a9c76c068cad29074b5f8f2a4/MeetupAPI-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}