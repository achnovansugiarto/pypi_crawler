{
  "info": {
    "author": "Johannes Gorset",
    "author_email": "jgorset@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image::  https://raw.githubusercontent.com/jgorset/django-kronos/master/docs/banner.png\n\n.. image:: https://coveralls.io/repos/github/jgorset/django-kronos/badge.svg?branch=master\n    :target: https://coveralls.io/github/jgorset/django-kronos?branch=master\n.. image:: https://travis-ci.org/jgorset/django-kronos.svg?branch=master\n    :target: https://travis-ci.org/jgorset/django-kronos\n.. image:: https://img.shields.io/github/license/jgorset/django-kronos.svg\n    :target: https://raw.githubusercontent.com/jgorset/django-kronos/master/LICENSE\n.. image:: https://img.shields.io/pypi/v/django-kronos.svg\n    :target: https://pypi.python.org/pypi/django-kronos/\n\nUsage\n-----\n\nDefine tasks\n^^^^^^^^^^^^\n\nKronos collects tasks from ``cron`` modules in your project root and each of your applications::\n\n    # app/cron.py\n\n    import kronos\n    import random\n\n    @kronos.register('0 0 * * *')\n    def complain():\n        complaints = [\n            \"I forgot to migrate our applications's cron jobs to our new server! Darn!\",\n            \"I'm out of complaints! Damnit!\"\n        ]\n\n        print random.choice(complaints)\n\nKronos works with Django management commands, too::\n\n    # app/management/commands/task.py\n\n    from django.core.management.base import BaseCommand\n\n    import kronos\n\n    @kronos.register('0 0 * * *')\n    class Command(BaseCommand):\n        def handle(self, *args, **options):\n            print('Hello, world!')\n\nIf your management command accepts arguments, just pass them in the decorator::\n\n    # app/management/commands/task.py\n\n    from django.core.management.base import BaseCommand\n\n    import kronos\n\n    @kronos.register('0 0 * * *', args={'-l': 'nb'})\n    class Command(BaseCommand):\n\n        def add_arguments(self, parser):\n            parser.add_argument(\n                '-l', '--language',\n                dest='language',\n                type=str,\n                default='en',\n            )\n\n        def handle(self, *args, **options):\n            if options['language'] == 'en':\n              print('Hello, world!')\n\n            if options['language'] == 'nb':\n              print('Hei, verden!')\n\n\nRun tasks manually\n^^^^^^^^^^^^^^^^^^\n\n::\n\n    $ python manage.py runtask complain\n    I forgot to migrate our applications's cron jobs to our new server! Darn!\n\nKeep in mind that if the registered task is a django command you have to run it\nin the normal way::\n\n    $ python manage.py task\n\n\nList all registered tasks\n^^^^^^^^^^^^^^^^^^\n\n::\n\n    $ python manage.py showtasks\n    * List of tasks registered in Kronos *\n    >> Kronos tasks\n        >> my_task_one\n        >> my_task_two\n    >> Django tasks\n        >> my_django_task\n\n\nRegister tasks with cron\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    $ python manage.py installtasks\n    Installed 1 task.\n\nYou can review the crontab with a ``crontab -l`` command::\n\n    $ crontab -l\n    0 0 * * * /usr/bin/python /path/to/manage.py runtask complain --settings=myprpoject.settings $KRONOS_BREAD_CRUMB\n    0 0 * * * /usr/bin/python /path/to/manage.py task --settings=myprpoject.settings $KRONOS_BREAD_CRUMB\n\nUsually this line will work pretty well for you, but there can be some rare\ncases when it requires modification. You can achieve it with a number of\nsettings variables used by kronos:\n\nKRONOS_PYTHON\n    Python interpreter to build a crontab line (defaults to the interpreter you used to\n    invoke the management command).\n\nKRONOS_MANAGE\n    Management command to build a crontab line (defaults to ``manage.py`` in the current\n    working directory).\n\nKRONOS_PYTHONPATH\n    Extra path which will be added as a ``--pythonpath`` option to the management command.\n\nKRONOS_POSTFIX\n    Extra string added at the end of the command. For dirty thinks like ``> /dev/null 2>&1``\n\nKRONOS_PREFIX\n    Extra string added at the beginning of the command. For dirty thinks like ``source /path/to/env &&``.\n    If you use the ``virtualenv``, you can add the environment path by ``echo \"KRONOS_PREFIX = 'source `echo $VIRTUAL_ENV`/bin/activate && '\" >> myprpoject/settings.py``\n\nDefine these variables in your ``settings.py`` file if you wish to alter crontab lines.\n\nThe env variable ``$KRONOS_BREAD_CRUMB`` is defined to detect which tasks have to be deleted after\nbeing installed.\n\nInstallation\n------------\n\n::\n\n    $ pip install django-kronos\n\n... and add ``kronos`` to ``INSTALLED_APPS``.\n\n\nContribute\n----------\n\n* Fork the repository.\n* Do your thing.\n* Open a pull request.\n* Receive cake.\n\nI love you\n----------\n\nJohannes Gorset made this. You should `tweet me <http://twitter.com/jgorset>`_ if you can't get it\nto work. In fact, you should tweet me anyway.\n\n\n1.0.0\n+++++\n\n* Django 1.10 support.\n\n0.9.0\n+++++\n\n* Fixed a bug that caused Kronos to crash if the settings module resided outside\n  of the project directory.\n* Fixed a bug that caused Kronos to remove other crontabs upon uninstalling.\n\n0.8.0\n+++++\n\n* Kronos is now even more compatible with Python 3.\n* Kronos is no longer compatible with Python 2.6.\n* Kronos is no longer compatible with Django 1.7.\n* You may now prefix commands with ``KRONOS_PREFIX``.\n* Fixed an issue where Kronos would not pick up on AppConfig apps.\n\n0.7.0\n+++++\n\n* You may now pass arguments to Django management commands registered with Kronos.\n* Kronos is now compatible with Python 3.\n* Kronos will now log errors when it fails to load tasks.\n\n0.6.0\n+++++\n\n* You may now register Django management commands.\n\n0.5.0\n+++++\n\n* You may now list commands with ``python manage.py showtasks``.\n\n0.4.0\n+++++\n\n* You may now postfix commands with ``KRONOS_POSTFIX``.\n\n0.3.0\n+++++\n\n* You may now customize the interpreter, management path and python path for tasks with the ``KRONOS_PYTHON``,\n  ``KRONOS_MANAGE`` and ``KRONOS_PYTHONPATH`` settings, respectively.\n\n0.2.3\n+++++\n\n* Kronos now supports Django 1.4-style projects.\n* Fixed a bug that caused installation to fail for users that didn't already have a crontab.\n\n0.2.2\n+++++\n\n* Fixed a bug that caused unclosed single quotes in the crontab to raise a ValueError\n\n0.2.1\n+++++\n\n* Fixed a bug that caused 'cron'-modules in the project root to be ignored.\n\n0.2.0\n+++++\n\n* Kronos will now collect tasks from a 'cron' module in the project root.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jgorset/django-kronos",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-kronos",
    "package_url": "https://pypi.org/project/django-kronos/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-kronos/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/jgorset/django-kronos"
    },
    "release_url": "https://pypi.org/project/django-kronos/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Kronos is a Django application that makes it easy to define and schedule tasks with cron.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2298305,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e9015b99070666da99c3904c0ad7b66b263a7fd678cf0c2764810435ab18ed6",
        "md5": "e843e6a8fbce56546f362780777f92ae",
        "sha256": "04899ccaaa36d46f7d171efc3b5da9ac58596cb52e53c6e80c5c86b72f2b23b8"
      },
      "downloads": -1,
      "filename": "django-kronos-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e843e6a8fbce56546f362780777f92ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10824,
      "upload_time": "2016-08-23T17:27:40",
      "upload_time_iso_8601": "2016-08-23T17:27:40.087640Z",
      "url": "https://files.pythonhosted.org/packages/4e/90/15b99070666da99c3904c0ad7b66b263a7fd678cf0c2764810435ab18ed6/django-kronos-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}