{
  "info": {
    "author": "Harry T. J. Bevins",
    "author_email": "htjb2@cam.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "==================================================\nmaxsmooth: Derivative Constrained Function Fitting\n==================================================\n\nIntroduction\n------------\n\n:maxsmooth: Derivative Constrained Function Fitting\n:Author: Harry Thomas Jones Bevins\n:Version: 1.1.0\n:Homepage: https://github.com/htjb/maxsmooth\n:Documentation: https://maxsmooth.readthedocs.io/\n\n.. image:: https://travis-ci.com/htjb/maxsmooth.svg?branch=master\n   :target: https://travis-ci.com/htjb/maxsmooth\n   :alt: Build Status\n.. image:: https://codecov.io/gh/htjb/maxsmooth/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/htjb/maxsmooth\n   :alt: Test Coverage Status\n.. image:: https://readthedocs.org/projects/maxsmooth/badge/?version=latest\n   :target: https://maxsmooth.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. image:: https://badge.fury.io/py/maxsmooth.svg\n   :target: https://badge.fury.io/py/maxsmooth\n   :alt: PyPI location\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n   :target: https://github.com/htjb/maxsmooth/blob/master/LICENSE\n   :alt: License information\n\nDerivative Constrained Functions and ``maxsmooth``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``maxsmooth`` is an open source software for fitting derivative constrained\nfunctions, DCFs such as Maximally Smooth Functions\n, MSFs to data sets. MSFs are functions for which there are no zero\ncrossings in derivatives of order m >= 2 within the domain of interest.\nThey are designed to prevent the loss of\nsignals when fitting out dominant smooth foregrounds or large magnitude signals that\nmask signals of interest. Here \"smooth\" means that the foregrounds follow power\nlaw structures and do not feature turning points in the band of interest.\nIn some cases DCFs can be used to\nhighlight systematics in the data. More generally for DCFs the minimum\nconstrained derivative order, m can take on any value or a set of\nspecific high order derivatives can be constrained.\n\n``maxsmooth`` uses quadratic programming implemented with ``CVXOPT`` to fit\ndata subject to a fixed linear constraint, Ga <= 0, where the product\nGa is a matrix of derivatives.\nThe constraint on an MSF are not explicitly\nlinear and each constrained derivative can be positive or negative.\n``maxsmooth`` is, however, designed to test the <= 0 constraint multiplied\nby a positive or negative sign. Where a positive sign in front of the m\\ :sup:`th`\norder derivative forces the derivative\nto be negative for all x. For an N\\ :sup:`th` order polynomial ``maxsmooth`` can test\nevery available sign combination but by default it implements a sign navigating algorithm.\nThis is detailed in the ``maxsmooth`` paper (see citation), is summarized\nbelow and in the software documentation.\n\nThe available sign combinations act as discrete parameter spaces all with\nglobal minima and ``maxsmooth`` is capable of finding the minimum of these global\nminima by implementing a cascading algorithm which is followed by a directional\nexploration. The cascading routine typically finds an approximate to the global\nminimum and then the directional exploration is a complete search\nof the sign combinations in the neighbourhood\nof that minimum. The searched region is limited by factors\nthat encapsulate enough of the neighbourhood to confidently return the global minimum.\n\nThe sign navigating method is reliant on the problem being \"well defined\" but this\nis not always the case and it is in these instances it is possible to run the code testing\nevery available sign combination on the constrained derivatives. For a definition of\na \"well defined\" problem and it's counter part see the ``maxsmooth`` paper and the\ndocumentation.\n\n``maxsmooth`` features a built in library of DCFs or\nallows the user to define their own. The addition of possible inflection points\nand zero crossings in higher order derivatives is also available to the user.\nThe software has been designed with these two\napplications in mind and is a simple interface.\n\nExample Fit\n~~~~~~~~~~~\n\nShown below is an example MSF fit performed with ``maxsmooth`` to data that\nfollows a y = x\\ :sup:`-2.5` power law with a randomly generated Gaussian\nnoise with a standard deviation 0.02. The top panel shows the data and the\nbottom panel shows the residual\nafter subtraction of the MSF fit. The software using one of the built in DCF models\nand fitting normalised data is shown to be capable of recovering the\nrandom noise.\n\n.. image:: https://github.com/htjb/maxsmooth/raw/master/docs/images/README.png\n  :width: 400\n  :align: center\n\nInstallation\n~~~~~~~~~~~~\n\nThe software can be pip installed from the PYPI repository like so,\n\n.. code::\n\n  pip install maxsmooth\n\nor alternatively it can be installed from the git repository via,\n\n.. code::\n\n  git clone https://github.com/htjb/maxsmooth.git\n  cd maxsmooth\n  python setup.py install --user\n\nLicence and Citation\n~~~~~~~~~~~~~~~~~~~~\n\nThe software is free to use on the MIT open source license. However if you use\nthe software for academic purposes we request that you cite the ``maxsmooth``\npaper.\n\n  H. T. J. Bevins et al., `maxsmooth: Rapid maximally smooth function fitting with\n  applications in Global 21-cm cosmology <https://arxiv.org/abs/2007.14970>`__,\n  arXiv e-print, arXiv:2007.14970, 2020.\n\nBelow is the BibTex citation,\n\n.. code:: bibtex\n\n  @ARTICLE{maxsmooth,\n       author = {{Bevins}, H.~T.~J. and {Handley}, W.~J. and {Fialkov}, A. and\n         {de Lera Acedo}, E. and {Greenhill}, L.~J. and {Price}, D.~C.},\n        title = \"{maxsmooth: Rapid maximally smooth function fitting with applications in Global 21-cm cosmology}\",\n      journal = {arXiv e-prints},\n         year = 2020,\n        month = jul,\n          eid = {arXiv:2007.14970},\n        pages = {arXiv:2007.14970},\n  archivePrefix = {arXiv},\n       eprint = {2007.14970},\n  primaryClass = {astro-ph.CO},\n       adsurl = {https://ui.adsabs.harvard.edu/abs/2020arXiv200714970B},\n      adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n  }\n\nDocumentation\n~~~~~~~~~~~~~\nThe documentation is available at: https://maxsmooth.readthedocs.io/\n\nAlternatively, it can be compiled locally from the git repository and requires\n`sphinx <https://pypi.org/project/Sphinx/>`__ to be installed.\nYou can do this via:\n\n.. code::\n\n  cd docs/\n  make SOURCEDIR=source html\n\nor\n\n.. code::\n\n  cd docs/\n  make SOURCEDIR=source latexpdf\n\nThe resultant docs can be found in the docs/_build/html/ and docs/_build/latex/\nrespectively.\n\nRequirements\n~~~~~~~~~~~~\n\nTo run the code you will need the following additional packages:\n\n- `matplotlib <https://pypi.org/project/matplotlib/>`__\n- `numpy <https://pypi.org/project/numpy/>`__\n- `CVXOPT <https://pypi.org/project/cvxopt/>`__\n- `scipy <https://pypi.org/project/scipy/>`__\n- `progressbar <https://pypi.org/project/progressbar/>`__\n\nTo compile the documentation locally you will need:\n\n- `sphinx <https://pypi.org/project/Sphinx/>`__\n- `numpydoc <https://pypi.org/project/numpydoc/>`__\n\nTo run the test suit you will need:\n\n- `pytest <https://pypi.org/project/pytest/>`__\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/htjb/maxsmooth",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maxsmooth",
    "package_url": "https://pypi.org/project/maxsmooth/",
    "platform": "",
    "project_url": "https://pypi.org/project/maxsmooth/",
    "project_urls": {
      "Homepage": "https://github.com/htjb/maxsmooth"
    },
    "release_url": "https://pypi.org/project/maxsmooth/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "maxsmooth:Derivative Constrained Function Fitting",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11529534,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e7bee8d9157a7233d7e2a7913b4bfc08b405ae4d4e41f73b259a92325aa6ad8",
        "md5": "8781e4181fff70efc51fd61affb4027d",
        "sha256": "d9b6e967e6a9146f1c9399534e8ef29f776e31aad55309ab6df383a1cc1977d7"
      },
      "downloads": -1,
      "filename": "maxsmooth-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8781e4181fff70efc51fd61affb4027d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26024,
      "upload_time": "2020-07-30T17:16:18",
      "upload_time_iso_8601": "2020-07-30T17:16:18.513904Z",
      "url": "https://files.pythonhosted.org/packages/2e/7b/ee8d9157a7233d7e2a7913b4bfc08b405ae4d4e41f73b259a92325aa6ad8/maxsmooth-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}