{
  "info": {
    "author": "microprediction",
    "author_email": "info@microprediction.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\n# microprediction [docs](https://microprediction.github.io/microprediction/), [client](https://github.com/microprediction/microprediction) and [beer money](https://www.microprediction.org/leaderboard.html) ![deploy](https://github.com/microprediction/microprediction/workflows/deploy/badge.svg) \nPackages and a platform for effecting autonomous prediction using lightweight markets instead of models because:\n\n - *Markets are better at prediction than models* ([discuss](https://www.linkedin.com/posts/petercotton_tldr-activity-6983896509490610176-JTJB?utm_source=share&utm_medium=member_desktop)) - just harder to create and wield, until now. \n - Small \"microprediction\" markets ([glossary](https://microprediction.github.io/microprediction/glossary)) are surprisingly accurate ([prove me wrong](https://github.com/microprediction/building_an_open_ai_network/discussions/19)).\n\n### Provocations (more in the [book](https://mitpress.mit.edu/books/microprediction))\n\n- No timeseries model should ever be called SOTA again ([discuss](https://www.linkedin.com/posts/petercotton_timeseries-forecasting-timeseriesanalysis-activity-6987561356862353408-iy2Z?utm_source=share&utm_medium=member_desktop)).  \n- Prediction capability shouldn't be limited by the capabilities of a single mind, algorithm or company ([discuss](https://www.linkedin.com/posts/petercotton_machinelearning-reinforcementlearning-datascience-activity-6992560556863803392-FOM6?utm_source=share&utm_medium=member_desktop)) \n- Somebody's algorithm or data will find signal in your model residuals, someday ([instructions](https://microprediction.github.io/microprediction/residuals)).\n- Most of \"AI\" will be done analogously, eventually, though this will take work. See the [book](https://mitpress.mit.edu/books/microprediction) or [challenge me](https://github.com/microprediction/building_an_open_ai_network/discussions).\n\n \n ![](https://github.com/microprediction/microprediction/blob/master/docs/assets/images/cotton_microprediction_3d_down.png)\n\n## Try it out ([docs](https://microprediction.github.io/microprediction/) and live [help](https://microprediction.github.io/microprediction/meet.html))\n\nIf you would like to see how *easy* it is to wield a *new kind of market* to effect turnkey distributional prediction, see the [docs](https://microprediction.github.io/microprediction/) and, therein, observe that you can receive live [help](https://microprediction.github.io/microprediction/meet.html) getting started on Fridays, or in the [slack channel](https://microprediction.github.io/microprediction/slack.html). Key points:\n\n - The microprediction platform makes it [pretty trivial](https://microprediction.github.io/microprediction/publish.html) to initiate your own bespoke market.\n - [Many algorithms](https://www.microprediction.org/leaderboard.html) already competing to predict [other streams](https://www.microprediction.org/browse_streams.html) can easily predict yours too. \n - Many more will do so in the future. Anyone can [launch a new algorithm](https://microprediction.github.io/microprediction/predict.html) using anything they like in the Julia, R or Python [ecosystem](https://www.microprediction.com/blog/popular-timeseries-packages) for example (it's a data interface). \n - If you have a CSV with historical data (one column per variable) you can just send it to me (chat in [slack](https://microprediction.github.io/microprediction/slack.html) say).   \n\n# The [TimeMachines](https://github.com/microprediction/timemachines), [Precise](https://github.com/microprediction/precise), and [HumpDay](https://github.com/microprediction/humpday) packages \n\nI also maintain three benchmarking packages to help me, and maybe you, surf the open-source wave. \n\n| Topic                  | Package           | Elo ratings | Methods                                                                                                                                                                                  | Data sources | \n|------------------------|-------------------|-------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------| \n| Univariate time-series | [timemachines](https://github.com/microprediction/timemachines)  | [Timeseries Elo ratings](https://microprediction.github.io/timeseries-elo-ratings/html_leaderboards/univariate-k_003.html) | Most popular packages ([list](https://github.com/microprediction/timemachines/tree/main/timemachines/skaters))                                                                           | [microprediction streams](https://www.microprediction.org/browse_streams.html)                                      |\n| Global derivative-free optimization | [humpday](https://github.com/microprediction/humpday) |  [Optimizer Elo ratings](https://microprediction.github.io/optimizer-elo-ratings/html_leaderboards/overall.html) | Most popular packages ([list](https://github.com/microprediction/humpday/tree/main/humpday/optimizers))                                                                                  | A mix of classic and new [objectives](https://github.com/microprediction/humpday/tree/main/humpday/objectives)      |\n| Covariance, precision, correlation | [precise](https://github.com/microprediction/precise) | See [notebooks](https://github.com/microprediction/precise/tree/main/examples_colab_notebooks) | [cov](https://github.com/microprediction/precise/blob/main/LISTING_OF_COV_SKATERS.md) and [portfolio](https://github.com/microprediction/precise/blob/main/LISTING_OF_MANAGERS.md) lists |Stocks, electricity etc                                                                                              | \n\nThese packages aspire to advance online autonomous prediction in a small way, but also help me notice if anyone else does.  \n\n### How [microprediction.org](https://www.microprediction.org/browse_streams.html) \"house\" algorithms use these packages\nAdvances in time-series prediction funnel down into microprediction algorithms in various ways:\n\n1. The \"[/skaters](https://github.com/microprediction/timemachines/tree/main/timemachines/skaters)\" provide canonical, single-line of code access to functionality drawn from packages like [river](https://github.com/online-ml/river), [pydlm](https://github.com/wwrechard/pydlm), [tbats](https://github.com/intive-DataScience/tbats), [pmdarima](http://alkaline-ml.com/pmdarima/), [statsmodels.tsa](https://www.statsmodels.org/stable/tsa.html), [neuralprophet](https://neuralprophet.com/), Facebook [Prophet](https://facebook.github.io/prophet/), \n   Uber's [orbit](https://eng.uber.com/orbit/), Facebook's [greykite](https://engineering.linkedin.com/blog/2021/greykite--a-flexible--intuitive--and-fast-forecasting-library) and more. \n   \n2. The [StreamSkater](https://microprediction.github.io/microprediction/predict-using-python-streamskater.html) makes it easy to use any \"skater\". \n\n3. Choices are sometimes advised by [Elo ratings](https://microprediction.github.io/timeseries-elo-ratings/html_leaderboards/special-k_003.html), but anyone can do what they want. \n\n4. It's not too hard to use my [HumpDay](https://github.com/microprediction/humpday) package for offline meta-param tweaking, et cetera. \n\n5. It's not too hard to use my [precise](https://github.com/microprediction/precise) package for online ensembling. \n\nThere are other ways. Look for CODE badges on [leaderboards](https://www.microprediction.org/leaderboard.html).  \n\n### Some microprediction platform repos\n\n- The [muid](https://github.com/microprediction/muid) identifier package is explained in this [video](https://vimeo.com/397352413). \n- [microconventions](https://github.com/microprediction/microconventions) captures things common to client and server, and may answer many of your more specific questions about prediction horizons, et cetera.  \n- [rediz](https://github.com/microprediction/rediz) contains server side code. For the brave. \n- There are other rats and mice like [getjson](https://github.com/microprediction/getjson), [runthis](https://github.com/microprediction/runthis) and [momentum](https://github.com/microprediction/momentum).  \n\n# Some of my other packages: \n\n- [winning](https://github.com/microprediction/winning) - A recently published fast algorithm for inferring relative ability from win probability. \n- [embarrassingly](https://github.com/microprediction/embarrassingly) - A speculative approach to robust optimization that sends impure objective functions to optimizers.\n- [pandemic](https://github.com/microprediction/pandemic) - Ornstein-Uhlenbeck epidemic simulation (related [paper](https://arxiv.org/abs/2005.10311))\n- [firstdown](https://github.com/microprediction/firstdown) - The repo that aspires to ruin the great game of football. See Wilmott [paper](https://github.com/microprediction/firstdown/blob/main/wilmott_paper/44-49_Cotton_PDF5_Jan22%20(2).pdf).  \n- [m6](https://github.com/microprediction/m6) - Illustrates fast numerical rank probability calculations, using [winning](https://github.com/microprediction/winning). However since the rules changed, this isn't that useful for M6 anymore. The [precise](https://github.com/microprediction/precise) package is way more useful, and put one person on the podium! \n\n\n# About me ([home](https://github.com/microprediction/home))\n  - [blog](https://microprediction.medium.com)\n  - [slack channel](https://microprediction.github.io/microprediction/slack.html) \n  - [office hours](https://microprediction.github.io/microprediction/meet.html)\n  - [papers, articles etc](https://github.com/microprediction/home)\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/microprediction/microprediction",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microprediction",
    "package_url": "https://pypi.org/project/microprediction/",
    "platform": null,
    "project_url": "https://pypi.org/project/microprediction/",
    "project_urls": {
      "Homepage": "https://github.com/microprediction/microprediction"
    },
    "release_url": "https://pypi.org/project/microprediction/1.1.7/",
    "requires_dist": [
      "numpy (>=1.20.1)",
      "pandas",
      "contexttimer",
      "requests",
      "getjson (>=2.0.0)",
      "microconventions (>=1.0.0)",
      "pytz (>=2021.3)",
      "pycoingecko",
      "tdigest",
      "genson",
      "hyperopt",
      "scikit-learn",
      "statsmodels",
      "copulas"
    ],
    "requires_python": "",
    "summary": "Client for www.microprediction.org turnkey community prediction",
    "version": "1.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16865327,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49eb0a7bd56e01236ef0e51c64702da29c5b7cae827563082a5c658bbc5852b2",
        "md5": "11d5e412bed904e0b7cbff104a2e32cb",
        "sha256": "ebd811584f05b44757524c4d350e2c15d823529e7197c3164fc0c9c7eeb8c9f8"
      },
      "downloads": -1,
      "filename": "microprediction-1.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11d5e412bed904e0b7cbff104a2e32cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 77511,
      "upload_time": "2022-11-09T16:44:29",
      "upload_time_iso_8601": "2022-11-09T16:44:29.740205Z",
      "url": "https://files.pythonhosted.org/packages/49/eb/0a7bd56e01236ef0e51c64702da29c5b7cae827563082a5c658bbc5852b2/microprediction-1.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1eef32eeeeccb81502afb926b7f9a7c45ab5eaecf37e84d05d2e2f6d895da771",
        "md5": "873ff3e97e9eb33bb93aadaf8acc1e2a",
        "sha256": "419455f66b81e5824f2aebc83b7269da6d0f082352cc1730a3e0e9151b35469f"
      },
      "downloads": -1,
      "filename": "microprediction-1.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "873ff3e97e9eb33bb93aadaf8acc1e2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 61144,
      "upload_time": "2022-11-09T16:44:31",
      "upload_time_iso_8601": "2022-11-09T16:44:31.926215Z",
      "url": "https://files.pythonhosted.org/packages/1e/ef/32eeeeccb81502afb926b7f9a7c45ab5eaecf37e84d05d2e2f6d895da771/microprediction-1.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}