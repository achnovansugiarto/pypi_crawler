{
  "info": {
    "author": "gmdzy2010",
    "author_email": "gmdzy2010@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# 文本模板转DOCX文件\n[![PyPI](https://img.shields.io/pypi/v/docx-parsing-gmdzy2010.svg)](https://pypi.org/project/docx-parsing-gmdzy2010/)\n\n### 功能概述\n_________\n本包基于一套自定义的`轻量级文本模板解析系统`，用于将文本文件转成Word的docx文件\n\n#### 输入文件\n###### 1. 文本模板文件\n模板文件是一个纯文本文件，每3行为一个解析单位，解析规则只有以下3条：\n>1.1 第一行包括元素类型和样式名称，用\":\"隔开；  \n\n>1.2 第二行为要写入docx文件的文本，每行内部分为多个run单位，用\"||\"隔开，每个run可以有下划线和加粗两种样式，在每个run的尾部，用\"::\"隔开  \n\n>1.3 第三行为分割线，79个下划线，为了让模板更易读而已，没太大意义  \n\n###### 2. DOCX模板文件\n文件为一个空的或者自定义的docx文件，最好是包含python-docx自带docx模板的所有样式，方便直接调用\n注意：样式有可能不生效，解决方法请移步python-docx的官方文档\n\n###### 3. 文本模板的上下文数据\n上下文数据为一个字典型的变量，用来对模板的变量进行格式化。  \n\n3.1 段落上下文对象`PARAGRAPH_CONTEXT`  \n\n例如，文本模板中有一个段落上下文变量`test_context`\n```\n...\ncover:cover_title\n模板内容||{test_context}::underline||后续文本\n-------------------------------------------------------------------------------\n...\n```\n则需要新建段落上下文对象，是一个python字典对象，可以以字典键值对的形式添加多个   \n\n```python\nPARAGRAPH_CONTEXT = {\n    \"demo_field_1\": \"测试文本\",\n    \"demo_field_2\": 300.00,\n    \"demo_field_3\": 18003.00,\n}\n\n```\n3.2 表格上下文对象`TABLE_CONTEXT`  \n\n例如，文本模板中有一个表格\n```\n...\ntable:demo_table_1\n表格下面的文本不重要，仅仅用于占位\n-------------------------------------------------------------------------------\n...\n```\n这时需要新建表格上下文对象，包含表格的维度`rows`, `cols`，样式`style`等，类似于下方，可以以字典键值对的形式添加多个\n```python\nTABLE_CONTEXT = {\n    \"demo_table_1\": {\n        \"attr\": {\n            \"style\": \"Table Grid\",\n            \"rows\": 5,\n            \"cols\": 4,\n        },\n        \"data\": (\n            (\"第1列标题\", \"第2列标题\", \"第3列标题\", \"第4列标题\"),\n            (\"第1行第1列内容\", \"第1行第2列内容\", \"第1行第3列内容\", \"第1行第4列内容\"),\n            (\"第2行第1列内容\", \"第2行第2列内容\", \"第2行第3列内容\", \"第2行第4列内容\"),\n            (\"第3行第1列内容\", \"第3行第2列内容\", \"第3行第3列内容\", \"第3行第4列内容\"),\n            (\"第4行第1列内容\", \"第4行第2列内容\", \"第4行第3列内容\", \"第4行第4列内容\"),\n        )\n    },\n},\n```\n3.3 图片上下文对象`PICTURE_CONTEXT`  \n\n仍在测试中，后续单元测试通过后会将文档更新\n\n### 使用\n_________\n>STEP 1. 在项目中导入渲染器`DocxProduce`，\n\n>STEP 2. 写好文本模板，选择一个自带样式比较齐全的DOCX文件，可以从python-docx默认的模板拷贝而来  \n\n>STEP 3. 加载准备好的上下文和格式及样式数据，执行程序即完成\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gmdzy2010/docx_parsing_gmdzy2010",
    "keywords": "docx;text;template",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docx-parsing-gmdzy2010",
    "package_url": "https://pypi.org/project/docx-parsing-gmdzy2010/",
    "platform": "",
    "project_url": "https://pypi.org/project/docx-parsing-gmdzy2010/",
    "project_urls": {
      "Homepage": "https://github.com/gmdzy2010/docx_parsing_gmdzy2010"
    },
    "release_url": "https://pypi.org/project/docx-parsing-gmdzy2010/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "一个简单的文本模板转DOCX文件的包",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4818579,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d92defdd8bac764ef4de38bb4bfd7b5b97183059cac4dbe028f56a429f242631",
        "md5": "ea595b506ef63d5b35de96d3caab1a1e",
        "sha256": "59f4df3bea8b8b024fcb0186da4bd1fbe0b1f1900bc2eebde55cd2274f1d4609"
      },
      "downloads": -1,
      "filename": "docx_parsing_gmdzy2010-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea595b506ef63d5b35de96d3caab1a1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10748,
      "upload_time": "2019-01-28T02:57:31",
      "upload_time_iso_8601": "2019-01-28T02:57:31.507686Z",
      "url": "https://files.pythonhosted.org/packages/d9/2d/efdd8bac764ef4de38bb4bfd7b5b97183059cac4dbe028f56a429f242631/docx_parsing_gmdzy2010-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0cbd82aabffd4f392929f7fc86494eac689df6ec004a39a9b6a07edc5cd508b",
        "md5": "9454b3c4c49a191c379e1ba270379cea",
        "sha256": "a5965b8bd8b70272a16ce2ab14d8123cd8b17412186cbde2ac18c51e23facdac"
      },
      "downloads": -1,
      "filename": "docx_parsing_gmdzy2010-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9454b3c4c49a191c379e1ba270379cea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7198,
      "upload_time": "2019-01-28T02:57:33",
      "upload_time_iso_8601": "2019-01-28T02:57:33.103462Z",
      "url": "https://files.pythonhosted.org/packages/a0/cb/d82aabffd4f392929f7fc86494eac689df6ec004a39a9b6a07edc5cd508b/docx_parsing_gmdzy2010-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}