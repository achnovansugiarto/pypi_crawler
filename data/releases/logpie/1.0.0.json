{
  "info": {
    "author": "Claudiu DRUG",
    "author_email": "claudiu.drug@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# logpie\nLogging made simple.\n\nThis is a simple logging module with thread & file locking abilities.\n\n---\n\n#### Installation:\n\n```commandline\npython -m pip install [--upgrade] logpie\n```\n\n---\n\n#### Usage:\n\n```python\n# your `main.py` module\n\nfrom os.path import dirname, realpath, join\nfrom sys import modules\nfrom types import ModuleType\n\nfrom cfgpie import get_config, CfgParser\nfrom logpie import get_logger, Logger\n\n# **************************** config constants: **************************** #\n\n# main module\nMODULE: ModuleType = modules.get(\"__main__\")\n\n# root directory\nROOT: str = dirname(realpath(MODULE.__file__))\n\n# default config file path:\nCONFIG: str = join(ROOT, \"config\", \"cfgpie.ini\")\n\n# backup config params:\nBACKUP: dict = {\n    \"LOGGER\": {\n        \"basename\": \"logpie\",  # if handler is `file`\n        \"folder\": r\"${DEFAULT:directory}\\logs\",\n        \"handler\": \"file\",  # or `console` or `nostream` (no output)\n        \"debug\": True,  # if set to `True` it will also print `DEBUG` messages\n    }\n}\n\n# NOTE: The constants above serve the usage example\n#       and you can use whatever suits you best.\n\n# ********************** get `ConfigParser` instance: *********************** #\n\ncfg: CfgParser = get_config(name=\"my_config\")\ncfg.set_defaults(directory=ROOT)\ncfg.open(file_path=CONFIG, encoding=\"UTF-8\", fallback=BACKUP)\n\n# ************************* get `Logger` instance: ************************** #\n\nlog: Logger = get_logger(name=\"my_logger\", config=cfg)\n# we can pass a config instance\n```\n\nor\n\n```python\nlog: Logger = get_logger(name=\"my_logger\", config=\"my_config\")\n# it will look for a config instance named `my_config`\n```\n\nor\n\n```python\nlog: Logger = get_logger(name=\"my_logger\", basename=\"logpie\", handler=\"file\", debug=True)\n# it will create and use its own config instance\n\n\nlog.debug(\"Testing debug messages...\")\nlog.info(\"Testing info messages...\")\nlog.warning(\"Testing warning messages...\")\nlog.error(\"Testing error messages...\")\nlog.critical(\"Testing critical messages...\")\n```\n\nBy default, debugging is set to False and must be enabled to work.\n\nThe log file is prefixed with a date and will have an index number attached before the extension (ex: `2022-08-01_logpie.1.log`).\nWhen it reaches `1 Mb` the file handler will switch to another file by incrementing its index with `1`.\n\nThe folder tree is by default structured as follows:\n\n```markdown\n.\n└───logs\n    └───year (ex: 2022)\n        └───month (ex: january)\n            ├───2022-08-01_logpie.1.log\n            ├───2022-08-01_logpie.2.log\n            └───2022-08-01_logpie.3.log\n```\n\nWhen the current month changes, a new folder is created and the previous one is archived.\n\n---\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ClaudiuDrug/logpie",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logpie",
    "package_url": "https://pypi.org/project/logpie/",
    "platform": null,
    "project_url": "https://pypi.org/project/logpie/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ClaudiuDrug/logpie/issues",
      "Homepage": "https://github.com/ClaudiuDrug/logpie"
    },
    "release_url": "https://pypi.org/project/logpie/1.0.0/",
    "requires_dist": [
      "cfgpie (>=1.0.0)",
      "customlib (>=5.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Logging made simple.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16293044,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e10a55e2bb496acd9fc810aedef4b4f72deb3cc17e9c14821bbf8dcd847a1137",
        "md5": "7f58584a4cd970d08ddbad3159b560f8",
        "sha256": "5f9606b9fd7cd2198321ae7703f3a5ff2c4e8a9c78d116537711d436edabf209"
      },
      "downloads": -1,
      "filename": "logpie-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f58584a4cd970d08ddbad3159b560f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8307,
      "upload_time": "2022-09-04T21:07:42",
      "upload_time_iso_8601": "2022-09-04T21:07:42.892957Z",
      "url": "https://files.pythonhosted.org/packages/e1/0a/55e2bb496acd9fc810aedef4b4f72deb3cc17e9c14821bbf8dcd847a1137/logpie-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82433c5d699431798614c1666d1ebce9f2b57ff1463b668e1eadbacf9a13e9af",
        "md5": "81719a26fc6ef774b626f0663015d172",
        "sha256": "6353df5e240a3509a47690d678529be7f607a6c2af6410cb1a905b76e47ec336"
      },
      "downloads": -1,
      "filename": "logpie-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "81719a26fc6ef774b626f0663015d172",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8338,
      "upload_time": "2022-09-04T21:07:45",
      "upload_time_iso_8601": "2022-09-04T21:07:45.737137Z",
      "url": "https://files.pythonhosted.org/packages/82/43/3c5d699431798614c1666d1ebce9f2b57ff1463b668e1eadbacf9a13e9af/logpie-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}