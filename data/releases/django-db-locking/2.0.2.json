{
  "info": {
    "author": "VikingCo",
    "author_email": "operations@unleashed.be",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Django-locking\n==============\n\n.. image:: https://coveralls.io/repos/github/vikingco/django-db-locking/badge.svg?branch=master\n    :target: https://coveralls.io/github/vikingco/django-db-locking?branch=master\n.. image:: https://travis-ci.org/vikingco/django-db-locking.svg?branch=master\n    :target: https://travis-ci.org/vikingco/django-db-locking\n\nUsage\n-----\nThe simplest use is by using it as a context manager:\n\n::\n\n    with NonBlockingLock.objects.acquire_lock(obj=model_obj):\n        model_obj.do_something()\n\nOr you can keep track of the lock yourself:\n\n::\n\n    try:\n        lock = NonBlockingLock.objects.acquire_lock(obj=model_obj)\n    except AlreadyLocked:\n        return False\n\n    model_obj.do_something()\n    lock.release()\n\nIf you have no Django model, or you want to be able to specify the lock name\nyourself, you can do that too::\n\n    # this will raise AlreadyLocked, if it's locked\n    lock = NonBlockingLock.objects.acquire_lock(lock_name='my_lock')\n    do_something()\n    lock.release()\n\nNote that locks can expire automatically. There is a `LOCK_MAX_AGE` settings where you can specify a default lock release value for locks in your entire Django codebase. This value can be overridden per lock by setting the `max_age` parameter.\n\nTest\n-----\nYou can run the tests with\n::\n\n    tox\n\nReleases\n--------\nv2.0.0:\n  Merging of master and pre-django-1.8 branches\n  Removes management command in favor of a celery task\nv1.2.1:\n  Fix problem in migration to UUIDField for PostGres\nv1.2.0:\n  Move id to UUIDField, add code quality checks and CI\nv1.1.0:\n  Rename model to NonBlockingLock and add additional features\nv1.0.1:\n  Corrected tests and code clean-up\nv1.0.0:\n  Intial release.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vikingco/django-db-locking/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-db-locking",
    "package_url": "https://pypi.org/project/django-db-locking/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-db-locking/",
    "project_urls": {
      "Homepage": "https://github.com/vikingco/django-db-locking/"
    },
    "release_url": "https://pypi.org/project/django-db-locking/2.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Database locking",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3225103,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08604b90b99ee41524121f166a52de2855ef78d8f82c9fb9544e2d19f43dd4c6",
        "md5": "746846ddc097b7dd703bdda78a8cec04",
        "sha256": "29a4f3e6408cb7ea2091c5aa9e8afb938bee37432cef42704dae9dd2c81cac78"
      },
      "downloads": -1,
      "filename": "django_db_locking-2.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "746846ddc097b7dd703bdda78a8cec04",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 16428,
      "upload_time": "2017-09-25T14:15:23",
      "upload_time_iso_8601": "2017-09-25T14:15:23.272954Z",
      "url": "https://files.pythonhosted.org/packages/08/60/4b90b99ee41524121f166a52de2855ef78d8f82c9fb9544e2d19f43dd4c6/django_db_locking-2.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a665a0fa4b31f8729ab1147d5cda77bc7d2722608a03320f9b4a837fdfd4019f",
        "md5": "f9e9098d55ddab2fd0bb85f643086043",
        "sha256": "df14d3ba9cea2531424378291036f596a545986b266f8f9d8d8dd972b5e28109"
      },
      "downloads": -1,
      "filename": "django-db-locking-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f9e9098d55ddab2fd0bb85f643086043",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9296,
      "upload_time": "2017-09-25T14:15:17",
      "upload_time_iso_8601": "2017-09-25T14:15:17.381626Z",
      "url": "https://files.pythonhosted.org/packages/a6/65/a0fa4b31f8729ab1147d5cda77bc7d2722608a03320f9b4a837fdfd4019f/django-db-locking-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}