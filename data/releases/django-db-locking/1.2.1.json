{
  "info": {
    "author": "VikingCo",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Django-locking\n==============\nUsage\n-----\nThe simplest use is by using it as a context manager:\n\n::\n\n    with NonBlockingLock.objects.acquire_lock(obj=model_obj):\n        model_obj.do_something()\n\nOr you can keep track of the lock yourself:\n\n::\n\n    try:\n        lock = NonBlockingLock.objects.acquire_lock(obj=model_obj)\n    except AlreadyLocked:\n        return False\n\n    model_obj.do_something()\n    lock.release()\n\nIf you have no Django model, or you want to be able to specify the lock name\nyourself, you can do that too::\n\n    # this will raise AlreadyLocked, if it's locked\n    lock = NonBlockingLock.objects.acquire_lock(lock_name='my_lock')\n    do_something()\n    lock.release()\n\nTest\n-----\nYou can run the tests with\n::\n\n    tox\n\nWishlist\n--------\n- Add lock time-out (try to aquire a lock for up to a given TIME_OUT), like\n  `lockfile's <http://packages.python.org/lockfile/>`_ `FileLock.aquire\n  <http://packages.python.org/lockfile/lockfile.html#lockfile.FileLock.acquire>`_\n- Global locks (for instance on a whole Model not just an object)\n\nReleases\n--------\nv1.2.1:\n  Fix problem in migration to UUIDField for PostGres\nv1.2.0:\n  Move id to UUIDField, add code quality checks and CI\nv1.1.0:\n  Rename model to NonBlockingLock and add additional features\nv1.0.1:\n  Corrected tests and code clean-up\nv1.0.0:\n  Intial release.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vikingco/django-db-locking/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-db-locking",
    "package_url": "https://pypi.org/project/django-db-locking/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-db-locking/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/vikingco/django-db-locking/"
    },
    "release_url": "https://pypi.org/project/django-db-locking/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Database locking",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3225103,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "addaafc95a9e14c1a7ee0b4dedfc82adfae401815716a84f5bf38310e48beaad",
        "md5": "a9ac9374a8e4642d87f2aa51994e757c",
        "sha256": "0927c76273b97bd1b97e33a404df67285149ee3296c64fb7ea7757595ced9e52"
      },
      "downloads": -1,
      "filename": "django-db-locking-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a9ac9374a8e4642d87f2aa51994e757c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6949,
      "upload_time": "2015-11-15T17:45:10",
      "upload_time_iso_8601": "2015-11-15T17:45:10.929186Z",
      "url": "https://files.pythonhosted.org/packages/ad/da/afc95a9e14c1a7ee0b4dedfc82adfae401815716a84f5bf38310e48beaad/django-db-locking-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}