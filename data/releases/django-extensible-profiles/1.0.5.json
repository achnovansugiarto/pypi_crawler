{
  "info": {
    "author": "Incuna Ltd",
    "author_email": "admin@incuna.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## Extensible user profiles for Django\n\nThis is an extensible user profile system for Django, designed to provide a\nsimple user Profile model that is extensible.\n\nThe concept (and some code) is borrowed from the FeinCMS\n(https://github.com/matthiask/feincms) page model.\n\nTo use the profiles module add profiles to your `INSTALLED_APPS`.\n\nBefore proceeding with manage.py syncdb, you must add some profile extensions.\nThe profiles module does not add anything to the User model by default.\n\n\n### Profile extension modules\n\nExtensions are a way to add often-used functionality the `Profile` model. The\nextensions are standard python modules with a `register()` method which will be\ncalled upon registering the extension. The `register()` method receives the\n`Profile` class itself and the model admin class `ProfileAdmin` as arguments.\n\nThere are two ways to set up the extensions. Either you can use the FeinCMS\napproach of registering extensions directly:\n\n    from profiles.models import Profile\n    Profile.register_extensions('title', 'picture', 'address', 'profiles.modules.options.extensions.options')\n\nor you can simply use a setting:\n\n    PROFILE_EXTENSIONS = ('title', 'picture', 'address', 'profiles.modules.options.extensions.options')\n\nIf the extension requires it's own models (like the options extension) then the\napp containing the models will also need to be added to your `INSTALLED_APPS`.\n\n### Adding extensions\n\nTo add an extension create a python module that defines a register function\nthat accepts the `Profile class` and the `ProfileAdmin` class as arguments and\nmodifies them as required.\n\nHere is the address extension (`profiles/extensions/address.py`):\n\n\n    from django.db import models\n    from django.utils.translation import ugettext_lazy as _\n\n    def register(cls, admin_cls):\n        cls.add_to_class('address1', models.CharField(max_length=255, verbose_name=_('address'), null=True, blank=True))\n        cls.add_to_class('address2', models.CharField(max_length=255, verbose_name=_('address 2'), null=True, blank=True))\n        cls.add_to_class('city', models.CharField(max_length=255, verbose_name=_('town/city'), null=True, blank=True))\n        cls.add_to_class('region', models.CharField(max_length=255, verbose_name=_('county/state/province'), null=True, blank=True))\n        cls.add_to_class('postcode', models.CharField(max_length=15, verbose_name=_('postcode'), null=True))\n        cls.add_to_class('country', models.ForeignKey('countries.Country', null=True, blank=True))\n        cls.add_to_class('telephone', models.CharField(max_length=32, verbose_name=_('mobile number'), null=True, blank=True))\n\n        if admin_cls:\n            admin_cls.search_fields += ['address1', 'address2', 'city', 'region', 'postcode']\n            admin_cls.list_display_filter += ['country', ]\n\n            if admin_cls.fieldsets:\n                admin_cls.fieldsets.append((_('Address'), {\n                        'fields': ['address1', 'address2','city', 'region', 'postcode', 'country', 'telephone'],\n                        'classes': ('collapse',),\n                    }))\n\n\n### Dependencies\n\nThe address extension requires\n[`incuna-countries`](http://github.com/incuna/incuna-countries). Add\n`countries` to your `INSTALLED_APPS`.\n\nThe options and notification extensions require\n[`django-orderable`](http://github.com/incuna/django-orderable). Add\n`orderable` to your `INSTALLED_APPS`.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://incuna.com/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-extensible-profiles",
    "package_url": "https://pypi.org/project/django-extensible-profiles/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-extensible-profiles/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://incuna.com/"
    },
    "release_url": "https://pypi.org/project/django-extensible-profiles/1.0.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Generic extensible django user profiles.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 756167,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25a687025089e23c42aa6731a07e429377444b48b720eb0bfc32ed5e13b25d34",
        "md5": "10e9a0143e86c8e55f814487c51b6485",
        "sha256": "85cdfdbd9e60606256ab4c9731ee876317ecca7c6d00915249bda321678abf03"
      },
      "downloads": -1,
      "filename": "django-extensible-profiles-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "10e9a0143e86c8e55f814487c51b6485",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12048,
      "upload_time": "2012-05-29T16:23:53",
      "upload_time_iso_8601": "2012-05-29T16:23:53.050695Z",
      "url": "https://files.pythonhosted.org/packages/25/a6/87025089e23c42aa6731a07e429377444b48b720eb0bfc32ed5e13b25d34/django-extensible-profiles-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}