{
  "info": {
    "author": "Matija KolariÄ‡",
    "author_email": "i@matijakolaric.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Django Music Publisher\n*******************************************************************************\n\n.. image:: https://travis-ci.com/matijakolaric-com/django-music-publisher.svg?branch=master\n    :target: https://travis-ci.com/matijakolaric-com/django-music-publisher\n.. image:: https://coveralls.io/repos/github/matijakolaric-com/django-music-publisher/badge.svg?branch=master\n    :target: https://coveralls.io/github/matijakolaric-com/django-music-publisher?branch=master\n.. image:: https://img.shields.io/pypi/l/django-music-publisher.svg\n   :target: ./LICENSE\n.. image:: https://img.shields.io/pypi/v/django-music-publisher.svg\n    :target: https://pypi.org/project/django-music-publisher/\n.. image:: https://img.shields.io/pypi/pyversions/django-music-publisher.svg\n    :target: https://pypi.org/project/django-music-publisher/\n.. image:: https://img.shields.io/pypi/djversions/django-music-publisher.svg\n    :target: https://pypi.org/project/django-music-publisher/\n.. image:: https://img.shields.io/pypi/status/django-music-publisher.svg\n    :target: https://pypi.org/project/django-music-publisher/\n.. image:: https://img.shields.io/badge/home-matijakolaric.com-d50000.svg\n   :target: https://matijakolaric.com/articles/2/\n\nThis is a simple **Django app for original music publishers**. The app is \nreleased under `MIT license <LICENSE>`_ and is basically free. At this point, it\ncovers all the data required for batch registrations of musical works. \n\nIntroduction\n===============================================================================\n\n.. image:: https://matijakolaric-com.github.io/django-music-publisher/overview.png\n    :target: https://matijakolaric-com.github.io/django-music-publisher/\n\nUse Case\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nThis app is targeted at **single original publishers**, publishing \n**original musical works**.\n(Original work is one that is not a modification of an existing musical work.)\nIt holds data on musical works, including songwriters (composers and lyricists),\nperforming artists, albums, library releases etc, and allows batch registrations.\n\nMultiple writers, both controlled and uncontrolled, are covered, but data on\nother publishers (other original publishers, administrators and sub-publishers)\ncan not be entered. This is just enough data for acquiring ISWCs.\n\nA special US situation where an original publisher may have one entity for every\nof the three PROs is also covered since version 18.8.\n\nIt is presumed that writers keep 50% of performing rights and the other 50%, \nas well as 100% of mechanical and sync goes to the original publisher.\n\nAlternate titles and basic data on performing artists and just enough data for \nregistration of library works, as well as full data about the first recording,\ncan be entered.\n\nThis translates to following CWR 2.1 transaction record types:\n\n* NWR/REV,\n* SPU (just one), SPT (just World),\n* SWR, SWT (just World), PWR (including society-assigned agreement number), \n* OWR,\n* ALT, \n* PER, \n* REC (single) and\n* ORN (limited to library).\n\nCommon Works Registration is used for batch registrations, although the actual\ngeneration requires an external commerical service. \n\nDjango Music Publisher app works without it, but data will not be validated as \nCWR-compliant, and there will be no way to create CWR, unless you make your own. \nThe CWR generation could be solved with a template, but without the former, it \nwould most likely not result in valid CWR files.\n\nProcessing of CWR acknowledgement files works without the external service.\n\nProcessing of incoming royalty statements is on the roadmap, to be added later\nin 2018. \n\nBeyond\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nIf you are looking for a solution that covers more territory, this may be \nan educational proof of concept, maybe even a good starting point for a custom \ndevelopment.\n\nPlease note that the limitations of this project are not chosen based on \ntechnical complexity of additional features, but due to the fact that beyond \nthis point, the learning curve gets really steep, both for software developers \nand users.\n\nCommon Works Registration (CWR), or even the baby version of it, Electronic\nBatch Registration (EBR), is usually the most time-consumig part of any \nsoftware project for music publishers. You may be interested in using external\nREST API service for data validation, as well as generation and parsing of CWR \nfiles.\n\nCWR Developer Toolset\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nThis particular software uses two simplest of the REST API tools from the \n`CWR Developer Toolset <https://matijakolaric.com/development/cwr-toolset/>`_,\none for data validation and one for generation of CWR files.\n\nEven if you need a far more complex CWR, this project is still a good proof of\nconcept how well these tools work.\n\nInstalling the app\n===============================================================================\n\nIf you want to install the `django_music_publisher` app, just use pip::\n\n    pip install --upgrade django_music_publisher\n\nAdd ``music_publisher.apps.MusicPublisherConfig`` to ``INSTALLED_APPS``, no \nURLs need to be added, as everything goes through the Django Admin.\n\nYou will have to add this to the settings, replace with your data.\n\n.. code:: python\n\n    MUSIC_PUBLISHER_SETTINGS = {\n        'admin_show_publisher': False,\n        'admin_show_saan': True,\n\n        'token': None,\n        'validator_url': None,\n        'generator_url': None,\n\n        'publisher_id': 'TOP',  # THE 2-3 letter CWR delivery publisher code \n        'publisher_name': 'THE ORIGINAL PUBLISHER',  # the publisher name\n        'publisher_ipi_name': '00000000199',  # IPI name number\n        'publisher_ipi_base': 'I0000000393',  # IPI base number (rarely used)\n        'publisher_pr_society': '052',  # Performing Rights Society Code\n        'publisher_mr_society': '044',  # Mechanical Rights Society Code\n        'publisher_sr_society': None,  # Sync Rights Society Code (rarely used)\n\n        'library': 'THE FOO LIBRARY',  # Use only if you are in library music\n        'label': 'FOO BAR MUSIC',  # Use only if you are also a label\n    }\n\nFor US publishers with entities in different PROs, define the \"main\" publisher\nfirst, which is original publisher for affiliates in the respective PRO and\nforeign societies. Then define ones in other PROs.\n\n.. code:: python\n\n    MUSIC_PUBLISHER_SETTINGS = {\n        'admin_show_publisher': True,\n        'admin_show_saan': False,\n\n        'token': None,\n        'validator_url': None,\n        'generator_url': None,\n\n        'publisher_id': 'FOO',\n        'publisher_name': 'FOO S MUSIC PUBLISHING',\n        'publisher_ipi_name': '00000000199',\n        'publisher_pr_society': '071',  # SESAC\n        'publisher_mr_society': '034',  # HFA\n        'publisher_sr_society': None,\n\n        'us_publisher_override': {\n            'ASCAP': {\n                'publisher_id': 'FOOA',\n                'publisher_name': 'FOO A MUSIC PUBLISHING',\n                'publisher_ipi_name': '00000000493',\n                'publisher_pr_society': '010',  # ASCAP\n                'publisher_mr_society': '034',  # HFA\n                'publisher_sr_society': None,\n            },\n            'BMI': {\n                'publisher_id': 'FOOB',\n                'publisher_name': 'FOO B MUSIC PUBLISHING',\n                'publisher_ipi_name': '00000000395',\n                'publisher_pr_society': '021',  # BMI \n                'publisher_mr_society': '044',  # HFA\n                'publisher_sr_society': None,\n            },\n            'SESAC': None,  # Already defined, set to None\n        },\n\n        'library': 'FOO BAR MUSIC LIBRARY',\n        'label': 'FOO BAR MUSIC',\n    }\n\nWhen you apply for a free 15-day demo licence, additional documentation will be\nprovided, as well as ``token``, ``validator_url``, and ``creator_url`` values.\n\nInstalling the project (standalone deployment)\n===============================================================================\n\nYou can only install this project on a computer that has Python 3 preinstalled.\nSupported versions are 3.5 and 3.6. It might work with other Python 3 versions,\nbut not with Python 2. It is advised you run this inside a virtual environment.\n\nDo::\n\n    python3 -m venv dmp\n    cd dmp\n    source bin/activate\n    git clone https://github.com/matijakolaric-com/django-music-publisher.git\n    cd django-music-publisher\n    pip install -r requirements.txt\n\nThe next step is to create ``dmp_project/local_settings.py`` or edit \n``dmp_project/settings.py``. Regardless, ``SECRET_KEY`` and \n``MUSIC_PUBLISHER_SETTINGS`` (see above for details) must be set. Then::\n\n    python manage.py migrate\n    python manage.py createsuperuser\n    python manage.py runserver\n\nThen open the following link: http://localhost:8000/ and log in with\ncredentials you provided.\n\nSocieties\n===============================================================================\n\nThe only optional setting is ``MUSIC_PUBLISHER_SOCIETIES``. In the default \nsetup, only 12 societies from six countries are present. If you need to add\nadditional societies, do it with this setting (and not in the ``models.py``).\n\nSocieties the original publisher and writers are affiliated with, as well as\nall societies whose acknowledgement files are being imported, must be present.\n\nValidation and CWR Generation Service\n===============================================================================\n\nAs stated above, this tool uses an external service for data validation and\ngeneration of CWR files, which is a part of\n`CWR Developer Toolset <https://matijakolaric.com/development/cwr-toolset/>`_.\n\nFree 15 day demo licence is available upon requests. Contact us through this \n`Contact Page <https://matijakolaric.com/z_contact/>`_. \n\nWalkthrough and Demo\n===============================================================================\n\n`Walkthrough <https://matijakolaric-com.github.io/django-music-publisher/>`_\nis available in the ``docs`` folder.\n\nDemo is available, some demo data is provided. There are two versions, the US and the World version:\n\n* `World Demo <https://dmp.matijakolaric.com/>`_\n* `US Demo <https://dmp.matijakolaric.com/us/>`_\n\nMore information\n================================================================================\n\nMore information can be found in this page `<https://matijakolaric.com/articles/2/>`_.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://matijakolaric.com/articles/2/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-music-publisher",
    "package_url": "https://pypi.org/project/django-music-publisher/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-music-publisher/",
    "project_urls": {
      "Homepage": "https://matijakolaric.com/articles/2/"
    },
    "release_url": "https://pypi.org/project/django-music-publisher/18.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django App for Music Publishers",
    "version": "18.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17525347,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "465d761e6b794ec57e9dc95129096249acf3e7a6d4e01da982e04647f868831e",
        "md5": "e7fc5fbd55f7eb2c5270a91521851391",
        "sha256": "3048457afb1e5c3f199c444ac27e8b7b6cf9036deadc103092add0b84e763937"
      },
      "downloads": -1,
      "filename": "django_music_publisher-18.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7fc5fbd55f7eb2c5270a91521851391",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 25763,
      "upload_time": "2018-08-28T09:27:50",
      "upload_time_iso_8601": "2018-08-28T09:27:50.893776Z",
      "url": "https://files.pythonhosted.org/packages/46/5d/761e6b794ec57e9dc95129096249acf3e7a6d4e01da982e04647f868831e/django_music_publisher-18.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e061fc064695b7600d9ccc8a15208a0e8449c0c9f532a857252fd8ef659f412",
        "md5": "16d8cef8dbdcb76c50fb2c70f6e8fe1a",
        "sha256": "ecd14f8aefed22498e26907040f55b02526a78c771de7a4ae3367a0561126252"
      },
      "downloads": -1,
      "filename": "django-music-publisher-18.8.tar.gz",
      "has_sig": false,
      "md5_digest": "16d8cef8dbdcb76c50fb2c70f6e8fe1a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 624823,
      "upload_time": "2018-08-28T09:27:53",
      "upload_time_iso_8601": "2018-08-28T09:27:53.361690Z",
      "url": "https://files.pythonhosted.org/packages/0e/06/1fc064695b7600d9ccc8a15208a0e8449c0c9f532a857252fd8ef659f412/django-music-publisher-18.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}