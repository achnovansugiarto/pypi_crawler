{
  "info": {
    "author": "VMG",
    "author_email": "vmayorg@outlook.es",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n[![Downloads](https://pepy.tech/badge/e-data)](https://pepy.tech/project/e-data)\n[![Downloads](https://pepy.tech/badge/e-data/month)](https://pepy.tech/project/e-data)\n[![Downloads](https://pepy.tech/badge/e-data/week)](https://pepy.tech/project/e-data)\n\n# python-edata\n\nEste paquete proporciona herramientas para la descarga de tus datos de consumo eléctrico (desde Datadis.es) y su posterior procesado. La motivación principal es que conocer el consumo puede ayudarnos a reducirlo, e incluso a elegir una tarifa que mejor se adapte a nuestras necesidades. A día de hoy sus capacidades de facturación (€) son limitadas, soporta PVPC (según disponibilidad de datos de REData) y tarificación fija por tramos. Es el corazón de la integración [homeassistant-edata](https://github.com/uvejota/homeassistant-edata).\n\n_**Esta herramienta no mantiene ningún tipo de vinculación con los proveedores de datos anteriormente mencionados, simplemente consulta la información disponible y facilita su posterior análisis.**_\n\n## Instalación\n\nPuedes instalar la última versión estable mediante:\n\n``` bash\npip install e-data\n```\n\nSi quieres probar la versión `dev` o contribuir a su desarrollo, clona este repositorio e instala manualmente las dependencias:\n\n``` bash\npip install -r requirements.txt\n```\n\n## Estructura\n\nEl paquete consta de tres módulos diferenciados:\n\n* **Conectores** (módulo `connectors`), para definir los métodos de consulta a los diferentes proveedores: Datadis y REData.\n* **Procesadores** (módulo `processors`), para procesar datos de consumo, maxímetro, o coste (tarificación). Ahora mismo consta de tres procesadores: `billing`, `consumption` y `maximeter`, además de algunas utilidades ubicadas en `utils`. Los procesadores deben heredar de la clase Processor definida en `base.py`\n* **Ayudantes** (módulo `helpers`), para ayudar en el uso y gestión de los anteriores, presentando de momento un único ayudante llamado `EdataHelper` que te permite recopilar `X` días de datos (por defecto 365) y automáticamente procesarlos. Los datos son almacenados en la variable `data`, mientras que los atributos autocalculados son almacenados en la variable `attributes`. Por lo general, primero utilizan los conectores y luego procesan los datos, gestionando varias tareas de recuperación (principalmente para Datadis).\n\nEstos módulos corresponden a la siguiente estructura del paquete:\n\n```\nedata/\n    · __init__.py\n    · connectors/\n        · __init__.py\n        · datadis.py\n        · redata.py\n    · processors/\n        · __init__.py\n        · base.py\n        · billing.py\n        · consumption.py\n        · maximeter.py\n        · utils.py\n    · helpers.py\n```\n\n## Ejemplo de uso\n\nPartimos de que tenemos credenciales en Datadis.es. Algunas aclaraciones:\n* No es necesario solicitar API pública en el registro (se utilizará la API privada habilitada por defecto)\n* El username suele ser el NIF del titular\n* Copie el CUPS de la web de Datadis, algunas comercializadoras adhieren caracteres adicionales en el CUPS mostrado en su factura.\n* La herramienta acepta el uso de NIF autorizado para consultar el suministro de otro titular.\n\n``` python\nfrom datetime import datetime\nimport json\n\n# importamos definiciones de datos que nos interesen\nfrom edata.definitions import PricingRules\n# importamos el ayudante\nfrom edata.helpers import EdataHelper\n# importamos el procesador de utilidades\nfrom edata.processors import utils\n\n# Preparar reglas de tarificación (si se quiere)\nPRICING_RULES_PVPC = PricingRules(\n    p1_kw_year_eur=30.67266,\n    p2_kw_year_eur=1.4243591,\n    meter_month_eur=0.81,\n    market_kw_year_eur=3.113,\n    electricity_tax=1.0511300560,\n    iva_tax=1.05,\n    # podemos rellenar los siguientes campos si quisiéramos precio fijo (y no pvpc)\n    p1_kwh_eur=None,\n    p2_kwh_eur=None,\n    p3_kwh_eur=None,\n)\n\n# Instanciar el helper\n# 'authorized_nif' permite indicar el NIF de la persona que nos autoriza a consultar su CUPS.\n# 'data' permite \"cargar\" al helper datos anteriores (resultado edata.data de una ejecución anterior), para evitar volver a consultar los mismos.\nedata = EdataHelper(\n            \"datadis_user\",\n            \"datadis_password\",\n            \"cups\",\n            datadis_authorized_nif=None,\n            pricing_rules=PRICING_RULES_PVPC, # si se le pasa None, no aplica tarificación\n            data=None, # aquí podríamos cargar datos anteriores\n        )\n\n# Solicitar actualización de todo el histórico (se almacena en edata.data)\nedata.update(date_from=datetime(1970, 1, 1), date_to=datetime.today())\n\n# volcamos todo lo obtenido a un fichero\nwith open(\"backup.json\", \"w\") as file:\n    json.dump(utils.serialize_dict(edata.data), file) # se puede utilizar deserialize_dict para la posterior lectura del backup\n\n# Imprimir atributos\nprint(edata.attributes)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uvejota/python-edata",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "e-data",
    "package_url": "https://pypi.org/project/e-data/",
    "platform": null,
    "project_url": "https://pypi.org/project/e-data/",
    "project_urls": {
      "Homepage": "https://github.com/uvejota/python-edata"
    },
    "release_url": "https://pypi.org/project/e-data/1.1.0/",
    "requires_dist": [
      "dateparser (>=1.1.2)",
      "freezegun (>=1.2.1)",
      "holidays (>=0.14.2)",
      "pandas (>=1.4.3)",
      "pytest (>=7.1.2)",
      "python-dateutil (>=2.8.2)",
      "requests (>=2.28.1)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Python library for managing spanish energy data from various web providers",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16927659,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "526eb1b4e0182204ac7a57525fe3291878c7421a54d02adbf75ef4d90da9b4cb",
        "md5": "419c5ef6030457ae49ffb3adc1d8ff18",
        "sha256": "c2c16001da542011876b71a124a894b45e1d7849ca5980f4dd3f4566c5c199a4"
      },
      "downloads": -1,
      "filename": "e_data-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "419c5ef6030457ae49ffb3adc1d8ff18",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 36922,
      "upload_time": "2023-02-19T11:11:39",
      "upload_time_iso_8601": "2023-02-19T11:11:39.621718Z",
      "url": "https://files.pythonhosted.org/packages/52/6e/b1b4e0182204ac7a57525fe3291878c7421a54d02adbf75ef4d90da9b4cb/e_data-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd39974948224e2bdb00843f7da33522d7ba6f3218ca63c76b623f8eab96a73b",
        "md5": "4a4eb4bee8ceba5c1a80e03d824cdbcb",
        "sha256": "cc5b540dacdda0ff4f9610f6221693a6462e693af003c5218dcc855cbe13fb76"
      },
      "downloads": -1,
      "filename": "e-data-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4a4eb4bee8ceba5c1a80e03d824cdbcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 30107,
      "upload_time": "2023-02-19T11:11:41",
      "upload_time_iso_8601": "2023-02-19T11:11:41.290289Z",
      "url": "https://files.pythonhosted.org/packages/bd/39/974948224e2bdb00843f7da33522d7ba6f3218ca63c76b623f8eab96a73b/e-data-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}