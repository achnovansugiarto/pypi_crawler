{
  "info": {
    "author": "Stefan Schneider, Stefan Werner",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![CI](https://github.com/stefanbschneider/mobile-env/actions/workflows/python-package.yml/badge.svg)](https://github.com/stefanbschneider/mobile-env/actions/workflows/python-package.yml)\n[![PyPI](https://github.com/stefanbschneider/mobile-env/actions/workflows/python-publish.yml/badge.svg)](https://github.com/stefanbschneider/mobile-env/actions/workflows/python-publish.yml)\n[![Documentation](https://readthedocs.org/projects/mobile-env/badge/?version=latest)](https://mobile-env.readthedocs.io/en/latest/?badge=latest)\n[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/stefanbschneider/mobile-env/blob/master/examples/demo.ipynb)\n\n\n# mobile-env: An Open Environment for Autonomous Coordination in Mobile Networks\n\nmobile-env is an open, minimalist OpenAI Gym environment for training and evaluating coordination algorithms in wireless mobile networks. \nThe environment allows modeling users moving around an area and can connect to one or multiple base stations.\nUsing the Gym interface, the environment can be used with any reinforcement learning framework (e.g., stable-baselines or Ray RLlib) or any custom (even non-RL) coordination approach.\nThe environment is highly configurable and can be easily extended (e.g., regarding users, movement patterns, channel models, etc.).\n\nmobile-env supports multi-agent and centralized reinforcement learning policies. It provides various choices for rewards and observations. mobile-env is also easily extendable, so that anyone may add another channel models (e.g. path loss), movement patterns, utility functions, etc.\n\nAs an example, mobile-env can be used to study multi-cell selection in coordinated multipoint.\nHere, it must be decided what connections should be established among user equipments (UEs) and base stations (BSs) in order to maximize Quality of Experience (QoE) globally. \nTo maximize the QoE of single UEs, the UE intends to connect to as many BSs as possible, which yields higher (macro) data rates. \nHowever, BSs multiplex resources among connected UEs (e.g. schedule physical resource blocks) and, therefore, UEs compete for limited resources (conflicting goals). \nTo maximize QoE globally, the policy must recognize that (1) the data rate of any connection is governed by the channel (e.g. SNR) between UE and BS and (2) QoE of single UEs not necessarily grows linearly with increasing data rate.\n\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/36734964/139288123-7732eff2-24d4-4c25-87fd-ac906f261c93.gif\" width=\"65%\"/>\n    <br>\n    <sup><a href=\"https://thenounproject.com/search/?q=base+station&i=1286474\" target=\"_blank\">Base station icon</a> by Clea Doltz from the Noun Project</sup>\n</p>\n\n**[Try mobile-env: ![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/stefanbschneider/mobile-env/blob/master/examples/demo.ipynb)**\n\nDocumentation and API: [ReadTheDocs](https://mobile-env.readthedocs.io/en/latest/)\n\n\n## Installation\n\n### From PyPI (Recommended)\n\nThe simplest option is to install the latest release of `mobile-env` from [PyPI](https://pypi.org/project/mobile-env/) using pip:\n\n```bash\npip install mobile-env\n```\nThis is recommended for most users. mobile-env is tested on Ubuntu, Windows, and MacOS.\n\n### From Source (Development)\n\nAlternatively, for development, you can clone `mobile-env` from GitHub and install it from source.\nAfter cloning, install in \"editable\" mode (-e):\n\n```bash\npip install -e .\n```\n\nThis is equivalent to running `pip install -r requirements.txt`.\n\nIf you want to run tests or examples, also install the requirements in `tests`.\nFor dependencies for building docs, install the requirements in `docs`.\n\n## Example Usage\n\n```python\nimport gym\nimport mobile_env\n\nenv = gym.make(\"mobile-medium-central-v0\")\nobs = env.reset()\ndone = False\n\nwhile not done:\n    action = ... # Your agent code here\n    obs, reward, done, info = env.step(action)\n    env.render()\n```\n\n## Customization\n\nmobile-env supports custom channel models, movement patterns, arrival & departure models, resource multiplexing schemes and utility functions. \nFor example, replacing the default [Okumuraâ€“Hata](https://en.wikipedia.org/wiki/Hata_model) channel model by a (simplified) path loss model can be as easy as this:\n\n```python\nimport gym\nimport numpy as np\nfrom mobile_env.core.base import MComCore\nfrom mobile_env.core.channel import Channel\n\n\nclass PathLoss(Channel):\n    def __init__(self, gamma, **kwargs):\n        super().__init__(**kwargs)\n        # path loss exponent\n        self.gamma = gamma\n\n    def power_loss(self, bs, ue):\n        \"\"\"Computes power loss between BS and UE.\"\"\"\n        dist = bs.point.distance(ue.point)\n        loss = 10 * self.gamma * np.log10(4 * np.pi * dist * bs.frequency)\n        return loss\n\n\n# replace default channel model in configuration \nconfig = MComCore.default_config()\nconfig['channel'] = PathLoss\n\n# pass init parameters to custom channel class!\nconfig['channel_params'].update({'gamma': 2.0})\n\n# create environment with custom channel model\nenv = gym.make('mobile-small-central-v0', config=config)\n# ...\n```\n\n\n## About `mobile-env`\n\n\nIf you use mobile-env in your work, please cite with:\n\n```\n@misc{mobile-env,\n  author = {Schneider, Stefan and Werner, Stefan and Karl, Holger},\n  title = {An Open Environment for Autonomous Coordination in Mobile Networks},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub Repository},\n  howpublished = {\\url{https://github.com/stefanbschneider/mobile-env}},\n}\n```\n\nmobile-env is based on [DeepCoMP](https://github.com/CN-UPB/DeepCoMP), providing the underlying environment as open, stand-alone platform to be used by others.\n\n\nList of repositories, publications, or preprints using `mobile-env` (please open a pull request to add missing entries):\n\n* [DeepCoMP](https://github.com/CN-UPB/DeepCoMP)\n\n\n\n## Contributing\n\nDevelopment: [@stefanbschneider](https://github.com/stefanbschneider) and [@stwerner97](https://github.com/stwerner97/)\n\n\nWe happy if you find `mobile-env` useful. If you have feedback or want to report bugs, feel free to [open an issue](https://github.com/stefanbschneider/mobile-env/issues/new).\n\nWe also welcome contributions: Whether you implement a new channel model, fix a bug, or just make a minor addition elsewhere, feel free to open a pull request!\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stefanbschneider/mobile-env",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mobile-env",
    "package_url": "https://pypi.org/project/mobile-env/",
    "platform": "",
    "project_url": "https://pypi.org/project/mobile-env/",
    "project_urls": {
      "Homepage": "https://github.com/stefanbschneider/mobile-env"
    },
    "release_url": "https://pypi.org/project/mobile-env/1.1.3/",
    "requires_dist": [
      "gym (>=0.19.0)",
      "matplotlib (==3.5.0)",
      "numpy (==1.21.4)",
      "pygame (==2.1.0)",
      "shapely (==1.8.0)",
      "svgpath2mpl (==1.0.0)"
    ],
    "requires_python": ">=3.7.*",
    "summary": "mobile-env: An Open Environment for Autonomous Coordination in Wireless Mobile Networks",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12824920,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "440c68ae70474ce64421a3c6d07fc2af9b4eecc3aa6c4c0fd8c864237ce4953f",
        "md5": "a1cc527a58d71714ccb5921f90a56106",
        "sha256": "29dbf0f9ddf1be0f34d2251a88320bb3b4037bab088617e94857fa82a72d8458"
      },
      "downloads": -1,
      "filename": "mobile_env-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a1cc527a58d71714ccb5921f90a56106",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.*",
      "size": 27277,
      "upload_time": "2022-02-07T22:36:44",
      "upload_time_iso_8601": "2022-02-07T22:36:44.149138Z",
      "url": "https://files.pythonhosted.org/packages/44/0c/68ae70474ce64421a3c6d07fc2af9b4eecc3aa6c4c0fd8c864237ce4953f/mobile_env-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76d35fc6b442a74edc9daac188b591dd2f46d5778cf4018edf858270664b264c",
        "md5": "976e1b4af09c06a1ee7f2674bf3081de",
        "sha256": "5250cb4b26f4bcf208267dde56b6494e7bfe6d7fc0995f52d8bc1a01c0f44298"
      },
      "downloads": -1,
      "filename": "mobile-env-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "976e1b4af09c06a1ee7f2674bf3081de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.*",
      "size": 23805,
      "upload_time": "2022-02-07T22:36:45",
      "upload_time_iso_8601": "2022-02-07T22:36:45.391427Z",
      "url": "https://files.pythonhosted.org/packages/76/d3/5fc6b442a74edc9daac188b591dd2f46d5778cf4018edf858270664b264c/mobile-env-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}