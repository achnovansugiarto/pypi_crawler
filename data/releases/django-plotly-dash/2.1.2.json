{
  "info": {
    "author": "Mark Gibbs",
    "author_email": "django_plotly_dash@gibbsconsulting.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Dash",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django-plotly-dash\n\n[![PyPI version](https://badge.fury.io/py/django-plotly-dash.svg)](https://badge.fury.io/py/django-plotly-dash)\n[![Downloads](https://img.shields.io/pypi/dw/django-plotly-dash.svg)](https://img.shields.io/pypi/dw/django-plotly-dash.svg)\n![Develop Branch Build Status](https://travis-ci.org/GibbsConsulting/django-plotly-dash.svg?branch=master)\n[![Coverage Status](https://coveralls.io/repos/github/GibbsConsulting/django-plotly-dash/badge.svg?branch=master)](https://coveralls.io/github/GibbsConsulting/django-plotly-dash?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/django-plotly-dash/badge/?version=latest)](https://django-plotly-dash.readthedocs.io/en/latest/?badge=latest)\n\nExpose [plotly dash](https://plot.ly/products/dash/) apps as [Django](https://www.djangoproject.com/) tags. Multiple Dash apps can\nthen be embedded into a single web page, persist and share internal state, and also have access to the\ncurrent user and session variables.\n\nSee the source for this project here:\n<https://github.com/GibbsConsulting/django-plotly-dash>\n\nThis README file provides a short guide to installing and using the package, and also\noutlines how to run the demonstration application.\n\nMore detailed information\ncan be found in the online documentation at\n<https://readthedocs.org/projects/django-plotly-dash>\n\nAn online version of the demo can be found at <https://djangoplotlydash.com>\n\n\n## Installation\n\nFirst, install the package. This will also install plotly and some dash packages if they are not already present.\n\n    pip install django_plotly_dash\n\nThen, add `django_plotly_dash` to `INSTALLED_APPS` in your Django `settings.py` file\n\n    INSTALLED_APPS = [\n        ...\n        'django_plotly_dash.apps.DjangoPlotlyDashConfig',\n        ...\n        ]\n\nThe application's routes need to be registered within the routing structure by an appropriate ``include`` statement in\na ``urls.py`` file:\n\n    urlpatterns = [\n        ...\n        path('django_plotly_dash/', include('django_plotly_dash.urls')),\n    ]\n\nThe name within the URL is not important and can be changed.\n\nFor the final installation step, a migration is needed to update the\ndatabase:\n\n    ./manage.py migrate\n\nIf using version 3.0 or later of Django, then the use of frames within\nHTML documents has to be enabled by adding to the ``settings.py`` file:\n\n    X_FRAME_OPTIONS = 'SAMEORIGIN'\n\n\nFurther configuration, including live updating to share application\nstate, is described in the [online documentation](https://django-plotly-dash.readthedocs.io/en/latest/).\n\n## Demonstration\n\nThe source repository contains a demo application. To clone the repo and lauch the demo:\n\n```bash\ngit clone https://github.com/GibbsConsulting/django-plotly-dash.git\n\ncd django-plotly-dash\n\n./make_env                # sets up a virtual environment for development\n                          #   with direct use of the source code for the package\n\n./prepare_redis           # downloads a redis docker container\n                          #   and launches it with default settings\n                          #   *THIS STEP IS OPTIONAL*\n\n./prepare_demo            # prepares and launches the demo\n                          #   using the Django debug server at http://localhost:8000\n```\n\n## Usage\n\nTo use existing dash applications, first register them using the `DjangoDash` class. This\nreplaces the `Dash` class of the `dash` package.\n\nTaking a very simple example inspired by the excellent [getting started](https://dash.plot.ly/) documentation:\n\n```python\nimport dash\nfrom dash import dcc, html\n\nfrom django_plotly_dash import DjangoDash\n\napp = DjangoDash('SimpleExample')\n\napp.layout = html.Div([\n    dcc.RadioItems(\n        id='dropdown-color',\n        options=[{'label': c, 'value': c.lower()} for c in ['Red', 'Green', 'Blue']],\n        value='red'\n    ),\n    html.Div(id='output-color'),\n    dcc.RadioItems(\n        id='dropdown-size',\n        options=[{'label': i, 'value': j} for i, j in [('L','large'), ('M','medium'), ('S','small')]],\n        value='medium'\n    ),\n    html.Div(id='output-size')\n\n])\n\n@app.callback(\n    dash.dependencies.Output('output-color', 'children'),\n    [dash.dependencies.Input('dropdown-color', 'value')])\ndef callback_color(dropdown_value):\n    return \"The selected color is %s.\" % dropdown_value\n\n@app.callback(\n    dash.dependencies.Output('output-size', 'children'),\n    [dash.dependencies.Input('dropdown-color', 'value'),\n     dash.dependencies.Input('dropdown-size', 'value')])\ndef callback_size(dropdown_color, dropdown_size):\n    return \"The chosen T-shirt is a %s %s one.\" %(dropdown_size,\n                                                  dropdown_color)\n```\n\nNote that the `DjangoDash` constructor requires a name to be specified. This name is then used to identify the dash app in\ntemplates:\n\n```jinja2\n{% load plotly_dash %}\n\n{% plotly_app name=\"SimpleExample\" %}\n```\n\nThe registration code needs to be in a location\nthat will be imported into the Django process before any model or template tag attempts to use it. The example Django application\nin the demo subdirectory achieves this through an import in the main `urls.py` file; any `views.py` would also be sufficient.\n\nWhilst this example allows for the direct use of existing `Dash` applications, it does not provide for the sharing or updating of\ninternal state. The [online documentation](https://django-plotly-dash.readthedocs.io/en/latest/) provides details on using these\nand other additional features.\n\n## Development\n\nThe `make_env` script sets up the development environment, and pulls in the packages\nspecified in the `dev_requirements.txt` file. The `check_code` script invokes the test suite (using `pytest`) as well\nas invoking `pylint` on both the package and the associated demo.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GibbsConsulting/django-plotly-dash",
    "keywords": "django plotly plotly-dash dash dashboard",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-plotly-dash",
    "package_url": "https://pypi.org/project/django-plotly-dash/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-plotly-dash/",
    "project_urls": {
      "Documentation": "http://django-plotly-dash.readthedocs.io/",
      "Homepage": "https://github.com/GibbsConsulting/django-plotly-dash",
      "Source": "https://github.com/GibbsConsulting/django-plotly-dash",
      "Tracker": "https://github.com/GibbsConsulting/django-plotly-dash/issues"
    },
    "release_url": "https://pypi.org/project/django-plotly-dash/2.1.2/",
    "requires_dist": [
      "plotly",
      "dash (>=2.0)",
      "dpd-components",
      "dash-bootstrap-components (<1)",
      "channels (<3.0)",
      "Django (<4.0.0,>=2.2)",
      "Flask (>=1.0.2)",
      "Werkzeug (<2.1,>=2.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Django use of plotly dash apps through template tags",
    "version": "2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17162091,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e77857e213d29337603689ba948d607a02cf47314e43c2c50663c5688fff7a12",
        "md5": "58eda39765a8765b1c6e2a6a3b3f568f",
        "sha256": "6909f32cef99c89c46afd604f2a9b4f35b1250a61f50aff31f945a00cbf73c57"
      },
      "downloads": -1,
      "filename": "django_plotly_dash-2.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58eda39765a8765b1c6e2a6a3b3f568f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 55111,
      "upload_time": "2022-11-10T23:40:30",
      "upload_time_iso_8601": "2022-11-10T23:40:30.545174Z",
      "url": "https://files.pythonhosted.org/packages/e7/78/57e213d29337603689ba948d607a02cf47314e43c2c50663c5688fff7a12/django_plotly_dash-2.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4911b9658c257dcddb665f819be9f54359b6b69a9aa253437a255e06be5e2ac",
        "md5": "1d59143cc77b1dffae7fd9bbdf4c0608",
        "sha256": "320b9739ddbb890eec252207b073eb24bc8be5ed6a9fa4a3c4fb90f8239ae705"
      },
      "downloads": -1,
      "filename": "django-plotly-dash-2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1d59143cc77b1dffae7fd9bbdf4c0608",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 40049,
      "upload_time": "2022-11-10T23:40:44",
      "upload_time_iso_8601": "2022-11-10T23:40:44.457788Z",
      "url": "https://files.pythonhosted.org/packages/d4/91/1b9658c257dcddb665f819be9f54359b6b69a9aa253437a255e06be5e2ac/django-plotly-dash-2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}