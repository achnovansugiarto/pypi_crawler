{
  "info": {
    "author": "Łukasz Banasiak",
    "author_email": "lukas.banasiak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===================\ndjango-cities-teryt\n===================\n\nPolish region and city data for Django.\n\nThis app provides models, admin integration and commands to import region and city data in your database.\n\nThe data is pulled from `TERYT <http://bip.stat.gov.pl/en/teryt/>`_ database\n(National Official Register of the Territorial Division of the Country). TERYT is maintained by\nPolish Central Statistical Office (`GUS <http://stat.gov.pl/en/>`_)\n\nDatabase contains:\n - provinces\n - counties\n - municipalities\n - villages\n - cities\n - city districts\n\nInstallation\n------------\n\nInstall django-cities-teryt\n\n.. code:: bash\n\n    pip install django-cities-teryt\n\nOr dev version\n\n.. code:: bash\n\n    pip install -e git+git@github.com:lukaszbanasiak/django-cities-teryt.git#egg=cities_teryt\n\nAdd ``cities_teryt`` to your ``INSTALLED_APPS``\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'cities_teryt',\n    )\n\nNow, run ``syncdb``, it will only create tables for models\n\n.. code:: bash\n\n    ./manage.py syncdb\n\nConfiguration\n-------------\n\n1. Download ``SIMC`` and ``TERC`` xml files from TERYT website http://www.stat.gov.pl/broker/access/prefile/listPreFiles.jspa and save them to one directory.\n2. Setup in your ``settings.py`` full path to above directory\n\n.. code:: python\n\n    # Default directory is `import` dir in `django-cities-teryt` app directory\n    CITIES_TERYT_IMPORT_DIR = '/path/to/dir'\n\nImporting data\n--------------\n\nTo populate your database with all TERYT data use command\n\n.. code:: bash\n\n    ./manage.py cities_teryt --data all --import\n\nTo remove data use command\n\n.. code:: bash\n\n    ./manage.py cities_teryt --data all --flush\n\nTo operate on specific type of data enumerate them after ``--data`` argument\n\n.. code:: bash\n\n    ./manage.py cities_teryt --data province, county, municipality --import\n    ./manage.py cities_teryt --data city, village, district --flush\n\nNotice\n^^^^^^\nData have relations so it's best to import everything.\nData are large and take time to import (there's no progress display).\nVerbosity is controlled through LOGGING.\n\nExamples\n--------\n\nGet ``City`` by name\n\n.. code:: python\n\n    >>> City.objects.get(name='Swarzędz')\n    <City: Swarzędz (0971502)>\n\nTo get name of ``Municipality`` of this City we can use ``parent`` method or call directly ``municipality`` attrib\n\n.. code:: python\n\n    >>> City.objects.get(name='Swarzędz').parent\n    <Municipality: Swarzędz (302116)>\n    >>> City.objects.get(name='Swarzędz').municipality\n    <Municipality: Buk (302103)>\n    >>> Municipality.objects.get(city__name='Swarzędz')\n    <Municipality: Swarzędz (302116)>\n\nIn this way we can get also ``Province`` or ``County``\n\n.. code:: python\n\n    >>> City.objects.get(name='Swarzędz').province\n    <Province: wielkopolskie (30)>\n    >>> Province.objects.get(city__name='Swarzędz')\n    <Province: wielkopolskie (30)>\n\n... or even ``Districts``\n\n.. code:: python\n\n    >>> c = City.objects.get(name='Swarzędz')\n    >>> c.district_set.all()\n    [<District: Nowa Wieś (0971519)>, <District: Zieleniec (0971525)>]\n    >>> District.objects.filter(city=c)\n    [<District: Nowa Wieś (0971519)>, <District: Zieleniec (0971525)>]\n\nList all ``Cities`` in the same ``County``\n\n.. code:: python\n\n    >>> County.objects.get(city__name='Swarzędz').city_set.all()\n    [<City: Buk (0970520)>, <City: Murowana Goślina (0971152)>, <City: Kostrzyn (0970885)>, <City: Mosina (0971057)>, <City: Pobiedziska (0971287)>, <City: Puszczykowo (0971376)>, <City: Kórnik (0970922)>, <City: Swarzędz (0971502)>, <City: Luboń (0970974)>, <City: Stęszew (0971494)>]\n\nGet pretty display name\n\n.. code:: python\n\n    # Village, Municipality, County, Province\n    >>> print Village.objects.get(name='Kaczkowo', province__name='wielkopolskie').get_display_name()\n    Kaczkowo, Rydzyna, leszczyński, wielkopolskie\n    # `Municipality` and `County` for \"Poznań\" is the same so we got only `City` and `Province` name\n    >>> print City.objects.get(name='Poznań').get_display_name()\n    Poznań, wielkopolskie\n\nRequirements\n------------\n\nSee ``requirements.txt``",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lukaszbanasiak/django-cities-teryt",
    "keywords": "django cities teryt gus provinces counties municipalities villages districts",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-cities-teryt",
    "package_url": "https://pypi.org/project/django-cities-teryt/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-cities-teryt/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/lukaszbanasiak/django-cities-teryt"
    },
    "release_url": "https://pypi.org/project/django-cities-teryt/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Polish region and city data for Django.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1244529,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f8657787a6c80d495c11baf24a3f72f053f3a2b8e11d9cdb394320d8f6063b5",
        "md5": "d1da65d7989ca697518511bf460a650e",
        "sha256": "476316418853596f4e8886704f5a4de859813c625b0f9cb0bd2f502a260836af"
      },
      "downloads": -1,
      "filename": "django-cities-teryt-1.0.0.zip",
      "has_sig": false,
      "md5_digest": "d1da65d7989ca697518511bf460a650e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13859,
      "upload_time": "2014-10-01T13:59:11",
      "upload_time_iso_8601": "2014-10-01T13:59:11.015587Z",
      "url": "https://files.pythonhosted.org/packages/2f/86/57787a6c80d495c11baf24a3f72f053f3a2b8e11d9cdb394320d8f6063b5/django-cities-teryt-1.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}