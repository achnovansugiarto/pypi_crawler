{
  "info": {
    "author": "Ryan Castner",
    "author_email": "castner.rr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "=============================\ndjango-groups-cache\n=============================\n\n.. image:: https://badge.fury.io/py/django-groups-cache.png\n    :target: https://badge.fury.io/py/django-groups-cache\n\n.. image:: https://travis-ci.org/audiolion/django-groups-cache.png?branch=master\n    :target: https://travis-ci.org/audiolion/django-groups-cache\n\n.. image:: https://codecov.io/gh/audiolion/django-groups-cache/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/audiolion/django-groups-cache\n\nCaches the groups a user is in so requests don't have to make calls to the database to check group status.\n\nSupport\n-------\n\nCurrently supporting Django 1.8, 1.9, 1.10 and Python 2.7/Python 3 where support for versions alines with\nDjango's support. See the `tox.ini` file for specific Python and Django version pairings.\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-groups-cache.readthedocs.io.\n\nQuickstart\n----------\n\nInstall django-groups-cache::\n\n    pip install django-groups-cache\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'groups_cache.apps.GroupsCacheConfig',\n        ...\n    )\n\nAdd the middleware to your `MIDDLEWARE_CLASSES`:\n\n.. code-block:: python\n\n    MIDDLEWARE_CLASSES = (\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n        'groups_cache.middleware.GroupsCacheMiddleware',\n    )\n\nChecking in a Django Template if the user is in a group name:\n\n.. code-block:: python\n\n    {% if \"admins\" in request.groups_cache %}\n      <a href=\"/admin\">Admin Panel</a>\n    {% endif %}\n\n    # or use templatetag, note that templatetag is slower\n\n    {% load has_group %}\n\n    {% if request.user|has_group:\"admins\" %}\n      <a href=\"/admin\">Admin Panel</a>\n    {% endif %}\n\nTurn on caching:\n\n.. code-block:: python\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n            'LOCATION': '127.0.0.1:11211',\n        }\n    }\n\nSee https://docs.djangoproject.com/en/1.10/topics/cache/#memcached for more details on setting\nup memcached.\n\nNote**\n\nUsing `django.core.cache.backends.locmem.LocMemCache` is not safe for production unless you are\nonly running a single process (and odds are you aren't).\n\nSee https://docs.djangoproject.com/en/1.10/topics/cache/#local-memory-caching for more details.\n\nFeatures\n--------\n\n* Adds `groups_cache` property to `request` object\n* Provides templatetag `has_group`\n* Invalidates cache on `User` or `Group` model changes and on m2m `groups` ManyToManyField changes\n* Fully tested with high coverage\n\n\nRunning Tests\n-------------\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.5.5 (2017-01-13)\n++++++++++++++++++\n\n* Bug fix for templatetag `has_group`\n* Tests added for 100% coverage of templatetag folder\n\n0.5.5 (2017-01-12)\n++++++++++++++++++\n\n* Omit urls.py from coverage report (not used but needed for django package)\n* Omit apps.py from coverage report (default apps file)\n\n0.5.4 (2017-01-12)\n++++++++++++++++++\n\n* Removal of py32/django1.8 support from Travis CI build\n\n0.5.3 (2017-01-12)\n++++++++++++++++++\n\n* Fixing .travis.yml file and CI builds\n\n0.5.2 (2017-01-12)\n++++++++++++++++++\n\n* Typo in README.rst\n\n0.5.1 (2017-01-12)\n++++++++++++++++++\n\n* Add codecov.io support\n* Documentation updates\n\n0.5.0 (2017-01-12)\n++++++++++++++++++\n\n* Add requirements.txt to tox.ini so tests can run\n* Fix broken compatibility with Django 1.8/1.9 due to backwards incompatible changes in 1.9/1.10 code\n\n0.4.0 (2017-01-12)\n++++++++++++++++++\n\n* Add test suite that generates 100% coverage\n* Fixed a bug found by test suite with cache not invalidating on the `groups` ManyToManyField changing\n\n0.3.1 (2017-01-11)\n++++++++++++++++++\n\n* Documentation updates\n\n0.3.0 (2017-01-11)\n++++++++++++++++++\n\n* First stable and working release on PyPI.\n\n0.1.0 (2017-01-11)\n++++++++++++++++++\n\n* First release on PyPI.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/audiolion/django-groups-cache",
    "keywords": "django-groups-cache",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-groups-cache",
    "package_url": "https://pypi.org/project/django-groups-cache/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-groups-cache/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/audiolion/django-groups-cache"
    },
    "release_url": "https://pypi.org/project/django-groups-cache/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Caches the groups a user is in so requests don't have to make calls to the database to check group status.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3466978,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe3d2d50a5351323336b37ed008025233cf590cabe112f8a66aef44c2910c3ca",
        "md5": "9590ab80a117b27a357e99be5f48822e",
        "sha256": "ede08427251b7e9fd12b0f7659cf17f30fcd4c0ccc3e0bf0be8953f3a3c5a379"
      },
      "downloads": -1,
      "filename": "django-groups-cache-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9590ab80a117b27a357e99be5f48822e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7947,
      "upload_time": "2017-01-13T05:10:06",
      "upload_time_iso_8601": "2017-01-13T05:10:06.734159Z",
      "url": "https://files.pythonhosted.org/packages/fe/3d/2d50a5351323336b37ed008025233cf590cabe112f8a66aef44c2910c3ca/django-groups-cache-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}