{
  "info": {
    "author": "Jonathan Dorival",
    "author_email": "jonathan.dorival@novapost.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Framework :: Django",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3"
    ],
    "description": "#######\nINSTALL\n#######\n\nTo run the demo project for testing::\n\n    $ git clone git://github.com/jojax/django-js-error-hook.git\n    $ cd django-js-error-hook\n    $ virtualenv env --python=python3\n    $ source env/bin/activate\n    (env) $ pip install -e .\n    (env) $ pip install -e demo\n    (env) $ demo migrate\n\nRun the server::\n\n    (env) $ demo runserver\n\nThen access: http://localhost:8000/ - the JavaScript error will be logged in your console.\n\nTo install the project in production::\n\n    $ pip install django-js-error-hook\n\nAdd django-js-error-hook to your INSTALLED_APPS settings::\n\n    INSTALLED_APPS = (\n        ...\n        'django.contrib.staticfiles',\n        'django_js_error_hook',\n        ...\n    )\n\nIf you want to log the error in the console for development::\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'filters': {\n            'require_debug_false': {\n                '()': 'django.utils.log.RequireDebugFalse'\n            }\n        },\n        'formatters': {\n            'verbose': {\n                'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'\n            },\n            'simple': {\n                'format': '\\033[22;32m%(levelname)s\\033[0;0m %(message)s'\n            },\n        },\n        'handlers': {\n            'mail_admins': {\n                'level': 'ERROR',\n                'filters': ['require_debug_false'],\n                'class': 'django.utils.log.AdminEmailHandler'\n            },\n            'console': {\n                'level': 'DEBUG',\n                'class': 'logging.StreamHandler',\n                'formatter': 'simple'\n                },\n        },\n        'loggers': {\n            'django.request': {\n                'handlers': ['mail_admins'],\n                'level': 'ERROR',\n                'propagate': True,\n            },\n            'javascript_error': {\n                'handlers': ['mail_admins', 'console'],\n                'level': 'ERROR',\n                'propagate': True,\n            },\n        }\n    }\n\nBy default the logger is called \"javascript_error\", if you want you can define ``JAVASCRIPT_ERROR_ID`` in your settings::\n\n   JAVASCRIPT_ERROR_ID = '<your logger name>'\n\nThe view will do csrf validation - if for some reason it doesn't work, set ``JAVASCRIPT_ERROR_CSRF_EXEMPT`` to ``True`` in your settings.\n\nThen install the urls::\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^js_error_hook/', include('django_js_error_hook.urls')),\n        ...\n    )\n\n\nIn your template, simply add the js_error_hook script::\n\n    <script type=\"text/javascript\">\n        window.djangoJSErrorHandlerUrl = \"{% url 'js-error-handler' %}\"\n    </script>\n    <script type=\"text/javascript\" src=\"{% static 'js/django_js_error_hook.js' %}\"></script>\n\nNow every JavaScript error will be logged in your logging error stream. (Mail, Sentry, ...)\n\nHave fun and feel free to fork us and give us feedbacks!\n\n###########\nDEVELOPMENT\n###########\nWhen writing for this app you can run `tox <https://tox.wiki/en/latest/>`_ which will test the project\nagainst various versions of Python and Django:\n\n    pip install tox\n    tox\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jojax/django-js-error-hook",
    "keywords": "class-based view,generic view,js error hooking",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-js-error-hook",
    "package_url": "https://pypi.org/project/django-js-error-hook/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-js-error-hook/",
    "project_urls": {
      "Homepage": "https://github.com/jojax/django-js-error-hook"
    },
    "release_url": "https://pypi.org/project/django-js-error-hook/1.0/",
    "requires_dist": [
      "django (>=3.2.0)"
    ],
    "requires_python": "",
    "summary": "Generic handler for hooking client side javascript error.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15438504,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65ca124cfb25ce082951cafc094c22265cf2d7014105a372bd017a8529cd1f47",
        "md5": "272159e897def6085e10932bf8d1b0e1",
        "sha256": "eeafbecebeeaddc02a6ae12707936444284e1709656f4170d023f25b2d68e2d3"
      },
      "downloads": -1,
      "filename": "django_js_error_hook-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "272159e897def6085e10932bf8d1b0e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7153,
      "upload_time": "2022-10-17T15:57:51",
      "upload_time_iso_8601": "2022-10-17T15:57:51.364748Z",
      "url": "https://files.pythonhosted.org/packages/65/ca/124cfb25ce082951cafc094c22265cf2d7014105a372bd017a8529cd1f47/django_js_error_hook-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11893e7e8eed185bc3a99a7f1e6eb7713d22924455acf23b0f9bb22b688b99c9",
        "md5": "75f2edd593d304583ca3ca6bd1173ee6",
        "sha256": "880aed615d2c63c29b04f756960fcdc5b64483e6c769349b44da7a1a97e44579"
      },
      "downloads": -1,
      "filename": "django-js-error-hook-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "75f2edd593d304583ca3ca6bd1173ee6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6925,
      "upload_time": "2022-10-17T15:57:52",
      "upload_time_iso_8601": "2022-10-17T15:57:52.875456Z",
      "url": "https://files.pythonhosted.org/packages/11/89/3e7e8eed185bc3a99a7f1e6eb7713d22924455acf23b0f9bb22b688b99c9/django-js-error-hook-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}