{
  "info": {
    "author": "Ivan Belokobylskiy",
    "author_email": "belokobylskij@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# MQTT agent for Xiaomi Lumi gateway\n\n## Description\n\nThe service allow controlling gateway LEDs. sound and illuminance \nsensor over MQTT\n\nDefault config should be located in `/etc/lumimqtt.json` or \ncan be overridden with `LUMIMQTT_CONFIG` environment variable.\n\nExample run command:\n\n```sh \nLUMIMQTT_CONFIG=./lumimqtt.json python3 -m lumimqtt\n```\n\nThe configuration file is a JSON with the following content:\n\n```json\n{\n    \"mqtt_host\": \"localhost\",\n    \"mqtt_port\": 1883,\n    \"mqtt_user\": \"\",\n    \"mqtt_password\": \"\",\n    \"topic_root\": \"lumi/{MAC}\",\n    \"sensor_retain\": false,\n    \"sensor_threshold\": 50,\n    \"sensor_debounce_period\": 60\n}\n```\nEvery line is optional. By default, LumiMQTT will use the connection\nto localhost with the anonymous login.\n\n`{MAC}` will be automatically replaced by a hex number representing a MAC address.\n\n`sensor_retain` is option to enable storing last sensor value on the broker\n\n`sensor_threshold` is a threshold to avoid sending data to MQTT on small \nchanges\n\n`sensor_debounce_period` value in seconds to send data despite the threshold\n\nYou can also use GPIO(s) as binary sensor(s). Add this to configuration:\n\n```json\n{\n    <your configuration>,\n    \"binary_sensors\": {\n        \"<sensor name>\": {\n            \"gpio\": \"<gpio number>\",\n            \"device_class\": \"<device class>\",\n            \"topic\": \"<sensor name>\"\n        }\n    }\n}\n```\n\nValues in `<>` must be replaced.\n\n`gpio` is required, `device_class` and `topic` are optional. By default `topic` is sensor's name.\n\n[List of GPIOs.](https://github.com/openlumi/xiaomi-gateway-openwrt#gpio)\n[List of device classes.](https://www.home-assistant.io/integrations/binary_sensor/#device-class)\n\n## OpenWrt installation\n\n```sh \nopkg update \nopkg install python3-pip python3-asyncio python3-evdev\npip3 install -U lumimqtt\n```\n\nTo upgrade you can just run\n\n```sh\npip3 install -U lumimqtt\n```\n\n## Example run command:\n\n```sh\nlumimqtt\n```\n\n### or (in background):\n\n```sh\nlumimqtt &\n```\n\n### Autorun:\nTo run lumimqtt on start you need a file \n **/etc/init.d/lumimqtt** with the following content:\n\n```sh\n#!/bin/sh /etc/rc.common\nSTART=98\nUSE_PROCD=1\nstart_service()\n{\n    procd_open_instance\n\n    procd_set_param env LUMIMQTT_CONFIG=/etc/lumimqtt.json\n    procd_set_param command lumimqtt\n    procd_set_param stdout 1\n    procd_set_param stderr 1\n    procd_close_instance\n}\n```\n\nTo install this file on the gateway you can run\n\n```sh\nwget https://raw.githubusercontent.com/openlumi/lumimqtt/main/init.d/lumimqtt -O /etc/init.d/lumimqtt\nchmod +x /etc/init.d/lumimqtt\n/etc/init.d/lumimqtt enable\n/etc/init.d/lumimqtt start\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openlumi/lumimqtt/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumimqtt",
    "package_url": "https://pypi.org/project/lumimqtt/",
    "platform": "",
    "project_url": "https://pypi.org/project/lumimqtt/",
    "project_urls": {
      "Homepage": "https://github.com/openlumi/lumimqtt/"
    },
    "release_url": "https://pypi.org/project/lumimqtt/1.0.9/",
    "requires_dist": [
      "evdev (>=1.0.0)",
      "aio-mqtt (>=0.2.0)"
    ],
    "requires_python": "",
    "summary": "Xiaomi Lumi Gateway MQTT integration",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15543159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af1d6e35c10518841db719ead0da757eb2dfe2c1c73f0cbed06b8fbd33c66090",
        "md5": "ccc057a6cfd49f8b2f857f6a4cad9d2a",
        "sha256": "7cfef6bad9fbfd53d60ba9fee982776075143bc9937c1b60d43448a2bc99a35a"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ccc057a6cfd49f8b2f857f6a4cad9d2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20748,
      "upload_time": "2021-01-28T22:17:29",
      "upload_time_iso_8601": "2021-01-28T22:17:29.007605Z",
      "url": "https://files.pythonhosted.org/packages/af/1d/6e35c10518841db719ead0da757eb2dfe2c1c73f0cbed06b8fbd33c66090/lumimqtt-1.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35620dde866f4acc97caf5c262d25c80f7f843a8483198f7b368aea690fe7fde",
        "md5": "6b1c1c89a2e0850ae9057207c9a22d1f",
        "sha256": "870a286af6be5c30bf5a55b45db1f76307c709d97d938491f9e6b5fba7786371"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "6b1c1c89a2e0850ae9057207c9a22d1f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21674,
      "upload_time": "2021-01-28T22:17:30",
      "upload_time_iso_8601": "2021-01-28T22:17:30.520337Z",
      "url": "https://files.pythonhosted.org/packages/35/62/0dde866f4acc97caf5c262d25c80f7f843a8483198f7b368aea690fe7fde/lumimqtt-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}