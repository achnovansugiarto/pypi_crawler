{
  "info": {
    "author": "Ivan Belokobylskiy",
    "author_email": "belokobylskij@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# MQTT agent for Xiaomi Lumi gateway\n\n## Description\n\nThe service allow controlling gateway LEDs, button, and illuminance \nsensor over MQTT\n\nDefault config should be located in `/etc/lumimqtt.json` or \ncan be overridden with `LUMIMQTT_CONFIG` environment variable.\n\n\n## Interaction\n\n### Default devices\n\n|      Action      |         Topic         |                Payload                |                                                          Expected values          |\n|:----------------:|:---------------------:|:-------------------------------------:|:---------------------------------------------------------------------------------:|\n| Read light state | lumi/&lt;ID&gt;/light       |                                       | {\"state\": \"ON\", \"brightness\": 255, \"color\": {\"r\": 255, \"g\": 0, \"b\": 0}}     |\n| Switch light     | lumi/&lt;ID&gt;/light/set   | {\"state\": \"ON\"}                       |                                                                             |\n| Set light color  | lumi/&lt;ID&gt;/light/set   | {\"color\": {\"r\": 255, \"g\": 0, \"b\": 0}} |                                                                             |\n| Set brightness   | lumi/&lt;ID&gt;/light/set   | {\"brightness\": 255}                   |                                                                             |\n| Set color or brigthness with 10 seconds transition | lumi/&lt;ID&gt;/light/set | {\"color\": {\"r\": 255, \"g\": 0, \"b\": 0}, \"brightness\": 100, \"transition\": 10} |        |\n| Read illuminance | lumi/&lt;ID&gt;/illuminance |                                       | 0-1000                                                                      |\n| Button           | lumi/&lt;ID&gt;/btn0/action | | single, double, triple, quadruple, many,<br>hold, double_hold, triple_hold, quadruple_hold, many_hold,<br>release |\n\n\n\n### Binary sensors (soldered to GPIO points)\n\n|      Action      |          Topic          | Expected values |\n|:----------------:|:-----------------------:|:---------------:|\n| Read GPIO sensor | lumi/&lt;ID&gt;/<SENSOR_NAME> | ON/OFF          |\n\n\n## Run application\nExample run command:\n\n```sh \nLUMIMQTT_CONFIG=./lumimqtt.json python3 -m lumimqtt\n```\n\nThe configuration file is a JSON with the following content:\n\n```json\n{\n    \"mqtt_host\": \"localhost\",\n    \"mqtt_port\": 1883,\n    \"mqtt_user\": \"\",\n    \"mqtt_password\": \"\",\n    \"topic_root\": \"lumi/{device_id}\",\n    \"auto_discovery\": true,\n    \"sensor_retain\": false,\n    \"sensor_threshold\": 50,\n    \"sensor_debounce_period\": 60,\n    \"light_transition_period\": 1.0\n}\n```\nEvery line is optional. By default, LumiMQTT will use the connection\nto localhost with the anonymous login.\n\n`device_id` **if not provided** will be automatically replaced by a hex number \nrepresenting a MAC address of the first network interface.\n\n`auto_discovery` set to `false` to disable creating autodiscovery topics that\nare user by Home Assistant to discover entities.\n\n`sensor_retain` is option to enable storing last sensor value on the broker\n\n`sensor_threshold` is a threshold to avoid sending data to MQTT on small \nchanges\n\n`sensor_debounce_period` value in seconds to send data despite the threshold\n\n`light_transition_period` value in seconds to set default transition for light\nswitching or light change. Use `0` to remove the transition.\n\nYou can also use GPIO(s) as binary sensor(s). Add this to configuration:\n\n```json\n{\n    <your configuration>,\n    \"binary_sensors\": {\n        \"<sensor name>\": {\n            \"gpio\": \"<gpio number>\",\n            \"device_class\": \"<device class>\",\n            \"topic\": \"<sensor name>\"\n        }\n    }\n}\n```\n\nValues in `<>` must be replaced.\n\n`gpio` is required, `device_class` and `topic` are optional. By default `topic` is sensor's name.\n\n[List of GPIOs.](https://github.com/openlumi/xiaomi-gateway-openwrt#gpio)\n[List of device classes.](https://www.home-assistant.io/integrations/binary_sensor/#device-class)\n\n### Custom commands\n\nYou can add an extra section with custom commands that are executed with \nmqtt topics. Every command is exported as a switch entity in Home Assistant.\nIf json is passed to the set topic, the command will be interpolated with \nthe values. Plain text is passed as {text} variable \n```json\n{\n    <your configuration>,\n    \"custom_commands\": {\n      \"blink\": \"for i in 0 255 0 255 0 255 0; do echo $i > /sys/class/leds/{color}/brightness; sleep 1; done\",\n      \"tts\": \"echo \\\"Test TTS without MPD component for home assistant\\\" | python3 -c 'from urllib.parse import quote_plus;from sys import stdin;print(\\\"wget -O /tmp/tts.mp3 -U Mozilla \\\\\\\"http://translate.google.com/translate_tts?q=\\\"+quote_plus(stdin.read()[:100])+\\\"&ie=UTF-8&tl=en&total=1&idx=0&client=tw-ob&prev=input&ttsspeed=1\\\\\\\" && amixer set Master 200 && mpg123 /tmp/tts.mp3\\\")' | sh 2> /dev/null\",\n      \"tts_interpolate\": \"echo \\\"{text}\\\" | python3 -c 'from urllib.parse import quote_plus;from sys import stdin;print(\\\"wget -O /tmp/tts.mp3 -U Mozilla \\\\\\\"http://translate.google.com/translate_tts?q=\\\"+quote_plus(stdin.read()[:100])+\\\"&ie=UTF-8&tl=en&total=1&idx=0&client=tw-ob&prev=input&ttsspeed=1\\\\\\\" && amixer set Master {volume} && mpg123 /tmp/tts.mp3\\\")' | sh 2> /dev/null\",\n      \"restart_lumimqtt\": \"/etc/init.d/lumimqtt restart\",\n      \"reboot\": \"/sbin/reboot\"\n    }\n}\n```\n\n#### Usage examples\n\n|             Action             |              Topic             |                   Payload                         |\n|:------------------------------:|:------------------------------:|:-------------------------------------------------:|\n| Run command \"blink\"            | lumi/&lt;ID&gt;/blink/set            | {\"color\": \"red\"}                            |\n| Run command \"tts\"              | lumi/&lt;ID&gt;/tts/set              | &lt;ANYTHING&gt;                            |\n| Run command \"tts_interpolate\"  | lumi/&lt;ID&gt;/tts_interpolate/set  | {\"text\": \"Hi, it is a test\", \"volume\": 200} |\n| Run command \"restart_lumimqtt\" | lumi/&lt;ID&gt;/restart_lumimqtt/set | &lt;ANYTHING&gt;                            |\n| Run command \"reboot\"           | lumi/&lt;ID&gt;/reboot/set           | &lt;ANYTHING&gt;                            |\n\n## OpenWrt installation\n\n```sh \nopkg update \nopkg install python3-pip python3-asyncio python3-evdev\npip3 install -U lumimqtt\n```\n\nTo upgrade you can just run\n\n```sh\npip3 install -U lumimqtt\n```\n\n## Example run command:\n\n```sh\nlumimqtt\n```\n\n### or (in background):\n\n```sh\nlumimqtt &\n```\n\n### Autorun:\nTo run lumimqtt on start you need a file \n **/etc/init.d/lumimqtt** with the following content:\n\n```sh\n#!/bin/sh /etc/rc.common\nSTART=98\nUSE_PROCD=1\nstart_service()\n{\n    procd_open_instance\n\n    procd_set_param env LUMIMQTT_CONFIG=/etc/lumimqtt.json\n    procd_set_param command lumimqtt\n    procd_set_param stdout 1\n    procd_set_param stderr 1\n    procd_close_instance\n}\n```\n\nTo install this file on the gateway you can run\n\n```sh\nwget https://raw.githubusercontent.com/openlumi/lumimqtt/main/init.d/lumimqtt -O /etc/init.d/lumimqtt\nchmod +x /etc/init.d/lumimqtt\n/etc/init.d/lumimqtt enable\n/etc/init.d/lumimqtt start\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openlumi/lumimqtt/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumimqtt",
    "package_url": "https://pypi.org/project/lumimqtt/",
    "platform": "",
    "project_url": "https://pypi.org/project/lumimqtt/",
    "project_urls": {
      "Homepage": "https://github.com/openlumi/lumimqtt/"
    },
    "release_url": "https://pypi.org/project/lumimqtt/1.0.14/",
    "requires_dist": [
      "evdev (>=1.0.0)",
      "aio-mqtt (>=0.2.0)"
    ],
    "requires_python": "",
    "summary": "Xiaomi Lumi Gateway MQTT integration",
    "version": "1.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15543159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71c3d9f33e6621ca6b7218529cee3ad47d5b89c791b8ce7c45f50bc39296760b",
        "md5": "6a479b3eed41127f0dc5d5ab60451d92",
        "sha256": "2b91ac25755f5e13fdb4543f53273bacd0424d36c6da3c05a7286a8e0582cc4f"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6a479b3eed41127f0dc5d5ab60451d92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27270,
      "upload_time": "2021-09-28T19:14:17",
      "upload_time_iso_8601": "2021-09-28T19:14:17.686497Z",
      "url": "https://files.pythonhosted.org/packages/71/c3/d9f33e6621ca6b7218529cee3ad47d5b89c791b8ce7c45f50bc39296760b/lumimqtt-1.0.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b8aa61e53d059c3dac26db763bf27bd20357af40ae404b504033d63d92d5a55",
        "md5": "30cefc0dd7287b5b9702e65dbfb0c9e1",
        "sha256": "392e1828df562aa0d23471256100a0e24c66192bd5689039f7c0742e41edd3e5"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "30cefc0dd7287b5b9702e65dbfb0c9e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27553,
      "upload_time": "2021-09-28T19:14:20",
      "upload_time_iso_8601": "2021-09-28T19:14:20.656900Z",
      "url": "https://files.pythonhosted.org/packages/3b/8a/a61e53d059c3dac26db763bf27bd20357af40ae404b504033d63d92d5a55/lumimqtt-1.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}