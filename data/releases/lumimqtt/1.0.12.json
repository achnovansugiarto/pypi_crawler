{
  "info": {
    "author": "Ivan Belokobylskiy",
    "author_email": "belokobylskij@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# MQTT agent for Xiaomi Lumi gateway\n\n## Description\n\nThe service allow controlling gateway LEDs, button, and illuminance \nsensor over MQTT\n\nDefault config should be located in `/etc/lumimqtt.json` or \ncan be overridden with `LUMIMQTT_CONFIG` environment variable.\n\nExample run command:\n\n```sh \nLUMIMQTT_CONFIG=./lumimqtt.json python3 -m lumimqtt\n```\n\nThe configuration file is a JSON with the following content:\n\n```json\n{\n    \"mqtt_host\": \"localhost\",\n    \"mqtt_port\": 1883,\n    \"mqtt_user\": \"\",\n    \"mqtt_password\": \"\",\n    \"topic_root\": \"lumi/{device_id}\",\n    \"sensor_retain\": false,\n    \"sensor_threshold\": 50,\n    \"sensor_debounce_period\": 60,\n    \"light_transition_period\": 1.0\n}\n```\nEvery line is optional. By default, LumiMQTT will use the connection\nto localhost with the anonymous login.\n\n`device_id` **if not provided** will be automatically replaced by a hex number \nrepresenting a MAC address of the first network interface.\n\n`sensor_retain` is option to enable storing last sensor value on the broker\n\n`sensor_threshold` is a threshold to avoid sending data to MQTT on small \nchanges\n\n`sensor_debounce_period` value in seconds to send data despite the threshold\n\n`light_transition_period` value in seconds to set default transition for light\nswitching or light change. Use `0` to remove the transition.\n\nYou can also use GPIO(s) as binary sensor(s). Add this to configuration:\n\n```json\n{\n    <your configuration>,\n    \"binary_sensors\": {\n        \"<sensor name>\": {\n            \"gpio\": \"<gpio number>\",\n            \"device_class\": \"<device class>\",\n            \"topic\": \"<sensor name>\"\n        }\n    }\n}\n```\n\nValues in `<>` must be replaced.\n\n`gpio` is required, `device_class` and `topic` are optional. By default `topic` is sensor's name.\n\n[List of GPIOs.](https://github.com/openlumi/xiaomi-gateway-openwrt#gpio)\n[List of device classes.](https://www.home-assistant.io/integrations/binary_sensor/#device-class)\n\n## OpenWrt installation\n\n```sh \nopkg update \nopkg install python3-pip python3-asyncio python3-evdev\npip3 install -U lumimqtt\n```\n\nTo upgrade you can just run\n\n```sh\npip3 install -U lumimqtt\n```\n\n## Example run command:\n\n```sh\nlumimqtt\n```\n\n### or (in background):\n\n```sh\nlumimqtt &\n```\n\n### Autorun:\nTo run lumimqtt on start you need a file \n **/etc/init.d/lumimqtt** with the following content:\n\n```sh\n#!/bin/sh /etc/rc.common\nSTART=98\nUSE_PROCD=1\nstart_service()\n{\n    procd_open_instance\n\n    procd_set_param env LUMIMQTT_CONFIG=/etc/lumimqtt.json\n    procd_set_param command lumimqtt\n    procd_set_param stdout 1\n    procd_set_param stderr 1\n    procd_close_instance\n}\n```\n\nTo install this file on the gateway you can run\n\n```sh\nwget https://raw.githubusercontent.com/openlumi/lumimqtt/main/init.d/lumimqtt -O /etc/init.d/lumimqtt\nchmod +x /etc/init.d/lumimqtt\n/etc/init.d/lumimqtt enable\n/etc/init.d/lumimqtt start\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openlumi/lumimqtt/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumimqtt",
    "package_url": "https://pypi.org/project/lumimqtt/",
    "platform": "",
    "project_url": "https://pypi.org/project/lumimqtt/",
    "project_urls": {
      "Homepage": "https://github.com/openlumi/lumimqtt/"
    },
    "release_url": "https://pypi.org/project/lumimqtt/1.0.12/",
    "requires_dist": [
      "evdev (>=1.0.0)",
      "aio-mqtt (>=0.2.0)"
    ],
    "requires_python": "",
    "summary": "Xiaomi Lumi Gateway MQTT integration",
    "version": "1.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15543159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3485c66d7a530eaa33a89b0e44d58b64b7398be9ecfdcadd23a93cd14a77e937",
        "md5": "29d0928f316cd00b11613bfcd5281f45",
        "sha256": "49d48465343cf5a495d00f0a01af3d621a46c454ba624edda6156a5099c6cc65"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "29d0928f316cd00b11613bfcd5281f45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24415,
      "upload_time": "2021-06-09T20:48:24",
      "upload_time_iso_8601": "2021-06-09T20:48:24.133060Z",
      "url": "https://files.pythonhosted.org/packages/34/85/c66d7a530eaa33a89b0e44d58b64b7398be9ecfdcadd23a93cd14a77e937/lumimqtt-1.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98ef27b80bdf4d05178ce841c3d9109a688f10edd34ae0bcc53c1bbced5d3e08",
        "md5": "2600a80b62a30e2432f63988bd37a0f9",
        "sha256": "7b57dc2f0cd383e11df079b1c36c12d22fcdf9a5b5f28ae7b9931af0d299c052"
      },
      "downloads": -1,
      "filename": "lumimqtt-1.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "2600a80b62a30e2432f63988bd37a0f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24440,
      "upload_time": "2021-06-09T20:48:25",
      "upload_time_iso_8601": "2021-06-09T20:48:25.898317Z",
      "url": "https://files.pythonhosted.org/packages/98/ef/27b80bdf4d05178ce841c3d9109a688f10edd34ae0bcc53c1bbced5d3e08/lumimqtt-1.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}