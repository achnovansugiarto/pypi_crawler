{
  "info": {
    "author": "MeshLib Team",
    "author_email": "support@meshinspector.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Free For Educational Use",
      "License :: Free for non-commercial use",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/MeshInspector/MeshLib)\n\n[![build-test-distribute](https://github.com/MeshInspector/MeshLib/actions/workflows/build-test-distribute.yml/badge.svg?branch=master)](https://github.com/MeshInspector/MeshLib/actions/workflows/build-test-distribute.yml?branch=master) \n[![PyPI version](https://badge.fury.io/py/meshlib.svg)](https://badge.fury.io/py/meshlib)\n[![Python](https://img.shields.io/pypi/pyversions/meshlib.svg?style=plastic)](https://badge.fury.io/py/meshlib)\n[![Downloads](https://pepy.tech/badge/meshlib/month?style=flat-square)](https://pepy.tech/project/meshlib)\n\n![MeshInspector/MeshLib](https://user-images.githubusercontent.com/10034350/176395489-6349670a-b9eb-4f53-886a-35a75b55e6ac.png)\n\n# Welcome to the MeshLib!\n3D scanning is becoming more and more ubiquitous. Robotic automation, self-driving cars and multitude of other industrial, medical and scientific applications require advanced computer vision to deliver the levels of automation customers expect these days. The great rise of AI gave another boost to computer vision and the need to utilize 3D data to make machines smarter. Not only are tasks at hand becoming more complex, but the size of data grows exponentially. \n\nThere is a multitude of general purpose libraries which deal with 3D data. Some stem from popular CAD packages, some are open source. The commercial ones tend to be quite expensive while open source are free though tend to be limited in functionality provided. Also those libraries value generality above other features  to allow maximum number of applications, but with the growing amounts of 3D data, performance is critical as it never has  been. Some of it can be addressed by using the scale of a commercial cloud, last generation CPU or GPU but underlying complexity of data representation makes it very hard and laborsome.\n\nThe goal which we set when designing MeshLib was to value simplicity and performance while providing a wide gamut of useful computational algorithms. The library also supports the most important data structures todayâ€™s sensors can produce - pointcloud, mesh, volume and more. For example, mesh is represented by half-edge data structure and cannot be made non-manifold. Some applications may require non-manifoldness, but most practical scans can be represented as manifoldness meshes without an issue. \n\n## Some useful links\n* [MeshInspector](https://github.com/MeshInspector/MeshInspector/) is a free application based on MeshLib\n\n* MeshInspector [online web-browser version](https://demo.meshinspector.com/)\n\n* MeshLib and MeshInspector [slides](https://docs.google.com/presentation/d/1D0Ry6SE2J25PBtO_G9ZIp1cavoX2wyyY8jgvtjeayC4/edit?usp=sharing)\n\n* Comparison [slides](https://docs.google.com/presentation/d/1Tw5ppmWoF-aRwuVqa6xdMSEjmEd5Y6O2ny7Gu8iQBos/edit?usp=sharing) of mesh operations with VTK library\n\n* MeshInspector [YouTube channel](https://www.youtube.com/channel/UCv9bNhwoVDPaLPPyWJeVPNg)\n\n* MeshLib [documentation](https://meshinspector.github.io/MeshLib/html/index.html)\n\n* [Email us](mailto:support@meshinspector.com)\n\n* Contact us anonymously [form](https://meshinspector.github.io/ReportIssue/)\n\n## Major features\nThis list is not full and updating each day\n### Math basics\n - Math primitives and operations support (Vectors 2D, 3D, 4D; Lines; Planes; Bounding Boxes; Matrices; Affine transformations; Quaternions; Histograms; etc.)\n### 3D data handling, creation, modification\n - 3D data various representations support: Mesh, Voxel and Point Cloud.\n - Data creation \n   - Mesh creation by given vertices and triangles,\n   - Surface primitives (e.g. tor, cube, sphere, etc).\n - Representation conversions\n   - Triangulation of a Point Cloud to Mesh,\n   - Mesh to Cloud Point conversion,\n   - Mesh to Voxel conversion,\n   - Voxel To Mesh conversion.\n - Deformations\n   - Laplassian deformation,\n   - Freeform deformation,\n   - Relax, mesh smoothing,\n   - Position Verts Smoothly, arrangement of vertices in accordance with the gradient along the neighbors.\n - Offsets\n   - Mesh offset, \n   - Mesh partial offset.\n - Resolution\n   - Breaking a mesh into smaller triangles (increasing the resolution)\n   - Mesh decimation (decreasing the number of triangles, decreasing the resolution) with a specified error relative to the old mesh.\n - Cutting a contour on a surface. The mesh is modified so that the resulting contour contains new edges cut through triangles at the specified points.\n - Splitting\n   - Splitting mesh into sub-meshes (components)\n### 3D data operations\n - Boolean ops (union, intersection, difference) \n   - Boolean ops on meshes via voxels. Efficient but not so accurate as explicit mesh operations.\n   - Explicit mesh boolean ops, very exact, fast and accurate.\n - Construction of Convex Hull of a point cloud or a mesh.\n### 3D Data problems fixing\n - Fixing holes in mesh\n   - Holes stitching (removing two holes by stitching their boundaries) \n   - Hole filling,\n   - Holes fixing metrics\n      - Basic set of triangulation metrics,\n      - Extended set of triangulation metrics,\n      - Custom triangulation metrics.\n - Delaunay triangulation optimization, changing triangles without changing vertices, according to Delaunay criterion,\n - Tunnels fixing,\n - Multiple edges detection\n - Degenerate triangles fixing,\n - Undercuts fixing, via voxels, \n - Surface self-intersections fixing\n   - Guaranteed fix via voxels, \n   - Fix via Relax (mesh smoothing).\n### Functions on 3D data\n - BVH hierarchies (AABB trees) for meshes and polylines to accelerate all other operations\n - Projection\n   - Projecting a point onto a mesh - closest point queries\n - Intersection\n   - Intersection of a ray with a mesh (ray tracing),\n   - Intersection of a plane with a mesh, result is a contour,\n   - Finding a contour representing intersection of two meshes, meshes remain unchanged,\n - Distance\n   - Distance from a point to a mesh,\n   - Minimal distance between two meshes,\n   - Mesh distance map (height map),\n   - 2D contour distance map.\n - Segmentation\n   - Semi-auto voxel segmentation (volumes classification).\n   - Semi-auto mesh segmentation by curvature.\n - Sampling\n   - Mesh sampling. The result is a separate thinned set of vertices, the mesh remains unchanged. \n   - Point cloud sampling. The result is a separate thinned set of points, the cloud remains unchanged\n      - Uniform cloud sampling,\n      - Grid cloud sampling.\n - Path \n   - Finding a shortest path through the mesh vertices,\n   - Finding a geodesic shortest path on the surface, not necessarily through mesh vertices.\n - Iterative Closest Points (ICP), two meshes aligning\n   - Point to point,\n   - Point to plane.\n### Upcoming features\nWe plan to add computed-tomography reconstruction in MeshLib (already present in MeshInspector). Please write us if you like to see some other features.\n\n# Python integration\n\nAlthough MeshLib is written in C++, all functions are exposed to Python as well. Python code can be executed both from within a MeshLib-based C++ application (embedded mode) and from python interpreter directly, which imports MeshLib modules.\n\nMoreover, MeshLib can be easily installed as a Python 3.8 - 3.11 package using `pip install`:\n* On Windows via\n```\npy -3 -m pip install --upgrade pip\npy -3 -m pip install meshlib\n```\n* On Linuxes supporting [manylinux_2_31+](https://github.com/mayeut/pep600_compliance#distro-compatibility), including Ubuntu 20+ and Fedora 32+ via\n```\nsudo apt install python3-pip\npython3 -m pip install --upgrade pip\npython3 -m pip install meshlib\n```\n* On macOS 12.0+ via\n```\npip install --upgrade pip\npip install meshlib\n```\n\n\n# Build\n## Build with VS2019 on Windows\n```sh\ngit clone https://github.com/MeshInspector/MeshLib.git\ncd MeshLib\ngit submodule update --init --recursive\ncd ..\n```\n### Preparing Third Parties\nSome third parties are taken from vcpkg, while others (missing in vcpkg) are configured as git submodules.\n\n### Vcpkg\n1. Please install vcpkg, and integrate it into Visual Studio (note that vcpkg requires English language pack in Visual Studio, and vcpkg cannot be installed on FAT volumes, only on NTFS):\n    ```sh\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    git checkout 2022.11.14\n    .\\bootstrap-vcpkg.bat\n    .\\vcpkg integrate install (with admin rights)\n    cd ..\n    ```\n    More details here: [vcpkg](https://github.com/microsoft/vcpkg).\n\n2. Execute install.bat\n    ```sh\n    cd vcpkg # or add vcpkg to PATH\n    ../MeshLib/thirdparty/install.bat\n    cd ..\n    ```\n3. Open solution file MeshInspector/source/MeshLib.sln in Visual Studio 2019. Build it and run.\n\n## Build with VS2022 on Windows\n\nThe steps are the same as for VS2019 above. The only exception is that you need to change `PlatformToolset` from `v142` to `v143` in `MeshLib/source/platform.props` after cloning MeshLib.\n\n## Build with CMake on Linux\nThis installation was checked on Ubuntu 20.04.4.\n\nUse automated installation process. It takes ~40 minutes if no required packages are already installed.\nThis approach is useful for new MR developers\n**Install/Build dependencies. Build project. Run Test Application** Run the following in terminal:\n\n```sh\ngit clone https://github.com/MeshInspector/MeshLib.git\ncd MeshLib\nsudo ./scripts/build_thirdparty.sh # need sudo to check and install dependencies\n./scripts/install_thirdparty.sh\n./scripts/build_sources.sh\n./scripts/distribution.sh\nsudo apt install ./distr/meshlib-dev.deb\n```\n\n> **_NOTE:_** `./scripts/install*.sh` scripts could be used as well, but apt install is preferable.\n\n> **_NOTE:_** `./scripts/install*.sh` scripts copy MR files directly to `/usr/local/lib`. Remove this directory manually if exists before apt install deb package.\n\n> **_NOTE:_** You could specify build type to Debug by `export MESHLIB_BUILD_TYPE=Debug`. Release is default.\n\n## Build with Emscripten on Linux\nThis installation was checked on Ubuntu 20.04.4 with emscripten 3.1.23.\n\nInstall Emscripten (find more on [emscripten official page](https://emscripten.org/docs/getting_started/downloads.html))\n```\ngit clone https://github.com/emscripten-core/emsdk.git\ncd emsdk\noptional git pull # optional\n./emsdk install 3.1.23 # (or enother version / latest)\n./emsdk activate 3.1.23\nsource ./emsdk_env.sh\n```\n\nBuild\n```\ncd ~/MeshInspectorCode\n./scripts/build_thirdparty.sh # select emscripten in the corresponding question\n./scripts/build_sorces.sh # select emscripten in the corresponding question\n```\n\nRun\n```\npython3 ./scripts/local_server.py\n# open in browser 127.0.0.1:8000\n```\n\n# Integration\n\n## Linux Ubuntu/Fedora\nYou can download [dev package](https://github.com/MeshInspector/MeshLib/releases) and install it with your Linux OS package manager. \nExamples of integration with cmake can be found in the `./examples` directory.\n\n\n## MacOS\nSame as for Linux, but requires brew packages to be installed:\n`xargs brew install < /Library/Frameworks/MeshLib.framework/Versions/Current/scripts/macos.txt`\n\n\n## Windows\nThere are two general options of integrating MeshLib into your project:\n1. [Submodule](#submodule)\n2. [Distribution](#distribution)\n\n**Common for both options:** [install thirdparty](#vcpkg)\n### Submodule\nYou can have MeshLib as submodule in your repository, and inculde all MeshLib's projects to your solution.\n> **_NOTE:_** You should use `MeshLib/source/common.props` in other projects of your solution.\n\n> **_NOTE:_** You can customize props by defining `CustomMRProps.props` in directory above `common.props`\n\n### Distribution\nYou can download [distribution](https://github.com/MeshInspector/MeshLib/releases) and integrate it in your projects.\n\nProject settings:\n1. `C/C++ -> General -> Additional Include Directories` add `distribution\\install\\include;`\n2. `Linker -> General -> Additional Library Directories` add `distribution\\install\\app\\$(Configuration);`\n3. `Linker -> Input -> Additional Dependencies` add `distribution\\install\\lib\\$(Configuration)\\*.lib;`\n4. Debug: `C/C++ -> Preprocessor -> Preprocessor Defenitions` add `_ITERATOR_DEBUG_LEVEL=0;`\n5. `vcpkg -> Triplet` set `x64-windows-meshlib`\n\nMake sure you copy all dlls from `distribution\\install\\app\\$(Configuration);` to your `$(TargetDir)`\n> **_NOTE:_** MeshLib distribution has x64 build only\n\n> **_NOTE:_** Distribution is build with ITERATOR_DEBUG_LEVEL=0 in debug so you will need to setup this for your projects\n\n# Our clients and users\n\nThe following companies use MeshLib in their software\n* [Smile Direct Club](https://smiledirectclub.com/)\n* [Mantle](https://www.mantle3d.com/)\n* Many smaller firms and start-ups\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MeshInspector/MeshLib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshlib",
    "package_url": "https://pypi.org/project/meshlib/",
    "platform": null,
    "project_url": "https://pypi.org/project/meshlib/",
    "project_urls": {
      "Bug Reports": "https://github.com/MeshInspector/MeshLib/issues",
      "Homepage": "https://github.com/MeshInspector/MeshLib",
      "Source": "https://github.com/MeshInspector/MeshLib"
    },
    "release_url": "https://pypi.org/project/meshlib/2.1.1.41/",
    "requires_dist": [
      "numpy (>=1.21.0)",
      "pytest (>=7.1.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "3d processing library",
    "version": "2.1.1.41",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17510386,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf362b93be15e19404a7c034786d1de31da121e8262e5b0d2dfb0d6959b7519f",
        "md5": "9ea9583332bad9652d53fa123180e9c9",
        "sha256": "6714dfd0c7d22ac3a7b8d2291183ef44b12790fb668ad3fe5dfb71dd28b8bc8f"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp310-none-macosx_12_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "9ea9583332bad9652d53fa123180e9c9",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8",
      "size": 29838723,
      "upload_time": "2023-03-30T12:45:59",
      "upload_time_iso_8601": "2023-03-30T12:45:59.603243Z",
      "url": "https://files.pythonhosted.org/packages/bf/36/2b93be15e19404a7c034786d1de31da121e8262e5b0d2dfb0d6959b7519f/meshlib-2.1.1.41-cp310-none-macosx_12_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9ae7e1ab8bf1dda6f89f34bcef4a1ba18a5c85a41faa46f4b43aa666e95ee44",
        "md5": "d3df64b3fe6c2f450471fb9a730885ea",
        "sha256": "59668fc3b5ea5499b1236863b5d27108ec0043d1a09e84b00ff315c1ef5f1e2d"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp310-none-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d3df64b3fe6c2f450471fb9a730885ea",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8",
      "size": 33078784,
      "upload_time": "2023-03-30T12:46:04",
      "upload_time_iso_8601": "2023-03-30T12:46:04.435358Z",
      "url": "https://files.pythonhosted.org/packages/b9/ae/7e1ab8bf1dda6f89f34bcef4a1ba18a5c85a41faa46f4b43aa666e95ee44/meshlib-2.1.1.41-cp310-none-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ccc95190ffacefb284a6f0b2c52a5ce14a6b38392708b390477bb89fe25c6dc",
        "md5": "cc26cb4a4901e7441fe63216c74d4309",
        "sha256": "40c97ad8b9ba287b739074868943de6bf702c8a0802151691628913b52bc0247"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp310-none-manylinux_2_31_aarch64.whl",
      "has_sig": false,
      "md5_digest": "cc26cb4a4901e7441fe63216c74d4309",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8",
      "size": 38518482,
      "upload_time": "2023-03-30T12:46:09",
      "upload_time_iso_8601": "2023-03-30T12:46:09.606591Z",
      "url": "https://files.pythonhosted.org/packages/7c/cc/95190ffacefb284a6f0b2c52a5ce14a6b38392708b390477bb89fe25c6dc/meshlib-2.1.1.41-cp310-none-manylinux_2_31_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7be5e9c5d197605c2be70bd0eb3f95081527ed9a0b4d2d09c06be8e5e1c8b334",
        "md5": "1814b9ac86837491b5d1d218f742718a",
        "sha256": "6f9d67e3d473d413809eac796d6d885a8a5fa5f18f81bde23550a743f6601553"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp310-none-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1814b9ac86837491b5d1d218f742718a",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8",
      "size": 43141210,
      "upload_time": "2023-03-30T12:46:14",
      "upload_time_iso_8601": "2023-03-30T12:46:14.876185Z",
      "url": "https://files.pythonhosted.org/packages/7b/e5/e9c5d197605c2be70bd0eb3f95081527ed9a0b4d2d09c06be8e5e1c8b334/meshlib-2.1.1.41-cp310-none-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc4d8a1312b2a356d4923cb1009f60b63cf0fe0e2fca62a11957e514495482fe",
        "md5": "9ed4b324da96dbdf5ebcfc5043a754af",
        "sha256": "f677904f80f4b01b1292b095cd21047f0b4d724ffb1e8285387e20486ce32745"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp310-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "9ed4b324da96dbdf5ebcfc5043a754af",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.8",
      "size": 14350635,
      "upload_time": "2023-03-30T12:46:18",
      "upload_time_iso_8601": "2023-03-30T12:46:18.519966Z",
      "url": "https://files.pythonhosted.org/packages/dc/4d/8a1312b2a356d4923cb1009f60b63cf0fe0e2fca62a11957e514495482fe/meshlib-2.1.1.41-cp310-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87862c218d7bd2e39dac3972d331c332d2b9b31e6d79cd0772511132945b7e0c",
        "md5": "79afe8e1e285e877e568b644af62fc06",
        "sha256": "d4402982c6f03c65c7daa7e9aca8401b70256606bda8150ee1e441a7d5be141b"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp311-none-macosx_12_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "79afe8e1e285e877e568b644af62fc06",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.8",
      "size": 30245063,
      "upload_time": "2023-03-30T12:46:22",
      "upload_time_iso_8601": "2023-03-30T12:46:22.491462Z",
      "url": "https://files.pythonhosted.org/packages/87/86/2c218d7bd2e39dac3972d331c332d2b9b31e6d79cd0772511132945b7e0c/meshlib-2.1.1.41-cp311-none-macosx_12_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "456758338da9a1f62cf4e458912b4c27122a858078f4f76958b584ada25faacd",
        "md5": "7d5011b0805941bb7926bd64aaae5bfe",
        "sha256": "2a935592d221f15bd1df0f598c56210b7ff3c8bd2d69448922e6ac22ecd4d9f3"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp311-none-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7d5011b0805941bb7926bd64aaae5bfe",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.8",
      "size": 33524825,
      "upload_time": "2023-03-30T12:46:27",
      "upload_time_iso_8601": "2023-03-30T12:46:27.267356Z",
      "url": "https://files.pythonhosted.org/packages/45/67/58338da9a1f62cf4e458912b4c27122a858078f4f76958b584ada25faacd/meshlib-2.1.1.41-cp311-none-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6240fc89effc8ac9e7bbaad111c83517ac5f5102f42987d6ffa63ed5a0bb337",
        "md5": "b3b6aaaba6a4cdaf0c06f3c6ba845cbc",
        "sha256": "c59cd05cebaeda363a8a24ad3b61604ae485a24a20a7bc621f3c8aea03ca1a49"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp311-none-manylinux_2_31_aarch64.whl",
      "has_sig": false,
      "md5_digest": "b3b6aaaba6a4cdaf0c06f3c6ba845cbc",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.8",
      "size": 38872826,
      "upload_time": "2023-03-30T12:46:32",
      "upload_time_iso_8601": "2023-03-30T12:46:32.098814Z",
      "url": "https://files.pythonhosted.org/packages/b6/24/0fc89effc8ac9e7bbaad111c83517ac5f5102f42987d6ffa63ed5a0bb337/meshlib-2.1.1.41-cp311-none-manylinux_2_31_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "baa3d3d7ba72bbd010c1eddbc237c277419eabe6e58a871bc85feec4ae9d9be6",
        "md5": "8449aed23087ff609845fa43dd0a0db9",
        "sha256": "1a664b479fc33304642e7e7c8c4605530e7e792786cb2066b5870c73a77f472e"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp311-none-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8449aed23087ff609845fa43dd0a0db9",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.8",
      "size": 43497704,
      "upload_time": "2023-03-30T12:46:37",
      "upload_time_iso_8601": "2023-03-30T12:46:37.209939Z",
      "url": "https://files.pythonhosted.org/packages/ba/a3/d3d7ba72bbd010c1eddbc237c277419eabe6e58a871bc85feec4ae9d9be6/meshlib-2.1.1.41-cp311-none-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89762451861a4760e5d19850bb5a6e76f7365ad8e9e68c95ac4c3272aca0d229",
        "md5": "2a68da15ce228195c48eb6c3a5f091bf",
        "sha256": "176a7483dd4ca65238478e83bff6887097a483d12a41d22eb64a79e5bad21a1f"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp311-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "2a68da15ce228195c48eb6c3a5f091bf",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.8",
      "size": 14351819,
      "upload_time": "2023-03-30T12:46:41",
      "upload_time_iso_8601": "2023-03-30T12:46:41.116187Z",
      "url": "https://files.pythonhosted.org/packages/89/76/2451861a4760e5d19850bb5a6e76f7365ad8e9e68c95ac4c3272aca0d229/meshlib-2.1.1.41-cp311-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c588b002b13c2a9703357552949226a0e24e8a97e385b398a44f584d4e7eef04",
        "md5": "856f4dfec0c596e9763113d142978e23",
        "sha256": "7e8503a30f0361a8e73fae29fb6b0481bb9ad57c9a49bb294838fc71d4b68d6a"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp38-none-macosx_12_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "856f4dfec0c596e9763113d142978e23",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8",
      "size": 29424079,
      "upload_time": "2023-03-30T12:46:45",
      "upload_time_iso_8601": "2023-03-30T12:46:45.061812Z",
      "url": "https://files.pythonhosted.org/packages/c5/88/b002b13c2a9703357552949226a0e24e8a97e385b398a44f584d4e7eef04/meshlib-2.1.1.41-cp38-none-macosx_12_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37f989de4617e984e8fb8c687117039d914ee94dcaa98c4d0db3b28e899a2f7e",
        "md5": "ef51e4ef14e0571c86b2d75172d95f74",
        "sha256": "91c43c1b04d49cd20fdbc65867f8012cdf1eb8f7a9182e4638bc4e09b3eb8b56"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp38-none-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ef51e4ef14e0571c86b2d75172d95f74",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8",
      "size": 32578394,
      "upload_time": "2023-03-30T12:46:50",
      "upload_time_iso_8601": "2023-03-30T12:46:50.150477Z",
      "url": "https://files.pythonhosted.org/packages/37/f9/89de4617e984e8fb8c687117039d914ee94dcaa98c4d0db3b28e899a2f7e/meshlib-2.1.1.41-cp38-none-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6cdbadfdb29af30f93c24563a3ec518d4e3d8791bb6d9c1995bd187f1673944",
        "md5": "5738e7babd7eb1ccf800a2f094eae063",
        "sha256": "ca210547ce963d55e74b487800e3819ad75707282e1edcc3a9821b6f052e0866"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp38-none-manylinux_2_31_aarch64.whl",
      "has_sig": false,
      "md5_digest": "5738e7babd7eb1ccf800a2f094eae063",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8",
      "size": 36288639,
      "upload_time": "2023-03-30T12:46:55",
      "upload_time_iso_8601": "2023-03-30T12:46:55.009876Z",
      "url": "https://files.pythonhosted.org/packages/e6/cd/badfdb29af30f93c24563a3ec518d4e3d8791bb6d9c1995bd187f1673944/meshlib-2.1.1.41-cp38-none-manylinux_2_31_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad0728b9ab0cd19ea21b51805da73f87a8f82db419e7e3948894ee85359a698c",
        "md5": "146a490b17eb2b4aa0cf70b3ad29d04c",
        "sha256": "ad0ec8aea19c39e59cef4495cb52aeca43e0ab5aa8c38fa3b289118891dfa336"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp38-none-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "146a490b17eb2b4aa0cf70b3ad29d04c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8",
      "size": 40719970,
      "upload_time": "2023-03-30T12:47:00",
      "upload_time_iso_8601": "2023-03-30T12:47:00.366131Z",
      "url": "https://files.pythonhosted.org/packages/ad/07/28b9ab0cd19ea21b51805da73f87a8f82db419e7e3948894ee85359a698c/meshlib-2.1.1.41-cp38-none-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59924cd4f0975590d4b78595a9670ffec94e24cfd279ba2a2228c697a58c90b4",
        "md5": "37bfc6b6b2790b10490aa5c0ac45cf1d",
        "sha256": "1ea302c1ea3d046ecfdb5a3b12451970684ca708771108107fef4d92c7346ef6"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp38-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "37bfc6b6b2790b10490aa5c0ac45cf1d",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.8",
      "size": 14350849,
      "upload_time": "2023-03-30T12:47:04",
      "upload_time_iso_8601": "2023-03-30T12:47:04.176002Z",
      "url": "https://files.pythonhosted.org/packages/59/92/4cd4f0975590d4b78595a9670ffec94e24cfd279ba2a2228c697a58c90b4/meshlib-2.1.1.41-cp38-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c743a16994f50269f464542e4e0ec9e7c44dc423acb8374a67fd77e74eeba1d",
        "md5": "65d5e67676b3abb7016fb4b022509ca8",
        "sha256": "23fe600902e7ef030f69f27d8b963e54f2b5e86ccea2f0dcfddd5ce1ed73b08c"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp39-none-macosx_12_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "65d5e67676b3abb7016fb4b022509ca8",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8",
      "size": 29806138,
      "upload_time": "2023-03-30T12:47:09",
      "upload_time_iso_8601": "2023-03-30T12:47:09.982064Z",
      "url": "https://files.pythonhosted.org/packages/9c/74/3a16994f50269f464542e4e0ec9e7c44dc423acb8374a67fd77e74eeba1d/meshlib-2.1.1.41-cp39-none-macosx_12_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95880ca7ebb3ccd09f7093b1d88e49d10ad6d372ec0f5150c1d23cfbf51d752b",
        "md5": "2c5da7c373c0e38c4f8a97b151491813",
        "sha256": "1698fbbfdd6454206c3a0470b05ed9d81afa31534af47e30231458d024291232"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp39-none-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2c5da7c373c0e38c4f8a97b151491813",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8",
      "size": 33031013,
      "upload_time": "2023-03-30T12:47:14",
      "upload_time_iso_8601": "2023-03-30T12:47:14.850414Z",
      "url": "https://files.pythonhosted.org/packages/95/88/0ca7ebb3ccd09f7093b1d88e49d10ad6d372ec0f5150c1d23cfbf51d752b/meshlib-2.1.1.41-cp39-none-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bffaec0bcb564ebc8081c23f27cec32889f24755e408577586fdce8603eaad5f",
        "md5": "ef2d8d2213f378dbc57b47237447ea75",
        "sha256": "5d1653d96c21f43952ae2bc73acbcd292b9b8f783deadbbab48de95ee1093f78"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp39-none-manylinux_2_31_aarch64.whl",
      "has_sig": false,
      "md5_digest": "ef2d8d2213f378dbc57b47237447ea75",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8",
      "size": 36289226,
      "upload_time": "2023-03-30T12:47:19",
      "upload_time_iso_8601": "2023-03-30T12:47:19.224758Z",
      "url": "https://files.pythonhosted.org/packages/bf/fa/ec0bcb564ebc8081c23f27cec32889f24755e408577586fdce8603eaad5f/meshlib-2.1.1.41-cp39-none-manylinux_2_31_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cda180e0f38ee775f4cea1717f4ca4b0d2f7bfa55610bfee4fd1ac9459941b7f",
        "md5": "729440c2f97e836bbf2e773e70ac4a74",
        "sha256": "61b4e1596387f0f9c3735860a1cf70afbe8378a8b25ab32a15622155e9e467c7"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp39-none-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "729440c2f97e836bbf2e773e70ac4a74",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8",
      "size": 40722860,
      "upload_time": "2023-03-30T12:47:24",
      "upload_time_iso_8601": "2023-03-30T12:47:24.411954Z",
      "url": "https://files.pythonhosted.org/packages/cd/a1/80e0f38ee775f4cea1717f4ca4b0d2f7bfa55610bfee4fd1ac9459941b7f/meshlib-2.1.1.41-cp39-none-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c530af82ac1bbd05ea3b4c9eff8108a13dd0c7a32faddb86817e474f4b1dd3b0",
        "md5": "56d4d89f11dcc7a03b7f87658dd851f3",
        "sha256": "750e41239e18a051c40e2d3370703307613b0cc1009f536b89c68f1c8295c380"
      },
      "downloads": -1,
      "filename": "meshlib-2.1.1.41-cp39-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "56d4d89f11dcc7a03b7f87658dd851f3",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.8",
      "size": 14353316,
      "upload_time": "2023-03-30T12:47:29",
      "upload_time_iso_8601": "2023-03-30T12:47:29.554635Z",
      "url": "https://files.pythonhosted.org/packages/c5/30/af82ac1bbd05ea3b4c9eff8108a13dd0c7a32faddb86817e474f4b1dd3b0/meshlib-2.1.1.41-cp39-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}