{
  "info": {
    "author": "Brianna Rainey",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)",
      "Programming Language :: Python :: 3.8",
      "Topic :: Games/Entertainment",
      "Topic :: Games/Entertainment :: Role-Playing"
    ],
    "description": "# dnd-character\nA Python library to make 5e Dungeons & Dragons characters for use in another app. Characters are serializable into Python dicts so they can be saved and loaded however you wish.\n\nSRD rules are fetched from the [5e SRD API](https://github.com/5e-bits/5e-srd-api) the first time they're requested, then the JSON is cached locally for faster retrieval in the future. I've included the `json_cache` containing the SRD inside the repo in case this API changes, but when the API does change I will update this library. So please pin your version if you want to avoid any breaking changes.\n\n\n## Installation and Use\n1. Install from PyPI using `pip install dnd-character`\n1. See `example.py` for example code on how to use the library.\n\n\n## Licenses\nThe software is EPL-2.0 and the text for this license is in `LICENSE` as is standard for software. Originally forked from [PyDnD](https://github.com/Coffee-fueled-deadlines/PyDnD). The contents of `dnd_character/json_cache` are retrieved from [5e-srd-api](https://github.com/5e-bits/5e-srd-api), and are covered by the Open Game License. See `dnd_character/json_cache/OGLv1.0a.txt` for details.\n\n\n## Example Code\n\n### Creating Characters and Monsters\nThe `classes` module has functions for creating all 12 classes from the System Reference Document. The `monsters` module has a dictionary of monsters, which are dictionaries themselves.\n```\nfrom dnd_character.classes import Bard\nfrom dnd_character.monsters import SRD_monsters\nfrom random import randint\n\nbrianna = Bard(\n    name=\"Brianna\",\n    level=10,\n    )\nzombie = SRD_monsters[\"zombie\"]\nattack_bonus = zombie[\"actions\"][0][\"attack_bonus\"]\n# Zombie rolls a d20 to attack a Bard\nif randint(1, 20) + attack_bonus => brianna.armour_class:\n    print(f\"{brianna.name} was hit by {zombie['name']}!\")\nelse:\n    print(f\"{brianna.name} bravely dodged the attack\")\n```\n\n### Leveling and Experience\nThe library should help leveling up characters automatically if you manage the Character's `experience` attribute. It's simpler to avoid modifying the level directly.\n```\nimport dnd_character\nthor = Character(name=\"Thor\")\nassert thor.level == 1\nthor.experience += 1000\nassert thor.level == 3\nassert thor.experience.to_next_level == 1700\nthor.experience += thor.experience.to_next_level\nassert thor.level == 4\n```\n\n### Starting Equipment\nCharacters initialized with a class will have the starting equipment of that class, and an attribute called `player_options` which lists the optional starting equipment.\n```\nfrom dnd_character.classes import Paladin\nfrom pprint import pprint\nsturm = Paladin(dexterity=10)\npprint(sturm.inventory)\nprint(sturm.armour_class)\n# Remove Chain Mail\nsturm.removeItem(sturm.inventory[0])\nprint(sturm.armour_class)\n# New Item\nfrom dnd_character.equipment import SRD_equipment\ndragonlance = SRD_equipment['lance']\ndragonlance[\"name\"] = \"DragonlanceÂ®\"\nsturm.giveItem(dragonlance)\n# View optional starting equipment\npprint(sturm.player_options)\n```\n\n\n### Using Spells\nSupport for spells is not super great at the moment. Characters have dictionaries like `spells_known` and `cantrips_known` in which you're expected to store dictionaries from `SRD_spells`... but there's no useful help from the library here. Yet!\n```\nfrom dnd_character.spellcasting import SRD_spells, spells_for_class_level\nfrom pprint import pprint\ncantrips = spells_for_class_level('wizard', 0)\nprint(f\"Cantrips available to a Wizard: {', '.join(cantrips)}\")\nfor spell in cantrips:\n    print(f\"{SRD_spells[spell]['name']}:\")\n    pprint(SRD_spells[spell])\n    break\n```\n\n\n## Character Object\nNormal initialization arguments for a Character object:\n```\nname         (str)\nage          (str)\ngender       (str)\nalignment    (str): character's two letter alignment\ndescription  (str): physical description of player character\nbiography    (str): backstory of player character\t\nlevel        (int): starting level\nwealth       (int): starting wealth\t\nstrength     (int)\ndexterity    (int)\nconstitution (int)\nwisdom       (int)\nintelligence (int)\ncharisma     (int)\nhp           (int):\nclasss      (dict): JSON returned from the 5e API -- dnd_character.SRD.SRD_classes[\"bard\"]\n```\nIn addition, the Character object can receive attributes that are normally set automatically, such as the UUID. This is for re-loading the objects from serialized data (via `Character(**characterData)`) and probably aren't arguments you would write manually into your code.\n\n\n## Contributing\nPlease feel free to open a Pull Request on GitHub! I would be happy to help merge any contributions no matter your skill level.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tassaron/dnd-character",
    "keywords": "dnd trpg tabletop rpg",
    "license": "EPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnd-character",
    "package_url": "https://pypi.org/project/dnd-character/",
    "platform": null,
    "project_url": "https://pypi.org/project/dnd-character/",
    "project_urls": {
      "Homepage": "https://github.com/tassaron/dnd-character"
    },
    "release_url": "https://pypi.org/project/dnd-character/22.4.18/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "make Dungeons & Dragons characters as serializable objects",
    "version": "22.4.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13551299,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11b3da975ce477cf3b1bcda0acc2cb3d229ce292748db96f97e06eccbdd3e400",
        "md5": "ca6dc6bb7c3073093417d6fed5151b26",
        "sha256": "690c193d896563f4f10357c1757e3d247c1228d53f695c5e5e1adf2ac318efcd"
      },
      "downloads": -1,
      "filename": "dnd_character-22.4.18-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ca6dc6bb7c3073093417d6fed5151b26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1123074,
      "upload_time": "2022-04-19T01:08:22",
      "upload_time_iso_8601": "2022-04-19T01:08:22.322407Z",
      "url": "https://files.pythonhosted.org/packages/11/b3/da975ce477cf3b1bcda0acc2cb3d229ce292748db96f97e06eccbdd3e400/dnd_character-22.4.18-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f76502f2be2f4a6f1987fcb809cd46635949cec7a49682d3c8f2013e691c06bd",
        "md5": "609086514c7e100caecc542dab77802c",
        "sha256": "95a84b6d0217f802873b36f109ad998055a74f21abc058da7926b0d038d434d1"
      },
      "downloads": -1,
      "filename": "dnd_character-22.4.18.tar.gz",
      "has_sig": false,
      "md5_digest": "609086514c7e100caecc542dab77802c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 458752,
      "upload_time": "2022-04-19T01:08:24",
      "upload_time_iso_8601": "2022-04-19T01:08:24.161373Z",
      "url": "https://files.pythonhosted.org/packages/f7/65/02f2be2f4a6f1987fcb809cd46635949cec7a49682d3c8f2013e691c06bd/dnd_character-22.4.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}