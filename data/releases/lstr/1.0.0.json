{
  "info": {
    "author": "Cariad Eccleston",
    "author_email": "cariad@hey.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# lstr: partially lockable Python strings\n\n`lstr` is a Python package for partially lockable strings.\n\n## Installation\n\n`lstr` requires Python 3.8 or later.\n\n```bash\npip install lstr\n```\n\n## Examples\n\n### Creating an lstr\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Hello, world!\")\nprint(greeting)\n```\n\n```text\nHello, world!\n```\n\n### Getting help with indexes\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Hello, world!\")\nprint(repr(greeting))\n```\n\n```text\n  0  1  2  3  4  5  6  7  8  9 10 11 12\n  H  e  l  l  o  ,     w  o  r  l  d  !\n```\n\n### Inserting text\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good morning, Bobby!\")\ngreeting.write(\"Captain \", index=14)\nprint(greeting)\n```\n\n```text\nGood morning, Captain Bobby!\n```\n\n### Overwriting text\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good morning, Captain Bobby!\")\ngreeting.write(\"Fleet Admiral\", index=14, length=7)\nprint(greeting)\n```\n\n```text\nGood morning, Fleet Admiral Bobby!\n```\n\n### Substituting text\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good morning, Fleet Admiral Bobby!\")\ngreeting.sub(\"morning\", \"evening\")\nprint(greeting)\n```\n\n```text\nGood evening, Fleet Admiral Bobby!\n```\n\n### Substituting text with a regular expression\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good evening, Fleet Admiral Bobby!\")\ngreeting.sub(r\"(Fleet Admiral)\", r\"🎉\\g<1>🎉\")\nprint(greeting)\n```\n\n```text\nGood evening, 🎉Fleet Admiral🎉 Bobby!\n```\n\n### Locking a range\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good morning, Fleet Admiral Bobby!\")\ngreeting.lock(index=14, length=13)\n\ngreeting.write(\"Ensign\", index=14, length=13)\nprint(greeting)\n```\n\n```text\nGood morning, Fleet Admiral Bobby!\n```\n\n### Locking a substitution\n\n```python\nfrom lstr import lstr\n\ngreeting = lstr(\"Good morning, Captain Bobby!\")\ngreeting.sub(\"Captain\", \"Fleet Admiral\", lock=True)\ngreeting.sub(\"Fleet Admiral\", \"Ensign\")\n\nprint(greeting)\n```\n\n```text\nGood morning, Fleet Admiral Bobby!\n```\n\n### Equality\n\n`lstr` instances are considered equal only if their string value and locks are identical.\n\n```python\nlstr(\"f\", locks=[Lock(index=1, length=2)]) == lstr(\"f\", locks=[Lock(index=1, length=2)])\nlstr(\"f\", locks=[Lock(index=1, length=2)]) != lstr(\"f\", locks=[Lock(index=3, length=4)])\n```\n\n`lstr` and `str` instances are considered equal if the string value is identical, regardless of the locks.\n\n```python\nlstr(\"f\") == \"f\"\nlstr(\"f\") != \"g\"\n```\n\n## Thank you! 🎉\n\nMy name is **Cariad**, and I'm an [independent freelance DevOps engineer](https://cariad.io).\n\nI'd love to spend more time working on projects like this, but--as a freelancer--my income is sporadic and I need to chase gigs that pay the rent.\n\nIf this project has value to you, please consider [☕️ sponsoring](https://github.com/sponsors/cariad) me. Sponsorships grant me time to work on _your_ wants rather than _someone else's_.\n\nThank you! ❤️\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cariad/lstr",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lstr",
    "package_url": "https://pypi.org/project/lstr/",
    "platform": "",
    "project_url": "https://pypi.org/project/lstr/",
    "project_urls": {
      "Homepage": "https://github.com/cariad/lstr"
    },
    "release_url": "https://pypi.org/project/lstr/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Partially lockable strings",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9760456,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b19986749b3aafeac9982df0bf39d6e7bf8393cc586df4c5c5ae6149933af60d",
        "md5": "7ad05ca16dc8bf20f69cb957badc7b1f",
        "sha256": "522a612629c743608b3e8b2ae9c6b520f06a0ac228989cad7e3de166a861ac8d"
      },
      "downloads": -1,
      "filename": "lstr-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ad05ca16dc8bf20f69cb957badc7b1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6184,
      "upload_time": "2021-03-13T14:09:02",
      "upload_time_iso_8601": "2021-03-13T14:09:02.456240Z",
      "url": "https://files.pythonhosted.org/packages/b1/99/86749b3aafeac9982df0bf39d6e7bf8393cc586df4c5c5ae6149933af60d/lstr-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}