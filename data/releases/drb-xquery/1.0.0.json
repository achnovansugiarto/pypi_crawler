{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Xquery for DRB\nThis xquery module allows execute xquery on DRB nodes.\n\n## Using this module\nTo include this module into your project, the `drb-xquery` module shall be referenced into `requirement.txt` file, or the following pip line can be run:\n\n```commandline\npip install drb-xquery\n```\n\n\n\nExample for execute a query on xml node:\n\n```python\n    node_file = DrbFileFactory().create(\"/path_xml_file/namefile.xml\")\n    node = XmlNodeFactory().create(node_file)\n\n    # request node named 2A_Tile_ID with ns as namespace\n    query = DrbXQuery(\"/ns:Level-2A_Tile_ID\")\n    result = query.execute(node)\n\n```\n\nResult is always a list of value or dynamic context\n\nExample with external variables:\n\n```python\n    # create the query from  String   \n    query = DrbXQuery(\"declare variable $x external; \"\n                     \"declare variable $y external := 5; $x+$y\")\n\n    list_var = {'x': 9, 'y': 12}\n\n    result = query.execute(node, list_var)\n\n    # result[0] == 21\n```\n\n# Limitations and differences with W3C standard\n\nThe data() function return only the value of elt\n\nfor example :\n\n\n```\n data(element root {element foo {\"child\"}, \" parent\" })\n```\n\nreturn in W3C standard:\n\n```\nchild parent\n```\n\nreturn in this implementation: \n\n```\nparent\n```\n\nThe infinity value is allowed for Decimal as for float: In W3C infinity is \nonly allowed for float or double.\n\nThe type xs:double is identical to xs:float\nThe type xs:long, xs:short, xs:byte are identical to xs:integer\n\n\nOther limitations\n\nSome types are not defined like:\n    xs:anyURI\n    xs:untypedAtomic\n    ...\n\nSome functions are not yet implemented like:\n    yearMonthDuration\n    deep-equal\n    remove\n    processing-instruction\n    exactly-one\n    ...\n\nSome expressions are not (yet) implemented like:\n    group by \n    order by \n    typeswitch\n    treat as\n    map and array are not defined too    \n\n# Warning for user using drb java implementation of Xquery\n\nWhen using positional predicates, you should be aware that the to keyword does not work as you might expect when used in predicates. If you want the first three products, it may be tempting to use the syntax:\n\n```\ndoc(\"catalog.xml\")/catalog/product[1 to 3]\n```\nHowever, this will raise an error[*] because the predicate evaluates to multiple numbers instead of a single one. You can, however, use the syntax:\n\n```\ndoc(\"catalog.xml\")/catalog/product[position() = (1 to 3)]\n```\n\nFor compare function the result is only -1,0, 1 , in java thi function return a negative value that can be different to -1\nor a positive value that represent a difference between the two string...\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/xquery",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-xquery",
    "package_url": "https://pypi.org/project/drb-xquery/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-xquery/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/xquery"
    },
    "release_url": "https://pypi.org/project/drb-xquery/1.0.0/",
    "requires_dist": [
      "drb (<1.1.0,>=1.0.1)",
      "antlr4-python3-runtime (==4.9.3)",
      "versioneer (>=0.20)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB xquery request",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16287899,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6532e50462d4bcfe912fb910584a81e832d85d55a0588aca6ac68b53e1baf859",
        "md5": "e8beb12758a77b5e90c598503378e0c2",
        "sha256": "1d12c12e4f97a2d3b06b9601130efc5b1c85a6f68fa9836dc70c9c422b9176d8"
      },
      "downloads": -1,
      "filename": "drb_xquery-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8beb12758a77b5e90c598503378e0c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 177128,
      "upload_time": "2022-03-11T10:07:26",
      "upload_time_iso_8601": "2022-03-11T10:07:26.678951Z",
      "url": "https://files.pythonhosted.org/packages/65/32/e50462d4bcfe912fb910584a81e832d85d55a0588aca6ac68b53e1baf859/drb_xquery-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cffd825604d245fc71bfb1c63f965eced599795ca4e9eaad43be5d5f9a5614e2",
        "md5": "779e17aaab5a435da7d5a9781df86fbf",
        "sha256": "22b19ea8a77e4af6bfe8e31b8d618cdd438a79ffe9148b0b71cc2a23d9a04836"
      },
      "downloads": -1,
      "filename": "drb-xquery-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "779e17aaab5a435da7d5a9781df86fbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 3276527,
      "upload_time": "2022-03-11T10:07:28",
      "upload_time_iso_8601": "2022-03-11T10:07:28.643084Z",
      "url": "https://files.pythonhosted.org/packages/cf/fd/825604d245fc71bfb1c63f965eced599795ca4e9eaad43be5d5f9a5614e2/drb-xquery-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}