{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Xquery for DRB\nThis xquery module allows execute xquery on DRB nodes.\n\n## Using this module\nTo include this module into your project, the `drb-xquery` module shall be referenced into `requirement.txt` file, or the following pip line can be run:\n\n```commandline\npip install drb-xquery\n```\n\nExample for execute a query on xml node:\n\n```python\nnode_file = DrbFileFactory().create(\"/path_xml_file/namefile.xml\")\nnode = XmlNodeFactory().create(node_file)\n\n# request node named 2A_Tile_ID with ns as namespace\nquery = DrbXQuery(\"/ns:Level-2A_Tile_ID\")\nresult = query.execute(node)\n\n```\n\nResult is always a list of value or dynamic context\n\nExample with external variables:\n\n```python\n# create the query from  String   \nquery = DrbXQuery(\"declare variable $x external; \"\n                 \"declare variable $y external := 5; $x+$y\")\n\nlist_var = {'x': 9, 'y': 12}\n\nresult = query.execute(node, list_var)\n\n# result[0] == 21\n```\n\n\n## Command line\n\nA command line is available for use this module.\n\nThe name of the command line is ```xquery```\n\n```commandline\nxquery --help\n\nUsage: drb-xquery-cmd [OPTIONS]\n\n  This command evaluates the XQuery script provided as a string or a file. The\n  output of the evaluation is printed out in the standard output. The output\n  format may have several forms according to the resulting sequence. Basically\n  the resulting nodes are output as XML fragments, the attributes not attached\n  to nodes are written as in XML but prefixed with '@' symbol and finally, the\n  atomic values are printed without decoration, according to the XML Schema\n  lexical space definitions. All items of the output sequence are comma\n  separated. A '()' result denotes the empty sequence.\n\nOptions:\n  -s, --string TEXT    Command line string to be evaluated as XQuery script.\n                       This parameter cannot be used jointly with -f. At least\n                       -s or -f is to be set.\n  -f, --file TEXT      Path to a file containing the sctript to be evaluated.\n                       This parameter cannot be used jointly with -s. At least\n                       -f or -s is to be set..\n  -n, --url-node TEXT  Url to a node, in drb meaning, that give the context of\n                       the query. It can be the pathof a xml file for example on\n                       which the xquery willbe executed\n  -V, --verbose\n  -v, --variable TEXT  Variable define -v <QName> <value> [ as <type>].Pushes an\n                       external variable in the environment prior to parse and\n                       evaluate the XQuery script. The variable is pushed in the\n                       the environment altough it has not been declared has an\n                       external variable, to provide it to the potential nested\n                       XQuerys (e.g. a call to evaluate-uri() built-in\n                       function). <QName> is the qualified name of the variable\n                       to declare whether <value> is a string to bind as value\n                       of the variable. If <QName> matches a typed external\n                       variable declared in the script, <value> is converted to\n                       that type before being bound. The trailing \"as <type>\" is\n                       optional and shall follow the XQuery sequence type\n                       declaration (e.g. as xs:integer+ )\n  --help               Show this message and exit.\n\n```\n\nExample with string query\n\n```commandline\nxquery  -s \"declare variable \\$x external; declare variable \\$y external := 5; \\$x +\\$y\" -v x  9 -v y 2\n11\n```\n\n```commandline\nxquery  -s \"/Level-2A_Tile_ID/Test_FLF[@name_attr='test_two' or serie='B'][position() < 5][2]\" --url-node \"./tests/files/MTD_TL.xml\"\n\n<Test_FLF xmlns=\"nc3\" xmlns:ns1=\"SB\" name_attr=\"test_one\" index=\"03\" occurence=\"4\" atr=\"quattre\"><name>first_doublon</name><ns1:french>premier</ns1:french><number>one</number><serie>B</serie><elt>This is 4</elt></Test_FLF> \n```\n\nExample with file query and url node\n\n```commandline\nxquery  -f \"./tests/files/test.xq\" --url-node \"./tests/files/MTD_TL.xml\"\nfirst_doublon\n```\n\n\n\n# Limitations and differences with W3C standard\n\nThe data() function return only the value of elt\n\nfor example :\n\n\n```\n data(element root {element foo {\"child\"}, \" parent\" })\n```\n\nreturn in W3C standard:\n\n```\nchild parent\n```\n\nreturn in this implementation: \n\n```\nparent\n```\n\nThe infinity value is allowed for Decimal as for float: In W3C infinity is \nonly allowed for float or double.\n\nThe type xs:double is identical to xs:float\nThe type xs:long, xs:short, xs:byte are identical to xs:integer\n\n\nOther limitations\n\nSome types are not defined like:\n    xs:anyURI\n    xs:untypedAtomic\n    ...\n\nSome functions are not yet implemented like:\n    yearMonthDuration\n    deep-equal\n    remove\n    processing-instruction\n    exactly-one\n    ...\n\nSome expressions are not (yet) implemented like:\n    group by \n    order by \n    typeswitch\n    treat as\n    map and array are not defined too    \n\n# Warning for user using drb java implementation of Xquery\n\nWhen using positional predicates, you should be aware that the to keyword does not work as you might expect when used in predicates. If you want the first three products, it may be tempting to use the syntax:\n\n```\ndoc(\"catalog.xml\")/catalog/product[1 to 3]\n```\nHowever, this will raise an error[*] because the predicate evaluates to multiple numbers instead of a single one. You can, however, use the syntax:\n\n```\ndoc(\"catalog.xml\")/catalog/product[position() = (1 to 3)]\n```\n\nFor compare function the result is only -1,0, 1 , in java thi function return a negative value that can be different to -1\nor a positive value that represent a difference between the two string...\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/xquery",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-xquery",
    "package_url": "https://pypi.org/project/drb-xquery/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-xquery/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/xquery"
    },
    "release_url": "https://pypi.org/project/drb-xquery/1.0.5/",
    "requires_dist": [
      "drb (<1.1.0,>=1.0.7)",
      "antlr4-python3-runtime (==4.9.3)",
      "versioneer (>=0.20)",
      "drb-impl-file (<1.1.0,>=1.0.1)",
      "setuptools (~=44.0.0)",
      "python-dateutil (~=2.8.2)",
      "drb-impl-xml (<1.1.0,>=1.0.3)",
      "Click"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB xquery request",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16287899,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "710c86b13653fcaa6731b8d83636c3025444ff3e1b9942e0e0acd04a96b6b4f9",
        "md5": "68f57b911a2575ef913b631fd84e4695",
        "sha256": "52bb7b0da097272939e47f0f2a910214960bbad3da1d3a93f104ce369aba8b47"
      },
      "downloads": -1,
      "filename": "drb_xquery-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68f57b911a2575ef913b631fd84e4695",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 185311,
      "upload_time": "2022-06-27T11:35:23",
      "upload_time_iso_8601": "2022-06-27T11:35:23.210919Z",
      "url": "https://files.pythonhosted.org/packages/71/0c/86b13653fcaa6731b8d83636c3025444ff3e1b9942e0e0acd04a96b6b4f9/drb_xquery-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b798fc87921e55120d2fb8e6f9caf62d50523704428c62659c010b084043f1a",
        "md5": "0765cc0ad8d7002d16f5ec2f50e170b7",
        "sha256": "b9aae2ae2ca4865b6790ee3c5f8e8b8445b159bc94431b2130afe6036e2589f8"
      },
      "downloads": -1,
      "filename": "drb-xquery-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0765cc0ad8d7002d16f5ec2f50e170b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 3396130,
      "upload_time": "2022-06-27T11:35:43",
      "upload_time_iso_8601": "2022-06-27T11:35:43.605679Z",
      "url": "https://files.pythonhosted.org/packages/2b/79/8fc87921e55120d2fb8e6f9caf62d50523704428c62659c010b084043f1a/drb-xquery-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}