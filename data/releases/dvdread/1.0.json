{
  "info": {
    "author": "Colin ML Burnett",
    "author_email": "cmlburnett@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.4"
    ],
    "description": "PyDvdRead -- A wrapper library around libdvdread4.\r\n\r\nThis python module wraps libdvdread4 to provide Python access to DVD structural information. This does not fully wrap libdvdread4 as my needs are not that extensive.\r\n\r\nPlease note that this module uses libdvdread4 to directly access a DVD disc if the device path is provided. This means that execution speed will depend on disc access, which can be slow. Just be aware of this.\r\n\r\n---------\r\n:Install:\r\n---------\r\n\r\n\tpython3 setup.py build\r\n\tpython3 setup.py install\r\n\r\n---------------\r\n:Documentation:\r\n---------------\r\n\r\nUse Python's online help to get the documentation from the classes.\r\n\r\n\t$ python3\r\n\t>>> import dvdread\r\n\r\n\t>>> help(dvdread.DVD)\r\n\tHelp on class DVD in module dvdread.objects:\r\n\r\n\tclass DVD(_dvdread.DVD)\r\n\t |  Entry class into parsing the DVD structure.\r\n\t |  Pass the device path to the init function, and then call Open() to initiate reading.\r\n\t |  Best to use the `with` keyword to ensure Python calls the Close() function when done.\r\n\t |  \r\n\t |  A DVD has titles.\r\n\t |  A title has chapters, audio tracks, and subpictures (\"subtitles\").\r\n\t |  \r\n\t |  Method resolution order:\r\n\t |      DVD\r\n\t |      _dvdread.DVD\r\n\t |      builtins.object\r\n\t |  \r\n\t |  Methods defined here:\r\n\t |  \r\n\t |  GetAllTitles(self)\r\n\t |      Gets a tuple of all the title objects starting with title one.\r\n\r\n\t..............\r\n\r\n-------\r\n:Usage:\r\n-------\r\n\r\nA simple script is needed to parse the IFO structure in a DVD:\r\n\r\n\timport dvdread\r\n\r\n\twith dvdread.DVD(\"/dev/sr0\") as d:\r\n\t\td.Open()\r\n\r\n\t\tprint(\"Number of titles on disc: %d\" % d.NumberOfTitles)\r\n\r\n\t\tfor t in d.GetAllTitles():\r\n\t\t\tprint(\"Title %d has %d angles, %d audio tracks, %d chapters, %d subpictures, and runs for %s\" % (t.TitleNum, t.NumberOfAngles, t.NumberOfAudios, t.NumberOfChapters, t.NumberOfSubpictures, t.PlaybackTimeFancy))\r\n\r\nOutput:\r\n\t$ python3 foo.py\r\n\tNumber of titles on disc: 7\r\n\tTitle 1 has 1 angles, 4 audio tracks, 33 chapters, 3 subpictures, and runs for 02:23:11.00\r\n\tTitle 2 has 1 angles, 4 audio tracks, 1 chapters, 3 subpictures, and runs for 00:00:12.00\r\n\tTitle 3 has 1 angles, 4 audio tracks, 1 chapters, 3 subpictures, and runs for 00:00:12.00\r\n\tTitle 4 has 1 angles, 4 audio tracks, 1 chapters, 3 subpictures, and runs for 00:00:21.19\r\n\tTitle 5 has 1 angles, 1 audio tracks, 1 chapters, 3 subpictures, and runs for 00:02:04.00\r\n\tTitle 6 has 1 angles, 4 audio tracks, 1 chapters, 3 subpictures, and runs for 00:00:07.00\r\n\tTitle 7 has 1 angles, 1 audio tracks, 4 chapters, 0 subpictures, and runs for 00:04:50.21\r\n\r\nYou must provide the device path to the DVD constructor, and then call Open() to parse the device structure. Doing this within the `with` keyword in Python ensures that DVD.Close() is called and cleanup is performed. The above script shows how to iterate through titles.\r\n\r\n--------------\r\n:Organization:\r\n--------------\r\n\r\nThis module contains two parts:\r\n1) C implementation to wrap libdvdread4 and provide basic PyObject types for use within Python\r\n2) Python implementation to wrap PyObject types created in C\r\n\r\nThe C objects are defined within the /src/ directory and the Python objects in the /dvdread/ directory. The C objects are defined in the _dvdread module and the Python objects in the dvdread module.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cmlburnett/PyDvdRead",
    "keywords": "",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvdread",
    "package_url": "https://pypi.org/project/dvdread/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dvdread/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/cmlburnett/PyDvdRead"
    },
    "release_url": "https://pypi.org/project/dvdread/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python wrapper for libdvdread4",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1891640,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da972caaf07f7105d42300a918ff5c38df5394e24d554057dcc2d9ffc713cd84",
        "md5": "8bd8016c0e9a941128ea5e7d4a3567fe",
        "sha256": "13133426b5d898c4f17f114b68055fb2881c32645fae7c43d3a9f584e031be5d"
      },
      "downloads": -1,
      "filename": "dvdread-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8bd8016c0e9a941128ea5e7d4a3567fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15494,
      "upload_time": "2016-01-06T16:38:37",
      "upload_time_iso_8601": "2016-01-06T16:38:37.564380Z",
      "url": "https://files.pythonhosted.org/packages/da/97/2caaf07f7105d42300a918ff5c38df5394e24d554057dcc2d9ffc713cd84/dvdread-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}