{
  "info": {
    "author": "morningjoe",
    "author_email": "morningjoe@morningjoesoftware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Archiving :: Backup",
      "Topic :: System :: Archiving :: Compression"
    ],
    "description": "# MJBackup - Morning Joe Software Linux Server Backup System.\n\nThis script is called to perform a backup and in turn calls other scripts which perform\nspecialized task such as back up files, MySql databases, Postgresql databases, and anything\nelse that this can be extended to support.\n\nThere is also a script that can be used to rsync the backup files to the remote location.  The length\nthese remote copies can be retained can be set by days.\n\nBoth scripts are meant to be used with crontab in a single linux server environment with database servers running locally.\n\n## Requirements\n* Linux server (Geared more towards standalone web server)\n* Python 3.6+ installed\n* Mysql installed (optional)\n* PostgreSql installed (optional)\n* rsync installed (optional)\n## Features\n* supports backing up files into a tar.gz archive\n* supports full database backup dumps of PosgreSql and MySql databases.\n* all backups are timestamped in the file name.\n* file backups can be grouped into different target archives and locations.  \n* databases backup location can be set.\n* limits on the backup copies retained on the server.\n* logging is supported.\n* backup status/errors can be emailed to a list of email addresses.\n* rsync based script to help with coping the backups to a remote location.\n* support for clearing old backups after a set amount of days on the remote location.\n\n## TODO\n* more database support such as Mongo DB, SQL Server\n* database backups from multiple configs much like the file archives.\n* better logging and error reporting\n\n## Installation (Server)\nRun the following command on the server:\n```console\nuser@linux:~$ mkdir mjbackup\nuser@linux:~$ cd mjbackup\nuser@linux:~$ pip install mjbackup -t .\nuser@linux:~$ cd mjbackup\n```\n\nThere should be the following files for the server part:\n* mjbackup.py \n* mjbackupConfig.py \n* mjbackupFiles.py \n* mjbackupPgsql.py \n* mjbackupMysql.py\n\nThere should be the following files for the remote location:\n* mjsync.py\n\n\nCopy the files for the server part to a location such as /opt/mjbackup/\n```console\nuser@linux:~$ sudo mkdir /opt/mjbackup\nuser@linux:~$ sudo cp mjbackup* /opt/mjbackup\nuser@linux:~$ sudo chown root /opt/mjbackup -R\nuser@linux:~$ sudo chgrp root /opt/mjbackup -R\nuser@linux:~$ sudo chmod 700 /opt/mjbackup -R\n```\n**Make sure this location is only accessible to the superuser.**\n\nMake the configuration directory: \n```console\nuser@linux:~$ sudo mkdir /etc/mjbackup \n```\n## Configuration (Server)\n\nFirst add this job to crontab. This will perform the backup every Sunday at 3AM.\n```console\nuser@linux:~$ sudo crontab -e\n\nadd:\n0 3 * * 0 python3 /opt/mjbackup/mjbackup.py\n```\nGo to the directory where you downloaded the package from pip and go to the \"conf\" subdirecotry.\nThere should be many sample configuration files.  These need to be editied for your system.\n\n### mjbackupConfig.xml\n```<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<MJBackupConfig>\n<BackupList>\n\t<Path>backup1.xml</Path>\n\t<Path>backup2.xml</Path>\n\t<Path>backup3.xml</Path>\n</BackupList>\n<EmailNotifyList>\n\t<Email>remote_email1@dont_use_this.com</Email>\n\t<Email>remote_email2@dont_use_this.com</Email>\n\t<Email>remote_email3@dont_use_this.com/Email>\n</EmailNotifyList>\n<EmailSource>example_email@dont_use_this.com</EmailSource>\n<LimitCopies>3</LimitCopies>\n<Verbose>1</Verbose>\n</MJBackupConfig>\n```\n\n**BackupList** - List of paths to configuration files for each indivisual archive.\n\n**EmailNotifyList** - List of emails to send a copy of the log every time a backup is done.\n\n**EmailSource** - This is the \"From\" field when emails are sent out.\n\n**LimitCopies** - Limit to how many backup copies are kept on the server.  Default is 3.\n\n**Verbose** - If set, information will be printed to the console.  For testing.\n### backup(X).xml\n```<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<BackupList name=\"examplebackup1\" target=\"example1\" targetdir=\"/targetdir/backups1\">\n  <Backup>\n    <Name>user1</Name>\n    <Path>/home/user1</Path>\n    <Note>user1 backup</Note>\n  </Backup>\n  <Backup>\n    <Name>user2</Name>\n    <Path>/home/user2</Path>\n    <Note>user2 backup</Note>\n  </Backup>\n  </BackupList>\n```\nConfiguration for an individual archive.  Backuplist has three attributes:\n\n**name** - Name of backup group to display in logs/emails.\n\n**target** - Name of the archive.  A date/time stamp and the extension tar.gz will be appended to this in the file name e.g. backup.2020-04-20_050006.tar.gz\n\n**targetdir** - The directory to put this archive into.  Use absolute path such as /home/archive/backups.\n\nEach Backup is a directory or file to add to the archive.\n\n**Name** - Name of backup to display in logs/emails.\n\n**Path** - Absolute path of directory or file to backup.\n\n**Note** - Extra field to put more information about this backup.\n\n### mjbackupMysql.conf\n```\n[config]\nusername = mysql-login\npassword = mysql-password\nhostname =  localhost \nbackupdir = backups-mysql/\n```\n**username** - MySql admin login name\n\n**Password** - MySql admin password.\n\n**hostname** - hostname MySql server resides on.\n\n**backupdir** - The directory to put this archive into.  Use absolute path.\n\n### mjbackupPgsql.conf\n```\n[config]\nusername = postgres\npassword = postgres-password\nhostname =  localhost \nbackupdir = backups-pgsql/\n\n```\n**username** - PostgreSql admin login name\n\n**Password** - PostgreSql admin password.\n\n**hostname** - hostname MySql server resides on.\n\n**backupdir** - The directory to put this archive into.  Use absolute path.\n\n### After configuration\n\nCopy all .xml and .conf files to /etc/mjbackup and make sure this directory is only accessible by the superuser.\n\n```console\nuser@linux:~$ sudo cp *.xml /etc/mjbackup \nuser@linux:~$ sudo cp *.conf /etc/mjbackup \n```\nTest it to see if it works correctly.  If Verbose is set, you can see the output.\n\n```console\nuser@linux:~$ sudo python3 /opt/mjbackup/mjbackup.py  \n```\n\n## Installation (Remote Sync)\n\n**Before going further, make sure rsync is configured for passwordless login for the remote backup server.**\n\nCopy the files for the server part to a location such as /opt/mjbackup/\n```console\nuser@linux:~$ sudo mkdir /opt/mjbackup\nuser@linux:~$ sudo cp mjsync.py /opt/mjbackup\nuser@linux:~$ sudo chown root /opt/mjbackup -R\nuser@linux:~$ sudo chgrp root /opt/mjbackup -R\nuser@linux:~$ sudo chmod 700 /opt/mjbackup -R\nuser@linux:~$ sudo chmod 700 /opt/mjbackup -R\n```\n**Make sure this location is only accessible to the superuser.**\n\nMake the configuration directory: \n```console\nuser@linux:~$ sudo mkdir /etc/mjbackup \n```\n\n## Configuration (Remote Sync)\n\nFirst add this job to crontab. This will perform the backup every Sunday at 5AM. (Give the server a few hours to do the job.)\n```console\nuser@linux:~$ sudo crontab -e\n\nadd:\n0 5 * * 0 python3 /opt/mjbackup/mjsync.py\n```\nGo to the directory where you downloaded the package from pip and go to the \"conf\" subdirecotry.\nThere should be many sample configuration files.  You only need mjsyn.conf.\n\n### mjsync.conf\n```\n[config]\nusername = exampleuser\nhostname =  123.123.123.123\nremote_backupdir = /server/backupdir\nlocal_backupdir = /local/backupdir\ndays_to_keep = 30\nverbose = True\n```\n\n**username** - rsync login name for the server.\n\n**hostname** - rsync host to rsync to.\n\n**remote_backupdir** - The backup directory on the server. Use absolute path.\n\n**local_backupdir** - The local directory to copy to. Use absolute path.\n\n**days_to_keep** - the days to keep old backups downloaded.\n\n**verbose** - Show the status or not.  For testing.\n\nCopy all  mjsync.conf files to /etc/mjbackup and make sure this directory is only accessible by the superuser.\n\n```console\nuser@linux:~$ sudo cp *.conf /etc/mjbackup \n```\nTest it to see if it works correctly.  If Verbose is set, you can see the output.\n\n```console\nuser@linux:~$ sudo python3 /opt/mjbackup/mjsync.py\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/morningjoesoftware/mjbackup/archive/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.morningjoesoftware.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mjbackup",
    "package_url": "https://pypi.org/project/mjbackup/",
    "platform": "posix",
    "project_url": "https://pypi.org/project/mjbackup/",
    "project_urls": {
      "Download": "https://github.com/morningjoesoftware/mjbackup/archive/v1.0.1.tar.gz",
      "Homepage": "https://www.morningjoesoftware.com"
    },
    "release_url": "https://pypi.org/project/mjbackup/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Morning Joe Software Linux Server Backup System",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7210325,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e16167d33d638caeef07cd7ee03d094017f4ef10c089112d150ca2542be550a",
        "md5": "01d3463b0ca3ce226e07a3fb2f1d433e",
        "sha256": "2ce7f47146648d80f2be7d38bc1e11f52b8420718cde51c931b5b36dcb947a15"
      },
      "downloads": -1,
      "filename": "mjbackup-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "01d3463b0ca3ce226e07a3fb2f1d433e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12045,
      "upload_time": "2020-05-10T20:17:35",
      "upload_time_iso_8601": "2020-05-10T20:17:35.584276Z",
      "url": "https://files.pythonhosted.org/packages/6e/16/167d33d638caeef07cd7ee03d094017f4ef10c089112d150ca2542be550a/mjbackup-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}