{
  "info": {
    "author": "AASHE",
    "author_email": "webdev@aashe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "[![Build Status](https://travis-ci.org/AASHE/python-membersuite-api-client.svg?branch=master)](https://travis-ci.org/AASHE/python-membersuite-api-client) [![Coverage Status](https://coveralls.io/repos/github/AASHE/python-membersuite-api-client/badge.svg?branch=master)](https://coveralls.io/github/AASHE/python-membersuite-api-client?branch=master) [![Issue Count](https://codeclimate.com/github/AASHE/python-membersuite-api-client/badges/issue_count.svg)](https://codeclimate.com/github/AASHE/python-membersuite-api-client/issues) [![Requirements Status](https://requires.io/github/AASHE/python-membersuite-api-client/requirements.svg?branch=master)](https://requires.io/github/AASHE/python-membersuite-api-client/requirements/?branch=master)\n\n# python-membersuite-api-client\nA python interface to the MemberSuite API\n\n## Installation\n\nInstall from PyPI.\n\n    ```pip install membersuite-api-client```\n\n## MemberSuite Configuration\n\nIn your MemberSuite account, you will need to create a dedicated API console\nuser. Ensure that API access is enabled for your MemberSuite account, and\nalso check the box for \"API User\" for this new user account.\n\nCreate a keypair for this user via the console and save the credentials\ngenerated somewhere secure (they cannot be retrieved later if lost)\n\n\n## Usage\n\n    from membersuite_api_client.client import ConciergeClient\n\n    client = ConciergeClient(\n        access_key=MS_ACCESS_KEY,\n        secret_key=MS_SECRET_KEY,\n        association_id=MS_ASSOCIATION_ID)\n\nTo authenticate and receive a session ID:\n\n    client.request_session()\n    print client.session_id\n\nTo take advantage of a service, for example `subscriptions`:\n\n    ORG_ID = #####\n    service = SubscriptionService(self.client)\n    subscription_list = service.get_subscriptions(org_id=ORG_ID)\n\n## Running tests\n\nTo run all tests:\n\n    $ nosetests\n\nTo run specific tests, load them by module. For example:\n\n    $ python -m membersuite_api_client.tests.test_subscriptions\n\n## Contributing and Extending\n\nLooking to contribute? The best place to start is in the code base. Notice how\nwe created modules for each MemberSuite object, like `organizations`.\n\nEach module contains `services.py` and `models.py` files.\n\nYour \"models\" are simply python representations of the MemberSuite objects.\n\nYour \"services\" provide interfaces to those models in MemberSuite. This is\nwhere objects are retrieved from MemberSuite and converted to your models for\nuse in a python app. It is recommended that the services be classes and if\nyou define `result_to_models` and `ms_object_to_model` methods on the class\nyou can use the ChunkQueryMixin to make large queries.\n\n### Nuance\n\nThis can now be used to make additional calls using the methods included in\nthe WSDL from MemberSuite. For documentation on available methods and their\nusage, see http://api.docs.membersuite.com/\n\nUse request_session() as a model for constructing the headers for\nyour own functions in your app that follow this method:\n\n    1) Call client.construct_concierge_header(url) to generate a new header element, using your method's URL as an argument.\n    2) Call client.service.method_name(_soapheaders=[concierge_request_header], method arguments)\n    3) Return any relevant data out of the response object\n\n***IMPORTANT NOTE: In constructing headers, SessionId must appear first.***",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AASHE/python-membersuite-api-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "membersuite-api-client",
    "package_url": "https://pypi.org/project/membersuite-api-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/membersuite-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/AASHE/python-membersuite-api-client"
    },
    "release_url": "https://pypi.org/project/membersuite-api-client/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MemberSuite API Client",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4862886,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1067ec6ac113d0b544b4b767c5a376a92e6f2fdf736e50ca53c2ecab2a36b20b",
        "md5": "20fafce07f76275fcda86aeb1206313a",
        "sha256": "6f998a3d7965cbd36f4722348f7a8b056d0591f1c1f52469274deaa28047047b"
      },
      "downloads": -1,
      "filename": "membersuite_api_client-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "20fafce07f76275fcda86aeb1206313a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20198,
      "upload_time": "2018-06-12T21:46:50",
      "upload_time_iso_8601": "2018-06-12T21:46:50.175210Z",
      "url": "https://files.pythonhosted.org/packages/10/67/ec6ac113d0b544b4b767c5a376a92e6f2fdf736e50ca53c2ecab2a36b20b/membersuite_api_client-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}