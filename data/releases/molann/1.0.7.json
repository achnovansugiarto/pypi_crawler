{
  "info": {
    "author": "Wei Zhang",
    "author_email": "wzhangpku@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "MolANN\n======\n\nArtificial Neural Networks (ANNs) for Molecular Systems\n\nThis package implements PyTorch ANN classes that allow to define neural network functions that take into account alignment, or functions that depend on molecular features (bonds, angles, etc.). \n\nInstallation \n============\n\nThe package can be installed via `pip`:\n\n.. code-block:: console\n\n   pip install molann\n\nThe installation from source is described in the `Installation`_ page.\n\nSimple example \n==============\n\nThe following code defines an ANN as a function of a bond distance and a dihedral angle.\n\n.. code-block:: python\n\n    import MDAnalysis as mda\n    from molann.ann import FeatureLayer, PreprocessingANN, MolANN, create_sequential_nn\n    from molann.feature import Feature\n\n    # pdb file of the system\n    pdb_filename = '/path/to/system.pdb'\n    ref = mda.Universe(pdb_filename) \n\n    # define a feature that describes the bond between atoms 5 and 6.\n    f1 = Feature('name', 'bond', ref.select_atoms('bynum 5 6'))\n    # define a feature that describes the dihedral angle formed by the first 4 atoms.\n    f2 = Feature('name', 'dihedral', ref.select_atoms('bynum 1 3 2 4'))\n\n    # define feature layer using the above two features.\n    f_layer = FeatureLayer([f1,f2], use_angle_value=False)\n\n    # define the preprocessing layer. \n    # we do not need alignment, since both features f1 and f2 are translation- and rotation-invariant.\n    pp_layer = PreprocessingANN(None, f_layer)\n\n    output_dim = pp_layer.output_dimension()\n    # define neural network layers that contain training parameters \n    nn = create_sequential_nn([output_dim, 5, 3])\n\n    # define the final network\n    model = MolANN(pp_layer, nn)\n\n    torch.jit.script(model).save('model.pt')\n\nMore examples for each class can be found in the `MolANN docs`_ .\n\nDocumentataion\n==============\n\nPlease refer to `MolANN docs`_.\n\n\n.. _`Installation`:\n  https://molann.readthedocs.io/en/latest/installation.html\n.. _`MolANN docs`:\n  https://molann.readthedocs.io/en/latest\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zwpku/molann",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molann",
    "package_url": "https://pypi.org/project/molann/",
    "platform": null,
    "project_url": "https://pypi.org/project/molann/",
    "project_urls": {
      "Bug Tracker": "https://github.com/zwpku/molann/issues",
      "Homepage": "https://github.com/zwpku/molann"
    },
    "release_url": "https://pypi.org/project/molann/1.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "\"PyTorch Artificial Neural Networks (ANNs) for Molecular Systems\",",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13830833,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af88789351702a390cfce336ac1794d463d158e4cf240fd5d4632b5521c0146c",
        "md5": "59a5c8b3de647b5e6dba61be5e2b3d0b",
        "sha256": "5a7a4d0cf4902ce517be0446f7b642a40661125692e8b3775db6c1cf1afd03d0"
      },
      "downloads": -1,
      "filename": "molann-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "59a5c8b3de647b5e6dba61be5e2b3d0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10399,
      "upload_time": "2022-05-04T15:22:28",
      "upload_time_iso_8601": "2022-05-04T15:22:28.085926Z",
      "url": "https://files.pythonhosted.org/packages/af/88/789351702a390cfce336ac1794d463d158e4cf240fd5d4632b5521c0146c/molann-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}