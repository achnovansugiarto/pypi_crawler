{
  "info": {
    "author": "Jason Kulatunga",
    "author_email": "jason@thesparktree.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: Name Service (DNS)",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/AnalogJ/lexicon\">\n  <img width=\"300\" alt=\"lexicon_view\" src=\"https://github.com/AnalogJ/lexicon/blob/master/logo.svg\">\n  </a>\n</p>\n\n\n\n# lexicon\nManipulate DNS records on various DNS providers in a standardized/agnostic way.\n\n[![Build Status](https://dev.azure.com/AnalogJ/lexicon/_apis/build/status/AnalogJ.lexicon?branchName=master)](https://dev.azure.com/AnalogJ/lexicon/_build/latest?definitionId=1&branchName=master)\n[![Coverage Status](https://coveralls.io/repos/github/AnalogJ/lexicon/badge.svg)](https://coveralls.io/github/AnalogJ/lexicon?branch=master)\n[![Docker Pulls](https://img.shields.io/docker/pulls/analogj/lexicon.svg)](https://hub.docker.com/r/analogj/lexicon)\n[![PyPI](https://img.shields.io/pypi/v/dns-lexicon.svg)](https://pypi.python.org/pypi/dns-lexicon)\n[![PyPI](https://img.shields.io/pypi/pyversions/dns-lexicon.svg)](https://pypi.python.org/pypi/dns-lexicon)\n[![GitHub license](https://img.shields.io/github/license/AnalogJ/lexicon.svg)](https://github.com/AnalogJ/lexicon/blob/master/LICENSE)\n\n## Introduction\nLexicon provides a way to manipulate DNS records on multiple DNS providers in a standardized way.\nLexicon has a CLI but it can also be used as a python library.\n\nLexicon was designed to be used in automation, specifically letsencrypt.\n\n- [Generating Intranet & Private Network SSL Certificates using Lets Encrypt & Lexicon](http://blog.thesparktree.com/post/138999997429/generating-intranet-and-private-network-ssl)\n\n## Providers\nOnly DNS providers who have an API can be supported by `lexicon`.\n\nThe current supported providers are:\n\n- Aliyun.com ([docs](https://help.aliyun.com/document_detail/29739.html))\n- AuroraDNS ([docs](https://www.pcextreme.com/aurora/dns))\n- AWS Route53 ([docs](https://docs.aws.amazon.com/Route53/latest/APIReference/Welcome.html))\n- Azure DNS ([docs](https://docs.microsoft.com/en-us/rest/api/dns/))\n- Cloudflare ([docs](https://api.cloudflare.com/#endpoints))\n- ClouDNS ([docs](https://www.cloudns.net/wiki/article/56/))\n- CloudXNS ([docs](https://www.cloudxns.net/Support/lists/cid/17.html))\n- ConoHa ([docs](https://www.conoha.jp/docs/))\n- Constellix ([docs](https://api-docs.constellix.com/?version=latest))\n- DigitalOcean ([docs](https://developers.digitalocean.com/documentation/v2/#create-a-new-domain))\n- Dinahosting ([docs](https://en.dinahosting.com/api))\n- DirectAdmin ([docs](https://www.directadmin.com/features.php?id=504))\n- DNSimple (docs: [v1](https://developer.dnsimple.com/), [v2](https://developer.dnsimple.com/v2/))\n- DnsMadeEasy ([docs](https://api-docs.dnsmadeeasy.com/?version=latest))\n- DNSPark ([docs](https://dnspark.zendesk.com/entries/31210577-REST-API-DNS-Documentation))\n- DNSPod ([docs](https://support.dnspod.cn/Support/api))\n- Dreamhost ([docs](https://help.dreamhost.com/hc/en-us/articles/217560167-API_overview))\n- EasyDNS ([docs](http://docs.sandbox.rest.easydns.net/))\n- Easyname ([docs](https://www.easyname.com/en))\n- ExoScale ([docs](https://community.exoscale.com/documentation/dns/api/))\n- Gandi (docs: [RPC (old)](http://doc.rpc.gandi.net/) / [LiveAPI](http://doc.livedns.gandi.net/))\n- Gehirn ([docs](https://support.gehirn.jp/apidocs/gis/dns/index.html))\n- Glesys ([docs](https://github.com/glesys/API/wiki/))\n- GoDaddy ([docs](https://developer.godaddy.com/getstarted#access))\n- Google Cloud DNS ([docs](https://cloud.google.com/dns/api/v1/))\n- Hover ([docs](https://hoverapi.docs.apiary.io/))\n- Hurricane Electric DNS ([docs](https://dns.he.net/))\n- Hetzner ([docs](https://wiki.hetzner.de/index.php/DNS_Zonendatei/en))\n- Infoblox ([docs](https://docs.infoblox.com/display/ILP/Infoblox+Documentation+Portal))\n- Internet.bs ([docs](https://internetbs.net/ResellerRegistrarDomainNameAPI))\n- INWX ([docs](https://www.inwx.de/en/offer/api))\n- Linode ([docs](https://www.linode.com/api/dns))\n- Linode v4 ([docs](https://developers.linode.com/api/docs/v4#tag/Domains))\n- LuaDNS ([docs](http://www.luadns.com/api.html))\n- Memset ([docs](https://www.memset.com/apidocs/methods_dns.html))\n- Namecheap ([docs](https://www.namecheap.com/support/api/methods.aspx))\n- Namesilo ([docs](https://www.namesilo.com/api_reference.php))\n- Netcup ([docs](https://ccp.netcup.net/run/webservice/servers/endpoint.php))\n- NFSN (NearlyFreeSpeech)\n- NS1 ([docs](https://ns1.com/api/))\n- OnApp ([docs](https://docs.onapp.com/display/55API/OnApp+5.5+API+Guide))\n- Online\n- OVH ([docs](https://api.ovh.com/))\n- Plesk ([docs](https://docs.plesk.com/en-US/onyx/api-rpc/about-xml-api.28709/))\n- PointHQ ([docs](https://pointhq.com/api/docs))\n- PowerDNS ([docs](https://doc.powerdns.com/md/httpapi/api_spec/))\n- Rackspace ([docs](https://developer.rackspace.com/docs/cloud-dns/v1/developer-guide/))\n- Rage4 ([docs](https://gbshouse.uservoice.com/knowledgebase/articles/109834-rage4-dns-developers-api))\n- RcodeZero ([docs](https://my.rcodezero.at/api-doc))\n- Sakura Cloud by SAKURA Internet Inc. ([docs](https://developer.sakura.ad.jp/cloud/api/1.1/))\n- SafeDNS by UKFast ([docs](https://developers.ukfast.io/documentation/safedns))\n- SoftLayer ([docs](https://sldn.softlayer.com/article/REST#HTTP_Request_Types))\n- Subreg ([docs](https://subreg.cz/manual/))\n- Transip ([docs](https://www.transip.nl/transip/api/))\n- Vultr ([docs](https://www.vultr.com/api/))\n- Yandex ([docs](https://tech.yandex.com/domain/doc/reference/dns-add-docpage/))\n- Zeit ([docs](https://zeit.co/api#post-domain-records))\n- Zilore ([docs](https://zilore.com/en/help/api))\n- Zonomi ([docs](http://zonomi.com/app/dns/dyndns.jsp))\n\nPotential providers are as follows. If you would like to contribute one, follow the [CONTRIBUTING.md](https://github.com/AnalogJ/lexicon/blob/master/CONTRIBUTING.md) and then open a pull request.\n\n- AHNames ([docs](https://ahnames.com/en/resellers?tab=2))\n- ~~DurableDNS ([docs](https://durabledns.com/wiki/doku.php/ddns))~~ <sub>Can't set TXT records</sub>\n- cyon.ch\n- Dyn ([docs](https://help.dyn.com/dns-api-knowledge-base/)) :dollar: <sub>requires paid account</sub>\n- Dynu\n- EntryDNS ([docs](https://entrydns.net/help)) :dollar: <sub>requires paid account</sub>\n- FreeDNS ([docs](https://freedns.afraid.org/scripts/freedns.clients.php))\n- Host Virtual DNS ([docs](https://github.com/hostvirtual/hostvirtual-python-sdk/blob/master/hostvirtual.py)) :dollar: <sub>requires paid account</sub>\n- HostEurope\n- Infoblox NIOS\n- ironDNS ([docs](https://www.irondns.net/download/soapapiguide.pdf;jsessionid=02A1029AA9FB8BACD2048A60F54668C0)) :dollar: <sub>requires paid account</sub>\n- ISPConfig\n- InternetX autoDNS ([docs](https://internetx.com))\n- Knot DNS\n- KingHost\n- Liquidweb ([docs](https://www.liquidweb.com/storm/api/docs/v1/Network/DNS/Zone.html)) :dollar: <sub>requires paid account</sub>\n- Loopia ([docs](https://www.loopia.com/api/)) :dollar: <sub>requires paid account</sub>\n- Mythic Beasts([docs](https://www.mythic-beasts.com/support/api/primary))\n- NFSN (NearlyFreeSpeech) ([docs](https://api.nearlyfreespeech.net/)) :dollar: <sub>requires paid account</sub>\n- RFC2136 ([docs](https://en.wikipedia.org/wiki/Dynamic_DNS))\n- Servercow ([docs](https://servercow.de))\n- selectel.com\n- TELE3 ([docs](https://www.tele3.cz))\n- UltraDNS ([docs](https://restapi.ultradns.com/v1/docs)) :dollar: <sub>requires paid account</sub>\n- UnoEuro API\n- VSCALE\n- WorldWideDns ([docs](https://www.worldwidedns.net/dns_api_protocol.asp)) :dollar: <sub>requires paid account</sub>\n- Zerigo ([docs](https://www.zerigo.com/managed-dns/rest-api)) :dollar: <sub>requires paid account</sub>\n- Zoneedit ([docs](http://forum.zoneedit.com/index.php?threads/dns-update-api.419/))\n- __Any others I missed__\n\n## Setup\n\n**Warning: it is strongly advised with pip to install Lexicon in a Python virtual environment, in order to avoid interference\nbetween Python modules preinstalled on your system as OS packages and modules installed by pip (see https://docs.python-guide.org/dev/virtualenvs/).**\n\nTo use lexicon as a CLI application, do the following:\n\n    pip install dns-lexicon\n\nSome providers (like Route53 and TransIP) require additional dependencies. You can install [provider specific dependencies](https://github.com/AnalogJ/lexicon/blob/master/setup.py#L34-L44) separately:\n\n    pip install dns-lexicon[route53]\n\nTo install lexicon with the additional dependencies of every provider, do the following:\n\n    pip install dns-lexicon[full]\n\nYou can also install the latest version from the repository directly.\n\n    pip install git+https://github.com/AnalogJ/lexicon.git\n\nand with Route 53 provider dependencies:\n\n    pip install git+https://github.com/AnalogJ/lexicon.git#egg=dns-lexicon[route53]\n\n*As an alternative you can also install Lexicon using the OS packages available for major Linux distributions (see `lexicon` or `dns-lexicon` package in https://pkgs.org/download/lexicon).*\n\n## Usage\n\n    $ lexicon -h\n      usage: lexicon [-h] [--version] [--delegated DELEGATED]\n                     {cloudflare,cloudxns,digitalocean,dnsimple,dnsmadeeasy,dnspark,dnspod,easydns,luadns,namesilo,nsone,pointhq,rage4,route53,vultr,yandex,zonomi}\n                     ...\n\n      Create, Update, Delete, List DNS entries\n\n      positional arguments:\n        {cloudflare,cloudxns,digitalocean,dnsimple,dnsmadeeasy,dnspark,dnspod,easydns,luadns,namesilo,nsone,pointhq,rage4,route53,vultr,yandex,zonomi}\n                              specify the DNS provider to use\n          cloudflare          cloudflare provider\n          cloudxns            cloudxns provider\n          digitalocean        digitalocean provider\n        ...\n          rage4               rage4 provider\n          route53             route53 provider\n          vultr               vultr provider\n          yandex              yandex provider\n          zonomi              zonomi provider\n\n      optional arguments:\n        -h, --help            show this help message and exit\n        --version             show the current version of lexicon\n        --delegated DELEGATED\n                              specify the delegated domain\n\n\n      $ lexicon cloudflare -h\n      usage: lexicon cloudflare [-h] [--name NAME] [--content CONTENT] [--ttl TTL]\n                                [--priority PRIORITY] [--identifier IDENTIFIER]\n                                [--auth-username AUTH_USERNAME]\n                                [--auth-token AUTH_TOKEN]\n                                {create,list,update,delete} domain\n                                {A,AAAA,CNAME,MX,NS,SPF,SOA,TXT,SRV,LOC}\n\n      positional arguments:\n        {create,list,update,delete}\n                              specify the action to take\n        domain                specify the domain, supports subdomains as well\n        {A,AAAA,CNAME,MX,NS,SPF,SOA,TXT,SRV,LOC}\n                              specify the entry type\n\n      optional arguments:\n        -h, --help            show this help message and exit\n        --name NAME           specify the record name\n        --content CONTENT     specify the record content\n        --ttl TTL             specify the record time-to-live\n        --priority PRIORITY   specify the record priority\n        --identifier IDENTIFIER\n                              specify the record for update or delete actions\n        --auth-username AUTH_USERNAME\n                              specify email address used to authenticate\n        --auth-token AUTH_TOKEN\n                              specify token used authenticate\n\nUsing the lexicon CLI is pretty simple:\n\n    # setup provider environmental variables:\n    export LEXICON_CLOUDFLARE_USERNAME=\"myusername@example.com\"\n    export LEXICON_CLOUDFLARE_TOKEN=\"cloudflare-api-token\"\n\n    # list all TXT records on cloudflare\n    lexicon cloudflare list example.com TXT\n\n    # create a new TXT record on cloudflare\n    lexicon cloudflare create www.example.com TXT --name=\"_acme-challenge.www.example.com.\" --content=\"challenge token\"\n\n    # delete a  TXT record on cloudflare\n    lexicon cloudflare delete www.example.com TXT --name=\"_acme-challenge.www.example.com.\" --content=\"challenge token\"\n    lexicon cloudflare delete www.example.com TXT --identifier=\"cloudflare record id\"\n\n## Authentication\nMost supported DNS services provide an API token, however each service implements authentication differently.\nLexicon attempts to standardize authentication around the following CLI flags:\n\n- `--auth-username` - For DNS services that require it, this is usually the account id or email address\n- `--auth-password` - For DNS services that do not provide an API token, this is usually the account password\n- `--auth-token` - This is the most common auth method, the API token provided by the DNS service\n\nYou can see all the `--auth-*` flags for a specific service by reading the DNS service specific help: `lexicon cloudflare -h`\n\n### Environmental Variables\nInstead of providing Authentication information via the CLI, you can also specify them via Environmental Variables.\nEvery DNS service and auth flag maps to an Environmental Variable as follows: `LEXICON_{DNS Provider Name}_{Auth Type}`\n\nSo instead of specifying `--auth-username` and `--auth-token` flags when calling `lexicon cloudflare ...`,\nyou could instead set the `LEXICON_CLOUDFLARE_USERNAME` and `LEXICON_CLOUDFLARE_TOKEN` environmental variables.\n\nIf you've got a subdomain delegation configured and need records configured within that (eg, you're trying to set `test.foo.example.com` where `foo.example.com` is configured as a separate zone), set `LEXICON_DELEGATED` to the delegated domain.\n\n    LEXICON_DELEGATED=foo.example.com\n\n### Letsencrypt Instructions\nLexicon has an example [dehydrated hook file](examples/dehydrated.default.sh) that you can use for any supported provider.\nAll you need to do is set the PROVIDER env variable.\n\n    PROVIDER=cloudflare dehydrated --cron --hook dehydrated.default.sh --challenge dns-01\n\nLexicon can also be used with [Certbot](https://certbot.eff.org/) and the included [Certbot hook file](examples/certbot.default.sh) (requires configuration).\n\n## TroubleShooting & Useful Tools\nThere is an included example Dockerfile that can be used to automatically generate certificates for your website.\n\n## ToDo list\n\n- [x] Create and Register a lexicon pip package.\n- [ ] Write documentation on supported environmental variables.\n- [x] Wire up automated release packaging on PRs.\n- [x] Check for additional dns hosts with apis (from [fog](http://fog.io/about/provider_documentation.html), [dnsperf](http://www.dnsperf.com/), [libcloud](https://libcloud.readthedocs.io/en/latest/dns/supported_providers.html))\n- [ ] Get a list of Letsencrypt clients, and create hook files for them ([letsencrypt clients](https://github.com/letsencrypt/letsencrypt/wiki/Links))\n\n## Contributing Changes.\nIf the DNS provider you use is not already available, please consider contributing by opening a pull request and\nfollowing the [CONTRIBUTING.md](https://github.com/AnalogJ/lexicon/blob/master/CONTRIBUTING.md)\n\n## License\n- MIT\n- [Logo: transform by Mike Rowe from the Noun Project](https://thenounproject.com/term/transform/397964)\n\n\n## References\n\n    tox",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AnalogJ/lexicon",
    "keywords": "dns lexicon dns-lexicon dehydrated letsencrypt aliyun aurora auto azure cloudflare cloudns cloudxns conoha constellix digitalocean dinahosting directadmin dnsimple dnsmadeeasy dnspark dnspod dreamhost easydns easyname exoscale gandi gehirn glesys godaddy googleclouddns gratisdns henet hetzner hostingde hover infoblox internetbs inwx linode linode4 localzone luadns memset namecheap namesilo netcup nfsn nsone onapp online ovh plesk pointhq powerdns rackspace rage4 rcodezero route53 safedns sakuracloud softlayer subreg transip vultr yandex zeit zilore zonomi",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dns-lexicon",
    "package_url": "https://pypi.org/project/dns-lexicon/",
    "platform": "",
    "project_url": "https://pypi.org/project/dns-lexicon/",
    "project_urls": {
      "Homepage": "https://github.com/AnalogJ/lexicon"
    },
    "release_url": "https://pypi.org/project/dns-lexicon/3.3.9/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
    "summary": "Manipulate DNS records on various DNS providers in a standardized/agnostic way",
    "version": "3.3.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15535504,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a525882e4d6ee25fef010a79e2996b3ebd9f01de93eae98413988a57f79a132a",
        "md5": "3fca31ad7501353c600f5fb533812dc8",
        "sha256": "fe14ccc56cd118f37b4d21a21fb3d44bb43eb98d5515be82229a5026b08b5148"
      },
      "downloads": -1,
      "filename": "dns-lexicon-3.3.9.tar.gz",
      "has_sig": false,
      "md5_digest": "3fca31ad7501353c600f5fb533812dc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
      "size": 142665,
      "upload_time": "2019-11-14T22:33:56",
      "upload_time_iso_8601": "2019-11-14T22:33:56.086271Z",
      "url": "https://files.pythonhosted.org/packages/a5/25/882e4d6ee25fef010a79e2996b3ebd9f01de93eae98413988a57f79a132a/dns-lexicon-3.3.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}