{
  "info": {
    "author": "Harald Nezbeda",
    "author_email": "hnezbeda@anexia-it.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "\n====================\nDjango Request Cache\n====================\n\nDjango Request Cache provides a cache for each request (within your Django Request/Response cycle).\n\nQuick start\n-----------\n\n1. Download and install using `pip install`\n\n.. code-block:: bash\n\n    pip install django-request-cache\n\n\n2. Add ``UserForeignKeyMiddleware`` and ``RequestCacheMiddleware`` to your ``MIDDLEWARE`` settings like this:\n\n.. code-block:: python\n\n    MIDDLEWARE = (\n        ...\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n        'django_userforeignkey.middleware.UserForeignKeyMiddleware',\n        'django_request_cache.middleware.RequestCacheMiddleware',\n    )\n\n\nor if you are still using the an older Django version (e.g., Django 1.8) with ``MIDDLEWARE_CLASSES``:\n\n.. code-block:: python\n\n    MIDDLEWARE_CLASSES = (\n        ...\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n        'django_userforeignkey.middleware.UserForeignKeyMiddleware',\n        'django_request_cache.middleware.RequestCacheMiddleware',\n    )\n\n\n3. Use the per-request cache as a decorator\n\n.. code-block:: python\n\n    from django_request_cache import cache_for_request\n\n    @cache_for_request\n    def do_some_complex_calculation(a, b, c):\n        print(\"Calculating... please wait\")\n        return a * b * c\n\n\nTry it out by executing do_some_complex_calculation multiple times within your request\n\nAttribution\n-----------\n\n``RequestCache`` and ``RequestCacheMiddleware`` (see ``middleware.py``) are from a source code snippet on StackOverflow\nhttps://stackoverflow.com/questions/3151469/per-request-cache-in-django/37015573#37015573\ncreated by coredumperror https://stackoverflow.com/users/464318/coredumperror\nOriginal Question was posted by https://stackoverflow.com/users/7679/chase-seibert\nat https://stackoverflow.com/questions/3151469/per-request-cache-in-django\ncopied on 2017-Dec-20\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anexia-it/django-request-cache",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-request-cache",
    "package_url": "https://pypi.org/project/django-request-cache/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-request-cache/",
    "project_urls": {
      "Homepage": "https://github.com/anexia-it/django-request-cache"
    },
    "release_url": "https://pypi.org/project/django-request-cache/1.2/",
    "requires_dist": [
      "django (>=2.1)",
      "django-userforeignkey"
    ],
    "requires_python": "",
    "summary": "A simple Django app that provides a per-request cache.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16196181,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "645901ad0865a980e27b58a8bdbc6580fa182f8802f4da14a850d8d08d9b37cf",
        "md5": "c7755c6240ea2e1b37d915685eb7363a",
        "sha256": "14b8b34678df13ab0b37f4054c29edefe2d71e7d286b5473ec76f5c163b9dc73"
      },
      "downloads": -1,
      "filename": "django_request_cache-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c7755c6240ea2e1b37d915685eb7363a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 4728,
      "upload_time": "2020-01-30T13:44:25",
      "upload_time_iso_8601": "2020-01-30T13:44:25.195412Z",
      "url": "https://files.pythonhosted.org/packages/64/59/01ad0865a980e27b58a8bdbc6580fa182f8802f4da14a850d8d08d9b37cf/django_request_cache-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa5aeefa2e954c93ffc4aae23168f8025aac3cf17eee789ae7739677387bb952",
        "md5": "6c6071fc9aaddac38f3ac60eded8c19e",
        "sha256": "45d85cf568bf9022d5b0317b2fd4ee621c6f2b4c022f99c46faeffe18008b31b"
      },
      "downloads": -1,
      "filename": "django-request-cache-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6c6071fc9aaddac38f3ac60eded8c19e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4491,
      "upload_time": "2020-01-30T13:44:26",
      "upload_time_iso_8601": "2020-01-30T13:44:26.839782Z",
      "url": "https://files.pythonhosted.org/packages/fa/5a/eefa2e954c93ffc4aae23168f8025aac3cf17eee789ae7739677387bb952/django-request-cache-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}