{
  "info": {
    "author": "Chris Horsley",
    "author_email": "chris.horsley@csirtfoundry.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "DSMS CLI tool\n--------------------\n\ndsms_cli is a command line interface for exporting reports from a DSMS\nsystem.\n\n============\nInstallation\n============\n\n``pip install dsms-cli``\n\n========\nSetup\n========\n\nBefore you'll begin, you'll need several settings set as environment variables:\n\n* DSMS_SERVER    (e.g. https://mydsmsserver)\n* DSMS_USER      (e.g. tom)\n* DSMS_PASS      (e.g. ThisIsMyPassword)\n* DSMS_SERVER_CERT (optional: e.g. /usr/share/ca-certificates/dsmserver.crt)\n\n=========\nAdding targets\n=========\n\nTo add targets, you'll firstly need the ID numbers of the schedules, profiles\nand severities you wish to add. You can do this with::\n\n    dsms_cli list schedules\n    dsms_cli list profiles\n    dsms_cli list severities\n\nThen, you're ready to add targets. For example::\n\n    dsms_cli add location --profile=1 --schedule=1 http://example.com\n    dsms_cli add file --profile=2 --schedule=1 mysample.exe\n\nFor file types, the local file path you specify will be uploaded to DSMS.\n\n=========\nRunning reports\n=========\n\n\nYou can also run searches of DSMS results using the same filter syntax as the\nweb application. For example, to get all active phishing targets, run::\n\n    dsms_cli export --query=\"status:Active type:Phishing\"\n\nYou can also redact potentially sensitive information in target information\nby supplying the --redact switch. This will replace URLs like\nhttp://example.com/?id=me@example.com with\nhttp://example.com/?id=REDACTED@REDACTED.\n\n=========\nReport formats\n=========\n\nDSMS has a simple build-in report template, but you may create templates in any\nformat you like. Reports are generated by the Jinja2 template engine. See\nhttp://jinja.pocoo.org/docs/dev/templates/ for details of the format. \n\nIf you'd like to add report formats:\n\n1) Create a directory to house your templates, e.g. $HOME/dsms_templates.\n2) Create your template using the .j2 extension, e.g.\n   $HOME/dsms_templates/my_format.j2.\n3) Templates must adhere to Jinja2 format. You can find a simple example of\n   the DSMS standard template at\n   https://gist.github.com/chorsley/d52f8e8bf3c6df4901b38ed316af5889.\n4) Variable names map to the API fields for \"Target filter report\" under\n   the \"results\" key. Please see\n   https://bitbucket.org/irtools/dsms/wiki/UsingDSMSAPI for more information.\n5) Finally, run the report. Using our example values:\n   ``dsms_cli export --template_dir=$HOME/dsms_templates --template=my_format``.\n   Naturally, you can combine this with --query, --redact etc to filter the\n   targets that will appear in the report.\n\n=========\nSSL errors\n=========\n\nIf you're using DSMS with a self-signed SSL certificate, you may run into the\nfollowing error::\n\n    RuntimeError: Error during login: bad handshake: Error([('SSL routines',\n    'SSL3_GET_SERVER_CERTIFICATE', 'certificate verify failed')],)\n\nThere are two options to avoid this.\n\n1) You can specify the path to a trusted SSL certificate using the\nDSMS_SERVER_CERT environment setting. To get this cert, you can run::\n\n    openssl s_client -showcerts -connect [YOUR DSMS HOST]:443 </dev/null \\\n    2>/dev/null|openssl x509 -outform PEM >dsms_server_cert.crt\n\nThen, set the cert path to the file you downloaded::\n\n    export DSMS_SERVER_CERT=dsms_server_cert.crt\n\n2) While not recommended, you can also ignore all SSL errors by appending\n--ignore_ssl_errs to your dsms_cli command.\n\n=========\nFurther help\n=========\n\nTo see all command line switches, you can run::\n\n    dsms_cli --help",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/dsms/dsms_report_cli",
    "keywords": "DSMS",
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dsms_cli",
    "package_url": "https://pypi.org/project/dsms_cli/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dsms_cli/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/dsms/dsms_report_cli"
    },
    "release_url": "https://pypi.org/project/dsms_cli/1.1.8/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "DSMS CLI tool",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2077739,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53bfdf5a43d00aad25af81792b8df74802b07c1f84ad0ed9be10594219aeaf5e",
        "md5": "736fa8dadf5b33e3e4440f26793a1aca",
        "sha256": "368b2b38949685f25ff0b1ea1fa4c325493d06f8533741605f4bb2e9c0884cd1"
      },
      "downloads": -1,
      "filename": "dsms_cli-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "736fa8dadf5b33e3e4440f26793a1aca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10127,
      "upload_time": "2016-04-22T07:47:49",
      "upload_time_iso_8601": "2016-04-22T07:47:49.274466Z",
      "url": "https://files.pythonhosted.org/packages/53/bf/df5a43d00aad25af81792b8df74802b07c1f84ad0ed9be10594219aeaf5e/dsms_cli-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}