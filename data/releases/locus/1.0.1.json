{
  "info": {
    "author": "Azat Ibrakov",
    "author_email": "azatibrakov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "locus\n=====\n\n[![](https://dev.azure.com/lycantropos/locus/_apis/build/status/lycantropos.locus?branchName=master)](https://dev.azure.com/lycantropos/locus/_build/latest?definitionId=25&branchName=master \"Azure Pipelines\")\n[![](https://readthedocs.org/projects/locus/badge/?version=latest)](https://locus.readthedocs.io/en/latest \"Documentation\")\n[![](https://codecov.io/gh/lycantropos/locus/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/locus \"Codecov\")\n[![](https://img.shields.io/github/license/lycantropos/locus.svg)](https://github.com/lycantropos/locus/blob/master/LICENSE \"License\")\n[![](https://badge.fury.io/py/locus.svg)](https://badge.fury.io/py/locus \"PyPI\")\n\nIn what follows `python` is an alias for `python3.5` or `pypy3.5`\nor any later version (`python3.6`, `pypy3.6` and so on).\n\nInstallation\n------------\n\nInstall the latest `pip` & `setuptools` packages versions\n```bash\npython -m pip install --upgrade pip setuptools\n```\n\n### User\n\nDownload and install the latest stable version from `PyPI` repository:\n```bash\npython -m pip install --upgrade locus\n```\n\n### Developer\n\nDownload the latest version from `GitHub` repository\n```bash\ngit clone https://github.com/lycantropos/locus.git\ncd locus\n```\n\nInstall dependencies\n```bash\npython -m pip install -r requirements.txt\n```\n\nInstall\n```bash\npython setup.py install\n```\n\nUsage\n-----\n```python\n>>> from ground.geometries import to_point_cls, to_segment_cls\n>>> Point, Segment = to_point_cls(), to_segment_cls()\n>>> from locus import kd\n>>> points = list(map(Point, range(-10, 11), range(0, 20)))\n>>> kd_tree = kd.Tree(points)\n>>> kd_tree.nearest_index(Point(0, 0)) == 5\nTrue\n>>> kd_tree.nearest_point(Point(0, 0)) == Point(-5, 5)\nTrue\n>>> kd_tree.n_nearest_indices(2, Point(0, 0)) == [6, 5]\nTrue\n>>> kd_tree.n_nearest_points(2, Point(0, 0)) == [Point(-4, 6), Point(-5, 5)]\nTrue\n>>> kd_tree.find_ball_indices(Point(0, 3), 5) == [6, 7]\nTrue\n>>> kd_tree.find_ball_points(Point(0, 3), 5) == [Point(-4, 6), Point(-3, 7)]\nTrue\n>>> kd_tree.find_interval_indices(((-1, 1), (0, 10))) == [9, 10]\nTrue\n>>> kd_tree.find_interval_points(((-1, 1), (0, 10))) == [Point(-1, 9), Point(0, 10)]\nTrue\n>>> from locus import r\n>>> intervals = list(zip(zip(range(-10, 11), range(0, 20)), \n...                      zip(range(-20, 0), range(-10, 11))))\n>>> r_tree = r.Tree(intervals)\n>>> r_tree.nearest_index(Point(0, 0)) == 10\nTrue\n>>> r_tree.nearest_interval(Point(0, 0))\n((0, 10), (-10, 0))\n>>> r_tree.n_nearest_indices(2, Point(0, 0)) == [10, 11]\nTrue\n>>> r_tree.n_nearest_intervals(2, Point(0, 0)) == [((0, 10), (-10, 0)), ((1, 11), (-9, 1))]\nTrue\n>>> r_tree.find_subsets_indices(((0, 10), (-10, 10))) == [10]\nTrue\n>>> r_tree.find_subsets(((0, 10), (-10, 10))) == [((0, 10), (-10, 0))]\nTrue\n>>> r_tree.find_supersets_indices(((0, 10), (-10, 0))) == [10]\nTrue\n>>> r_tree.find_supersets(((0, 10), (-10, 0))) == [((0, 10), (-10, 0))]\nTrue\n\n```\n\nDevelopment\n-----------\n\n### Bumping version\n\n#### Preparation\n\nInstall\n[bump2version](https://github.com/c4urself/bump2version#installation).\n\n#### Pre-release\n\nChoose which version number category to bump following [semver\nspecification](http://semver.org/).\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose $CATEGORY\n```\n\nwhere `$CATEGORY` is the target version number category name, possible\nvalues are `patch`/`minor`/`major`.\n\nBump version\n```bash\nbump2version --verbose $CATEGORY\n```\n\nThis will set version to `major.minor.patch-alpha`. \n\n#### Release\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose release\n```\n\nBump version\n```bash\nbump2version --verbose release\n```\n\nThis will set version to `major.minor.patch`.\n\n### Running tests\n\nInstall dependencies\n```bash\npython -m pip install -r requirements-tests.txt\n```\n\nPlain\n```bash\npytest\n```\n\nInside `Docker` container:\n- with `CPython`\n  ```bash\n  docker-compose --file docker-compose.cpython.yml up\n  ```\n- with `PyPy`\n  ```bash\n  docker-compose --file docker-compose.pypy.yml up\n  ```\n\n`Bash` script (e.g. can be used in `Git` hooks):\n- with `CPython`\n  ```bash\n  ./run-tests.sh\n  ```\n  or\n  ```bash\n  ./run-tests.sh cpython\n  ```\n\n- with `PyPy`\n  ```bash\n  ./run-tests.sh pypy\n  ```\n\n`PowerShell` script (e.g. can be used in `Git` hooks):\n- with `CPython`\n  ```powershell\n  .\\run-tests.ps1\n  ```\n  or\n  ```powershell\n  .\\run-tests.ps1 cpython\n  ```\n- with `PyPy`\n  ```powershell\n  .\\run-tests.ps1 pypy\n  ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/lycantropos/locus/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lycantropos/locus/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "locus",
    "package_url": "https://pypi.org/project/locus/",
    "platform": "",
    "project_url": "https://pypi.org/project/locus/",
    "project_urls": {
      "Download": "https://github.com/lycantropos/locus/archive/master.zip",
      "Homepage": "https://github.com/lycantropos/locus/"
    },
    "release_url": "https://pypi.org/project/locus/1.0.1/",
    "requires_dist": [
      "ground (~=0.3.0)",
      "reprit (~=0.3.1)",
      "typing-extensions (~=3.7.4.3) ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.5",
    "summary": "Data structures for spatial queries.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14132798,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b26ead1445b5cb7ec2d5b5ff00b4fb6074596952401854a1fff494e4bbf641b",
        "md5": "3f4ff97c19c4edb0451309520abd6a62",
        "sha256": "527b9d0127ffe08bf05a6fccb240c4006c1083be544cc8ae9f4eb6fe017255cb"
      },
      "downloads": -1,
      "filename": "locus-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f4ff97c19c4edb0451309520abd6a62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 17287,
      "upload_time": "2020-12-22T09:46:30",
      "upload_time_iso_8601": "2020-12-22T09:46:30.812590Z",
      "url": "https://files.pythonhosted.org/packages/3b/26/ead1445b5cb7ec2d5b5ff00b4fb6074596952401854a1fff494e4bbf641b/locus-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32e1699aaf3a430d944a6c2f754213b893c3f620febd3559ebe963bf41ae5a5b",
        "md5": "4e652a66aa01a4004bffc4ad86167e87",
        "sha256": "803a3bb257417dc500fd1d12f5627efd0783d5520a1fb4ea1ca7ffb756b447a8"
      },
      "downloads": -1,
      "filename": "locus-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4e652a66aa01a4004bffc4ad86167e87",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 14094,
      "upload_time": "2020-12-22T09:46:31",
      "upload_time_iso_8601": "2020-12-22T09:46:31.905472Z",
      "url": "https://files.pythonhosted.org/packages/32/e1/699aaf3a430d944a6c2f754213b893c3f620febd3559ebe963bf41ae5a5b/locus-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}