{
  "info": {
    "author": "MessageMedia Developers",
    "author_email": "developers@messagemedia.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MessageMedia Messages Python SDK\n[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)\n[![HitCount](http://hits.dwyl.io/messagemedia/messages-python-sdk.svg)](http://hits.dwyl.io/messagemedia/messages-python-sdk)\n[![PyPI](https://badge.fury.io/py/messagemedia-messages-sdk.svg)](https://pypi.python.org/pypi/messagemedia-messages-sdk)\n\nThe MessageMedia Messages API provides a number of endpoints for building powerful two-way messaging applications.\n\n![Isometric](https://i.imgur.com/jJeHwf5.png)\n\n## Table of Contents\n* [Authentication](#closed_lock_with_key-authentication)\n* [Errors](#interrobang-errors)\n* [Information](#newspaper-information)\n  * [Slack and Mailing List](#slack-and-mailing-list)\n  * [Bug Reports](#bug-reports)\n  * [Contributing](#contributing)\n* [Installation](#star-installation)\n* [Get Started](#clapper-get-started)\n* [API Documentation](#closed_book-api-documentation)\n* [Need help?](#confused-need-help)\n* [License](#page_with_curl-license)\n\n## :closed_lock_with_key: Authentication\n\nAuthentication is done via API keys. Sign up at https://developers.messagemedia.com/register/ to get your API keys.\n\nRequests are authenticated using HTTP Basic Auth or HMAC. For Basic Auth, your API key will be basicAuthUserName and API secret will be basicAuthPassword. For HMAC, your API key will be hmacAuthUserName and API secret will be hmacAuthPassword. This is demonstrated in the [Send an SMS example](https://github.com/messagemedia/messages-python-sdk/blob/master/README.md#send-an-sms) below.\n\n## :interrobang: Errors\n\nOur API returns standard HTTP success or error status codes. For errors, we will also include extra information about what went wrong encoded in the response as JSON. The most common status codes are listed below.\n\n#### HTTP Status Codes\n\n| Code      | Title       | Description |\n|-----------|-------------|-------------|\n| 400 | Invalid Request | The request was invalid |\n| 401 | Unauthorized | Your API credentials are invalid |\n| 403 | Disabled feature | Feature not enabled |\n| 404 | Not Found |\tThe resource does not exist |\n| 50X | Internal Server Error | An error occurred with our API |\n\n## :newspaper: Information\n\n#### Slack and Mailing List\n\nIf you have any questions, comments, or concerns, please join our Slack channel:\nhttps://developers.messagemedia.com/collaborate/slack/\n\nAlternatively you can email us at:\ndevelopers@messagemedia.com\n\n#### Bug reports\n\nIf you discover a problem with the SDK, we would like to know about it. You can raise an [issue](https://github.com/messagemedia/signingkeys-nodejs-sdk/issues) or send an email to: developers@messagemedia.com\n\n#### Contributing\n\nWe welcome your thoughts on how we could best provide you with SDKs that would simplify how you consume our services in your application. You can fork and create pull requests for any features you would like to see or raise an [issue](https://github.com/messagemedia/messages-python-sdk/issues). Please be aware that a large share of the files are auto-generated by our backend tool.\n\n## :star: Installation\nRun the following command to install the SDK via pip:\n```\npip install messagemedia-messages-sdk\n```\n\n## :clapper: Get Started\nIt's easy to get started. Simply enter the API Key and secret you obtained from the [MessageMedia Developers Portal](https://developers.messagemedia.com) into the code snippet below and a mobile number you wish to send to.\n\n### Send an SMS\nDestination (`destinationNumber`) and source number (`sourceNumber`) should be in the [E.164](http://en.wikipedia.org/wiki/E.164) format. For example, `+61491570156` NOT `0491570156`. The code snippet below comprises of only the bare minimum parameters required to send a message. You can view the full list of parameters over [here](https://github.com/messagemedia/messages-python-sdk/wiki/Message-Body-Parameters). Alternatively, you can refer [this](https://github.com/messagemedia/messages-python-sdk/examples/sendMessage.js) code snippet with all the parameters in use.\n\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.models.send_messages_request import SendMessagesRequest\nfrom message_media_messages.models.message import Message\nfrom message_media_messages.models.format_enum import FormatEnum\nfrom message_media_messages.models.source_number_type_enum import SourceNumberTypeEnum\nfrom message_media_messages.models.status_enum import StatusEnum\nfrom message_media_messages.exceptions.send_messages_400_response_exception import SendMessages400ResponseException\nfrom message_media_messages.exceptions.api_exception import APIException\nimport dateutil.parser\nimport jsonpickle\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\nmessages_controller = client.messages\nbody = SendMessagesRequest()\nbody.messages = []\n\nbody.messages.append(Message())\nbody.messages[0].content = 'My first message'\nbody.messages[0].destination_number = '+61491570156'\n\ntry:\n    result = messages_controller.send_messages(body)\n    print(result)\nexcept SendMessages400ResponseException as e:\n    print(e)\nexcept APIException as e:\n    print(e)\n```\n\n### Send an MMS\nDestination (`destinationNumber`) and source number (`sourceNumber`) should be in the [E.164](http://en.wikipedia.org/wiki/E.164) format. For example, `+61491570156` NOT `0491570156`. The code snippet below comprises of only the bare minimum parameters required to send a message. You can view the full list of parameters over [here](https://github.com/messagemedia/messages-python-sdk/wiki/Message-Body-Parameters). Alternatively, you can refer [this](https://github.com/messagemedia/messages-python-sdk/examples/sendMessage.js) code snippet with all the parameters in use.\n\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.models.send_messages_request import SendMessagesRequest\nfrom message_media_messages.models.message import Message\nfrom message_media_messages.models.format_enum import FormatEnum\nfrom message_media_messages.models.source_number_type_enum import SourceNumberTypeEnum\nfrom message_media_messages.models.status_enum import StatusEnum\nfrom message_media_messages.exceptions.send_messages_400_response_exception import SendMessages400ResponseException\nfrom message_media_messages.exceptions.api_exception import APIException\nimport dateutil.parser\nimport jsonpickle\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\nmessages_controller = client.messages\nbody = SendMessagesRequest()\nbody.messages = []\n\nbody.messages[0].content = 'My second message'\nbody.messages[0].destination_number = '+61491570158'\nbody.messages[0].format = FormatEnum.MMS\nbody.messages[0].media = ['https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg']\nbody.messages[0].subject = 'This is an MMS message'\n\ntry:\n    result = messages_controller.send_messages(body)\n    print(result)\nexcept SendMessages400ResponseException as e:\n    print(e)\nexcept APIException as e:\n    print(e)\n```\n\n### Get Status of a Message\nYou can get a messsage ID from a sent message by looking at the `message_id` from the response of the above example.\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.exceptions.api_exception import APIException\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\nmessages_controller = client.messages\nmessage_id = '877c19ef-fa2e-4cec-827a-e1df9b5509f7'\n\ntry:\n    result = messages_controller.get_message_status(message_id)\n    print(result)\nexcept APIException as e:\n    print(e)\n```\n\n### Get replies to a message\nYou can check for replies that are sent to your messages\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.exceptions.api_exception import APIException\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\nreplies_controller = client.replies\ntry:\n    result = replies_controller.check_replies()\n    print(result)\nexcept APIException as e:\n    print(e)\n```\n\n### Check Delivery Reports\nThis endpoint allows you to check for delivery reports to inbound and outbound messages.\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.exceptions.api_exception import APIException\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\ndelivery_reports_controller = client.delivery_reports\ntry:\n    result = delivery_reports_controller.check_delivery_reports()\n    print(result)\nexcept APIException as e:\n    print(e)\n```\n\n### Confirm Delivery Reports\nThis endpoint allows you to mark delivery reports as confirmed so they're no longer returned by the Check Delivery Reports function.\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.models.confirm_delivery_reports_as_received_request import ConfirmDeliveryReportsAsReceivedRequest\nfrom message_media_messages.exceptions.api_exception import APIException\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\ndelivery_reports_controller = client.delivery_reports\nbody = ConfirmDeliveryReportsAsReceivedRequest()\nbody.delivery_report_ids = ['011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1']\n\ntry:\n    result = delivery_reports_controller.confirm_delivery_reports_as_received(body)\n    print(result)\nexcept APIException as e:\n    print(e)\n```\n\n###  Check credits remaining (Prepaid accounts only)\nThis endpoint allows you to check for credits remaining on your prepaid account.\n```python\nfrom message_media_messages.message_media_messages_client import MessageMediaMessagesClient\nfrom message_media_messages.exceptions.api_exception import APIException\n\nauth_user_name = 'API_KEY'\nauth_password = 'API_SECRET'\nuse_hmac_authentication = False\n\nclient = MessageMediaMessagesClient(auth_user_name, auth_password, use_hmac_authentication)\n\nmessages_controller = client.messages\ntry:\n    result = messages_controller.check_credits_remaining()\n    print(result)\nexcept APIException as e:\n    print(e)\n```\n\n## :closed_book: API Reference Documentation\nCheck out the [full API documentation](https://developers.messagemedia.com/code/messages-api-documentation/) for more detailed information.\n\n## :confused: Need help?\nPlease contact developer support at developers@messagemedia.com or check out the developer portal at [developers.messagemedia.com](https://developers.messagemedia.com/)\n\n## :page_with_curl: License\nApache License. See the [LICENSE](LICENSE) file.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://developers.messagemedia.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "messagemedia-messages-sdk",
    "package_url": "https://pypi.org/project/messagemedia-messages-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/messagemedia-messages-sdk/",
    "project_urls": {
      "Homepage": "https://developers.messagemedia.com"
    },
    "release_url": "https://pypi.org/project/messagemedia-messages-sdk/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The MessageMedia Messages API provides a number of endpoints for building powerful two-way messaging applications.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16878524,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87ccafae99153af7b614bccadc66cd545708223d31978ed04ce2cc0304370295",
        "md5": "062bf3306211fbce7da29e603725fa95",
        "sha256": "d4a70ffac7d7e672745d0ce7e18e2d920ec40efb8dfa4abac2495e929b640f84"
      },
      "downloads": -1,
      "filename": "messagemedia-messages-sdk-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "062bf3306211fbce7da29e603725fa95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30771,
      "upload_time": "2019-01-18T00:33:34",
      "upload_time_iso_8601": "2019-01-18T00:33:34.287664Z",
      "url": "https://files.pythonhosted.org/packages/87/cc/afae99153af7b614bccadc66cd545708223d31978ed04ce2cc0304370295/messagemedia-messages-sdk-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}