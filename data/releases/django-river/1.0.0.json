{
  "info": {
    "author": "Ahmet DAL",
    "author_email": "ceahmetdal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. |Build Status| image:: https://travis-ci.org/javrasya/django-river.svg\n    :target: https://travis-ci.org/javrasya/django-river\n.. |Coverage Status| image:: https://coveralls.io/repos/javrasya/django-river/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/javrasya/django-river?branch=master\n\n.. |Health Status| image:: https://landscape.io/github/javrasya/django-river/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/javrasya/django-river/master\n   :alt: Code Health\n\n.. |Documentation Status| image:: https://readthedocs.org/projects/django-river/badge/?version=latest\n    :target: https://readthedocs.org/projects/django-river/?badge=latest\n\n.. |Timeline| image:: https://cloud.githubusercontent.com/assets/1279644/9934893/921b543a-5d5c-11e5-9596-a5e067db79ed.png\n\n.. |Re Open Case| image:: https://cloud.githubusercontent.com/assets/1279644/9653471/3c9dfcfa-522c-11e5-85cb-f90a4f184201.png\n\n.. |Closed Without Re Open Case| image:: https://cloud.githubusercontent.com/assets/1279644/9624970/88c0ddaa-515a-11e5-8f65-d1e35e945976.png\n\n.. |Closed With Re Open Case| image:: https://cloud.githubusercontent.com/assets/1279644/9624968/88b5f278-515a-11e5-996b-b62d6e224357.png\n\n.. |Logo| image:: https://cloud.githubusercontent.com/assets/1279644/9602162/f198bb06-50ae-11e5-8eef-e9d03ff5f113.png\n\nDjango River\n============\n\n|Logo|\n\n|Build Status| |Coverage Status| |Health Status| |Documentation Status|\n\n\nContributors are welcome. Come and give a hand :-)\n---------------------------------------------------\n\nRiver is an open source workflow framework for ``Django`` which support on\nthe fly changes instead of hardcoding states, transitions and authorization rules.\n\nThe main goal of developing this framework is **to be able to edit any\nworkflow item on the fly.** This means that all the elements in a workflow like\nstates, transitions or authorizations rules are editable at any time so that no changes requires a re-deploying of your application anymore.\n\n**Playground**: There is a fake jira example repository as a playground of django-river. https://github.com/javrasya/fakejira\n\nDocumentation\n-------------\n\nOnline documentation is available at http://django-river.rtfd.org/.\n\nRequirements\n------------\n* Python (``2.7``, ``3.4``, ``3.5``, ``3.6``)\n* Django (``1.7``, ``1.8``, ``1.9``, ``1.10``, ``1.11``, ``2.0``, ``2.1``)\n* ``Django`` >= 2.0 is supported for ``Python`` >= 3.5\n* ``Django`` == 1.7 is only supported for ``Python`` == 2.7 and ``Python`` == 3.4\n\n\nUsage\n-----\n1. Install and enable it\n\n   .. code:: bash\n\n       pip install django-river\n\n\n   .. code:: python\n\n       INSTALLED_APPS=[\n       ...\n       river\n       ...\n       ]\n\n2. Create your first state machine in your model and migrate your db\n\n    .. code:: python\n\n        from django.db import models\n        from river.models.fields.state import StateField\n\n        class MyModel(models.Model):\n            my_state_field = StateField()\n\n3. Create your states as one of them will be your initial state on the admin page\n4. Create your transition approval metadata with your model (``MyModel`` - ``my_state_field``) information and authorization rules along with their priority on the admin page\n5. Enjoy your ``django-river`` journey.\n\n    .. code-block:: python\n\n        my_model=MyModel.objects.get(....)\n\n        my_model.river.my_state_field.approve(as_user=transactioner_user)\n        my_model.river.my_state_field.approve(as_user=transactioner_user,next_state=State.objects.get(label='re-opened'))\n\n        # and much more. Check the documentation\n\n.. note::\n    Whenever a model object is saved, it's state field will be initialized with the\n    state is given at step-3 above by ``django-river``.\n\n.. note::\n    Make sure that there is only one initial state defined in your workflow, so that ``django-river`` can pick that one automatically\n    when a model object is created. All other workflow items will be managed by ``django-river`` after object creations.\n\n\n\nExample Scenarios\n-----------------\nSimple Issue Tracking System\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nRe-Open case\n\"\"\"\"\"\"\"\"\"\"\"\"\n|Re Open Case|\n\nClosed without Re-Open case\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|Closed Without Re Open Case|\n\nClosed with Re-Open case\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|Closed With Re Open Case|\n\nContribute\n----------\n\nContributions are welcome! Please join making always totally free ``django-river`` better.\n\n",
    "description_content_type": "",
    "docs_url": "https://pythonhosted.org/django-river/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/javrasya/django-river.git",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-river",
    "package_url": "https://pypi.org/project/django-river/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-river/",
    "project_urls": {
      "Homepage": "https://github.com/javrasya/django-river.git"
    },
    "release_url": "https://pypi.org/project/django-river/1.0.0/",
    "requires_dist": [
      "Django",
      "mock",
      "factory-boy",
      "django-mptt"
    ],
    "requires_python": "",
    "summary": "Django Workflow Library",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9280417,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37057e18a61a6543fc0cb51cc8e0b3ca4118a581e7d44722d37d20029eff3c04",
        "md5": "dc4a08dd7302607a5fe4aeacf2b85807",
        "sha256": "8e10d69fde66b5dd37b6b1e15e48bbde215dbdf0965fd83128e6ada5b28d30cb"
      },
      "downloads": -1,
      "filename": "django_river-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc4a08dd7302607a5fe4aeacf2b85807",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 48412,
      "upload_time": "2019-01-04T23:39:56",
      "upload_time_iso_8601": "2019-01-04T23:39:56.156987Z",
      "url": "https://files.pythonhosted.org/packages/37/05/7e18a61a6543fc0cb51cc8e0b3ca4118a581e7d44722d37d20029eff3c04/django_river-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51636ce1480e0f1d8cdd3ba21af33ac0a6c0bb387832ea06a4b252b651795abf",
        "md5": "4f7df2c2a6634c3b2832e4717eb82ea7",
        "sha256": "b5d598316b636f69bfc34171b9ea41629b08c8fcba9a137852f0e115d34207de"
      },
      "downloads": -1,
      "filename": "django_river-1.0.0-py3.6.egg",
      "has_sig": false,
      "md5_digest": "4f7df2c2a6634c3b2832e4717eb82ea7",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": null,
      "size": 88965,
      "upload_time": "2019-01-04T23:39:59",
      "upload_time_iso_8601": "2019-01-04T23:39:59.385342Z",
      "url": "https://files.pythonhosted.org/packages/51/63/6ce1480e0f1d8cdd3ba21af33ac0a6c0bb387832ea06a4b252b651795abf/django_river-1.0.0-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99d6289205bf33af8c43837d268c551bd1fb9e62f1392191a2db61edffcfa506",
        "md5": "25db237d5d695825e6f21c1a5844f9a6",
        "sha256": "a11bfe0bc10291b0228b8e3789240207a83471b91ee8b8af8323058f626fde64"
      },
      "downloads": -1,
      "filename": "django-river-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "25db237d5d695825e6f21c1a5844f9a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22618,
      "upload_time": "2019-01-04T23:39:57",
      "upload_time_iso_8601": "2019-01-04T23:39:57.768179Z",
      "url": "https://files.pythonhosted.org/packages/99/d6/289205bf33af8c43837d268c551bd1fb9e62f1392191a2db61edffcfa506/django-river-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}