{
  "info": {
    "author": "Steven Arcangeli",
    "author_email": "stevearc@stevearc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Dynamo3\n=======\n:Build: |build|_ |coverage|_\n:Downloads: http://pypi.python.org/pypi/dynamo3\n:Source: https://github.com/stevearc/dynamo3\n\n.. |build| image:: https://travis-ci.org/stevearc/dynamo3.png?branch=master\n.. _build: https://travis-ci.org/stevearc/dynamo3\n.. |coverage| image:: https://coveralls.io/repos/stevearc/dynamo3/badge.png?branch=master\n.. _coverage: https://coveralls.io/r/stevearc/dynamo3?branch=master\n\nDynamo3 is a library for querying DynamoDB. It is designed to be higher-level\nthan boto (it's built on top of botocore), to make simple operations easier to\nperform and understand.\n\nFeatures\n--------\n* Mypy-typed API\n* Python object wrappers for most AWS data structures\n* Automatic serialization of built-in types, with hooks for custom types\n* Automatic paging of results\n* Automatic batching for batch_write_item\n* Exponential backoff of requests when throughput is exceeded\n* Throughput limits to self-throttle requests to a certain rate\n* Nose plugin for running DynamoDB Local\n\nDynamoDB features that are not yet supported\n--------------------------------------------\n* Reading from streams\n* Adding/removing tags on a table\n* Table backups\n* Scanning with segments\n* Table replicas (Global tables version 2019.11.21)\n* Table auto scaling\n* DAX\n\nNote that you can still access these APIs by using ``DynamoDBConnection.call``,\nthough you may prefer to go straight to boto3/botocore.\n\n\nChangelog\n=========\n\n1.0.0\n-----\n* Removed the legacy API (scan, query, update_item, delete_item, put_item, get_item)\n* Renamed the new API methods to match the old ones (e.g. scan2 -> scan, query2 -> query)\n* Moved constant values into ``dynamo3.constants``. This is where you can now find STRING, BINARY, etc\n* Added mypy typing where possible\n* Drop support for Python 2\n* Add support for table billing mode (aka on-demand tables)\n* Add support for SSE, TTL, and transactions\n\n0.4.10\n------\n* Fixed DynamoDB Local link in testing framework\n\n0.4.9\n-----\n* Feature: Result objects from get_item have an ``exists`` flag\n* Feature: ``wait`` keyword for create and delete table\n\n0.4.8\n-----\n* Bug fix: Scans/Queries could return incomplete results if AWS returned an empty Items list\n\n0.4.7\n-----\n* New ``RateLimit`` class to avoid blowing through your provisioned throughput\n\n0.4.6\n-----\n* New ``Limit`` class for more complex query limit behavior\n* Bug fix: Scan and Query with ``Select='COUNT'`` will page results properly\n\n0.4.5\n-----\n* batch_get supports ``alias`` arg for ExpressionAttributeNames\n\n0.4.4\n-----\n* Make connection stateless again. Puts consumed_capacity into response object and fixes mystery crash.\n\n0.4.3\n-----\n* Bug fix: getting ConsumedCapacity doesn't crash for BatchGetItem and BatchWriteItem\n* Feature: connection.default_return_capacity\n* Feature: hooks for ``precall``, ``postcall``, and ``capacity``\n* Better handling of ConsumedCapacity results\n\n0.4.2\n-----\n* Feature: New methods to take advantage of the newer expression API. See get_item2, put_item2.\n* Feature: Shortcut ``use_version`` for switching over to the new APIs.\n\n0.4.1\n-----\n* Feature: update_table can create and delete global indexes\n* Feature: New methods to take advantage of the newer expression API. See scan2, query2, update_item2, and delete_item2.\n\n0.4.0\n-----\n* Migrating to botocore client API since services will be deprecated soon\n\n0.3.2\n-----\n* Bug fix: Serialization of blobs broken with botocore 0.85.0\n\n0.3.1\n-----\n* Bug fix: Crash when parsing description of table being deleted\n\n0.3.0\n-----\n* **Breakage**: Dropping support for python 3.2 due to lack of botocore support\n* Feature: Support JSON document data types\n\nFeatures thanks to DynamoDB upgrades: https://aws.amazon.com/blogs/aws/dynamodb-update-json-and-more/\n\n0.2.2\n-----\n* Tweak: Nose plugin allows setting region when connecting to DynamoDB Local\n\n0.2.1\n-----\n* Feature: New, unified ``connect`` method\n\n0.2.0\n-----\n* Feature: More expressive 'expected' conditionals\n* Feature: Queries can filter on non-indexed fields\n* Feature: Filter constraints may be OR'd together\n\nFeatures thanks to DynamoDB upgrades: http://aws.amazon.com/blogs/aws/improved-queries-and-updates-for-dynamodb/\n\n0.1.3\n-----\n* Bug fix: sometimes crash after deleting table\n* Bug fix: DynamoDB Local nose plugin fails\n\n0.1.2\n-----\n* Bug fix: serializing ints fails\n\n0.1.1\n-----\n* Feature: Allow ``access_key`` and ``secret_key`` to be passed to the ``DynamoDBConnection.connect_to_*`` methods\n\n0.1.0\n-----\n* First public release\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/stevearc/dynamo3",
    "keywords": "aws dynamo dynamodb",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamo3",
    "package_url": "https://pypi.org/project/dynamo3/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamo3/",
    "project_urls": {
      "Homepage": "http://github.com/stevearc/dynamo3"
    },
    "release_url": "https://pypi.org/project/dynamo3/1.0.0/",
    "requires_dist": [
      "botocore (>=0.89.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python 3 compatible library for DynamoDB",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8334363,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5714cab36e2c51efedd331c0d6cf303a039cf1cf8b8724b024f3a1d15bd57bd",
        "md5": "d868a906c8335adccb123eac97d47f07",
        "sha256": "b36ea3849bba4eb55002c2695e45e73a51422448dead5e59cadb337b68922ac4"
      },
      "downloads": -1,
      "filename": "dynamo3-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d868a906c8335adccb123eac97d47f07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 39073,
      "upload_time": "2020-10-03T22:16:16",
      "upload_time_iso_8601": "2020-10-03T22:16:16.073542Z",
      "url": "https://files.pythonhosted.org/packages/f5/71/4cab36e2c51efedd331c0d6cf303a039cf1cf8b8724b024f3a1d15bd57bd/dynamo3-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ebb22c7c3bb4c12889aa6d5e8b00c34cbdf7df09839faab8ad11043ad37eda37",
        "md5": "03fe58a09e04058208bb7f83d34cf656",
        "sha256": "c13644c08fbad0861cd705ef84b9061ea9a9616a3c8c055fb5282d7574bd86d7"
      },
      "downloads": -1,
      "filename": "dynamo3-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "03fe58a09e04058208bb7f83d34cf656",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 37174,
      "upload_time": "2020-10-03T22:16:17",
      "upload_time_iso_8601": "2020-10-03T22:16:17.347861Z",
      "url": "https://files.pythonhosted.org/packages/eb/b2/2c7c3bb4c12889aa6d5e8b00c34cbdf7df09839faab8ad11043ad37eda37/dynamo3-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}