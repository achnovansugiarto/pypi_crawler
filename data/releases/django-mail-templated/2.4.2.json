{
  "info": {
    "author": "Artem Rizhov",
    "author_email": "artem.rizhov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==============================\nDjango-Mail-Templated\n==============================\n\n:Info: Send emails using Django template system\n:Author: Artem Rizhov (https://github.com/artemrizhov)\n\nOverview\n=================\n\nThis is a tiny wrapper around the standard ``EmailMessage`` class and\n``send_mail()`` function that provides an easy way to create email messages\nusing the `Django template system\n<https://docs.djangoproject.com/es/1.9/topics/templates/>`_\nJust pass ``template_name`` and ``context`` as the first parameters then use as\nnormal.\n\nFeatures:\n\n* Built with OOP, KISS and flexibility in mind. Really small and simple, but\n  yet full-featured (I hope).\n\n* Extends and mimics the built-in Django ``EmailMessage`` and ``send_mail()``.\n  Compatible as much as possible.\n\n* Fully supports Django template system including template inheritance\n  (thanks to *BradWhittington* for the note about the problem).\n\n* Supports any possible template engines and loaders.\n\n* Supports serialisation (thanks to *arjandepooter*).\n\n* Fully covered with tests.\n\n* Tested with Django 1.4-1.9.\n\n* Compatible with Python 3.\n\n\nInstallation\n=================\n\nRun:\n\n.. code-block:: console\n\n    pip install django-mail-templated\n\nAnd register the app in your settings file:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'mail_templated'\n    )\n\nUsage\n=================\n\nEach email template should extend ``\"mail_templated/base.tpl\"`` or it's clone\neither directly or via descendants.\nThis is the only way to provide robust and full support for template\ninheritance, because Django template engine takes a lot of changes from time\nto time.\n\nNote that first and last newlines inside of block contents will be removed.\n\nPlain text message:\n\n.. code-block:: html+django\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nHTML message:\n\n.. code-block:: html+django\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nMultipart message:\n\n.. code-block:: html+django\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nPartial template without subject:\n\n.. code-block:: html+django\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nFast method with ``send_mail()`` function:\n\n.. code-block:: python\n\n    from mail_templated import send_mail\n    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email])\n\nMore control with ``EmailMessage`` class:\n\n.. code-block:: python\n\n    from mail_templated import EmailMessage\n\n    # Create new empty message.\n    message = EmailMessage()\n\n    # Initialize message on creation.\n    message = EmailMessage('email/hello.tpl', {'user': user}, from_email,\n                           to=[user.email])\n\n    # Set default subject and body.\n    message = EmailMessage(subject=subject, body=body)\n\n    # Initialize message and render template immediately.\n    message = EmailMessage('email/hello.tpl', {'user': user}, from_email,\n                           to=[user.email], render=True)\n\n    # Initialize message later.\n    message.subject = 'Default subject'\n    message.context = {'user': user}\n    message.template_name = 'email/hello.tpl'\n    message.from_email = from_email\n    message.to = [user.email]\n\n    # Attach alternatives, files, etc., as if you'd use standard\n    # EmailMultiAlternatives object.\n    message.attach_alternative('HTML alternative', 'text/html')\n\n    # Serialize message after initialization if needed.\n    save_message_to_db(pickle.dumps(message))\n    # Then restore when ready to continue.\n    message = pickle.loads(get_message_from_db())\n\n    # Force immediate template load if you want to handle this somehow.\n    try:\n        message.load_template('email/hello.tpl')\n    except TemplateDoesNotExist:\n        message.load_template('email/default.tpl')\n\n    # You can also set template object manually.\n    message.template = get_template('mail_templated_test/plain.tpl')\n\n    # Force template rendering. If template is not loaded on this stage then\n    # it will be loaded automatically, so you actually don't have to call\n    # `load_template()` manually.\n    message.render()\n\n    # Get compiled subject and body as if you'd use standard Django message\n    # object.\n    logger.debug('Sending message with subject \"{}\" and body \"{}\"'.format(\n        message.subject, message.body))\n\n    # Change subject and body manually at any time. But remember they can be\n    # overwritten by template rendering if not rendered yet.\n    message.subject = subject\n    message.body = body\n\n    # This is also good point for serialization. Subject and body will be also\n    # serialized, the template system will not be used after deserialization.\n    message = pickle.loads(pickle.dumps(message))\n\n    # Send message when ready. It will be rendered automatically if needed.\n    message.send()\n\nLook into the source code for more info.\n\nPlease create an issue at GitHub if you have any notes.\nPull requests are welcome!\n\nUseful links\n=================\n\n* `Django template language\n  <https://docs.djangoproject.com/es/1.9/ref/templates/language/>`_\n\n* `Built-in template tags and filters\n  <https://docs.djangoproject.com/es/1.9/ref/templates/builtins/>`_\n\n* `The basics of Django template system\n  <https://docs.djangoproject.com/es/1.9/topics/templates/>`_",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/artemrizhov/django-mail-templated",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-mail-templated",
    "package_url": "https://pypi.org/project/django-mail-templated/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-mail-templated/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/artemrizhov/django-mail-templated"
    },
    "release_url": "https://pypi.org/project/django-mail-templated/2.4.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Send emails with Django template system",
    "version": "2.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2297740,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb4e7c7318004d0a213702045f3e92ed8e5ebd2863f24918b2c20bc703d7ca08",
        "md5": "91b52f70ee97e6169e75a9b4da998e73",
        "sha256": "2c2b23d4b88988225fbf66e2658f6774c5bf4f2b81a3ebec7bb3a3f7396d9363"
      },
      "downloads": -1,
      "filename": "django-mail-templated-2.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "91b52f70ee97e6169e75a9b4da998e73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10089,
      "upload_time": "2016-01-19T22:23:13",
      "upload_time_iso_8601": "2016-01-19T22:23:13.340111Z",
      "url": "https://files.pythonhosted.org/packages/cb/4e/7c7318004d0a213702045f3e92ed8e5ebd2863f24918b2c20bc703d7ca08/django-mail-templated-2.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}