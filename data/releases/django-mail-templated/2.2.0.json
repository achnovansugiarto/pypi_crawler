{
  "info": {
    "author": "Artem Rizhov",
    "author_email": "artem.rizhov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==============================\nDjango-Mail-Templated\n==============================\n:Info: Send emails using Django template system\n:Author: Artem Rizhov (https://github.com/artemrizhov)\n\nOverview\n=================\nThis is a tiny wrapper around the standard EmailMessage class and send_mail()\nfunction. Just pass template_name and context as the first parameters then use\nas normal.\n\nFeatures:\n\n* Built with OOP, KISS and flexibility in mind. Really small and simple, but\n  yet full-featured (I hope).\n\n* Extends and mimics the built-in Django `EmailMessage` and `send_mail()`.\n  Compatible as much as possible.\n\n* Fully supports Django template system including template inheritance\n  (thanks to **BradWhittington** for the note about the problem).\n\n* Supports any possible template engines and loaders.\n\n* Supports serialisation (thanks to **arjandepooter**).\n\n* Fully covered with tests.\n\n* Tested with Django 1.4-1.9.\n\n* Compatible with Python 3.\n\n\nInstallation\n=================\nRun::\n\n    $ pip install django-mail-templated\n\nAnd register the app in your settings file::\n\n    INSTALLED_APPS = (\n        ...\n        'mail_templated'\n    )\n\nUsage\n=================\n\nEach email template should extend \"mail_templated/base.tpl\" or it's clone\neither directly or via descendants.\nThis is the only way to provide robust and full support for template\ninheritance, because Django template engine takes a lot of changes from time\nto time.\n\nNote that first and last newlines inside of block contents will be removed.\n\nPlain text message::\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nHTML message::\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nMultipart message::\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nPartial template without subject::\n\n    {% extends \"mail_templated/base.tpl\" %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nFast method with `send_mail()` function::\n\n    from mail_templated import send_mail\n    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email])\n\nMore control with `EmailMessage` class::\n\n    from mail_templated import EmailMessage\n\n    # Render immediately on initialisation.\n    message = EmailMessage('email/hello.tpl', {'user': user}, from_email,\n                           to=[user.email], render=True)\n    send_to_queue(message)  # The message may be serialised safely.\n\n    # Initialize and render later.\n    message = EmailMessage(to=[user.email])\n    message.load_template('email/hello.tpl')\n    message.context = {'user': user}\n    message.render()\n    message.from_email = from_email\n    message.to = [user.email]\n\n    # Attach alternatives, files, etc.\n    message.attach_alternative('HTML alternative', 'text/html')\n\n    # Set default subject and body\n    message = EmailMessage('email/hello.tpl', {'user': user},\n                           subject=subject, body=body)\n\n    # Change subject or body manually at any time.\n    message.subject = subject\n    message.body = body\n\n\n    message.send()\n\nLook into the source code\n\nThat's all. Please create an issue at GitHub if you have any notes,",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/artemrizhov/django-mail-templated",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-mail-templated",
    "package_url": "https://pypi.org/project/django-mail-templated/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-mail-templated/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/artemrizhov/django-mail-templated"
    },
    "release_url": "https://pypi.org/project/django-mail-templated/2.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Send emails with Django template system",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2297740,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47ac70917ad3b5c321d489a23423967f5be8572586bade15df241d95e2d22bf0",
        "md5": "1c6b23ca565c3da89450fccf3f5315ac",
        "sha256": "4b5da44b1c38fd2dbc86111bd63c20f3c666f2fa55e3c1d47185ef8ea5390c11"
      },
      "downloads": -1,
      "filename": "django-mail-templated-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1c6b23ca565c3da89450fccf3f5315ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5505,
      "upload_time": "2016-01-12T03:20:12",
      "upload_time_iso_8601": "2016-01-12T03:20:12.006578Z",
      "url": "https://files.pythonhosted.org/packages/47/ac/70917ad3b5c321d489a23423967f5be8572586bade15df241d95e2d22bf0/django-mail-templated-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}