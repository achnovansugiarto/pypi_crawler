{
  "info": {
    "author": "Yashas H R",
    "author_email": "rameshmamathayashas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# MEXT - Manga/Manhua/Manhwa Extractor\n\nA simple manga extractor. Extracts any comic info, chapter list and chapter pages. This is an app that strictly provides API.\n\n**Still in development.**\n\nThis has been tested only on Windows 11 64-bit.\n\n## Installations\n\n`pip install mext`\n\nImportant Steps:\n- Have Chrome browser installed, download chromedriver matching your Chrome browser version.\n- Add chromedriver location to PATH environment variable.\n\n\n## Usage\n\nThis package uses multiple provider codes to extract manga/manhua/manhwa data from online sites.\n\nThe providers and it's usage is listed below.\n\nIt's easy to use from python code.\n\n**Steps:**\n1. Import `Mext` like this\n\n   `from mext import Mext`\n\n2. Get the URL of manga or chapter and pass it to `Mext`\n\n  ```python\n  manga_url = 'xxx1'\n  chapter_url = 'xxx2'\n\n  # Initialize\n  me = Mext()\n\n  # To get manga\n  me.populate(['manga'], manga_url)\n  manga = me.manga\n\n  # To get one particular chapter\n  me.populate(['chapter'], chapter_url)\n  chapter = me.chapter\n\n  # Pass manga url to get chapter list belonging to manga\n  me.populate(['chapter_list'], manga_url)\n  chapters = me.chapter_list\n\n  # Pass manga url when you need both manga and chapter\n  me.populate(['manga', 'chapter_list'], manga_url)\n  manga = me.manga\n  chapters = me.chapter_list\n  ```\n\n  If you are using Mext for one time data collection you could pass the arguments given to `populate` to `Mext` directly at initialization.\n\n## Providers\n\n1. MangaDex\n2. AsuraScans\n\n...others coming soon\n\n### Mangadex\n\nGet Manga using Manga URL\n\n```python\nfrom mext import Mext\n\nmanga_url = 'https://mangadex.org/title/d1c0d3f9-f359-467c-8474-0b2ea8e06f3d/bocchi-sensei-teach-me-mangadex'\n\nme = Mext(['manga'], manga_url) # You'll get back a instance of Mext with Manga data\nmanga = me.manga\nprint(manga.to_dict())\n```\n\nGet Chapter using Chapter URL\n\n```python\nfrom mext import Mext\n\nchapter_url = 'https://mangadex.org/chapter/e183d3f4-fde0-4288-a1ed-8547490f84b3'\n\nme = Mext(['chapter'], chapter_url) # You'll get back a instance of Mext with Chapter data\nchapter = me.chapter\nprint(chapter.to_dict())\n```\n\nGet Chapters List belonging to a manga using Manga URL\n```python\nfrom mext import Mext\n\nmanga_url = 'https://mangadex.org/title/f7972eed-0040-4aac-b8de-fc99c522c25a/anti-kissmanga-anthology'\n\nme = Mext(['chapter_list'], manga_url) # You'll get back a list of instances of Mext with a list of Chapter data\nchapter_list = me.chapter_list\nprint(chapter_list.to_dict())\n```\n\n## Credits\n\n- Mangadex API - [MangaDex.py](https://github.com/Proxymiity/MangaDex.py)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/modbender/manga-extractor",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mext",
    "package_url": "https://pypi.org/project/mext/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mext/",
    "project_urls": {
      "Homepage": "https://github.com/modbender/manga-extractor"
    },
    "release_url": "https://pypi.org/project/mext/1.0.7/",
    "requires_dist": [
      "lxml (>=4.8.0)",
      "beautifulsoup4 (>=4.10.0)",
      "undetected-chromedriver (>=3.1.5.post1)"
    ],
    "requires_python": ">=3.5",
    "summary": "A simple manga extractor. Extracts any comic info, chapter list and chapter pages. In development.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16330611,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2bfb6ae23621cf37a452c02006cf0956774a7c55943e291b3d8d12ff54a7ec6",
        "md5": "d360278ccaa2d96af110803199cc81e3",
        "sha256": "f5e32421994b45bdd523c7df6ffd43eb5303d951e3a504f0f5480bffbb162494"
      },
      "downloads": -1,
      "filename": "mext-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d360278ccaa2d96af110803199cc81e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 20333,
      "upload_time": "2022-11-09T15:43:13",
      "upload_time_iso_8601": "2022-11-09T15:43:13.775280Z",
      "url": "https://files.pythonhosted.org/packages/e2/bf/b6ae23621cf37a452c02006cf0956774a7c55943e291b3d8d12ff54a7ec6/mext-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22208a1e040f45e16d670a7055025fe6d7ebdb6e11e15c97663cb81e86fb6c23",
        "md5": "0101a54cd20f1b3c3deb26b972285f05",
        "sha256": "153cba5ce83c37c8b2efb67adbf16c500d27810a13a56c0eae6def05fccb8f8c"
      },
      "downloads": -1,
      "filename": "mext-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "0101a54cd20f1b3c3deb26b972285f05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 14798,
      "upload_time": "2022-11-09T15:43:16",
      "upload_time_iso_8601": "2022-11-09T15:43:16.043825Z",
      "url": "https://files.pythonhosted.org/packages/22/20/8a1e040f45e16d670a7055025fe6d7ebdb6e11e15c97663cb81e86fb6c23/mext-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}