{
  "info": {
    "author": "Raghu Udiyar",
    "author_email": "raghusiddarth@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Lockpick\n\nLockpick is an utility for distributed locking using zookeeper. Its intended to be used in distributed environments where scripts need synchronization between runs.\n\n# Why Lockpick\n\nLockpick uses the kazoo library but provides following benefits over kazoo recipes :\n\n* Use non ephemeral zknode to allow *explicit* lock release\n* Exits with correct return codes\n* Correct signal Handling and cleanup\n* Retires and timeout\n\n## Usage\n\n```shell\n$ lockpick --help\nusage: lockpick [-h] [-s SERVERS] [-c CHROOT] [-i IDENTIFIER] [-v]\n                [-r RETRY_COUNT] [-p RETRY_SLEEP]\n                {lock,rlock,wlock,unlock,list} lock_path\n\nDistributed locking using Zookeeper primarily for scripting. After acquiring\nthe lock, the zk node is printed to STDOUT. This zk node should be passed to\nunlock. Note: all logs are printed to STDERR\n\npositional arguments:\n  {lock,rlock,wlock,unlock,list}\n                        lock: acquire a mutex lock. rlock: acquire a read lock\n                        wlock: acquire a write lock. unlock: release lock\n                        identified by zk node. list: list all lock contenders\n  lock_path             ZK path to lock OR ZK node to unlock. For the\n                        unlockaction this must be the chrooted zk path to the\n                        node e.g.lockpick lock -c /devops /mylocklockpick\n                        unlock -c /devops /mylock/9d2badeec7684f35b10f4860db42\n                        e45c__rlock__0000000022\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SERVERS, --servers SERVERS\n  -c CHROOT, --chroot CHROOT\n                        ZK chroot for the lock path\n  -i IDENTIFIER, --identifier IDENTIFIER\n                        Optional string identifier to add to the lock node OR\n                        verify when unlocking\n  -v, --verbose\n  -r RETRY_COUNT, --retry-count RETRY_COUNT\n  -p RETRY_SLEEP, --retry-sleep RETRY_SLEEP\n```\n\n## Install\n\nWe recommend using pip to install in a virtualenv :\n\n```\n$ virtualenv lockpick\n$ pip install lockpick\n```\n\n## Example\n\n```console\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" rlock /mylock\n/mylock/503e61fadc8f492497db823b87e64afe__rlock__0000000038\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" rlock /mylock\n/mylock/e21b0ecd480346aaaba23e77946e16e9__rlock__0000000039\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" list /mylock\n'test lock1' /mylock/e21b0ecd480346aaaba23e77946e16e9__rlock__0000000039\n'test lock1' /mylock/503e61fadc8f492497db823b87e64afe__rlock__0000000038\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" wlock /mylock\n[2018-07-25 19:09:53,095] WARNING lockpick: Waiting to acquire lock, contenders are :\n[2018-07-25 19:09:53,103] WARNING lockpick: 'test lock1' /mylock/e21b0ecd480346aaaba23e77946e16e9__rlock__0000000039\n[2018-07-25 19:09:53,103] WARNING lockpick: 'test lock1' /mylock/503e61fadc8f492497db823b87e64afe__rlock__0000000038\n[2018-07-25 19:09:53,104] WARNING lockpick: 'test lock1' /mylock/492b4a6c1727417daf511b343d0d11b7__lock__0000000042\n[2018-07-25 19:09:56,104] WARNING lockpick: Waiting to acquire lock, contenders are :\n[2018-07-25 19:09:56,114] WARNING lockpick: 'test lock1' /mylock/e21b0ecd480346aaaba23e77946e16e9__rlock__0000000039\n[2018-07-25 19:09:56,114] WARNING lockpick: 'test lock1' /mylock/503e61fadc8f492497db823b87e64afe__rlock__0000000038\n[2018-07-25 19:09:56,114] WARNING lockpick: 'test lock1' /mylock/492b4a6c1727417daf511b343d0d11b7__lock__0000000042\n[2018-07-25 19:09:59,116] WARNING lockpick: LockTimeout exception rasied by locker thread\n[2018-07-25 19:09:59,117] ERROR lockpick: Failed to acquire lock within timeout!\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" unlock /mylock/503e61fadc8f492497db823b87e64afe__rlock__0000000038\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" unlock /mylock/e21b0ecd480346aaaba23e77946e16e9__rlock__0000000039\n\n$ lockpick -s localhost:2181 -c /test -i \"test lock1\" wlock /mylock\n/mylock/d6602d4a54124826b27c50a43ab67a5e__lock__0000000043\n```\n\n## syncd_spawn.sh\n\nSpawns the given command only if it can acquire the given lock.\n\n```console\n./syncd_spawn -n /test -C 'test' -l rlock sleep 5\nGot lock on /test\nRunning your command sleep 5\nUnlocked '/test/141bcfad04c6459591164ea12d1604af__rlock__0000000011'\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/raags/lockpick",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lockpick",
    "package_url": "https://pypi.org/project/lockpick/",
    "platform": "",
    "project_url": "https://pypi.org/project/lockpick/",
    "project_urls": {
      "Homepage": "https://github.com/raags/lockpick"
    },
    "release_url": "https://pypi.org/project/lockpick/1.0.2/",
    "requires_dist": [
      "kazoo (>=2.5.0)"
    ],
    "requires_python": "",
    "summary": "Distributed locking using Zookeeper",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10172992,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f08a79e8ce241edbf7d7b2faffb142d5c6431df6511d03ea47ebbbd65c8143f",
        "md5": "25180c6c55dbd23aa04e01a457c4ba0a",
        "sha256": "16faffb1cc735ae3bbac95aff4066d81c427aa53ea4cc57222c29058a62d25ae"
      },
      "downloads": -1,
      "filename": "lockpick-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25180c6c55dbd23aa04e01a457c4ba0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6005,
      "upload_time": "2021-04-26T11:42:48",
      "upload_time_iso_8601": "2021-04-26T11:42:48.023802Z",
      "url": "https://files.pythonhosted.org/packages/0f/08/a79e8ce241edbf7d7b2faffb142d5c6431df6511d03ea47ebbbd65c8143f/lockpick-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa0809f06eb00e2f4214a016e0e3b495ffba4018c5f2872337e58371c4499409",
        "md5": "7754ed8d62af7aab4259b4d5e4e1691f",
        "sha256": "e0a3476162b0d651505dc9592b74b303a208e9085a72101c6433cf7607ae2f20"
      },
      "downloads": -1,
      "filename": "lockpick-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7754ed8d62af7aab4259b4d5e4e1691f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4924,
      "upload_time": "2021-04-26T11:42:49",
      "upload_time_iso_8601": "2021-04-26T11:42:49.172102Z",
      "url": "https://files.pythonhosted.org/packages/aa/08/09f06eb00e2f4214a016e0e3b495ffba4018c5f2872337e58371c4499409/lockpick-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}