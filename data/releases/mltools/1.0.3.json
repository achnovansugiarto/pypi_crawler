{
  "info": {
    "author": "Kostas Stamatiou",
    "author_email": "kostas.stamatiou@digitalglobe.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=======\nmltools \n=======\n\n.. image:: https://badge.fury.io/py/mltools.svg\n    :target: https://badge.fury.io/py/mltools\n\nA collection of Machine Learning (ML) Tools for object detection and classification on DG imagery.\n\nmltools is MIT licenced.\n\nThe purpose of this repository is to enable fast prototyping of object detection and classification solutions.\n\nAt the moment, there are four modules:\n\n- data_extractors: functions to get pixels from georeferenced imagery;\n- features: functions to derive features from pixels; \n- crowdsourcing: interface with Tomnod to obtain training/test/target data and to write machine output to Tomnod DB;\n- json_tools: functions to manipulate json and geojson files.\n\nA ML algorithm (MLA) is a class with train and classify/detect functions. At the moment, the repo contains \nthe PolygonClassifier MLA which can classify a set of polygon geometries associated with a DG image. \n\nAn MLA is typically employed in a script which:\n\n- retrieves training data from Tomnod;\n- trains the MLA;\n- tests the MLA and computes accuracy metrics;\n- deploys the MLA for detection or classification;\n- writes the MLA results back to the Tomnod database.\n\nExample scripts can be found under /examples.\n\n\nInstallation/Usage\n------------------\n\nStart with a fresh Ubuntu EC2 instance::\n\n   sudo apt-get update\n\n   sudo apt-get upgrade\n\n   sudo apt-get install git python-virtualenv libpq-dev python-dev libatlas-base-dev gfortran libfreetype6-dev libpng-dev\n   \nInstall GDAL drivers::\n\n   sudo apt-get install gdal-bin\n   \n   sudo apt-get install libgdal-dev\n\nThis should install gdal version 1.10.1 for which pygdal will work. Confirm that this is the case with the command::\n\n   gdal-config --version\n\nIf for whatever reason you have another version of gdal you might run into problems.   \n\nCreate a python virtual environment in your project directory::\n\n   cd my_project\n\n   virtualenv venv\n   \n   . venv/bin/activate\n \nInstall mltools::\n\n   pip install mltools \n\nYou can now copy the scripts found in /examples in your project directory or create your own. \nKeep in mind that the imagery has to be in your project folder and it should have the same name as the image_name \nproperty in the geojson. Imagery in the format required by a MLA (e.g., pansharpened, multi-spectral or orthorectified) can be obtained with the gbdxtools package (https://github.com/kostasthebarbarian/gbdxtools). \n \n\nDevelopment\n-----------\n\nClone the repo::\n\n   git clone git@github.com:kostasthebarbarian/mltools.git\n   \n   cd mltools\n   \nStart a virtual environment::\n\n   virtualenv venv\n   \n   . venv/bin/activate\n\nInstall the requirements::\n\n   pip install -r requirements.txt\n\nPlease follow this python style guide: https://google.github.io/styleguide/pyguide.html.\n80-90 columns is fine.\n\n\nComments\n--------\n\nmltools is developed as part of an effort to standardize MLA design and implementation. \n\nHere is a slide with some ideas:\n\nhttps://docs.google.com/drawings/d/1tKSgFMp0lLd7Abne8CdOhb1PbdJfgCz5x9XkLwDeET0/edit?usp=sharing\n\nThe vision is to employ MLA as part of a Crowd+Machine system along the lines of this document:\n\nhttps://docs.google.com/document/d/1hf82I_jDNGc0NdopXxW9RkbQjLOOGkV4lU5kdM5tqlA/edit?usp=sharing\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kostasthebarbarian/mltools",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mltools",
    "package_url": "https://pypi.org/project/mltools/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mltools/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/kostasthebarbarian/mltools"
    },
    "release_url": "https://pypi.org/project/mltools/1.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Classification performed over multiple images.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2642656,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6811b9d0cb6718baeb4c1225d0ac7fc287a2736379d8ea0b1f873da7fb77274",
        "md5": "f33d70ae5ab61f4a2432efe317c20c8d",
        "sha256": "b1b9d57b2132f74065bb377b012f99cfb407c52548cb7eee7704050f90ff756f"
      },
      "downloads": -1,
      "filename": "mltools-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f33d70ae5ab61f4a2432efe317c20c8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9450,
      "upload_time": "2016-03-28T21:47:59",
      "upload_time_iso_8601": "2016-03-28T21:47:59.455657Z",
      "url": "https://files.pythonhosted.org/packages/c6/81/1b9d0cb6718baeb4c1225d0ac7fc287a2736379d8ea0b1f873da7fb77274/mltools-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}