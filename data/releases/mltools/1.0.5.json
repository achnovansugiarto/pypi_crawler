{
  "info": {
    "author": "Kostas Stamatiou",
    "author_email": "kostas.stamatiou@digitalglobe.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=======\nmltools \n=======\n\n.. image:: https://badge.fury.io/py/mltools.svg\n    :target: https://badge.fury.io/py/mltools\n\nA collection of Machine Learning (ML) Tools for object detection and classification on DG imagery.\n\nmltools is MIT licenced.\n\nThe purpose of this repository is to enable fast prototyping of object detection and classification solutions\nusing training data from DG Crowdsourcing (aka Tomnod).\n\nThere are four modules:\n\n- data_extractors: get pixels and metadata from georeferenced imagery; uses geoio (https://github.com/digitalglobe/geoio);\n- features: functions to derive features from pixels; \n- crowdsourcing: interface with Tomnod to obtain training/test/target data and to write machine output to Tomnod DB;\n- geojson_tools: functions to manipulate geojson files.\n\nA ML algorithm (MLA) is a class with train, test and classify/detect functions. \nPresently, the repo contains the PolygonClassifier MLA which can classify a set of polygon \ngeometries in a geojson. The mltools acceptable geojson format is found in /examples. \n\nAn MLA is typically employed in a script which:\n\n1. retrieves training, test and target data from the Tomnod database;\n2. trains the MLA;\n3. tests the MLA on the test data and computes accuracy metrics;\n4. deploys the MLA on the target data for detection or classification;\n5. writes the MLA results back to the Tomnod database.\n\nStep 1 can be omitted if data is available from a source other than Tomnod. \n(However, the data must respect the geojson format found in /examples.)\nStep 5 can also be omitted if we don't want to write the results back to Tomnod.\n\nExample scripts can be found under /examples. \n\n\nInstallation/Usage\n------------------\n\nFor Ubuntu, install conda with the following commands (choose default options at prompt)::\n\n   wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh\n   bash Miniconda2-latest-Linux-x86_64.sh\n\n   \nFor OS X, install conda with the following commands (choose default options at prompt)::\n\n   wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh\n   bash Miniconda2-latest-MacOSX-x86_64.sh\n\nThen run::\n\n   bash\n\nso that modifications in your .bashrc take effect. \n\nCreate a conda environment::\n\n   conda create -n env python ipython numpy scipy gdal git  \n   \nActivate the environment::\n\n   source activate env\n\nInstall mltools::\n\n   pip install mltools\n\nIf you had a previous version of mltools installed, then (try)::\n\n   pip install mltools --upgrade --ignore-install   \n\nYou can now copy the scripts found in /examples in your project directory or create your own. \nKeep in mind that the imagery has to be in your project folder and it should have the same name as the image_name \nproperty in the geojson. Imagery in the format required by a MLA (e.g., pansharpened, multi-spectral or orthorectified) can be obtained with the gbdxtools package (https://github.com/digitalglobe/gbdxtools).\n\nTo exit your conda virtual environment::\n\n   source deactivate \n \n\nDevelopment\n-----------\n\nActivate the conda environment::\n\n   source activate env\n\nClone the repo::\n\n   git clone https://github.com/kostasthebarbarian/mltools\n   \n   cd mltools\n   \nInstall the requirements::\n\n   pip install -r requirements.txt\n\nPlease follow this python style guide: https://google.github.io/styleguide/pyguide.html.\n80-90 columns is fine.\n\nTo exit your conda virtual environment::\n\n   source deactivate\n\n\nComments\n--------\n\nmltools is developed as part of an effort to standardize MLA design and implementation. \n\nHere is a slide with some ideas:\n\nhttps://docs.google.com/drawings/d/1tKSgFMp0lLd7Abne8CdOhb1PbdJfgCz5x9XkLwDeET0/edit?usp=sharing\n\nThe vision is to employ MLA as part of a Crowd+Machine system along the lines of this document:\n\nhttps://docs.google.com/document/d/1hf82I_jDNGc0NdopXxW9RkbQjLOOGkV4lU5kdM5tqlA/edit?usp=sharing\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kostasthebarbarian/mltools",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mltools",
    "package_url": "https://pypi.org/project/mltools/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mltools/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/kostasthebarbarian/mltools"
    },
    "release_url": "https://pypi.org/project/mltools/1.0.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Use geoio for pixel extraction. Refactor of polygon_classifier and crowdsourcing modules.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2642656,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ef1e92a2dc52888e8eb33a6af618d30a9535869a9e4be46d890427b17e48bc7",
        "md5": "0205ae77a4130cca6e0ef426bb791801",
        "sha256": "5bcc8f2c9fd95c4f11832778091cb545513ef1181a3e484d14107869e586d048"
      },
      "downloads": -1,
      "filename": "mltools-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0205ae77a4130cca6e0ef426bb791801",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8713,
      "upload_time": "2016-05-10T20:00:56",
      "upload_time_iso_8601": "2016-05-10T20:00:56.317863Z",
      "url": "https://files.pythonhosted.org/packages/8e/f1/e92a2dc52888e8eb33a6af618d30a9535869a9e4be46d890427b17e48bc7/mltools-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}