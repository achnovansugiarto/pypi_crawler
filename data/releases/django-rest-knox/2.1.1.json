{
  "info": {
    "author": "James McMahon",
    "author_email": "james1345@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Session"
    ],
    "description": "django-rest-knox\n================\n\n.. image:: https://travis-ci.org/James1345/django-rest-knox.svg?branch=develop\n   :target: https://travis-ci.org/James1345/django-rest-knox\n\nAuthentication Module for django rest auth\n\nKnox provides easy to use authentication for `Django REST\nFramework <http://www.django-rest-framework.org/>`__ The aim is to allow\nfor common patterns in applications that are REST based, with little\nextra effort; and to ensure that connections remain secure.\n\nKnox authentication is token based, similar to the\n``TokenAuthentication`` built in to DRF. However, it overcomes some\nproblems present in the default implementation:\n\n-  DRF Tokens are generated with ``os.urandom``, which is not\n   cryptographically secure.\n\n   Knox uses OpenSSL to provide tokens.\n\n-  DRF tokens are limited to one per user. This does not facilitate\n   securely signing in from multiple devices, as the token is shared. It\n   also requires *all* devices to be logged out if a server-side logout\n   is required (i.e. the token is deleted).\n\n   Knox provides one token per call to the login view - allowing each\n   client to have its own token which is deleted on the server side when\n   the client logs out.\n\n   Knox also provides an option for a logged in client to remove *all*\n   tokens that the server has - forcing all clients to re-authenticate.\n\n-  DRF tokens are stored unencrypted in the database. This would allow\n   an attacker unrestricted access to an account with a token if the\n   database were compromised.\n\n   Knox tokens are only stored in an encrypted form. Even if the\n   database were somehow stolen, an attacker would not be able to log in\n   with the stolen credentials.\n\n-  DRF tokens track their creation time, but have no inbuilt mechanism for tokens\n   expiring. Knox tokens can have an expiry configured in the app settings (default is\n   10 hours.)\n\nMore information can be found in the\n`Documentation <http://james1345.github.io/django-rest-knox/>`__",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/James1345/django-rest-knox",
    "keywords": "django rest authentication login",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-knox",
    "package_url": "https://pypi.org/project/django-rest-knox/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-rest-knox/",
    "project_urls": {
      "Homepage": "https://github.com/James1345/django-rest-knox"
    },
    "release_url": "https://pypi.org/project/django-rest-knox/2.1.1/",
    "requires_dist": [
      "django",
      "djangorestframework",
      "pyOpenSSL"
    ],
    "requires_python": "",
    "summary": "Authentication for django rest framework",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12747324,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc581779350f663eeae6590fa31f9b57141b763115abcf25c55ae9974e1addf2",
        "md5": "5b2d46d5b731980875019125f68dcf1e",
        "sha256": "79c90e251da060d603983069d2aa5cee3407499ff1811415c2e020d0ea0082de"
      },
      "downloads": -1,
      "filename": "django_rest_knox-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b2d46d5b731980875019125f68dcf1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10995,
      "upload_time": "2015-10-13T19:39:40",
      "upload_time_iso_8601": "2015-10-13T19:39:40.855119Z",
      "url": "https://files.pythonhosted.org/packages/cc/58/1779350f663eeae6590fa31f9b57141b763115abcf25c55ae9974e1addf2/django_rest_knox-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "568b6d85006e836d3f818242045388932b0a29f01f86c4218726dae7343324c5",
        "md5": "d0126d3f22d821f0e29139535dd7c470",
        "sha256": "cb85e72c8ba7eb3d5ecd9c6b7c3555e5d55f099c15e896e0758a33acf482707c"
      },
      "downloads": -1,
      "filename": "django-rest-knox-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d0126d3f22d821f0e29139535dd7c470",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6905,
      "upload_time": "2015-10-13T19:39:44",
      "upload_time_iso_8601": "2015-10-13T19:39:44.302839Z",
      "url": "https://files.pythonhosted.org/packages/56/8b/6d85006e836d3f818242045388932b0a29f01f86c4218726dae7343324c5/django-rest-knox-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}