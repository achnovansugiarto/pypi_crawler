{
  "info": {
    "author": "lorry_rui",
    "author_email": "lrui@logitech.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Copyright (c) 2021 lorry_rui  \n\n//////////usage:///////////////// \n\nfor test sweep tone WAV file only  \n\naudio file analyze USE only  @  Lorry RUi  \nMail to: lorryruizhihua@gmail.com\n         lrui@logitech.com\n\nhttps://pypi.org/project/LvAut  \n\nhttps://github.com/Lorrytoolcenter/LvAut  \n\n\t|tests| |coverage| |docs| |python-versions| |license|  \n\n\nThe Python package **audio_wav** handles all kind of audio files  \n-----------------\n\nsample code:\n============== \n.. code:: python    \n\n\t   import LvAut.lvaut_THD as AUT \n\t   filename='yourfile.wav' \n\t   signal, sample_rate, channels=AUT.load(filename) \n\nchange master speaker volume \n-----------------\n.. code:: python    \n\n\t\timport LvAut.lvaut_THD as AUT  \n\t\tAUT.setspeakervolume(40)  ## set master speaker volume from 0 to 100\n\n\nplay master speaker  \n-----------------\n.. code:: python   \n\n\t\timport LvAut.lvaut_THD as AUT\n\t\tAUT.playsoundWin('yourfile.wav')\n\n\nlist all speaker and mics devices  \n-----------------\n.. code:: python \n\n\t\timport LvAut1.device as sd\n\t\tprint(sd.query_devices())\n\n\n\nrecording master speaker  \n-----------------\n.. code:: python    \n\n\t\timport LvAut.device as sd\n\t\timport LvAut.lvaut_THD as AUT\n\t\tfs = 44100  # Sample rate\n\t\tseconds = 5  # Duration of recording\n\t\tmyrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)  # using default mic\n\t\t#myrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=1, device=\"Microphone (Logitech Webcam C930e), Windows DirectSound\")\n\t\tsd.wait()  # Wait until recording is finished\n\t\tAUT.write(\"test.wav\",myrecording,fs)\n\n\nanalyze_sweep tone\n-----------------\n\n.. code-block:: python  \n\n\t\timport LvAut.lvaut_THD as AUT  \n\t\tfilename='Device_Mic_THD_R_3.wav'  \n\t\ttrigeFrequncy=400  ## this need sweep from high(above 400) to low sweep tone  \n\t\tstopananlysis=100   ## stop analyze_sweep  \n\t\tchannaelselect=1 ### if recording is dual channel ,leftchannel=1, rightchannel=2, otherwise no need to define  \n\t\tfreq,thdh,thd_N,power,Freq_THD,thd_data,Freq_Power,PowerS,RubBuzz_data=AUT.analyze_sweep(filename, trigeFrequncy,stopananlysis,channaelselect) \n\t\tprint('FFT Frequency:   %.1f Hz' % freq)  \n\t\tprint(\"Sweep Max THD:   %.4f%% \" %thdh)  \n\t\tprint(\"Sweep Max THD+N: %.4f%%      Note, this is single tone use only \" %thd_N)  \n\t\tprint(\"spectrum Max Power:       %.2fdB \" %power)     \n\n\n\n\noutput explain\t\n==============   \n\n\t1)freq  means: single tone , measured frequency  \n\t1.1)thd_N   means: single Max THD+N  \t\n\t2)thdh   means: Sweep Max THD  \n\t3)Freq_THD, measure THD's frequency\n\t4)thd_data, measure THD's data\n\t5)Freq_Power,measure Power's frequency\n\t6)PowerS,  measure Power's data\n\t7)RubBuzz_data    measure RB's data\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lorrytoolcenter/LvAut",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LvAut",
    "package_url": "https://pypi.org/project/LvAut/",
    "platform": "",
    "project_url": "https://pypi.org/project/LvAut/",
    "project_urls": {
      "Homepage": "https://github.com/Lorrytoolcenter/LvAut"
    },
    "release_url": "https://pypi.org/project/LvAut/2021.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Audio wav file test module",
    "version": "2021.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11247665,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d519bf7d6025275ead8480aaf4fc4fb466b5a00bfdcae50117ffeabaf04a8021",
        "md5": "4570fc67f2674e18965b52a28667a318",
        "sha256": "e131a54e4a5fce01301a7c7e26274b0add2848b62bf08dc410e38329d5c3aa21"
      },
      "downloads": -1,
      "filename": "LvAut-2021.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4570fc67f2674e18965b52a28667a318",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1389822,
      "upload_time": "2021-08-01T05:00:35",
      "upload_time_iso_8601": "2021-08-01T05:00:35.093986Z",
      "url": "https://files.pythonhosted.org/packages/d5/19/bf7d6025275ead8480aaf4fc4fb466b5a00bfdcae50117ffeabaf04a8021/LvAut-2021.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4f2ddb32ae06274e42bda51fc2f420997734a1456023328f5a3337fca3d5825",
        "md5": "20b6f96fdfb02ef76d14b945ece5bb3a",
        "sha256": "0cc11a85c763fd516791e50a72a9ba7df1289eeb4af9765915c12025e2b18b7e"
      },
      "downloads": -1,
      "filename": "LvAut-2021.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "20b6f96fdfb02ef76d14b945ece5bb3a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1384359,
      "upload_time": "2021-08-01T05:00:48",
      "upload_time_iso_8601": "2021-08-01T05:00:48.888038Z",
      "url": "https://files.pythonhosted.org/packages/a4/f2/ddb32ae06274e42bda51fc2f420997734a1456023328f5a3337fca3d5825/LvAut-2021.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}