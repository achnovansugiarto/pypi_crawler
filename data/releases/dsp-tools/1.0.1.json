{
  "info": {
    "author": "Lukas Rosenthaler",
    "author_email": "lukas.rosenthaler@dasch.swiss",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/dsp-tools.svg)](https://badge.fury.io/py/dsp-tools)\n\n# DSP-TOOLS - The DaSCH Service Platform Tools Repository\ndsp-tools is a python package containing a command line tool for data model (ontology) creation, a library allowing\ncreation of single resources and mass upload using the bulk import of data into the Knora framework.\n\nThe package consists of:\n- `dsplib` Python modules for accessing Knora using the API (ontology creation, data import/export etc.)\n- `dsp-tools` A command line program to perfrom several operations on a DSP server:\n    - create an ontology out of a simple JSON description\n    - dump an existing ontology from a DSP server to a JSON file\n    - Bulk-upload of data from a XML data file\n\nGo to [Full Documentation](https://dasch-swiss.github.io/dsp-tools/)\n\n## Install\n\n_Please note that dsp-tools require Python 3.9 for working properly!_\n\nTo install the latest published version from PyPI, run:\n```\n$ pip3 install dsp-tools\n```\n\nTo upgrade to the latest published version, run:\n```\n$ pip3 install --upgrade dsp-tools\n```\n\n## Local Development Environment\n\n- Python3\n- [Bazel](https://bazel.build)\n\nPlease consult the [https://docs.dasch.swiss/developers](https://docs.dasch.swiss/developers)\ndocumentation on how to install these prerequisites.\n\n## Makefile for repository management tasks\n\nThe project contains a Makefile defining management tasks. Please use\n`make help` to see what is available.\n\nTo install from source, i.e., this repository, run:\n```\n$ make install\n```\n\n## Testing\n\n```bash\n$ make test\n```\n\n## Publishing to PyPi\n\nGenerate distribution package. Make sure you have the latest versions of `setuptools` and `wheel` installed.\nRemove the `dist`and `buil`-directories: `rm -rf bild dist`\n\n\n```bash\n$ make upgrade-dist-tools\n$ make dist\n```\n\nYou can install the package locally from the dist:\n\n```bash\n$ python3 -m pip install ./dist/some_name.whl\n```\n\nUpload package with `twine`,\n\nfirst create `~/.pypirc` in your home folder:\n\n```bash\n[distutils] \nindex-servers=pypi\n[pypi] \nrepository = https://upload.pypi.org/legacy/ \nusername =your_username_on_pypi\n```\n\nthen upload:\n\n```bash\n$ make upload\n```\n\nFor local development:\n\n```bash\n$ python3 setup.py --editable .\n```\n\n## Requirements\n\nTo install the requirements:\n\n```bash\n$ pip3 install -r requirements.txt\n```\n\nTo generate a \"requirements\" file (usually requirements.txt), that you commit with your project, do:\n\n```bash\n$ pip3 freeze > requirements.txt\n```\n\n### Running tests with Bazel\n\nRun all tests:\n```bash\n$ bazel test //...\n```\n\nRun single test:\n```bash\n$ bazel test //test:test_user\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dasch-swiss/dsp-tools",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dsp-tools",
    "package_url": "https://pypi.org/project/dsp-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/dsp-tools/",
    "project_urls": {
      "Homepage": "https://github.com/dasch-swiss/dsp-tools"
    },
    "release_url": "https://pypi.org/project/dsp-tools/1.0.1/",
    "requires_dist": [
      "argparse",
      "rdflib",
      "lxml",
      "validators",
      "requests",
      "jsonschema",
      "click",
      "rfc3987",
      "pystrict",
      "openpyxl"
    ],
    "requires_python": ">=3.9.0",
    "summary": "A Python library and tools for the DaSCH Service Platform",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17394892,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ce443517a8d847e7b1606114cec0cc0a563a5b37dad682c6d7139d848881a40",
        "md5": "6b0c819113a797ed168d5eaa80526492",
        "sha256": "ede79ac0dca2e4c9a3d58616c08872694e946248c1abe560f96b35dc64886e5f"
      },
      "downloads": -1,
      "filename": "dsp_tools-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b0c819113a797ed168d5eaa80526492",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.0",
      "size": 104178,
      "upload_time": "2021-02-21T22:59:50",
      "upload_time_iso_8601": "2021-02-21T22:59:50.251400Z",
      "url": "https://files.pythonhosted.org/packages/1c/e4/43517a8d847e7b1606114cec0cc0a563a5b37dad682c6d7139d848881a40/dsp_tools-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61a19b74871b17d87e1e635eaaeb74bc1dd5fb803bf6746c8bc03798f8d7a00c",
        "md5": "86ad97f377cfbc7439dcc9b834a2d8bd",
        "sha256": "98dea3d9bd66ad766ca56092d946736a9b16f721873c62349f19875e195ffa46"
      },
      "downloads": -1,
      "filename": "dsp-tools-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "86ad97f377cfbc7439dcc9b834a2d8bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.0",
      "size": 84969,
      "upload_time": "2021-02-21T22:59:51",
      "upload_time_iso_8601": "2021-02-21T22:59:51.815825Z",
      "url": "https://files.pythonhosted.org/packages/61/a1/9b74871b17d87e1e635eaaeb74bc1dd5fb803bf6746c8bc03798f8d7a00c/dsp-tools-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}