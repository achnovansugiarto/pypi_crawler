{
  "info": {
    "author": "Lukas Rosenthaler",
    "author_email": "lukas.rosenthaler@dasch.swiss",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/dsp-tools.svg)](https://badge.fury.io/py/dsp-tools)\n\n# DSP-TOOLS - DaSCH Service Platform Tools\n\ndsp-tools is a command line tool that helps you interact with the DaSCH Service Platform API.\n\nGo to [Full Documentation](https://dasch-swiss.github.io/dsp-tools/)\n\n## Information for developers\n\nThere is a `Makefile` for all the following tasks (and more). Type `make` to print the available targets. For a quick\nstart use:\n```bash\nmake upgrade-dist-tools\nmake install-requirements\nmake run\n```\n\n## Install from source\n\nTo install from source run:\n\n```bash\npython3 setup.py install\n```\n\n## Install the requirements\n\nTo install the requirements run:\n\n```bash\npip3 install -r requirements.txt\n```\n\nTo generate a requirements file (usually requirements.txt), that you commit with your project, run:\n\n```bash\npip3 freeze > requirements.txt\n```\n\n## Testing\n\nPlease note that testing requires launching the complete DSP API stack which is based on docker images. Therefore, we\nrecommend installing the [docker desktop client](https://www.docker.com/products).\n\nTo run the complete test suite:\n\n```bash\nmake test\n```\n\n## Code style\n\nWhen contributing to the project please make sure you use the same code style rules as we do. We use\n[autopep8](https://pypi.org/project/autopep8/) and [mypy](https://pypi.org/project/mypy/). The configuration is defined\nin `pyproject.toml` in the root directory of the project.\n\nYou can use the configuration with `autopep8 --global-config pyproject.toml [file path]` and \n`mypy --config-file pyproject.toml [file path]`.\n\nIf you are using PyCharm we recommend installing autopep8 as external tool. You can then use it with right-click on the\nfile > `External Tools` > `autopep8` to reformat files in-place. Due to compatibility issues with VSCode, the argument \n`--in-place=true` can not be declared in the `pyproject.toml` and needs to be passed to the external tool in the PyCharm settings.  \nmypy is available as [plugin](https://plugins.jetbrains.com/plugin/11086-mypy).\n\nIn VSCode, both mypy and autopep8 can be set up as default linter and formatter through the python extension.\n\nFor formatting Markdown files (*.md) we use the default styling configuration provided by PyCharm.\n\n## Publishing\n\nPublishing is automated with GitHub Actions and should _not_ be done manually. Please follow the\n[Pull Request Guidelines](https://docs.dasch.swiss/developers/dsp/contribution/#pull-request-guidelines). If done\ncorrectly, when merging a pull request into `main`, the `release-please` action will create or update a pull request for\na release. This pull request will follow semantic versioning and update the change log. Once all desired features are\nmerged, the release can be executed by merging this release pull request into `main`. This will trigger actions that\ncreate a release on GitHub, on PyPI and the docs.\n\nPlease ensure you have only one pull request per feature.\n\n## Publishing manually\n\nPublishing is automated with GitHub Actions and should _not_ be done manually. If you still need to do it, follow the\nsteps below.\n\nGenerate the distribution package. Make sure you have the latest versions of `setuptools` and `wheel` installed:\n\n```bash\npython3 -m pip install --upgrade pip setuptools wheel\npython3 setup.py sdist bdist_wheel\n```\n\nYou can install the package locally from the dist:\n\n```bash\npython3 -m pip ./dist/some_name.whl\n```\n\nUpload package works also with `make`:\n\n```bash\nmake dist\nmake upload\n```\n\nFor local development:\n\n```bash\npython3 setup.py develop\n```\n\n## Contributing to the documentation\n\nThe documentation is a collection of [markdown](https://en.wikipedia.org/wiki/Markdown) files in the `docs` folder.  \nAfter updates of the files, build and check the result with the following commands:\n\n```bash\nmake docs-build\nmake docs-serve \n```\n\nTo update the changes to the official documentation pages run:\n\n```bash\nmake docs-publish\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dasch-swiss/dsp-tools",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dsp-tools",
    "package_url": "https://pypi.org/project/dsp-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/dsp-tools/",
    "project_urls": {
      "Homepage": "https://github.com/dasch-swiss/dsp-tools"
    },
    "release_url": "https://pypi.org/project/dsp-tools/1.12.2/",
    "requires_dist": [
      "argparse",
      "rdflib",
      "lxml",
      "validators",
      "requests",
      "jsonschema",
      "click",
      "rfc3987",
      "pystrict",
      "openpyxl",
      "jsonpath-ng"
    ],
    "requires_python": ">=3.9.0",
    "summary": "A Python library and tools for the DaSCH Service Platform",
    "version": "1.12.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17394892,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3188da246b7d380d8d04dbd73631ecb02bb73337d577b408dcaccddfd9bdfe4",
        "md5": "e21b88879b3a833f139ec492630d8b99",
        "sha256": "ab8c30c5de2a80c011f1d49ed9354e72be5b941b89bca00a6243d2a8d4d4cf61"
      },
      "downloads": -1,
      "filename": "dsp_tools-1.12.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e21b88879b3a833f139ec492630d8b99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.0",
      "size": 114201,
      "upload_time": "2022-04-01T06:11:45",
      "upload_time_iso_8601": "2022-04-01T06:11:45.351228Z",
      "url": "https://files.pythonhosted.org/packages/a3/18/8da246b7d380d8d04dbd73631ecb02bb73337d577b408dcaccddfd9bdfe4/dsp_tools-1.12.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27c26b05a636f77daaeb57825d03f5d352c780185ae8d987ef35d7cd6b4dbb8a",
        "md5": "f1e72fa8fe16aacf185137a9cfb437a7",
        "sha256": "7d7221f8a552e83e35eb57da1ad8ad9748b844c1be5810568f07b476de3f52d3"
      },
      "downloads": -1,
      "filename": "dsp-tools-1.12.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f1e72fa8fe16aacf185137a9cfb437a7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.0",
      "size": 96365,
      "upload_time": "2022-04-01T06:11:47",
      "upload_time_iso_8601": "2022-04-01T06:11:47.708174Z",
      "url": "https://files.pythonhosted.org/packages/27/c2/6b05a636f77daaeb57825d03f5d352c780185ae8d987ef35d7cd6b4dbb8a/dsp-tools-1.12.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}