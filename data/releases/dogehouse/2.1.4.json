{
  "info": {
    "author": "Arthurdw",
    "author_email": "mail@arthurdw.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": ".. image:: https://img.shields.io/badge/pypi-dogehouse-blue\n :target: https://pypi.org/project/dogehouse\n.. image:: https://img.shields.io/pypi/v/dogehouse\n :target: https://pypi.org/project/dogehouse\n.. image:: https://static.pepy.tech/personalized-badge/dogehouse?period=total&units=international_system&left_color=gray&right_color=blue&left_text=Downloads\n :target: https://pepy.tech/project/dogehouse\n.. image:: https://img.shields.io/pypi/pyversions/dogehouse\n :target: https://pypi.org/project/dogehouse\n\nPython wrapper for the dogehouse API\n====================================\n\nDocumentation\n-------------\n\nYou can find the documentation at `dogehouse.arthurdw.com <http://dogehouse.arthurdw.com/>`_\n\nInstallation\n------------\n\n``pip install dogehouse``\n\n\nExample\n--------\n\n.. code-block:: python\n\n    from dogehouse import DogeClient, event, command\n    from dogehouse.entities import Message\n\n\n    class Client(DogeClient):\n        @event\n        async def on_ready(self):\n            print(f\"Successfully connected as {self.user}!\")\n            await self.create_room(\"Hello World!\")\n        \n        @command\n        async def foo(self, ctx: Message):\n            await self.send(\"bar\")\n\n        \n    if __name__ == \"__main__\":\n        Client(\"YourToken\", \"YourRefreshToken\", prefix=\"!\").run()\n\n\n\nTokens\n--------\n- Go to https://dogehouse.tv\n- Open Developer options (F12 or Ctrl+Shift+I)\n- Go to Application > Local Storage > dogehouse.tv\n- There lies your TOKEN and REFRESH_TOKEN",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/Arthurdw/dogehouse.py/archive/2.1.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Arthurdw/dogehouse.py",
    "keywords": "dogehouse",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dogehouse",
    "package_url": "https://pypi.org/project/dogehouse/",
    "platform": "",
    "project_url": "https://pypi.org/project/dogehouse/",
    "project_urls": {
      "Download": "https://github.com/Arthurdw/dogehouse.py/archive/2.1.4.tar.gz",
      "Homepage": "https://github.com/Arthurdw/dogehouse.py"
    },
    "release_url": "https://pypi.org/project/dogehouse/2.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python wrapper for the Dogehouse API.",
    "version": "2.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10287478,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c7fb7bee017b8877952d5bc3d67ade1dedd12973da7857143dd142cb25d3908",
        "md5": "1a5fcf425c462b3ae27d32c9645783b5",
        "sha256": "d7a536f7fd3e405158b9ee0de04f7316b61e19d91d3bd7d71687ac62b9f584c4"
      },
      "downloads": -1,
      "filename": "dogehouse-2.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1a5fcf425c462b3ae27d32c9645783b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15438,
      "upload_time": "2021-04-22T16:02:06",
      "upload_time_iso_8601": "2021-04-22T16:02:06.060469Z",
      "url": "https://files.pythonhosted.org/packages/5c/7f/b7bee017b8877952d5bc3d67ade1dedd12973da7857143dd142cb25d3908/dogehouse-2.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}