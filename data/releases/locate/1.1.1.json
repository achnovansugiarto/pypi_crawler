{
  "info": {
    "author": "Heetbeet",
    "author_email": "sfstreicher@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Locate\n\nThis library provides three callables:\n\n- `this_dir()` returns the directory of the current Python file, or when using from an interactive session, it returns\n  the current working directory.\n- `append_sys_path(relative_path)` allows importing from a location relative to the running Python file by\n  resolving `relative_path` relative to `this_dir()` and appending it to `sys.path` (e.g. `relative_path=\"../foo/bar\"`).\n  This also works as a context manager to allow temporary effect (e.g. `with append_sys_path(\"foo\"): ...`).\n- `prepend_sys_path(relative_path)` is the same as `append_sys_path`, but prepending `sys.path` in order to be the first\n  import location for Python to search rather than the last.\n\n## Safety\n\nThe `*_sys_path` destructors (when exiting the with block) are safe from any side effect your package imports may have\non `sys.path`. It's not a naive implementation such as removing the first/last element or removing the element by value;\nit employs a string subclass with an additional `id` property to keep tags of `sys.path` insertions. It is, therefore,\ncompletely safe and allows for any further nesting of `with *_sys_path` within the import tree.\n\n## Examples\n\n### Input\n\n```python\nimport locate\nfrom pathlib import Path\n\nthis_dir = locate.this_dir()\n\nprint(f\"This file is located in: {this_dir}\")\nprint()\n\n# Create files to demonstrate importing from a directory\nfoo = Path(locate.this_dir(), \"foo\")\nfoo.mkdir(exist_ok=True)\n\nPath(foo, \"bar1.py\").write_text(\"print('Importing bar1')\")\nPath(foo, \"bar2.py\").write_text(\"print('Importing bar2')\")\nPath(foo, \"bar3.py\").write_text(\"print('Importing bar3')\")\nPath(foo, \"bar4.py\").write_text(\"print('Importing bar4')\")\n\n# Changing sys.path temporarily\nwith locate.prepend_sys_path(\"foo\"):\n    print(f\"I can temporarily import from: {Path(this_dir, 'foo')}\")\n    import bar1\n\n    print()\n\nprint(f\"I can no longer import from: {Path(this_dir, 'foo')}\")\ntry:\n    import bar2\nexcept ImportError:\n    print(\"Cannot import bar2\")\nprint()\n\n# Changing sys.path permanently\nlocate.prepend_sys_path(\"foo\")\nprint(f\"I can now always import from: {Path(this_dir, 'foo')}\")\nimport bar3\nimport bar4\n\nprint()\n```\n\n### Output\n\n```\nThis file is located in: C:\\Users\\simon\n\nI can temporarily import from: C:\\Users\\simon\\foo\nImporting bar1\n\nI can no longer import from: C:\\Users\\simon\\foo\nCannot import bar2\n\nI can now always import from: C:\\Users\\simon\\foo\nImporting bar3\nImporting bar4\n```\n\n## Motivation\n\nThis package is for people who frequently use the directory of their scripts for storing files and custom modules and do\nnot want their pipeline to break from an interactive shell. This is based on how Julia thinks about the immediate\ndirectory through its [@\\_\\_DIR\\_\\_](https://docs.julialang.org/en/v1/base/base/#Base.@__DIR__) macro.\n\n`locate.this_dir()` is defined as:\n\n- When running a `.py` file, this is the file's base directory.\n- When running an `.ipyn` notebook, this is the current working directory. This is the desired/expected result since\n  Jupyter sets the working directory as the `.ipynb` base directory by default.\n- When running in a REPL, this is also the current working directory. This is similar to\n  Julia's [@\\_\\_DIR\\_\\_](https://docs.julialang.org/en/v1/base/base/#Base.@__DIR__) macro.\n\n## Other considerations\n\nFor a good discussion on retrieving the current Python path, see https://stackoverflow.com/questions/3718657\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AutoActuary/locate",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "locate",
    "package_url": "https://pypi.org/project/locate/",
    "platform": null,
    "project_url": "https://pypi.org/project/locate/",
    "project_urls": {
      "Homepage": "https://github.com/AutoActuary/locate"
    },
    "release_url": "https://pypi.org/project/locate/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Locate the file location of your current running script.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16109938,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab0d9b6f11382b2f9080b5a366d20e90b4c08e547b6cd08c2a206729e6bad47a",
        "md5": "42e86bb4e381b75e81b827492e27676f",
        "sha256": "9e5e2f3516639240f4d975c08e95ae6a24ff4dd63d228f927541cdec30105755"
      },
      "downloads": -1,
      "filename": "locate-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42e86bb4e381b75e81b827492e27676f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 5364,
      "upload_time": "2022-12-15T07:01:29",
      "upload_time_iso_8601": "2022-12-15T07:01:29.526999Z",
      "url": "https://files.pythonhosted.org/packages/ab/0d/9b6f11382b2f9080b5a366d20e90b4c08e547b6cd08c2a206729e6bad47a/locate-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26b06b303d4a2a20046dc396de914a6c1840253ff874630f00864ffe623acb68",
        "md5": "88c54e14e9fe62c1215c6bea1b502419",
        "sha256": "432750f5b7e89f8c99942ca7d8722ccd1e7954b20e6a973027fccb6cc00af857"
      },
      "downloads": -1,
      "filename": "locate-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "88c54e14e9fe62c1215c6bea1b502419",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 7831,
      "upload_time": "2022-12-15T07:01:30",
      "upload_time_iso_8601": "2022-12-15T07:01:30.602053Z",
      "url": "https://files.pythonhosted.org/packages/26/b0/6b303d4a2a20046dc396de914a6c1840253ff874630f00864ffe623acb68/locate-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}