{
  "info": {
    "author": "Shinneider Libanio da Silva",
    "author_email": "shinneider-libanio@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django Health Check\n=\n\nIf you use or like the project, click `Star` and `Watch` to generate metrics and i evaluate project continuity.\n\n# Install:\n    pip install django-k8s-health-check\n\n# Usage Health only:\n1. In your urls:\n    ```\n    from django_k8s_health_check.views import HealthView\n    ...\n\n    urlpatterns = [\n        path('', views.HealthView.as_view()),\n    ]\n    ```\n\n# Usage in kubernetes:\n\nIf use health check in kubernetes, you need to add kubernetes ip/host to django allowed_hosts,\nbut is a bad practice, especially if there are multiple ip/hosts...\nFor this, i created a middleware to pass dynamic ip/hosts, using multiples validators\n\n1. Request Way\n\n    1. Add the middleware to django middleware`s:\n        ```\n        MIDDLEWARE = [\n            'django_k8s_health_check.middleware.HealthCheckMiddleware',\n            ...\n        ]\n        ```\n\n    1. Try this request:\n        ```\n        import requests\n        requests.get('your-url', headers={'X-Health': 'health-check'})\n        ```\n\n    1. Put this in your yml\n        ```\n        livenessProbe:\n            httpGet:\n            path: /your-path\n            httpHeaders:\n            - name: X-Health\n                value: health-check\n            timeoutSeconds: 5\n        ```\n    1. Check de configuration section, and change for security reasons...\n\n1. Command Way (test database and cache only, this not guarantee application is running):\n\n    1. Add this app to your installed apps:\n        ```\n        INSTALLED_APPS = [\n            'django_k8s_health_check',\n        ]\n        ```\n    \n    1. Try to run this command:\n        ```\n        python manage.py health_check\n        ```\n    \n    1. Put this in your yml\n        ```\n        livenessProbe:\n            exec:\n                command: [\"python\", \"manage.py\", \"health_check\"]\n            timeoutSeconds: 5\n        ```\n\n# Configuration:\n\n```\nHEALTH_CHECK = {\n    # View\n    'SERVICE_NAME': None,  # Used only in API\n    'CHECK_DATABASE': True,\n    'CHECK_CACHE': True,\n\n    # Middleware (All bellow is used only in API)\n    'HEADER_FIELD': 'X-Health',\n    'HEADER_VALUE': 'health-check',\n    'ALLOWED_PATHS': None,  # all others urls, use original ALLOWED_HOSTS. Ex: ['api/v1/health', '/health'], None allow all\n    'ALLOWED_HOSTS': None,  # check request host is in a list, Ex: ['127.0.0.1', 'www.domain.com'], None allow all\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shinneider/django-k8s-health-check",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-k8s-health-check",
    "package_url": "https://pypi.org/project/django-k8s-health-check/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-k8s-health-check/",
    "project_urls": {
      "Homepage": "https://github.com/shinneider/django-k8s-health-check"
    },
    "release_url": "https://pypi.org/project/django-k8s-health-check/1.1.1/",
    "requires_dist": [
      "django",
      "djangorestframework",
      "isort ; extra == 'code-quality'",
      "bandit ; extra == 'code-quality'",
      "xenon ; extra == 'code-quality'",
      "autopep8 ; extra == 'dev'"
    ],
    "requires_python": ">=3.3",
    "summary": "Django Health Check",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16376970,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a2a2b9b38be337e65015309f0da8bba794c123f5c900ae2d9ce138a2e70b5c1",
        "md5": "a0bf0c5a71c4c760021a5833e77c8ce6",
        "sha256": "7c9e8a8c410123254e684fd65e3430ac6cb9aa198376b450799b651721b728e0"
      },
      "downloads": -1,
      "filename": "django_k8s_health_check-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0bf0c5a71c4c760021a5833e77c8ce6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.3",
      "size": 7556,
      "upload_time": "2022-10-28T21:33:23",
      "upload_time_iso_8601": "2022-10-28T21:33:23.558829Z",
      "url": "https://files.pythonhosted.org/packages/0a/2a/2b9b38be337e65015309f0da8bba794c123f5c900ae2d9ce138a2e70b5c1/django_k8s_health_check-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ca41619127f0f2545656b8c8e3857270e73e0631b470527cea3e8b5801d5124",
        "md5": "1053e36f5ab69cd6a1cec9f3ef703757",
        "sha256": "63bff43cbb21123673c453532264e2728f9b6188dd6d70bd3d01ec2878c57e6f"
      },
      "downloads": -1,
      "filename": "django-k8s-health-check-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1053e36f5ab69cd6a1cec9f3ef703757",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 6807,
      "upload_time": "2022-10-28T21:33:24",
      "upload_time_iso_8601": "2022-10-28T21:33:24.785905Z",
      "url": "https://files.pythonhosted.org/packages/3c/a4/1619127f0f2545656b8c8e3857270e73e0631b470527cea3e8b5801d5124/django-k8s-health-check-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}