{
  "info": {
    "author": "Seth Alter",
    "author_email": "alters@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development"
    ],
    "description": "# Magnebot\n\nMagnebot is a high-level robotics-like API for [TDW](https://github.com/threedworld-mit/tdw). The Magnebot can move around the scene and manipulate objects by picking them up with \"magnets\". The simulation is entirely driven by physics.\n\n<img src=\"https://github.com/alters-mit/magnebot/raw/main/social.jpg\" />\n\n**[Read the Magnebot API documentation here.](https://github.com/alters-mit/magnebot/blob/main/doc/api/magnebot_controller.md)**\n\n- The Magnebot can be loaded into a [wide variety of scenes populated by interactable objects](https://github.com/alters-mit/magnebot/tree/main/doc/images/floorplans). \n- At a low level, the Magnebot is driven by robotics commands such as set_revolute_target, which will turn a revolute drive. The high-level API combines the low-level commands into \"actions\", such as `grasp(target_object)` or `move_by(distance)`.\n- At the end of every action, the Magnebot controller script will return [scene state data](https://github.com/alters-mit/magnebot/blob/main/doc/scene_state.md), which includes an image, a depth map, a segmentation color map, and physics metadata for each body part of the robot and each object in the scene.\n\n# Requirements\n\nSee [Getting Started With TDW](https://github.com/threedworld-mit/tdw/blob/master/Documentation/getting_started.md#Requirements):\n\n- Both the Magnebot API and the simulation executable (\"the build\") run on Windows, OS X, or Linux.\n\n- The Magnebot API requires Python 3.6 or newer.\n- The build requires a GPU.\n- The Magnebot API doesn't include audio/visual recording or Flex; you can ignore the requirements for those features.\n\n# Installation \n\n1. **`pip3 install magnebot`**\n2. [Download the latest TDW build](https://github.com/threedworld-mit/tdw/releases/latest) and unzip it.\n\n#### Update an existing installation\n\n1. `pip3 install tdw -U`\n2. `pip3 install magnebot -U`\n3. [Download the latest TDW build](https://github.com/threedworld-mit/tdw/releases/latest) and unzip it.\n\n# Usage\n\n1. Run this controller:\n\n```python\nfrom magnebot import Magnebot, Arm\n\nm = Magnebot()\n\n# Initialize the scene, populate it with objects, and add the Magnebot.\n# This can take a few minutes to finish.\nm.init_floorplan_scene(scene=\"1a\", layout=0, room=1)\n\n# Reach for a target position.\nstatus = m.reach_for(arm=Arm.left, target={\"x\": 0.1, \"y\": 0.6, \"z\": 0.4}, absolute=False)\nprint(status) # ActionStatus.success\n\n# Save images.\nm.state.save_images(output_directory=\"magnebot_test_images\")\n\n# End the simulation.\nm.end()\n```\n\n2. [Launch the TDW build.](https://github.com/threedworld-mit/tdw/blob/master/Documentation/getting_started.md)\n\n# Documentation\n\n- **[Magnebot API](https://github.com/alters-mit/magnebot/blob/main/doc/api/magnebot_controller.md)**\n- [**APIs for other classes in the Magnebot module**](https://github.com/alters-mit/magnebot/tree/main/doc/api)\n- **[How to define custom APIs](https://github.com/alters-mit/magnebot/blob/main/doc/custom_apis.md)**\n  - [Scene setup](https://github.com/alters-mit/magnebot/blob/main/doc/scene.md)\n  - [Arm articulation](https://github.com/alters-mit/magnebot/blob/main/doc/arm_articulation.md)\n  - [Movement](https://github.com/alters-mit/magnebot/blob/main/doc/movement.md)\n- [Changelog](https://github.com/alters-mit/magnebot/blob/main/doc/changelog.md)\n- [Troubleshooting and debugging](https://github.com/alters-mit/magnebot/blob/main/doc/troubleshooting.md)\n- For more information regarding TDW, see the [TDW repo](https://github.com/threedworld-mit/tdw/). Relevant documentation includes:\n  - [Getting Started With TDW](https://github.com/threedworld-mit/tdw/blob/master/Documentation/getting_started.md) \n  - [The Command API documentation](https://github.com/threedworld-mit/tdw/blob/master/Documentation/api/command_api.md)\n  - [Robotics in TDW](https://github.com/threedworld-mit/tdw/blob/master/Documentation/misc_frontend/robots.md)\n  - [Docker and TDW](https://github.com/threedworld-mit/tdw/blob/master/Documentation/Docker/docker.md)\n- [Benchmark](https://github.com/alters-mit/magnebot/blob/main/doc/benchmark.md)\n\n# Examples\n\n[Example controllers](https://github.com/alters-mit/magnebot/tree/main/controllers/examples) show actual examples for an actual use-case.\n\n| Controller      | Description                                                  |\n| --------------- | ------------------------------------------------------------ |\n| `pick_up.py`    | A simple example of how to pick up an object in the scene. You should try and review this example first. |\n| `custom_api.py` | An example of how to create a custom scene and a custom action. This is meant for more advanced users. |\n\n#### Other controllers in this repo\n\n- [Promo controllers](https://github.com/alters-mit/magnebot/tree/main/controllers/promos) are meant to be use to generate promo videos or images; they include low-level TDW commands that you won't need to ordinarily use.\n- [Test controllers](https://github.com/alters-mit/magnebot/tree/main/controllers/tests) load the Magnebot into an empty room and test basic functionality.\n\n# API Hierarchy\n\nThe Magnebot API relies on the `tdw` Python module.  Every action in this API uses combinations of low-level TDW commands and output data, typically across multiple simulation steps.\n\nThis API is designed to be used as-is or as the base for an API with higher-level actions, such as the [Transport Challenge](https://github.com/alters-mit/transport_challenge). To learn how to write your own API extension, [read this](https://github.com/alters-mit/magnebot/blob/main/doc/custom_apis.md).\n\n<img src=\"https://raw.githubusercontent.com/alters-mit/magnebot/main/doc/images/api_hierarchy.png\" style=\"zoom:67%;\" />\n\n| API                                                          | Description                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [Transport Challenge](https://github.com/alters-mit/transport_challenge) | Transport objects from room to room using containers as tools. |\n\n# Backend\n\n- [`OccupancyMapper`](https://github.com/alters-mit/magnebot/blob/main/util/occupancy_mapper.py) generates occupancy maps for each scene+layout combination, as well as floorplan and room images.\n- [`doc_gen.py`](https://github.com/alters-mit/magnebot/blob/main/util/doc_gen.py) generates API documentation using [`py-md-doc`](https://pypi.org/project/py-md-doc/).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alters-mit/magnebot",
    "keywords": "unity simulation tdw robotics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magnebot",
    "package_url": "https://pypi.org/project/magnebot/",
    "platform": "",
    "project_url": "https://pypi.org/project/magnebot/",
    "project_urls": {
      "Homepage": "https://github.com/alters-mit/magnebot"
    },
    "release_url": "https://pypi.org/project/magnebot/1.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "High-level API for the Magnebot in TDW.",
    "version": "1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17067503,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7a7d5d01881c15bbe081034f01fd7459c05936238116fbd6c31dbe9c7e595d7",
        "md5": "3d923e3b2b53098d20032610f5619e28",
        "sha256": "3c5f1ef9714f14d94d1fb973b2f8da6830c160e459d2b526c99db29091f9dc57"
      },
      "downloads": -1,
      "filename": "magnebot-1.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3d923e3b2b53098d20032610f5619e28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 144728,
      "upload_time": "2021-09-17T13:59:17",
      "upload_time_iso_8601": "2021-09-17T13:59:17.218783Z",
      "url": "https://files.pythonhosted.org/packages/e7/a7/d5d01881c15bbe081034f01fd7459c05936238116fbd6c31dbe9c7e595d7/magnebot-1.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}