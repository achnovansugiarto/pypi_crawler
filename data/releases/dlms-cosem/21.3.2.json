{
  "info": {
    "author": "Henrik Palmlund Wahlgren @ Palmlund Wahlgren Innovative Technology AB",
    "author_email": "henrik@pwit.se",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n# A Python library for DLMS/COSEM.\n\n[![codecov](https://codecov.io/gh/pwitab/dlms-cosem/branch/master/graph/badge.svg?token=RO37L11VQJ)](https://codecov.io/gh/pwitab/dlms-cosem)\n![run-tests](https://github.com/pwitab/dlms-cosem/workflows/run-tests/badge.svg)\n![build-docs](https://github.com/pwitab/dlms-cosem/workflows/build-docs/badge.svg)\n\n<img src=\"dlms-logo.png\" alt=\"dlms_logo\" width=\"200\"/>\n\n# Installation\nWe only support Python 3.6+\n\n```\npip install dlms-cosem\n```\n\n# Documentation\n\nFull documentation can be found at [www.dlms.dev](https://www.dlms.dev)\n\n# About\n\n`dlms-cosem` is designed to be a tool with a simple API for working with DLMS/COSEM\nenabled energy meters. It provides the lowest level function, as protocol state\nmanagement, APDU encoding/decoding, APDU encryption/decryption.\n\nThe library aims to provide a [sans-io](https://sans-io.readthedocs.io/) implementation\nof the DLMS/COSEM protocol so that the protocol code can be reused with several\nio-paradigms. As of now we provide a simple client implementation based on\nblocking I/O. This can be used over either a serial interface with HDLC or over TCP.\n\nWe have not implemented full support to be able to build a server (meter) emulator. If\nthis is a use-case you need, consider sponsoring the development and contact us.\n\n# Supported features\n\n* AssociationRequest  and AssociationRelease\n* GET, GET.WITH_BLOCK, GET.WITH_LIST\n* SET\n* ACTION\n* DataNotification\n* GlobalCiphering - Authenticated and Encrypted.\n* HLS-GMAC auth\n* Selective access via RangeDescriptor\n* Parsing of ProfileGeneric buffers\n\n# Example use:\n\nA simple example:\n```python\nfrom dlms_cosem.clients.dlms_client import DlmsClient\nfrom dlms_cosem import enumerations, cosem\n\n# read current client invocation counter\nwith DlmsClient.with_tcp_transport(\n    server_logical_address=1,\n    client_logical_address=16,\n    host=\"localhost\",\n    port=4059\n).session() as client:\n\n    data = client.get(\n        cosem.CosemAttribute(\n            interface=enumerations.CosemInterface.DATA,\n            instance=cosem.Obis(0, 0, 0x2B, 1, 0),\n            attribute=2,\n        )\n    )\n```\n\n\nLook at the different files in the `examples` folder get a better feel on how to fully\nuse the library.\n\n# Supported meters\n\nTechnically we aim to support any DLMS enabled meter. The library is implementing all\nthe low level DLMS, and you might need an abstraction layer to support everything in\nyour meter.\n\nDLMS/COSEM specifies many ways of performing tasks on a meter. It is\ncustomary that a meter also adheres to a companion standard. In the companion standard\nit is defined exactly how certain use-cases are to be performed and how data is modeled.\n\nExamples of companion standards are:\n* DSMR (Netherlands)\n* IDIS (all Europe)\n* UNI/TS 11291 (Italy)\n\nOn top of it all your DSO (Distribution Service Operator) might have ordered their\nmeters with extra functionality or reduced functionality from one of the companion\nstandards.\n\nWe have some meters we have run tests on or know the library is used for in production\n\n* Pietro Fiorentini RSE 1,2 LA N1. Italian gas meter\n* Iskraemeco AM550. IDIS compliant electricity meter.\n\n# Development\n\nThis library is developed by Palmlund Wahlgren Innovative Technology AB. We are\nbased in Sweden and are members of the DLMS User Association.\n\nIf you find a bug please raise an issue on Github.\n\nWe welcome contributions of any kind.\n\nWe add features depending on our own, and our clients use cases. If you\nneed a feature implemented please contact us.\n\n# Training / Consultancy / Commercial Support\n\nWe offer consultancy service and training services around this library and general DLMS/COSEM.\nIf you are interested in our services just reach out to us.\n\nIf you have implemented a solution based on this library we also offer a commercial\nsupport scheme.\n\n\n\n# Changelog\nAll notable changes to this project will be documented in this file.\n\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Calendar Versioning](https://calver.org/)\n\n## Unreleased\n\n\n### Added\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n### Security\n\n\n## [21.3.2] - 2021-11-07\n\n## Changed\n\nUpdated dependencies and made it a bit more lenient so installing in other environments\nwill allow for more versions.\n\n## [21.3.1] - 2021-06-14\n\n### Added\n\n* To handle the more complicated parsing problem of GET.WITH_LIST with compound data\n  elements a new parser, DlmsDataParser, was added that focuses on only A-XDR DLMS data.\n  Hopefully this can be be used instead of the A-XDR Parser when the parsing of ACSE\n  services APDUs is built away\n\n## [21.3.0] - 2021-06-08\n\n\n### Added\n\n* Added HDLC UnnumberedInformationFrame.\n* Ability to set timeout of transport layer at client level.\n* A simpler way to change client address and invocation counter of a `DlmsClient` to\n  that reuseing a connection goes smoother\n* Added `from_string` on `Obis`that can parse any viable string as OBIS.\n* Added GET.WITH_LIST service.\n\n### Changed\n\n* Renamed classes to exclude `Apdu` in class names. To have it consistent over the\n  project.\n* Simplified DataNotification\n* Improved handling of pre-established associations\n* Using the wrong data to decrypt now raises `DecryptionError` instead of InvalidTag\n* The `to_string` method on `Obis` now returns in the format `1-8:1.8.0.255` with a\n  possible override of the separator.\n\n### Removed\n\n* Removed the `from_dotted`, `dotted_repr` and `verbose_repr` from `Obis`\n\n\n### Fixed\n\n* Some DLMS over TCP implementations will return partial data. The\n  `BlockingTcpTransport` now keeps on trying to read the data until all data is\n  received. Fixes [#35](https://github.com/pwitab/dlms-cosem/issues/35).\n* Fixed a bug in the HDLC layer that prevented correct sending of segmented information\n  frames.\n\n\n## [21.2.2] - 2021-03-02\n\n### Fixed\n\n* Fixed missing state management for general ACTION usage\n\n## [21.2.1] - 2021-02-18\n\n### Fixed\n\n* Fixed [#23](https://github.com/pwitab/dlms-cosem/issues/23). Typo in A-XDR Parser.\n  Just referenced the function and did not call it. Now DLMS data is interpreted\n  correctly.\n\n* Fixed [#20](https://github.com/pwitab/dlms-cosem/issues/20). It was possible that not\n  calling the .shutdown() on socket before disconnecting made remote modems on meters,\n  that have an embedded TCP/IP stack, keep the socket open and blocking subsequent calls.\n\n## [21.2.0] - 2021-01-28\n\n### Added\n\n* Support for basic SET service. No support for WITH_LIST or service specific block\n  transfer\n\n## [21.1.2] - 2021-01-22\n\n### Fixed\n\n* The standard DLMS way of dealing with timezones in datetime are via UTC offset. But\n  the offset is the deviation from normal time to UTC not deviation from UTC. This\n  results in -60 min deviation for UTC+01:00 for example. Previous solution assumed\n  60 min for UTC+01:00. Solved by negating all values for offset.\n  Note that some DLMS companion standards handles the offset the previous way and in\n  the future there will be need to handle both ways correctly.\n\n* Included typing-extensions in required packages.\n\n## [21.1.1] - 2021-01-13\n\n### Added\n\n* Better handling of TCP errors in `BlockingTcpTransport`\n\n### Changed\n\n* It is now explicitly possible to connect and disconnect a transport in the\n  `DlmsClient` instead of it being done automatically in `.associate()` and\n  `.release_association()`. Context manager `.session()` works the same.\n\n* Client to server challenge of DlmsConnection is always created independent of auth\n  method. But only used if needed.\n\n### Removed\n\n* Removed conformance validation in DlmsConnection. It seems like meters don't always\n  follow it so better to leave it up to the client.\n\n\n\n## [21.1.0] - 2021-01-12\n\n### Added\n\n* HDLC transport implementation\n* TCP transport implementation\n* DlMS client implementation\n* Support for Get service including service specific block transfer\n* Support for selective access via range descriptor\n* Support for HLS authentication using HLS-GMAC.\n* Support for GlobalCiphering\n* Parsing of ProfileGeneric buffer\n\n### Changed\n\n* Changed project versioning scheme to Calendar versioning\n\n\n## v0.0.2\n\n\n### Changed\n\n-   UDP messages are now based WrapperProtocolDataUnit to be able to reuse\n    WrapperHeader for TCP messages.\n-   Parsing of DLMS APDUs\n\n\n### v0.0.1\n\n\nInitial implementation.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pwitab/dlms-cosem",
    "keywords": "AMR,Metering,smart meters,MDM,dlms,cosem",
    "license": "MIT",
    "maintainer": "Henrik Palmlund Wahlgren @ Palmlund Wahlgren Innovative Technology AB",
    "maintainer_email": "henrik@pwit.se",
    "name": "dlms-cosem",
    "package_url": "https://pypi.org/project/dlms-cosem/",
    "platform": "",
    "project_url": "https://pypi.org/project/dlms-cosem/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pwitab/dlms-cosem/issues",
      "Documentation": "https://www.dlms.dev/",
      "Homepage": "https://github.com/pwitab/dlms-cosem",
      "Source Code": "https://github.com/pwitab/dlms-cosem"
    },
    "release_url": "https://pypi.org/project/dlms-cosem/21.3.2/",
    "requires_dist": [
      "attrs (>=20.3.0)",
      "pyserial (>=3.5)",
      "cryptography (>=35.0.0)",
      "asn1crypto (>=1.4.0)",
      "python-dateutil (>=2.8.1)",
      "typing-extensions (>=3.10)",
      "pre-commit ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-sugar ; extra == 'dev'",
      "mkdocs ; extra == 'docs'",
      "mkdocs-material ; extra == 'docs'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-sugar ; extra == 'test'"
    ],
    "requires_python": "~=3.6",
    "summary": "A Python library for DLMS/COSEM",
    "version": "21.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17176059,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2561caaf8ca323cec31215d9733a8df7fe67a755f3e990beb7008b5a3fd36dc8",
        "md5": "877797adf0d86584a729d220dc52ca67",
        "sha256": "0bd621df33ed838043989441046d9544cec768b143b339d340f3b30a12bea76f"
      },
      "downloads": -1,
      "filename": "dlms_cosem-21.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "877797adf0d86584a729d220dc52ca67",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 128812,
      "upload_time": "2021-11-07T09:40:52",
      "upload_time_iso_8601": "2021-11-07T09:40:52.788777Z",
      "url": "https://files.pythonhosted.org/packages/25/61/caaf8ca323cec31215d9733a8df7fe67a755f3e990beb7008b5a3fd36dc8/dlms_cosem-21.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9a7523db52982be6321e0755278ae3ad3e9a7615c7baf8828e66d41e374596b",
        "md5": "901aaf16ef83aff4358be617342355a1",
        "sha256": "156c6fbd48c4062085539ac717bb65712b5b45803c03cbb7a27a3b3c28dfeffd"
      },
      "downloads": -1,
      "filename": "dlms-cosem-21.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "901aaf16ef83aff4358be617342355a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 90064,
      "upload_time": "2021-11-07T09:40:54",
      "upload_time_iso_8601": "2021-11-07T09:40:54.170672Z",
      "url": "https://files.pythonhosted.org/packages/e9/a7/523db52982be6321e0755278ae3ad3e9a7615c7baf8828e66d41e374596b/dlms-cosem-21.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}