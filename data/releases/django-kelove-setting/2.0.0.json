{
  "info": {
    "author": "IT小强xqitw.cn",
    "author_email": "mail@xqitw.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: Chinese (Simplified)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "DJANGO 配置管理\n===============\n\n依托 `django-kelove-setting` 模块，可快速定制 `Django` 应用配置，并在 `Django Admin` 中统一管理应用的配置信息\n\n[![Django Kelove Setting Version](https://img.shields.io/badge/stable-v2.0.0-blue.svg)](https://gitee.com/itxq/django-kelove-setting)\n[![Python Version](https://img.shields.io/badge/Python-3.6+-blue.svg)](https://www.python.org/)\n[![Django Version](https://img.shields.io/badge/Django-v3.1+-important.svg)](https://www.djangoproject.com/)\n[![LICENSE](https://img.shields.io/badge/license-Apache%202.0-brightgreen.svg)](https://gitee.com/itxq/django-kelove-setting/blob/master/LICENSE)\n\n### 1.安装模块\n\n```shell\npip install django-kelove-setting\n```\n\n### 2.启用模块\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_kelove_setting',\n]\n```\n\n### 3.定制配置\n\n> 你的配置类应该继承自 `django_kelove_setting.setting_forms.Settings`，并设置 `settings_title` 属性（为你的配置起一个名称）\n\n> 表单字段的设置同 `Django forms` ，注意：不要添加不支持 `json` 序列化的表单字段（例如：forms.FileField）\n\n> 以下是一个配置示例：\n\n```python\nfrom django.utils.translation import gettext_lazy as _\nfrom django.conf import settings\nfrom django import forms\n\nfrom django_kelove_setting.setting_forms import Settings\n\n\nclass Demo01Settings(Settings):\n    \"\"\"\n    邮件配置\n    \"\"\"\n\n    settings_title: str = _('DEMO01配置')\n\n    fieldsets = (\n        (_('基础配置'), {\n            'fields': (\n                'EMAIL_HOST',\n                'EMAIL_PORT',\n                'EMAIL_HOST_USER',\n                'DEFAULT_FROM_EMAIL',\n                'OTP_EMAIL_SENDER',\n                'EMAIL_HOST_PASSWORD',\n            ),\n            'classes': ('extrapretty', 'wide')\n        }),\n        (_('安全链接'), {\n            'fields': (\n                'EMAIL_USE_TLS',\n                'EMAIL_USE_SSL',\n            ),\n            'classes': ('extrapretty', 'wide')\n        }),\n        (_('配置信息'), {\n            'fields': (\n                'settings_title',\n                'settings_key',\n            ),\n            'classes': ('extrapretty', 'wide')\n        })\n    )\n\n    EMAIL_HOST = forms.CharField(\n        initial=getattr(settings, 'EMAIL_HOST', 'smtp.qq.com'),\n        empty_value=getattr(settings, 'EMAIL_HOST', 'smtp.qq.com'),\n        required=False,\n        label=_('邮件服务器域名'),\n        help_text=_('例如：smtp.qq.com')\n    )\n\n    EMAIL_PORT = forms.IntegerField(\n        initial=getattr(settings, 'EMAIL_PORT', 465),\n        required=False,\n        label=_('邮件服务器端口号，为数字'),\n        help_text=_('例如：465')\n    )\n\n    EMAIL_HOST_USER = forms.CharField(\n        initial=getattr(settings, 'EMAIL_HOST_USER', ''),\n        required=False,\n        label=_('发件人邮箱'),\n    )\n\n    DEFAULT_FROM_EMAIL = forms.CharField(\n        initial=getattr(settings, 'DEFAULT_FROM_EMAIL', ''),\n        required=False,\n        label=_('发件人地址'),\n        help_text=_('fred@example.com 和 Fred &lt;fred@example.com&gt; 形式都是合法的')\n    )\n\n    OTP_EMAIL_SENDER = forms.CharField(\n        initial=getattr(settings, 'OTP_EMAIL_SENDER', ''),\n        required=False,\n        label=_('一次性验证码发件人地址'),\n        help_text=_('留空自动使用发件人地址。fred@example.com 和 Fred &lt;fred@example.com&gt; 形式都是合法的')\n    )\n\n    EMAIL_HOST_PASSWORD = forms.CharField(\n        widget=forms.PasswordInput(render_value=True),\n        initial=getattr(settings, 'EMAIL_HOST_PASSWORD', ''),\n        required=False,\n        label=_('发件人授权码'),\n        help_text=_('发件人授权码不一定是邮箱密码')\n    )\n\n    EMAIL_USE_TLS = forms.BooleanField(\n        initial=getattr(settings, 'EMAIL_USE_TLS', False),\n        required=False,\n        label=_('是否启用安全链接TLS'),\n        help_text=_('通常端口为587 TLS/SSL是相互排斥的，因此仅将其中一个设置设置为启用即可')\n    )\n\n    EMAIL_USE_SSL = forms.BooleanField(\n        initial=getattr(settings, 'EMAIL_USE_SSL', True),\n        required=False,\n        label=_('是否启用安全链接SSL'),\n        help_text=_('通常端口为465 TLS/SSL是相互排斥的，因此仅将其中一个设置设置为启用即可')\n    )\n\n    @classmethod\n    def get(cls) -> dict:\n        data = super().get()\n        otp_email_sender_value = data.get('OTP_EMAIL_SENDER', '')\n        if not otp_email_sender_value:\n            otp_email_sender_value = data.get('DEFAULT_FROM_EMAIL', '')\n        data['OTP_EMAIL_SENDER'] = otp_email_sender_value\n        return data\n```\n\n### 4.启用配置\n\n> 方式一：在你的 `AppConfig` 类中添加 `kelove_settings` 属性，值为定制好的应用配置类 `list`\n\n```python\nfrom django.apps import AppConfig\n\n\nclass Demo01Config(AppConfig):\n    name = 'demo01'\n\n    kelove_settings = [\n        'demo01.kelove_settings.Demo01Settings'\n    ]\n```\n\n> 方式二：在 `settings.py` 中添加 `KELOVE_SETTINGS_CLASSES`\n\n```python\nKELOVE_SETTINGS_CLASSES = [\n    'demo01.kelove_settings.Demo01Settings'\n]\n```\n\n### 5.后台管理\n\n> 进入 `Django` 后台 `应用配置` 即可进行管理 。 点击 `添加` 按钮，可快速初始化所有应用的配置。 \n\n### 6.导入导出\n\n> 使用 `django-import-export` 依赖即可可实现配置信息的导入导出功能\n\n+ 使用前需要先安装依赖 \n\n```shell\npip install django-import-export\n```\n\n+ 将 `django-import-export` 添加至 `INSTALLED_APPS`\n\n```python\nINSTALLED_APPS = [\n    ...\n    'import_export',\n]\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/itxq/django-kelove-setting",
    "keywords": "django,django-kelove,django-kelove-setting",
    "license": "Apache-2.0",
    "maintainer": "IT小强xqitw.cn",
    "maintainer_email": "mail@xqitw.cn",
    "name": "django-kelove-setting",
    "package_url": "https://pypi.org/project/django-kelove-setting/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-kelove-setting/",
    "project_urls": {
      "Documentation": "https://gitee.com/itxq/django-kelove-setting/blob/master/README.md",
      "Homepage": "https://gitee.com/itxq/django-kelove-setting",
      "Repository": "https://gitee.com/itxq/django-kelove-setting.git"
    },
    "release_url": "https://pypi.org/project/django-kelove-setting/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "DJANGO 配置管理",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16886133,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "255368719c07612e3e43b6e482150d41562f437e0789a26f5239bd9e638b9e9d",
        "md5": "16ce95c771febf471ac06b7831bcd628",
        "sha256": "ba541dbd4901379a3932316c0f61279f12bc715f65f33673a57aee0890f916cb"
      },
      "downloads": -1,
      "filename": "django_kelove_setting-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16ce95c771febf471ac06b7831bcd628",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 18460,
      "upload_time": "2021-12-14T01:22:18",
      "upload_time_iso_8601": "2021-12-14T01:22:18.168068Z",
      "url": "https://files.pythonhosted.org/packages/25/53/68719c07612e3e43b6e482150d41562f437e0789a26f5239bd9e638b9e9d/django_kelove_setting-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}