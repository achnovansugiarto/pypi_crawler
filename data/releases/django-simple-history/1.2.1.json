{
  "info": {
    "author": "Corey Bertram",
    "author_email": "corey@qr7.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "django-simple-history\n=====================\n\n.. image:: https://secure.travis-ci.org/treyhunner/django-simple-history.png?branch=master\n   :target: http://travis-ci.org/treyhunner/django-simple-history\n.. image:: https://coveralls.io/repos/treyhunner/django-simple-history/badge.png?branch=master\n   :target: https://coveralls.io/r/treyhunner/django-simple-history\n\ndjango-simple-history is a tool to store state of DB objects on every create/update/delete.\n\nInstall\n-------\nDownload the tar.gz, extract it and run the following inside the directory:\n\n.. code-block:: bash\n\n    $ python setup.py install\n\nBasic usage\n-----------\nUsing this package is _really_ simple; you just have to import HistoricalRecords and create an instance of it on every model you want to historically track.\n\nOn your models you need to include the following line at the top:\n\n.. code-block:: python\n\n    from simple_history.models import HistoricalRecords\n\nThen in your model class, include the following line:\n\n.. code-block:: python\n\n    history = HistoricalRecords()\n\nThen from either the model class or from an instance, you can access history.all() which will give you either every history item of the class, or every history item of the specific instance.\n\nExample\n-------\nModels:\n\n.. code-block:: python\n\n    class Poll(models.Model):\n        question = models.CharField(max_length = 200)\n        pub_date = models.DateTimeField('date published')\n\n        history = HistoricalRecords()\n\n    class Choice(models.Model):\n        poll = models.ForeignKey(Poll)\n        choice = models.CharField(max_length=200)\n        votes = models.IntegerField()\n\n        history = HistoricalRecords()\n\nUsage:\n\n.. code-block:: pycon\n\n    >>> from poll.models import Poll, Choice\n    >>> Poll.objects.all()\n    []\n    >>> import datetime\n    >>> p = Poll(question=\"what's up?\", pub_date=datetime.datetime.now())\n    >>> p.save()\n    >>> p\n    <Poll: Poll object>\n    >>> p.history.all()\n    [<HistoricalPoll: Poll object as of 2010-10-25 18:03:29.855689>]\n    >>> p.pub_date = datetime.datetime(2007,4,1,0,0)\n    >>> p.save()\n    >>> p.history.all()\n    [<HistoricalPoll: Poll object as of 2010-10-25 18:04:13.814128>, <HistoricalPoll: Poll object as of 2010-10-25 18:03:29.855689>]\n    >>> p.choice_set.create(choice='Not Much', votes=0)\n    <Choice: Choice object>\n    >>> p.choice_set.create(choice='The sky', votes=0)\n    <Choice: Choice object>\n    >>> c = p.choice_set.create(choice='Just hacking again', votes=0)\n    >>> c.poll\n    <Poll: Poll object>\n    >>> c.history.all()\n    [<HistoricalChoice: Choice object as of 2010-10-25 18:05:30.160595>]\n    >>> Choice.history\n    <simple_history.manager.HistoryManager object at 0x1cc4290>\n    >>> Choice.history.all()\n    [<HistoricalChoice: Choice object as of 2010-10-25 18:05:30.160595>, <HistoricalChoice: Choice object as of 2010-10-25 18:05:12.183340>, <HistoricalChoice: Choice object as of 2010-10-25 18:04:59.047351>]\n\nCHANGES\n=======\n\n1.2.1 (2013-04-22)\n------------------\n\n- Added tests\n- Added history view/revert feature in admin interface\n- Various fixes and improvements\n\nOct 22, 2010\n------------\n\n- Merged setup.py from Klaas van Schelven - Thanks!\n\nFeb 21, 2010\n------------\n\n- Initial project creation, with changes to support ForeignKey relations.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/treyhunner/django-simple-history",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-simple-history",
    "package_url": "https://pypi.org/project/django-simple-history/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-simple-history/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/treyhunner/django-simple-history"
    },
    "release_url": "https://pypi.org/project/django-simple-history/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Store model history and view/revert changes from admin site.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17243989,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b55d6750fa16678a876900e807c31ba34938693af7c7fbc11963491cd0253848",
        "md5": "407edaf434ebec982534dcae8d9d7ae4",
        "sha256": "10e96368a79704f3109013e2200b17ee6f6a62fe0364ab338a4ed166cd3fa3d1"
      },
      "downloads": -1,
      "filename": "django-simple-history-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "407edaf434ebec982534dcae8d9d7ae4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10924,
      "upload_time": "2013-04-22T15:12:03",
      "upload_time_iso_8601": "2013-04-22T15:12:03.012262Z",
      "url": "https://files.pythonhosted.org/packages/b5/5d/6750fa16678a876900e807c31ba34938693af7c7fbc11963491cd0253848/django-simple-history-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}