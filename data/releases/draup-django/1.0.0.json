{
  "info": {
    "author": "Arpit | Teja | Kashish",
    "author_email": "arpit@zinnov.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# draup_django\n### Delete, Update functionality for normalised models\n\n\n## Use-Case : \n\n  * `Draup Django` provide \n  delete, update functionality for ORM(object relational mapping)level.\n\n## Table of Content :\n\n  * [Stateful Delete/Update](#stateful)\n     * [Get Affected Objects](#get-affected-objects)\n     * [Delete Object](#delete-object)\n     * [Update Object](#update-object)\n  * [Installation](#installation)\n\n\n## Stateful Delete/Update\n  * Below are functions inorder to get the stateful delete/update\n\n  ### Get Affected Objects\n   * List out all dependent objects(Prompt-Messages).\n   * `getAffectedObjects` takes input dict with id as key and reference of model.\n\n   ```\n   Sample Input : ({'id':1},model_reference)\n   Output : Error_list(list),prompt messages(list)\n   ```\n\n  ### Delete Object\n   * Delete object with all the dependent objects. \n   * `deleteObject` takes input dict with id and force_delete as key and reference of model.\n\n   ```\n   Sample Input : ({'id':1,'force_delete':True},model_reference)\n   Output : Error_list(list)\n   ```\n\n  ### Update Object \n   * Transferring Object dependencies from one object to another object.\n   * `updateObjectDependencies` takes input source,destination objects.\n\n   ```\n   Sample Input : (source,destination)\n   Output : Error_list(list)\n   ```\n\n## Installation\n  * Use Pip to install the module\n\n    ```\n    pip install draup-django\n    ```\n\n## Usage :\n  * Sample model : \n\n          class parent(models.Model):\n            name = models.CharField(max_length=100)\n\n          class child(models.Model):\n            parent = models.ForeignKey(parent, on_delete=models.CASCADE) \n            name = models.CharField(max_length=100)\n\n  *  Parent Table :\n\n     | id     | Name      |\n     | ------ | --------- |\n     |  1     |  Alice    |\n     |  2     |  Tom      |\n\n * Child Table :\n\n     | id          | Name       |  parent_id    |\n     | ----------- |  --------- |-------------- |\n     |  1          |  Bob       |     1         |\n     |  2          |  Jack      |     2         | \n\n\n  * Code :\n\n         from draup_django import utility\n         m = models.parent\n\n         \"\"\"\n         Get Prompt Message\n         \"\"\"\n\n         error_list,prompt_message = utility.getAffectedObjects({'id':1},m)\n\n         \"\"\"\n         Deletion with all dependent objects\n         \"\"\"\n         error_list = utility.deleteObject({'id':1,'force_delete':True},m)\n\n         \"\"\"\n         Transferring Object dependencies\n         \"\"\"\n\n         source = m.objects.filter(id=1).first()\n         destination = m.objects.filter(id=2).first()\n         error_list = utility.updateObjectDependencies(source,destination)\n\n  * Output :\n        Prompt Message of `getAffectedObjects` function\n\n        [{'message': 'This object has been used in child 1 times.', 'model_name': 'child', 'Parent models': '', 'count': 1}] \n\n  * **Note** : \n       -  Every function returns the error_list, and hence only the operation is successful only if it is empty. \n       -  According to above Child/Parent Table `updateObjectDependencies` function will transafer object dependency from `id:1` to `id:2` so parent_id of `Bob` will become `2`. \n\n       - Updated Child Table: \n\n         | id          | Name       |  parent_id    |\n         | ----------- |  --------- |-------------- |\n         |  1          |  Bob       |     2         |\n         |  2          |  Jack      |     2         |\n\n## LimitationÂ :\n   * `updateObjectDependencies` will not work in case of unique constraint,one to one field in model.\n   * Please feel free to share your thoughts and feedback at info@draup.com .\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Draup-Zinnov/draup_django",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "draup-django",
    "package_url": "https://pypi.org/project/draup-django/",
    "platform": "",
    "project_url": "https://pypi.org/project/draup-django/",
    "project_urls": {
      "Homepage": "https://github.com/Draup-Zinnov/draup_django"
    },
    "release_url": "https://pypi.org/project/draup-django/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Utility - Draup Labs",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15636675,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37182b5d9824c98822d32dca22d778242ddb7fc5745ba47f3343a34aba76d9c6",
        "md5": "6ed8ae342e976ef4f51c2151973ffda6",
        "sha256": "1f1d32d65f46987baab0abc2144f8a8d070655ed667e327526eb0d94232f14fa"
      },
      "downloads": -1,
      "filename": "draup_django-1.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ed8ae342e976ef4f51c2151973ffda6",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 6145,
      "upload_time": "2018-12-31T09:10:26",
      "upload_time_iso_8601": "2018-12-31T09:10:26.452719Z",
      "url": "https://files.pythonhosted.org/packages/37/18/2b5d9824c98822d32dca22d778242ddb7fc5745ba47f3343a34aba76d9c6/draup_django-1.0.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3903e85d991e8280069de4f5a2fcffb7c4cca2b850a4fa7f6ae2339a1f88524",
        "md5": "35d7d5fba7b9d3f4068d4163f081a8a1",
        "sha256": "fce395b4735ac1fc7cd534a8e5fb6308265aec6da410b769fa7f5c5cc3ee2279"
      },
      "downloads": -1,
      "filename": "draup_django-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35d7d5fba7b9d3f4068d4163f081a8a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5276,
      "upload_time": "2018-12-31T09:10:28",
      "upload_time_iso_8601": "2018-12-31T09:10:28.461385Z",
      "url": "https://files.pythonhosted.org/packages/f3/90/3e85d991e8280069de4f5a2fcffb7c4cca2b850a4fa7f6ae2339a1f88524/draup_django-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}