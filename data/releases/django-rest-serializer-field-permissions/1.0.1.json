{
  "info": {
    "author": "The Intersis Foundation",
    "author_email": "dev@intersis.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "[![Build Status](https://travis-ci.org/InterSIS/django-rest-serializer-field-permissions.svg?branch=master)](https://travis-ci.org/InterSIS/django-rest-serializer-field-permissions)\n[![Code Climate](https://codeclimate.com/github/InterSIS/django-rest-serializer-field-permissions/badges/gpa.svg)](https://codeclimate.com/github/InterSIS/django-rest-serializer-field-permissions)\n[![Coverage Status](https://coveralls.io/repos/InterSIS/django-rest-serializer-field-permissions/badge.svg?branch=master&service=github)](https://coveralls.io/github/InterSIS/django-rest-serializer-field-permissions?branch=master)\n[![PyPI version](https://badge.fury.io/py/django-rest-serializer-field-permissions.svg)](http://badge.fury.io/py/django-rest-serializer-field-permissions)\n\ndjango-rest-serializer-field-permissions\n=============\n\nAdd field-by-field permission classes to your serializer fields that look like this:\n\n```python\n  class PersonSerializer(FieldPermissionSerializerMixin, LookupModelSerializer):\n\n      # Only allow authenticated users to retrieve family and given names\n      family_names = serializers.CharField(permission_classes=(IsAuthenticated(), ))\n      given_names = serializers.CharField(permission_classes=(IsAuthenticated(), ))\n\n      # Allow all users to retrieve nick name\n      nick_name = serializers.CharField(permission_classes=(AllowAll(), ))\n\n```\n\nComplete Tutorial\n----------------\n\nThis example builds on the example Django REST Framework API in the [DRF 3.8 documentation](https://github.com/encode/django-rest-framework/tree/2c992f09dada037904efe076029cd7355118d37f#installation). Please make sure that you have completed that tutorial before beginning this one.\n\nInstall this module into your environment:\n\n```\n  $ pip install django-rest-serializer-field-permissions\n```\n\nInstall this module into Django by adding it to your `INSTALLED_APPS`.\n```python\n  INSTALLED_APPS = (\n  ...\n      'rest_framework_serializer_field_permissions',\n  ...\n  )\n```\n\nNow you can add retrieve permissions to individual fields. You must import the modules and classes shown below, mix `FieldPermissionSerializerMixin` as the **leftmost** parent to your serializers, and then define your fields using the provided drop-in field classes.\n\nFor example, modify the root `urls.py` you created in the DRF tutorial with the following code:\n\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib.auth.models import User\nfrom rest_framework import routers, serializers, viewsets\n\nfrom rest_framework_serializer_field_permissions import fields                                      # <--\nfrom rest_framework_serializer_field_permissions.serializers import FieldPermissionSerializerMixin  # <--\nfrom rest_framework_serializer_field_permissions.permissions import IsAuthenticated                 # <--\n\n# Serializers define the API representation.\nclass UserSerializer(FieldPermissionSerializerMixin, serializers.HyperlinkedModelSerializer):       # <--\n    class Meta:\n        model = User\n        fields = ('url', 'username', 'email', 'is_staff')\n\n    email = fields.EmailField(permission_classes=(IsAuthenticated(), ))                             # <--\n\n# ViewSets define the view behavior.\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n\n# Routers provide an easy way of automatically determining the URL conf.\nrouter = routers.DefaultRouter()\nrouter.register(r'users', UserViewSet)\n\n# Wire up our API using automatic URL routing.\n# Additionally, we include login URLs for the browsable API.\nurlpatterns = [\n    url(r'^', include(router.urls)),\n    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework'))\n]\n\n```\n\nNow, only authenticated users will be able to retrieve your users' emails. You can confirm this by creating a superuser account, if you haven't already, and visiting [http://localhost:8000/users/](http://localhost:8000/users) as both an authenticated user and an unauthenticated visitor.\n\nAlternately, you could have restricted retrieve access to the `username` field with the code:\n\n```python\n    username = fields.CharField(permission_classes=(IsAuthenticated(), ))\n```\n\nYou can define your own permissions classes that operate on any aspect of the incoming `request`, and you can specify multiple r`permission_classes` on a field: all provided permissions must be satisfied for the visitor to retrieve the given field.\n\nUse\n---\n\n### Installation\n\nInstall the module in your Python distribution or virtualenv:\n\n    $ pip install django-rest-serializer-field-permissions\n\nAdd the application to your `INSTALLED_APPS`:\n\n```python\n  INSTALLED_APPS = (\n  ...\n  'rest_framework_serializer_field_permissions',\n  ...\n  )\n```\n\n### Adding Permissions\n\nIn your serializers, mix `FieldPermissionSerializerMixin` into your serializer classes, as the left-most parent. The fields\nprovided by `rest_framework_serializer_field_permissions.fields` accept `permission_classes` which operate in typical\nDRF fashion:\n\n```python\n  from rest_framework import serializers\n\n  from rest_framework_serializer_field_permissions import fields\n  from rest_framework_serializer_field_permissions.serializers import FieldPermissionSerializerMixin\n  from rest_framework_serializer_field_permissions.permissions import IsAuthenticated\n\n  class UserSerializer(FieldPermissionSerializerMixin, serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('url', 'username', 'email', 'is_staff')\n\n    email = fields.EmailField(permission_classes=(IsAuthenticated(), ))\n\n```\n\nThe `FieldPermissionSerializerMixin` may be mixed with any DRF serializer class, not just `ModelSerializer`.\n\nYou can write your own permission classes by sub-classing `BaseFieldPermission` in `permissions.py`.\n\nHow it Works\n------------\n\nThe `FieldPermissionSerializerMixin` provides its own `fields` property, which DRF serializers call to get a list\nof their own fields. The amended `fields` property checks for permission-bearing fields, forces them to check their\npermissions against the request, and scrubs from the return any fields which fail their permission checks.\n\nCompatibility\n-------------\n\nThis package is tested for compatibility against the following software versions:\n\n* Django Rest Framework 3.11\n* Django 2.1, 3.0\n* Python 3.7\n\nThis package may incidentally be compatible with other similar versions of the above software. See tox.ini for specific minor versions tested.\n\nAdditional Requirements\n-----------------------\n\nNone\n\nTodo\n----\n\n* Integration tests\n\nGetting Involved\n----------------\n\nFeel free to open pull requests or issues. [GitHub](https://github.com/InterSIS/django-rest-serializer-field-permissions) is the canonical location of this project.\n\nHere's the general sequence of events for contribution:\n\n1. Open an issue in the [issue tracker](https://github.com/InterSIS/django-rest-serializer-field-permissions/issues/).\n2. In any order:\n  * Submit a pull request with a **failing** test that demonstrates the issue/feature.\n  * Get acknowledgement/concurrence.\n3. Submit pull request that passes your test in (2). Include documentation, if appropriate.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://intersis.org/",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-serializer-field-permissions",
    "package_url": "https://pypi.org/project/django-rest-serializer-field-permissions/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-serializer-field-permissions/",
    "project_urls": {
      "Homepage": "https://intersis.org/"
    },
    "release_url": "https://pypi.org/project/django-rest-serializer-field-permissions/1.0.1/",
    "requires_dist": [
      "django (>=2.1)",
      "djangorestframework (~=3.0)"
    ],
    "requires_python": "",
    "summary": "Field-by-field serializer permissions for Django Rest Framework.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10447607,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2c6c6afeea2fd335c04d5bff3fc29813b80f9af72ef48fcd50eccf3e370e294",
        "md5": "1b17dd00467bc63b9663c6013a6a5b77",
        "sha256": "3adf63a13d7a6d624e147379a4bb4f7c30f80d85e2e89d2e97c32f4c23eff88c"
      },
      "downloads": -1,
      "filename": "django_rest_serializer_field_permissions-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b17dd00467bc63b9663c6013a6a5b77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19579,
      "upload_time": "2020-06-22T02:51:41",
      "upload_time_iso_8601": "2020-06-22T02:51:41.526142Z",
      "url": "https://files.pythonhosted.org/packages/f2/c6/c6afeea2fd335c04d5bff3fc29813b80f9af72ef48fcd50eccf3e370e294/django_rest_serializer_field_permissions-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "682611d0b513096b7913c550738ed29c4225e3741c32b3072f0d547fdefd7108",
        "md5": "6a51ed51fa9e97737fae3d75e0481c31",
        "sha256": "77945b6cf0e0bbed967f0e9cac2a429aa40625d24b9e21b95978988589aa52e7"
      },
      "downloads": -1,
      "filename": "django-rest-serializer-field-permissions-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6a51ed51fa9e97737fae3d75e0481c31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20929,
      "upload_time": "2020-06-22T02:51:42",
      "upload_time_iso_8601": "2020-06-22T02:51:42.854965Z",
      "url": "https://files.pythonhosted.org/packages/68/26/11d0b513096b7913c550738ed29c4225e3741c32b3072f0d547fdefd7108/django-rest-serializer-field-permissions-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}