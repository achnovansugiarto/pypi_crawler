{
  "info": {
    "author": "Suhail VS",
    "author_email": "suhailvs@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## Django Selectize\n\ndjango-selectize  is a Django app based on Selectize.js that help you to create Select and Multiselect widgets in Django forms.\n\n## Installation\n\nInstall `django-selectize`:\n\n    pip install django-selectize\n\n\n\nAdd `django-selectize` to your `INSTALLED_APPS` in your project settings.\n\n    INSTALLED_APPS = [\n        # other django apps...\n        'django_selectize',\n    ]\n\n## Quick Start\n\nHere is a quick example to get you started:\n\nWe have the following model:\n\n    # models.py\n    from django.conf import settings\n    from django.db import models\n\n    class Book(models.Model):\n        author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n        co_authors = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name='co_authored_by')\n\n\nNext, we create a model form with custom Selectize widgets.\n\n\t# forms.py\n\tfrom django import forms\n\tfrom django_selectize import forms as s2forms\n\n\tfrom . import models\n\n\tclass AuthorWidget(s2forms.SelectizeWidget):\n\t\tsearch_fields = [\n\t\t\t\"username__icontains\",\n\t\t\t\"email__icontains\",\n\t\t]\n\n\tclass CoAuthorsWidget(s2forms.SelectizeMultipleWidget):\n\t\tsearch_fields = [\n\t\t\t\"username__icontains\",\n\t\t\t\"email__icontains\",\n\t\t]\n\n\tclass BookForm(forms.ModelForm):\n\t\tclass Meta:\n\t\t\tmodel = models.Book\n\t\t\tfields = \"__all__\"\n\t\t\twidgets = {\n\t\t\t\t\"author\": AuthorWidget,\n\t\t\t\t\"co_authors\": CoAuthorsWidget,\n\t\t\t}\n\n\nA simple class based view will do, to render your form:\n\n    # views.py\n    from django.views import generic\n\n    from . import forms, models\n\n    class BookCreateView(generic.CreateView):\n        model = models.Book\n        form_class = forms.BookForm\n        success_url = \"/\"\n\nMake sure to add the view to your `urls.py`:\n\n    # urls.py\n    from django.urls import include, path\n    from . import views\n\n    urlpatterns = [\n        # ... other patterns\n        path(\"\", views.BookCreateView.as_view(), name=\"book-create\"),\n    ]\n\n\nFinally, we need a little template, `myapp/templates/myapp/book_form.html`\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <title>Create Book</title>\n        {{ form.media.css }}\n        <style>\n            input, select {width: 100%}\n        </style>\n    </head>\n    <body>\n        <h1>Create a new Book</h1>\n        <form method=\"POST\">\n            {% csrf_token %}\n            {{ form.as_p }}\n            <input type=\"submit\">\n        </form>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n        {{ form.media.js }}\n    </body>\n    </html>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/djangoer/django-selectize",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-selectize",
    "package_url": "https://pypi.org/project/django-selectize/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-selectize/",
    "project_urls": {
      "Bug Tracker": "https://github.com/djangoer/django-selectize/issues",
      "Homepage": "https://github.com/djangoer/django-selectize"
    },
    "release_url": "https://pypi.org/project/django-selectize/2.0/",
    "requires_dist": [
      "django (>=3.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "django-selectize is a Django app based on Selectize.js that help you to create Select and Multiselect widgets in Django forms.",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15796251,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fee7a80cd3fecc4417ddcd1a99c815f2bdd14b96e68f92de16e1da89f581cd2",
        "md5": "5ad451c6d5da68b7e383c5ce1406122a",
        "sha256": "cb50dca21db368e2484ffd1b96dc588fd8efe129fcb66a7572f9e4f9ef3db7a5"
      },
      "downloads": -1,
      "filename": "django_selectize-2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ad451c6d5da68b7e383c5ce1406122a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 123816,
      "upload_time": "2022-11-17T02:02:20",
      "upload_time_iso_8601": "2022-11-17T02:02:20.783080Z",
      "url": "https://files.pythonhosted.org/packages/6f/ee/7a80cd3fecc4417ddcd1a99c815f2bdd14b96e68f92de16e1da89f581cd2/django_selectize-2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e92b878ffd9269599bab113c5ad6416b04a1808a1e6c8c4d041c371cb4075dd8",
        "md5": "263d9f978f871bfeccef2c60c7c36a52",
        "sha256": "5a7c43fa2f66fb8c3826f10c3684c57ce07d5bd747d330393d947c95a3710077"
      },
      "downloads": -1,
      "filename": "django-selectize-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "263d9f978f871bfeccef2c60c7c36a52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 123891,
      "upload_time": "2022-11-17T02:02:23",
      "upload_time_iso_8601": "2022-11-17T02:02:23.153735Z",
      "url": "https://files.pythonhosted.org/packages/e9/2b/878ffd9269599bab113c5ad6416b04a1808a1e6c8c4d041c371cb4075dd8/django-selectize-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}