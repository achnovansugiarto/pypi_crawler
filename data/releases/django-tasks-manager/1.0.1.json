{
  "info": {
    "author": "AppSeed.us",
    "author_email": "support@appseed.us",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "# [Django Tasks Manager](https://appseed.us/developer-tools/django-tasks-manager/)\r\n\r\nA super simple **Django & Celery** integration - This library is actively supported by [AppSeed](https://appseed.us/).\r\n\r\n<br />\r\n\r\n> Features: \r\n\r\n- Create/Revoke `Celery Tasks`\r\n- `View LOGS` & Output\r\n- `Minimal Configuration`\r\n- Available [TASKS](https://github.com/app-generator/django-tasks-manager/blob/main/django_tm/tasks.py) (provided as starting samples)\r\n  - `users_in_db()` - List all registered users\r\n  - `execute_script()` - let users execute the [scripts](https://github.com/app-generator/django-tasks-manager/tree/main/django_tm/celery_scripts) defined in `CELERY_SCRIPTS_DIR` (CFG parameter)\r\n    - [check-db-health.py](https://github.com/app-generator/django-tasks-manager/blob/main/django_tm/celery_scripts/check-db-health.py) (sample)    \r\n    \r\n<br />    \r\n\r\n![Django Tasks Manager - View Running Tasks.](https://user-images.githubusercontent.com/51070104/195670211-a24f7d72-37c1-48fc-a842-ab45b4559ca0.jpg)\r\n\r\n<br />\r\n\r\n## How to use it\r\n\r\n<br />\r\n\r\n> **Install the package** via `PIP` \r\n\r\n```bash\r\n$ pip install django-tasks-manager\r\n// OR\r\n$ pip install git+https://github.com/app-generator/django-tasks-manager.git\r\n```\r\n\r\n<br />\r\n\r\n> **Include the new routing**\r\n\r\n```python\r\n# core/urls.py\r\n\r\nfrom django.urls import path, include     # <-- UPDATE: Add 'include' HELPER\r\n\r\nurlpatterns = [\r\n    ...\r\n    \r\n    path(\"\", include(\"django_tm.urls\")),  # <-- New Routes\r\n\r\n    ...\r\n]\r\n```\r\n\r\n<br />\r\n\r\n> Create **Scrips & LOGS** directories - The Recomended place is in the root of the project:\r\n\r\n```bash\r\n$ mkdir celery_scripts # Used in Settings -> CELERY_SCRIPTS_DIR\r\n$ mkdir celery_logs    # Used in Settings -> CELERY_SCRIPTS_DIR\r\n```\r\n\r\n- Make sure the user that executes the app has write permission. \r\n- Copy the [sample scripts](./django_tm/celery_scripts) in the scripts directory. \r\n- All scripts will be available in the UI, ready to be executed by the manager. \r\n\r\n<br />\r\n\r\n> **Update Configuration** Add `os` object import\r\n\r\n```python\r\nimport os # <-- NEW\r\n```\r\n\r\n<br />\r\n\r\n> **Update Configuration**: Include the new APPS\r\n\r\n```python\r\nINSTALLED_APPS = [\r\n    ...                  \r\n    'django_tm',              # Django Tasks Manager   # <-- NEW\r\n    'django_celery_results',  # Django Celery Results  # <-- NEW\r\n]\r\n```\r\n\r\n<br />\r\n\r\n> **Update Configuration**: Include the new templates \r\n\r\n```python\r\nTEMPLATE_DIR_TASKS = os.path.join(BASE_DIR, \"django_tm/templates\")     # <-- NEW\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',   \r\n        'DIRS': [TEMPLATE_DIR_TASKS],                                  # <-- Updated \r\n        'APP_DIRS': True,\r\n    },\r\n]\r\n```\r\n\r\n<br />\r\n\r\n> **Update Configuration**: New **CELERY_** Section\r\n\r\n```python\r\n\r\n#############################################################\r\n# Celery configurations\r\n# https://docs.celeryq.dev/en/stable/django/first-steps-with-django.html\r\n\r\n# !!!\r\n# BASE_DIR points to the ROOT of the project\r\n# Note: make sure you have 'os' object imported\r\n# !!!\r\n\r\n# !!!\r\n# BASE_DIR = os.path.dirname(os.path.dirname(__file__))\r\n# !!! \r\n\r\n# Working Directories required write permission\r\nCELERY_SCRIPTS_DIR        = os.path.join(BASE_DIR, \"celery_scripts\" )\r\nCELERY_LOGS_DIR           = os.path.join(BASE_DIR, \"celery_logs\"    )\r\n\r\nCELERY_BROKER_URL         = os.environ.get(\"CELERY_BROKER\", \"redis://localhost:6379\")\r\nCELERY_RESULT_BACKEND     = os.environ.get(\"CELERY_BROKER\", \"redis://localhost:6379\")\r\n\r\nCELERY_TASK_TRACK_STARTED = True\r\nCELERY_TASK_TIME_LIMIT    = 30 * 60\r\nCELERY_CACHE_BACKEND      = \"django-cache\"\r\nCELERY_RESULT_BACKEND     = \"django-db\"\r\nCELERY_RESULT_EXTENDED    = True\r\nCELERY_RESULT_EXPIRES     = 60*60*24*30 # Results expire after 1 month\r\nCELERY_ACCEPT_CONTENT     = [\"json\"]\r\nCELERY_TASK_SERIALIZER    = 'json'\r\nCELERY_RESULT_SERIALIZER  = 'json'\r\n\r\n#############################################################\r\n#############################################################\r\n\r\n```\r\n\r\n<br />\r\n\r\n\r\n> **Start the App** \r\n\r\n```bash\r\n$ # Set up the database\r\n$ python manage.py makemigrations\r\n$ python manage.py migrate\r\n$\r\n$ # Create the superuser\r\n$ python manage.py createsuperuser\r\n$\r\n$ # Start the application (development mode)\r\n$ python manage.py runserver # default port 8000\r\n```\r\n\r\n- **Authenticate** as `superuser` \r\n- Access the `Tasks` page: `http://127.0.0.1:8000/tasks`\r\n\r\n<br />\r\n\r\n> **Start the Celery Manager** (another terminal) & **Update Environment** \r\n\r\nExport `DJANGO_SETTINGS_MODULE` using the value provided in `manage.py`\r\n\r\n```bash\r\n$ export DJANGO_SETTINGS_MODULE=cfg.settings  \r\n```\r\n\r\nThe value used export should be taken from `manage.py`:\r\n\r\n```python\r\ndef main():\r\n    \r\n    \"\"\"Run administrative tasks.\"\"\"\r\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"cfg.settings\")  # <-- VALUE to be exported\r\n\r\n    try:\r\n        from django.core.management import execute_from_command_line\r\n    except ImportError as exc:\r\n        ...\r\n```\r\n\r\n<br />\r\n\r\n**Note**: `Redis` server is expected on port `6379` (default). In case Redis runs on other `PORT`, please update the configuration: `CELERY_BROKER_URL` and `CELERY_RESULT_BACKEND`.\r\n\r\n```bash\r\n$ celery --app=django_tm.celery.app worker --loglevel=info \r\n``` \r\n\r\n<br />\r\n\r\n## Screens\r\n\r\n> `View all tasks`\r\n\r\n![Django Tasks Manager - View All Tasks.](https://user-images.githubusercontent.com/51070104/195669853-677e887e-f8b2-4b56-bcf3-f81d98b175b0.jpg)\r\n\r\n<br />\r\n\r\n> `View Task LOG`\r\n\r\n![Django Tasks Manager - View Task LOG.](https://user-images.githubusercontent.com/51070104/195669981-c64e3d13-1d83-496a-b527-cade9cda2cd2.jpg)\r\n\r\n<br /> \r\n\r\n## Links & Resources\r\n\r\n- Free [Support](https://appseed.us/support/) via Email and Discord\r\n- [Django Tasks Manager](https://github.com/app-generator/sample-django-tasks-manager) - `free sample` that explains:\r\n  - `Project Creation` (minimal files added)\r\n  - `Install` & Generate `Django` Core\r\n  - Install `Django-TM` (this package)\r\n  - `Update Configuration`\r\n  - `Start the app`\r\n  - Use the `Tasks Manager`\r\n\r\n<br />\r\n\r\n---\r\n[Django Tasks Manager](https://appseed.us/developer-tools/django-tasks-manager/) - Open-source library provided by **[AppSeed](https://appseed.us/)**\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/app-generator/django-tasks-manager",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-tasks-manager",
    "package_url": "https://pypi.org/project/django-tasks-manager/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-tasks-manager/",
    "project_urls": {
      "Homepage": "https://github.com/app-generator/django-tasks-manager"
    },
    "release_url": "https://pypi.org/project/django-tasks-manager/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple Django & celery Integration",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15606073,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4ee444a5bcf6f6e2472ad8cb055168250992db4ee62ba9cc4aa0b5a95298822",
        "md5": "38ef3aeebf1856a7707f07979a4d7951",
        "sha256": "aded173cb1968591d5d23a7c7ad0f306041328760ddc39312ab5d1b3f8674dff"
      },
      "downloads": -1,
      "filename": "django-tasks-manager-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "38ef3aeebf1856a7707f07979a4d7951",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13040,
      "upload_time": "2022-11-01T04:03:05",
      "upload_time_iso_8601": "2022-11-01T04:03:05.125143Z",
      "url": "https://files.pythonhosted.org/packages/a4/ee/444a5bcf6f6e2472ad8cb055168250992db4ee62ba9cc4aa0b5a95298822/django-tasks-manager-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}