{
  "info": {
    "author": "Pelion",
    "author_email": "pdm-support@pelion.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Device Management manifest CLI tool\n\nThis document explains how to install and use the manifest tool.\n\n- [Manifest tool overview](#manifest-tool-overview)\n- [Installing the manifest tool](#installing-the-manifest-tool)\n- [Using the manifest tool](#using-the-manifest-tool)\n- [Developer workflow example](#developer-workflow-example)\n- [Upgrading from manifest tool v1.5.2 and lower](#upgrading-from-manifest-tool-v152-and-lower)\n- [Troubleshooting](#troubleshooting)\n\n<span class=\"notes\">**Note:** Please see the [changelog](./changelog.md) for the list of all changes between release versions.</span>\n\n## Manifest tool overview\nDevice Management lets you perform Firmware Over-the-Air (FOTA) updates\non managed devices.\n\nOn the device side, the firmware update process begins when the device\nreceives an update manifest. The OEM (original equipment manufacturer)\nor update author cryptographically signs the manifest with a private key\npaired to a public key that exists on the device, enabling the device to\nauthenticate the manifest before it accepts the firmware update.\n\nDevice Management supports:\n\n* Full updates - Deliver new firmware and install it on the device.\n* Delta updates - The manifest tool executes a diff algorithm that\n  produces a small delta patch file. The client constructs a new\n  firmware image based on the delta patch file and the firmware\n  currently present on the device. This technique saves traffic\n  bandwidth.\n\nThe `manifest-tool` Python package includes these command line tools:\n\n- [`manifest-tool`](#manifest-tool) - Creates manifest files.\n- [`manifest-delta-tool`](#manifest-delta-tool) - Generates delta patch\n  files.\n- [`manifest-dev-tool`](#manifest-dev-tool) - A developer tool for\n  running a simplified update campaign.\n\n## Installing the manifest tool\n\nWe recommend installing the `manifest-tool` Python package in a isolated\n[Python virtual environment](https://virtualenv.pypa.io).\n\n\n### Installing the manifest tool from [PyPi](https://pypi.org/project/manifest-tool/)\n\n**Prerequisites:**\n\n* [Python 3.6 or higher](https://www.python.org/downloads/).\n* [pip (Python Package Installer)](https://pip.pypa.io/en/stable/).\n* Internet connectivity\n\n```\npip install manifest-tool\n```\n\n### Installing from local source tree\n\n**Prerequisites:**\n\n* [Python 3.6 or later](https://www.python.org/downloads/).\n* [pip (Python Package Installer)](https://pip.pypa.io/en/stable/).\n* Native toolchain:\n    * GCC/Clang for Linux/MacOS.\n    * [Microsoft Build Tools for Visual Studio 2019](https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2019) for Windows or different version sutibule to your Python version as describe [here](https://wiki.python.org/moin/WindowsCompilers).\n\n```\n$ git clone https://github.com/PelionIoT/manifest-tool.git\n$ pip install <path to manifest-tool's local source tree>\n```\n\n<span class=\"notes\">**Note:** Run `$ pip install --editable <manifest-tool>` to install the package in Python setuptools development mode. For more information, please see the [setuptools development mode documentation](https://setuptools.readthedocs.io/en/latest/setuptools.html#development-mode).</span>\n\n\n## Using the manifest tool\n\nThis section explains how to use the CLI tools included in the\n`manifest-tool` Python package:\n\n- [manifest-tool](#manifest-tool)\n- [manifest-delta-tool](#manifest-delta-tool)\n- [manifest-dev-tool](#manifest-dev-tool)\n\n### manifest-tool\n\n`manifest-tool` commands:\n\n- [`manifest-tool create`](#manifest-tool-create) - Creates manifests.\n- [`manifest-tool create-v1`](#manifest-tool-create-v1) - Creates V1\n  schema-compatible manifests.\n- [`manifest-tool parse`](#manifest-tool-parse) - Parses and verifies\n  existing manifest files.\n- [`manifest-tool schema`](#manifest-tool-schema) - Shows bundled input\n  validation schema.\n- [`manifest-tool public-key`](#manifest-tool-public-key) - Generates an\n  uncompressed public key.\n\n<span class=\"notes\">**Note:** Run `manifest-tool --help` for more information about all commands, or `manifest-tool <command> --help` for more information about a specific command, including its parameters and how to use them.</span>\n\n#### `manifest-tool create`\n\nCreates a manifest. The manifest tool receives a configuration file\ndescribing the update type.\n\n**Prerequisites**\n\n* An update private key and public key certificate.\n\n    Keep the private key secret because it allows installing new\n    firmware images on your devices.\n\n    Provision the public key to the device.\n\n    * To generate a private key, run:\n\n        ```shell\n        $ openssl ecparam -genkey -name prime256v1 -outform PEM -out my.priv.key.pem\n        ```\n\n  *   To generate a public key in uncompressed point format (X9.62), use\n      the [`manifest-tool public-key`](#manifest-tool-public-key)\n      command.\n\n* Upload the new firmware image to a server that your devices can access.\n\n* A configuration file in JSON or YAML format.\n\n    Configuration file format:\n    ```yaml\n    vendor:  # One of \"domain\" or \"vendor-id\" fields are expected.\n      domain: pelion.com  # FW owner domain. Used to generate a vendor UUID.\n                          # Expected to include a dot (\".\").\n      # OR\n      vendor-id: fa6b4a53d5ad5fdfbe9de663e4d41ffe  # Valid vendor UUID.\n      custom-data-path: my.custom-data.bin # Vendor's custom data file\n                                           #  to be passed to the target devices.\n                                           # Only relevant for manifest v3 format.\n\n    device:  # One of \"model-name\" or \"class-id\" fields are expected\n      model-name: Smart Slippers  # A device model name. Used to generate a class UUID.\n      # OR\n      class-id: 327c726ac6e54f7a82fbf1d3beda80f0  # Valid device-class UUID.\n\n    priority: 1  # Update priority as will be passed to authorization callback.\n                 # Implemented by application on a device side.\n\n    payload:\n      url: http://some-url.com/files?id=1234  # Address from which the device downloads\n                                              #  the candidate payload.\n                                              # Obtained by clicking \"Copy HTTP URL\" on \n                                              # the Firmware image details screen \n                                              # in Device Management Portal,\n                                              #  or by copying the `datafile` attribute.\n      file-path: ./my.fw.bin  # Local path to the candidate payload file\n                              #  or the delta patch file.\n                              # Used for digest calculation & signing.\n      format: raw-binary  # One of following:\n                          #  raw-binary       - full image update campaigns.\n                          #  arm-patch-stream - delta patch update campaigns.\n                          # For manifest v3 only:\n                          #  encrypted-raw    - full image update with encrypted image.\n      encrypted:  # Required for 'encrypted-raw' format.\n        digest: 3725565932eb5b9fbd5767a3a534cb6a1a87813e0b4a76deacb9b36695c71307\n                      # The encrypted payload digest.\n                      # Obtained by copying the `encrypted_datafile_checksum` attribute\n                      # from the Firmware image details screen in Device Management Portal.\n        size: 471304  # The encrypted payload size.\n                      # Obtained by copying the `encrypted_datafile_size` attribute\n                      # from the Firmware image details screen in Device Management Portal.\n\n    component: MAIN  # [Optional] The name of the component to be updated\n                     #  only relevant for manifest v3 format.\n                     # Set to \"MAIN\" by default for updating\n                     #  the main application image.\n\n    sign-image: True  # [Optional] Boolean field accepting True/False values.\n                      # Only relevant for manifest v3 format.\n                      # When Set to True - 64 Bytes raw signature over the installed\n                      #  image will be added to the manifest.\n                      # Image signature can be used for cases when device bootloader\n                      #  expects to work with signed images (e.g. secure-boot).\n                      # Set to False by default.\n    ```\n\n**Example**\n\n* For this configuration file, called `my.config.yaml`:\n\n    ```yaml\n    vendor:\n      domain: pelion.com\n    device:\n      model-name: Smart Flip-flops\n    priority: 1\n    payload:\n      url: http://some-url.com/files?id=1234\n      file-path: ./my.fw.bin\n      format: raw-binary\n    component: MAIN\n    ```\n\n* Run:\n\n    ```shell\n    manifest-tool create \\\n        --config my.config.yaml \\\n        --key my.priv.key.pem \\\n        --fw-version 1.2.3 \\\n        --output my.manifest.bin\n    ```\n\n<span class=\"notes\">**Note:** The value of `--fw-version` refers to the firmware version of the component to be updated. The value can be between 0.0.1 and 999.999.999 and must be greater than the firmware version currently installed on the device.</span>\n\n#### `manifest-tool create-v1`\n\nOlder versions of Device Management update client use manifest\nschema V1 and assume the public key is packaged in a x.509 certificate.\n\n**Prerequisites**\n\n* An update private key and public key certificate.\n\n    Keep the private key secret because it allows installing new\n    firmware images on your devices.\n\n    Provision the public key to the device.\n\n    * To generate a private key, run:\n\n        ```shell\n        $ openssl ecparam -genkey -name prime256v1 -outform PEM -out my.priv.key.pem\n        ```\n    * To generate a public key x.509 certificate, run:\n\n        ```shell\n        $ openssl req -new -sha256 \\\n              -key my.priv.key.pem \\\n              -inform PEM \\\n              -out my.csr.csr\n        $ openssl req -x509 -sha256 \\\n              -days 7300 \\\n              -key my.priv.key.pem \\\n              -in my.csr.csr \\\n              -outform der \\\n              -out my.x509.certificate.der\n        ```\n\n        <span class=\"notes\">**Note:** Device Management update client treats the x.509 certificate as a container **ONLY** and does not enforce its validity - expiration, chain of trust, and so on - although it may be validated by other Device Management components. For production, we recommend creating a certificate with a lifespan greater than the product's expected lifespan (for example, 20 years).</span>\n\n* Upload the new firmware binary to a server that your devices can access, and obtain the URL for the uploaded firmware binary.\n\n* A configuration file in JSON or YAML format (same as [`manifest-tool create`](#manifest-tool-create)).\n\n**Example**\n\n* Run:\n\n    ```shell\n    manifest-tool create-v1 \\\n        --config my.config.yaml \\\n        --key my.priv.key.pem \\\n        --update-certificate my.x509.certificate.der \\\n        --output my.manifest.bin\n    ```\n\n#### `manifest-tool parse`\n\nParses and validates existing manifest files.\n\n**Prerequisites**\n\n* A manifest file (in our example `my.manifest.bin`).\n* Optionally, an update private key or public key or certificate to\n  validate the manifest signature.\n\n**Example**\n\n```shell\n$ manifest-tool parse \\\n  my.manifest.bin \\\n  --private-key my.priv.key.pem\n----- Manifest dump start -----\nManifest:\nvendor-id=fa6b4a53d5ad5fdfbe9de663e4d41ffe\nclass-id=3da0f138173350eba6f665498eace1b1\nupdate-priority=15\npayload-version=1572372313\npayload-digest=b5f07d6c646a7c014cc8c03d2c9caf066bd29006f1356eaeaf13b7d889d3502b\npayload-size=512\npayload-uri=https://my.server.com/some.file?new=1\npayload-format=raw-binary\n----- Manifest dump end -----\n2019-10-29 20:05:13,478 INFO Signature verified!\n```\n\n#### `manifest-tool schema`\n\nPrints the input validation JSON schema bundled with the current tool.\nThe manifest tool contains an input validation schema, which you can use\nas a self-documenting tool to better understand and validate the\nmanifest tool input configuration.\n\n**Example**\n\n```shell\n$ manifest-tool schema\n```\n\n#### `manifest-tool public-key`\n\nCreate a public key file in uncompressed point format. Provisioning this file to the device enables the device to verify the manifest signature.\n\n**Example**\n\n```shell\nmanifest-tool public-key my.priv.key.pem --out my.pub.key.bin\n```\n\n### manifest-delta-tool\n\nUse this tool to generate delta patch files for delta updates.\n\nRun `manifest-delta-tool --help` for more information about usage and\narguments.\n\n**Prerequisites**\n\n* The firmware currently installed on the device and the updated\n  firmware image. Required for calculating the delta patch.\n\n**Example**\n\n```shell\n$ manifest-delta-tool -c current_fw.bin -n new_fw.bin -o delta-patch.bin\n```\n\n<span class=\"notes\">**Note 1:** Additional configuration file with same name but with `.yaml` extension will be generated. Both files are required by the manifest-tool. Only the output file specified by `--output` argument should be uploaded to Pelion storage.</span>\n\n<span class=\"notes\">**Note 2:** Compression block size has a direct impact on the amount of memory required by the device receiving the update. The device requires twice the amount of RAM in runtime to decompress and apply the patch.</span>\n\n<span class=\"notes\">**Note 3:** Compression block must be aligned with network (COAP/HTTP) buffer size used for download. Misalignment in sizes may result in device failure to process the delta patch file.</span>\n\n### manifest-dev-tool\n\n`manifest-dev-tool` is a developer tool for running a simplified update\ncampaign.\n\nUse `manifest-dev-tool` for development flows only.\n\n`manifest-dev-tool` commands:\n- [`manifest-dev-tool init`](#manifest-dev-tool-init) - Initializes the\n  developer environment.\n- [`manifest-dev-tool create`](#manifest-dev-tool-create) - Simplified\n  tool for creating manifests.\n- [`manifest-dev-tool create-v1`](#manifest-dev-tool-create-v1) -\n  Simplified tool for creating manifests using the V1 schema.\n- [`manifest-dev-tool update`](#manifest-dev-tool-update) - Lets you\n  perform end-to-end tests without leaving the command shell.\n- [`manifest-dev-tool update-v1`](#manifest-dev-tool-update-v1) - Lets\n  you perform end-to-end tests without leaving the command shell using a\n  V1-schema manifest.\n\n<span class=\"notes\">**Note:** Run `manifest-dev-tool --help` for more information about all commands, or `manifest-dev-tool <command> --help` for more information about a specific command, including its parameters and how to use them.</span>\n\n#### `manifest-dev-tool init`\n\nInitializes the developer environment.\n\n* Generates credentials and a configuration file in the tool's cache directory:\n    - `dev.key.pem` - An update private key.\n    - `dev.cert.der` - An update public key certificate.\n    - `dev.cfg.yaml` - Developer configuration file.\n\n    The default cache directory name is `.manifest-dev-tool`.\n\n* Generates an update resource C file with symbols that allow\n  bypassing the provisioning step in the developer flow. Default name is `update_default_resources.c`.\n\n<span class=\"notes\">**Note 1:** Use the credentials generated by `manifest-dev-tool init` in the development stage only.</span>\n\n<span class=\"notes\"> **Note 2:** You can keep your access key in the `.pelion-dev-presets.yaml` file in your home directory and pass it using the `--gw-preset` option.</span>\n\n  **Example of `.pelion-dev-presets.yaml`:**\n  ```yaml\n  usa:\n      host: https://api.us-east-1.mbedcloud.com\n      access_key: ak_SOME_VERY_SECRET_ACCESS_KEY\n  japan:\n      host: https://api.ap-northeast-1.mbedcloud.com\n      access_key: ak_SOME_OTHER_VERY_SECRET_ACCESS_KEY\n  ```\n\n  To obtain an access key and API host URL, in Device Management Portal, click **Access Management** > **Access keys** > **New access key**. Limit access to the `.pelion-dev-presets.yaml` file to your user only.\n\n**Example**\n\n```shell\nmanifest-dev-tool init --access-key [Device Management access key]\n```\nOr\n```shell\nmanifest-dev-tool init --gw-preset usa\n```\n\n#### `manifest-dev-tool create`\n\nCreates developer manifest files without requiring an input\nconfiguration file.\n\n**Example**\n\n```shell\nmanifest-dev-tool create \\\n    --payload-url http://test.pdmc.pelion.com?fileId=1256 \\\n    --payload-path new_fw.bin \\\n    --fw-version 1.2.3 \\\n    --component-name MAIN \\\n    --output update-manifest.bin\n```\n\n<span class=\"notes\">**Note:** To run a delta update, specifiy the [`manifest-delta-tool`](#manifest-delta-tool) output in the `--payload-path` argument and make sure the `.yaml` output with the same name sit next to that output file.</span>\n\n<span class=\"notes\">**Note:** Add the `--sign-image` argument to update a device with a secure bootloader, which requires an image signature.</span>\n\n#### `manifest-dev-tool create-v1`\n\nCreates developer manifest files in v1 format without requiring an input\nconfiguration file.\n\n**Example**\n\n```shell\nmanifest-dev-tool create-v1 \\\n    --payload-url http://test.pdmc.pelion.com?fileId=1256 \\\n    --payload-path new-fw.bin \\\n    --output update-manifest.bin\n```\n\n<span class=\"notes\">**Note:** To run a delta update, specifiy the [`manifest-delta-tool`](#manifest-delta-tool) output in the `--payload-path` argument and make sure the `.yaml` output with the same name sit next to that output file.</span>\n\n#### `manifest-dev-tool update`\n\nSame as [`manifest-dev-tool create`](#manifest-dev-tool-create) but also\nlets you interact with Device Management to run a full update\ncampaign.\n\nThe command:\n\n1. Uploads the payload to Device Management and obtains the URL.\n1. Creates a manifest file with the URL from the previous step and\n   obtains a manifest URL.\n1. Creates an update campaign with the manifest URL from the previous\n   step.\n1. Starts the update campaign if you pass the `--start-campaign` or\n   `--wait-for-completion` argument.\n1. If you pass the `--wait-for-completion` argument, the tool waits for\n   campaign completion for the time period specified by `--timeout` or\n   until the campaign reaches one of its terminating states.\n1. If you pass the `--wait-for-completion` argument without the\n   `--no-cleanup` flag, the tool removes the uploaded test resources\n   from Device Management before exiting.\n\n**Example**\n\n  ```shell\n  manifest-dev-tool update \\\n      --payload-path my_new_fw.bin \\\n      --fw-version 1.2.3 \\\n      --wait-for-completion\n  ```\n\n<span class=\"notes\">**Note:** The tool creates the device filter for the campaign based on the unique `class-id` and `vendor-id` fields the [`manifest-dev-tool init`](#manifest-dev-tool-init) command generates.</span>\n\n#### `manifest-dev-tool update-v1`\n\nSame as [`manifest-dev-tool update`](#manifest-dev-tool-update) with a\nv1-format manifest.\n\n**Example**\n\n  ```shell\n  manifest-dev-tool update-v1 \\\n      --payload-path my_new_fw.bin \\\n      --wait-for-completion\n  ```\n\n### Developer workflow example for mbed-os devices\n\n1. Clone the https://github.com/PelionIoT/mbed-cloud-client-example\n   repository.\n1. From within the repository, execute:\n\n    ```\n    manifest-dev-tool init -a $MY_ACCESS_KEY\n    ```\n    The tool initializes the developer environment and generates a `update_default_resources.c` file.\n1. Build the firmware image for your device.\n1. Save the `mbed-cloud-client-example_update.bin` file.\n1. Flash the `mbed-cloud-client-example.bin` to the device.\n1. Wait for the device to register in the cloud.\n1. Make some changes to the source of the firmware application.\n1. Build the firmware update candidate for your device.\n    - To test delta update, create delta patch:\n      ```\n      manifest-delta-tool -c <original mbed-cloud-client-example_update.bin> -n <new mbed-cloud-client-example_update.bin> -o delta.bin\n      ```\n1. Issue an update campaign:\n\n    ```\n    manifest-dev-tool update --payload-path <new mbed-cloud-client-example_update.bin or delta.bin> --wait-for-completion\n    ```\n\n## Upgrading from manifest tool v1.5.2 and lower\n\nManifest tool v2.0.0 is not compatible with previous versions.\n\nThis section explains how to migrate your existing configuration and credentials for use with manifest-tool version 2.2.0 and higher.\n\n* Initializing the development environment using previously-defined configuration and credentials\n\n    Run the [`manifest-dev-tool init`](#manifest-dev-tool-init) command as follow:\n\n    ```\n    manifest-dev-tool init --api-url <API URL> \\\n                           --access-key <Access key> \\\n                           --vendor-id <Vendor ID> \\\n                           --class-id <Class ID> \\\n                           --key <private key path> \\\n                           --update-certificate <certificate path>\n    ```\n    Where `<API URL>` and `<Access key>` are the values from the previous `.mbed_cloud_config.json` file, `<Vendor ID>` and `<Class ID>` are the values from the previous `.manifest_tool.json` file, and `<private key path>` and `<certificate path>` are the paths to your private key and update certificate, respectively.\n\n    When the command finishes successfully, you can remove the previously-created files.\n\n* Adapting the create manifest configuration\n\n    If you use `manifest-tool` (not `manifest-dev-tool`), create a new configuration file, as described in [manifest-tool create](#manifest-tool-create), and copy the relevant information from your existing `.manifest_tool.json` file.\n\n## Troubleshooting\n\n* **Getting more context on unexpected errors.**  \n\n   When the tool exits with a non-zero return code, it may be helpful to\n   get more context on the failure.\n\n   **Solution:** execute the tool with the `--debug` flag at the top\n   argument parser level. For example:\n\n   ```\n   manifest-dev-tool --debug update\n   ```\n\n* **`manifest-dev-tool update ... --wait-for-completion` takes longer than expected.**\n\n   `manifest-dev-tool update` creates a unique `class-id` and\n   `vendor-id` generated per developer. Device Management expects a\n   single device with these properties to connect to Device Management.\n\n   In rare cases, during development, a device's `device-id` might\n   change after you re-flash it. This may result in two devices having\n   the same `class-id` and `vendor-id` in Device Management. In\n   this scenario, Device Management will detect both devices and try to\n   update them both, although one of them no longer exists\n\n   **Solution:** Manually delete the unwanted device from Device\n   Management. Alternatively, run `manifest-dev-tool update ...\n   --wait-for-completion` with `--device-id DEVICE_ID` to override the\n   default campaign filter and target a specific device by its ID.\n\n* **Update fails and `manifest-dev-tool update ...\n  --wait-for-completion` cleans all resources.**\n\n   You might want to leave the resources (firmware image candidate,\n   update manifest and update campaign) on a service for further\n   investigation/retry.\n\n    **Solution:** Execute `manifest-dev-tool update ...\n    --wait-for-completion` with the `--no-cleanup` flag.\n\n* **Device does not support this manifest schema**\n\n   **Solution:** Your device does not support the created manifest schema. Switch from the `create` or` update` command to the `create-v1` or` update-v1` command respectively and vice versa.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PelionIoT/manifest-tool",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manifest-tool",
    "package_url": "https://pypi.org/project/manifest-tool/",
    "platform": "",
    "project_url": "https://pypi.org/project/manifest-tool/",
    "project_urls": {
      "Homepage": "https://github.com/PelionIoT/manifest-tool"
    },
    "release_url": "https://pypi.org/project/manifest-tool/2.3.0/",
    "requires_dist": [
      "PyYAML (<=5.4.1,>=4.2b1)",
      "asn1ate (<=0.6.0,>=0.5)",
      "cryptography (<=3.4.7,>=2.5)",
      "jsonschema (<=3.2.0,>=2.6.0)",
      "pyasn1 (<=0.4.8,>=0.3.1)",
      "requests (<=2.25.1,>=2.20.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Tool/lib to create and parse manifests",
    "version": "2.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16315007,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aed9a8c9a93398e979f12761342d912b2a4d48d81f0c32a403c9aeb79a4ae31b",
        "md5": "57f2f1aee5ba2a73823ed27d8b680bb2",
        "sha256": "5c52f9450321df0ba3811fdbfbedcbbbf1762965abbf030cd4529d7784587fbc"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "57f2f1aee5ba2a73823ed27d8b680bb2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 96700,
      "upload_time": "2021-07-21T08:18:46",
      "upload_time_iso_8601": "2021-07-21T08:18:46.129526Z",
      "url": "https://files.pythonhosted.org/packages/ae/d9/a8c9a93398e979f12761342d912b2a4d48d81f0c32a403c9aeb79a4ae31b/manifest_tool-2.3.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "023f03ef6e13882bf586cc81b22659a6a5465cc37ed71ad9871676d20d5c2eeb",
        "md5": "a2d095286400679a8765ea066c99dddb",
        "sha256": "debc2cc1fc3d4354d46d09b2f8dccb4559210571628f71a9c2ef48a7c7b05935"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a2d095286400679a8765ea066c99dddb",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 224140,
      "upload_time": "2021-07-21T08:18:47",
      "upload_time_iso_8601": "2021-07-21T08:18:47.944579Z",
      "url": "https://files.pythonhosted.org/packages/02/3f/03ef6e13882bf586cc81b22659a6a5465cc37ed71ad9871676d20d5c2eeb/manifest_tool-2.3.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "826fc21a16205f1affdea1242de7aa3b743f87a8d6efc6ac6dd9e39e2fb88fa4",
        "md5": "2a9d50ae15d51ab9ffb8983e5e257778",
        "sha256": "c2e86a2becde1ddc1276ee634070b4077d74468436c0e2b328309aa91af41c6e"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2a9d50ae15d51ab9ffb8983e5e257778",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 332301,
      "upload_time": "2021-07-21T08:18:50",
      "upload_time_iso_8601": "2021-07-21T08:18:50.310910Z",
      "url": "https://files.pythonhosted.org/packages/82/6f/c21a16205f1affdea1242de7aa3b743f87a8d6efc6ac6dd9e39e2fb88fa4/manifest_tool-2.3.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ae9f29662bfbff157278d5774a0dcffa07806be8fed6295da27b220ab8e936e",
        "md5": "c1607332f9f536bb6cac305b3c2d8d54",
        "sha256": "ed03976c05e5b12957f3cf05750e22c82de8ca6a88408204b7a70d8c538e523c"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c1607332f9f536bb6cac305b3c2d8d54",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 335737,
      "upload_time": "2021-07-21T08:18:53",
      "upload_time_iso_8601": "2021-07-21T08:18:53.223447Z",
      "url": "https://files.pythonhosted.org/packages/4a/e9/f29662bfbff157278d5774a0dcffa07806be8fed6295da27b220ab8e936e/manifest_tool-2.3.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b48e6ee063feae5088499540e429b951243ae01217408718c85dd815d48e2616",
        "md5": "efd5b6582c07d87f05967bf54e209f94",
        "sha256": "3fba3d69185ec6352ac937c4fa950dff3b7df25b31cb4a7beb00a8b5d8079da7"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "efd5b6582c07d87f05967bf54e209f94",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 217101,
      "upload_time": "2021-07-21T08:18:55",
      "upload_time_iso_8601": "2021-07-21T08:18:55.462779Z",
      "url": "https://files.pythonhosted.org/packages/b4/8e/6ee063feae5088499540e429b951243ae01217408718c85dd815d48e2616/manifest_tool-2.3.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f4499faa2ad2a50fadd0f9905b1b70d5f06fa88c11a92b6a1b90604bac83ec4",
        "md5": "cc12e0f1f868aad75ad28bbfa4aed89b",
        "sha256": "9082ed51a3b3083b8cf929593bb2e187d0ecdf55c900dec51c6aad15aa3006a7"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-win32.whl",
      "has_sig": false,
      "md5_digest": "cc12e0f1f868aad75ad28bbfa4aed89b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 78253,
      "upload_time": "2021-07-21T08:18:56",
      "upload_time_iso_8601": "2021-07-21T08:18:56.856147Z",
      "url": "https://files.pythonhosted.org/packages/2f/44/99faa2ad2a50fadd0f9905b1b70d5f06fa88c11a92b6a1b90604bac83ec4/manifest_tool-2.3.0-cp36-cp36m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "070ce8d3f3d38282a7f97e0e0924a3051e3aa6c1fa581f75e5a4510935f817a0",
        "md5": "8036ef9de3f5313ac309da91de23a397",
        "sha256": "4667c9f7eaf673f0d117a26e4cd6374fbf3dd5279b2b49d063d0c95a6bfb1fb2"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "8036ef9de3f5313ac309da91de23a397",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.0",
      "size": 77320,
      "upload_time": "2021-07-21T08:18:58",
      "upload_time_iso_8601": "2021-07-21T08:18:58.224122Z",
      "url": "https://files.pythonhosted.org/packages/07/0c/e8d3f3d38282a7f97e0e0924a3051e3aa6c1fa581f75e5a4510935f817a0/manifest_tool-2.3.0-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1050e3ae0852942eb73d0f394502dc2b76505e09ef57d03b40c4c21da560ea0a",
        "md5": "8d3cd6cd885e09ba25f64bb9a0ad2cf2",
        "sha256": "cfbe55a8c9337d84ccf8e36d91878ad0620333cf747b597cc76f336b1c43b15b"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8d3cd6cd885e09ba25f64bb9a0ad2cf2",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 96696,
      "upload_time": "2021-07-21T08:18:59",
      "upload_time_iso_8601": "2021-07-21T08:18:59.563452Z",
      "url": "https://files.pythonhosted.org/packages/10/50/e3ae0852942eb73d0f394502dc2b76505e09ef57d03b40c4c21da560ea0a/manifest_tool-2.3.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80a4341c4c6b8c72de7df17c23643c4739694e6186ea67cd62c92104be302e24",
        "md5": "2b720a9ba50fa593925847b6c5f15202",
        "sha256": "910dbbdb3204e673f1707217304eab1805de238f24bf09f81ec1c698f0423192"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2b720a9ba50fa593925847b6c5f15202",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 225192,
      "upload_time": "2021-07-21T08:19:01",
      "upload_time_iso_8601": "2021-07-21T08:19:01.410778Z",
      "url": "https://files.pythonhosted.org/packages/80/a4/341c4c6b8c72de7df17c23643c4739694e6186ea67cd62c92104be302e24/manifest_tool-2.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81b897e20d73313bf2cfd8f952113aeb8bea836adc453c9935602946e17d9268",
        "md5": "77fceca4b7d36318b2778bae357ed311",
        "sha256": "b7531aff2d3a476704bf0f251671ae6be76a9e3ff6b3c7a629b088c7ca12fbc8"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "77fceca4b7d36318b2778bae357ed311",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 333336,
      "upload_time": "2021-07-21T08:19:03",
      "upload_time_iso_8601": "2021-07-21T08:19:03.933698Z",
      "url": "https://files.pythonhosted.org/packages/81/b8/97e20d73313bf2cfd8f952113aeb8bea836adc453c9935602946e17d9268/manifest_tool-2.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93780d5df7a0a84a9b9ef69487f712f8021bdc01b56381e8dc3a2ebcb7b5872a",
        "md5": "fb68a4a8781e78e6b8854770219e1192",
        "sha256": "0cbf35252de246b7312bd4f12615f47f79469252ed3174e47bfbe8fab5f296d7"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "fb68a4a8781e78e6b8854770219e1192",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 336735,
      "upload_time": "2021-07-21T08:19:06",
      "upload_time_iso_8601": "2021-07-21T08:19:06.006628Z",
      "url": "https://files.pythonhosted.org/packages/93/78/0d5df7a0a84a9b9ef69487f712f8021bdc01b56381e8dc3a2ebcb7b5872a/manifest_tool-2.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1bfaad7e54ba30e70317289f774943386c02e2688d7fb5294d204d3ff86f3d7",
        "md5": "2470bec700e050ff1a23c9e422115889",
        "sha256": "763989db8cdad6983e429f565361b72f8ce7bf222e19f31b1db229c6688c5744"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2470bec700e050ff1a23c9e422115889",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 217102,
      "upload_time": "2021-07-21T08:19:08",
      "upload_time_iso_8601": "2021-07-21T08:19:08.022157Z",
      "url": "https://files.pythonhosted.org/packages/f1/bf/aad7e54ba30e70317289f774943386c02e2688d7fb5294d204d3ff86f3d7/manifest_tool-2.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "701c4d6507e51124e6e55d73d5895bb083c856fd5605a5a3a370a7729979877c",
        "md5": "6e3721934ea976a4c68d2b6d720f97c4",
        "sha256": "dc8a15d460e854e49a08a72d7f4cdccca27c01b6c2aec034a7cee6f9ec1b8887"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-win32.whl",
      "has_sig": false,
      "md5_digest": "6e3721934ea976a4c68d2b6d720f97c4",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 78252,
      "upload_time": "2021-07-21T08:19:09",
      "upload_time_iso_8601": "2021-07-21T08:19:09.538042Z",
      "url": "https://files.pythonhosted.org/packages/70/1c/4d6507e51124e6e55d73d5895bb083c856fd5605a5a3a370a7729979877c/manifest_tool-2.3.0-cp37-cp37m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b63ed49f283b934124fb18c43e7b93dcba1539bfb85e865f41fc7db86fd3ce8f",
        "md5": "670dd99daa0c1f241e4da9c7cc38df4e",
        "sha256": "b50243e241c87c60964d937e699d61ea7da088508c1a70ba3d0f870a5a52bdb0"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "670dd99daa0c1f241e4da9c7cc38df4e",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.0",
      "size": 77328,
      "upload_time": "2021-07-21T08:19:10",
      "upload_time_iso_8601": "2021-07-21T08:19:10.951601Z",
      "url": "https://files.pythonhosted.org/packages/b6/3e/d49f283b934124fb18c43e7b93dcba1539bfb85e865f41fc7db86fd3ce8f/manifest_tool-2.3.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "702cf71521f35dcea413c1db1fbd402ab4d7a718bd1753fd279c9ee36d414379",
        "md5": "f19935440a4938079cd5ddc537a6850d",
        "sha256": "f19d11d26fe3335db5efad6402ed20356cfc3534c876315a28ee98f626a1358b"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f19935440a4938079cd5ddc537a6850d",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 96743,
      "upload_time": "2021-07-21T08:19:12",
      "upload_time_iso_8601": "2021-07-21T08:19:12.630549Z",
      "url": "https://files.pythonhosted.org/packages/70/2c/f71521f35dcea413c1db1fbd402ab4d7a718bd1753fd279c9ee36d414379/manifest_tool-2.3.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12fdef03ef8574801543f583d73994887bf5acaf59347c240949edb6daf4a235",
        "md5": "b4e2428044ac3e5f93243c331260d076",
        "sha256": "30ac689aa79194865394c4e0bf8453844b925f4276e35dcfc6ac75504b406223"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b4e2428044ac3e5f93243c331260d076",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 223976,
      "upload_time": "2021-07-21T08:19:14",
      "upload_time_iso_8601": "2021-07-21T08:19:14.689920Z",
      "url": "https://files.pythonhosted.org/packages/12/fd/ef03ef8574801543f583d73994887bf5acaf59347c240949edb6daf4a235/manifest_tool-2.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "314db1ab11254e9dd02b48ec0088830be7a0aeba2155e40bc85e0e1745ca95b1",
        "md5": "596cd00ada7221701f30a7717c25703b",
        "sha256": "e78c308772989c70750b99949e97a4b14e12ffedfac7f7abc057052026932408"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "596cd00ada7221701f30a7717c25703b",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 332132,
      "upload_time": "2021-07-21T08:19:17",
      "upload_time_iso_8601": "2021-07-21T08:19:17.267186Z",
      "url": "https://files.pythonhosted.org/packages/31/4d/b1ab11254e9dd02b48ec0088830be7a0aeba2155e40bc85e0e1745ca95b1/manifest_tool-2.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe72945ff21d0f155269908f57a4b2e3adebd2a7d083073407e60a6da946b395",
        "md5": "03f8e30d73e2c7502f87321e9dee6c40",
        "sha256": "9b54043348f7f35c7ef0c57150791caf8ec4005105b243a3b0eb1d08ef42878e"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "03f8e30d73e2c7502f87321e9dee6c40",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 335613,
      "upload_time": "2021-07-21T08:19:19",
      "upload_time_iso_8601": "2021-07-21T08:19:19.627621Z",
      "url": "https://files.pythonhosted.org/packages/fe/72/945ff21d0f155269908f57a4b2e3adebd2a7d083073407e60a6da946b395/manifest_tool-2.3.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e76fac286a8f24969463ea66111db6c3fa2cc6781ee65986a185743c6986c535",
        "md5": "0986d7f32c4583b5660700717a6da8dd",
        "sha256": "a1cd41074a319adad90f2c137a02014c5d6250c83b858caec212eaec860857f2"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0986d7f32c4583b5660700717a6da8dd",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 217289,
      "upload_time": "2021-07-21T08:19:21",
      "upload_time_iso_8601": "2021-07-21T08:19:21.440688Z",
      "url": "https://files.pythonhosted.org/packages/e7/6f/ac286a8f24969463ea66111db6c3fa2cc6781ee65986a185743c6986c535/manifest_tool-2.3.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b5fdcca1cfaa435d6ef7daf9eb8ef386d509fbab2d20619c5dd801069e5c98d",
        "md5": "3bd6c98573b43acf42401efa87f2c428",
        "sha256": "7b50e06bdefe9e769ab009da1aa1723fdb67f70f649141a23590918e150fce1d"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-win32.whl",
      "has_sig": false,
      "md5_digest": "3bd6c98573b43acf42401efa87f2c428",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 78258,
      "upload_time": "2021-07-21T08:19:22",
      "upload_time_iso_8601": "2021-07-21T08:19:22.929610Z",
      "url": "https://files.pythonhosted.org/packages/7b/5f/dcca1cfaa435d6ef7daf9eb8ef386d509fbab2d20619c5dd801069e5c98d/manifest_tool-2.3.0-cp38-cp38-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64bd358f0f648ac66f58bb746ef30b27e9b481685c5824f55081cd129ba2d8b9",
        "md5": "04e1386bb7d695660479fad64fb17546",
        "sha256": "5ce29b88495524e34dd1483145ba9b979aa8ab54105a39c4605bfb5209d0bd47"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "04e1386bb7d695660479fad64fb17546",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.0",
      "size": 77328,
      "upload_time": "2021-07-21T08:19:24",
      "upload_time_iso_8601": "2021-07-21T08:19:24.430782Z",
      "url": "https://files.pythonhosted.org/packages/64/bd/358f0f648ac66f58bb746ef30b27e9b481685c5824f55081cd129ba2d8b9/manifest_tool-2.3.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdf72b7be46b77929bdd75cb07aa7580881c9db3b1ef6f6ad8723742c8e4282b",
        "md5": "9357498fae9b744225b77e50ff34520d",
        "sha256": "c9f316cb57afd0d40b34b62fd776eeb4a2e5ffb0cc08e838a11443c0ea0ab49a"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "9357498fae9b744225b77e50ff34520d",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 96748,
      "upload_time": "2021-07-21T08:19:26",
      "upload_time_iso_8601": "2021-07-21T08:19:26.361528Z",
      "url": "https://files.pythonhosted.org/packages/cd/f7/2b7be46b77929bdd75cb07aa7580881c9db3b1ef6f6ad8723742c8e4282b/manifest_tool-2.3.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a241b5efca263c8fd1fdeccc557bcaac67c8edffe7e73e6311b33823168b77ba",
        "md5": "82af8ca2bf6802d9bd929a98fc48c383",
        "sha256": "32265610fb6833dace1c2793dd95a683044ca87dc5f42d005c3a19ad0745b7e0"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "82af8ca2bf6802d9bd929a98fc48c383",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 223767,
      "upload_time": "2021-07-21T08:19:28",
      "upload_time_iso_8601": "2021-07-21T08:19:28.385177Z",
      "url": "https://files.pythonhosted.org/packages/a2/41/b5efca263c8fd1fdeccc557bcaac67c8edffe7e73e6311b33823168b77ba/manifest_tool-2.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47dbeff58a4a18d0f1466fd56bf7b6f4d01545ec060acba2561b08607a1c7b6e",
        "md5": "dcd50a82125e9be39f30f59c6fc41c70",
        "sha256": "fe6c0cc4aa4e61e28adaa8aacec19ec62c353c4055a710cdc78d3f892cfc1800"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "dcd50a82125e9be39f30f59c6fc41c70",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 331915,
      "upload_time": "2021-07-21T08:19:30",
      "upload_time_iso_8601": "2021-07-21T08:19:30.727167Z",
      "url": "https://files.pythonhosted.org/packages/47/db/eff58a4a18d0f1466fd56bf7b6f4d01545ec060acba2561b08607a1c7b6e/manifest_tool-2.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce05942c7154d5506b9e7f39ab38751ae1bc59ad88facab4998256f7500f9a50",
        "md5": "062699e2e8b0e3db7446ccc394c8fcd1",
        "sha256": "f7c5b527da7503d2d83e3b92ebac3573efe21e655e3d834b3ce588226cb5cfd6"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "062699e2e8b0e3db7446ccc394c8fcd1",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 335432,
      "upload_time": "2021-07-21T08:19:33",
      "upload_time_iso_8601": "2021-07-21T08:19:33.062504Z",
      "url": "https://files.pythonhosted.org/packages/ce/05/942c7154d5506b9e7f39ab38751ae1bc59ad88facab4998256f7500f9a50/manifest_tool-2.3.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73c0486d25d9a397743f35436ba130899479be68b4db0baa898acf796e4fa938",
        "md5": "fbad99ff0e2d30485f03f2f94c966a75",
        "sha256": "cce2b9689c03388480bfe15389dcb95da92d928a67640ddbf8c6164d9769d270"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "fbad99ff0e2d30485f03f2f94c966a75",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 217173,
      "upload_time": "2021-07-21T08:19:35",
      "upload_time_iso_8601": "2021-07-21T08:19:35.277785Z",
      "url": "https://files.pythonhosted.org/packages/73/c0/486d25d9a397743f35436ba130899479be68b4db0baa898acf796e4fa938/manifest_tool-2.3.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1612952ce3fbaa124cd9403560eefc2df2c329460aa7d281cc8e406c34d6896a",
        "md5": "e20eca7f12771f7da1940c6d62238e5a",
        "sha256": "ac25a6fc0b633cafc7d7e79746b62d6a5aeb2a32fe353e23ced312844392055f"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-win32.whl",
      "has_sig": false,
      "md5_digest": "e20eca7f12771f7da1940c6d62238e5a",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 78260,
      "upload_time": "2021-07-21T08:19:36",
      "upload_time_iso_8601": "2021-07-21T08:19:36.893008Z",
      "url": "https://files.pythonhosted.org/packages/16/12/952ce3fbaa124cd9403560eefc2df2c329460aa7d281cc8e406c34d6896a/manifest_tool-2.3.0-cp39-cp39-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6334a1d47023e3a5c5b7b12a5e76eb7bf1b0069c928c9f25095e6700d9e005d",
        "md5": "36313726fbe7c1ca35a0144b467d9574",
        "sha256": "74e7cb81bfe6309896b02841c3291e770ce70055c50bea1b8268171fec827835"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.3.0-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "36313726fbe7c1ca35a0144b467d9574",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.0",
      "size": 77323,
      "upload_time": "2021-07-21T08:19:38",
      "upload_time_iso_8601": "2021-07-21T08:19:38.410700Z",
      "url": "https://files.pythonhosted.org/packages/f6/33/4a1d47023e3a5c5b7b12a5e76eb7bf1b0069c928c9f25095e6700d9e005d/manifest_tool-2.3.0-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "193075694e648504a81067b1788c269bc990d8cfc546fc7843c0b44ec5406d92",
        "md5": "796ac1e1588c60bdfa1da5feac7f5e40",
        "sha256": "117b5167b9b52ffa61f0f98b20510e8d552fae7f7fb5bbeec26a0f77e91fd545"
      },
      "downloads": -1,
      "filename": "manifest-tool-2.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "796ac1e1588c60bdfa1da5feac7f5e40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 86634,
      "upload_time": "2021-07-21T08:19:40",
      "upload_time_iso_8601": "2021-07-21T08:19:40.422490Z",
      "url": "https://files.pythonhosted.org/packages/19/30/75694e648504a81067b1788c269bc990d8cfc546fc7843c0b44ec5406d92/manifest-tool-2.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}