{
  "info": {
    "author": "ARM",
    "author_email": "support@arm.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Device Management manifest CLI tool\n\nThis document explains how to install and use the manifest tool.\n\n- [Manifest tool overview](#manifest-tool-overview)\n- [Installing the manifest tool](#installing-the-manifest-tool)\n- [Using the manifest tool](#using-the-manifest-tool)\n- [Developer workflow example](#developer-workflow-example)\n- [Troubleshooting](#troubleshooting)\n\n<span class=\"notes\">**Note:** Please see the [changelog](./changelog.md) for the list of all changes between release versions.</span>\n\n## Manifest tool overview\nDevice Management lets you perform Firmware Over-the-Air (FOTA) updates\non managed devices.\n\nOn the device side, the firmware update process begins when the device\nreceives an update manifest. The OEM (original equipment manufacturer)\nor update author cryptographically signs the manifest with a private key\npaired to a public key that exists on the device, enabling the device to\nauthenticate the manifest before it accepts the firmware update.\n\nDevice Management supports:\n\n* Full updates - Deliver new firmware and install it on the device.\n* Delta updates - The manifest tool executes a diff algorithm that\n  produces a small delta patch file. The nano client constructs a new\n  firmware image based on the delta patch file and the firmware\n  currently present on the device. This technique saves traffic\n  bandwidth.\n\nThe `manifest-tool` Python package includes these command line tools:\n\n- [`manifest-tool`](#manifest-tool) - Creates manifest files.\n- [`manifest-delta-tool`](#manifest-delta-tool) - Generates delta patch\n  files.\n- [`manifest-dev-tool`](#manifest-dev-tool) - A developer tool for\n  running a simplified update campaign.\n\n## Installing the manifest tool\n\nWe recommend installing the `manifest-tool` Python package in a\n[Python virtual environment](#creating-a-virtual-environment).\n\n### Installing from PyPi\n\n**Prerequisites:**\n\n* [Python 3.5 or higher](https://www.python.org/downloads/).\n* [pip (Python Package Installer)](https://pip.pypa.io/en/stable/).\n* Internet connectivity\n\n**To install the manifest tool from [PyPi](https://pypi.org/), run:**\n\n```\npip install manifest-tool\n```\n\n### Installing from local source tree\n\n**Prerequisites:**\n\n* [Python 3.5 or later](https://www.python.org/downloads/).\n* [pip (Python Package Installer)](https://pip.pypa.io/en/stable/).\n* Native toolchain:\n    * GCC/Clang for Linux/MacOS.\n    * Microsoft Visual Studio 2017 or later for Windows.\n\n**To install the manifest tool from the local source tree, run:**\n\n1. Clone the ARMmbed/manifest-tool repository to your machine:  \n\n    ```\n    $ git clone git@github.com:ARMmbed/manifest-tool.git ./manifest-tool\n    ```\n\n1. Run:\n\n    ```\n    $ pip install <manifest-tool>\n    ```\n\n    Where `<manifest-tool>` is the path to the local source tree.\n\n<span class=\"notes\">**Note:** Run `$ pip install -e <manifest-tool>` to install the package in Python setuptools development mode. For more information, please see the [setuptools development mode documentation](https://setuptools.readthedocs.io/en/latest/setuptools.html#development-mode).</span>\n\n### Creating a virtual environment\n\nThe `virtualenv` tool creates isolated Python environments, which are\nuseful in overcoming Python package collision issues when you work on\nmultiple projects. For more information, please see the\n[Python documentation](https://docs.python.org/tutorial/venv.html).\n\n**To create a virtual environment, run:**\n\n```shell\n$ virtualenv -p python3 venv  \n```\n\n**To activate the virtual environment in the current shell, run:**\n\n```shell\n$ source venv/bin/activate\n```\n\n## Using the manifest tool\n\nThis section explains how to use the CLI tools included in the\n`manifest-tool` Python package:\n\n- [manifest-tool](#manifest-tool)\n- [manifest-delta-tool](#manifest-delta-tool)\n- [manifest-dev-tool](#manifest-dev-tool)\n- [Developer workflow example](#developer-workflow-example)\n\n### manifest-tool\n\n`manifest-tool` commands:\n\n- [`manifest-tool create`](#manifest-tool-create) - Creates manifests.\n- [`manifest-tool create-v1`](#manifest-tool-create-v1) - Creates V1\n  schema-compatible manifests.\n- [`manifest-tool parse`](#manifest-tool-parse) - Parses and verifies\n  existing manifest files.\n- [`manifest-tool schema`](#manifest-tool-schema) - Shows bundled input\n  validation schema.\n- [`manifest-tool public-key`](#manifest-tool-public-key) - Generates an\n  uncompressed public key.\n\n<span class=\"notes\">**Note:** Run `manifest-tool --help` for more information about all commands, or `manifest-tool <command> --help` for more information about a specific command, including its parameters and how to use them.</span>\n\n#### `manifest-tool create`\n\nCreates a manifest. The manifest tool receives a configuration file\ndescribing the update type.\n\n**Prerequisites**\n\n* An update private key and public key certificate.\n\n    Keep the private key secret because it allows installing new\n    firmware images on your devices.\n\n    Provision the public key to the device.\n\n    * To generate a private key, run:\n\n        ```shell\n        $ openssl ecparam -genkey -name prime256v1 -outform PEM -out my.pkey.pem\n        ```\n\n  *   To generate a public key in uncompressed point format (X9.62), use\n      the [`manifest-tool public-key`](#manifest-tool-public-key)\n      command.\n\n* Upload the new firmware binary to a server that the device you want to\n  update can reach, and obtain the URL for the uploaded firmware binary.\n\n* A configuration file in JSON or YAML format.\n\n    Configuration file format:\n    ```yaml\n    vendor:  # One of \"domain\" or \"vendor-id\" fields are expected\n      domain: arm.com  # FW owner domain. Expected to include a dot (\".\")\n      vendor-id: fa6b4a53d5ad5fdfbe9de663e4d41ffe  # Valid vendor UUID\n    device:  # One of \"model-name\" or \"class-id\" fields are expected\n      model-name: Smart Slippers  # A device model name\n      vendor-id: fa6b4a53d5ad5fdfbe9de663e4d41ffe  # Valid device-class UUID\n\n    priority: 1  #  Update priority as will be passed to authorization callback\n                 #  implemented by application on a device side\n    payload:\n      url: http://some-url.com/files?id=1234  # File storage URL for devices to\n                                              # acquire the FW candidate\n      file-path: ./my.fw.bin  # Update candidate local file - for digest\n                              # calculation & signing\n      format: raw-binary  # one of following:\n                          #  raw-binary - for full image update\n                          #  arm-patch-stream - for differential update\n    component: MAIN  # [Optional] Component name - only relevant for manifest v3 format.\n                     # If omitted \"MAIN\" component name will be used for updating\n                     # the main application image\n    sign-image: True  # [Optional] Boolean field accepting True/False values - only\n                      # relevant for manifest v3 format.\n                      # When Set to True - 64 Bytes raw signature over the installed\n                      # image will be added to the manifest.\n                      # Image signature can be used for cases when device bootloader\n                      # expects to work with signed images (e.g. secure-boot)\n                      # When omitted False value is assumed\n    ```\n**Example**\n\n* For this configuration file, called `my.config.yaml`:\n\n    ```yaml\n    vendor:\n      domain: arm.com\n    device:\n      model-name: Smart Flip-flops\n    priority: 1\n    payload:\n      url: http://some-url.com/files?id=1234\n      file-path: ./my.fw.bin\n      format: raw-binary\n    ```\n\n* Run:\n\n    ```shell\n    manifest-tool create \\\n        --config my.config.yml \\\n        --key my.priv.key.pem \\\n        --fw-version 1.2.3 \\\n        --output my.manifest.bin\n    ```\n\n#### `manifest-tool create-v1`\n\nOlder versions of Device Management FOTA update client use manifest\nschema V1 and assume the public key is packaged in a x.509 certificate.\n\n**Prerequisites**\n\n* An update private key and public key certificate.\n\n    Keep the private key secret because it allows installing new\n    firmware images on your devices.\n\n    Provision the public key to the device.\n\n    * To generate a private key, run:\n\n        ```shell\n        $ openssl ecparam -genkey -name prime256v1 -outform PEM -out my.pkey.pem\n        ```\n    * To generate a public key x.509 certificate, run:\n\n        ```shell\n        $ openssl req -new -sha256 \\\n              -key my.pkey.pem \\\n              -inform PEM \\\n              -out my.csr.csr\n        $ openssl req -x509 -sha256 \\\n              -days 7300 \\\n              -key my.pkey.pem \\\n              -in my.csr.csr \\\n              -outform der \\\n              -out my.x509.certificate.der\n        ```\n\n        <span class=\"notes\">**Note:** Device Management FOTA treats the x.509 certificate as a container **ONLY** and does not enforce its validity - expiration, chain of trust, and so on - although it may be validated by other Device Management components. For production, we recommend creating a certificate with a lifespan greater than the product's expected lifespan (for example, 20 years).</span>\n\n**Example**\n\n* For this configuration file, called `my.config.yaml`:\n\n    ```yaml\n    vendor:\n      domain: arm.com\n    device:\n      model-name: DUT.my.device\n    priority: 1\n    payload:\n      url: http://some-url.com/files?id=1234\n      file-path: ./my.fw.bin\n      format: raw-binary\n    ```\n\n* Run:\n\n    ```shell\n    manifest-tool create-v1 \\\n        --config my.config.yaml \\\n        --key my.priv.key.pem \\\n        --update-certificate my.x509.certificate.der \\\n        --output my.manifest.bin\n    ```\n\n#### `manifest-tool parse`\n\nParses and validates existing manifest files.\n\n**Prerequisites**\n\n* A manifest file (in our example `my.manifest.bin`).\n* Optionally, an update private key or public key or certificate to\n  validate the manifest signature.\n\n**Example**\n\n```shell\n$ manifest-tool parse \\\n  --manifest my.manifest.bin \\\n  --private-key my.priv.key.pem\n----- Manifest dump start -----\nManifest:\nvendor-id=fa6b4a53d5ad5fdfbe9de663e4d41ffe\nclass-id=3da0f138173350eba6f665498eace1b1\nupdate-priority=15\npayload-version=1572372313\npayload-digest=b5f07d6c646a7c014cc8c03d2c9caf066bd29006f1356eaeaf13b7d889d3502b\npayload-size=512\npayload-uri=https://my.server.com/some.file?new=1\npayload-format=raw-binary\n----- Manifest dump end -----\n2019-10-29 20:05:13,478 INFO Signature verified!\n```\n\n#### `manifest-tool schema`\n\nPrints the input validation JSON schema bundled with the current tool.\nThe manifest tool contains an input validation schema, which you can use\nas a self-documenting tool to better understand and validate the\nmanifest tool input configuration.\n\n**Example**\n\n```shell\n$ manifest-tool schema\n```\nOutput:\n\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Manifest-tool input validator\",\n  \"description\": \"This schema is used to validate the input arguments for manifest-tool\",\n  \"type\": \"object\",\n  \"required\": [\n    \"vendor\",\n    \"device\",\n    \"priority\",\n    \"payload\"\n  ],\n  \"properties\": {\n    \"vendor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"domain\": {\n          \"$ref\": \"#/definitions/non_empty_string\",\n          \"description\": \"Vendor Domain\",\n          \"pattern\": \"\\\\w+(\\\\.\\\\w+)+\"\n        },\n        \"vendor-id\": {\n          \"$ref\": \"#/definitions/uuid_hex_string\",\n          \"description\": \"Vendor UUID\"\n        },\n        \"custom-data-path\": {\n          \"$ref\": \"#/definitions/non_empty_string\",\n          \"description\": \"Path to custom data file  - must be accessible by the manifest-tool\"\n        }\n      },\n      \"oneOf\": [\n        {\"required\": [\"domain\"]},\n        {\"required\": [\"vendor-id\"]}\n      ]\n    },\n    \"device\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"model-name\": {\n          \"$ref\": \"#/definitions/non_empty_string\",\n          \"description\": \"Device model name\"\n        },\n        \"class-id\": {\n          \"$ref\": \"#/definitions/uuid_hex_string\",\n          \"description\": \"Device class UUID\"\n        }\n      },\n      \"oneOf\": [\n        {\"required\": [\"model-name\"]},\n        {\"required\": [\"class-id\"]}\n      ]\n    },\n    \"priority\": {\n      \"description\": \"Update priority\",\n      \"type\": \"integer\"\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"url\",\n        \"format\",\n        \"file-path\"\n      ],\n      \"properties\": {\n        \"format\": {\n          \"description\": \"Payload format type\",\n          \"enum\": [\n            \"raw-binary\",\n            \"arm-patch-stream\"\n          ]\n        },\n        \"url\": {\n          \"$ref\": \"#/definitions/non_empty_string\",\n          \"description\": \"Payload URL in the cloud storage\"\n        },\n        \"file-path\": {\n          \"$ref\": \"#/definitions/non_empty_string\",\n          \"description\": \"Path to payload file - must be accessible by the manifest-tool\"\n        }\n      }\n    },\n    \"component\": {\n      \"description\": \"Component name - only relevant for manifest v3\",\n      \"$ref\": \"#/definitions/non_empty_string\"\n    },\n    \"sign-image\":{\n      \"description\": \"Do sign installed image - only relevant for manifest v3. Required for devices with PKI image authentication in bootloader\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"definitions\": {\n    \"non_empty_string\": {\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    \"uuid_hex_string\": {\n      \"type\": \"string\",\n      \"pattern\": \"[0-9a-fA-F]{32}\",\n      \"description\": \"HEX encoded UUID string\"\n    }\n  }\n}\n```\n\n<span class=\"notes\">**Note:** This schema is an example captured for manifest-tool version 2.0. Make sure to execute the `manifest-tool schema` command on your machine to get the up-to-date schema for your installed tool version.</span>\n\n#### `manifest-tool public-key`\n\nCreates a public key file containing a key in uncompressed point format\n(X9.62). Provisioning this file to the device enables the device to\nverify the manifest signature.\n\n**Example**\n\n```shell\nmanifest-tool public-key my.priv.key.pem --out my.pub.key.bin\n```\n\n### manifest-delta-tool\n\nUse this tool to generate delta patch files for delta updates.\n\nRun `manifest-delta-tool --help` for more information about usage and\narguments.\n\n**Prerequisites**\n\n* The firmware currently installed on the device and the updated\n  firmware image. Required for calculating the delta patch.\n\n**Example**\n\n```shell\n$ manifest-delta-tool -c current_fw.bin -n new_fw.bin -o delta-patch.bin\n```\n\n<span class=\"notes\">**Note 1:** Compression block size has a direct impact on the amount of memory required by the device receiving the update. The device requires twice the amount of RAM in runtime to decompress and apply the patch.</span>\n\n<span class=\"notes\">**Note 2:** Compression block must be aligned with network (COAP/HTTP) buffer size used for download. Misalignment in sizes may result in device failure to process the delta patch file.</span>\n\n### manifest-dev-tool\n\n`manifest-dev-tool` is a developer tool for running a simplified update\ncampaign.\n\nUse `manifest-dev-tool` for development flows only.\n\n`manifest-dev-tool` commands:\n- [`manifest-dev-tool init`](#manifest-dev-tool-init) - Initializes the\n  developer environment.\n- [`manifest-dev-tool create`](#manifest-dev-tool-create) - Simplified\n  tool for creating manifests.\n- [`manifest-dev-tool create-v1`](#manifest-dev-tool-create-v1) -\n  Simplified tool for creating manifests using the V1 schema.\n- [`manifest-dev-tool update`](#manifest-dev-tool-update) - Lets you\n  perform end-to-end tests without leaving the command shell.\n- [`manifest-dev-tool update-v1`](#manifest-dev-tool-update-v1) - Lets\n  you perform end-to-end tests without leaving the command shell using a\n  V1-schema manifest.\n\n<span class=\"notes\">**Note:** Run `manifest-dev-tool --help` for more information about all commands, or `manifest-dev-tool <command> --help` for more information about a specific command, including its parameters and how to use them.</span>\n\n#### `manifest-dev-tool init`\n\nInitializes the developer environment:\n* Creates an update private key and a public key certificate.\n* Generates a `fota_dev_resources.c` file with symbols that allow\n  bypassing the provisioning step in the developer flow.\n* Creates configuration files, which you use when you run the\n  [`manifest-dev-tool create`](#manifest-dev-tool-create) and\n  [`manifest-dev-tool update`](#manifest-dev-tool-update) commands.\n\n<span class=\"notes\">**Note:** Only use the credentials the `manifest-dev-tool` tool generates in the development flow.</span>\n\n**Example**\n\n```shell\nmanifest-dev-tool init --force -a [API key from Device Management Portal]\n```\n\n#### `manifest-dev-tool create`\n\nCreates developer manifest files without requiring an input\nconfiguration file.\n\n**Example**\n\n```shell\nmanifest-dev-tool create \\\n    --payload-url http://test.pdmc.arm.com?fileId=1256 \\\n    --payload-path new_fw.bin \\\n    --fw-version 1.2.3 \\\n    --output update-manifest.bin\n```\n\n<span class=\"notes\">**Note:** To run a delta update, create the file specified in the `--payload-path` argument using the [`manifest-delta-tool`](#manifest-delta-tool) command. The file has the same name but a `.yaml` suffix (in the example, `new-fw.yaml` instead of `new-fw.bin`).</span>\n\n<span class=\"notes\">**Note:** Add the `--sign-image` argument to update a device with a secure bootloader, which requires an image signature.</span>\n\n#### `manifest-dev-tool create-v1`\n\nCreates developer manifest files in v1 format without requiring an input\nconfiguration file.\n\n**Example**\n\n```shell\nmanifest-dev-tool create-v1 \\\n    --payload-url http://test.pdmc.arm.com?fileId=1256 \\\n    --payload-path new-fw.bin \\\n    --output update-manifest.bin\n```\n\n<span class=\"notes\">**Note:** To run a delta update, create the file specified in the `--payload-path` argument using the [`manifest-delta-tool`](#manifest-delta-tool) command. The file has the same name but a `.yaml` suffix (in the example, `new-fw.yaml` instead of `new-fw.bin`).</span>\n\n#### `manifest-dev-tool update`\n\nSame as [`manifest-dev-tool create`](#manifest-dev-tool-create) but also\nlets you interact with Device Management Portal to run a full update\ncampaign on a single device.\n\nThe command:\n\n1. Uploads the payload to Device Management Portal and obtains the URL.\n2. Creates a manifest file with the URL from the previous step and\n   obtains a manifest URL.\n3. Creates an update campaign with the manifest URL from the previous\n   step.\n4. Starts the update campaign if you pass the `--start-campaign` or\n   `--wait-for-completion` argument.\n5. If you pass the `--wait-for-completion` argument, the tool waits for\n   campaign completion for the time period specified by `--timeout` or\n   until the campaign reaches one of its terminating states in Device\n   Management Portal (`expired`, `userstopped`, or\n   `quotaallocationfailed`).\n6. If you pass the `--wait-for-completion` argument without the\n   `--no-cleanup` flag, the tool removes the uploaded test resources\n   from Device Management Portal before exiting. When you terminate the\n   tool, the tool skips the cleanup step.\n\n<span class=\"notes\">**Note:** [`manifest-dev-tool init`](#manifest-dev-tool-init) creates the directory you specify in `--cache-dir`.</span>\n\n**Example**\n\n  ```shell\n  manifest-dev-tool update \\\n      --payload-path my_mew_fw.bin \\\n      --fw-version 1.2.3 \\\n      --wait-for-completion\n  ```\n\n<span class=\"notes\">**Note:** The tool creates the device filter for the campaign based on the unique `class-id` and `vendor-id` fields the [`manifest-dev-tool init`](#manifest-dev-tool-init) command generates.</span>\n\n#### `manifest-dev-tool update-v1`\n\nSame as [`manifest-dev-tool update`](#manifest-dev-tool-update) with a\nv1-format manifest.\n\n**Example**\n\n  ```shell\n  manifest-dev-tool update-v1 \\\n      --payload-path my_mew_fw.bin \\\n      --wait-for-completion\n  ```\n\n### Developer workflow example\n\n1. Clone the https://github.com/ARMmbed/mbed-cloud-client-example\n   repository.\n2. From within the repository, execute:\n\n    ```\n    manifest-dev-tool init --force -a $MY_API_KEY\n    ```\n    The tool generates and compiles a `fota_dev_resources.c` file.\n\n1. Flash the bootloader and firmware to the device.\n1. Create a firmware update candidate.\n\n    OR\n\n    Create a delta-patch:\n    ```\n    manifest-delta-tool -c curr_fw.bin -n new_fw.bin -o delta.bin\n    ```\n\n1. Issue an update:\n\n    ```\n    manifest-dev-tool update --payload-path\n    new_fw.bin --wait-for-completion\n    ```\n   For a delta update, the payload is `delta.bin`.\n\n## Troubleshooting\n\n* **Getting more context on unexpected errors.**  \n\n   When the tool exits with a non-zero return code, it may be helpful to\n   get more context on the failure.\n\n   **Solution:** execute the tool with the `--debug` flag at the top\n   argument parser level. For example:\n\n   ```\n   manifest-dev-tool --debug update\n   ```\n\n* **`manifest-dev-tool update ... --wait-for-completion` takes longer than expected.**\n\n   `manifest-dev-tool update` creates a unique `class-id` and\n   `vendor-id` generated per developer. Device Management expects a\n   single device with these properties to connect to Device Management\n   Portal.\n\n   In rare cases, during development, a device's `device-id` might\n   change after you re-flash it. This may result in two devices having\n   the same `class-id` and `vendor-id` in Device Management Portal. In\n   this scenario, Device Management will detect both devices and try to\n   update them both, although one of them no longer exists\n\n   **Solution:** Manually delete the unwanted device from Device\n   Management Portal. Alternatively, run `manifest-dev-tool update ...\n   --wait-for-completion` with `--device-id DEVICE_ID` to override the\n   default campaign filter and target a specific device by its ID.\n\n* **Update fails and `manifest-dev-tool update ...\n  --wait-for-completion` cleans all resources.**\n\n   You might want to leave the resources (firmware image candidate,\n   update manifest and update campaign) on a service for further\n   investigation/retry.\n\n    **Solution:** Execute `manifest-dev-tool update ...\n    --wait-for-completion` with the `--no-cleanup` flag.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ARMmbed/manifest-tool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manifest-tool",
    "package_url": "https://pypi.org/project/manifest-tool/",
    "platform": "",
    "project_url": "https://pypi.org/project/manifest-tool/",
    "project_urls": {
      "Homepage": "https://github.com/ARMmbed/manifest-tool"
    },
    "release_url": "https://pypi.org/project/manifest-tool/2.0.0/",
    "requires_dist": [
      "PyYAML (<=5.3.1,>=4.2b1)",
      "asn1ate (<=0.6.0,>=0.5)",
      "cryptography (<=2.9.2,>=2.5)",
      "jsonschema (<=3.2.0,>=2.6.0)",
      "pyasn1 (<=0.4.8,==0.3.1)",
      "urllib3 (<=1.25.9,>=1.20)",
      "mbed-cloud-sdk (<=2.2.0,>=2.0.6)"
    ],
    "requires_python": ">=3.5.0",
    "summary": "Tool/lib to create and parse manifests",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16315007,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30aaefd0e2bdd75f6c0ecfcd5dcdd5c2eb78547e66d1ca9d2d1a4eeeb1a9ed61",
        "md5": "1aae0d2ef8144789fb63611c5732093e",
        "sha256": "74222233a9a0a041a3e4ef4eeeef79660302d32c244d01c3428e31716c059625"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp35-cp35m-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1aae0d2ef8144789fb63611c5732093e",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 84509,
      "upload_time": "2020-07-27T21:11:27",
      "upload_time_iso_8601": "2020-07-27T21:11:27.010380Z",
      "url": "https://files.pythonhosted.org/packages/30/aa/efd0e2bdd75f6c0ecfcd5dcdd5c2eb78547e66d1ca9d2d1a4eeeb1a9ed61/manifest_tool-2.0.0-cp35-cp35m-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dbc233c7c24e2e7acadf10da224828cd5884eb9f31d00bb8e2e142d7bc468d2",
        "md5": "c33e17b40a719490e81d31da7237c451",
        "sha256": "6df0ff63fe5277faa9f936a12aea61fe9b3bae34fb21d1d6f90bf4c5181e7fd9"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c33e17b40a719490e81d31da7237c451",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 324232,
      "upload_time": "2020-07-27T21:11:29",
      "upload_time_iso_8601": "2020-07-27T21:11:29.518324Z",
      "url": "https://files.pythonhosted.org/packages/3d/bc/233c7c24e2e7acadf10da224828cd5884eb9f31d00bb8e2e142d7bc468d2/manifest_tool-2.0.0-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d10a0c0005aca4e09b06ba86ba9422712baef903a5926ba69386f0e6a5f88467",
        "md5": "6f1c62955c2a201f1e7ceeb9a1ea8a31",
        "sha256": "83193ad24bbab8658d4e20e5ccefef5f1b02a91d6dde513b95d512fad982913b"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp35-cp35m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6f1c62955c2a201f1e7ceeb9a1ea8a31",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 324237,
      "upload_time": "2020-07-27T21:11:32",
      "upload_time_iso_8601": "2020-07-27T21:11:32.250056Z",
      "url": "https://files.pythonhosted.org/packages/d1/0a/0c0005aca4e09b06ba86ba9422712baef903a5926ba69386f0e6a5f88467/manifest_tool-2.0.0-cp35-cp35m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f408a85cd3fec8340062f7a9537712457af3496711daf7e71c8f610e29df8455",
        "md5": "10600bad29e8d435e66200f0aecd4ac9",
        "sha256": "f53a24ac546a6f0bbc610d2cee905e215a276864bf9483fea341a793c79808d4"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp35-cp35m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "10600bad29e8d435e66200f0aecd4ac9",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 320727,
      "upload_time": "2020-07-27T21:11:35",
      "upload_time_iso_8601": "2020-07-27T21:11:35.670452Z",
      "url": "https://files.pythonhosted.org/packages/f4/08/a85cd3fec8340062f7a9537712457af3496711daf7e71c8f610e29df8455/manifest_tool-2.0.0-cp35-cp35m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "368c9fb961e965e2c1c2a7b901d2ffe485db654587ecdd89325addd993f92dc5",
        "md5": "d771204c87b0087028c5f3aff827a114",
        "sha256": "17f4ab82079996619e0d29d6bba4a42f3a403c2f83d8b60435c6382683216fc3"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d771204c87b0087028c5f3aff827a114",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 84510,
      "upload_time": "2020-07-27T21:11:37",
      "upload_time_iso_8601": "2020-07-27T21:11:37.531964Z",
      "url": "https://files.pythonhosted.org/packages/36/8c/9fb961e965e2c1c2a7b901d2ffe485db654587ecdd89325addd993f92dc5/manifest_tool-2.0.0-cp36-cp36m-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96d7ab4d69ee8f4cb44dbe50ac2816acd7ae8f41c13fdcaa038cdd2f33761c76",
        "md5": "8f85f8e24253284bd096495da223f25d",
        "sha256": "e578ae32077b8d539fdf51b56ace2855f1a0786de6faba1a7f3895759eef50b4"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8f85f8e24253284bd096495da223f25d",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 324465,
      "upload_time": "2020-07-27T21:11:39",
      "upload_time_iso_8601": "2020-07-27T21:11:39.748678Z",
      "url": "https://files.pythonhosted.org/packages/96/d7/ab4d69ee8f4cb44dbe50ac2816acd7ae8f41c13fdcaa038cdd2f33761c76/manifest_tool-2.0.0-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "784fad20c41a6ab3ea3903d98b07bb3f3d2179b13f29fc31280ab9263ae492c5",
        "md5": "1be8388aba1b73d24ef89091b06fa0c5",
        "sha256": "4d01bb6adf1f7309892a884d99f58b049b733a1c2d15667a12f99da9c97fc78c"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1be8388aba1b73d24ef89091b06fa0c5",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 324465,
      "upload_time": "2020-07-27T21:11:42",
      "upload_time_iso_8601": "2020-07-27T21:11:42.388080Z",
      "url": "https://files.pythonhosted.org/packages/78/4f/ad20c41a6ab3ea3903d98b07bb3f3d2179b13f29fc31280ab9263ae492c5/manifest_tool-2.0.0-cp36-cp36m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9650f0f54f4ba2e568f258236fd2e9dd5426b01fe9c938854667b643802b329",
        "md5": "d9984379d454584d33b511334fc6d422",
        "sha256": "0aed832e73b58a58428b3797cd19b8246a4938ba7e4eef4217ce58dfe4d75be1"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d9984379d454584d33b511334fc6d422",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 321040,
      "upload_time": "2020-07-27T21:11:44",
      "upload_time_iso_8601": "2020-07-27T21:11:44.531405Z",
      "url": "https://files.pythonhosted.org/packages/a9/65/0f0f54f4ba2e568f258236fd2e9dd5426b01fe9c938854667b643802b329/manifest_tool-2.0.0-cp36-cp36m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a74bad95107ddf7d7d69df15eb2af4324e3b8d7f2199c9a6714e055115c71f0",
        "md5": "89583ec93247dd0123ab0c5c23697c5b",
        "sha256": "36dc4ab6886b5e394cfb12fd6f5a20cc08952b5f25a8b4e1af09d6da83745efb"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-win32.whl",
      "has_sig": false,
      "md5_digest": "89583ec93247dd0123ab0c5c23697c5b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 71203,
      "upload_time": "2020-07-27T21:11:46",
      "upload_time_iso_8601": "2020-07-27T21:11:46.367216Z",
      "url": "https://files.pythonhosted.org/packages/0a/74/bad95107ddf7d7d69df15eb2af4324e3b8d7f2199c9a6714e055115c71f0/manifest_tool-2.0.0-cp36-cp36m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c089b5ed5616f5661c277f118d0a6f7a098358c19872aa92fa6861391f8c62a",
        "md5": "56ea3bcc22c68a105fb405768fea1c8e",
        "sha256": "5269365eefeb4341fa97630a8b3c93d0dad7687cb4362298fa6c362d63cea5cc"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "56ea3bcc22c68a105fb405768fea1c8e",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 69981,
      "upload_time": "2020-07-27T21:11:48",
      "upload_time_iso_8601": "2020-07-27T21:11:48.334383Z",
      "url": "https://files.pythonhosted.org/packages/8c/08/9b5ed5616f5661c277f118d0a6f7a098358c19872aa92fa6861391f8c62a/manifest_tool-2.0.0-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9a4d2086ded231490c8c62119026cab90db2c99cbc7edd66b677c51b83081c7",
        "md5": "04d4b03a2123ae8228d927fc2a63b430",
        "sha256": "ffaa776a31742b0da3d796c94a04877f46161ee9b062e52f17b6d8cd92ec8dac"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "04d4b03a2123ae8228d927fc2a63b430",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 84512,
      "upload_time": "2020-07-27T21:11:50",
      "upload_time_iso_8601": "2020-07-27T21:11:50.187210Z",
      "url": "https://files.pythonhosted.org/packages/b9/a4/d2086ded231490c8c62119026cab90db2c99cbc7edd66b677c51b83081c7/manifest_tool-2.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "349fe44529825a8918964de2af0b01e736668d6b00242fa12c359d44fc48e0fb",
        "md5": "4b2135bc4b5600926d702f8ebdd994aa",
        "sha256": "8feefafa81719a06dcf86379de46586536f891fc258df6dc3fac9299f6fdf2d8"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4b2135bc4b5600926d702f8ebdd994aa",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 325461,
      "upload_time": "2020-07-27T21:11:52",
      "upload_time_iso_8601": "2020-07-27T21:11:52.250192Z",
      "url": "https://files.pythonhosted.org/packages/34/9f/e44529825a8918964de2af0b01e736668d6b00242fa12c359d44fc48e0fb/manifest_tool-2.0.0-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7380cfbc41ba81b0266ecf0540ad5f70649fcb2b2360b224549ded919051503f",
        "md5": "bebc0111b10375f475b3d163eb0c192f",
        "sha256": "5dca13b4ea2a5449684cea11cbe1eb586de6c57142ee09febc9bd0e633b6608c"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "bebc0111b10375f475b3d163eb0c192f",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 325465,
      "upload_time": "2020-07-27T21:11:54",
      "upload_time_iso_8601": "2020-07-27T21:11:54.226863Z",
      "url": "https://files.pythonhosted.org/packages/73/80/cfbc41ba81b0266ecf0540ad5f70649fcb2b2360b224549ded919051503f/manifest_tool-2.0.0-cp37-cp37m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c03cdd136d7761dfc07ed5690b772db5a1014fe598f27a5aabdec2156b413ae",
        "md5": "58575f6fb0453f59d9aa6d48170a7002",
        "sha256": "2806b40b94f2e1cfe663a0ec33f434448c7b18725a6c059b630c91484ba2b911"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "58575f6fb0453f59d9aa6d48170a7002",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 322073,
      "upload_time": "2020-07-27T21:11:57",
      "upload_time_iso_8601": "2020-07-27T21:11:57.251289Z",
      "url": "https://files.pythonhosted.org/packages/4c/03/cdd136d7761dfc07ed5690b772db5a1014fe598f27a5aabdec2156b413ae/manifest_tool-2.0.0-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93436ef93aaf0ff2d35616790e04a4bc671c7f868a441a689eacc8022536a809",
        "md5": "7bde86b68cb5e1aeeabe327c2d29e064",
        "sha256": "c901b4aa87f780d8861aa6b8610b3810ae4fb3ebc4eec2626a872ac45b89db7e"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-win32.whl",
      "has_sig": false,
      "md5_digest": "7bde86b68cb5e1aeeabe327c2d29e064",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 66731,
      "upload_time": "2020-07-27T21:11:58",
      "upload_time_iso_8601": "2020-07-27T21:11:58.953381Z",
      "url": "https://files.pythonhosted.org/packages/93/43/6ef93aaf0ff2d35616790e04a4bc671c7f868a441a689eacc8022536a809/manifest_tool-2.0.0-cp37-cp37m-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2715c43e7ab52301409d4f72518e53bdddb3a9354d2f61c356265d18dd501b1f",
        "md5": "93e86ce1f00584b54e7e2d407ea02800",
        "sha256": "8586758ed49c961ecd3b617045498bf340bc38cb112e4faf1becc186a22121d8"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "93e86ce1f00584b54e7e2d407ea02800",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 65692,
      "upload_time": "2020-07-27T21:12:00",
      "upload_time_iso_8601": "2020-07-27T21:12:00.486776Z",
      "url": "https://files.pythonhosted.org/packages/27/15/c43e7ab52301409d4f72518e53bdddb3a9354d2f61c356265d18dd501b1f/manifest_tool-2.0.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "accd944f03abd49bfcb43cf38bb13a10ccb119bf8d875b2891971a5371602b6b",
        "md5": "cb6ec223841bbf179b43a3ab50a0fd17",
        "sha256": "a31c85117f9874f84919a0a1210bb05b47461c307788c144ff77607f2b02bc9f"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "cb6ec223841bbf179b43a3ab50a0fd17",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 84507,
      "upload_time": "2020-07-27T21:12:01",
      "upload_time_iso_8601": "2020-07-27T21:12:01.950189Z",
      "url": "https://files.pythonhosted.org/packages/ac/cd/944f03abd49bfcb43cf38bb13a10ccb119bf8d875b2891971a5371602b6b/manifest_tool-2.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f2eaafd886ee0949cefe876fb749e3bbbfc06988fc7072587236b6b2d1e32b6",
        "md5": "ed611625eafc01bc771e1eae1b8f5608",
        "sha256": "d329494b245e543bf8b3607a03f7cf745000d4a4956044d124df7f7d6846bd09"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ed611625eafc01bc771e1eae1b8f5608",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 324331,
      "upload_time": "2020-07-27T21:12:04",
      "upload_time_iso_8601": "2020-07-27T21:12:04.284486Z",
      "url": "https://files.pythonhosted.org/packages/0f/2e/aafd886ee0949cefe876fb749e3bbbfc06988fc7072587236b6b2d1e32b6/manifest_tool-2.0.0-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75cc312690936546e967e788f88f12d6a5a85c018188486707147322f1a3460a",
        "md5": "2aaf904e43d1916cc6652010ba16aa6b",
        "sha256": "021d82815279d4980f151aa3db19a1c30c44058b05663aa905c9b60c4ff22671"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2aaf904e43d1916cc6652010ba16aa6b",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 324336,
      "upload_time": "2020-07-27T21:12:07",
      "upload_time_iso_8601": "2020-07-27T21:12:07.095204Z",
      "url": "https://files.pythonhosted.org/packages/75/cc/312690936546e967e788f88f12d6a5a85c018188486707147322f1a3460a/manifest_tool-2.0.0-cp38-cp38-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f6bab0b561d3f85ca56ad6ac37ccfceefa243203684fab1a646a4366dc73faa",
        "md5": "b692223bdd9d9d85e34d973bdce1f4df",
        "sha256": "aa370487138877043123b4436af646fe100b8673d2a9291226b6001bb487f9b4"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b692223bdd9d9d85e34d973bdce1f4df",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 320865,
      "upload_time": "2020-07-27T21:12:09",
      "upload_time_iso_8601": "2020-07-27T21:12:09.357208Z",
      "url": "https://files.pythonhosted.org/packages/9f/6b/ab0b561d3f85ca56ad6ac37ccfceefa243203684fab1a646a4366dc73faa/manifest_tool-2.0.0-cp38-cp38-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ce50b6f8641851609d3d2d7cba28b4fd17ea5b0b3f6978c865d36eb6cf66e3d",
        "md5": "f5ee4a996995a144d5bec0e7464b223a",
        "sha256": "1995a5e4576675801ddfeb4faf5d7da06bdd28b07f7315a15e658d1be8b5b68a"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-win32.whl",
      "has_sig": false,
      "md5_digest": "f5ee4a996995a144d5bec0e7464b223a",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 66733,
      "upload_time": "2020-07-27T21:12:11",
      "upload_time_iso_8601": "2020-07-27T21:12:11.668972Z",
      "url": "https://files.pythonhosted.org/packages/9c/e5/0b6f8641851609d3d2d7cba28b4fd17ea5b0b3f6978c865d36eb6cf66e3d/manifest_tool-2.0.0-cp38-cp38-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc7a46058131a04cbc2b682bffe4257af07a83b1f8815b1504ee2251f0bfec62",
        "md5": "92d10374db074ca5fab4045f2f72e604",
        "sha256": "dff6e439fa756e3eb46d82278768faa94800ee210c290819ee23730a870626d6"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "92d10374db074ca5fab4045f2f72e604",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5.0",
      "size": 65697,
      "upload_time": "2020-07-27T21:12:13",
      "upload_time_iso_8601": "2020-07-27T21:12:13.453105Z",
      "url": "https://files.pythonhosted.org/packages/fc/7a/46058131a04cbc2b682bffe4257af07a83b1f8815b1504ee2251f0bfec62/manifest_tool-2.0.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f16f2b34f1bbd553dfbcb5839eb7fd0192efb33a79ef21ece22775c62758e50",
        "md5": "fa7d70c402e68ee11eb507f0d1383428",
        "sha256": "af2e1c218e4ee5614d9e6ef2578f6f269d3fbc2eff16f572ca96dcc71ed6cdf2"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp39-cp39-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "fa7d70c402e68ee11eb507f0d1383428",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.5.0",
      "size": 324142,
      "upload_time": "2020-07-27T21:12:15",
      "upload_time_iso_8601": "2020-07-27T21:12:15.439508Z",
      "url": "https://files.pythonhosted.org/packages/9f/16/f2b34f1bbd553dfbcb5839eb7fd0192efb33a79ef21ece22775c62758e50/manifest_tool-2.0.0-cp39-cp39-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d87e723d62d4129c2c61cdd9fabdce9af60b612a1ef2a7bff3e24138e148baf",
        "md5": "d24490a0b505ec5598166d282e0be3f7",
        "sha256": "3861d334508f4ac797946a90936bbbf6e20300376859be2063e9177d810e421f"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp39-cp39-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d24490a0b505ec5598166d282e0be3f7",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.5.0",
      "size": 324147,
      "upload_time": "2020-07-27T21:12:17",
      "upload_time_iso_8601": "2020-07-27T21:12:17.674207Z",
      "url": "https://files.pythonhosted.org/packages/8d/87/e723d62d4129c2c61cdd9fabdce9af60b612a1ef2a7bff3e24138e148baf/manifest_tool-2.0.0-cp39-cp39-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "624546cb835334a0b1e09a14112232b035640c8996ca6211b2079359ef04f9fd",
        "md5": "ec6aa0545a73193f6418ca08e902082e",
        "sha256": "5147311f8dd238cae212ebd046b1e17e6be39882c05ff39c1c27d884e32b9324"
      },
      "downloads": -1,
      "filename": "manifest_tool-2.0.0-cp39-cp39-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ec6aa0545a73193f6418ca08e902082e",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.5.0",
      "size": 320643,
      "upload_time": "2020-07-27T21:12:21",
      "upload_time_iso_8601": "2020-07-27T21:12:21.059626Z",
      "url": "https://files.pythonhosted.org/packages/62/45/46cb835334a0b1e09a14112232b035640c8996ca6211b2079359ef04f9fd/manifest_tool-2.0.0-cp39-cp39-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d65f66aef304d794cdd3c35551d4cf09c86898a5b57ca4ea5159eb88b1beb950",
        "md5": "bcbfa9d5718590c44d0552b08ba6bc2e",
        "sha256": "3dda7c230353c747e957d59b75111a0833a84da6c8496c3a7be34ac831efe91f"
      },
      "downloads": -1,
      "filename": "manifest-tool-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bcbfa9d5718590c44d0552b08ba6bc2e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 74697,
      "upload_time": "2020-07-27T21:12:22",
      "upload_time_iso_8601": "2020-07-27T21:12:22.827150Z",
      "url": "https://files.pythonhosted.org/packages/d6/5f/66aef304d794cdd3c35551d4cf09c86898a5b57ca4ea5159eb88b1beb950/manifest-tool-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}