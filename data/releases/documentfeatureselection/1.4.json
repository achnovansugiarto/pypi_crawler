{
  "info": {
    "author": "kensuke-mi",
    "author_email": "kensuke.mit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "DocumentFeatureSelection\n========================\n\nwhat's this?\n============\n\nThis is set of feature selection codes from text data. (About feature\nselection, see\n`here <http://nlp.stanford.edu/IR-book/html/htmledition/feature-selection-1.html>`__\nor\n`here <http://stackoverflow.com/questions/13603882/feature-selection-and-reduction-for-text-classification>`__)\n\nThe Feature selection is really important when you use machine learning\nmetrics on natural language data. The natural language data usually\ncontains a lot of noise information, thus machine learning metrics are\nweak if you don't process any feature selection. (There is some\nexceptions of algorithms like *Decision Tree* or *Random forest* . They\nhave feature selection metric inside the algorithm itself)\n\nThe feature selection is also useful when you observe your text data.\nWith the feature selection, you can get to know which features really\ncontribute to specific labels.\n\nPlease visit `project page on\ngithub <https://github.com/Kensuke-Mitsuzawa/DocumentFeatureSelection>`__.\n\nIf you find any bugs and you report it to github issue, I'm glad.\n\nAny pull-requests are welcomed.\n\nSupporting methods\n------------------\n\nThis package provides you some feature selection metrics. Currently,\nthis package supports following feature selection methods\n\n-  TF-IDF\n-  Pointwise mutual information (PMI)\n-  Strength of Association (SOA)\n-  Bi-Normal Separation (BNS)\n\nContribution of this package\n----------------------------\n\n-  Easy interface for pre-processing\n-  Easy interface for accessing feature selection methods\n-  Fast speed computation thanks to sparse matrix and multi-processing\n\nOverview of methods\n===================\n\nTF-IDF\n------\n\nThis method, in fact, just calls ``TfidfTransformer`` of the\nscikit-learn.\n\nSee `scikit-learn\ndocument <http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html>`__\nabout detailed information.\n\nPMI\n---\n\nPMI is calculated by correlation between *feature* (i.e. token) and\n*category* (i.e. label). Concretely, it makes *cross-table* (or called\n*contingency table*) and calculates joint probability and marginal\nprobability on it.\n\nTo know more, see\n`reference <https://www.eecis.udel.edu/~trnka/CISC889-11S/lectures/philip-pmi.pdf>`__\n\nIn python world, `NLTK <http://www.nltk.org/howto/collocations.html>`__\nand `Other package <https://github.com/Bollegala/svdmi>`__ also provide\nPMI. Check them and choose based on your preference and usage.\n\nSOA\n---\n\nSOA is improved feature-selection method from PMI. PMI is weak when\nfeature has low word frequency. SOA is based on PMI computing, however,\nit is feasible on such low frequency features. Moreover, you can get\nanti-correlation between features and categories.\n\nIn this package, SOA formula is from following paper,\n\n``Saif Mohammad and Svetlana Kiritchenko, \"Using Hashtags to Capture Fine Emotion Categories from Tweets\", Computational Intelligence, 01/2014; 31(2).``\n\n::\n\n    SOA(w, e)\\ =\\ log_2\\frac{freq(w, e) * freq(\\neg{e})}{freq(e) * freq(w, \\neg{e})}\n\nWhere\n\n-  freq(w, e) is the number of times *w* occurs in an unit(sentence or\n   document) with label *e*\n-  freq(w,¬e) is the number of times *w* occurs in units that does not\n   have the label *e*\n-  freq(e) is the number of units having the label *e*\n-  freq(¬e) is the number of units having NOT the label *e*\n\nBNS\n---\n\nBNS is a feature selection method for binary class data. There is\nseveral methods available for binary class data, such as *information\ngain (IG)*, *chi-squared (CHI)*, *odds ratio (Odds)*.\n\nThe problem is when you execute your feature selection on skewed data.\nThese methods are weak for such skewed data, however, *BNS* is feasible\nonly for skewed data. The following paper shows how BNS is feasible for\nskewed data.\n\n``Lei Tang and Huan Liu, \"Bias Analysis in Text Classification for Highly Skewed Data\", 2005``\n\nor\n\n``George Forman, \"An Extensive Empirical Study of Feature Selection Metrics for Text Classification\",Journal of Machine Learning Research 3 (2003) 1289-1305``\n\nRequirement\n===========\n\n-  Python 3.x(checked under Python 3.5)\n\nSetting up\n==========\n\ninstall\n-------\n\n``python setup.py install``\n\nNote\n~~~~\n\nYou might see error message during running this command, such as\n\n::\n\n    We failed to install numpy automatically. Try installing numpy manually or Try anaconda distribution.\n\nThis is because ``setup.py`` tries to instal numpy and scipy with\n``pip``, however it fails. We need numpy and scipy before we install\n``scikit-learn``.\n\nIn this case, you take following choice\n\n-  You install ``numpy`` and ``scipy`` manually\n-  You use ``anaconda`` python distribution. Please visit `their\n   site <https://www.continuum.io/downloads>`__.\n\nExamples\n========\n\nSee scripts in ``examples/``\n\nWebApi & Docker\n===============\n\nThis system has web-api with ``Flask``.\n\nYou're able to use it with Docker.\n\nIf you'd like to use it, first you ``git clone`` from repository.\n\nDocker\n------\n\nBuild docker image\n~~~~~~~~~~~~~~~~~~\n\n::\n\n    docker build -t document-feature-selection-api ./\n\nRun docker container\n~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    docker run --name document-feature-selection-api-container -d -p 5000:5000 document-feature-selection-api\n\nTo use api\n~~~~~~~~~~\n\nYou're able to see documentation of web-app with ``/``\n\nFor example, if your local machine is docker host, you can get access\nthere with\n\n::\n\n    http://localhost:5000\n\nChange log\n==========\n\nFor your reference I checked performance under following environment,\n\n-  MacBookPro (late 2015) 3.1 GHz Intel Core i7, 16 GB 1867 MHz DDR3\n-  input data has 98,600 feature dimensions.\n\n0.6 2016/04/02\n--------------\n\nsupports PMI and TF-IDF under Python3.x\n\n0.7 2016/04/03\n--------------\n\nAdded SOA under Python3.x\n\n0.8 2016/04/03\n--------------\n\nAdded BNS under Python3.x\n\n0.9 2016/04/10\n--------------\n\nRemoved a bug when calling n\\_gram method of DataConverter\n\n1.0 2016/08/22\n--------------\n\n-  Refactored some modules. (I changed some module names. Sorry if you\n   have problems...)\n-  Added interface script\n\n1.1 2016/9/16\n-------------\n\n-  Resolved bottleneck point in pre-processing\n-  Fixed a bug which n\\_jobs parameter does not work in interface\n-  PMI takes around 6 minutes (with both of multiprocessing and\n   multithreading)\n\n1.2 2016/9/16\n-------------\n\n-  A bug in calculating TF-IDF score, this bug was resolved.\n\n1.3 2016/9/28\n-------------\n\n-  Resolved bottleneck poins in pre-processing\n\n   -  Introduced dict-vectorising in ScikitLearn\n   -  Introduced Cython in calculating PMI & SOA. You can call them with\n      ``use_cython=True`` flag. See ``examples/basic_example.py``\n\n-  Performance\n\n   -  Cython PMI takes 11.87 sec.\n   -  Python multiprocessing PMI takes 513.541 sec. (8.55 min.)\n\n1.3.2 2016/11/29\n----------------\n\n-  You can put persisted-dict-object on disk-drive instead of\n   dict-object on memory.\n\n   -  You can put huge dict object as data-source of\n      ``interface.run_feature_selection()``\n   -  See example ``examples/huge_data_example.py``\n\n1.3.3 2016/11/30\n----------------\n\n-  It introduced file-cache for keeping huge objects during computation.\n\n1.3.4 2017/1/27\n---------------\n\n-  It introduced cython computation for BNS.\n-  I cleaned up misery dependencies between modules.\n\n1.3.5 2017/2/25\n---------------\n\n-  The system is with Docker + Web-app\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Kensuke-Mitsuzawa/DocumentFeatureSelection",
    "keywords": "",
    "license": "CeCILL-B",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DocumentFeatureSelection",
    "package_url": "https://pypi.org/project/DocumentFeatureSelection/",
    "platform": "",
    "project_url": "https://pypi.org/project/DocumentFeatureSelection/",
    "project_urls": {
      "Homepage": "https://github.com/Kensuke-Mitsuzawa/DocumentFeatureSelection"
    },
    "release_url": "https://pypi.org/project/DocumentFeatureSelection/1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Various methods of feature selection from Text Data",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4411752,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7a1297c9a342de4a51c6e64f4a151dd1d9f7b22a1d136e17371a5532d6ccbe4",
        "md5": "2ffee884511e74e53e24bc188335b252",
        "sha256": "2565cbdb4a4b5d86f325bfccae4c5bc4594d6e3343cbf13706f62b163cf388ea"
      },
      "downloads": -1,
      "filename": "DocumentFeatureSelection-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2ffee884511e74e53e24bc188335b252",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 298696,
      "upload_time": "2017-11-06T07:42:15",
      "upload_time_iso_8601": "2017-11-06T07:42:15.807823Z",
      "url": "https://files.pythonhosted.org/packages/e7/a1/297c9a342de4a51c6e64f4a151dd1d9f7b22a1d136e17371a5532d6ccbe4/DocumentFeatureSelection-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}