{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "mitol-django-mail\n---\n\nThis is the Open Learning Django Mail app. It provides a few key features around mail:\n\n- Templated multipart html emails\n- Automatic generation of plaintext portion of multipart email\n- CSS inlining for email html\n\n\n### Getting started\n\n`pip install mitol-django-mail`\n\nAdd the mail app:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"mitol.mail.apps.MailApp\",\n]\n```\n\n### Settings\n\n#### Common Django settings\n\n- `SITE_BASE_URL` - the website's host url, including the protocol (e.g. \"https://example.com/\")\n- `SITE_NAME` - the website's name\n\n#### Mail app settings\n\nAll settings for the `mitol-django-mail` app are namespaced in django settings with `MITOL_MAIL_` prefix.\n\n- `MITOL_MAIL_FROM_EMAIL` - the default from email for all messages\n- `MITOL_MAIL_REPLY_TO_ADDRESS` - the default reply-to email for all messages\n- `MITOL_MAIL_MESSAGE_CLASSES` - a list of fully qualified message class names that make the message classes available in the debugger\n- `MITOL_MAIL_ENABLE_EMAIL_DEBUGGER` - `True` if the email debugger should be enabled, you probably want to set this to the same value as `DEBUG`\n- `MITOL_MAIL_RECIPIENT_OVERRIDE` - only used locally, this overrides the recipient of all outgoing email messages\n- `MITOL_MAIL_FORMAT_RECIPIENT_FUNC` - (optional) set to a custom function to format recipients. You'll typically use this if you're storing the name in a place other that Django's builtin `User` model. Default: `\"mitol.mail.defaults.format_recipient\"`.\n- `MITOL_MAIL_CAN_EMAIL_USER_FUNC` - (optional) set to a custom function to determine whether a user can be sent an email. You'll typically use this if you have additional criteria beyond the user having an email. Default: `\"mitol.mail.defaults.can_email_user\"`.\n- `MITOL_MAIL_CONNECTION_BACKEND` - the connection backend to use for email sending. You'd use this only if you're doing something really custom that `anymail` doesn't give you. Default: `\"anymail.backends.mailgun.EmailBackend\"`.\n\n### Usage\n\n#### Create message classes\n\nThis involves subclassing `mitol.mail.messages.TemplatedMessage`. To subclass, do the following:\n\n- `template_name` attribute - `str` that denotes the directory within `templates/mail` that this message's templates reside in (e.g. `\"password_reset\"`)\n- `name` attribute - a human-friendly name for your message (e.g. `\"Password Reset\"`)\n- `get_debug_template_context` - static method that returns a context dict for rendering the email in the debugger\n\n\n#### Define templates\nIn your apps's `templates` directory, create some templates:\n```\ntemplates/\n  mail/\n    {template_name}/\n      subject.txt\n      body.html\n```\n\n#### Configure settings.py\n\nAdd your custom message class to `MITOL_MAIL_MESSAGE_CLASSES` so it is available in the debugger.\n\n#### Optional customizations\n\nOptionally, you can also override:\n\n- `get_base_template_context` - extend the default base template context used with all emails of this type. Return type is a `dict`. As a best practice you should be merging with `super().get_base_template_context()`.\n- `get_default_headers` - extend the default headers included with all emails of this type. Return type is a `dict`. As a best practice you should be merging with `super().get_default_headers()`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mitol-django-mail",
    "package_url": "https://pypi.org/project/mitol-django-mail/",
    "platform": null,
    "project_url": "https://pypi.org/project/mitol-django-mail/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mitol-django-mail/3.3.0/",
    "requires_dist": [
      "beautifulsoup4 (>=4.6.0)",
      "django-anymail (>=6.0)",
      "django (<4.0,>=2.2.12)",
      "html5lib (>=1.1)",
      "mitol-django-common (~=2.7.0)",
      "premailer (>=3.7.0)",
      "toolz (>=0.10.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "MIT Open Learning django app extensions for mail",
    "version": "3.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16460321,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1773ae73471c88af338d421321321dfe7df27e743de9b96cda030dbfb4d43668",
        "md5": "663eaa1265840f77951867f9e1c25008",
        "sha256": "a28422b018487c9a844848417e7c593f794b210d0353e261ab6ecbb5d42f5408"
      },
      "downloads": -1,
      "filename": "mitol_django_mail-3.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "663eaa1265840f77951867f9e1c25008",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19575,
      "upload_time": "2023-01-17T16:15:24",
      "upload_time_iso_8601": "2023-01-17T16:15:24.893474Z",
      "url": "https://files.pythonhosted.org/packages/17/73/ae73471c88af338d421321321dfe7df27e743de9b96cda030dbfb4d43668/mitol_django_mail-3.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae84844145a5da5785b7b6d8fb621d1f514dbd2f5a4eea868918702dc8fccaca",
        "md5": "481448fc0e72d7dab46bbe261be021e5",
        "sha256": "3b7caca7567abb8b7479086b3299cc2f48617936026a83b636e14236dfb48752"
      },
      "downloads": -1,
      "filename": "mitol-django-mail-3.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "481448fc0e72d7dab46bbe261be021e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16100,
      "upload_time": "2023-01-17T16:15:26",
      "upload_time_iso_8601": "2023-01-17T16:15:26.479580Z",
      "url": "https://files.pythonhosted.org/packages/ae/84/844145a5da5785b7b6d8fb621d1f514dbd2f5a4eea868918702dc8fccaca/mitol-django-mail-3.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}