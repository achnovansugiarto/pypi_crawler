{
  "info": {
    "author": "Andre Mesarovic",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# MLflow Export Import\n\nThe MLflow Export Import package provides tools to copy MLflow objects (runs, experiments or registered models) from one MLflow tracking server (Databricks workspace) to another.\nUsing the MLflow REST API, the tools export MLflow objects to an intermediate directory and then import them into the target tracking server.\n\nFor more details:\n* [JSON export file format](README_export_format.md).\n* [MLflow Object Relationships](https://github.com/amesar/mlflow-resources/blob/master/slides/Databricks_MLflow_Object_Relationships.pdf) slide deck.\n\n## Architecture\n\n<img src=\"architecture.png\" height=\"330\" />\n\n## Overview\n\n### Why use MLflow Export Import?\n  * MLOps CI/CD. Migrate runs (or registered models) to another tracking server.\n    * Promote a run from the development to the test tracking server.\n    * After it passes tests, then promote it to the production tracking server.\n  * Share and collaborate with other data scientists in the same or other tracking server (Databricks workspace).\n    * For example, copy an experiment from one user to another.\n  * Backup your MLflow objects to external storage so they can be restored if needed.\n  * Disaster recovery. Save your MLflow objects to external storage so they can be replicated to another tracking server.\n\n### MLflow Export Import scenarios\n\n|Source tracking server | Destination tracking server | Note |\n|-------|------------|---|\n| Open source | Open source | common |\n| Open source | Databricks | less common |\n| Databricks | Databricks |common |\n| Databricks | Open source | rare |\n\n### MLflow Objects\n\nThese are the MLflow objects and their attributes that can be exported.\n\n| Object | REST | Python | SQL |\n|----|---|---|--|\n| Run | [link]( https://mlflow.org/docs/latest/rest-api.html#run) | [link](https://mlflow.org/docs/latest/python_api/mlflow.entities.html#mlflow.entities.Run) | [link](https://github.com/amesar/mlflow-resources/blob/master/database_schemas/schema_mlflow_2.0.1.sql#L166) |\n| Experiment | [link](https://mlflow.org/docs/latest/rest-api.html#mlflowexperiment) | [link](https://mlflow.org/docs/latest/python_api/mlflow.entities.html#mlflow.entities.Experiment) | [link](https://github.com/amesar/mlflow-resources/blob/master/database_schemas/schema_mlflow_2.0.1.sql#L37) |\n| Registered Model | [link](https://mlflow.org/docs/latest/rest-api.html#registeredmodel) | [link](https://mlflow.org/docs/latest/python_api/mlflow.entities.html#mlflow.entities.model_registry.RegisteredModel) | [link](https://github.com/amesar/mlflow-resources/blob/master/database_schemas/schema_mlflow_2.0.1.sql#L152) |\n| Registered Model Version | [link](https://mlflow.org/docs/latest/rest-api.html#modelversion) | [link](https://mlflow.org/docs/latest/python_api/mlflow.entities.html#mlflow.entities.model_registry.ModelVersion) | [link](https://github.com/amesar/mlflow-resources/blob/master/database_schemas/schema_mlflow_2.0.1.sql#L102) |\n\nMLflow provides rudimentary capabilities for tracking lineage regarding the original source objects.\nSee [README_governance](README_governance.md).\n\n## Tools Overview\n\nThere are two dimensions to the MLflow Export Import tools:\n* Export of MLflow objects in single or bulk mode.\n* Regular Python scripts or Databricks notebooks.\n\n**Single and Bulk Tools**\n\nThe two export modes are:\n\n* [Single tools](README_single.md). Copy a single MLflow object between tracking servers. \nThese tools allow you to specify a different destination object name.\nFor example, if you want to clone the experiment `/Mary/Experiments/Iris` under a new name, you can specify the target experiment name as `/John/Experiments/Iris`.\n\n* [Bulk tools](README_bulk.md). High-level tools to copy an entire tracking server or a collection of MLflow objects.\nThere is no option to change destination object names.\nFull object referential integrity is maintained (e.g. an imported registered model version will point to the imported run that it refers to.\n\n[Databricks notebooks](databricks_notebooks/README.md)\nsimply invoke the corresponding Python classes.\n\n\n## Limitations\n\nSee [README_limitations.md](README_limitations.md).\n\n## Quick Start\n\nSetup\n```\npip install mlflow-export-import\n```\n\nExport experiment\n```\nexport MLFLOW_TRACKING_URI=http://localhost:5000\n\nexport-experiment \\\n  --experiment sklearn-wine \\\n  --output-dir /tmp/export\n```\n\nImport experiment\n```\nexport MLFLOW_TRACKING_URI=http://localhost:5001\n\nimport-experiment \\\n  --experiment-name sklearn-wine \\\n  --input-dir /tmp/export\n```\n\n## Setup\n\nSupports python 3.8.\n\n\n### Local setup\n\nFirst create a virtual environment.\n```\npython -m venv mlflow-export-import\nsource mlflow-export-import/bin/activate\n```\n\nThere are several different ways to install the package.\n\n#### 1. Install from PyPI - recommended\n\n```\npip install mlflow-export-import\n```\n\n#### 2. Install from github directly\n\n```\npip install git+https:///github.com/mlflow/mlflow-export-import/#egg=mlflow-export-import\n```\n\n#### 3. Install from github clone\n```\ngit clone https://github.com/mlflow/mlflow-export-import\ncd mlflow-export-import\npip install -e .\n```\n\n### Databricks notebook setup\n\nThere are two different ways to install the package in a Databricks notebook.\n\n#### 1. Install package in notebook\n\nSee documentation: [Install notebook-scoped libraries with %pip](https://docs.databricks.com/libraries/notebooks-python-libraries.html#install-notebook-scoped-libraries-with-pip).\n\n\n```\n%pip install mlflow-export-import\n```\n\n#### 2. Install package as a wheel on cluster\n\nBuild the wheel artifact, upload it to DBFS and then [install it on your cluster](https://docs.databricks.com/libraries/cluster-libraries.html).\n\n```\ngit clone https://github.com/mlflow/mlflow-export-import\ncd mlflow-export-import\npython setup.py bdist_wheel\ndatabricks fs cp dist/mlflow_export_import-1.0.0-py3-none-any.whl {MY_DBFS_PATH}\n```\n\n### Laptop to Databricks usage\n\nTo run the tools externally (from your laptop) against a Databricks tracking server (workspace) set the following environment variables:\n```\nexport MLFLOW_TRACKING_URI=databricks\nexport DATABRICKS_HOST=https://mycompany.cloud.databricks.com\nexport DATABRICKS_TOKEN=MY_TOKEN\n```\nFor full details see [Access the MLflow tracking server from outside Databricks](https://docs.databricks.com/applications/mlflow/access-hosted-tracking-server.html).\n\n\n## Running tools\n\nThe main tool scripts can be executed either as a standard Python script or console script.\n\nPython [console scripts](https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point)  (such as export-run, import-run, etc.) are provided as a convenience. For a list of scripts see [setup.py](setup.py).\n\nThis allows you to use:\n```\nexport-experiment --help\n```\ninstead of:\n```\npython -u -m mlflow_export_import.experiment.export_experiment --help\n```\n\n## Other\n\n* [README_options.md](README_options.md) advanced options.\n* [Miscellanous tools](README_tools.md).\n\n## Testing\n\nThere are two types of tests : open source and Databricks tests.\nSee [tests/README](tests/README.md) for details.\n\n## README files\n\n* [README.md](README.md)\n* [README_single.md](README_single.md)\n* [README_bulk.md](README_bulk.md)\n* [README_tools.md](README_tools.md)\n* [README_limitations.md](README_limitations.md)\n* [README_options.md](README_options.md)\n* [README_export_format.md](README_export_format.md)\n* [README_governance.md](README_governance.md)\n* [tests/README.md](tests/README.md)\n  * [tests/open_source/README.md](tests/open_source/README.md)\n  * [tests/databricks/README.md](tests/databricks/README.md)\n* [mlflow_export_import/workflow_api/README.md](mlflow_export_import/workflow_api/README.md)\n* [databricks_notebooks/README.md](databricks_notebooks/README.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mlflow/mlflow-export-import",
    "keywords": "mlflow ml ai",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflow-export-import",
    "package_url": "https://pypi.org/project/mlflow-export-import/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlflow-export-import/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mlflow/mlflow-export-import/issues",
      "Documentation": "https://github.com/mlflow/mlflow-export-import/blob/master/README.md",
      "Homepage": "https://github.com/mlflow/mlflow-export-import",
      "Source Code": "https://github.com/mlflow/mlflow-export-import/"
    },
    "release_url": "https://pypi.org/project/mlflow-export-import/1.2.0/",
    "requires_dist": [
      "mlflow (>=1.28.0)",
      "wheel",
      "pytest (>=7.2.0)",
      "pytest-html",
      "shortuuid"
    ],
    "requires_python": ">=3.8",
    "summary": "Copy MLflow objects (experiments, runs or registered models) to another tracking server",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16891767,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68dec9add7618c319603e3a461acf313dc1541725d1c44cd5b81f6b28dad1be5",
        "md5": "5cb46a071e513f0b00163c884c12b906",
        "sha256": "af5456615fbf77361ecd42409e9734eb3891d6cec22231f6bc453a72f6ab1157"
      },
      "downloads": -1,
      "filename": "mlflow_export_import-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cb46a071e513f0b00163c884c12b906",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 50515,
      "upload_time": "2023-02-16T18:20:36",
      "upload_time_iso_8601": "2023-02-16T18:20:36.931314Z",
      "url": "https://files.pythonhosted.org/packages/68/de/c9add7618c319603e3a461acf313dc1541725d1c44cd5b81f6b28dad1be5/mlflow_export_import-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}