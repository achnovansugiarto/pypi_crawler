{
  "info": {
    "author": "K",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<a href=\"https://raw.github.com/cobrapitz/MehlBot/master/docs/badges/interrogate-badge.svg\"><img alt=\"PyPI\" src=\"https://raw.github.com/cobrapitz/MehlBot/master/docs/badges/interrogate-badge.svg\"></a>\n<a href=\"https://github.com/cobrapitz/MehlBot/blob/master/LICENSE\"><img alt=\"PyPI\" src=\"https://img.shields.io/github/license/cobrapitz/mehlbot\"></a>\n<a href=\"https://github.com/cobrapitz/MehlBot\"><img alt=\"PyPI\" src=\"https://img.shields.io/badge/mehl-bot-f39f37\"></a>\n<a href=\"https://pypi.org/project/mehlbot/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/mehlbot\"></a>\n<a href='https://mehlbot.readthedocs.io/en/latest/?badge=latest'><img src='https://readthedocs.org/projects/mehlbot/badge/?version=latest' alt='Documentation Status' /></a>\n\n\n[//]: # (<a href=\"https://github.com/psf/black\"><img alt=\"PyPI\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>)\n[//]: # (<a href=\"https://pypi.org/project/mehlbot/\"><img alt=\"PyPI\" src=\"https://img.shields.io/badge/mehl-bot-f39f37\"></a>)\n[//]: # (![t]&#40;https://app.codecov.io/gh/cobrapitz/mehlbot&#41;)\n[//]: # ([![security: bandit]&#40;https://img.shields.io/badge/security-bandit-yellow.svg&#41;]&#40;https://github.com/PyCQA/bandit&#41;)\n[//]: # (![example workflow]&#40;https://github.com/github/docs/actions/workflows/main.yml/badge.svg&#41;)\n\n# MehlBot\n\nMehlBot is a Discord bot that responds to commands by executing (callback) functions.\n\nIt's built around the `discord.Client` class.\nThis allows an easy integration to existing bots and creation of new bots. \n\nDocumentation: [docs](https://mehlbot.readthedocs.io/en/latest/)\n\nSee [examples/hellow_bot.py](https://github.com/cobrapitz/MehlBot/blob/master/examples/hello_bot.py) for full source code.\n```Python\n# imports ... \n\nclass HelloBot(discord.Client):  # discord.Client class\n\n    def __init__(self, intents: Intents, **options) -> None:\n        super().__init__(intents=intents, **options)\n\n    async def on_ready(self) -> None:  # Gets called when bot is ready/started\n        print(\"Bot started.\")\n\n    async def on_message(self, message: Message):\n        if message.author == self.user:  # skip if message's author is the bot\n            return\n\n        # necessary callback command\n        # bot_commands are in mehlbot.command\n        command_found = await command_callback.process_command(self, bot_commands, message)\n\n        # prefix with command if message is command\n        log_msg = \"\" if not command_found else \"command: \"\n        log_msg += f\"{message.author.nick} ({message.author.name}): '{message.content}'\"\n        print(log_msg)\n\n\ndef main():\n    hello_bot = HelloBot(discord.Intents.all())  # discord intents\n    with Path(\"token.txt\").open() as file:  # load token form file (.gitignore) or use env\n        token = file.read()\n    hello_bot.run(token)\n```\n\nAnd this shows how to add commands\n\n```Python\nfrom mehlbot.command import add_command\n\nasync def _add(message: discord.Message, client: discord.Client, args: List):\n    url = args[0]\n    ...\n\nasync def _export_playlist(message: discord.Message, client: discord.Client, args: List):\n    playlist = args[0]\n    ...\n    \nadd_command(\"add\", _add,\n            allowed_num_args=[[\"url\"]], # requires exactly 1 argument\n            description=\"Adds the given YouTube url to the current playlist.\")\n\nadd_command(\"export playlist\", _export_playlist,\n            allowed_num_args=[[], [\"playlist_name\"]], # either 0 or 1 arg\n            description=\"Exports urls of current playlist or of given playlist.\")\n\n```\n\n\n\n- - - \n### Dev \n\n- `poetry run task --list` to show all defined tasks to run. (run task with: `poetry run task <task>`)\n- note `make html` -> rst files copy into source folder, otherwise moduels not found\n\n[//]: # (- `pre-commit install` should always be the first thing you do.)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cobrapitz/MehlBot",
    "keywords": "Discord,discord.py,Discord-Bot,Discord-Command-Bot,Python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mehlbot",
    "package_url": "https://pypi.org/project/mehlbot/",
    "platform": null,
    "project_url": "https://pypi.org/project/mehlbot/",
    "project_urls": {
      "Documentation": "https://mehlbot.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/cobrapitz/MehlBot",
      "Issues": "https://github.com/cobrapitz/MehlBot/issues",
      "Repository": "https://github.com/cobrapitz/MehlBot"
    },
    "release_url": "https://pypi.org/project/mehlbot/1.1.2/",
    "requires_dist": [
      "discord.py (>=2.2.2,<3.0.0)"
    ],
    "requires_python": ">=3.8.1,<4.0.0",
    "summary": "A baisc interface for discord bots to handle receiveing commands using the discord.py package.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17338498,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "217864fa2492c75a8b535cd5873d145099662aed3de34e9fab3444b265b33897",
        "md5": "0a93ffd621071fd432e96df3341b9f2e",
        "sha256": "14d4523b1c4e042ea6ba71f32a6cfaecfae5d2d2f3e76070829b3ca733e4cf35"
      },
      "downloads": -1,
      "filename": "mehlbot-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a93ffd621071fd432e96df3341b9f2e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 7266,
      "upload_time": "2023-03-17T04:35:49",
      "upload_time_iso_8601": "2023-03-17T04:35:49.154874Z",
      "url": "https://files.pythonhosted.org/packages/21/78/64fa2492c75a8b535cd5873d145099662aed3de34e9fab3444b265b33897/mehlbot-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0948a18c3dc8944f60ab29367d6a252b3de1aaeec867402d5fedb3cd8218287",
        "md5": "56dcc1cafd95415161ddd95deaf45034",
        "sha256": "eae2ffa5e290942944332074b0babd39d9322008ef6ee7b6573c86ba0f6f3ae7"
      },
      "downloads": -1,
      "filename": "mehlbot-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "56dcc1cafd95415161ddd95deaf45034",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 7889,
      "upload_time": "2023-03-17T04:35:50",
      "upload_time_iso_8601": "2023-03-17T04:35:50.814672Z",
      "url": "https://files.pythonhosted.org/packages/d0/94/8a18c3dc8944f60ab29367d6a252b3de1aaeec867402d5fedb3cd8218287/mehlbot-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}