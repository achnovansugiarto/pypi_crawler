{
  "info": {
    "author": "Christian Sandrini",
    "author_email": "mail@chrissandrini.ch",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Tests](https://github.com/defichain-api/masternode-health-server/actions/workflows/package.yml/badge.svg?branch=master)](https://github.com/defichain-api/masternode-health-server/actions/workflows/package.yml) [![codecov](https://codecov.io/gh/defichain-api/masternode-health-server/branch/master/graph/badge.svg?token=WWRB5IZN7A)](https://codecov.io/gh/defichain-api/masternode-health-server) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE.md)\n\n\n\n\n# Masternode Health Server\n\nThis script is designed for collecting server & DeFiChain node information of your system and send them to the [DeFiChain Masternode Health API](https://github.com/defichain-api/masternode-health).\n\nFor a closed look in it's functionality there's a [detailled documentation](https://docs.defichain-masternode-health.com/).\n\n# Installation\n\n- Install pip3 (pip from python v3. Some operating systems just name it ```pip```)\n- Run ```pip3 install masternode-health```\n\nMake sure you set ```rpcuser=xxx``` and ```rpcpassword=xxx``` in your defi.conf\nYou can choose the username and password by yourself. \n\n**Hint:** restart your node after updating your defi.conf\n# Upgrade to the current release\n\n```\npip3 install --upgrade masternode-health\n```\n\n# Create API key\n\nThis scripts needs a DeFiChain Masternode Health API key. Take a look at the [documentation](https://docs.defichain-masternode-health.com/#get-an-api-key).\n\n## tl;dr:\n\nOpen up a new tab in your browser, paste in that URL\n\n```\nhttps://api.defichain-masternode-health.com/setup/api_key\n```\n\nYou'll get something like this:\n\n```\n{\"message\":\"API key generated\",\"api_key\":\"537e13a8-d027-45db-8f51-92b5219b203f\"}\n```\n\nThe part after ```\"api_key\":\"``` (```537e13a8-d027-45db-8f51-92b5219b203f```) is your API key. Copy it (without ```\"}```), store it in a safe place like your password manager and close that browser tab because you don't need it anymore.\n\n# Usage\n\n## Prerequisites\nYou can either run masternode-health by calling it with it's relative path in your user's directory:\n\n```\n~/.local/bin/masternode-health --help\n```\n\nOR you can create a symlink for making the ```masternode-health``` command accessible from anywhere on your system. The following command requires sudo rights.\n\n```\nsudo ln -sf ~/.local/bin/masternode-health /usr/local/bin/masternode-health\n```\n\n\n## Running Masternode Health\n\nTo keep it simple, the following examples do not contain the relative path like described above.\n\n```\n$ masternode-health --help\nusage: masternode-health [-h] [--max-block-seconds MAX_BLOCK_SECONDS] [--rpchost RPCHOST] [--verbose] [--report] [--defi-path DEFI_PATH] [--defi-conf DEFI_CONF] [--api-key API_KEY] [--version]\n\nDefiChain Masternode Monitor\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --max-block-seconds MAX_BLOCK_SECONDS\n                        Alert if node did not try to calculate hash within max-block-seconds (default: 30 seconds)\n  --rpchost RPCHOST     RPC host (default: http://localhost:8554)\n  --verbose             Prints stats to stdout\n  --report              Force sending report when using in combination with --verbose\n  --defi-path DEFI_PATH\n                        Path to your .defi folder. Default: ~/.defi\n  --defi-conf DEFI_CONF\n                        Path to your defi.conf. Default: ~/.defi/defi.conf\n  --api-key API_KEY     API Key\n  --version             Returns masternode-health version\n```\n\nYou can manually run it with\n\n```\n$ masternode-health --verbose --report --api-key=your-api-key\n\n----- [ server stats ] -----\nSystem Load    [               ] 1%   \nMemory Usage:  [               ] 3%   \nDisk Usage:    [               ] 6%   \nLog Size:      16 MB     \n\n----- [ node info ] -----\nNode Version:       v1.8.1.0-release                                            \nUptime:             9 days, 2:50:25                                             \nLocal Block Height: 1149879                                                     \nLocal Block Hash:   526fe2a061a9a7bde7b07d308b986624c1dd49aee0ac58b2ad982dd300416ef6\nConnection Count:   8                                                           \nOperator ..xzy:     ✅                                                           \nOperator ..abc:     ✅                                                          \n\n```\n\nPlease don't forget to replace the following parts with your own:\n- your-api-key: make an educated guess ;)\n\n# Run automatically with a cron job\n\nAdd calling Masternode Health into your crontab to check every 10 minutes.\n\nFirst, open up a text editor to edit your crontab with:\n\n```\ncrontab -e\n```\n\nAdd the following line to run it every 10 minutes: (Masternode Health won't accept any higher frequency than every 10 minutes)\n\n```\n*/10 * * * * ~/.local/bin/masternode-health --api-key=your-api-key\n```\n\n**Warning:** The API allows only 1 call to each endpoint every 300 seconds. Don't let the cron run more often than every 5 minutes!\n\nPlease don't forget to replace the following parts with your own:\n- your-api-key: make an educated guess ;)\n\n# Verbose\n\nTo take a look at the collected data, you can use the `--verbose` argument.\nWith this argument, no data is sent to the API. To force sending the data and viewing the verbose output use the `--report` argument in parallel.\n\n# Bugs or suggestions?\nOpen issue or submit a pull request to\n[https://github.com/defichain-api/masternode-health-server](https://github.com/defichain-api/masternode-health-server)\n\n# Buy me a coffee\n@sandrich implemented this tool alone. Want to give him a small thank you? His coffee cash box (in DFI) is:\n**df1qvzdgd85m67eym95l0jxrdn6aue5cjthpg78r4z**\n\n# License\nMIT\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/masternode_health",
    "keywords": "",
    "license": "LICENSE.md",
    "maintainer": "",
    "maintainer_email": "",
    "name": "masternode-health",
    "package_url": "https://pypi.org/project/masternode-health/",
    "platform": "",
    "project_url": "https://pypi.org/project/masternode-health/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/masternode_health"
    },
    "release_url": "https://pypi.org/project/masternode-health/1.0.3/",
    "requires_dist": [
      "psutil",
      "requests"
    ],
    "requires_python": ">2.7",
    "summary": "This script is designed for collecting server & DeFiChain node information of your system and send them to the DeFiChain Masternode Health API",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14822341,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d90365819385bb37c40afc6f42dc5ed22f514a48bb3cd0a66b6e669500769b06",
        "md5": "23e0b1f730d504d8b4227b7be41bc3ae",
        "sha256": "2db9a794b03e7768262ba5986ae4e1978f5c96f113795c6832f2a5596e394897"
      },
      "downloads": -1,
      "filename": "masternode_health-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23e0b1f730d504d8b4227b7be41bc3ae",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">2.7",
      "size": 10673,
      "upload_time": "2021-09-13T07:09:29",
      "upload_time_iso_8601": "2021-09-13T07:09:29.584802Z",
      "url": "https://files.pythonhosted.org/packages/d9/03/65819385bb37c40afc6f42dc5ed22f514a48bb3cd0a66b6e669500769b06/masternode_health-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}