{
  "info": {
    "author": "Dunstan Becht",
    "author_email": "dunstan@becht.network",
    "bugtrack_url": null,
    "classifiers": [
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: System :: Clustering"
    ],
    "description": "<div align=\"center\">\n  <img width=\"250\" src=\"https://dunstan.becht.network/views/signatures/mines.svg\" alt=\"Mines Saint-Etienne\">\n</div>\n\n# Line Profile Analysis - Input\n\nThis repository is related to the analysis of crystals containing dislocations by X-ray diffraction. It is part of a project conducted during a research internship at the laboratory of material and structural sciences of the *École Nationale Supérieure des Mines de Saint-Étienne*. Three python packages have been developed to conduct line profile analyses based on simulation results:\n* [`lpa.input`](https://github.com/DunstanBecht/lpa-input) (line profile analysis input generator)\n* [`lpa.xrd`](https://github.com/DunstanBecht/lpa-xrd) (line profile analysis x-ray diffraction simulation program)\n* [`lpa.output`](https://github.com/DunstanBecht/lpa-output) (line profile analysis output analyzer)\n\n# Features\n\nThe package `lpa.input` can be used to:\n* generate dislocation distributions according to different models\n* export the distributions in standardized files for input to an X-ray diffraction simulation program\n* export the distributions in dislocation maps\n* export a spatial analysis of the distributions\n\n# Installation\n\nThe package is indexed on [PyPI](https://pypi.org/project/lpa-input/) and installable directly via pip:\n```bash\npip install -U lpa-input\n```\n\n# Examples\n\n### Distribution maps\n<div align=\"center\">\n<img width=\"49%\" src=\"https://raw.githubusercontent.com/DunstanBecht/lpa-input/e8440e96ed40d712cf4617009e1117e86617ab48/tests/maps/rho5e13m-2_circle_1000nm_RDD_d5e-5nm-2_S0.svg\" alt=\"RDD\">\n<img width=\"49%\" src=\"https://raw.githubusercontent.com/DunstanBecht/lpa-input/e8440e96ed40d712cf4617009e1117e86617ab48/tests/maps/rho5e13m-2_square_2000nm_RRDD-E_s0200nm_f2_S0.svg\" alt=\"RRDD-E\">\n</div>\n<div align=\"center\">\n<img width=\"49%\" src=\"https://raw.githubusercontent.com/DunstanBecht/lpa-input/e8440e96ed40d712cf4617009e1117e86617ab48/tests/maps/rho5e13m-2_circle_2000nm_RCDD-R_d5e-5nm-2_s0500nm_t020nm_IDBC_S0.svg\" alt=\"RCDD-R IDBC\">\n<img width=\"49%\" src=\"https://raw.githubusercontent.com/DunstanBecht/lpa-input/e8440e96ed40d712cf4617009e1117e86617ab48/tests/maps/rho5e13m-2_square_2000nm_RCDD-R_d5e-5nm-2_s0500nm_t020nm_PBCG1_S0.svg\" alt=\"RCDD-R PBCG1\">\n</div>\n\n### Input data files\n```\n# please keep the structure of this file unchanged\n 1  1  0 # z: direction of 'l' (line vector) [uvw]\n-1  1  0 # x: direction of 'L' (Fourier variable) [uvw]\n 1  1  0 # b: Burgers vector direction [uvw]\n 2  0  0 # g: diffraction vector direction (hkl)\n0.250000 # C: contrast coefficient [1]\n0.404940 # a: cell parameter [nm]\n     400 # s: Cylinder radius [nm]\n    11.8 # a3: step size of 'L' along x [nm]\n   0.345 # nu: Poisson's number [1]\n      25 # number of dislocations\n# Burgers vector and dislocation (x,y) coordinates\n 1 -1.61548011465209754078E+02 -1.87858054587866405427E+02\n 1 -4.95321847603491747236E+01  3.96358615901232042233E+02\n 1  3.83092997789296475730E+02  1.00863319641021547568E+02\n 1  3.29405674347048261552E+02  3.43310242328645074394E+01\n 1  1.24896256845976836303E+02 -2.97446481284809294721E+02\n 1  2.83261500112922590233E+02 -1.72957796716792046254E+02\n 1 -1.95525742141039444277E+02 -1.54910012577794219624E+02\n 1 -1.88880305594950499426E+01 -1.45803577134339775512E+02\n 1 -3.27077937109537572269E+02 -9.19682417317111031707E+01\n 1  2.66132672811368365728E+02 -1.15022137253631683507E+02\n 1  8.95788549895187458105E+01 -2.03995903949563853530E+02\n 1  2.78766292014808357180E+02  4.79706674967438928547E+00\n-1  2.35696079304986938041E+02 -2.94559691227597113539E+02\n-1  3.78008065264777542325E+02  8.09744721982159489926E+01\n-1 -3.05015488147403850405E+01 -2.37311792781886936154E+02\n-1  1.36174901645258700000E+02  2.70002164951812687832E+02\n-1  1.48116703651397642716E+02 -1.71931802385698262015E+02\n-1 -2.97958976321769398510E+02 -7.94257720216477167696E+01\n-1 -7.14523593672500396679E+01  2.21269872377589337020E+02\n-1 -2.21359970901484132355E+02  1.16870883315733863128E+02\n-1  3.71458286581792890502E+02  6.68029763594811925032E+01\n-1  1.35411516921856758700E+02  1.34197377210817563764E+02\n-1 -1.51035996503921097656E+02 -2.77305014216898598534E+02\n-1 -6.97944269504084076061E+01 -9.25807374125183457636E+01\n 1 -2.73203683148690629423E+02 -2.42038862868204574852E+02\n```\n\n### Spatial analysis\n![Ripley’s K function](https://raw.githubusercontent.com/DunstanBecht/lpa-input/4a69a406d1e89073dbd3768c10ab3109aedce3ac/tests/analyses/40000_rho5e13m-2_RRDD-E_s0200nm_f2_circle_1000nm_S0_KKKK.svg)\n![Pair correlation function](https://raw.githubusercontent.com/DunstanBecht/lpa-input/4a69a406d1e89073dbd3768c10ab3109aedce3ac/tests/analyses/40000_rho5e13m-2_RRDD-E_s0200nm_f2_circle_1000nm_S0_gggg.svg)\n![Symmetric and antisymmetric functions](https://raw.githubusercontent.com/DunstanBecht/lpa-input/4a69a406d1e89073dbd3768c10ab3109aedce3ac/tests/analyses/40000_rho5e13m-2_RRDD-E_s0200nm_f2_circle_1000nm_S0_GaGs.svg)\n\n# Physical aspects\n\nTwo geometries are proposed:\n* circle (intersection of a plane with a cylinder) centered in `(0, 0)`\n* square (intersection of a plane with a cuboid) bottom left corner at `(0, 0)`\n\nA dislocation associates:\n* a Burgers vector sense `b`\n* a position `p`\n\nA distribution is mainly characterized by the following elements:\n* the shape of the region of interest\n* the model used for the random generation of dislocations\n* the generated dislocations\n\nA sample is a set of distribution and is mainly characterized by:\n* the number of generated distribution stored\n* the shape of the region of interest\n* the model used for the random generation of dislocations\n* the stored distributions\n\n# Abbreviations\n\nSome abbreviations are used in the program:\n\n### Models\n* `RDD` random dislocation distribution\n* `RRDD` restrictedly random dislocation distribution\n* `RCDD` random cell dislocation distribution\n\n### Model variants\n* `R` randomly distributed Burgers vectors\n* `E` evenly distributed Burgers vectors\n* `D` dipolar Burgers vectors\n\n### Boundary conditions\n* `PBCG` periodic boundary conditions applied when generating the distribution\n* `PBCR` periodic boundary conditions applied when running the simulation\n* `IDBC` image dislocations boundary conditions\n\n# User guide\n\nThe directory `tests/` contains several examples of package module usage. The docstrings are carefully written and it is recommended to refer to the documentation with the `help()` command.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DunstanBecht/lpa-input",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lpa-input",
    "package_url": "https://pypi.org/project/lpa-input/",
    "platform": "",
    "project_url": "https://pypi.org/project/lpa-input/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DunstanBecht/lpa-input/issues",
      "Homepage": "https://github.com/DunstanBecht/lpa-input"
    },
    "release_url": "https://pypi.org/project/lpa-input/1.0.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "beartype"
    ],
    "requires_python": "",
    "summary": "Tools for the generation and analysis of dislocation distributions.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12972601,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "860eb5f7df2098dd361a9886456d4cf456c089579a3395e43798f85b03b01ae7",
        "md5": "3ad9b239c4930d4c223e00b96c33fd66",
        "sha256": "8f8fd82c171b81f6ef07d1976d139e0a0417c42ab5fde31fa4b440c71aacf7ca"
      },
      "downloads": -1,
      "filename": "lpa_input-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ad9b239c4930d4c223e00b96c33fd66",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27993,
      "upload_time": "2021-08-22T09:43:11",
      "upload_time_iso_8601": "2021-08-22T09:43:11.767168Z",
      "url": "https://files.pythonhosted.org/packages/86/0e/b5f7df2098dd361a9886456d4cf456c089579a3395e43798f85b03b01ae7/lpa_input-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27c426587f957e4c3fbcc8c9788edb26b4c689d63ab3f1e4f5325fe72966835f",
        "md5": "be87714a3429277806707664bb9a428a",
        "sha256": "2682bcb99df442cd88936496023faffcffd89a91aa6dea881be01e947345c2f3"
      },
      "downloads": -1,
      "filename": "lpa-input-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be87714a3429277806707664bb9a428a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26351,
      "upload_time": "2021-08-22T09:43:13",
      "upload_time_iso_8601": "2021-08-22T09:43:13.325294Z",
      "url": "https://files.pythonhosted.org/packages/27/c4/26587f957e4c3fbcc8c9788edb26b4c689d63ab3f1e4f5325fe72966835f/lpa-input-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}