{
  "info": {
    "author": "Zoran Simic",
    "author_email": "zoran@simicweb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Utilities"
    ],
    "description": "Manage git projects en masse\n============================\n\n.. image:: https://img.shields.io/pypi/v/mgit.svg\n    :target: https://pypi.org/project/mgit/\n    :alt: Version on pypi\n\n.. image:: https://travis-ci.org/zsimic/mgit.svg?branch=master\n    :target: https://travis-ci.org/zsimic/mgit\n    :alt: Travis CI\n\n.. image:: https://codecov.io/gh/zsimic/mgit/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/zsimic/mgit\n    :alt: codecov\n\n.. image:: https://img.shields.io/pypi/pyversions/mgit.svg\n    :target: https://github.com/zsimic/mgit\n    :alt: Python versions tested (link to github project)\n\n\nOverview\n========\n\nWith ``mgit``, you can pull/fetch several projects at once,\nand also auto-cleanup dangling branches (from past pull requests).\n\nA colored output is provided if possible, ``mgit`` should come in handy in general for:\n\n- quickly getting an overview of what's up with N git projects\n- fetch/pull N git objects at once\n- clone missing projects (useful if you tend to clone projects from same remote in one common folder)\n\n\nExample usage\n=============\n\n``mgit`` can show you what's the status of all your git projects in a folder, for example my repos::\n\n    ~/dev/github: mgit\n    ~/dev/github: 4 github/zsimic\n         mgit: [master] up to date\n      pickley: [master] 1 diff, up to date*  last fetch 3w 4d ago\n        runez: [master] up to date*  last fetch 3w 4d ago\n    setupmeta: [master] up to date*  last fetch 4d 23h ago\n\n\nHere we can see that I have 4 repos in ``~/dev/github`` (and all 4 come from ``github/zsimic``),\n3 of them haven't been fetched in a while.\nWe can fetch them all at once with ``--fetch`` (or ``-f``)::\n\n    ~/dev/github: mgit --fetch\n    ~/dev/github: 4 github/zsimic\n         mgit: [master] up to date\n      pickley: [master] 1 diff, up to date\n        runez: [master] up to date\n    setupmeta: [master] up to date\n\n\nNow all projects have been refreshed, and we can see there's nothing new\n(otherwise we'd see a mention of the form ``2 commits behind``).\nThe output also shows that one of the projects has uncommitted files.\n\nModified files are shown if only one project is in scope, for example::\n\n    ~/dev/github: mgit pickley\n    pickley: [master] 1 diff, up to date\n       M tox.ini\n\n\nAbove, we can see that the modified file in question is ``tox.ini`` in that project.\nWe can get the same effect using the ``-verbose`` (or ``-v``) flag,\nlike for example with 2 projects with modified files::\n\n    ~/dev/github: mgit -v\n    ~/dev/github: 4 github/zsimic\n    mgit: [master] 1 diff, up to date\n       M README.rst\n    pickley: [master] 1 diff, up to date\n       M tox.ini\n    runez: [master] up to date\n    setupmeta: [master] up to date\n\n\nSynopsis::\n\n    ~/dev/github: mgit --help\n    Usage: mgit [OPTIONS] [TARGET]\n\n      Manage git projects en masse\n\n    Options:\n      --version                       Show the version and exit.\n      --debug                         Show debugging information\n      --color / --no-color            Use (or not) colors (on by default on tty)\n      --ignore action[:what]          Show/add/remove/clear ignores\n      --clean [show|local|remote|all|reset]\n                                      Auto-clean branches\n      -a, --all                       Examine all repos, even missing git checkouts\n      -f, --fetch                     Fetch from all remotes\n      -p, --pull                      Pull from tracking remote, clone missing with --all\n      -s, --short / -v, --verbose     Short/verbose output\n      -cs                             Handy shortcut for '--clean show'\n      -cl                             Handy shortcut for '--clean local'\n      -cr                             Handy shortcut for '--clean remote'\n      -ca                             Handy shortcut for '--clean all'\n      -h, --help                      Show this message and exit.\n\n      Advanced usage:\n        --clean show                  Show which local/remote branches can be cleaned\n        --clean local                 Clean local branches that were deleted from their corresponding remote\n        --clean remote                Clean merged remote branches\n        --clean all                   Clean local and merged remote branches\n        --clean reset                 Do a git --reset --hard + clean -fdx (nuke all changes, get back to pristine state)\n\n        --ignore show                 Show ignores currently in effect\n        --ignore add 'hackday.*'      Add an ignore regex, for example here 'hackday.*'\n        --ignore remove 'hackday.*'   Remove an ignore regex, for example here 'hackday.*'\n        --ignore clean                Remove all ignores\n\n\nInstallation\n============\n\nEasiest way to get mgit is via pickley_ or pipsi_::\n\n    pickley install mgit\n\n    pipsi install mgit\n\n\nYou can also compile from source::\n\n    git clone https://github.com/zsimic/mgit.git\n    cd mgit\n    tox -e venv\n    source .venv/bin/activate\n\n\n.. _pickley: https://pypi.org/simple/pickley/\n\n.. _pipsi: https://pypi.org/simple/pipsi/\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zsimic/mgit",
    "keywords": "multiple,git,repos",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mgit",
    "package_url": "https://pypi.org/project/mgit/",
    "platform": "",
    "project_url": "https://pypi.org/project/mgit/",
    "project_urls": {
      "Homepage": "https://github.com/zsimic/mgit"
    },
    "release_url": "https://pypi.org/project/mgit/1.1.2/",
    "requires_dist": [
      "cached-property",
      "click",
      "runez"
    ],
    "requires_python": "",
    "summary": "Manage git projects en masse",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10562833,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efd1a5033bbc27a0d86af8917c7ff21f77a1b1dd7024bfd0b6dbc7f708295bc9",
        "md5": "3a63678df1183f790436a506cd1351e4",
        "sha256": "7e70162c525506e47c0b6be16ac6695020213dfa7f9e0cc37cceeff19a8d4b72"
      },
      "downloads": -1,
      "filename": "mgit-1.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a63678df1183f790436a506cd1351e4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 21715,
      "upload_time": "2020-05-29T04:08:53",
      "upload_time_iso_8601": "2020-05-29T04:08:53.123296Z",
      "url": "https://files.pythonhosted.org/packages/ef/d1/a5033bbc27a0d86af8917c7ff21f77a1b1dd7024bfd0b6dbc7f708295bc9/mgit-1.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6468193613dce3d97ca4d65f6063eca9553361cdc169f070a70571da4a004ce",
        "md5": "9058b27d6549e282d5069dd2969d044e",
        "sha256": "6f7d762a4c343bc387234d8c4dcffddd0e43be6abc8e12ace666265d4c47bb35"
      },
      "downloads": -1,
      "filename": "mgit-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9058b27d6549e282d5069dd2969d044e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21795,
      "upload_time": "2020-05-29T04:08:54",
      "upload_time_iso_8601": "2020-05-29T04:08:54.255683Z",
      "url": "https://files.pythonhosted.org/packages/a6/46/8193613dce3d97ca4d65f6063eca9553361cdc169f070a70571da4a004ce/mgit-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}