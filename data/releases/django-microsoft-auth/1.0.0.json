{
  "info": {
    "author": "Christopher Bailey",
    "author_email": "cbailey@mort.is",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=======================================\nDjango Microsoft Authentication Backend\n=======================================\n\n\n.. image:: https://img.shields.io/pypi/v/django_microsoft_auth.svg\n    :target: https://pypi.python.org/pypi/django_microsoft_auth\n\n.. image:: https://img.shields.io/travis/AngellusMortis/django_microsoft_auth.svg\n    :target: https://travis-ci.org/AngellusMortis/django_microsoft_auth\n\n.. image:: https://readthedocs.org/projects/django-microsoft-auth/badge/?version=latest\n    :target: https://django-microsoft-auth.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/AngellusMortis/django_microsoft_auth/shield.svg\n    :target: https://pyup.io/repos/github/AngellusMortis/django_microsoft_auth/\n    :alt: Updates\n\n.. image:: https://api.codeclimate.com/v1/badges/ea41b61fa3a1e22e92e9/maintainability\n   :target: https://codeclimate.com/github/AngellusMortis/django_microsoft_auth/maintainability\n   :alt: Maintainability\n\n.. image:: https://api.codeclimate.com/v1/badges/ea41b61fa3a1e22e92e9/test_coverage\n   :target: https://codeclimate.com/github/AngellusMortis/django_microsoft_auth/test_coverage\n   :alt: Test Coverage\n\n\nSimple app to enable Microsoft Account, Office 365 and Xbox Live authentcation as a Django authentcation backend.\n\n\n* Free software: MIT license\n* Documentation: https://django-microsoft-auth.readthedocs.io.\n\nQuickstart\n----------\n\n1. Install `Django <https://docs.djangoproject.com/en/1.11/topics/install/>`_\n2. Install and configure the `Sites framework <https://docs.djangoproject.com/en/1.11/ref/contrib/sites/#enabling-the-sites-framework>`_\n    - Make sure you update the domain of `SITE_ID`, this is important and used later. Easy way is to go `/admin/sites/site/1/change/` if you have the admin site enabled.\n3. Create a `Microsoft OAuth Application <https://apps.dev.microsoft.com/>`_\n    * write down your client ID\n    * Generate an Application Secret, store this somewhere, you will need it for later\n    * Add a `Web Platform` with `Allow Implicit Flow` and a valid Redirect URL (this will probably be `https://<your-domain>/microsoft/auth-callback/`), it **must be HTTPS**\n    * Add `User.Read` under `Delegated Permissions`\n4. Install package from PyPi::\n\n    pip install django_microsoft_auth\n\n5. Add the following to your `settings.py`::\n\n    INSTALLED_APPS = [\n        # other apps...\n        'django.contrib.sites',\n        'microsoft_auth',\n    ]\n\n    TEMPLATES = [\n        {\n            # other template settings...\n            'OPTIONS': {\n                'context_processors': [\n                    # other context_processors...\n                    'microsoft_auth.context_processors.microsoft',\n                ],\n            },\n        },\n    ]\n\n    AUTHENTICATION_BACKENDS = [\n        'microsoft_auth.backends.MicrosoftAuthenticationBackend',\n        'django.contrib.auth.backends.ModelBackend' # if you also want to use Django's authentication\n        # I recommend keeping this with at least one database superuser in case of unable to use others\n    ]\n\n    # pick one\n    MICROSOFT_AUTH_LOGIN_TYPE = 'ma'  # Microsoft authentication\n    # MICROSOFT_AUTH_LOGIN_TYPE = 'o365'  # Enterprise Office 365 authentication\n    # MICROSOFT_AUTH_LOGIN_TYPE = 'xbl'  # Xbox Live authentication\n\n    MICROSOFT_AUTH_CLIENT_ID = 'your-client-id-from-apps.dev.microsoft.com'\n    MICROSOFT_AUTH_CLIENT_SECRET = 'your-client-secret-from-apps.dev.microsoft.com'\n\n6. Add the following to your `urls.py`::\n\n    urlpatterns = [\n        # other urlpatterns...\n        url(r'^microsoft/', include('microsoft_auth.urls', namespace='microsoft')),\n    ]\n\n7. Run migrations::\n\n    python manage.py migrate\n\n8. Start site and goto `/admin` to and logout if you are logged in.\n9. Login as `Microsoft/Office 365/Xbox Live` user. It will fail. This will automatically create your new user.\n10. Login as a `Password` user with access to change user accounts.\n11. Go to `Admin -> Users` and edit your Microsoft user to have any permissions you want as you normally.\n12. See `microsoft_auth/templates/microsoft/admin_login.html` for details examples on making a Login form.\n\nSee `official docs <https://django-microsoft-auth.readthedocs.io/en/latest/>`_ for more details on setup and configuration.\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n1.0.0 (2017-11-19)\n------------------\n\n* First release on PyPI.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AngellusMortis/django_microsoft_auth",
    "keywords": "django_microsoft_auth",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-microsoft-auth",
    "package_url": "https://pypi.org/project/django-microsoft-auth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-microsoft-auth/",
    "project_urls": {
      "Homepage": "https://github.com/AngellusMortis/django_microsoft_auth"
    },
    "release_url": "https://pypi.org/project/django-microsoft-auth/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple app to enable Microsoft Account, Office 365 and Xbox Live authentcation as a Django authentcation backend.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15568176,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d2004aabb3dab64140acf502c5cab0ee56375fdf80127987a02b97a6a9aecb1",
        "md5": "297ee5a52ea029af1936a16fa1a8f6be",
        "sha256": "9f1112edc7cb53a0dfb6b6d9d8fa69ff5b04f40c1185678a1c0fda2e349254dd"
      },
      "downloads": -1,
      "filename": "django_microsoft_auth-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "297ee5a52ea029af1936a16fa1a8f6be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 40847,
      "upload_time": "2017-11-20T05:04:55",
      "upload_time_iso_8601": "2017-11-20T05:04:55.295926Z",
      "url": "https://files.pythonhosted.org/packages/0d/20/04aabb3dab64140acf502c5cab0ee56375fdf80127987a02b97a6a9aecb1/django_microsoft_auth-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}