{
  "info": {
    "author": "Christopher Bailey",
    "author_email": "cbailey@mort.is",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=======================================\nDjango Microsoft Authentication Backend\n=======================================\n\n\n.. image:: https://img.shields.io/pypi/v/django_microsoft_auth.svg\n    :target: https://pypi.python.org/pypi/django_microsoft_auth\n    :alt: PyPi\n\n.. image:: https://img.shields.io/pypi/pyversions/django_microsoft_auth.svg\n    :target: https://pypi.python.org/pypi/django_microsoft_auth\n    :alt: Python Versions\n\n.. image:: https://img.shields.io/travis/AngellusMortis/django_microsoft_auth.svg\n    :target: https://travis-ci.org/AngellusMortis/django_microsoft_auth\n    :alt: Travis CI\n\n.. image:: https://readthedocs.org/projects/django-microsoft-auth/badge/?version=latest\n    :target: https://django-microsoft-auth.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation\n\n.. image:: https://pyup.io/repos/github/AngellusMortis/django_microsoft_auth/shield.svg\n    :target: https://pyup.io/repos/github/AngellusMortis/django_microsoft_auth/\n    :alt: Updates\n\n.. image:: https://coveralls.io/repos/github/AngellusMortis/django_microsoft_auth/badge.svg?branch=master\n    :target: https://coveralls.io/github/AngellusMortis/django_microsoft_auth?branch=master\n    :alt: Coverage\n\n.. image:: https://api.codeclimate.com/v1/badges/ea41b61fa3a1e22e92e9/maintainability\n   :target: https://codeclimate.com/github/AngellusMortis/django_microsoft_auth/maintainability\n   :alt: Maintainability\n\n.. image:: https://api.codeclimate.com/v1/badges/ea41b61fa3a1e22e92e9/test_coverage\n   :target: https://codeclimate.com/github/AngellusMortis/django_microsoft_auth/test_coverage\n   :alt: Test Coverage\n\n\nSimple app to enable Microsoft Account, Office 365 and Xbox Live authentcation\nas a Django authentcation backend.\n\n\n* Free software: MIT license\n* Documentation: https://django-microsoft-auth.readthedocs.io.\n\nPython/Django support\n---------------------\n\n`django_microsoft_auth` follows the same `support cycle as Django <https://www.djangoproject.com/download/#supported-versions>`_,\nwith one exception: no Python 2 support. If you absoutely need Python 2.7\nsupport, everything should largely already work, but you may need to patch\n`microsoft_auth.admin` and/or other files to get it to work.\n\nSupported python versions:  3.4+\n\nSupported Django version: 1.11 LTS, 2.0+\n\nQuickstart\n----------\n\n1. Install `Django <https://docs.djangoproject.com/en/1.11/topics/install/>`_\n2. Install and configure the `Sites framework <https://docs.djangoproject.com/en/1.11/ref/contrib/sites/#enabling-the-sites-framework>`_\n    - Make sure you update the domain of `SITE_ID`, this is important and used\n      later. Easy way is to go `/admin/sites/site/1/change/` if you have the\n      admin site enabled.\n3. Create a `Microsoft OAuth Application <https://apps.dev.microsoft.com/>`_\n    * write down your client ID\n    * Generate an Application Secret, store this somewhere, you will need it\n      for later\n    * Add a `Web Platform` with `Allow Implicit Flow` and a valid Redirect\n      URL (this will probably be `https://<your-domain>/microsoft/auth-callback/`),\n      it **must be HTTPS**\n    * Add `User.Read` under `Delegated Permissions`\n4. Install package from PyPi::\n\n    pip install django_microsoft_auth\n\n5. Add the following to your `settings.py`::\n\n    INSTALLED_APPS = [\n        # other apps...\n        'django.contrib.sites',\n        'microsoft_auth',\n    ]\n\n    TEMPLATES = [\n        {\n            # other template settings...\n            'OPTIONS': {\n                'context_processors': [\n                    # other context_processors...\n                    'microsoft_auth.context_processors.microsoft',\n                ],\n            },\n        },\n    ]\n\n    AUTHENTICATION_BACKENDS = [\n        'microsoft_auth.backends.MicrosoftAuthenticationBackend',\n        'django.contrib.auth.backends.ModelBackend' # if you also want to use Django's authentication\n        # I recommend keeping this with at least one database superuser in case of unable to use others\n    ]\n\n    # pick one\n\n    # Microsoft authentication\n    # include Microsoft Accounts, Office 365 Enterpirse and Azure AD accounts\n    MICROSOFT_AUTH_LOGIN_TYPE = 'ma'\n\n    # Xbox Live authentication\n    # MICROSOFT_AUTH_LOGIN_TYPE = 'xbl'  # Xbox Live authentication\n\n    MICROSOFT_AUTH_CLIENT_ID = 'your-client-id-from-apps.dev.microsoft.com'\n    MICROSOFT_AUTH_CLIENT_SECRET = 'your-client-secret-from-apps.dev.microsoft.com'\n\n6. Add the following to your `urls.py`::\n\n    urlpatterns = [\n        # other urlpatterns...\n        url(r'^microsoft/', include('microsoft_auth.urls', namespace='microsoft')),\n    ]\n\n7. Run migrations::\n\n    python manage.py migrate\n\n8. Start site and goto `/admin` to and logout if you are logged in.\n9. Login as `Microsoft/Office 365/Xbox Live` user. It will fail. This will\n   automatically create your new user.\n10. Login as a `Password` user with access to change user accounts.\n11. Go to `Admin -> Users` and edit your Microsoft user to have any permissions\n    you want as you normally.\n12. See `microsoft_auth/templates/microsoft/admin_login.html` for details\n    examples on making a Login form.\n\nSee `official docs <https://django-microsoft-auth.readthedocs.io/en/latest/>`_ for more details on setup and configuration.\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the\n`audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n1.1.0 (2018-7-3)\n----------------\n* Removes o365 option. New authorization URL works well enough for both\n    * Xbox Live Auth still uses old Microsoft Auth URL\n    * 'o365' will still work as a MICROSOFT_AUTH_LOGIN_TYPE value,\n      but you should change it to 'ma'\n* Adds extras:\n    * `ql`: DjangoQL package and support\n    * `test`: test dependencies (same as test_requires packages)\n    * `dev`: `ql`+`test` and extra dev only dependencies like\n      `twine` and `pip-tools`\n* Pip 10 support (thanks Shigumitsu!)\n* Fixes max length of o365 IDs (thanks Shigumitsu!)\n\n1.0.6 (2018-4-8)\n----------------\n* Added patched username validator to allow spaces for usernames for\n  Xbox Live Gamertags\n\n1.0.5 (2018-4-8)\n----------------\n* Added missing templates and static files to MANIFEST\n\n1.0.4 (2017-12-2)\n-----------------\n\n* Updated Django category to include 2.0\n\n1.0.3 (2017-12-2)\n-----------------\n\n* Updated for Django 2.0\n\n1.0.2 (2017-11-27)\n------------------\n\n* Changed Development Status category to Stable\n\n1.0.0 (2017-11-19)\n------------------\n\n* First release on PyPI.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AngellusMortis/django_microsoft_auth",
    "keywords": "django_microsoft_auth",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-microsoft-auth",
    "package_url": "https://pypi.org/project/django-microsoft-auth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-microsoft-auth/",
    "project_urls": {
      "Homepage": "https://github.com/AngellusMortis/django_microsoft_auth"
    },
    "release_url": "https://pypi.org/project/django-microsoft-auth/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple app to enable Microsoft Account, Office 365 and Xbox Live authentcation as a Django authentcation backend.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15568176,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d652c3ed21d88de48196273370f2fabcf359ca033743a0e81a8c29b3985aca73",
        "md5": "41115d95e0ed1acbc8574d83676d9722",
        "sha256": "fce16e6b1486dab1c3fc44f09e1e05e35da01888f4756bafb4fce26929315e1b"
      },
      "downloads": -1,
      "filename": "django_microsoft_auth-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "41115d95e0ed1acbc8574d83676d9722",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47500,
      "upload_time": "2018-07-03T23:36:02",
      "upload_time_iso_8601": "2018-07-03T23:36:02.204078Z",
      "url": "https://files.pythonhosted.org/packages/d6/52/c3ed21d88de48196273370f2fabcf359ca033743a0e81a8c29b3985aca73/django_microsoft_auth-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}