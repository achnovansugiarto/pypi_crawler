{
  "info": {
    "author": "danishi",
    "author_email": "dns2developer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DynamoDB import CSV utilities\n\n[![ci](https://github.com/danishi/DynamoDBCSV/actions/workflows/ci.yaml/badge.svg?branch=master)](https://github.com/danishi/DynamoDBImportCSV/actions/workflows/ci.yaml)\n![MIT](https://img.shields.io/github/license/danishi/DynamoDBCSV)\n![Python](https://img.shields.io/badge/Python-3-1384C5.svg)\n[![PyPI](https://badge.fury.io/py/dynamodb-csv.svg)](https://badge.fury.io/py/dynamodb-csv)\n[![Downloads](https://pepy.tech/badge/dynamodb-csv)](https://pepy.tech/project/dynamodb-csv)\n[![Downloads](https://pepy.tech/badge/dynamodb-csv/month)](https://pepy.tech/project/dynamodb-csv)\n[![Downloads](https://pepy.tech/badge/dynamodb-csv/week)](https://pepy.tech/project/dynamodb-csv)\n\nPython command to import CSV into DynamoDB\n\n## Introduction\n\nI wrote this script because there was no tool to satisfy my modest desire to make it easy to import CSV files into DynamoDB.  \nWritten in a simple Python script, it should be easy to parse and modify.  \n\nit works for me.\n\n## Getting started\n\n```\n$ python -m venv venv\n$ . venv/bin/activate\n$ python setup.py install\n$ dynamodb-csv -h\nusage: dynamodb-csv [-h] [-i] [--truncate] -t TABLE [-f FILE]\n\nImport CSV file into DynamoDB table utilities\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --imp             mode import\n  --truncate            mode truncate\n  -t TABLE, --table TABLE\n                        DynamoDB table name\n  -f FILE, --file FILE  UTF-8 CSV file path required import mode\n```\n\n### For developer\n\n```\n$ python -m venv venv\n$ . venv/bin/activate\n$ pip install -r requirements-dev.txt\n$ python app/main.py -h\n```\n\n### Create your config.ini file\n\n```\n[AWS]\nAWS_ACCESS_KEY_ID=your_access_key\nAWS_SECRET_ACCESS_KEY=your_secret_key\nREGION=your_dynamodb_table_region\n```\n\n### Create your CSV and CSV spec file.ini\n\nPrepare a UTF-8 CSV file of the format you want to import into your DynamoDB table and a file that defines that format.  \n\n#### For example\n\nPlease refer to this writing method.\n\n[sample.csv](sample.csv)\n```\nStringPK,NumberSK,DecimalValue,BooleanValue,NullValue,JsonValue,StringListValues,DecimalListValues\nfoo,1,1.23,TRUE,,\"[{\"\"string\"\" : \"\"value\"\"},{\"\"number\"\" : 100}]\",foo bar baz,10 10.1 20\nfoo,2,0.001,,,\"[{\"\"boolean\"\" : true}]\",リンゴ バナナ スイカ,10 10.1 20\nfoo,3,1,,,\"[{\"\"boolean\"\" : false}]\",,\n```\n\n[sample.csv.spec](sample.csv.spec)\n```\n# sample.csv data format specification\n\n# String : S\n# Integer : I\n# Decimal : D\n# Boolean : B\n# Json : J\n# StringList : SL\n# DecimalList : DL\n\n[CSV_SPEC]\nStringPK=S\nNumberSK=I\nDecimalValue=D\nBooleanValue=B\nNullValue=S\nJsonValue=J\nStringListValues=SL\nDecimalListValues=DL\n```\n\n### Create DynamoDB table\n\nYou need to have created a DynamoDB table that meets your specifications.\n\n```\n$ aws dynamodb describe-table --table-name my_table\n{\n    \"Table\": {\n        \"AttributeDefinitions\": [\n            {\n                \"AttributeName\": \"NumberSK\",\n                \"AttributeType\": \"N\"\n            },\n            {\n                \"AttributeName\": \"StringPK\",\n                \"AttributeType\": \"S\"\n            }\n        ],\n        \"TableName\": \"my_table\",\n        \"KeySchema\": [\n            {\n                \"AttributeName\": \"StringPK\",\n                \"KeyType\": \"HASH\"\n            },\n            {\n                \"AttributeName\": \"NumberSK\",\n                \"KeyType\": \"RANGE\"\n            }\n        ],\n        \"TableStatus\": \"ACTIVE\",\n        \"CreationDateTime\": \"2022-02-23T15:31:55.141000+09:00\",\n        \"ProvisionedThroughput\": {\n            \"LastIncreaseDateTime\": \"2022-02-23T16:37:29.382000+09:00\",\n            \"NumberOfDecreasesToday\": 0,\n            \"ReadCapacityUnits\": 5,\n            \"WriteCapacityUnits\": 5\n        },\n        \"TableSizeBytes\": 0,\n        \"ItemCount\": 0,\n        \"TableArn\": \"arn:aws:dynamodb:ap-northeast-1:XXXXXXXXXX:table/my_table\",\n        \"TableId\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    }\n}\n```\n\n### CSV import\n\nThis command requires a CSV spec file in the same directory.  \n\n```\n$ dynamodb-csv -i -t my_table -f sample.csv\nplease wait my_table importing sample.csv\n300it [00:00, 19983.03it/s]\n100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 300/300 [00:07<00:00, 40.97it/s]\nmy_table csv imported 300 items\n```\n\n### Table truncate\n\nAlso, since you may want to erase unnecessary data during the import experiment, we have prepared a command to discard it.\n\n```\n$ dynamodb-csv --truncate -t my_table\nmy_table scan 300 items\nplease wait my_table truncating\n100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 300/300 [00:07<00:00, 40.95it/s]\nmy_table truncated\n```\n\n## License\n\nSee [LICENSE](LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danishi/DynamoDBCSV",
    "keywords": "AWS,DynamoDB,CSV",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamodb-csv",
    "package_url": "https://pypi.org/project/dynamodb-csv/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamodb-csv/",
    "project_urls": {
      "Homepage": "https://github.com/danishi/DynamoDBCSV"
    },
    "release_url": "https://pypi.org/project/dynamodb-csv/1.2.1/",
    "requires_dist": [
      "boto3",
      "configparser",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Python command to import CSV into DynamoDB",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16944174,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b59b888d99e0e87ab245fa16f27984b39a14844898bd08d5b9e2aaffc11d2f4d",
        "md5": "e10fa3e2f8dae28dbce01395b6571c7b",
        "sha256": "1d760c13379b8d567d08b470e5aafbd20b8adad5ae92a6a679ecc9c3a58cad67"
      },
      "downloads": -1,
      "filename": "dynamodb_csv-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e10fa3e2f8dae28dbce01395b6571c7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7083,
      "upload_time": "2022-03-04T15:03:54",
      "upload_time_iso_8601": "2022-03-04T15:03:54.574875Z",
      "url": "https://files.pythonhosted.org/packages/b5/9b/888d99e0e87ab245fa16f27984b39a14844898bd08d5b9e2aaffc11d2f4d/dynamodb_csv-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}