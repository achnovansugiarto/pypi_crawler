{
  "info": {
    "author": "",
    "author_email": "lhy <dev@lhy.kr>",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Programming Language :: Python"
    ],
    "description": "# drf-base64-filename\n\n**drf-base64-filename** provides Serializer fields for using base64-encoded files with file names.\n\n## Setup\n\nInstall `drf-base64-filename` to your Python environment\n\n```shell\npip install drf-base64-filename\n```\n\n\n\n## Usage\n\n### Sample Model\n\n```python\nclass SampleBase64ImageModel(models.Model):\n    parent = models.ForeignKey(\n        SampleParentModel, \n        on_delete=models.CASCADE, \n        related_name='image_set', \n        blank=True, \n        null=True,\n    )\n    image = models.ImageField(blank=True)\n\nclass SampleBase64FileModel(models.Model):\n    parent = models.ForeignKey(\n        SampleParentModel, \n        on_delete=models.CASCADE,\n        related_name='file_set', \n        blank=True, \n        null=True,\n    )\n    file = models.FileField(blank=True)\n```\n\n\n\n### Serializer Field\n\n```python\nclass SampleNamedBase64ImageSerializer(serializers.ModelSerializer):\n    image = NamedBase64ImageField(required=False, allow_null=True)\n\n    class Meta:\n        model = SampleBase64ImageModel\n        fields = (\n            'id',\n            'image',\n        )\n\n\nclass SampleNamedBase64FileSerializer(serializers.ModelSerializer):\n    file = NamedBase64FileField(required=False, allow_null=True)\n\n    class Meta:\n        model = SampleBase64FileModel\n        fields = (\n            'id',\n            'file',\n        )\n```\n\n\n\n### Sample request data\n\n```json\n{\n    \"image\": {\n        \"file_name\": \"pby.jpg\",\n        \"encoded_str\": \"aHR0cHM6Ly9naXRodWIuY29tL2xlZWhhbnllb25n\"\n    }\n}\n```\n\n### Sample response data\n\n```json\n{\n    \"image\": \"http://test/media/pby.jpg\"\n}\n```\n\n\n\n# Testing\n\n```shell\ncd test_project\npip install -r requirements.txt\npytest\n```\n\n\n\n## Contributing\n\nAs an open source project, we welcome contributions.\nThe code lives on [GitHub](https://github.com/LeeHanYeong/drf-base64-filename)\n\n \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2020 Lee HanYeong Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-base64-filename",
    "package_url": "https://pypi.org/project/drf-base64-filename/",
    "platform": null,
    "project_url": "https://pypi.org/project/drf-base64-filename/",
    "project_urls": {
      "GitHub": "https://github.com/LeeHanYeong/drf-base64-filename"
    },
    "release_url": "https://pypi.org/project/drf-base64-filename/1.0.7/",
    "requires_dist": [
      "django-extra-fields"
    ],
    "requires_python": ">=3.9",
    "summary": "drf-base64-filename provides Serializer fields for using base64-encoded files with file names.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14638394,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4054f562c3b53e1b587b00292f800465b5d143eb6ac726981ef7d2e340786774",
        "md5": "6e91ed41965740221c76bd032ddf6ca1",
        "sha256": "cfd9af977afe6b6389e5b83848a177b0dff86ecfb715a1d01c0c24409a80c3bb"
      },
      "downloads": -1,
      "filename": "drf_base64_filename-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e91ed41965740221c76bd032ddf6ca1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 5548,
      "upload_time": "2022-07-26T02:49:56",
      "upload_time_iso_8601": "2022-07-26T02:49:56.885257Z",
      "url": "https://files.pythonhosted.org/packages/40/54/f562c3b53e1b587b00292f800465b5d143eb6ac726981ef7d2e340786774/drf_base64_filename-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e59acade9e6ccf422f82726b14c12152aee2a4e6d5b95630e5f0aa77ce4c0465",
        "md5": "8e58c75bbeabae30cf8d70888e85de04",
        "sha256": "c26a3b61b15e0488baac2d3861bac0c196f2e1f7e8c1db1b7f793cd2110a5b9b"
      },
      "downloads": -1,
      "filename": "drf-base64-filename-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "8e58c75bbeabae30cf8d70888e85de04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 4274,
      "upload_time": "2022-07-26T02:49:58",
      "upload_time_iso_8601": "2022-07-26T02:49:58.837287Z",
      "url": "https://files.pythonhosted.org/packages/e5/9a/cade9e6ccf422f82726b14c12152aee2a4e6d5b95630e5f0aa77ce4c0465/drf-base64-filename-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}