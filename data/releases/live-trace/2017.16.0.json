{
  "info": {
    "author": "Thomas Guettler",
    "author_email": "info.live-trace@thomas-guettler.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": ".. image:: https://travis-ci.org/guettli/live-trace.svg?branch=master\n    :target: https://travis-ci.org/guettli/live-trace\n    \n    \nlive-trace\n==========\n\nlive-trace is a Python library to log stacktraces of a running application in a\ndaemon thread N times per second.  The log file can be analyzed to see\nwhere the interpreter spends most of the time.  It is called\n\"live-trace\" since it can be used on production systems without\nnoticeable performance impact.\n\nDevelopment\n===========\n\n# Installing for development\npip install -e git+https://github.com/guettli/live-trace.git#egg=live-trace\n\n# Running tests\ncd src/live-trace\npython setup.py test\n\nUsage\n=====\n\nUsage run-and-analyze::\n\n    you@unix> live-trace run-and-analyze your-python-script.py\n\nUsage run, analyze later::\n\n    you@unix> live-trace run your-python-script.py\n\n    The collected stacktraces will be written to $TMP/live_trace/YYYY-MM-DD....log\n\n    Now you can analyze the collected stacktraces:\n\n    you@unix> live-trace analyze tmp/live_trace/2017-01-09-11-23-40.log\n\nDjango Middleware\n=================\n\nThe django middleware is optional. The tool live-trace is a general python tool.\n\nYou can start the watching thread your django middleware like this::\n\n    MIDDLEWARE_CLASSES=[\n        ...\n        'live_trace.django_middleware.LiveTraceMiddleware',\n    ]\n\nOptional, update the `settings.py`::\n\n    live_trace_interval=0.1 # Default is every 0.3 second. Set to None to disable live-tracing.\n\nExample\n=======\n\nThe tool does some guessing which code is from you, and which code is from Python or Django.\n\nSince Python and Django code is already optimized, your code gets highlighted with \"<====\".\n\nThat's most likely your code and this could be a bottle neck::\n\n     1971 File: \"/home/foo_bar_p/django/core/handlers/wsgi.py\", line 272, in __call__\n        response = self.get_response(request)\n     1812 File: \"/home/foo_bar_p/django/core/handlers/base.py\", line 111, in get_response\n        response = callback(request, *callback_args, **callback_kwargs)\n     1725 File: \"/home/foo_bar_p/django/db/backends/postgresql_psycopg2/base.py\", line 44, in execute\n        return self.cursor.execute(query, args)\n     1724 File: \"/home/foo_bar_p/django/db/models/sql/compiler.py\", line 735, in execute_sql\n        cursor.execute(sql, params)\n     1007 File: \"/home/foo_bar_p/django/db/models/sql/compiler.py\", line 680, in results_iter\n        for rows in self.execute_sql(MULTI):\n      796 File: \"/home/foo_bar_p/django/db/models/query.py\", line 273, in iterator\n        for row in compiler.results_iter():\n      763 File: \"/home/foo_bar_p/foo/utils/ticketutils.py\", line 135, in __init__    <====\n        filter=type_filter(root_node=self.root_node)\n      684 File: \"/home/foo_bar_p/django/db/models/query.py\", line 334, in count\n        return self.query.get_count(using=self.db)\n      679 File: \"/home/foo_bar_p/django/db/models/sql/query.py\", line 367, in get_aggregation\n        result = query.get_compiler(using).execute_sql(SINGLE)\n      677 File: \"/home/foo_bar_p/django/db/models/sql/query.py\", line 401, in get_count\n        number = obj.get_aggregation(using=using)[None]",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guettli/live-trace/",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "live-trace",
    "package_url": "https://pypi.org/project/live-trace/",
    "platform": "",
    "project_url": "https://pypi.org/project/live-trace/",
    "project_urls": {
      "Homepage": "https://github.com/guettli/live-trace/"
    },
    "release_url": "https://pypi.org/project/live-trace/2017.16.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Trace a Python application using a deamon thread.",
    "version": "2017.16.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6181275,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0ec206de64480001f868bb631189cfc49ba3b227d7d5fd566b3228cf1397a74",
        "md5": "1129a7a899d3b40a5881fa082f1d8aaf",
        "sha256": "7ecfbbb590540f095f922affbc5c3cc9272688d5ca00a3666ab071815fcdd03d"
      },
      "downloads": -1,
      "filename": "live-trace-2017.16.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1129a7a899d3b40a5881fa082f1d8aaf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7453,
      "upload_time": "2017-07-31T13:38:17",
      "upload_time_iso_8601": "2017-07-31T13:38:17.141284Z",
      "url": "https://files.pythonhosted.org/packages/e0/ec/206de64480001f868bb631189cfc49ba3b227d7d5fd566b3228cf1397a74/live-trace-2017.16.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}