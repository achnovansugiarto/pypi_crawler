{
  "info": {
    "author": "Timothee Mazzucotelli",
    "author_email": "timothee.mazzucotelli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "======================\nDjango ZXCVBN Password\n======================\n\n\n\nBack-end and Front-end password validation with ZXCVBN.\n\nA combination of\n`pirandig’s django-zxcvbn`_ and `aj-may’s django-password-strength`_ Django apps.\nIt combines back-end and front-end validation with strength meter display.\n\n.. _pirandig’s django-zxcvbn: https://github.com/pirandig/django-zxcvbn\n.. _aj-may’s django-password-strength: https://github.com/aj-may/django-password-strength\n\nLicense\n=======\n\nSoftware licensed under `ISC`_ license.\n\n.. _ISC: https://www.isc.org/downloads/software-support-policy/isc-license/\n\nInstallation\n============\n\n::\n\n    pip install django-zxcvbn-password\n\n\nRequirements\n============\n\nThe JavaScript code of this application uses JQuery, but JQuery is not bundled\nwith it. Please install it separately. You might also want to use Bootstrap.\n\nUsage\n=====\n\n.. code:: python\n\n    # settings.py\n\n    INSTALLED_APPS = [\n        ...\n        'zxcvbn_password',\n        ...\n    ]\n\n    AUTH_PASSWORD_VALIDATORS = [\n        {\n            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n        },\n        {\n            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n        },\n        {\n            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n        },\n        {\n            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n        },\n        {\n            'NAME': 'zxcvbn_password.ZXCVBNValidator',\n            'OPTIONS': {\n                'min_score': 3,\n                'user_attributes': ('username', 'email', 'first_name', 'last_name')\n            }\n        }\n    ]\n\n.. code:: python\n\n    # forms.py\n\n    from django import forms\n    from zxcvbn_password.fields import PasswordField, PasswordConfirmationField\n\n    class RegisterForm(forms.Form):\n        password1 = PasswordField()\n        password2 = PasswordConfirmationField(confirm_with=’password1’)\n\n\n.. code:: python\n\n    # views.py\n\n    if form.is_valid():\n        user = User.objects.create_user(\n            username=...,\n            password=form.cleaned_data['password1']\n        )\n\n\nBy default, other inputs won't be used to compute the score, but you can enforce it\nlike this:\n\n.. code:: python\n\n    # forms.py\n\n    from django import forms\n    from zxcvbn_password import zxcvbn\n    from zxcvbn_password.fields import PasswordField, PasswordConfirmationField\n\n    class RegisterForm(forms.Form):\n        password1 = PasswordField()\n        password2 = PasswordConfirmationField(confirm_with=’password1’)\n\n        def clean(self):\n            password = self.cleaned_data.get('password1')\n            other_field1 = ...\n            other_field2 = ...\n\n            if password:\n                score = zxcvbn(password, [other_field1, other_field2])['score']\n                # score is between 0 and 4\n                # raise forms.ValidationError if needed\n\n            return self.cleaned_data\n\n\nScreen-shot\n===========\n\n.. image:: https://cloud.githubusercontent.com/assets/3999221/23079032/5ae1513a-f54b-11e6-9d66-90660ad5fb2d.png\n\n\n.. important::\n\n    The password field's widget declares two JavaScript files that must be added to the HTML page.\n    To do so, add ``{{ form.media }}`` in your template, something like:\n\n    .. code:: html\n\n        <form role=\"form\" action=\"my_url\" method=\"post\">\n          {% csrf_token %}\n          {{ form }}\n        </form>\n\n        {% block js %}\n          {{ block.super }}\n          {{ form.media }}\n        {% endblock %}\n\n\n.. note::\n\n    If you are not using Bootstrap, the strength bar will not have colors.\n    You can fix this with these three CSS rules:\n\n    .. code:: css\n\n        .progress-bar-warning {\n            background-color: yellow;\n        }\n\n        .progress-bar-danger {\n            background-color: red;\n        }\n\n        .progress-bar-success {\n            background-color: green;\n        }\n\n\nDocumentation\n=============\n\n`On ReadTheDocs`_\n\n.. _`On ReadTheDocs`: http://django-zxcvbn-password.readthedocs.io/\n\nDevelopment\n===========\n\nTo run all the tests: ``tox``\n\n=========\nChangelog\n=========\n\n2.0.3 (2019-02-21)\n==================\n\n- Use new location for package ``python-zxcvbn``, now ``zxcvbn`` (2ea1b69).\n\n\n2.0.2 (2018-08-21)\n==================\n\nDocumented\n----------\n- Improve usage notes (7a1ed42). Related issues/PRs: #31.\n\nFixed\n-----\n- Fix call to super in PasswordConfirmationInput (fc551b8).\n- Improve password validator help text (c5d21a1). Related issues/PRs: #46.\n- Strength bar color go green only when superior to min score (9a44fd8). Related issues/PRs: #3.\n\nTests\n-----\n- Add django 1.11 tests (815aaef).\n- Add py37/pypy plus django 2.0 tests, remove py34 tests (05711cd).\n\n2.0.1 (2017-02-17)\n==================\n\n* Fix call to super in PasswordStrengthInput.\n\n2.0.0 (2017-02-17)\n==================\n\n* Drop Django 1.8 support in favor of AUTH_PASSWORD_VALIDATORS setting\n  introduced in Django 1.9.\n* Update zxcvbn to more recent version (dwolfhub/zxcvbn-python on GitHub).\n* Update JavaScript code to latest version.\n* Remove all settings (they now go in AUTH_PASSWORD_VALIDATOR options).\n* Change license to ISC.\n\nThanks to Nick Stefan and Daniel Wolf.\n\n1.1.0 (2016-10-18)\n==================\n\n* Cookiecutterize the project.\n\n1.0.5 (2015-03-31)\n==================\n\n* I don't remember.\n\n1.0.3 (2015-03-12)\n==================\n\n* Switch README to rst.\n* Fix manifest rules.\n\n1.0.2 (2015-03-12)\n==================\n\n* Change package name from django_zxcvbn_password to zxcvbn_password.\n\n1.0.0 (2015-02-21)\n==================\n\n* Beta release on PyPI.\n\n0.1.0 (2015-02-01)\n==================\n\n* Alpha release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pawamoy/django-zxcvbn-password",
    "keywords": "django,zxcvbn,password",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-zxcvbn-password",
    "package_url": "https://pypi.org/project/django-zxcvbn-password/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-zxcvbn-password/",
    "project_urls": {
      "Homepage": "https://github.com/Pawamoy/django-zxcvbn-password"
    },
    "release_url": "https://pypi.org/project/django-zxcvbn-password/2.0.3/",
    "requires_dist": [
      "zxcvbn"
    ],
    "requires_python": "",
    "summary": "Back-end and Front-end password validation with ZXCVBN.",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12331327,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc189b04ab9e96cd6f0ee6c5aa6faf2c594c37772bcbc8174c0dd52dd9da027f",
        "md5": "3cfd153eb9870934417a789897001312",
        "sha256": "bee05ee1737f8a6c88bca08fa2fa531c4818517046faa8d3747104dc021de172"
      },
      "downloads": -1,
      "filename": "django_zxcvbn_password-2.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3cfd153eb9870934417a789897001312",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 411119,
      "upload_time": "2019-02-21T14:10:43",
      "upload_time_iso_8601": "2019-02-21T14:10:43.251884Z",
      "url": "https://files.pythonhosted.org/packages/fc/18/9b04ab9e96cd6f0ee6c5aa6faf2c594c37772bcbc8174c0dd52dd9da027f/django_zxcvbn_password-2.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2a69e8895de3e7d7f02eba415ded3a13d45b2529f13891e0c1697a5e316fd86",
        "md5": "fdd0f644349d4245b42e95e05f47aa6e",
        "sha256": "675b529502bea7a7546a39ebeb42d1f1b7ef839c7075a663ad5cf15ba9df6146"
      },
      "downloads": -1,
      "filename": "django-zxcvbn-password-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fdd0f644349d4245b42e95e05f47aa6e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 417973,
      "upload_time": "2019-02-21T14:10:45",
      "upload_time_iso_8601": "2019-02-21T14:10:45.530067Z",
      "url": "https://files.pythonhosted.org/packages/f2/a6/9e8895de3e7d7f02eba415ded3a13d45b2529f13891e0c1697a5e316fd86/django-zxcvbn-password-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}