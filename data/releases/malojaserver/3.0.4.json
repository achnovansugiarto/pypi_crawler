{
  "info": {
    "author": "",
    "author_email": "Johannes Krattenmacher <maloja@dev.krateng.ch>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Maloja\n\n[![](https://img.shields.io/github/v/tag/krateng/maloja?label=GitHub&style=for-the-badge&logo=github&logoColor=white)](https://github.com/krateng/maloja)\n[![](https://img.shields.io/pypi/v/malojaserver?label=PyPI&style=for-the-badge&logo=pypi&logoColor=white)](https://pypi.org/project/malojaserver/)\n[![](https://img.shields.io/docker/v/krateng/maloja?label=Dockerhub&style=for-the-badge&logo=docker&logoColor=white)](https://hub.docker.com/r/krateng/maloja)\n\n[![](https://img.shields.io/pypi/l/malojaserver?style=for-the-badge)](https://github.com/krateng/maloja/blob/master/LICENSE)\n[![](https://img.shields.io/codeclimate/maintainability/krateng/maloja?style=for-the-badge)](https://codeclimate.com/github/krateng/maloja)\n\nSimple self-hosted music scrobble database to create personal listening statistics. No recommendations, no social network, no nonsense.\n\n![screenshot](screenshot.png?raw=true)\n\nYou can check [my own Maloja page](https://maloja.krateng.ch) as an example instance.\n\n\n## Table of Contents\n* [Features](#features)\n* [How to install](#how-to-install)\n\t* [Requirements](#requirements)\n\t* [PyPI](#pypi)\n\t* [From Source](#from-source)\n\t* [Docker / Podman](#docker-podman)\n\t* [Extras](#extras)\n* [How to use](#how-to-use)\n\t* [Basic control](#basic-control)\n\t* [Data](#data)\n\t* [Customization](#customization)\n* [How to scrobble](#how-to-scrobble)\n\t* [Native support](#native-support)\n\t* [Native API](#native-api)\n\t* [Standard-compliant API](#standard-compliant-api)\n\t* [Manual](#manual)\n* [How to extend](#how-to-extend)\n\n## Features\n\n* **Self-hosted**: You will always be able to access your data in an easily-parseable format. Your library is not synced with any public or official music database, so you can follow your own tagging schema.\n* **Associated Artists**: Compare different artists' popularity in your listening habits including subunits, collaboration projects or solo performances by their members. Change these associations at any time without losing any information.\n* **Multi-Artist Tracks**: Some artists often collaborate with others or are listed under \"featuring\" in the track title. Instead of tracking each combination of artists, each individual artist competes in your charts.\n* **Custom Images**: Don't rely on the community to select the best pictures for your favorite artists. Upload your own so that your start page looks like you want it to look.\n* **Proxy Scrobble**: No need to fully commit or set up every client twice - you can configure your Maloja server to forward your scrobbles to other services.\n* **Standard-compliant API**: Use existing, mature apps or extensions to scrobble to your Maloja server.\n* **Manual Scrobbling**: Listening to vinyl or elevator background music? Simply submit a scrobble with the web interface.\n* **Keep it Simple**: Unlike Last.fm and similar alternatives, Maloja doesn't have social networking, radios, recommendations or any other gimmicks. It's a tool to keep track of your listening habits over time - and nothing more.\n\n\n## How to install\n\n### Requirements\n\nMaloja should run on any x86 or ARM machine that runs Python.\n\nI can support you with issues best if you use **Alpine Linux**.\n\nYour CPU should have a single core passmark score of at the very least 1500. 500 MB RAM should give you a decent experience, but performance will benefit greatly from up to 2 GB.\n\n### PyPI\n\nYou can install Maloja with\n\n```console\n\tpip install malojaserver\n```\n\nTo make sure all dependencies are installed, you can also use one of the included scripts in the `install` folder.\n\n### From Source\n\nClone this repository and enter the directory with\n\n```console\n\tgit clone https://github.com/krateng/maloja\n\tcd maloja\n```\n\nThen install all the requirements and build the package, e.g.:\n\n```console\n\tsh ./install/install_dependencies_alpine.sh\n\tpip install -r requirements.txt\n\tpip install .\n```\n\n### Docker / Podman\n\nPull the [latest image](https://hub.docker.com/r/krateng/maloja) or check out the repository and use the included Containerfile.\n\nOf note are these settings which should be passed as environmental variables to the container:\n\n* `MALOJA_DATA_DIRECTORY` -- Set the directory in the container where configuration folders/files should be located\n  * Mount a [volume](https://docs.docker.com/engine/reference/builder/#volume) to the specified directory to access these files outside the container (and to make them persistent)\n* `MALOJA_FORCE_PASSWORD` -- Set an admin password for maloja\n\nYou must publish a port on your host machine to bind to the container's web port (default 42010). The container uses IPv4 per default.\n\nAn example of a minimum run configuration to access maloja via `localhost:42010`:\n\n```console\n\tdocker run -p 42010:42010 -v $PWD/malojadata:/mljdata -e MALOJA_DATA_DIRECTORY=/mljdata maloja\n```\n\n### Extras\n\n* If you'd like to display images, you will need API keys for [Last.fm](https://www.last.fm/api/account/create) and [Spotify](https://developer.spotify.com/dashboard/applications). These are free of charge!\n\n* Put your server behind a reverse proxy for SSL encryption. Make sure that you're proxying to the IPv6 or IPv4 address according to your settings.\n\n* You can set up a cronjob to start your server on system boot, and potentially restart it on a regular basis:\n\n```\n@reboot sleep 15 && maloja start\n42 0 7 * * maloja restart\n```\n\n\n## How to use\n\n### Basic control\n\nStart and stop the server in the background with\n\n```console\n\tmaloja start\n\tmaloja stop\n\tmaloja restart\n```\n\nIf you need to run the server in the foreground, use\n\n```console\n\tmaloja run\n```\n\n\n### Data\n\nIf you would like to import your previous scrobbles, use the command `maloja import *filename*`. This works on:\n\n* a Last.fm export generated by [benfoxall's website](https://benjaminbenben.com/lastfm-to-csv/) ([GitHub page](https://github.com/benfoxall/lastfm-to-csv))\n* an official [Spotify data export file](https://www.spotify.com/us/account/privacy/)\n* the export of another Maloja instance\n\nTo backup your data, run `maloja backup`, optional with `--include_images`.\n\n### Customization\n\n* Have a look at the [available settings](settings.md) and specifiy your choices in `/etc/maloja/settings.ini`. You can also set each of these settings as an environment variable with the prefix `MALOJA_` (e.g. `MALOJA_SKIP_SETUP`).\n\n* If you have activated admin mode in your web interface, you can upload custom images for artists or tracks by simply dragging them onto the existing image on the artist or track page. You can also manage custom images directly in the file system - consult `images.info` in the `/var/lib/maloja/images` folder.\n\n* To specify custom rules, consult the `rules.info` file in `/etc/maloja/rules`. You can also apply some predefined rules on the `/admin_setup` page of your server.\n\n\n## How to scrobble\n\nYou can set up any amount of API keys in the file `apikeys.yml` in your configuration folder (or via the web interface). It is recommended to define a different API key for every scrobbler you use.\n\n### Native support\n\nThese solutions allow you to directly setup scrobbling to your Maloja server:\n* [Tauon](https://tauonmusicbox.rocks) Desktop Player\n* [Web Scrobbler](https://github.com/web-scrobbler/web-scrobbler) Browser Extension\n* [Multi Scrobbler](https://github.com/FoxxMD/multi-scrobbler) Desktop Application\n* [Cmus-maloja-scrobbler](https://git.sr.ht/~xyank/cmus-maloja-scrobbler) Script\n* [OngakuKiroku](https://github.com/Atelier-Shiori/OngakuKiroku) Desktop Application (Mac)\n* [Maloja Scrobbler](https://chrome.google.com/webstore/detail/maloja-scrobbler/cfnbifdmgbnaalphodcbandoopgbfeeh) Chromium Extension (also included in the repository) for Plex Web, Spotify, Bandcamp, Soundcloud or Youtube Music\n\n### Native API\n\nIf you want to implement your own method of scrobbling, it's very simple: You only need one POST request to `/apis/mlj_1/newscrobble` with the keys `artist`, `title` and `key` (and optionally `album`,`duration` (in seconds) and `time`(for cached scrobbles)) - either as form-data or json.\n\nIf you're the maintainer of a music player or server and would like to implement native Maloja scrobbling, feel free to reach out - I'll try my best to help. For Python applications, you can simply use the [`malojalib` package](https://pypi.org/project/maloja-lib/) for a consistent interface even with future updates.\n\n### Standard-compliant API\n\nYou can use any third-party scrobbler that supports the audioscrobbler (GNUFM) or the ListenBrainz protocol. This is still somewhat experimental, but give it a try with these settings:\n\nGNU FM | &nbsp;\n------ | ---------\nGnukebox URL | Your Maloja URL followed by `/apis/audioscrobbler`\nUsername | Doesn't matter\nPassword | Any of your API keys\n\nListenBrainz | &nbsp;\n------ | ---------\nAPI URL | Your Maloja URL followed by `/apis/listenbrainz`\nUsername | Doesn't matter\nAuth Token | Any of your API keys\n\nAudioscrobbler v1.2 | &nbsp;\n------ | ---------\nServer URL | Your Maloja URL followed by `/apis/audioscrobbler_legacy`\nUsername | Doesn't matter\nPassword | Any of your API keys\n\nKnown working scrobblers:\n* [Pano Scrobbler](https://github.com/kawaiiDango/pScrobbler) for Android\n* [Simple Scrobbler](https://simple-last-fm-scrobbler.github.io) for Android\n* [Airsonic Advanced](https://github.com/airsonic-advanced/airsonic-advanced) (requires you to supply the full endpoint (`yoururl.tld/apis/listenbrainz/1/submit-listens`))\n* [Funkwhale](https://dev.funkwhale.audio/funkwhale/funkwhale) (use the legacy API `yoururl.tld/apis/audioscrobbler_legacy`)\n* [mpdscribble](https://github.com/MusicPlayerDaemon/mpdscribble) (use the legacy API `yoururl.tld/apis/audioscrobbler_legacy`)\n\nI'm thankful for any feedback whether other scrobblers work!\n\n\n\n### Manual\n\nIf you can't automatically scrobble your music, you can always do it manually on the `/admin_manual` page of your Maloja server.\n\n\n## How to extend\n\nIf you'd like to implement anything on top of Maloja, visit `/api_explorer`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "scrobbling,music,selfhosted,database,charts,statistics",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "malojaserver",
    "package_url": "https://pypi.org/project/malojaserver/",
    "platform": null,
    "project_url": "https://pypi.org/project/malojaserver/",
    "project_urls": {
      "documentation": "https://github.com/krateng/maloja",
      "homepage": "https://github.com/krateng/maloja",
      "repository": "https://github.com/krateng/maloja"
    },
    "release_url": "https://pypi.org/project/malojaserver/3.0.4/",
    "requires_dist": [
      "bottle>=0.12.16",
      "waitress>=1.3",
      "doreah>=1.9.1, <2",
      "nimrodel>=0.8.0",
      "setproctitle>=1.1.10",
      "jinja2>=2.11",
      "lru-dict>=1.1.6",
      "css_html_js_minify>=2.5.5",
      "psutil>=5.8.0",
      "sqlalchemy>=1.4",
      "python-datauri>=1.1.0",
      "requests>=2.27.1",
      "pyvips>=2.1 ; extra == \"full\""
    ],
    "requires_python": ">=3.6",
    "summary": "Self-hosted music scrobble database",
    "version": "3.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17049055,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bed9685f1914502a32340943e2949ca9419d17235032d6350d5c8ee1cd43081d",
        "md5": "7f32efcf2dc2a77d6c8376bff7ebe616",
        "sha256": "67ea659edc015b1100ee4655723fad2afe5f4f29f2afd3f8567e7c4aaa716f59"
      },
      "downloads": -1,
      "filename": "malojaserver-3.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f32efcf2dc2a77d6c8376bff7ebe616",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1717498,
      "upload_time": "2022-04-16T16:51:38",
      "upload_time_iso_8601": "2022-04-16T16:51:38.733502Z",
      "url": "https://files.pythonhosted.org/packages/be/d9/685f1914502a32340943e2949ca9419d17235032d6350d5c8ee1cd43081d/malojaserver-3.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "861d654e45ebc9ea025f64968a950e5016d4ea5904a08d564c957382d6dd0e8e",
        "md5": "6bb5e3185653134b1d3bf8ac0a3e00ec",
        "sha256": "f704ebc8c43039f47bbdd03f43e444ed8bc4f54e6ce9d1b5ea7d123a9ca45b72"
      },
      "downloads": -1,
      "filename": "malojaserver-3.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6bb5e3185653134b1d3bf8ac0a3e00ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1678474,
      "upload_time": "2022-04-16T16:51:40",
      "upload_time_iso_8601": "2022-04-16T16:51:40.955886Z",
      "url": "https://files.pythonhosted.org/packages/86/1d/654e45ebc9ea025f64968a950e5016d4ea5904a08d564c957382d6dd0e8e/malojaserver-3.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}