{
  "info": {
    "author": "Johannes Krattenmacher",
    "author_email": "maloja@krateng.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Maloja\n\n[![](https://img.shields.io/pypi/v/malojaserver?style=for-the-badge)](https://pypi.org/project/malojaserver/)\n[![](https://img.shields.io/pypi/dm/malojaserver?style=for-the-badge)](https://pypi.org/project/malojaserver/)\n[![](https://img.shields.io/github/stars/krateng/maloja?style=for-the-badge&color=purple)](https://github.com/krateng/maloja/stargazers)\n[![](https://img.shields.io/pypi/l/malojaserver?style=for-the-badge)](https://github.com/krateng/maloja/blob/master/LICENSE)\n\nSimple self-hosted music scrobble database to create personal listening statistics. No recommendations, no social network, no nonsense.\n\nYou can check [my own Maloja page](https://maloja.krateng.ch) to see what it looks like.\n\n\n> **IMPORTANT**: With the update 2.0, Maloja has been refactored into a Python package and the old update script no longer works. If you're still on version 1, see [below](#update).\n\n## Table of Contents\n* [Why not Last.fm / Libre.fm / GNU FM?](#why-not-lastfm--librefm--gnu-fm)\n* [How to install](#how-to-install)\n\t* [Environment](#environment)\n\t* [New Installation](#new-installation)\n\t* [Update](#update)\n\t* [Docker](#docker)\n* [How to use](#how-to-use)\n\t* [Basic control](#basic-control)\n\t* [Data](#data)\n\t* [Customization](#customization)\n* [How to scrobble](#how-to-scrobble)\n\t* [Native API](#native-api)\n\t* [Standard-compliant API](#standard-compliant-api)\n\t* [Manual](#manual)\n* [How to extend](#how-to-extend)\n\n## Why not Last.fm / Libre.fm / GNU FM?\n\nMaloja is **self-hosted**. You will always be able to access your data in an easily-parseable format. Your library is not synced with any public or official music database, so you can **follow your own tagging schema** or even **group associated artists together** in your charts.\n\nMaloja also gets **rid of all the extra stuff**: social networking, radios, recommendations, etc. It only keeps track of your listening history and lets you analyze it.\n\nMaloja's database has one big advantage: It supports **multiple artists per track**. This means artists who are often just \"featuring\" in the track title get a place in your charts, and **collaborations between several artists finally get credited to all participants**. This allows you to get an actual idea of your artist preferences over time.\n\nAlso neat: You can use your **custom artist or track images**.\n\n\n## How to install\n\n### Environment\n\nI can support you with issues best if you use **Alpine Linux**. In my experience, **2 GB RAM** should do nicely, but higher amounts allow more caching and reduce page load times for complicated statistics.\n\n### New Installation\n\n1) Make sure you have Python 3.5 or higher installed. You also need some basic packages that should be present on most systems, but I've provided simple shell scripts for Alpine and Ubuntu to get everything you need.\n\n2) If you'd like to display images, you will need API keys for [Last.fm](https://www.last.fm/api/account/create) and [Spotify](https://developer.spotify.com/dashboard/applications). These are free of charge!\n\n3) Download Maloja with the command `pip install malojaserver`. Make sure to use the correct python version (Use `pip3` if necessary).\n\n4) (Recommended) Put your server behind a reverse proxy for SSL encryption. Make sure that you're proxying to the IPv6 address unless you changed your settings to use IPv4. If you're running Maloja in a container, make sure to expose port 32400 (or whichever port you have chosen in your settings).\n\n5) (Recommended) Until I have a proper service implemented, I would recommend setting two cronjobs for maloja:\n\n```\n@reboot sleep 15 && maloja start\n42 0 * * 2 maloja restart\n```\n\n\n### Update\n\n* If you use a version before 2.0 (1.x), install the package as described above, then manually copy all your user data to your `~/.local/share/maloja` folder.\n* Otherwise, simply run the command `maloja update` or use `pip`s update mechanic.\n\n\n### Docker\n\nThere is a Dockerfile in the repo that should work by itself. You can also use the unofficial [Dockerhub repository](https://hub.docker.com/r/foxxmd/maloja) kindly provided by FoxxMD.\n\nYou might want to set the environment variables `MALOJA_DEFAULT_PASSWORD`, `MALOJA_SKIP_SETUP` and `MALOJA_DATA_DIRECTORY`.\n\n\n## How to use\n\n### Basic control\n\nStart and stop the server with\n\n\tmaloja start\n\tmaloja stop\n\tmaloja restart\n\nIf something is not working, you can try\n\n\tmaloja debug\n\nto run the server in the foreground.\n\n\n### Data\n\n* If you would like to import all your previous last.fm scrobbles, use [benfoxall's website](https://benjaminbenben.com/lastfm-to-csv/) ([GitHub page](https://github.com/benfoxall/lastfm-to-csv)). Use the command `maloja import *filename*`\tto import the downloaded file into Maloja.\n\n* To backup your data, run `maloja backup` or, to only backup essential data (no artwork etc), `maloja backup -l minimal`.\n\n* To fix your database (e.g. after you've added new rules), use `maloja fix`.\n\n### Customization\n\n* Have a look at the `default.ini` file in the `~/.local/share/maloja/settings` folder to see what settings are available. Specify your own choices in `settings.ini`. You can also set each of these settings as an environment variable with the prefix `MALOJA_` (e.g. `MALOJA_SKIP_SETUP`).\n\n* If you have activated admin mode in your web interface, you can upload custom images for artists or tracks by simply dragging them onto the existing image on the artist or track page. You can also manage custom images directly in the file system - consult `images.info` in the `~/.local/share/maloja/images` folder.\n\n* To specify custom rules, consult the `rules.info` file in `~/.local/share/maloja/rules`. You can also apply some predefined rules on the `/setup` page of your server.\n\n\n## How to scrobble\n\nYou can set up any amount of API keys in the file `authenticated_machines.tsv` in the `~/.local/share/maloja/clients` folder.\n\n### Native API\n\nIf you use Plex Web, Spotify, Bandcamp, Soundcloud or Youtube Music on Chromium, you can use the included extension (also available on the [Chrome Web Store](https://chrome.google.com/webstore/detail/maloja-scrobbler/cfnbifdmgbnaalphodcbandoopgbfeeh)). Make sure to enter the random key Maloja generates on first startup in the extension settings.\n\nIf you want to implement your own method of scrobbling, it's very simple: You only need one POST request to `/api/newscrobble` with the keys `artist`, `title` and `key` - either as form-data or json.\n\n### Standard-compliant API\n\nYou can use any third-party scrobbler that supports the audioscrobbler (GNUFM) or the ListenBrainz protocol. This is still very experimental, but give it a try with these settings:\n\nGNU FM | &nbsp;\n------ | ---------\nGnukebox URL | Your Maloja URL followed by `/api/s/audioscrobbler`\nUsername | Any name, doesn't matter\nPassword | Any of your API keys\n\nListenBrainz | &nbsp;\n------ | ---------\nAPI URL | Your Maloja URL followed by `/api/s/listenbrainz`\nUsername | Any name, doesn't matter\nAuth Token | Any of your API keys\n\nThese are tested with the Pano Scrobbler and the Simple Last.fm Scrobbler for Android. I'm thankful for any feedback whether other scrobblers work!\n\nIt is recommended to define a different API key for every scrobbler you use in `clients/authenticated_machines.tsv` in your Maloja folder.\n\n### Manual\n\nIf you can't automatically scrobble your music, you can always do it manually on the `/admin_manual` page of your Maloja server.\n\n\n## How to extend\n\nIf you'd like to implement anything on top of Maloja, visit `/api_explorer`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/krateng/maloja",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "malojaserver",
    "package_url": "https://pypi.org/project/malojaserver/",
    "platform": "",
    "project_url": "https://pypi.org/project/malojaserver/",
    "project_urls": {
      "Homepage": "https://github.com/krateng/maloja"
    },
    "release_url": "https://pypi.org/project/malojaserver/2.7.0/",
    "requires_dist": [
      "bottle (>=0.12.16)",
      "waitress (>=1.3)",
      "doreah (>=1.6.9)",
      "nimrodel (>=0.6.3)",
      "setproctitle (>=1.1.10)",
      "wand (>=0.5.4)",
      "lesscpy (>=0.13)",
      "jinja2 (>2.11)",
      "lru-dict (>=1.1.6)"
    ],
    "requires_python": ">=3.5",
    "summary": "Self-hosted music scrobble database",
    "version": "2.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17049055,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c23ce8bd6c49d96d409b241ca6930b674beeced1f95adbddb4e73b27dd6bb744",
        "md5": "14541f140ed4288e65ae3556985a52f4",
        "sha256": "5f7f62e3c6d124cab0f263a34f436f73d5d32cad4820d7b88364b2173aa22362"
      },
      "downloads": -1,
      "filename": "malojaserver-2.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14541f140ed4288e65ae3556985a52f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 461410,
      "upload_time": "2020-08-18T14:21:44",
      "upload_time_iso_8601": "2020-08-18T14:21:44.737463Z",
      "url": "https://files.pythonhosted.org/packages/c2/3c/e8bd6c49d96d409b241ca6930b674beeced1f95adbddb4e73b27dd6bb744/malojaserver-2.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c051f0ab2fd1d05652130cb795d68d40e4e63fc09ea7a635b8a561347dadc95",
        "md5": "3b0c7676ff71f58cd4723badcef71953",
        "sha256": "acef99ef86726b39813f4c5f8bc923da2e846d1fdbb0fce8eac56fa1326d92bf"
      },
      "downloads": -1,
      "filename": "malojaserver-2.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3b0c7676ff71f58cd4723badcef71953",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 44499,
      "upload_time": "2020-08-18T14:21:46",
      "upload_time_iso_8601": "2020-08-18T14:21:46.332052Z",
      "url": "https://files.pythonhosted.org/packages/1c/05/1f0ab2fd1d05652130cb795d68d40e4e63fc09ea7a635b8a561347dadc95/malojaserver-2.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}