{
  "info": {
    "author": "REX Maintainers",
    "author_email": "tech.supply@Dynata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# rex-sdk-python\n\nPackage for building and interacting with the Dynata Respondent Exchange (REX)\n\n&nbsp;  \n\n## Quickstart:\n\n&nbsp;  \n\n### *__Opportunity Registry__*\n### Instantiate a Registry Client\n```\nfrom dynata_rex import OpportunityRegistry\nregistry = OpportunityRegistry('rex_access_key', 'rex_secret_key')\n```\n### List opportunity notifications from the registry\n```\nopportunities = registry.receive_notifications()\n\n# [Opportunity(id=1,...), Opportunity(id=2,...), Opportunity(id=1,...)]\n```\n### Convert an opportunity to JSON\n```\nopportunity_json = Opportunity.json()\n```\n### Acknowledge a list of notifications from the registry\n```\nregistry.ack_notifications([opportunity_1.id, ..., opportunity_N.id])\n```\n### Acknowledge a single notification from the registry\n```\nregistry.ack_notification(opportunity.id)\n```\n### Get a list of corresponding opportunities from a project_id\n```\ncorresponding = registry.list_project_opportunities(opportunity.project_id)\n\n# [12345, 45678, 78901]\n```\n### Download a collection from a collection-type targeting cell\n```\ndata = registry.download_collection(cell.collection_id)\n```  \n\n&nbsp;  \n&nbsp;  \n\n### *__Respondent Gateway__*\n\n### Instantiate a RespondentGateway Client\n```\nfrom dynata_rex import RespondentGateway\ngateway = RespondentGateway('rex_access_key', 'rex_secret_key')\n```\n\n### Create a survey link for your respondent\n```\nurl = 'https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en'\n\nsigned_link = gateway.create_respondent_url(url,\n                                            '1990-01-01',\n                                            'male',\n                                            '90210',\n                                            'very-unique-respondent-id',\n                                            \n                                            ttl=60)\n# https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en&birth_date=1990-01-01&gender=male&postal_code=90210&respondent_id=very-unique-respondent-id&access_key=rex_access_key&expiration=2021-11-29T15:35:12.993Z&signature=4353e8c4ca8f8fb75530214ac78139b55ca3f090438c639476b8584afe1396e6\n```\n\n### Add additional query parameters to a link that will be present on return from survey\n```\nurl = 'https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en'\n\ncustom_params = {\n    'custom_parameter': 'custom_value',\n    'another_custom_parameter': 'another_custom_value'\n}\n\nsigned_link = gateway.create_respondent_url(url,\n                                            '1990-01-01',\n                                            'male',\n                                            '90210',\n                                            'very-unique-respondent-id',\n                                            additional_params=custom_params,\n                                            ttl=60)\n\n# https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en&custom_parameter=custom_value&another_custom_parameter=another_custom_value&birth_date=1990-01-01&gender=male&postal_code=90210&respondent_id=very-unique-respondent-id&access_key=rex_access_key&expiration=2021-12-02T13:48:55.759Z&signature=cf443326b73fb8af14c590e18d79a970fc3f73327c2d140c324ee1ce3020d064\n```\n\n\n### Sign an inbound /start link with your credentials\n```\nurl = 'https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en'\nsigned_url = gateway.sign_url(url)\n\n# \"https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en&access_key=rex_access_key&expiration=2021-11-24T16:12:06.070Z&signature=fa8b5cac82d34bcf8026904b353349db5b1b871f735e07a601389cb6da2d744d\"\n```\n### Generate a URL-quoted signed url\n```\nsigned_url = gateway.sign_url(url, url_quoting=True)\n\n# 'https://respondent.fake.rex.dynata.com/start?ctx=XXXX&language=en&access_key=rex_access_key&expiration=2021-11-24T16%3A12%3A35.991Z&signature=4219cf63406ae429d94dbe9c33027816c264c1e2bf1edbadd2510eb9bf2351c3'\n```\n### Verify a signed /end link URL with your credentials\n##### Valid URL\n```\n# Termination Endlink\nend_url = \"https://respondent.fake.rex.dynata.com/end?ctx=XXXX&transaction_id=123456&disposition=2&status=1&access_key=rex_access_key&expiration=2021-11-24T19:23:23.439Z&signature=d351ff102b3ae6252d47fd54b859ecaf38c2701f214c233848bbdf64c0bc7fe1\"\n\ngateway.verify_url(end_url)\n\n# True\n```\n##### Missing Signature\n```\nmissing_signature = \"https://respondent.fake.rex.dynata.com/end?ctx=XXXX&transaction_id=123456&disposition=2&status=1&access_key=rex_access_key&expiration=2021-11-24T19:23:23.439Z\"\n\ngateway.verify_url(missing_signature)\n\n# False\n```\n##### Altered Parameters (Term --> Complete Attempt)\n```\n# Disposition changed to 1 (from 2) and status to 0 (from 1)\n\naltered_parameters = \"https://respondent.fake.rex.dynata.com/end?ctx=XXXX&transaction_id=123456&disposition=1&status=0&access_key=rex_access_key&expiration=2021-11-24T19:23:23.439Z&signature=d351ff102b3ae6252d47fd54b859ecaf38c2701f214c233848bbdf64c0bc7fe1\"\n\ngateway.verify_url(altered_parameters)\n\n# False\n```\n##### Get Disposition of a Survey from Endlink\n```\ntermination = \"https://respondent.fake.rex.dynata.com/end?ctx=XXXX&transaction_id=123456&disposition=2&status=1&access_key=rex_access_key&expiration=2021-11-24T19:23:23.439Z&signature=d351ff102b3ae6252d47fd54b859ecaf38c2701f214c233848bbdf64c0bc7fe1\"\n\ndisposition = gateway.get_respondent_disposition(termination)\n\n# <GatewayDispositionsEnum.TERMINATION: 2>\n\ndisposition.name\n\n# 'TERMINATION'\n\ndisposition.value\n\n# 2\n```\n\n##### Get Disposition + Status of a Survey from Endlink\n```\ntermination = \"https://respondent.fake.rex.dynata.com/end?ctx=XXXX&transaction_id=123456&disposition=2&status=1&access_key=rex_access_key&expiration=2021-11-24T19:23:23.439Z&signature=d351ff102b3ae6252d47fd54b859ecaf38c2701f214c233848bbdf64c0bc7fe1\"\n\nstatus = gateway.get_respondent_status(termination)\n\n#<GatewayStatusEnum.TERMINATION_DYNATA: (<GatewayDispositionsEnum.TERMINATION: 2>, 1)>\n\nstatus.name\n\n# 'TERMINATION_DYNATA'\n\nstatus.value\n\n# (<GatewayDispositionsEnum.TERMINATION: 2>, 1)\n```\n\n##### Create a context\n```\ncontext_id = 'super-unique-ctx-id'\ndata = {\n    'ctx': 'parent-context-id',           # From survey link 'ctx' parameter\n    'gender': 'male',\n    'birth_data': '1999-09-09',\n    'postal_code': '90210'\n}\ngateway.create_context(context_id, data)\n\n# 'super-unique-ctx-id'\n```\n\n##### Retrieve a context\n```\ngw.get_context('super-unique-ctx-id')\n\n# {\n#    'id': 'super-unique-ctx-id',\n#    'items': {\n#        'ctx': 'parent-context-id',\n#        'gender': 'male',\n#        'birth_data': '1999-09-09',\n#        'postal_code': '90210'\n#     }\n# }\n```\n\n##### Expire a context\n```\ngw.expire_context('super-unique-ctx-id')\n\n# {\n#    'id': 'super-unique-ctx-id',\n#    'items': {\n#        'ctx': 'parent-context-id',\n#        'gender': 'male',\n#        'birth_data': '1999-09-09',\n#        'postal_code': '90210'\n#     },\n#     'expiration': '2021-11-30T16:10:44Z'\n# }\n```\n\n##### List Attributes\n```\ngw.list_attributes('country', 'page_number', 'page_size')\n\n# {\n#    'data':\n#    [\n#       {\n#           'active': true,\n#           'parameter_id\": 402\n#       }\n#    ]\n# }\n```\n\n##### Get Attribute Info\n```\ngw.get_attribute_info('attribute-id')\n\n# {\n#   'id': 402,\n#   'name': \"This Parameter\",\n#   'description': \"Details of what this is\",\n#   'display_mode: \"N\" (Optional),\n#   'parent_dependencies':\n#   [\n#       'answer_ids':\n#       [\n#           { 12 }\n#       ],\n#       'parameter_id':403\n#   ],\n#   'expiration_duration': 36000 (Optional),\n#   'is_active': true,\n#   'countries':\n#   [\n#       { \"US\" }\n#   ],\n#   'question': (Optional)\n#   {\n#       'text': \"How much wood can a woodchuck?\",\n#       'translations': \n#       [\n#           {\n#               'locale': \"BG\",\n#               'text': \"Other Language\"\n#           }\n#       ]\n#   }\n#   'answers': \n#   [\n#       {\n#           'id': 99,\n#           'text': \"A ton\",\n#           'countries':\n#           [\n#               { \"US\" }\n#           ],\n#           'translations':\n#           [\n#               {\n#                   'locale': \"GB\",\n#                   'text': \"Other language\"\n#           ]\n#       }\n#   ]\n# }\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dynata/rex-sdk-python",
    "keywords": "respondent exchange rex smor dynata python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynata-rex",
    "package_url": "https://pypi.org/project/dynata-rex/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/dynata-rex/",
    "project_urls": {
      "Homepage": "https://github.com/dynata/rex-sdk-python"
    },
    "release_url": "https://pypi.org/project/dynata-rex/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package for building and interacting with the Dynata Respondent Exchange (REX)",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15656093,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a2133980e94fea1f4a79cf0384f86b972e76ce8a954aa3c98a390d4889b3189",
        "md5": "1ecec647b426a9c9be37767da451ff61",
        "sha256": "8916263b358b513aee5bd1e6211330b6ef79f6b9bb3f8155e019d5f71dedf737"
      },
      "downloads": -1,
      "filename": "dynata_rex-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1ecec647b426a9c9be37767da451ff61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18772,
      "upload_time": "2022-08-04T14:27:54",
      "upload_time_iso_8601": "2022-08-04T14:27:54.780722Z",
      "url": "https://files.pythonhosted.org/packages/3a/21/33980e94fea1f4a79cf0384f86b972e76ce8a954aa3c98a390d4889b3189/dynata_rex-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}