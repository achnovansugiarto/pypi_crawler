{
  "info": {
    "author": "Dave Hall",
    "author_email": "dave@etianen.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "django-require\r\n==============\r\n\r\n**django-require** is a Django staticfiles post-processor for optimizing with [RequireJS][].\r\n\r\n[RequireJS]: http://requirejs.org/\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n*   Optimize your static assets using the excellent r.js optimizer.\r\n*   Compile standalone modules using the [almond.js][] shim.\r\n*   Compatible with any Django staticfiles storage backend.\r\n\r\n[almond.js]: https://github.com/jrburke/almond\r\n\r\n\r\nInstallation\r\n---------------\r\n\r\n1.  Checkout the latest django-require release and copy or symlink the `require` directory into your `PYTHONPATH`.\r\n2.  Add `'require'` to your `INSTALLED_APPS` setting.\r\n3.  Set your `STATICFILES_STORAGE` setting to `'require.storage.OptimizedStaticFilesStorage'` or `'require.storage.OptimizedCachedStaticFilesStorage'`.  \r\n\r\n\r\nAvailable settings\r\n------------------\r\n\r\nAvailable settings, and their default values, are shown below. You should configure this to match the layout of your\r\nproject's static files. Please consult the [RequireJS][] documentation for more information about how to build javascript\r\nusing RequireJS.\r\n\r\n```python\r\n# The baseUrl to pass to the r.js optimizer.\r\nREQUIRE_BASE_URL = \"js\"\r\n\r\n# The name of a build profile to use for your project, relative to REQUIRE_BASE_URL.\r\n# A sensible value would be 'app.build.js'. Leave blank to use the built-in default build profile.\r\nREQUIRE_BUILD_PROFILE = None\r\n\r\n# The name of the require.js script used by your project, relative to REQUIRE_BASE_URL.\r\nREQUIRE_JS = \"require.js\"\r\n\r\n# A dictionary of standalone modules to build with almond.js.\r\n# See the section on Standalone Modules, below.\r\nREQUIRE_STANDALONE_MODULES = {}\r\n\r\n# Whether to run django-require in debug mode.\r\nREQUIRE_DEBUG = settings.DEBUG\r\n\r\n# A tuple of files to exclude from the compilation result of r.js.\r\nREQUIRE_EXCLUDE = (\"build.txt\",)\r\n\r\n# The execution environment in which to run r.js: node or rhino.\r\nREQUIRE_ENVIRONMENT = \"rhino\"\r\n```\r\n\r\n\r\nGenerating require.js\r\n---------------------\r\n\r\nAs a shortcut to downloading a copy of require.js from the internet, you can simply run the `require_init` management\r\nto copy a version of require.js into your `STATICFILES_DIRS`, at the location specified by your `REQUIRE_BASE_URL`\r\nand `REQUIRE_JS` settings.\r\n\r\n```\r\n$ ./manage.py require_init\r\n```\r\n\r\n\r\nGenerating build profiles\r\n-------------------------\r\n\r\nIn almost all cases, you'll want to create a custom build profile for your project. To help you get started, django-require\r\ncan generate a default build profile into your `STATICFILES_DIRS`. Just set your `REQUIRE_BUILD_PROFILE` setting to a build profile name,\r\nand run `require_init`. A good name for a build profile would be `'app.build.js'`.\r\n\r\nAny standalone modules that your specify with a build profile will also have a default build profile generated when you run this\r\ncommand.\r\n\r\n\r\nRunning javascript modules in templates\r\n---------------------------------------\r\n\r\nYou can run javascript modules in templates by using the `{% require_module %}` template tag.\r\n\r\n```html\r\n<html>\r\n    {% load require %}\r\n    <head>\r\n        {% require_module 'main' %}\r\n    </head>\r\n    <body></body>\r\n</html>\r\n```\r\n\r\nThis template fragment would then render to something like:\r\n\r\n```html\r\n<html>\r\n    <head>\r\n        <script src=\"/static/js/require.js\" data-main=\"/static/js/main.js\"></script>\r\n    </head>\r\n    <body></body>\r\n</html>\r\n```\r\n\r\nIf the `'main'` module was specified as a standalone module in your `REQUIRE_STANDALONE_MODULES` setting, and `REQUIRE_DEBUG`\r\nis `False`, then the template fragement would instead render as:\r\n\r\nThis template fragment would then render to something like:\r\n\r\n```html\r\n<html>\r\n    <head>\r\n        <script src=\"/static/js/main-built.js\"></script>\r\n    </head>\r\n    <body></body>\r\n</html>\r\n```\r\n\r\n\r\nBuilding standalone modules\r\n---------------------------\r\n\r\nAs a further optimization to your code, you can build your modules to run independently of require.js, which can often speed\r\nup page load times. Standalone modules are built using the almond.js shim, so consult the [almond.js][] documentation\r\nto make sure that it's safe to build your module in standalone mode.\r\n\r\nTo specify standalone modules, simply add them to your `REQUIRE_STANDALONE_MODULES` setting, as below:\r\n\r\n```python\r\nREQUIRE_STANDALONE_MODULES = {\r\n    \"main\": {\r\n        # Where to output the built module, relative to REQUIRE_BASE_URL.\r\n        \"out\": \"main-built.js\",\r\n        \r\n        # Optional: A build profile used to build this standalone module.\r\n        \"build_profile\": \"main.build.js\",\r\n    }\r\n}\r\n```\r\n\r\n\r\nRunning the r.js optmizer\r\n-------------------------\r\n\r\nThe r.js optimizer is run automatically whenever you call the `collectstatic` management command. The optimizer\r\nis run as a post-processing step on your static files.\r\n\r\ndjango-require provides two storage classes that are ready to use with the r.js optimizer:\r\n\r\n*   `require.storage.OptimizedStaticFilesStorage` - A filesystem-based storage that runs the r.js optimizer.\r\n*   `require.storage.OptimizedCachedStaticFilesStorage` - As above, but fingerprints all files with an MD5 hash of their contents for HTTP cache-busting.\r\n\r\n\r\nCreating your own optimizing storage classes\r\n--------------------------------------------\r\n\r\nYou can add r.js optmization to any django staticfiles storage class by using the `require.storage.OptimizedFilesMixin`. For example, to make an optimizing\r\nstorage that uploads to Amazon S3 using `S3BotoStorage` from [django-storages][]:\r\n\r\n```python\r\nfrom storages.backends.s3boto import S3BotoStorage\r\nfrom require.storage import OptimizedFilesMixin\r\n\r\n# S3 storage with r.js optimization.\r\nclass OptimizedS3BotoStorage(OptimizedFilesMixin, S3BotoStorage):\r\n    pass\r\n\r\n# S3 storage with r.js optimization and MD5 fingerprinting.\r\nfrom django.contrib.staticfiles.storage import CachedFilesMixin\r\nclass OptimizedCachedS3BotoStorage(OptimizedFilesMixin, CachedFilesMixin, S3BotoStorage):\r\n    pass\r\n```\r\n\r\n[django-storages]: http://django-storages.readthedocs.org/en/latest/\r\n\r\n\r\n\r\nSupport and announcements\r\n-------------------------\r\n\r\nDownloads and bug tracking can be found at the [main project website][].\r\n\r\n[main project website]: http://github.com/etianen/django-require\r\n    \"django-require on GitHub\"\r\n\r\nYou can keep up to date with the latest announcements by joining the\r\n[django-require discussion group][].\r\n\r\n[django-require discussion group]: http://groups.google.com/group/django-require\r\n    \"django-require Google Group\"\r\n\r\n    \r\nMore information\r\n----------------\r\n\r\nThe django-require project was developed by Dave Hall. You can get the code\r\nfrom the [django-require project site][].\r\n\r\n[django-require project site]: http://github.com/etianen/django-require\r\n    \"django-require on GitHub\"\r\n    \r\nDave Hall is a freelance web developer, based in Cambridge, UK. You can usually\r\nfind him on the Internet in a number of different places:\r\n\r\n*   [Website](http://www.etianen.com/ \"Dave Hall's homepage\")\r\n*   [Twitter](http://twitter.com/etianen \"Dave Hall on Twitter\")\r\n*   [Google Profile](http://www.google.com/profiles/david.etianen \"Dave Hall's Google profile\")",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/etianen/django-require",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-require",
    "package_url": "https://pypi.org/project/django-require/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-require/",
    "project_urls": {
      "Homepage": "https://github.com/etianen/django-require"
    },
    "release_url": "https://pypi.org/project/django-require/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django staticfiles post-processor for optimizing with RequireJS.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2295189,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f57d5b37149a41418efee1163e8773552892b7825628f24eb9e718bc36ed64c",
        "md5": "c3aec0b8ca398d878bed7a7d19241e54",
        "sha256": "f4fb6400b5d0100dac21720c619b45439cdea476ba7e8231ad1252cea27ce0b2"
      },
      "downloads": -1,
      "filename": "django-require-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c3aec0b8ca398d878bed7a7d19241e54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6731565,
      "upload_time": "2013-02-25T11:40:28",
      "upload_time_iso_8601": "2013-02-25T11:40:28.759895Z",
      "url": "https://files.pythonhosted.org/packages/0f/57/d5b37149a41418efee1163e8773552892b7825628f24eb9e718bc36ed64c/django-require-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}