{
  "info": {
    "author": "Chris Redford",
    "author_email": "credford@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "========\nDotMap\n========\n\n:code:`DotMap` is a dot-access :code:`dict` subclass that\n\n* has dynamic child creation\n* can be initialized with keys\n* easily initializes from :code:`dict`\n* easily converts to :code:`dict`\n* is ordered by insertion\n\nThe key feature is exactly what you want: dot-access\n\n.. code-block:: python\n\n\tfrom dotmap import DotMap\n\tm = DotMap()\n\tm.name = 'Joe'\n\tprint 'Hello ' + m.name\n\t# Hello Joe\n\nHowever, :code:`DotMap` is a :code:`dict` and you can treat it like a :code:`dict` as needed\n\n.. code-block:: python\n\n\tprint m['name']\n\t# Joe\n\tm.name += ' Smith'\n\tm['name'] += ' Jr'\n\tprint m.name\n\t# Joe Smith Jr\n\nIt also has fast, automatic hierarchy\n\n.. code-block:: python\n\n\tm = DotMap()\n\tm.people.steve.age = 31\n\nAnd key initialization\n\n.. code-block:: python\n\n\tm = DotMap(a=1, b=2)\n\nYou can initialize it from :code:`dict` and convert it to :code:`dict`\n\n.. code-block:: python\n\n\td = {'a':1, 'b':2}\n\t\n\tm = DotMap(d)\n\tprint m\n\t# DotMap(a=1, b=2)\n\t\n\tprint m.toDict()\n\t# {'a': 1, 'b': 2}\n\nAnd it has iteration that is ordered by insertion\n\n.. code-block:: python\n\n\tm = DotMap()\n\n\tm.people.john.age = 32\n\tm.people.john.job = 'programmer'\n\tm.people.mary.age = 24\n\tm.people.mary.job = 'designer'\n\tm.people.dave.age = 55\n\tm.people.dave.job = 'manager'\n\n\tfor k, v in m.people.items():\n\t\tprint k, v\n\tprint\n\n\t# john DotMap(age=32, job='programmer')\n\t# mary DotMap(age=24, job='designer')\n\t# dave DotMap(age=55, job='manager')\t\n\nThere is also built-in :code:`pprint` as :code:`dict` for debugging a large :code:`DotMap`\n\n.. code-block:: python\n\n\tm.pprint()\n\t# {'people': {'dave': {'age': 55, 'job': 'manager'},\n\t#             'john': {'age': 32, 'job': 'programmer'},\n\t#             'mary': {'age': 24, 'job': 'designer'}}}\n\nAnd many other features involving dots and dictionaries that will be immediately intuitive when used.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/drgrib/dotmap/tarball/1.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/drgrib/dotmap",
    "keywords": "dict,dot,map,order,ordered,ordereddict,access,dynamic",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dotmap",
    "package_url": "https://pypi.org/project/dotmap/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dotmap/",
    "project_urls": {
      "Download": "https://github.com/drgrib/dotmap/tarball/1.0",
      "Homepage": "https://github.com/drgrib/dotmap"
    },
    "release_url": "https://pypi.org/project/dotmap/1.1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "ordered, dynamically-expandable dot-access dictionary",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13430780,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89ac1add5ae2caa36a28310e539dd6eb2291321812346059f98b278457b7d9c2",
        "md5": "f9dedff18f9cad78b7e1758b76848a8c",
        "sha256": "86e7643fc4d0ad0aa04049c462b58a55a9be4428dca93b7b28c5714b21a5ff0d"
      },
      "downloads": -1,
      "filename": "dotmap-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f9dedff18f9cad78b7e1758b76848a8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2963,
      "upload_time": "2015-09-17T22:39:31",
      "upload_time_iso_8601": "2015-09-17T22:39:31.676555Z",
      "url": "https://files.pythonhosted.org/packages/89/ac/1add5ae2caa36a28310e539dd6eb2291321812346059f98b278457b7d9c2/dotmap-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}