{
  "info": {
    "author": "Andrew Dunai",
    "author_email": "andrew@dun.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "django-searchable-select\n========================\n\n.. Build Status:: https://travis-ci.org/and3rson/django-searchable-select.svg\n.. Coverage Status:: https://coveralls.io/repos/github/and3rson/django-searchable-select/badge.svg\n\nA better and faster multiple selection widget with suggestions for\nDjango\n\nWhat is this?\n=============\n\nThis plugin provides a replacement for standard multi-choice select on\nDjango admin pages.\n\nYou can use this as custom widget for ``ManyToManyField``.\n\nFeatures\n========\n\n-  Filtering is performed on server side and thus significantly improves\n   performance.\n-  Uses ``Twitter Typeahead`` to provide suggestion completion.\n-  Works **great** with ManyToMany fields that can be chosen from\n   thousands of thousands of choices, e. g. ``User - City`` relations.\n\nBefore\n~~~~~~\n\n.. figure:: https://habrastorage.org/files/dd9/f17/87e/dd9f1787e0dd4e05826fdde08e270609.png\n   :alt: Before\n\n   Before\n\nAfter\n~~~~~\n\n.. figure:: https://habrastorage.org/files/db2/c87/460/db2c87460992470e9d8e19da307c169d.png\n   :alt: Before\n\n   Before\n\nInstallation\n============\n\n1. Install ``django-searchable-select``.\n\n   .. code:: sh\n\n       $ pip install django-searchable-select\n\n2. Add ‘searchableselect’ to your settings.\n\n   .. code:: python\n\n       # settings.py\n\n       INSTALLED_APPS = (\n           # ...\n           'searchableselect',\n           # ...\n       )\n\n3. Add URL pattern required for the suggesting engine to your root\n   ``urls.py``.\n\n   .. code:: python\n\n       # urls.py\n\n       urlpatterns = patterns(\n           '',\n           # ...\n           url('^searchableselect/', include('searchableselect.urls')),\n           # ...\n       )\n\n4. Use the widget in your model admin class:\n\n   .. code:: python\n\n       from django import models, forms\n       from searchableselect.widgets import SearchableSelect\n       from models import Traveler\n\n       class TravelerForm(forms.ModelForm):\n           class Meta:\n               model = Traveler\n               exclude = ()\n               widgets = {\n                   'cities_visited': SearchableSelect(model='cities.City', search_field='name')\n               }\n\n\n       class TravelerAdmin(admin.ModelAdmin):\n           form = TravelerForm\n\n       admin.site.register(Traveler, TravelerAdmin)\n\n   Remember to **always** initialize ``SearchableSelect`` with three\n   keyword arguments: ``model``, ``search_field`` and ``many``.\n\n   -  ``model`` is the string in form ``APP_NAME.MODEL_NAME``\n      representing your model in the project, e. g. ‘cities.City’\n   -  ``search_field`` is the field within model that will be used to\n      perform filtering, e. g. ‘name’\n   -  ``many`` must be ``True`` for ``ManyToManyField`` and ``False``\n      for ``ForeignKey``.\n\nExample app\n===========\n\nJust run the project from `example` directory, head to http://127.0.0.1:8000, login as ``admin``/``admin`` and try adding Cats!\n\nKnown issues\n============\n\n-  Not tested with empty fields.\n\nContributing\n============\n\nI’m looking forward to bug reports and any kind of contribution.\n\nLicense\n=======\n\nYou are free to use this where you want as long as you keep the author\nreference. Please see LICENSE for more info.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/and3rson/django-searchable-select",
    "keywords": "django",
    "license": "GPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-searchable-select",
    "package_url": "https://pypi.org/project/django-searchable-select/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-searchable-select/",
    "project_urls": {
      "Homepage": "https://github.com/and3rson/django-searchable-select"
    },
    "release_url": "https://pypi.org/project/django-searchable-select/1.4.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "django-searchable-select - a better and faster multiple selection widget with suggestions for Django",
    "version": "1.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3527763,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c47452c21e6343e890bf23107bfde08098d4fe7cc6fc1c6fb4a27bafc40613df",
        "md5": "61a8be3670fc03201c74c8d963e6fc19",
        "sha256": "95b7575c45387ba8bca9c7427a36f393fd4258cae58283d6d34c5f489e21c064"
      },
      "downloads": -1,
      "filename": "django-searchable-select-1.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "61a8be3670fc03201c74c8d963e6fc19",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58624,
      "upload_time": "2016-10-30T16:34:45",
      "upload_time_iso_8601": "2016-10-30T16:34:45.262702Z",
      "url": "https://files.pythonhosted.org/packages/c4/74/52c21e6343e890bf23107bfde08098d4fe7cc6fc1c6fb4a27bafc40613df/django-searchable-select-1.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}