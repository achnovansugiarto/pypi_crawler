{
  "info": {
    "author": "Lara Shores",
    "author_email": "lara.shores@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# matplotobjlib\n\nThis module is a wrapper for matplotlib, that enables creating plots in an easier declarative, more object-oriented\nformat.\n\nAll functions and types are importable directly from `matplotobjlib`. The easiest way to get started is with `matplotoblib.draw(...)`. This function takes either a single `Suplot` object or a 2d sequence of `Subplot`s where each inner sequence represents a row. Each `Subplot` consists of 1 or more `Plotable`s, the most useful being `Graph`.\n\n    # examples/sin.py\n\n    from matplotobjlib import draw, Graph, SubPlot\n    import numpy as np\n\n    xs = np.arange(-2*np.pi, 2*np.pi, 0.01)\n    ys = np.sin(xs)\n    draw(SubPlot(Graph(xs, ys, plot_type=\"-\"), x_label=\"x\", y_label=\"sin(x)\"), title=\"sin\")\n\n<img src=\"https://raw.githubusercontent.com/larashores/matplotobjlib/master/images/sin.png\" title=examples/sin.py width=\"600\">\n\n    # examples/trig.py\n\n    from matplotobjlib import draw, Graph, SubPlot\n    import numpy as np\n\n    xs = np.arange(-2*np.pi, 2*np.pi, 0.01)\n    draw(\n        [\n            [\n                SubPlot(Graph(xs, np.sin(xs), plot_type=\"-\"), x_label=\"x\", y_label=\"sin(x)\"),\n                SubPlot(Graph(xs, np.cos(xs), plot_type=\"-\"), x_label=\"x\", y_label=\"cos(x)\"),\n            ],\n            [\n                SubPlot(Graph(xs, np.tan(xs), plot_type=\"-\"), x_label=\"x\", y_label=\"tan(x)\"),\n                SubPlot(Graph(xs, np.arcsin(xs), plot_type=\"-\"), x_label=\"x\", y_label=\"sin$^{-1}$(x)\"),\n            ]\n        ],\n        title=\"Trigonometry\",\n    )\n\n<img src=\"https://raw.githubusercontent.com/larashores/matplotobjlib/master/images/trig.png\" title=examples/trig.py width=\"600\">\n\nAdditionally, for more control over the window, it can be accessed as a tkinter widget through `TkFigure`. The `draw(...)` function even uses this internally.\n\n    # examples/widget.py\n\n    import tkinter as tk\n    import numpy as np\n    from matplotobjlib import Graph, SubPlot, TkFigure\n\n    ts = np.arange(0, 10, 0.01)\n    xs = [t * np.cos(t) for t in ts]\n    ys = [t * np.sin(t) for t in ts]\n\n    root = tk.Tk()\n    widget = TkFigure(\n        root, [[SubPlot(Graph(xs, ys, plot_type=\"-\"), x_label=\"t*cos(t)\", y_label=\"t*sin(t)\")]], title=\"examples/widget.py\"\n    )\n    widget.pack(expand=tk.YES, fill=tk.BOTH)\n    root.mainloop()\n\n\n<img src=\"https://raw.githubusercontent.com/larashores/matplotobjlib/master/images/widget.png\" title=examples/widget.py width=\"600\">\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/larashores",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matplotobjlib",
    "package_url": "https://pypi.org/project/matplotobjlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/matplotobjlib/",
    "project_urls": {
      "Homepage": "https://github.com/larashores"
    },
    "release_url": "https://pypi.org/project/matplotobjlib/1.0.0/",
    "requires_dist": [
      "matplotlib",
      "pycertainties (==1.*,>=1.0.2)",
      "sympy"
    ],
    "requires_python": ">=3.4",
    "summary": "Declarative, objected-oriented interface to matplotlib",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8499549,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28c3c390e28b0d83d1faae5d590abb9f34387c331e258f79925a4e4a304de856",
        "md5": "45147e4abdb67cdc958a4f708ff183d5",
        "sha256": "51c2d8b85c9a6173a17e17f0f0aadb68f83ba0d6cd62a35e2b824247f61a413a"
      },
      "downloads": -1,
      "filename": "matplotobjlib-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45147e4abdb67cdc958a4f708ff183d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 11488,
      "upload_time": "2020-10-23T20:22:13",
      "upload_time_iso_8601": "2020-10-23T20:22:13.522791Z",
      "url": "https://files.pythonhosted.org/packages/28/c3/c390e28b0d83d1faae5d590abb9f34387c331e258f79925a4e4a304de856/matplotobjlib-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5083410c1d19cf1f543c1595d21a3e7d67c70fa9cd9138dde61f0fd11e232f29",
        "md5": "3ffa52948e544f9956dd1003b868bc7b",
        "sha256": "82e7680bc296dd1c2da08ef5e0d49a879a4b753d14389f390017a1e04c8e61a4"
      },
      "downloads": -1,
      "filename": "matplotobjlib-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ffa52948e544f9956dd1003b868bc7b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 9362,
      "upload_time": "2020-10-23T20:22:15",
      "upload_time_iso_8601": "2020-10-23T20:22:15.246788Z",
      "url": "https://files.pythonhosted.org/packages/50/83/410c1d19cf1f543c1595d21a3e7d67c70fa9cd9138dde61f0fd11e232f29/matplotobjlib-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}