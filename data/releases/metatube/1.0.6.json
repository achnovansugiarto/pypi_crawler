{
  "info": {
    "author": "Christoph Fink",
    "author_email": "christoph.fink@helsinki.fi",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Download YouTube metadata for videos relating to a search query\n\nThis is a Python script that can download metadata (including comments and likes) for YouTube videos relating to a search query. Uses the [YouTube Data API v3](https://developers.google.com/youtube/v3/docs). Metadata is saved in an `sqlalchemy` compatible database, for instance, PostgreSQL or SQLite.\n\n*Metatube* is conceived in a fashion that it pauses retrieval once your daily quota is used up (the default as of this writing is 10,000 requests per day) and waits until quota refill. If interrupted, *metatube* will, upon restart, first fill gaps in the download history, then continue downloading “into the future”. Once caught up to within ten minutes of the current time, *metatube* exits.\n\nIf you use *metatube* for scientific research, please cite it in your publication: <br />\nFink, C. (2020): *metatube: Python script to download YouTube metadata*. [doi:10.5281/zenodo.3773302](https://doi.org/10.5281/zenodo.3773302).\n\n\n### Dependencies\n\nThe script is written in Python 3 and depends on the Python modules [dateparser](https://dateparser.readthedocs.io/), [PyYaml](https://pyyaml.org/), [Requests](https://2.python-requests.org/en/master/), and [SQLAlchemy](https://sqlalchemy.org/).\n\nTo install dependencies on a Debian-based system, run:\n\n```shell\napt-get update -y &&\napt-get install -y python3-dev python3-pip python3-virtualenv\n```\n\n(There’s an Archlinux AUR package pulling in all dependencies, see further down)\n\n\n### Installation\n\n- *using `pip` or similar:*\n\n```shell\npip3 install metatube\n```\n\n- *OR: manually:*\n\n    - Clone this repository\n\n    ```shell\n    git clone https://gitlab.com/helics-lab/metatube.git\n    ```\n\n    - Change to the cloned directory    \n    - Use the Python `setuptools` to install the package:\n\n    ```shell\n    cd metatube\n    python3 ./setup.py install\n    ```\n\n- *OR: (Arch Linux only) from [AUR](https://aur.archlinux.org/packages/python-metatube):*\n\n```shell\n# e.g. using yay\nyay python-metatube\n```\n\n### Configuration\n\nCopy the example configuration file [metatube.yml.example](https://gitlab.com/helics-lab/metatube/-/raw/master/metatube.yml.example) to a suitable location, depending on your operating system: \n\n- on Linux systems:\n    - system-wide configuration: `/etc/metatube.yml`\n    - per-user configuration: \n        - `~/.config/metatube.yml` OR\n        - `${XDG_CONFIG_HOME}/metatube.yml`\n- on MacOS systems:\n    - per-user configuration:\n        - `${XDG_CONFIG_HOME}/metatube.yml`\n- on Microsoft Windows systems:\n    - per-user configuration:\n        `%APPDATA%\\metatube.yml`\n\nAdapt the configuration:\n\n- Configure a database connection string (`connection_string`), pointing to an existing database (the format is described in the [sqlalchemy documentation](https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls).\n- Configure an API [access key](https://developers.google.com/youtube/registering_an_application) to the YouTube Data API v3 (`youtube_api_key`).\n- Define search terms (`search_terms`)\n\nAll of these configuration options can alternatively be supplied as command line arguments to `metatube` (see [Usage](#command-line-executable)) or as a `config` `dict` directly to the constructor of `YouTubeVideoMetadataDownloader`. Command line options (see `metatube --help`) or `config` `dict` both override config file.\n\n### Usage\n\n#### Command line executable\n\n```shell\nmetatube \\\n    --postgresql-connection-string \"postgresql:///metatube\" \\\n    --youtube-api-key \"abcdefghijklmn\" \\\n    \"how to build a tallbike\"\n\n```\n\n#### Python\n\nImport the `metatube` module. Instantiate a `YouTubeVideoMetadataDownloader`, optionally supply a `config` dictionary. Then run the instance’s `download()` method.\n\n```python\nimport metatube\n\n# config from config file\ndownloader = YouTubeVideoDownloader()\ndownloader.download()\n\n# config from config file, \n# overriding `search_terms`\ndownloader = YouTubeVideoDownloader({\n    \"search_terms\": \"Critical Mass Vladivostok\"\n})\ndownloader.download()\n\n# entire config from dictionary\ndownloader = YouTubeVideoDownloader({\n    \"youtube_api_key\": \"opqrstuvwxyz\",\n    \"connection_string\": \"postgresql://server1/bicyclelover123:supersecretpassword@metatube\",\n    \"search_terms\": \"dashcam bicycle commute albuquerque\"\n})\ndownloader.download()\n\n```\n\n### Data privacy\n\nBy default, metatube pseudonymises downloaded metadata, i.e. it replaces (direct) identifiers with randomised identifiers (generated using hashes, i.e. one-way “encryption”). This serves as one step of a responsible data processing workflow. However, the text and descriptions of videos and comments might nevertheless qualify as *indirect identifiers*, as they, combined or on their own, might allow re-identification of the commenter or uploader. If you want to use data downloaded using metatube in a GDPR-compliant fashion, you have to follow up the data collection stage with *data minimisation* and further pseudonymisation or anonymisation efforts. \n\nMetatube can keep original identifiers (i.e. skip pseudonymisation). Set the according command line argument, configuration file or `config` `dict` (see the [sample config file](metatube.yml.example) and below). Ensure that you fulfil all legal and organisational requirements to handle personal information before you decide to collect non-pseudonyismed data.\n\n```python\nimport metatube\n\ndownloader = YouTubeVideoDownloader({\n    \"search_terms\": \"Winter Cycling Congress\",\n    \"pseudonymise\": False  # get legal/ethics advice before doing this\n})\ndownloader.download()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/christoph.fink/metatube",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metatube",
    "package_url": "https://pypi.org/project/metatube/",
    "platform": "",
    "project_url": "https://pypi.org/project/metatube/",
    "project_urls": {
      "Homepage": "https://gitlab.com/christoph.fink/metatube"
    },
    "release_url": "https://pypi.org/project/metatube/1.0.6/",
    "requires_dist": [
      "dateparser",
      "PyYAML",
      "requests",
      "SQLAlchemy (>=1.4.0b1)"
    ],
    "requires_python": "",
    "summary": "Download YouTube metadata for videos relating to a search query",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13057859,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0560edfeff7fba5fc6d5b786be90429004cafc6c5fbd964b664d4539ed89a29",
        "md5": "d9945d91b90cc3c205e24172473ae591",
        "sha256": "f6374fd2907fb3d78c7e3af88e5e3d674f5b416111923a99b97a6aa0ff21d89b"
      },
      "downloads": -1,
      "filename": "metatube-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9945d91b90cc3c205e24172473ae591",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 37839,
      "upload_time": "2021-01-11T15:18:39",
      "upload_time_iso_8601": "2021-01-11T15:18:39.835035Z",
      "url": "https://files.pythonhosted.org/packages/d0/56/0edfeff7fba5fc6d5b786be90429004cafc6c5fbd964b664d4539ed89a29/metatube-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "caeb62a06b3f4f82a556f2a181c699b6bdac2467b58ecd5f445a410f0847ff6e",
        "md5": "efed218a9c8e87ff018e9bc823c17e6d",
        "sha256": "7555acc2e02ba5fe0844de2d6bb8d7c686940fccb922afd628dc308f7197b386"
      },
      "downloads": -1,
      "filename": "metatube-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "efed218a9c8e87ff018e9bc823c17e6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16331,
      "upload_time": "2021-01-11T15:18:40",
      "upload_time_iso_8601": "2021-01-11T15:18:40.981240Z",
      "url": "https://files.pythonhosted.org/packages/ca/eb/62a06b3f4f82a556f2a181c699b6bdac2467b58ecd5f445a410f0847ff6e/metatube-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}