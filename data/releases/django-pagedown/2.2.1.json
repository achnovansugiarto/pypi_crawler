{
  "info": {
    "author": "Timmy O'Mahony",
    "author_email": "hey@timmyomahony.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Editors"
    ],
    "description": "Django Pagedown\n===============\n\nAdd [Stack Overflow&#39;s &quot;Pagedown&quot; Markdown editor](https://github.com/StackExchange/pagedown/) to your Django Admin or custom form.\n\n![Screenshot of Django Admin with Pagedown initialised](https://github.com/timmyomahony/django-pagedown/blob/master/screenshot.png?raw=true \"A screenshot of Pagedown in Django's admin\")\n\n## Requirements\n\nVersion >= 2.0.0 of `django-pagedown` requires Django 2.1.0 or above (previous versions should support Django all the way back to around 1.1).\n\n## Installation\n\n1. Get the code: `pip install django-pagedown`\n2. Add `pagedown.apps.PagedownConfig` to your `INSTALLED_APPS` in `settings.py`\n3. [Configure and collect](https://docs.djangoproject.com/en/dev/howto/static-files/#configuring-static-files) the static files: `python manage.py collectstatic`\n\n## Usage\n\nThe widget can be used both inside the django admin or independendly. \n\n### Inside the Django Admin:\n\nIf you want to use the pagedown editor in a django admin field, there are numerous possible approaches:\n\n- To use it in **all** `TextField`'s in your admin form:\n\n    ```python\n    from django.contrib import admin\n    from django.db import models\n\n    from pagedown.widgets import AdminPagedownWidget\n\n\n    class AlbumAdmin(admin.ModelAdmin):\n        formfield_overrides = {\n            models.TextField: {'widget': AdminPagedownWidget },\n        }\n    ```\n- To only use it on **particular fields**, first create a form (in `forms.py`):\n\n    ```python\n    from django import forms\n\n    from pagedown.widgets import AdminPagedownWidget\n\n    from music.models import Album\n\n    class AlbumForm(forms.ModelForm):\n        name = forms.CharField(widget=AdminPagedownWidget())\n        description = forms.CharField(widget=AdminPagedownWidget())\n\n        class Meta:\n            model = Album\n            fields = \"__all__\"\n    ```\n\n    and in your `admin.py`:\n\n    ```python\n    from django.contrib import admin\n\n    from forms import FooModelForm\n    from models import FooModel\n\n    @admin.register(FooModel)\n    class FooModelAdmin(admin.ModelAdmin):\n        form = FooModelForm\n        fields = \"__all__\"\n    ```\n\n### Outside the Django Admin:\n\nTo use the widget outside of the django admin, first create a form similar to the above but using the basic `PagedownWidget`:\n\n```python\nfrom django import forms\n\nfrom pagedown.widgets import PagedownWidget\n\nfrom music.models import Album\n\n\nclass AlbumForm(forms.ModelForm):\n    name = forms.CharField(widget=PagedownWidget())\n    description = forms.CharField(widget=PagedownWidget())\n\n    class Meta:\n        model = Album\n        fields = [\"name\", \"description\"]\n```\n\nThen define your urls/views:\n\n```py\nfrom django.views.generic import FormView\nfrom django.conf.urls import patterns, url\n\nfrom music.forms import AlbumForm\n\nurlpatterns = patterns('',\n    url(r'^$', FormView.as_view(template_name=\"baz.html\",\n                                form_class=AlbumForm)),)\n```\n\nthen create the template and load the javascipt and css required to create the editor:\n\n```html\n<html>\n    <head>\n        {{ form.media }}\n    </head>\n    <body>\n        <form ...>\n            {{ form }}\n        </form>\n    </body>\n</html>\n```\n\n## Customizing the Widget\n\nIf you want to customize the widget, the easiest way is to simply extend it:\n\n```py\nfrom pagedown.widgets import PagedownWidget\n\n\nclass MyNewWidget(PagedownWidget):\n    template_name = '/custom/template.html'\n\n    class Media:\n        css = {\n            'all': ('custom/stylesheets.css',)\n        }\n        js = ('custom/javascript.js',)\n```\n\n\n## Rendering Markdown\n\n`contrib.markdown` was [deprecated in Django 1.5](https://code.djangoproject.com/ticket/18054) meaning you can no longer use the `markdown` filter in your template by default.\n\n[@wkcd has a good example](https://github.com/timmyomahony/django-pagedown/issues/18#issuecomment-37535535) of how to overcome by installing `django-markdown-deux`:\n\n```py\n{% extends 'base.html' %}\n{% load markdown_deux_tags %}\n\n...\n<p>{{ entry.body|markdown }}</p>\n...\n```\n\n## Image Uploads\n\nYou can enable image uploads, allowing your users to upload new images to the server and have them automatically inserted into the Pagedown widget (instead of just adding image URLs):\n\n![Screenshot of Django Admin with image upload enabled](https://github.com/timmyomahony/django-pagedown/blob/develop/image-upload.png?raw=true \"Screenshot of Django Admin with image upload enabled\")\n\nTo do so:\n\n1. Make sure you have set a `MEDIA_URL` and `MEDIA_ROOT` so that uploads will be propertly saved\n2. Add `PAGEDOWN_IMAGE_UPLOAD_ENABLED=True` to your settings\n3. Include the pagedown paths in your `urls.py` so that the upload endpoint is available\n\n```py\n # ...\n urlpatterns = [\n     path('', include('pagedown.urls')),\n     # ...\n ]\n```\n\nThis will add the URL `/pagedown/image-upload/` endpoint to your project. You can [see the default view that handles the upload here](https://github.com/timmyomahony/django-pagedown/blob/develop/pagedown/views.py)\n\nThe following options are available via your settings to tweak how the image upload works:\n\n- `PAGEDOWN_IMAGE_UPLOAD_PATH` can be used to change the path within your media root (default is `pagedown-uploads`)\n- `PAGEDOWN_IMAGE_UPLOAD_EXTENSIONS` can be used to limit the extensions allowed for upload (default is `jpg`, `jpeg`, `png`, `webp`)\n- `PAGEDOWN_IMAGE_UPLOAD_UNIQUE` can be used to ensure all uploads are stored in a uniquely named subfolder, e.g. `f748e009-c3cb-40f3-abf2-d103ab0ad259/my-file.png` (default is `False`)\n\nCheck out the `pagedown_init.js` script to [see how the upload is being performed on the client side](https://github.com/timmyomahony/django-pagedown/blob/develop/pagedown/static/pagedown_init.js).\n\n## Example\n\nYou can see a fully-fledged example of the widget in [`django-pagedown-example`](https://github.com/timmyomahony/django-pagedown-example)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/timmyomahony/django-pagedown",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pagedown",
    "package_url": "https://pypi.org/project/django-pagedown/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-pagedown/",
    "project_urls": {
      "Homepage": "https://github.com/timmyomahony/django-pagedown"
    },
    "release_url": "https://pypi.org/project/django-pagedown/2.2.1/",
    "requires_dist": [
      "Django (>=2.1)",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "A Django app that allows the easy addition of Stack Overflow's 'PageDown' markdown editor to a django form field",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11053480,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2dfd58ab4412d47f9516a9d22976a1ee17ce85f48d8e2a4eeb6fd0331f701b7",
        "md5": "6ce5e0a91aefdc1a78e4254d3b267059",
        "sha256": "9b4204d65334d0add1d3daf2533d91f96b62a11fe89c5e2ca93a31fbd4b38aeb"
      },
      "downloads": -1,
      "filename": "django_pagedown-2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ce5e0a91aefdc1a78e4254d3b267059",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 92955,
      "upload_time": "2021-07-30T19:50:53",
      "upload_time_iso_8601": "2021-07-30T19:50:53.503712Z",
      "url": "https://files.pythonhosted.org/packages/c2/df/d58ab4412d47f9516a9d22976a1ee17ce85f48d8e2a4eeb6fd0331f701b7/django_pagedown-2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c57f2f12e1ac2a50ba7d2a82ca10efd2c127345bb93af68d65b1b9808b257f29",
        "md5": "6e30653cc78e9e4a6bae37089dd7f0eb",
        "sha256": "2e6373a3f1ec1886ec0bdd16a0db1d5f5d14437a0fdddefa7fba905cef50d6e8"
      },
      "downloads": -1,
      "filename": "django-pagedown-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6e30653cc78e9e4a6bae37089dd7f0eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 88081,
      "upload_time": "2021-07-30T19:50:54",
      "upload_time_iso_8601": "2021-07-30T19:50:54.954745Z",
      "url": "https://files.pythonhosted.org/packages/c5/7f/2f12e1ac2a50ba7d2a82ca10efd2c127345bb93af68d65b1b9808b257f29/django-pagedown-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}