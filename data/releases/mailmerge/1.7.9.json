{
  "info": {
    "author": "Andrew DeOrio",
    "author_email": "awdeorio@umich.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# mailmerge\nA simple, command line mail merge tool.\n\nAndrew DeOrio <awdeorio@umich.edu><br>\nhttp://andrewdeorio.com<br>\n\n`mailmerge` uses plain text files and the powerful [jinja2 template engine](http://jinja.pocoo.org/docs/latest/templates/).\n\n# Quickstart\n`mailmerge` will guide you through the process.  Don't worry, it won't send real emails by default.\n```shellsession\n$ pip install mailmerge\n$ mailmerge\n```\nIf you get a `Permission denied` error, use `sudo pip install mailmerge` or `virtualenv venv && source venv/bin/activate && pip install mailmerge`\n\n# Example\nThis example will walk you through the steps for creating a template email, database and STMP server configuration.  Then, it will show how to test it before sending real emails.\n\n### Create a sample template email, database, and config\n```shellsession\n$ mailmerge --sample\nCreating sample template email mailmerge_template.txt\nCreating sample database mailmerge_database.csv\nCreating sample config file mailmerge_server.conf\nEdit these files, and then run mailmerge again\n```\n\n### Edit the SMTP server config `mailmerge_server.conf`\nThe defaults are set up for gmail.  Be sure to change your username.  If you use 2-factor authentication, you may need to set up a one-time password for use by an app.  `mailmerge` will give an error with a URL to the right GMail support page.  Other configuration examples are in the comments of `mailmerge_server.conf`.\n```\n[smtp_server]\nhost = smtp.gmail.com\nport = 465\nsecurity = SSL/TLS\nusername = YOUR_USERNAME_HERE\n```\n\n### Edit the template email message `mailmerge_template.txt`\nThe `TO`, `SUBJECT`, and `FROM` fields are required.  The remainder is the body of the message.  Use `{{ }}` to indicate customized parameters that will be read from the database.  For example, `{{email}}` will be filled in from the `email` column of `mailmerge_database.csv`.\n```\nTO: {{email}}\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, {{name}},\n\nYour number is {{number}}.\n```\n\n### Edit the database `mailmerge_database.csv`\nNotice that the first line is a header that matches the parameters in the template example, for example, `{{email}}`.\n\n**Pro-tip**: Add yourself as the first recipient.  This is helpful for testing.\n```\nemail,name,number\nmyself@mydomain.com,\"Myself\",17\nbob@bobdomain.com,\"Bob\",42\n```\n\n### Dry run\nFirst, dry run one email message.  This will fill in the template fields of the first email message and print it to the terminal.\n```shellsession\n$ mailmerge --dry-run --limit 1\n>>> message 0\nTO: myself@mydomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Myself,\n\nYour number is 17.\n\n>>> sent message 0 DRY RUN\n>>> Limit was 1 messages.  To remove the limit, use the --no-limit option.\n>>> This was a dry run.  To send messages, use the --no-dry-run option.\n```\n\nIf this looks correct, try a second dry run, this time with all recipients using the `--no-limit` option.\n```shellsession\n$ mailmerge --dry-run --no-limit\n>>> message 0\nTO: myself@mydomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Myself,\n\nYour number is 17.\n\n>>> sent message 0 DRY RUN\n>>> message 1\nTO: bob@bobdomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Bob,\n\nYour number is 42.\n\n>>> sent message 1 DRY RUN\n>>> This was a dry run.  To send messages, use the --no-dry-run option.\n```\n\n### Send first email\nWe're being extra careful in this example to avoid sending spam, so next we'll send *only one real email*.  Recall that you added yourself as the first email recipient.\n```shellsession\n$ mailmerge --no-dry-run --limit 1\n>>> message 0\nTO: myself@mydomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Myself,\n\nYour number is 17.\n\n>>> sent message 0\n>>> Limit was 1 messages.  To remove the limit, use the --no-limit option.\n```\n\nNow, check your email make sure the message went through.  If everything looks OK, then it's time to send all the messages.\n\n### Send all emails\n```shellsession\n$ mailmerge --no-dry-run --no-limit\n>>> message 0\nTO: myself@mydomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Myself,\n\nYour number is 17.\n\n>>> sent message 0\n>>> message 1\nTO: bob@bobdomain.com\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\n\nHi, Bob,\n\nYour number is 42.\n\n>>> sent message 1\n```\n\n# A more complicated example\nThis example will send progress reports to students.  The template uses more of the advanced features of the [jinja2 template engine documentation](http://jinja.pocoo.org/docs/latest/templates/) to customize messages to students.\n\n**progress_report_template.txt**\n```\nTO: {{email}}\nSUBJECT: EECS 280 Mid-semester Progress Report\nFROM: My Self <myself@mydomain.com>\n\nDear {{name}},\n\nThis email contains our record of your grades EECS 280, as well as an estimated letter grade.\n\nProject 1: {{p1}}\nProject 2: {{p2}}\nProject 3: {{p3}}\nMidterm exam: {{midterm}}\n\nAt this time, your estimated letter grade is {{grade}}.\n\n{% if grade == \"C-\" -%}\nI am concerned that if the current trend in your scores continues, you will be on the border of the pass/fail line.\n\nI have a few suggestions for the rest of the semester.  First, it is absolutely imperative that you turn in all assignments.  Attend lecture and discussion sections.  Get started early on the programming assignments and ask for help.  Finally, plan a strategy to help you prepare well for the final exam.\n\nThe good news is that we have completed about half of the course grade, so there is an opportunity to fix this problem.  The other professors and I are happy to discuss strategies together during office hours.\n{% elif grade in [\"D+\", \"D\", \"D-\", \"E\", \"F\"] -%}\nI am writing because I am concerned about your grade in EECS 280.  My concern is that if the current trend in your scores continues, you will not pass the course.\n\nIf you plan to continue in the course, I urge you to see your instructor in office hours to discuss a plan for the remainder of the semester.  Otherwise, if you plan to drop the course, please see your academic advisor.\n{% endif -%}\n```\n\n**progress_report_database.csv**\nAgain, we'll use the best practice of making yourself the first recipient, which is helpful for testing.\n```\nemail,name,p1,p2,p3,midterm,grade\nmyself@mydomain.com,\"My Self\",100,100,100,100,A+\nborderline@fixme.com,\"Borderline Name\",50,50,50,50,C-\nfailing@fixme.com,\"Failing Name\",0,0,0,0,F\n```\n\n**Dry run one message**<br>\nTest one message without actually sending any email.\n```shellsession\n$ mailmerge --template progress_report_template.txt --database progress_report_database.csv \n>>> message 0\nTO: myself@mydomain.com\nSUBJECT: EECS 280 Mid-semester Progress Report\nFROM: My Self <myself@mydomain.com>\n\nDear My Self,\n\nThis email contains our record of your grades EECS 280, as well as an estimated letter grade.\n\nProject 1: 100\nProject 2: 100\nProject 3: 100\nMidterm exam: 100\n\nAt this time, your estimated letter grade is A+.\n\n\n>>> sent message 0 DRY RUN\n>>> Limit was 1 messages.  To remove the limit, use the --no-limit option.\n>>> This was a dry run.  To send messages, use the --no-dry-run option.\n```\n\n# HTML formatting example\nThis example will use HTML to format an email.  Add `Content-Type: text/html` just under the email headers, then begin your message with `<html>`.\n\n**mailmerge_template.txt**\n```\nTO: {{email}}\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\nContent-Type: text/html\n\n<html>\n<body>\n\n<p>Hi, {{name}},</p>\n\n<p>Your number is {{number}}.</p>\n\n<p>Sent by <a href=\"https://github.com/awdeorio/mailmerge\">mailmerge</a></p>\n\n</body>\n</html>\n```\n\n\n# HTML and plain text formatting example\nThis example shows how to provide both HTML and plain text versions in the same message.  A user's mail reader can select either one.\n\n**mailmerge_template.txt**\n```\nTO: {{email}}\nSUBJECT: Testing mailmerge\nFROM: My Self <myself@mydomain.com>\nMIME-Version: 1.0\nContent-Type: multipart/alternative; boundary=\"outer-boundary\"\n\nThis is a MIME-encoded message. If you are seeing this, your mail\nreader is old.\n\n--outer-boundary\nContent-Type: text/plain; charset=us-ascii\n\nHi, {{name}},\n\nYour number is {{number}}.\n\nSent by mailmerge https://github.com/awdeorio/mailmerge\n\n--outer-boundary\nMIME-Version: 1.0\nContent-Type: multipart/related;\n  type=\"text/html\"; start=\"<body@here>\"; boundary=\"inner-boundary\"\n\n--inner-boundary\nContent-Type: text/html; charset=us-ascii\nContent-Disposition: inline\nContent-ID: <body@here>\n\n<html>\n<body>\n\n<p>Hi, {{name}},</p>\n\n<p>Your number is {{number}}.</p>\n\n<p>Sent by <a href=\"https://github.com/awdeorio/mailmerge\">mailmerge</a></p>\n\n</body>\n</html>\n```\n\n# Hacking\nSet up a development environment.  This will install a `mailmerge` executable in virtual environment's `PATH` which points to the local python development source code.\n```shellsession\n$ python3 -m venv env  # or \"virtualenv env\" for python2\n$ source env/bin/activate\n$ pip install --editable .\n```\n\nTest code style and run unit tests\n```shellsession\n$ ./bin/test-style\nPASS style tests\n$ ./bin/test-functional\nPASS functional tests\n```\n\nTest python2/python3 compatibility.  This will automatically create two virtual environments and run all style and functional tests in each environment.\n```shellsession\n$ ./bin/test_python2_python3\nPASS\n```\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/awdeorio/mailmerge/",
    "keywords": "mail merge",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mailmerge",
    "package_url": "https://pypi.org/project/mailmerge/",
    "platform": "",
    "project_url": "https://pypi.org/project/mailmerge/",
    "project_urls": {
      "Homepage": "https://github.com/awdeorio/mailmerge/"
    },
    "release_url": "https://pypi.org/project/mailmerge/1.7.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple, command line mail merge tool",
    "version": "1.7.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11665620,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb8708828ac154993261b0b16171959d8df067d60c2cd600de5284375f59dd6a",
        "md5": "210ec73295f7a4b2d1dd2aef1e8fa153",
        "sha256": "0724901a5ae7d02cd0b22e3c2434165b75aaa7b80875de2a48c3fbb555fb9481"
      },
      "downloads": -1,
      "filename": "mailmerge-1.7.9.tar.gz",
      "has_sig": false,
      "md5_digest": "210ec73295f7a4b2d1dd2aef1e8fa153",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16818,
      "upload_time": "2018-09-21T18:39:58",
      "upload_time_iso_8601": "2018-09-21T18:39:58.977875Z",
      "url": "https://files.pythonhosted.org/packages/eb/87/08828ac154993261b0b16171959d8df067d60c2cd600de5284375f59dd6a/mailmerge-1.7.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}