{
  "info": {
    "author": "Daniel Quinn",
    "author_email": "code@danielquinn.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-markers\n\nA dynamic map marker generator using template images and arbitrary text.\n\n\n## Why\n\nSometimes you need to use a lot of markers on a map, many of which are similar,\nbut slightly different, using text labels, or even different colours or\nopacities.  This will do that for you.\n\nTheoretically, you could also use it to caption memes, but I think there's\nother stuff out there for that sort of thing.\n\n\n## How\n\nYou can reference the markers in three ways: using a django template tag, via\nURL parameters, or in Python, by using the `Marker` class.  The preferred\nmethod is the template tag, and I don't recommend using direct URL requests,\nsince it requires a hit to your application server every time.\n\n### Using a Template Tag:\n\nThis will generate a media URL pointing to a newly-created marker based on a\n`template.png`, with the text `42`, positioned `3` pixels right, and `3` pixels\ndown from the upper left corner of the template, with an opacity of `50%`, a\nhue-shift of `105`, and using the hex colour `#333333` for the text.  All of the\narguments, save for the first, are optional:\n\n```django\n{% load markers %}\n{% marker 'path/to/template.png' text='42' text_x=3 text_y=3 opacity=0.5 hue=105 text_colour='333333' %}\n```\n\nTypically, you'll use this in your template to assign marker paths to some\njavascript variables:\n\n```django\n<script>\n  var marker1 = \"{% marker 'path/to/template.png' text='1' %}\";\n  var marker2 = \"{% marker 'path/to/template.png' text='3' hue=105 %}\";\n</script>\n```\n\nAfter you have the URLs in your Javascript, you can do whatever you like with\nthem, they're just URLs to existing static files.\n\n\n### Using Direct Links\n\nThe same arguments passed to the template tag can be passed in a URL:\n\n    https://localhost:8000/markers/path/to/template.png?text=42&opacity=0.5&text_x=3&text_y=3&text_colour=333333&hue=105\n\n\n### Using the Python Model\n\nMarker generation is as easy as instantiating a model:\n\n```python\nfrom markers.models import Marker\n\nmymarker = Marker(\n    \"path/to/template.png\",\n    text=\"42\",\n    opacity=0.5,\n    text_x=3,\n    text_y=3,\n    text_colour=\"333333\",\n    hue=105\n)\n```\n\n### The Templates\n\nThe template path you pass to `django-markers`, must be part of one of your\napps, and referenced as such.  So for example, if you have a template living in\n`mapping/static/mapping/img/markers/mytemplate.png`, the argument you're\nlooking for is: `mapping/img/markers/mytemplate.png`.\n\nIf you're calling the URL directly, then you'll append this path to the URL\nlike so:\n\n    https://localhost:8000/markers/mapping/img/markers/mytemplate.png?hue=105&opacity=0.8\n\n\n### A Note on Text Positioning\n\nBy default, we try to centre text along the x/y axis, so if that's your\nintention, don't specify either.  Specifying an `x` value without a `y` one\nwill assume `y` to be centred and vice versa.\n\n\n### A Note on Template Images\n\nYou can use whatever image you like for your templates, but since the\nhue-shifting starts at red (0), and progresses through the spectrum to red\nagain at 360, you'd do well to use a redish image as your template.\nOtherwise, requests that dont' specify a `hue` will look out of step with ones\nthat have `hue` set to `1`.\n\n\n\n## Installation\n\nYou can install it from pypi using `pip`:\n\n```bash\n$ pip install django-markers\n```\n\nOr you can install it from GitHub:\n\n```bash\n$ pip install git+https://github.com/danielquinn/django-markers.git#egg=django-markers\n```\n\nThen in your `settings.py`:\n\n```python\nINSTALLED_APPS = (\n    ...\n    \"markers\",\n)\n```\n\nAnd if you want to make use of the direct URL requests, you'll need to add this\nto your `urls.py`:\n\n```python\nurl(r\"^some/arbitrary/path/\", include(\"markers.urls\")),\n```\n\nSo for example, you would have something like this in your `urls.py`:\n\n```python\nurl(r\"^mapping/markers/\", include(\"markers.urls\")),\n```\n\n\n### Requirements\n\nWe're doing image processing here, so `PIL` is required.  You should probably\nuse `Pillow` though, since that's what this was developed against.\nAdditionally, `numpy` is required to handle the hue-shifting.  Both will\ninstall automatically if you follow the installation instructions above.\n\nIn addition to these Python dependencies, Django 1.6+ is required if you\nintend to make use of the on-the-fly generation via calling a specifric URL.\n\n\n## Licensing\n\nThe whole project is licesned under the GPL-3, but the default font used is\nlicensed under Apache 2.0.  Both licenses are available under `COPYING/`.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/danielquinn/django-markers",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danielquinn/django-markers",
    "keywords": null,
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-markers",
    "package_url": "https://pypi.org/project/django-markers/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-markers/",
    "project_urls": {
      "Download": "https://github.com/danielquinn/django-markers",
      "Homepage": "https://github.com/danielquinn/django-markers"
    },
    "release_url": "https://pypi.org/project/django-markers/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Dynamic map marker generation using template images and arbitrary text",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16184887,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de013d7433e506a6934c643adc90d4e0c895dede3b88484b2b5071fde4dceff5",
        "md5": "af1d68aaa67a5258d41bbae4cb2efb05",
        "sha256": "e3d8724d159b719c4b725b5bbbe76af15c7501e8db08173717b740e1ddf7b12c"
      },
      "downloads": -1,
      "filename": "django-markers-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "af1d68aaa67a5258d41bbae4cb2efb05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 131451,
      "upload_time": "2015-11-11T13:01:52",
      "upload_time_iso_8601": "2015-11-11T13:01:52.159571Z",
      "url": "https://files.pythonhosted.org/packages/de/01/3d7433e506a6934c643adc90d4e0c895dede3b88484b2b5071fde4dceff5/django-markers-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}