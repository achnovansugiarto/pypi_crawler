{
  "info": {
    "author": "Jani Kajala",
    "author_email": "kajala@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "django-jutil\n============\n\nCollection of small utilities for Django and Django REST framework projects.\n\nFeatures\n========\n\n* Simplified admin changes history logging (admin_log)\n* ModelAdmin with length limited history view (ModelAdminBase)\n* Simplified object URL/link generation within admin (admin_obj_link and admin_obj_url)\n* Extended admin log mixin of changed fields (AdminLogEntryMixin)\n* Admin file download mixin with file permission checks (AdminFileDownloadMixin)\n* User authentication helpers (require_auth, AuthUserMixin)\n* Mixin for cached model fields management (CachedFieldsMixin)\n* BaseCommand extension which catches, logs and emails errors (SafeCommand)\n* Command options for simplified handling of date ranges (add_date_range_arguments, parse_date_range_arguments)\n* Various utilities for date ranges generation and iteration (dates.py)\n* Utilities for dict sorting and formatting, choices list label fetching (dict.py)\n* Simplified email sending via SendGrid API (send_email)\n* Various formatting utilities (e.g. XML, timedelta, Decimal)\n* Decimal encoder for encoding JSON objects/dictionaries containing Decimal instances (SimpleDecimalEncoder)\n* Django middleware for exception logging/emailing (LogExceptionMiddleware)\n* Django middleware for language cookie handling (EnsureLanguageCookieMiddleware)\n* Django middleware for user.profile.timezone based timezone activation\n* Utilities or Django Model handling (e.g. clone_model, get_object_or_none)\n* Utilities for parsing booleans and datetime values (using pytz)\n* Simple user field based permission checking for REST APIs (permissions.py)\n* Geo IP / IP info functions using IPStack API (request.py)\n* Download responses (FileSystemFileResponse and CsvFileResponse)\n* Simple SMS sending (send_sms)\n* Mixin for basic test user setup (DefaultTestSetupMixin)\n* Pretty good unit test coverage (tests.py)\n* URL modifying/comparison functions (urls.py)\n* Validators and filters for various types (validators.py)\n* XML Element to/from dict conversions (dict_to_element, xml_to_dict)\n* XML file/content pretty formatting (format_xml, format_xml_bytes, format_xml_file, FormattedXmlResponse)\n\nInstall\n=======\n\npip install django-jutil\n\n\nChanges\n=======\n\n2.3.2:\n+ Prospector clean & checked when making new release\n\n2.3.1:\n+ Cleanup related to prospector results (https://pypi.org/project/prospector/)\n\n2.2.42:\n+ ElementTree usage cleanup\n\n2.2.38:\n+ Added FormattedXmlResponse\n\n2.2.37:\n+ Added format_xml_bytes\n\n2.2.35:\n+ Some clearing code fixes for Sweden\n\n2.2.31:\n+ Added various sanitizer-functions where simple validation is too strict\n\n2.2.25:\n+ Added fi_ssn_generator (fake/test Finnish social security numbers)\n\n2.2.22:\n+ Some localization improvements\n\n2.2.17:\n+ Added format_xml_file, format_xml\n\n2.2.14:\n+ More unit tests\n\n2.2.12:\n+ Added admin_obj_link and admin_obj_url\n\n2.2.11:\n+ Sweden bank info fixes\n\n2.2.8:\n+ Denmark bank info\n\n2.2.7:\n+ More unit tests\n\n2.2.6:\n+ IBAN validation of more or less all IBAN countries\n\n2.2.5:\n+ Belgium IBAN validator\n\n2.2.3:\n+ ElementTree import cleanup (thanks to https://github.com/kutera)\n\n2.2.0:\n+ Belgium IBAN validation support (thanks to https://github.com/kutera)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kajala/django-jutil",
    "keywords": "",
    "license": "MIT licence, see LICENCE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jutil",
    "package_url": "https://pypi.org/project/django-jutil/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-jutil/",
    "project_urls": {
      "Homepage": "https://github.com/kajala/django-jutil"
    },
    "release_url": "https://pypi.org/project/django-jutil/2.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Collection of small utilities for Django and Django REST framework projects",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17044216,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92a0a3ec884541fcf06553071d0846e7dd02829458081bad4c502cb8d10c8256",
        "md5": "596f65eaecba177140b61fc535019390",
        "sha256": "bdf1241a7879657f0568dee9394b04bc28710932c73d0f704f35d04b4479e0d4"
      },
      "downloads": -1,
      "filename": "django-jutil-2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "596f65eaecba177140b61fc535019390",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 90262,
      "upload_time": "2020-02-08T14:29:28",
      "upload_time_iso_8601": "2020-02-08T14:29:28.016201Z",
      "url": "https://files.pythonhosted.org/packages/92/a0/a3ec884541fcf06553071d0846e7dd02829458081bad4c502cb8d10c8256/django-jutil-2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}