{
  "info": {
    "author": "Gabriele Giaccari, Gabriele Lucci, Guglielmo Celata, Paolo Melchiorre",
    "author_email": "info@openpolis.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Django uWSGI Taskmanager\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\nDjango application to manage async tasks via admin interface, using uWSGI spooler.\n\n## Features\n\n- Start and stop your tasks via admin\n- Schedule tasks\n- Plan tasks as cron items\n- Check or download the generated reports/logs\n- Simply write a standard Django Command class (your app doesn't need to interact with Django uWSGI Taskmanager)\n\n## Installation\n\n0.  Pip install the app:\n\n    -  via pypi:\n\n       `pip install django-uwsgi-taskmanager`\n\n    -  or via github:\n\n       `pip install git+https://github.com/openpolis/django-uwsgi-taskmanager.git`\n\n1.  Add \"taskmanager\" to your `INSTALLED_APPS` setting like this:\n\n    ```python\n    INSTALLED_APPS = [\n        \"django.contrib.admin\",\n        # ...\n        \"taskmanager\",\n    ]\n    ```\n\n2. Run `python manage.py migrate` to create the taskmanager tables.\n\n3. Run `python manage.py collectcommands` to create taskmanager commands.\n\n4. Include the taskmanager URLconf in your project `urls.py` like this _(optional)_:\n\n    ```python\n    from django.contrib import admin\n    from django.urls import include, path\n\n    urlpatterns = [\n        path(\"admin/\", admin.site.urls),\n        path(\"taskmanager/\", include(\"taskmanager.urls\")),\n    ]\n    ```\n\n5. Set parameters in your settings file as below _(optional)_:\n\n    ```\n    TASK_MANAGER_N_LINES_IN_REPORT_INLINE = 10\n    TASK_MANAGER_N_REPORTS_INLINE = 3\n    TASK_MANAGER_SHOW_LOGVIEWER_LINK = True\n    TASK_MANAGER_USE_FILTER_COLLAPSE = True\n    TASK_MANAGER_SAVE_LOGFILE = False\n    ```\n\n## Usage\n\nYou just need to install `django-uwsgi-taskmanager` in your Django Project and run `collectcommands` as described.\nDjango uWSGI Taskmanager will collect all the commands and make them available for asynchronous scheduling in the admin.\n\nIf you need a new asynchronous task, just write a standard custom Django command, and synchronize the app. Then go to the admin page and schedule it.\n\nYou can disable some commands from the admin, and let users (with limited permissions) schedule only the available ones.\n\nuWSGI ini file (vassal) has to include the [spooler](https://uwsgi-docs.readthedocs.io/en/latest/Spooler.html) and [pythonpath](https://uwsgi-docs.readthedocs.io/en/latest/PythonDecorators.html) option.\n\n> **NOTE**: remember to manually create the `spooler` directory with right permissions before start uWSGI\n\n### Demo\n\nThis a basic Django demo project with a `uwsgi.ini` file and four directories (`media`, `spooler`, `static`, `venv`).\n\n```bash\ndemo/\n├── demo/\n│   ├── __init__.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n├── manage.py\n├── media/\n├── spooler/\n├── static/\n├── uwsgi.ini\n└── venv/\n```\n\nThis is the content of `uwsgi.ini` file required to execute the project with Django:\n\n```ini\n[uwsgi]\nchdir = %d\nenv = DJANGO_SETTINGS_MODULE=demo.settings\nhttp-socket = :8000\nmaster = true\nmodule = demo.wsgi\nplugin = python3\npythonpath = %d\nspooler = %dspooler\nstatic-map = /static/=%dstatic\nvirtualenv = %dvenv\n```\n\n#### Try the demo project\n\nEnter the demo directory, then create and activate the demo virtual environments:\n\n```bash\n$ cd demo\n$ mkdir -p venv\n$ python3 -m venv ./venv\n$ source ./venv/bin/activate\n```\n\nInstall Django uWSGI taskmanager:\n\n```bash\n(venv) $ pip install django-uwsgi-taskmanager\n```\n\nInstall uWSGI (if you use uWSGI of your OS you can skip this step):\n\n```bash\n(venv) $ pip install uwsgi\n```\n\nCollect all static files:\n\n```bash\n(venv) $ python manage.py collectstatic\n```\n\nCreate all the tables:\n\n```bash\n(venv) $ python manage.py migrate\n```\n\nCollect all commands:\n\n```bash\n(venv) $ python manage.py collectcommands\n```\n\nCreate a super user to login the admin:\n\n```bash\n(venv) $ python manage.py createsuperuser\n```\n\nStart the project with uWSGI:\n\n```bash\n(venv) $ uwsgi --ini uwsgi.ini\n```\n\nVisit http://127.0.0.1:8000/admin/\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [1.0.1] - 2019-07-13\n\n### Changed\n\n- Rename `collect_commands` to `collectcommands`\n- Add missings setps in `README.md`\n\n### Fixed\n\n- Fix version 1.0.0 release date in `CHANGELOG.md`\n- Add missing `__init__.py` in migrations directory\n- Add missing `STATIC_ROOT` in demo settings\n- Add missing media directory and settings\n- Fix convert to local datetime function\n- Update and complete `setup.py`\n\n## [1.0.0] - 2019-07-12\n\n### Added\n\n- First release\n\n[Unreleased]: https://github.com/openpolis/django-uwsgi-taskmanager/compare/v1.0.1...master\n[1.0.1]: https://github.com/openpolis/django-uwsgi-taskmanager/releases/v1.0.0...v1.0.1\n[1.0.0]: https://github.com/openpolis/django-uwsgi-taskmanager/releases/tag/v1.0.0\n\n# Authors\n\n* Gabriele Giaccari ([@gabbork](https://github.com/gabbork))\n* Gabriele Lucci ([@gabrielelucci](https://github.com/gabrielelucci))\n* Guglielmo Celata ([@guglielmo](https://github.com/guglielmo))\n* Paolo Melchiorre ([@pauloxnet](https://github.com/pauloxnet))\n\n# License\n\n**Django uWSGI taskmanager** is an application to manage async tasks via admin interface, using uWSGI spooler.\n\nCopyright (C) 2019  Gabriele Giaccari, Gabriele Lucci, Guglielmo Celata, Paolo Melchiorre\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openpolis/django-uwsgi-taskmanager.git",
    "keywords": "async,cron,django,manager,spooler,task,timer,uwsgi",
    "license": "AGPLv3 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-uwsgi-taskmanager",
    "package_url": "https://pypi.org/project/django-uwsgi-taskmanager/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-uwsgi-taskmanager/",
    "project_urls": {
      "Bug Reports": "https://github.com/openpolis/django-uwsgi-taskmanager/issues",
      "Homepage": "https://github.com/openpolis/django-uwsgi-taskmanager.git",
      "Source Code": "https://github.com/openpolis/django-uwsgi-taskmanager"
    },
    "release_url": "https://pypi.org/project/django-uwsgi-taskmanager/1.0.1/",
    "requires_dist": [
      "django (>=1.11)",
      "file-read-backwards (>=2.0.0)",
      "uwsgidecorators-fallback (>=0.0.3)",
      "uwsgidecorators (>=1.1.0)"
    ],
    "requires_python": "~=3.6",
    "summary": "Django application to manage async tasks via admin interface, using uWSGI spooler.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16437923,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d6eeaf545a009d19a14d73d45b26d151275a715069493d4664a4d368e1e3f36",
        "md5": "b5fa0bacb49a2134b219c75ac0756e5b",
        "sha256": "599bf484e6bba8e0e4011a2697502cb01b5bedf5b922e61bd067cda39671aae5"
      },
      "downloads": -1,
      "filename": "django_uwsgi_taskmanager-1.0.1-py3.7.egg",
      "has_sig": false,
      "md5_digest": "b5fa0bacb49a2134b219c75ac0756e5b",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": "~=3.6",
      "size": 72031,
      "upload_time": "2019-07-23T16:22:14",
      "upload_time_iso_8601": "2019-07-23T16:22:14.186200Z",
      "url": "https://files.pythonhosted.org/packages/8d/6e/eaf545a009d19a14d73d45b26d151275a715069493d4664a4d368e1e3f36/django_uwsgi_taskmanager-1.0.1-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31466be7d0817275ca372b9f6deb7c618dc6385fa942c7c5797c8f7801176d10",
        "md5": "093bd790cdd99cb78eb6e157e65d42b0",
        "sha256": "c8989165f68f25beaa346a853be61149d482cd755510d70879ed603c2f4d0a98"
      },
      "downloads": -1,
      "filename": "django_uwsgi_taskmanager-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "093bd790cdd99cb78eb6e157e65d42b0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 35015,
      "upload_time": "2019-07-13T15:00:32",
      "upload_time_iso_8601": "2019-07-13T15:00:32.165221Z",
      "url": "https://files.pythonhosted.org/packages/31/46/6be7d0817275ca372b9f6deb7c618dc6385fa942c7c5797c8f7801176d10/django_uwsgi_taskmanager-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "358beb461d38a5c5575f3c1af0557a87c3aff534f71cc22f703268c16dd5d039",
        "md5": "f1af9cc266c690c0b966d210d87bb31a",
        "sha256": "43c37fba8ae61e5989aa2e665ccdd854d8c84c93556651b4afd50c047de79dc1"
      },
      "downloads": -1,
      "filename": "django-uwsgi-taskmanager-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f1af9cc266c690c0b966d210d87bb31a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 29622,
      "upload_time": "2019-07-13T15:00:35",
      "upload_time_iso_8601": "2019-07-13T15:00:35.625597Z",
      "url": "https://files.pythonhosted.org/packages/35/8b/eb461d38a5c5575f3c1af0557a87c3aff534f71cc22f703268c16dd5d039/django-uwsgi-taskmanager-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}