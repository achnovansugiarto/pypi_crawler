{
  "info": {
    "author": "Francesco Fuggitti",
    "author_email": "fuggitti@eecs.yorku.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# LTL<sub>f</sub>2DFA\n[![](https://img.shields.io/pypi/v/ltlf2dfa.svg)](https://pypi.python.org/pypi/ltlf2dfa)\n[![](https://img.shields.io/pypi/pyversions/ltlf2dfa.svg)](https://pypi.python.org/pypi/ltlf2dfa)\n[![LTLf2DFA CI pipeline](\n  https://github.com/whitemech/LTLf2DFA/workflows/LTLf2DFA%20CI%20pipeline./badge.svg)](\n  https://github.com/whitemech/LTLf2DFA/actions?query=workflow%3A%22LTLf2DFA+CI+pipeline.%22)\n[![](https://img.shields.io/badge/docs-mkdocs-9cf)](https://www.mkdocs.org/)\n[![](https://img.shields.io/badge/status-development-orange.svg)](https://img.shields.io/badge/status-development-orange.svg)\n[![codecov](https://codecov.io/gh/whitemech/LTLf2DFA/branch/master/graph/badge.svg)](https://codecov.io/gh/whitemech/LTLf2DFA)\n[![](https://img.shields.io/badge/flake8-checked-blueviolet)](https://img.shields.io/badge/flake8-checked-blueviolet)\n[![](https://img.shields.io/badge/mypy-checked-blue)](https://img.shields.io/badge/mypy-checked-blue)\n[![](https://img.shields.io/badge/license-LGPLv3%2B-blue)](https://img.shields.io/badge/license-LGPLv3%2B-blue)\n\nLTL<sub>f</sub>2DFA is a tool that transforms an LTL<sub>f</sub> or a PLTL<sub>f</sub> formula into a minimal \nDeterministic Finite state Automaton (DFA) using [MONA](http://www.brics.dk/mona/).\n\nIt is also available online at [ltlf2dfa.diag.uniroma1.it](http://ltlf2dfa.diag.uniroma1.it).\n\n## Prerequisites\n\nThis tool uses MONA for the generation of the DFA. Hence, you should first install MONA with all its dependencies on \nyour system following the instructions [here](http://www.brics.dk/mona/download.html).\n\nThis tool is also based on the following libraries:\n\n- [lark-parser 0.8.5](https://pypi.org/project/lark-parser/)\n- [sympy 1.5.1](https://pypi.org/project/sympy/)\n\nThey are automatically added while installing LTL<sub>f</sub>2DFA.\n\n## Install\n\n- from [PyPI](https://pypi.org/project/ltlf2dfa/):\n```\npip install ltlf2dfa\n```\n- or, from source (`master` branch):\n```\npip install git+https://github.com/whitemech/LTLf2DFA.git\n```\n\n- or, clone the repository and install:\n```\ngit clone htts://github.com/whitemech/LTLf2DFA.git\ncd ltlf2dfa\npip install .\n```\n## How To Use\n\n- Parse an LTL<sub>f</sub> formula:\n```python\nfrom ltlf2dfa.parser.ltlf import LTLfParser\n\nparser = LTLfParser()\nformula_str = \"G(a -> X b)\"\nformula = parser(formula_str)       # returns an LTLfFormula\n\nprint(formula)                      # prints \"G(a -> X (b))\"\n```\n- Or, parse a PLTL<sub>f</sub> formula:\n```python\nfrom ltlf2dfa.parser.pltlf import PLTLfParser\n\nparser = PLTLfParser()\nformula_str = \"H(a -> Y b)\"\nformula = parser(formula_str)       # returns a PLTLfFormula\n\nprint(formula)                      # prints \"H(a -> Y (b))\"\n```\n- Translate a formula to the corresponding DFA automaton:\n```python\ndfa = formula.to_dfa()\nprint(dfa)                          # prints the DFA in DOT format\n```\n## Features\n\n* Syntax and parsing support for the following formal languages:\n    * Propositional Logic;\n    * Linear Temporal Logic on Finite Traces;\n    * Pure-Past Linear Temporal Logic on Finite Traces.\n\n* Conversion from LTL<sub>f</sub>/PLTL<sub>f</sub> formula to MONA (First-order Logic)\n\n**NOTE**: LTL<sub>f</sub>2DFA accepts either LTL<sub>f</sub> formulas or PLTL<sub>f</sub> formulas, i.e., formulas that \nhave only past, only future or none operators.\n\n## Tests\n\nTo run tests: `tox`\n\nTo run only the code tests: `tox -e py37`\n\nTo run only the code style checks: `tox -e flake8`\n\n## Docs\n\nTo build the docs: `mkdocs build`\n\nTo view documentation in a browser: `mkdocs serve`\nand then go to [http://localhost:8000](http://localhost:8000)\n\n## License\n\nLTL<sub>f</sub>2DFA is released under the GNU Lesser General Public License v3.0 or later (LGPLv3+).\n\nCopyright 2018-2020 WhiteMech\n\n## Author\n\n[Francesco Fuggitti](https://francescofuggitti.github.io/)\n\n\n# History\n\n## 0.3.0 (2020-05-20)\n\n* Refinement of all the grammars. Extensive improvement of the parsing.\n* Introduce interfaces and class hierarchy for the logic modules.\n* Several bug fixes and introduce testing.\n* Introduce of docs.\n* Introduce Continuous Integration.\n* Refactor translation feature.\n* Replace parsing library PLY with Lark.\n\n## 0.2.2 (2019-09-25)\n\n* Online version: [http://ltlf2dfa.diag.uniroma1.it/](http://ltlf2dfa.diag.uniroma1.it).\n\n## 0.2.0 (2019-09-03)\n\n## 0.1.3 (2018-07-22)\n\n## 0.1.0 (2018-07-18)\n\n* First release on PyPI.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whitemech/ltlf2dfa.git",
    "keywords": "ltlf2dfa",
    "license": "GNU Lesser General Public License v3 or later (LGPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ltlf2dfa",
    "package_url": "https://pypi.org/project/ltlf2dfa/",
    "platform": "",
    "project_url": "https://pypi.org/project/ltlf2dfa/",
    "project_urls": {
      "Homepage": "https://github.com/whitemech/ltlf2dfa.git"
    },
    "release_url": "https://pypi.org/project/ltlf2dfa/1.0.0/",
    "requires_dist": [
      "lark-parser",
      "sympy"
    ],
    "requires_python": "",
    "summary": "LTLf and PLTLf to Deterministic Finite-state Automata (DFA)",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13009614,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b71c8dd969b42c44e26ecc966f9a7f8feadc0ee2571a64d5f6f000f371219403",
        "md5": "742b0a109aa0f1aa61f2e0630c0c76b7",
        "sha256": "d3737da57def1e3abe11aeefe4d277b9582236cae2c4cfb485fd664b1ac89011"
      },
      "downloads": -1,
      "filename": "ltlf2dfa-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "742b0a109aa0f1aa61f2e0630c0c76b7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 23269,
      "upload_time": "2020-05-21T12:00:09",
      "upload_time_iso_8601": "2020-05-21T12:00:09.533610Z",
      "url": "https://files.pythonhosted.org/packages/b7/1c/8dd969b42c44e26ecc966f9a7f8feadc0ee2571a64d5f6f000f371219403/ltlf2dfa-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acc2b991bb0614e22aeb5f0a5342f4a3ae4830adae68b6ef76099a4775de0c3b",
        "md5": "386f2c75aad57c6e104da756d1bc9907",
        "sha256": "4d023e6812820afead730d5024c303820c1391b128e33121266d3e52278f06fe"
      },
      "downloads": -1,
      "filename": "ltlf2dfa-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "386f2c75aad57c6e104da756d1bc9907",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26782,
      "upload_time": "2020-05-21T12:00:10",
      "upload_time_iso_8601": "2020-05-21T12:00:10.860703Z",
      "url": "https://files.pythonhosted.org/packages/ac/c2/b991bb0614e22aeb5f0a5342f4a3ae4830adae68b6ef76099a4775de0c3b/ltlf2dfa-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}