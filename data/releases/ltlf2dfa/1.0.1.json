{
  "info": {
    "author": "Francesco Fuggitti",
    "author_email": "fuggitti@diag.uniroma1.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<h1 align=\"center\">\n  <img src=\"http://ltlf2dfa.diag.uniroma1.it/static/images/logo-ltlf2dfa.svg\">\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/ltlf2dfa\">\n    <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/ltlf2dfa\">\n  </a>\n  <a href=\"https://pypi.org/project/ltlf2dfa\">\n    <img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/ltlf2dfa\" />\n  </a>\n  <a href=\"\">\n    <img alt=\"PyPI - Implementation\" src=\"https://img.shields.io/pypi/implementation/ltlf2dfa\">\n  </a>\n  <a href=\"https://github.com/whitemech/ltlf2dfa/blob/master/LICENSE\">\n    <img alt=\"GitHub\" src=\"https://img.shields.io/badge/license-LGPLv3%2B-blue\">\n  </a>  \n  <a href=\"\">\n    <img alt=\"PyPI - Wheel\" src=\"https://img.shields.io/pypi/wheel/ltlf2dfa\">\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"\">\n    <img alt=\"test\" src=\"https://github.com/whitemech/ltlf2dfa/workflows/test/badge.svg\">\n  </a>\n  <a href=\"\">\n    <img alt=\"lint\" src=\"https://github.com/whitemech/ltlf2dfa/workflows/lint/badge.svg\">\n  </a>\n  <a href=\"\">\n    <img alt=\"docs\" src=\"https://github.com/whitemech/ltlf2dfa/workflows/docs/badge.svg\">\n  </a>\n  <a href=\"https://codecov.io/gh/whitemech/pddl\">\n    <img alt=\"codecov\" src=\"https://codecov.io/gh/whitemech/ltlf2dfa/branch/master/graph/badge.svg\">\n  </a>\n  <a href=\"\">\n    <img alt=\"PyPI - Status\" src=\"https://img.shields.io/pypi/status/ltlf2dfa\" />\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://img.shields.io/badge/flake8-checked-blueviolet\">\n    <img alt=\"\" src=\"https://img.shields.io/badge/flake8-checked-blueviolet\">\n  </a>\n  <a href=\"https://img.shields.io/badge/mypy-checked-blue\">\n    <img alt=\"\" src=\"https://img.shields.io/badge/mypy-checked-blue\">\n  </a>\n  <a href=\"https://img.shields.io/badge/isort-checked-yellow\">\n    <img alt=\"isort\" src=\"https://img.shields.io/badge/isort-checked-yellow\" />\n  </a>\n  <a href=\"https://img.shields.io/badge/code%20style-black-black\">\n    <img alt=\"black\" src=\"https://img.shields.io/badge/code%20style-black-black\" />\n  </a>\n  <a href=\"https://www.mkdocs.org/\">\n    <img alt=\"\" src=\"https://img.shields.io/badge/docs-mkdocs-9cf\">\n</p>\n<p align=\"center\">\n  </a>\n    <a href=\"https://zenodo.org/badge/DOI/10.5281/zenodo.3888410.svg\">\n    <img alt=\"\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.3888410.svg\">\n  </a>\n</p>\n\n---\n\nLTL<sub>f</sub>2DFA is a tool that transforms an LTL<sub>f</sub> or a PLTL<sub>f</sub> formula into a minimal \nDeterministic Finite state Automaton (DFA) using [MONA](http://www.brics.dk/mona/).\n\nIt is also available online at [http://ltlf2dfa.diag.uniroma1.it](http://ltlf2dfa.diag.uniroma1.it).\n\n## Prerequisites\n\nThis tool uses MONA for the generation of the DFA. Hence, you should first install MONA with all its dependencies on \nyour system following the instructions [here](http://www.brics.dk/mona/download.html).\n\nThis tool is also based on the following libraries:\n\n- [lark-parser 0.9.0](https://pypi.org/project/lark-parser/)\n- [sympy 1.6.1](https://pypi.org/project/sympy/)\n\nThey are automatically added while installing LTL<sub>f</sub>2DFA.\n\n## Install\n\n- from [PyPI](https://pypi.org/project/ltlf2dfa/):\n```\npip install ltlf2dfa\n```\n- or, from source (`master` branch):\n```\npip install git+https://github.com/whitemech/LTLf2DFA.git\n```\n\n- or, clone the repository and install:\n```\ngit clone https://github.com/whitemech/LTLf2DFA.git\ncd ltlf2dfa\npip install .\n```\n## How To Use\n\n- Parse an LTL<sub>f</sub> formula:\n```python\nfrom ltlf2dfa.parser.ltlf import LTLfParser\n\nparser = LTLfParser()\nformula_str = \"G(a -> X b)\"\nformula = parser(formula_str)       # returns an LTLfFormula\n\nprint(formula)                      # prints \"G(a -> X (b))\"\n```\n- Or, parse a PLTL<sub>f</sub> formula:\n```python\nfrom ltlf2dfa.parser.pltlf import PLTLfParser\n\nparser = PLTLfParser()\nformula_str = \"H(a -> Y b)\"\nformula = parser(formula_str)       # returns a PLTLfFormula\n\nprint(formula)                      # prints \"H(a -> Y (b))\"\n```\n- Translate a formula to the corresponding DFA automaton:\n```python\ndfa = formula.to_dfa()\nprint(dfa)                          # prints the DFA in DOT format\n```\n## Features\n\n* Syntax and parsing support for the following formal languages:\n    * Propositional Logic;\n    * Linear Temporal Logic on Finite Traces;\n    * Pure-Past Linear Temporal Logic on Finite Traces.\n\n* Conversion from LTL<sub>f</sub>/PLTL<sub>f</sub> formula to MONA (First-order Logic)\n\n**NOTE**: LTL<sub>f</sub>2DFA accepts either LTL<sub>f</sub> formulas or PLTL<sub>f</sub> formulas, i.e., formulas that \nhave only past, only future or none operators.\n\n## Tests\n\nTo run tests: `tox`\n\nTo run only the code tests: `tox -e py3.7`\n\nTo run only the code style checks: `tox -e flake8`\n\n## Docs\n\nTo build the docs: `mkdocs build`\n\nTo view documentation in a browser: `mkdocs serve`\nand then go to [http://localhost:8000](http://localhost:8000)\n\n## License\n\nLTL<sub>f</sub>2DFA is released under the GNU Lesser General Public License v3.0 or later (LGPLv3+).\n\nCopyright 2018-2020 WhiteMech @ Sapienza University\n\n## Citing\nIf you are interested in this tool, and you use it in your own work, please consider citing it.\n\n## Author\n\n[Francesco Fuggitti](https://francescofuggitti.github.io/)\n\n\n# History\n\n## 1.0.1 (2020-07-03)\n* Introduce optional argument to `to_dfa()` method for DFA in MONA output\n* Add parsing support for `LTLfLast()` and `PLTLfStart()` keywords\n* Some fixes\n* Increase code coverage\n\n## 1.0.0.post0 (2020-06-05)\n\n* Include *.lark files in the package build\n* New online version: [http://ltlf2dfa.diag.uniroma1.it/](http://ltlf2dfa.diag.uniroma1.it).\n\n## 1.0.0 (2020-05-20)\n\n* Refinement of all the grammars. Extensive improvement of the parsing.\n* Introduce interfaces and class hierarchy for the logic modules.\n* Several bug fixes and introduce testing.\n* Introduce of docs.\n* Introduce Continuous Integration.\n* Refactor translation feature.\n* Replace parsing library PLY with Lark.\n\n## 0.2.2 (2019-09-25)\n\n* Online version: [http://ltlf2dfa.diag.uniroma1.it/](http://ltlf2dfa.diag.uniroma1.it).\n\n## 0.2.0 (2019-09-03)\n\n## 0.1.3 (2018-07-22)\n\n## 0.1.0 (2018-07-18)\n\n* First release on PyPI.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whitemech/ltlf2dfa.git",
    "keywords": "ltlf2dfa",
    "license": "GNU Lesser General Public License v3 or later (LGPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ltlf2dfa",
    "package_url": "https://pypi.org/project/ltlf2dfa/",
    "platform": "",
    "project_url": "https://pypi.org/project/ltlf2dfa/",
    "project_urls": {
      "Homepage": "https://github.com/whitemech/ltlf2dfa.git"
    },
    "release_url": "https://pypi.org/project/ltlf2dfa/1.0.1/",
    "requires_dist": [
      "lark-parser (<1,>=0.9.0)",
      "sympy"
    ],
    "requires_python": "",
    "summary": "LTLf and PLTLf to Deterministic Finite-state Automata (DFA)",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13009614,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb4a3739c977cb397d16030d3ebdc1a26752da5defae61858c43aa3218337440",
        "md5": "ba69b6daf0856d9233fdec8794a6b294",
        "sha256": "9ca3e64d056fc2e03cd9fb486378ecb98e460e82544f71c671226277173f58c1"
      },
      "downloads": -1,
      "filename": "ltlf2dfa-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba69b6daf0856d9233fdec8794a6b294",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 31852,
      "upload_time": "2021-06-17T09:29:27",
      "upload_time_iso_8601": "2021-06-17T09:29:27.443995Z",
      "url": "https://files.pythonhosted.org/packages/fb/4a/3739c977cb397d16030d3ebdc1a26752da5defae61858c43aa3218337440/ltlf2dfa-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42b0c4516fc870649b324840bb382aab47fb67d360e0693d27d66f8050d00692",
        "md5": "83015d00e6b6cadcf05497ac1b8f4dcb",
        "sha256": "3f8bdc024a2bb79ffe2d5a27c1b5c889ee18ff51ebc66ea5cdca2c1642344ee7"
      },
      "downloads": -1,
      "filename": "ltlf2dfa-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "83015d00e6b6cadcf05497ac1b8f4dcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30483,
      "upload_time": "2021-06-17T09:29:29",
      "upload_time_iso_8601": "2021-06-17T09:29:29.338120Z",
      "url": "https://files.pythonhosted.org/packages/42/b0/c4516fc870649b324840bb382aab47fb67d360e0693d27d66f8050d00692/ltlf2dfa-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}