{
  "info": {
    "author": "Mikhail Korobov",
    "author_email": "kmike84@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "====================\ndjango-widget-tweaks\n====================\n\nTweak the form field rendering in templates, not in python-level\nform definitions. Altering CSS classes and HTML attributes is supported.\n\nThat should be enough for designers to customize field presentation (using\nCSS and unobtrusive javascript) without touching python code.\n\nThe license is MIT.\n\nInstallation\n============\n\n::\n\n    pip install django-widget-tweaks\n\nThen add 'widget_tweaks' to INSTALLED_APPS.\n\nUsage\n=====\n\nThis app provides several template filters that can alter CSS classes and\nHTML attributes of django form fields.\n\nattr\n----\nAdds or replaces any single html atribute for the form field.\n\nExamples::\n\n    {% load widget_tweaks %}\n\n    <!-- change input type (e.g. to HTML5) -->\n    {{ form.search_query|attr:\"type:search\" }}\n\n    <!-- add/change several attributes -->\n    {{ form.text|attr:\"rows:20\"|attr:\"cols:20\"|attr:\"title:Hello, world!\" }}\n\n    <!-- attributes without parameters -->\n    {{ form.search_query|attr:\"autofocus\" }}\n\n\nadd_class\n---------\n\nAdds CSS class to field element. Split classes by whitespace in order to add\nseveral classes at once.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 2 extra css classes to field element -->\n    {{ form.title|add_class:\"css_class_1 css_class_2\" }}\n\nset_data\n--------\n\nSets HTML5 data attribute ( http://ejohn.org/blog/html-5-data-attributes/ ).\nUseful for unobtrusive javascript. It is just a shortcut for 'attr' filter\nthat prepends attribute names with 'data-' string.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- data-filters:\"OverText\" will be added to input field -->\n    {{ form.title|set_data:\"filters:OverText\" }}\n\nappend_attr\n-----------\n\nAppends atribute value with extra data.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 2 extra css classes to field element -->\n    {{ form.title|append_attr:\"class:css_class_1 css_class_2\" }}\n\n'add_class' filter is just a shortcut for 'append_attr' filter that\nadds values to the 'class' attribute.\n\nadd_error_class\n---------------\n\nThe same as 'add_class' but adds css class only if validation failed for\nthe field (field.errors is not empty).\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 'error-border' css class on field error -->\n    {{ form.title|add_error_class:\"error-border\" }}\n\n\nContributing\n============\n\nIf you've found a bug, implemented a feature or have a suggestion,\ndo not hesitate to contact me, fire an issue or send a pull request.\n\nSource code:\n\n* https://bitbucket.org/kmike/django-widget-tweaks/\n* https://github.com/kmike/django-widget-tweaks/\n\nBug tracker: https://bitbucket.org/kmike/django-widget-tweaks/issues/new\n\nrunning the tests\n-----------------\n\nMake sure you have `tox <http://tox.testrun.org/>`_ installed, then type\n\n::\n\n    tox\n\nfrom the source checkout.\n\nChanges\n=======\n\n1.0 (2012-02-06)\n----------------\n\n* filters return empty strings instead of raising exceptions if field is missing;\n* test running improvements;\n* python 3 support;\n* undocumented 'behave' filter is removed.\n\n0.3 (2011-03-04)\n----------------\n\n* ``add_error_class`` filter.\n\n0.2.1 (2011-02-03)\n------------------\n\n* Attributes customized in widgets are preserved;\n* no more extra whitespaces;\n* tests;\n\n0.1 (2011-01-12)\n----------------\n\nInitial release.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/kmike/django-widget-tweaks/",
    "keywords": null,
    "license": "MIT license",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-widget-tweaks",
    "package_url": "https://pypi.org/project/django-widget-tweaks/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-widget-tweaks/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/kmike/django-widget-tweaks/"
    },
    "release_url": "https://pypi.org/project/django-widget-tweaks/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Tweak the form field rendering in templates, not in python-level form definitions.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12560175,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b968f3d7f0d5d853dc9e6c703f7894c4c414bd05a6a4d39b1fd8e38b5450519",
        "md5": "ab7cfbe8949e2c167239276514a9d64f",
        "sha256": "11a1f5867fb1f07d8c76cc6bf7d9e0a99620d7b540662b7fd082f595aff58247"
      },
      "downloads": -1,
      "filename": "django-widget-tweaks-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ab7cfbe8949e2c167239276514a9d64f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5120,
      "upload_time": "2012-03-05T22:17:45",
      "upload_time_iso_8601": "2012-03-05T22:17:45.574531Z",
      "url": "https://files.pythonhosted.org/packages/1b/96/8f3d7f0d5d853dc9e6c703f7894c4c414bd05a6a4d39b1fd8e38b5450519/django-widget-tweaks-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}