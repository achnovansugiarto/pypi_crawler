{
  "info": {
    "author": "Rayane AMROUCHE",
    "author_email": "rayaneamrouche@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h1 align=\"center\">DS Template üë®‚Äçüíª</h1>\n<p>\n  <a href=\"#\" target=\"_blank\">\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-1.0-blue.svg?cacheSeconds=2592000\" />\n  </a>\n  <a href=\"#\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-pdoc-orange.svg\" />\n  </a>\n  <a href=\"LICENSE\" target=\"_blank\">\n    <img alt=\"License: Adel Rayane Amrouche\" src=\"https://img.shields.io/badge/License-Adel Rayane Amrouche-yellow.svg\" />\n  </a>\n</p>\n\n> Template to Kickstart Data Science projects that follows Sklearn standards and brings usefull tools to handle data and models quickly and easily\n\n## Install\n\n```sh\npip install poetry\npoetry install\n```\n\n## Run tests\n\n```sh\npytest src/\npylint src/\nmypy src/\n```\n\n## Documentation\n\n```sh\npdoc src/\n```\n\n### Usage\n\nThe DS Template has 3 main components:\n- A **DataManager** component\n- A **Controller** component\n- A **Model** component\n\nThe latter depends on the projects type and can be let empty if no model is needed.\n\nThat lets us with both the **controller** and the **data manager**. On the one hand, the **controller** is supposed to be the center of the project and interact with all the components to get the output asked by the user. On the other hand, the **data manager** is working around a json metadata file. This metafile follows a specific schema for both input sources and output sources.\n\n#### Input Sources\n> Sources can take 2 inputs regardless of the type of source and regardless if it is an intput or an output source:\n> - A **type** that can be either **csv**, **excel** or **sql**.\n> - A list of **args** that will be executed by pandas to get access to the source and prepare correctly the dataset.\n>\n> Three kind of **input** sources are handled :\n> - The **local** files that only take a **path** to the source file\n> - The **sharepoint** files that take:\n>   - The **sharepoint** address and the **sites** where the source is\n>   - The **folder** where the file source is\n>   - The **file** source name\n> - The **Sql** sources that take:\n>   - An **username** and a **password** environment variables names\n>   - An **address** of the database and **dialect** of the sql type of database\n>   - A **query** which is not mandatory since sql sources can be handled as a database instead of a simple dataset. You will be then able to query this database like you would do using *sqlalchemy*\n\n*Samples are available in the file **data/metadata.json***\n\n> Two kind of **output** sourcess are handled :\n> - The **local** files that only take a **path** to the source file\n> - The **Sql** sources that take:\n>   - An **username** and a **password** environment variables names\n>   - An **address** of the database and **dialect** of the sql type of database\n>   - A **table_name** where the dataset will be added\n>   - You also might need to include the **schema** and the parameter **if_exists** (either \"replace\" or append\" regarding the way you want to update the table) in the list of **args** \n\n## Author\n\nüë§ **Rayane Amrouche**\n\n* Github: [@AARayane](https://github.com/AARayane)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dsmanager",
    "package_url": "https://pypi.org/project/dsmanager/",
    "platform": null,
    "project_url": "https://pypi.org/project/dsmanager/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dsmanager/1.0.10/",
    "requires_dist": [
      "dash (>=2.7.1,<3.0.0)",
      "explainerdashboard (>=0.4.0,<0.5.0)",
      "llvmlite (>=0.39.1,<0.40.0)",
      "numba (>=0.56.4,<0.57.0)",
      "numexpr (>=2.8.4,<3.0.0)",
      "numpy (>=1.23.3,<2.0.0)",
      "openpyxl (>=3.0.10,<4.0.0)",
      "pandas (>=1.5.0,<2.0.0)",
      "pickle-mixin (>=1.0.2,<2.0.0)",
      "python-dotenv (>=0.21.0,<0.22.0)",
      "requests (>=2.28.1,<3.0.0)",
      "scikit-learn (>=1.2.0,<2.0.0)",
      "setuptools (>=65.6.3,<66.0.0)",
      "sqlalchemy (>=1.4.45,<2.0.0)",
      "sweetviz (>=2.1.4,<3.0.0)",
      "tqdm (>=4.64.1,<5.0.0)"
    ],
    "requires_python": ">=3.8,<4",
    "summary": "Template to Kickstart Data Science projects that follows Sklearn standards and brings usefull tools to handle data and models quickly and easily",
    "version": "1.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17009311,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecb9b4b6add4565a823bd270de1a52be429d47412961c049875cc67d4002a4f9",
        "md5": "ab756dca924b24773ad2095569ffc394",
        "sha256": "b5073cb804912fbfafee2968321a1b0c1f636892deebc5406675ad9d96a4be77"
      },
      "downloads": -1,
      "filename": "dsmanager-1.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab756dca924b24773ad2095569ffc394",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4",
      "size": 41963,
      "upload_time": "2022-12-31T20:28:15",
      "upload_time_iso_8601": "2022-12-31T20:28:15.223051Z",
      "url": "https://files.pythonhosted.org/packages/ec/b9/b4b6add4565a823bd270de1a52be429d47412961c049875cc67d4002a4f9/dsmanager-1.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3b41f1278076c110287a08a45a26190ce661ce264d43a28a013608e6a28f77a",
        "md5": "dd0a064455e7677c449e6488d0b2fd77",
        "sha256": "9fe0c50d6ba662f3a5d0f898ff8b9a3f26789f70b90bbb289c1456bbf00bd47b"
      },
      "downloads": -1,
      "filename": "dsmanager-1.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "dd0a064455e7677c449e6488d0b2fd77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4",
      "size": 32391,
      "upload_time": "2022-12-31T20:28:16",
      "upload_time_iso_8601": "2022-12-31T20:28:16.755021Z",
      "url": "https://files.pythonhosted.org/packages/f3/b4/1f1278076c110287a08a45a26190ce661ce264d43a28a013608e6a28f77a/dsmanager-1.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}