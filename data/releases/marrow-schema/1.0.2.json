{
  "info": {
    "author": "Alice Bevan-McGregor",
    "author_email": "alice@gothcandy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=============\nMarrow Schema\n=============\n\n    © 2013-2014 Alice Bevan-McGregor and contributors.\n\n..\n\n    https://github.com/marrow/marrow.schema\n\n..\n\n    |latestversion| |downloads| |masterstatus| |mastercover| |issuecount|\n\n1. What is Marrow Schema?\n=========================\n\nMarrow Schema is a tiny and fully tested, Python 2.7 and 3.2+ compatible declarative syntax toolkit.  This basically\nmeans you use high-level objects to define other high-level object data structures.  Simplified: you'll never have\nto write a class constructor that only assigns instance variables again.\n\nExamples of use include:\n\n* Attribute-access dictionaries with predefined \"slots\".\n\n* The object mapper aspect of an ORM or ODM for database access.\n\n* `Marrow Interface <https://github.com/marrow/marrow.interface>`_, declarative schema validation for arbitrary Python\n  objects similar in purpose to ``zope.interface`` or Python's own abstract base classes.\n\n* `Marrow Widgets <https://github.com/marrow/marrow.widgets>`_ are defined declaratively allowing for far more flexible\n  and cooperative subclassing.\n\n\n1.1 Goals\n---------\n\nMarrow Schema was created with the goal of extracting a component common to nearly every database ORM, ODM, and widget\nsystem into a shared library to benefit all.  While some of the basic principles (data descriptors, etc.) are simple,\nfew implementations are truly complete.  Often you would lose access to standard Python idioms, such as the use of\npositional arguments with class constructors.\n\nWith a proven generic implementation we discovered quickly that the possibilities aren't limited to the typical uses.\nOne commercial project that uses Marrow Schema does so to define generic CRUD controllers declaratively, greatly\nreducing development time and encouraging WORM (write-once, read-many) best practice.\n\nMarrow Schema additionally aims to have a very narrow scope and to \"eat its own dog food\", using a declarative syntax\nto define the declarative syntax. This is in stark contrast to alternatives (such as\n`scheme <https://github.com/siq/scheme/>`_) which utilize multiple metaclasses and a hodge-podge of magical attributes\ninternally.  Or `guts <https://github.com/emolch/guts/>`_, which is heavily tied to its XML and YAML data processing\ncapabilities.  Neither of these currently support positional instantiation, and both can be implemented as a superset\nof Marrow Schema.\n\n\n2. Installation\n===============\n\nInstalling ``marrow.schema`` is easy, just execute the following in a terminal::\n\n    pip install marrow.schema\n\nIf you add ``marrow.schema`` to the ``install_requires`` argument of the call to ``setup()`` in your applicaiton's\n``setup.py`` file, Marrow Schema will be automatically installed and made available when your own application or\nlibrary is installed.  We recommend using \"less than\" version numbers to ensure there are no unintentional\nside-effects when updating.  Use ``marrow.schema<1.1`` to get all bugfixes for the current release, and\n``marrow.schema<2.0`` to get bugfixes and feature updates while ensuring that large breaking changes are not installed.\n\n\n2.1. Development Version\n------------------------\n\n    |developstatus| |developcover|\n\nDevelopment takes place on `GitHub <https://github.com/>`_ in the\n`marrow.schema <https://github.com/marrow/marrow.schema/>`_ project.  Issue tracking, documentation, and downloads\nare provided there.\n\nInstalling the current development version requires `Git <http://git-scm.com/>`_, a distributed source code management\nsystem.  If you have Git you can run the following to download and *link* the development version into your Python\nruntime::\n\n    git clone https://github.com/marrow/marrow.schema.git\n    (cd marrow.schema; python setup.py develop)\n\nYou can then upgrade to the latest version at any time::\n\n    (cd marrow.schema; git pull; python setup.py develop)\n\nIf you would like to make changes and contribute them back to the project, fork the GitHub project, make your changes,\nand submit a pull request.  This process is beyond the scope of this documentation; for more information see\n`GitHub's documentation <http://help.github.com/>`_.\n\n\n3. Basic Concepts\n=================\n\nThere are four main classes provided for implementors:\n\n3.1. Container\n--------------\n\nThis class provides the underlying machinery for processing arguments and assigning values to instance attributes at\nclass instantiation time.  Basically it provides ``__init__`` so you don't have to.\n\nYou can extend this to support validation during instantiation, for example, to check for required values.\n\n3.2. DataAttribute\n------------------\n\nThe base attribute class which implements the descriptor protocol, pulling the instance value of the attribute from\nthe containing object's ``__data__`` dictionary.  If an attempt is made to read an attribute that does not have a\ncorresponding value in the data dictionary an ``AttributeError`` will be raised.\n\n3.3. Attribute\n--------------\n\nA subclass of ``DataAttribute`` which adds the ability to re-name the ``__data__`` key (name) and define a default\nvalue.\n\n3.4. Attributes\n---------------\n\nA declarative attribute you can use in your own ``Container`` subclasses to provide views across the known attributes\non that container.  Can provide a filter (which uses ``isinstance``) to limit to specific attributes.\n\nAlways results in an ``OrderedDict``.\n\n\n4. Version History\n==================\n\nVersion 1.0\n-----------\n\n* Initial release.\n\nVersion 1.0.1\n-------------\n\n* Compatibility with Python 2.6.\n\n* Added pypy3 to test suite.\n\nVersion 1.0.2\n-------------\n\n* Callbacks are now provided to inform attributes when they are defined, and for containers when they likewise defined.\n\n* If an attribute is overridden by a non-attribute value, it shouldn't be included in ``__attributes__`` and co.\n\n* If an attribute is overridden by a new attribute, preserve the original definition order.  This is useful, as an\n  example, to ensure the order of positional arguments don't change even if you override the default value through\n  redefinition.\n\n\n5. License\n==========\n\nMarrow Schema has been released under the MIT Open Source license.\n\n5.1. The MIT License\n--------------------\n\nCopyright © 2013-2014 Alice Bevan-McGregor and contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the “Software”), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n.. |masterstatus| image:: http://img.shields.io/travis/marrow/marrow.schema/master.svg?style=flat\n    :target: https://travis-ci.org/marrow/marrow.schema\n    :alt: Release Build Status\n\n.. |developstatus| image:: http://img.shields.io/travis/marrow/marrow.schema/develop.svg?style=flat\n    :target: https://travis-ci.org/marrow/marrow.schema\n    :alt: Development Build Status\n\n.. |latestversion| image:: http://img.shields.io/pypi/v/marrow.schema.svg?style=flat\n    :target: https://pypi.python.org/pypi/marrow.schema\n    :alt: Latest Version\n\n.. |downloads| image:: http://img.shields.io/pypi/dw/marrow.schema.svg?style=flat\n    :target: https://pypi.python.org/pypi/marrow.schema\n    :alt: Downloads per Week\n\n.. |mastercover| image:: http://img.shields.io/coveralls/marrow/marrow.schema/master.svg?style=flat\n    :target: https://travis-ci.org/marrow/marrow.schema\n    :alt: Release Test Coverage\n\n.. |developcover| image:: http://img.shields.io/coveralls/marrow/marrow.schema/develop.svg?style=flat\n    :target: https://travis-ci.org/marrow/marrow.schema\n    :alt: Development Test Coverage\n\n.. |issuecount| image:: http://img.shields.io/github/issues/marrow/marrow.schema.svg?style=flat\n    :target: https://github.com/marrow/marrow.schema/issues\n    :alt: Github Issues\n\n.. |cake| image:: http://img.shields.io/badge/cake-lie-1b87fb.svg?style=flat",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marrow/marrow.schema/",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "marrow.schema",
    "package_url": "https://pypi.org/project/marrow.schema/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/marrow.schema/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/marrow/marrow.schema/"
    },
    "release_url": "https://pypi.org/project/marrow.schema/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A generic declarative syntax toolkit for Python objects that uses itself to define itself.  Really.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4911116,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "843c815c9524756337a3a87332be2d596efd5b69173da5e88468c9698841235b",
        "md5": "51e0a46f452e9b96f425eaf13bf13c00",
        "sha256": "6b82f5287151f4e1cc1eb338a312fb7f39b896a66be80071c04fc6ebdad1b91d"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py2.6.egg",
      "has_sig": false,
      "md5_digest": "51e0a46f452e9b96f425eaf13bf13c00",
      "packagetype": "bdist_egg",
      "python_version": "2.6",
      "requires_python": null,
      "size": 20606,
      "upload_time": "2014-07-10T14:59:21",
      "upload_time_iso_8601": "2014-07-10T14:59:21.612351Z",
      "url": "https://files.pythonhosted.org/packages/84/3c/815c9524756337a3a87332be2d596efd5b69173da5e88468c9698841235b/marrow.schema-1.0.2-py2.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2af2f59955951b6436d95d6c81786e4065f94673f6e86a9d0c370b936c88f64e",
        "md5": "74dcb3e46a97594e2e419caa3040eb1a",
        "sha256": "ec42b82571dc1b7584ef3f4b6d7f36ee1600bede70e2cd7eabe9069e414a045d"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py2.7.egg",
      "has_sig": false,
      "md5_digest": "74dcb3e46a97594e2e419caa3040eb1a",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 20540,
      "upload_time": "2014-07-10T14:59:30",
      "upload_time_iso_8601": "2014-07-10T14:59:30.212773Z",
      "url": "https://files.pythonhosted.org/packages/2a/f2/f59955951b6436d95d6c81786e4065f94673f6e86a9d0c370b936c88f64e/marrow.schema-1.0.2-py2.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b7fa7caf52dcabcbd54a3ba0f8a169b7d0e1794da5b5373ff890c177a2c1009",
        "md5": "1c9c2c188c40cb862358abd8c2b4d7b2",
        "sha256": "f991b3e25b602d99ad08d9801f6dfcb0b529fda7484e974b68304d8c9e99f707"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c9c2c188c40cb862358abd8c2b4d7b2",
      "packagetype": "bdist_wheel",
      "python_version": "2.6",
      "requires_python": null,
      "size": 16261,
      "upload_time": "2014-07-10T14:59:24",
      "upload_time_iso_8601": "2014-07-10T14:59:24.134026Z",
      "url": "https://files.pythonhosted.org/packages/7b/7f/a7caf52dcabcbd54a3ba0f8a169b7d0e1794da5b5373ff890c177a2c1009/marrow.schema-1.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad332117f04835fec071956fc3d452008e0c1b6cf09b5d05e21a618dea0f8c58",
        "md5": "3818ee7c0922e0e0b112ec7c9f5c8245",
        "sha256": "dc70d5bd70e4b46b1c38754087f327591737e5d4c5893955d0f7463c419e8e59"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py3.2.egg",
      "has_sig": false,
      "md5_digest": "3818ee7c0922e0e0b112ec7c9f5c8245",
      "packagetype": "bdist_egg",
      "python_version": "3.2",
      "requires_python": null,
      "size": 21157,
      "upload_time": "2014-07-10T14:59:36",
      "upload_time_iso_8601": "2014-07-10T14:59:36.154074Z",
      "url": "https://files.pythonhosted.org/packages/ad/33/2117f04835fec071956fc3d452008e0c1b6cf09b5d05e21a618dea0f8c58/marrow.schema-1.0.2-py3.2.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "409035b39670be6cd152f16e53fd9a8529a3971e8a1e031d6e1b2e8fca0026c7",
        "md5": "65690f2b78ba1b9fb1e8ae0a2efb5df0",
        "sha256": "c4c861ce6a3b11b63ebf5144449b3e606a361c2fea00f1e83c9ddea7de1db9eb"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py3.3.egg",
      "has_sig": false,
      "md5_digest": "65690f2b78ba1b9fb1e8ae0a2efb5df0",
      "packagetype": "bdist_egg",
      "python_version": "3.3",
      "requires_python": null,
      "size": 21511,
      "upload_time": "2014-07-10T14:59:42",
      "upload_time_iso_8601": "2014-07-10T14:59:42.495612Z",
      "url": "https://files.pythonhosted.org/packages/40/90/35b39670be6cd152f16e53fd9a8529a3971e8a1e031d6e1b2e8fca0026c7/marrow.schema-1.0.2-py3.3.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00e5a47890d3636d331eab9dc46ca4649e052cc747f296954a96ed12f82db62c",
        "md5": "4fa4da91f9fb33b3e5cdbb1aa891f58d",
        "sha256": "147416886c6026d4910da681149516d01449374741a3642ca82ff430bcab9d92"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2-py3.4.egg",
      "has_sig": false,
      "md5_digest": "4fa4da91f9fb33b3e5cdbb1aa891f58d",
      "packagetype": "bdist_egg",
      "python_version": "3.4",
      "requires_python": null,
      "size": 21287,
      "upload_time": "2014-07-10T14:59:49",
      "upload_time_iso_8601": "2014-07-10T14:59:49.575751Z",
      "url": "https://files.pythonhosted.org/packages/00/e5/a47890d3636d331eab9dc46ca4649e052cc747f296954a96ed12f82db62c/marrow.schema-1.0.2-py3.4.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc6e89dd1828365630911412c76b0977430d5ec0c97a517883b9ea7fd5546dc5",
        "md5": "5e786c3fb09d59c778cba832ab7556f8",
        "sha256": "bd438696f90a12d20f91d8ff8924ba0a87c69f072d90134efca3e39c4a7e1570"
      },
      "downloads": -1,
      "filename": "marrow.schema-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5e786c3fb09d59c778cba832ab7556f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12298,
      "upload_time": "2014-07-10T14:59:19",
      "upload_time_iso_8601": "2014-07-10T14:59:19.195867Z",
      "url": "https://files.pythonhosted.org/packages/fc/6e/89dd1828365630911412c76b0977430d5ec0c97a517883b9ea7fd5546dc5/marrow.schema-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}