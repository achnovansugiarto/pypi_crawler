{
  "info": {
    "author": "Aaron Ng",
    "author_email": "hi@aaron.ng",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": ".. image:: https://travis-ci.org/aaronn/django-rest-framework-passwordless.svg?branch=master\n    :target: https://travis-ci.org/aaronn/django-rest-framework-passwordless\n\n\ndrfpasswordless is a quick way to integrate ‘passwordless’ auth into\nyour Django Rest Framework project using a user’s email address or\nmobile number only (herein referred to as an alias).\n\nBuilt to work with DRF’s own TokenAuthentication system, it sends the\nuser a 6-digit callback token to a given email address or a mobile\nnumber. The user sends it back correctly and they’re given an\nauthentication token (again, provided by Django Rest Framework’s\nTokenAuthentication system).\n\nCallback tokens by default expire after 15 minutes.\n\nExample Usage:\n==============\n\n::\n\n    curl -X POST -d “email=aaron@email.com” localhost:8000/auth/email/\n\nEmail to aaron@email.com:\n\n::\n\n    …\n    <h1>Your login token is 815381.</h1>\n    …\n\nReturn Stage\n\n::\n\n    curl -X POST -d \"token=815381\" localhost:8000/callback/auth/\n\n    > HTTP/1.0 200 OK\n    > {\"token\":\"76be2d9ecfaf5fa4226d722bzdd8a4fff207ed0e”}\n\nRequirements\n============\n\n::\n\n    - Python (2.7, 3.4, 3.5, 3.6+)\n    - Django (1.8, 1.9, 1.10, 1.11+)\n    - Django Rest Framework + AuthToken (3.4, 3.5, 3.6+)\n    - Python-Twilio (Optional, for mobile.)\n\n\nInstall\n=======\n\n1. Install drfpasswordless\n\n   ::\n\n      pip install drfpasswordless\n\n\n2. Add Django Rest Framework’s Token Authentication to your Django Rest\n   Framework project.\n\n   ::\n\n       REST_FRAMEWORK = {\n           'DEFAULT_AUTHENTICATION_CLASSES':\n          ('rest_framework.authentication.TokenAuthentication',\n       )}\n\n       INSTALLED_APPS = [\n           // …\n           'rest_framework',\n           'rest_framework.authtoken',\n           'drfpasswordless',\n       ]\n\n   And run ``manage.py migrate``.\n\n3. Set which types of contact points are allowed for auth in your\n   Settings.py. The available options are ``EMAIL`` and ``MOBILE``.\n\n   ::\n\n       PASSWORDLESS_AUTH = {\n           //…\n           ‘PASSWORDLESS_AUTH_TYPES’: [‘EMAIL’, ‘MOBILE’],\n           //…\n       }\n\n   By default drfpasswordless looks for fields named ``email`` or ``mobile``\n   on the User model. If an alias provided doesn’t belong to any given user,\n   a new user is created.\n\n   3a. If you’re using ``email``, see the Configuring Email section\n   below.\n\n   3b. If you’re using ``mobile``, see the Configuring Email section\n   below.\n\n4. Add ``drfpasswordless.urls`` to your urls.py\n\n   ::\n\n       urlpatterns = [\n           //..\n           url(r'^', include('drfpasswordless.urls')),\n           //..\n       ]\n\n\n5. You can now POST to either of the endpoints:\n\n   ::\n\n       curl -X POST -d \"email=aaron@email.com\" localhost:8000/auth/email/\n\n       curl -X POST -d \"mobile=+15552143912\" localhost:8000/mobile/\n\n   A 6 digit callback token will be sent to the contact point.\n\n6. The client has 15 minutes to use the 6 digit callback token\n   correctly. If successful, they get an authorization token in exchange\n   which the client can then use with Django Rest Framework’s\n   TokenAuthentication scheme.\n\n   ::\n\n       curl -X POST -d \"token=815381\" localhost:8000/callback/auth/\n\n       > HTTP/1.0 200 OK\n       > {\"token\":\"76be2d9ecfaf5fa4226d722bzdd8a4fff207ed0e”}\n\nConfiguring Emails\n------------------\n\nSpecify the email address you’d like to send the callback token from\nwith the ``PASSWORDLESS_EMAIL_NOREPLY_ADDRESS`` setting.\n\nYou’ll also need to set up an SMTP server to send emails (`See Django\nDocs <https://docs.djangoproject.com/en/1.10/topics/email/>`__), but for\ndevelopment you can set up a dummy development smtp server to test\nemails. Sent emails will print to the console. `Read more\nhere. <https://docs.djangoproject.com/en/1.10/topics/email/#configuring-email-for-development>`__\n\n::\n\n    # Settings.py\n    …\n    EMAIL_HOST = 'localhost'\n    EMAIL_PORT = 1025\n\nThen run the following:\n\n::\n\n    python -m smtpd -n -c DebuggingServer localhost:1025\n\nConfiguring Mobile\n------------------\n\nYou’ll need to have the python twilio module installed\n\n::\n\n    pip install twilio\n\nand set the ``TWILIO_ACCOUNT_SID`` and ``TWILIO_AUTH_TOKEN`` environment\nvariables.\n\nYou’ll also need to specify the number you send the token from with the\n``PASSWORDLESS_MOBILE_NOREPLY_NUMBER`` setting.\n\nTemplates\n=========\n\nIf you’d like to use a custom email template for your email callback\ntoken, specify your template name with this setting:\n\n::\n\n    PASSWORDLESS_AUTH = {\n        //…\n        'PASSWORDLESS_EMAIL_TOKEN_HTML_TEMPLATE_NAME': \"mytemplate.html\"\n    }\n\nThe template renders a single variable ``{{ callback_token }}`` which is\nthe 6 digit callback token being sent.\n\nContact Point Validation\n========================\n\nEndpoints can automatically mark themselves as validated when a user\nlogs in with a token sent to a specific endpoint. They can also\nautomatically mark themselves as invalid when a user changes a contact\npoint.\n\nThis is off by default but can be turned on with\n``PASSWORDLESS_USER_MARK_EMAIL_VERIFIED`` or\n``PASSWORDLESS_USER_MARK_MOBILE_VERIFIED``. By default when these are\nenabled they look for the User model fields ``email_verified`` or\n``mobile_verified``.\n\nYou can also use ``/validate/email/`` or ``/validate/mobile/`` which will\nautomatically send a token to the endpoint attached to the current\n``request.user``'s email or mobile if available.\n\nYou can then send that token to ``/callback/verify/`` which will double-check\nthat the endpoint belongs to the request.user and mark the alias as verified.\n\nRegistration\n============\n\nAll unrecognized emails and mobile numbers create new accounts by\ndefault. New accounts are automatically set with\n``set_unusable_password()`` but it’s recommended that admins have some\ntype of password.\n\nThis can be turned off with the ``PASSWORDLESS_REGISTER_NEW_USERS``\nsetting.\n\nOther Settings\n==============\n\nHere’s a full list of the configurable defaults.\n\n::\n\n    DEFAULTS = {\n\n        # Allowed auth types, can be EMAIL, MOBILE, or both.\n        'PASSWORDLESS_AUTH_TYPES': ['EMAIL'],\n\n        # Amount of time that tokens last, in seconds\n        'PASSWORDLESS_TOKEN_EXPIRE_TIME': 15 * 60,\n\n        # The user's email field name\n        'PASSWORDLESS_USER_EMAIL_FIELD_NAME': 'email',\n\n        # The user's mobile field name\n        'PASSWORDLESS_USER_MOBILE_FIELD_NAME': 'mobile',\n\n        # Marks itself as verified the first time a user completes auth via token.\n        # Automatically unmarks itself if email is changed.\n        'PASSWORDLESS_USER_MARK_EMAIL_VERIFIED': False,\n        'PASSWORDLESS_USER_EMAIL_VERIFIED_FIELD_NAME': 'email_verified',\n\n        # Marks itself as verified the first time a user completes auth via token.\n        # Automatically unmarks itself if mobile number is changed.\n        'PASSWORDLESS_USER_MARK_MOBILE_VERIFIED': False,\n        'PASSWORDLESS_USER_MOBILE_VERIFIED_FIELD_NAME': 'mobile_verified',\n\n        # The email the callback token is sent from\n        'PASSWORDLESS_EMAIL_NOREPLY_ADDRESS': None,\n\n        # The email subject\n        'PASSWORDLESS_EMAIL_SUBJECT': \"Your Login Token\",\n\n        # A plaintext email message overridden by the html message. Takes one string.\n        'PASSWORDLESS_EMAIL_PLAINTEXT_MESSAGE': \"Enter this token to sign in: %s\",\n\n        # The email template name.\n        'PASSWORDLESS_EMAIL_TOKEN_HTML_TEMPLATE_NAME': \"passwordless_default_token_email.html\",\n\n        # Your twilio number that sends the callback tokens.\n        'PASSWORDLESS_MOBILE_NOREPLY_NUMBER': None,\n\n        # The message sent to mobile users logging in. Takes one string.\n        'PASSWORDLESS_MOBILE_MESSAGE': \"Use this code to log in: %s\",\n\n        # Registers previously unseen aliases as new users.\n        'PASSWORDLESS_REGISTER_NEW_USERS': True,\n\n        # Suppresses actual SMS for testing\n        'PASSWORDLESS_TEST_SUPPRESSION': False,\n\n        # Context Processors for Email Template\n        'PASSWORDLESS_CONTEXT_PROCESSORS': [],\n\n        # The verification email subject\n        'PASSWORDLESS_EMAIL_VERIFICATION_SUBJECT': \"Your Verification Token\",\n\n        # A plaintext verification email message overridden by the html message. Takes one string.\n        'PASSWORDLESS_EMAIL_VERIFICATION_PLAINTEXT_MESSAGE': \"Enter this verification code: %s\",\n\n        # The verification email template name.\n        'PASSWORDLESS_EMAIL_VERIFICATION_TOKEN_HTML_TEMPLATE_NAME': \"passwordless_default_verification_token_email.html\",\n\n        # The message sent to mobile users logging in. Takes one string.\n        'PASSWORDLESS_MOBILE_VERIFICATION_MESSAGE': \"Enter this verification code: %s\",\n\n        # Automatically send verification email or sms when a user changes their alias.\n        'PASSWORDLESS_AUTO_SEND_VERIFICATION_TOKEN': False,\n    }\n\nTodo\n----\n\n-  Support non-US mobile numbers\n-  Custom URLs\n-  Change bad settings to 500's\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aaronn/django-rest-framework-passwordless",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drfpasswordless",
    "package_url": "https://pypi.org/project/drfpasswordless/",
    "platform": "",
    "project_url": "https://pypi.org/project/drfpasswordless/",
    "project_urls": {
      "Homepage": "https://github.com/aaronn/django-rest-framework-passwordless"
    },
    "release_url": "https://pypi.org/project/drfpasswordless/1.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Passwordless auth for Django Rest Framework Token Authentication.",
    "version": "1.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13474693,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b116245807d54fab59b1b6208e53e1fb71ae3db2235aeebfae451c32cce75ce",
        "md5": "d223bb29858ae94c6017dd7e5e2c6d80",
        "sha256": "e3679c92c35f582f60f0df75fda797acf97dd933c3c6a69a0475825527e41716"
      },
      "downloads": -1,
      "filename": "drfpasswordless-1.1.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d223bb29858ae94c6017dd7e5e2c6d80",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 41082,
      "upload_time": "2018-02-25T04:57:14",
      "upload_time_iso_8601": "2018-02-25T04:57:14.201895Z",
      "url": "https://files.pythonhosted.org/packages/0b/11/6245807d54fab59b1b6208e53e1fb71ae3db2235aeebfae451c32cce75ce/drfpasswordless-1.1.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e806f3e7d8c66f162fb758d86dc922a64aa15c591a3985568480392c0c5a1cc",
        "md5": "c7841cc00688a0606320fbc9d64ede3f",
        "sha256": "90ec1e8074704d30d83a417981b038bcc7d0d09b7cbbc8ad5a091b97ca47b8c0"
      },
      "downloads": -1,
      "filename": "drfpasswordless-1.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "c7841cc00688a0606320fbc9d64ede3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17947,
      "upload_time": "2018-02-25T04:57:15",
      "upload_time_iso_8601": "2018-02-25T04:57:15.484491Z",
      "url": "https://files.pythonhosted.org/packages/1e/80/6f3e7d8c66f162fb758d86dc922a64aa15c591a3985568480392c0c5a1cc/drfpasswordless-1.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}