{
  "info": {
    "author": "Tiago Silva",
    "author_email": "tiago.arasilva@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Django Tenants URL\n\n![Build and Publish](https://github.com/tarsil/django-tenants-url/actions/workflows/main.yml/badge.svg)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=tarsil_django-tenants-url&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=tarsil_django-tenants-url)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=tarsil_django-tenants-url&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=tarsil_django-tenants-url)\n[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=tarsil_django-tenants-url&metric=code_smells)](https://sonarcloud.io/summary/new_code?id=tarsil_django-tenants-url)\n[![Vulnerabilities](https://sonarcloud.io/api/project_badges/measure?project=tarsil_django-tenants-url&metric=vulnerabilities)](https://sonarcloud.io/summary/new_code?id=tarsil_django-tenants-url)\n\n**Official Documentation** - <https://tarsil.github.io/django-tenants-url/>\n\n---\n\n## Table of Contents\n\n- [Django Tenants URL](#django-tenants-url)\n   - [Table of Contents](#table-of-contents)\n   - [About Django Tenants URL](#about-django-tenants-url)\n   - [Dependencies](#dependencies)\n   - [Motivation](#motivation)\n   - [Installation](#installation)\n      - [After installing django-tenants](#after-installing-django-tenants)\n         - [Install django-tenants-url](#install-django-tenants-url)\n      - [Django Tenants URL Settings](#django-tenants-url-settings)\n      - [X_REQUEST_ID](#x_request_id)\n   - [Example](#example)\n   - [Documentation and Support](#documentation-and-support)\n   - [License](#license)\n\n---\n\n## About Django Tenants URL\n\nDjango Tenants URL is a wrapper on the top of the `django-tenants` package that serves a different\nyet common use case, the multi-tenant implementation via HEADER and not using `sub domains`.\n\nA special thanks to the team behind [Django Tenants](https://github.com/django-tenants/django-tenants).\n\n## Dependencies\n\nThe project contains [views](./views.md), [permissions](./permissions.md),\n[models](./models.md) and more addons that can be used across projects.\n\n`django-tenants-url` is built on the top of the following dependencies:\n\n1. [Django](https://www.djangoproject.com/)\n2. [Django Rest Framework](https://www.django-rest-framework.org/)\n3. [Django Tenants](https://django-tenants.readthedocs.io/en/latest/)\n\n## Motivation\n\nWhen implementing multi tenancy architecture there are many factors to consider and cover and\nthose were greatly approached by [django-tenants](https://github.com/django-tenants/django-tenants)\nbut so summarize, there are 3 common ways:\n\n1. **Shared schemas** - The data of all users are shared within the same schema and filtered by\n   common IDs or whatever that is unique to the platform. This is not so great for GDPR.\n2. **Shared database, different Schemas** - The user's data is split by different schemas but live\n   on the same database.\n3. **Different databases** - The user's data or any data live on different databases.\n\nAs mentioned before, `django-tenants-url` is a wrapper on the top of `django-tenants`\nand therefore we will be approaching the second.\n\nMany companies have limited resources (money, people...) and limited choices from those\nconstraints. When implementing multi tenancy, the default would be to use subdomains\nin order to access the desired schema. E.g.:\n\n```shell\nwww.mycompany.saascompany.com\n```\n\n`My Company` is the tenant of the `saascompany.com` that is publicaly available to the users.\nWhen the `mycompany` is sent to the backend, the middleware splits the subdomain and\nthe TLD (top-level domain) and maps the tenant with the schema associated.\n\nFor this work, one of the ways is to change your `apache`, `nginx` or any other configurations\nthat accepts and forwards calls to the `*.sasscompany.com` and performs the above action.\n\nIf the frontend and backend are split, extra configurations need also to be made on that\nfront and all of this can be a pain.\n\n**What does django-tenants-url solve?**\n\nThe principle of mapping users to the schemas remains the same but the way of doing it\nis what diverges from the rest. What if we were able to only use `www.sasscompany.com`,\nlogin as usual and automatically the platform knows exactly to which schema the user\nneeds to be mapped and forward?\n\n**This is what django-tenants-url solves. A single url that does the multi tenancy\nwithout breaking the principle and architecture and simply using one single url**\n\n## Installation\n\nPrior to install the `django-tenants-url`, `django-tenants` needs to be installed\nas well. Please follow the installation steps from\n[Django Tenants](https://www.github.com/django-tenants/django-tenants)\n\n### After installing django-tenants\n\n#### Install django-tenants-url\n\n```shell\npip install django-tenants-url\n```\n\n1. The `TENANT_MODEL` and `TENANT_DOMAIN_MODEL` from `django-tenants`\n   need to be also in the `settings.py`.\n2. Add `django-tenants-url` to `INSTALLED_APPS`.\n\n   ```python\n\n   INSTALLED_APPS = [\n     ...\n     'django_tenants',\n     'django_tenants_url',\n     ...\n   ]\n\n   ```\n\n3. `django-tenants-url` offers a special wrapper over the `mixins` of `django-tenants`\n   with the same names so you don't need to worry about breaking changes and the\n   additional unique `TenantUserMixin` that maps the users with a tenant.\n\n4. Create the models.\n\n   ```python\n   # myapp.models.py\n\n   from django.db import models\n   from django_tenants_url.models import TenantMixin, DomainMixin, TenantUserMixin\n\n\n   class Client(TenantMixin):\n       \"\"\"\n       This table provides the `tenant_uuid` needed\n       to be used in the `X_REQUEST_HEADER` and consumed\n       by the RequestUUIDTenantMiddleware.\n       \"\"\"\n       pass\n\n\n   class Domain(DomainMixin):\n       pass\n\n\n   class TenantUser(TenantUserMixin):\n       pass\n\n   ```\n\n5. Add the `DTU_TENANT_USER_MODEL` to `settings.py`.\n\n   ```python\n   # settings.py\n\n   ...\n\n   DTU_TENANT_USER_MODEL = 'myapp.TenantUser'\n\n   ...\n\n   ```\n\n6. Update the `MIDDLEWARE` to have the new `RequestUUIDTenantMiddleware`.\n   Preferentially at the very top.\n\n   ```python\n   # settings.py\n\n   ...\n\n   MIDDLEWARE = [\n     'django_tenants_url.middleware.RequestUUIDTenantMiddleware',\n     'django.middleware.security.SecurityMiddleware',\n     ...\n   ]\n\n   ...\n   ```\n\n7. Generate the migrations.\n\n   ```shell\n   python manage.py makemigrations\n   ```\n\n8. Run the migrations as if it was `django-tenants` and not the classic `migrate`.\n\n   ```shell\n   python manage.py migrate_schemas\n   ```\n\n9. The `UUID` needed for the `RequestUUIDTenantMiddleware` can be found in your\n   table inherited from the `TenantMixin`.\n\n**None: Do not run `python manage.py migrate` or else it will sync everything into the public.**\n\nAnd that is it. The `RequestUUIDTenantMiddleware` should be able to map\nthe `TenantUser` created with a tenant and route the queries to the associated schema.\n\nCheckout the [documentation](https://tarsil.github.io/django-tenants-url/)\nand understand how to integrate with your views and taking advantage\nof the utils for your `TenantUser` (or your implementation),\n\n### Django Tenants URL Settings\n\n```python\n# default settings\n\nDTU_TENANT_NAME = \"Public\"\nDTU_TENANT_SCHEMA = \"public\"\nDTU_DOMAIN_NAME = \"localhost\"\nDTU_PAID_UNTIL = \"2100-12-31\"\nDTU_ON_TRIAL = False\nDTU_HEADER_NAME = \"HTTP_X_REQUEST_ID\"\nDTU_AUTO_CREATE_SCHEMA = True\nDTU_AUTO_DROP_SCHEMA = False\nDTU_TENANT_USER_MODEL = None\n\n```\n\n### X_REQUEST_ID\n\nBy default `django-tenants-url` has the header name `HTTP_X_REQUEST_ID` that will be lookup\nfrom the middleware when sent via HTTP.\nThis name can be overriten by the special setting `DTU_HEADER_NAME`.\n\n## Example\n\nA simple example can be found [here](./docs/example.md).\n\nAnother Django Like app implementing Django Tenants Url can be found [here](./dtu_test_project/)\n\n## Documentation and Support\n\nFull documentation for the project is available at <https://tarsil.github.io/django-tenants-url/>\n\n## License\n\nCopyright (c) 2022-present Tiago Silva and contributors under the [MIT license](https://opensource.org/licenses/MIT).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://tarsil.github.io/django-tenants-url/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-tenants-url",
    "package_url": "https://pypi.org/project/django-tenants-url/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-tenants-url/",
    "project_urls": {
      "Homepage": "https://tarsil.github.io/django-tenants-url/"
    },
    "release_url": "https://pypi.org/project/django-tenants-url/1.0.1/",
    "requires_dist": [
      "bleach (>=4.1.0)",
      "django (<4.1,>=2.2)",
      "pytz",
      "djangorestframework (>=3.13.1)",
      "django-tenants (>=3.4.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Django Tenants managed by a single URL.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17261670,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a7bd574d4abea59a42a96fdc02a090ea181953074218e022cd2977d7cfbceb9",
        "md5": "7d5a95358560615f3041e77bc7ffa885",
        "sha256": "b7a97c5ef5a2c51582aaf6f898c9f8dcb7e737515c064f4b8518ba219fe3fb1a"
      },
      "downloads": -1,
      "filename": "django_tenants_url-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d5a95358560615f3041e77bc7ffa885",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14632,
      "upload_time": "2022-08-04T12:13:41",
      "upload_time_iso_8601": "2022-08-04T12:13:41.632922Z",
      "url": "https://files.pythonhosted.org/packages/9a/7b/d574d4abea59a42a96fdc02a090ea181953074218e022cd2977d7cfbceb9/django_tenants_url-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}