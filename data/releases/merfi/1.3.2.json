{
  "info": {
    "author": "Alfredo Deza",
    "author_email": "alfredo@deza.pe",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Utilities"
    ],
    "description": "`merfi`\n=======\nA helper tool to quickly crawl a file system and sign commonly used files for\nrepositories, with gpg, rpm-sign, and any other similar tool.\n\n*\"a tool called \"merfi\" ... what could possibly go wrong?\"*\n\nrpm-sign\n--------\nFor ``rpm-sign``, the default operation will just crawl the filesystem looking\nfor Debian repositories containing  ``Release`` files. When the proper\n``Release`` file is found, merfi will proceed to sign the file like::\n\n    $ merfi rpm-sign --key \"mykey\"\n    --> signing: /Users/alfredo/repos/debian/dists/trusty/Release\n    --> signed: /Users/alfredo/repos/debian/dists/trusty/Release.gpg\n    --> signed: /Users/alfredo/repos/debian/dists/trusty/InRelease\n\nLike all the other supported backends, it will crawl from the current working\ndirectory unless a path is specified::\n\n    $ merfi rpm-sign --key \"mykey\" /opt/packages\n\nWhat is really doing behind the scenes is using ``rpm-sign`` like this::\n\n    rpm-sign --key \"mykey\" --detachsign Release --output Release.gpg\n    rpm-sign --key \"mykey\" --clearsign Release > InRelease\n\nYou can also specify a ``--keyfile`` argument to ``rpm-sign``. This will cause\nmerfi to copy this GPG public key as ``release.asc`` to the root of each\nrepository::\n\n    $ merfi rpm-sign --key \"mykey\" --keyfile /etc/RPM-GPG-KEY-testing /opt/packages\n\nThis feature is designed for Ceph's ISO installer (ceph-ansible), because it\nexpects the GPG public key to be present in this location.\n\nIf you are running the ``rpm-sign`` command  on a computer that is behind a\nNAT, you must pass the ``--nat`` argument, like so::\n\n    $ merfi rpm-sign --nat --key \"mykey\"\n\ngpg\n---\nGPG support is similar to ``rpm-sign`` in that merfi will crawl a path\n(defaults to the current working directory) looking for Debian repositories,\nand sign the appropriate ``Release`` files:\n\n    $ merfi gpg\n    --> signing: /Users/alfredo/repos/debian/dists/trusty/Release\n    --> signed: /Users/alfredo/repos/debian/dists/trusty/Release.gpg\n    --> signed: /Users/alfredo/repos/debian/dists/trusty/InRelease\n\nBehind the scenes the tool is running ``gpg`` like::\n\n    gpg --armor --detach-sig --output Release.gpg Release\n    gpg --clearsign --output InRelease Release\n\niso\n---\nmerfi can generate an ISO from a tree of package repositories::\n\n    $ merfi iso /opt/packages --output my-dvd.iso\n\nThis will generate two files, ``my-dvd.iso`` and ``my-dvd.iso.SHA256SUM``. You\ncan verify the ISO file's integrity by passing the checksum file to the\n``sha256sum -c`` command::\n\n    $ sha256sum -c my-dvd.iso.SHA256SUM\n    my-dvd.iso: OK\n\nAbout the name\n--------------\n*\"Firme\"* is the Spanish word for \"sign\" and *\"merfi\"* is the Peruvian slang\nfor it.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/alfredodeza/merfi",
    "keywords": "rpm-sign,gpg,release,binaries",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "merfi",
    "package_url": "https://pypi.org/project/merfi/",
    "platform": "",
    "project_url": "https://pypi.org/project/merfi/",
    "project_urls": {
      "Homepage": "http://github.com/alfredodeza/merfi"
    },
    "release_url": "https://pypi.org/project/merfi/1.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Signs release files",
    "version": "1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3684831,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5baeac95d127e2ac9007e3dbbd977509665427622140b938747a6cf4f77ca997",
        "md5": "84cde5417da2a749de621a318b344ba1",
        "sha256": "f4daccef1935a3741b3de0cbc5d726bba16a547332b0d6aa1d92fdea00018f70"
      },
      "downloads": -1,
      "filename": "merfi-1.3.2.tar.gz",
      "has_sig": true,
      "md5_digest": "84cde5417da2a749de621a318b344ba1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20108,
      "upload_time": "2017-11-09T23:20:25",
      "upload_time_iso_8601": "2017-11-09T23:20:25.306028Z",
      "url": "https://files.pythonhosted.org/packages/5b/ae/ac95d127e2ac9007e3dbbd977509665427622140b938747a6cf4f77ca997/merfi-1.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}