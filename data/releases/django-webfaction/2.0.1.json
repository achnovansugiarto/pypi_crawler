{
  "info": {
    "author": "Pavel Zhukov",
    "author_email": "gelios@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django-Webfaction\n=================\n\nCollection of tools to run django on webfaction more seamless\n\nInstallation:\n=============\n\n* Install with pip or easy install (pip install django-webfaction)\n\n\nUsage:\n======\n\nConsole utility\n---------------\n\nDjango webfaction contains ``webfactionctl`` utility that can be used to control your webfaction services from command-line.\n\n1. You get access to basic commands like a list machines/apps/databases/ips/.. and crate apps and databases.\n   For example to get list of your current dbs just run::\n\n     webfactionctl list_dbs\n\n2. You can get extended info of your machines with current RAM usage, apps and processes with ``state`` command::\n\n    $ webfactionctl state\n    Query machines list...\n    Query apps list...\n    Query machine state detail: Web210 Web217 Web223 Web317 Web327\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n    | ram_usage | operating_system |  name  |      location      | app_count | process_count | id  |\n    +===========+==================+========+====================+===========+===============+=====+\n    | 209708    | Centos5-32bit    | Web210 | Europe (Amsterdam) | 19        | 20            | 376 |\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n    | 43112     | Centos5-32bit    | Web217 | Europe (Amsterdam) | 2         | 7             | 386 |\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n    | 175352    | Centos5-32bit    | Web223 | Europe (Amsterdam) | 12        | 17            | 395 |\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n    | 8220      | Centos6-64bit    | Web317 | Europe (Amsterdam) | 6         | 7             | 445 |\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n    | 66092     | Centos6-64bit    | Web327 | Europe (Amsterdam) | 2         | 9             | 462 |\n    +-----------+------------------+--------+--------------------+-----------+---------------+-----+\n\nDjango deployment wizard\n------------------------\n\nWith ``webfactionctl stup_django_project`` you can run django deployment wizard that:\n\n1. Prepare server by installing pip, virtualenv, gunicorn, django-webfaction globally for your account.\n2. Create main app for your project\n3. Setup virtualenv for your main project\n4. Prepare gunicorn contorl script for your project\n5. Create static app for your project\n6. Prepare settings_local for your project\n\nSending mail from local sendmail asynchronous\n---------------------------------------------\n\nThere is a fail in webfaction deployment, when there is no sendmail server\nrunning on localhost, only smtp server in US. For apps runned in Europe\nsending a mail from stmp.webfaction.com or running local sendmail process\ntakes >1.2 seconds that definately require asynchronous system.\n\nTo use asychronous message sending system just add this line to your django settings file::\n\n    EMAIL_BACKEND = 'webfaction.backends.EmailBackend'\n\n\nAccessing REMOTE_ADDR from django\n---------------------------------\n\nWhen a Django application’s Apache instance proxies requests to Django,\nthe REMOTE_ADDR header is not set with the clients’s IP address.\nAdding this `webfaction.middleware.WebFactionFixes` to your MIDDLEWARE_CLASSES\nreplace REMOTE_ADDR with correct client's IP.\n\nIf you use classic method to modify deployed settings by putting::\n\n    try:\n        from settings_local import *\n    except ImportError:\n        pass\n\nat the end of settings.py file, you can put this code to settings_local::\n\n    MIDDLEWARE_CLASSES = (\n       'webfaction.middleware.WebFactionFixes',\n    ) + MIDDLEWARE_CLASSES",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hovel/django-webfaction",
    "keywords": "webfaction,django",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-webfaction",
    "package_url": "https://pypi.org/project/django-webfaction/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-webfaction/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hovel/django-webfaction"
    },
    "release_url": "https://pypi.org/project/django-webfaction/2.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Collection of tools to run django on webfaction more seamless",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 791019,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7216fa951e2c081cbf9d176369b578beaa69f8fd86fc03187c27522f44217073",
        "md5": "dd2d91b0ff3607de0bb52943e87edf6e",
        "sha256": "6b86f68cc46295862d187b0078766ae280577bd0d8c7447267272c6c2946cc7c"
      },
      "downloads": -1,
      "filename": "django-webfaction-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dd2d91b0ff3607de0bb52943e87edf6e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3816,
      "upload_time": "2012-03-23T00:06:02",
      "upload_time_iso_8601": "2012-03-23T00:06:02.014498Z",
      "url": "https://files.pythonhosted.org/packages/72/16/fa951e2c081cbf9d176369b578beaa69f8fd86fc03187c27522f44217073/django-webfaction-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}