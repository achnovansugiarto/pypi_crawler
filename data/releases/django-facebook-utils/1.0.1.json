{
  "info": {
    "author": "Caio Ariede",
    "author_email": "caio.ariede@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python",
      "Topic :: Utilities"
    ],
    "description": "Django Facebook Utils\n=====================\n\n**License:** MIT\n\nThe intent of this project is to provide some very basic utilities related to Facebook.\n\nAt the moment there are only two features:\n\n* An utility that forces the update of an URL in the Facebook's share cache.\n* A Context Processor that allows you to hide Facebook [Open Graph Protocol](http://developers.facebook.com/docs/opengraphprotocol/) &lt;meta&gt; tags from other User Agents.\n\n\nInstallation\n------------\n\n`pip install django-facebook-utils`\n\nor\n\n`pip install git+http://github.com/caioariede/django-facebook-utils.git#egg=facebook_utils`\n\n\nHow to force an URL to be updated from Facebook's cache\n-------------------------------------------------------\n\n1. The `ping_facebook` command:\n\n\t`python manage.py ping_facebook http://example.com`\n\t\n\tSee below **How to extend the ping_facebook command** to fit your needs.\n\n2. Calling the `ping_facebook` shortcut:\n\n\t\tfrom facebook_utils.shortcuts import ping_facebook\n\t\t\n\t\tif ping_facebook('http://example.com'):\n\t\t\tprint('success')\n\t\telse:\n\t\t\tprint('fail')\n\t\n\tThis shortcut will only return `True` or `False`. If you need more information to debug, you can call `facebook_utils.utils.ping` or use the `ping_facebook` command with `--verbosity=2` (more verbose).\n\nDetecting Facebook requests\n---------------------------\n\n1. The `facebookexternalhit` context processor (for templates):\n\n\tAdd `facebook_utils.context_processors.facebookexternalhit` to the [TEMPLATE_CONTEXT_PROCESSOR](https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-TEMPLATE_CONTEXT_PROCESSORS) setting in `settings.py`:\n\t\n        TEMPLATE_CONTEXT_PROCESSORS = (\n            #  .. other stuff\n            'facebook_utils.context_processors.facebookexternalhit',\n        )\n\n\tIn the template:\n\t\n\t\t{% if facebookexternalhit %}\n    \t\t<meta property=\"og:title\" content=\"The Rock\"/>\n    \t\t<meta property=\"og:type\" content=\"movie\"/>\n    \t\t<meta property=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\"/>\n    \t\t<meta property=\"og:image\" content=\"http://ia.media-imdb.com/rock.jpg\"/>\n    \t{% endif %}\n\n2. The `is_facebookexternalhit` shortcut:\n\n\t\tfrom facebook_utils.shortcuts import is_facebookexternalhit\n\t\t\n\t\tdef some_view(request):\n\t\t\tif is_facebookexternalhit(request):\n\t\t\t\treturn HttpResponse('Hello, Facebook!')\n\t\t\treturn HttpResponse('Hello visitor!')\n\nHow to extend the ping_facebook command\n---------------------------------------\n\nYou can easily extend the `ping_facebook` command to fit your needs.\n\n1. First of all, [start writing your own custom command](https://docs.djangoproject.com/en/dev/howto/custom-management-commands/).\n2. Now extends the `ping_facebook` command:\n\n\t\tfrom facebook_utils.management.commands import BasePingCommand\n\t\t\n3. Finally, extend it to fit your needs:\n\n        class Command(BasePingCommand):\n            help = 'Ping some pages stored in database'\n\n            def handle(self, **options):\n                verbosity = options.get('verbosity')\n                traceback = options.get('traceback')\n                \n                for page in Page.objects.all():\n                    page_url = page.get_absolute_url()\n                    self.do_ping(page_url, verbosity, traceback)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/caioariede/django-facebook-utils/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-facebook-utils",
    "package_url": "https://pypi.org/project/django-facebook-utils/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-facebook-utils/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/caioariede/django-facebook-utils/"
    },
    "release_url": "https://pypi.org/project/django-facebook-utils/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Some Facebook utilities to use in Django projects",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 789610,
  "urls": [],
  "vulnerabilities": []
}