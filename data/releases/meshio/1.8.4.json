{
  "info": {
    "author": "Nico Schl√∂mer",
    "author_email": "nico.schloemer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "meshio\n======\n\n|Build Status| |Code Health| |codecov.io| |PyPi Version| |GitHub stars|\n\n.. figure:: https://nschloe.github.io/meshio/pp.png\n   :alt: \n\nThere are various mesh formats available for representing unstructured\nmeshes, e.g.,\n\n-  `ANSYS\n   msh <http://www.afs.enea.it/fluent/Public/Fluent-Doc/PDF/chp03.pdf>`__\n-  `DOLFIN\n   XML <http://manpages.ubuntu.com/manpages/wily/man1/dolfin-convert.1.html>`__\n-  `Exodus <https://cubit.sandia.gov/public/13.2/help_manual/WebHelp/finite_element_model/exodus/block_specification.htm>`__\n-  `H5M <https://trac.mcs.anl.gov/projects/ITAPS/wiki/MOAB/h5m>`__\n-  `Medit <https://people.sc.fsu.edu/~jburkardt/data/medit/medit.html>`__\n-  `Gmsh <http://gmsh.info/doc/texinfo/gmsh.html#File-formats>`__\n-  `OFF <http://segeval.cs.princeton.edu/public/off_format.html>`__\n-  `PERMAS <http://www.intes.de>`__\n-  `VTK <http://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf>`__\n-  `VTU <http://www.vtk.org/Wiki/VTK_XML_Formats>`__\n-  `XDMF/XDMF3 <http://www.xdmf.org/>`__\n\nmeshio can read and write all of these formats and smoothly converts\nbetween them. Simply call\n\n::\n\n    meshio-convert input.msh output.vtu\n\nwith any of the supported formats.\n\nIn Python, simply call\n\n.. code:: python\n\n    points, cells, point_data, cell_data, field_data = \\\n        meshio.read(args.infile)\n\nto read a mesh. To write, do\n\n.. code:: python\n\n    meshio.write(\n        args.outfile,\n        points,\n        cells,\n        point_data=point_data,\n        cell_data=cell_data,\n        field_data=field_data\n        )\n\nFor both input and output, you can optionally specify the exact\n``file_format`` (in case you would like to enforce binary over ASCII\nVTK, for example).\n\nInstallation\n~~~~~~~~~~~~\n\nmeshio is `available from the Python Package\nIndex <https://pypi.python.org/pypi/meshio/>`__, so simply type\n\n::\n\n    pip install -U meshio\n\nto install or upgrade.\n\nUsage\n~~~~~\n\nJust\n\n::\n\n    import meshio\n\nand make use of all the goodies the module provides.\n\nTesting\n~~~~~~~\n\nTo run the meshio unit tests, check out this repository and type\n\n::\n\n    pytest\n\nDistribution\n~~~~~~~~~~~~\n\nTo create a new release\n\n1. bump the ``__version__`` number,\n\n2. tag and upload to PyPi:\n\n   ::\n\n       make publish\n\nLicense\n~~~~~~~\n\nmeshio is published under the `MIT\nlicense <https://en.wikipedia.org/wiki/MIT_License>`__.\n\n.. |Build Status| image:: https://travis-ci.org/nschloe/meshio.svg?branch=master\n   :target: https://travis-ci.org/nschloe/meshio\n.. |Code Health| image:: https://landscape.io/github/nschloe/meshio/master/landscape.png\n   :target: https://landscape.io/github/nschloe/meshio/master\n.. |codecov.io| image:: https://codecov.io/github/nschloe/meshio/branch/master/graphs/badge.svg\n   :target: https://codecov.io/github/nschloe/meshio/branch/master\n.. |PyPi Version| image:: https://img.shields.io/pypi/v/meshio.svg\n   :target: https://pypi.python.org/pypi/meshio\n.. |GitHub stars| image:: https://img.shields.io/github/stars/nschloe/meshio.svg?style=social&label=Star&maxAge=2592000\n   :target: https://github.com/nschloe/meshio\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/meshio",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nschloe/meshio",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshio",
    "package_url": "https://pypi.org/project/meshio/",
    "platform": "any",
    "project_url": "https://pypi.org/project/meshio/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/meshio",
      "Homepage": "https://github.com/nschloe/meshio"
    },
    "release_url": "https://pypi.org/project/meshio/1.8.4/",
    "requires_dist": [
      "numpy",
      "pipdated",
      "lxml; extra == 'dolfin'",
      "h5py; extra == 'h5m'"
    ],
    "requires_python": "",
    "summary": "I/O for various mesh formats",
    "version": "1.8.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13149498,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4cf0794717ab6a3bf72589ea6aa2fb55f2f6b1976bb4c3f396658483b7f9ab75",
        "md5": "23190f22a911709d753f493e380e8662",
        "sha256": "4d1b72243f9685f2971d92c2d7cb295b0126be11bdd502014a83b11af8e78000"
      },
      "downloads": -1,
      "filename": "meshio-1.8.4-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "23190f22a911709d753f493e380e8662",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 27978,
      "upload_time": "2017-05-18T18:17:15",
      "upload_time_iso_8601": "2017-05-18T18:17:15.670774Z",
      "url": "https://files.pythonhosted.org/packages/4c/f0/794717ab6a3bf72589ea6aa2fb55f2f6b1976bb4c3f396658483b7f9ab75/meshio-1.8.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}