{
  "info": {
    "author": "Nico Schl√∂mer",
    "author_email": "nico.schloemer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# meshio\n\n[![CircleCI](https://img.shields.io/circleci/project/github/nschloe/meshio/master.svg)](https://circleci.com/gh/nschloe/meshio)\n[![codecov](https://img.shields.io/codecov/c/github/nschloe/meshio.svg)](https://codecov.io/gh/nschloe/meshio)\n[![Codacy grade](https://img.shields.io/codacy/grade/dc23fe7f7d4540b0a405110b3ae97dc6.svg)](https://app.codacy.com/app/nschloe/meshio/dashboard)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![PyPi Version](https://img.shields.io/pypi/v/meshio.svg)](https://pypi.org/project/meshio)\n[![Debian CI](https://badges.debian.net/badges/debian/testing/python3-meshio/version.svg)](https://tracker.debian.org/pkg/python-meshio)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1173115.svg)](https://doi.org/10.5281/zenodo.1173115)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/meshio.svg?logo=github&label=Stars)](https://github.com/nschloe/meshio)\n\n<p align=\"center\">\n  <img src=\"https://nschloe.github.io/meshio/meshio_logo.png\" width=\"20%\">\n</p>\n\nThere are various mesh formats available for representing unstructured meshes,\ne.g.,\n\n * [Abaqus](http://abaqus.software.polimi.it/v6.14/index.html)\n * [ANSYS msh](http://www.afs.enea.it/fluent/Public/Fluent-Doc/PDF/chp03.pdf)\n * [DOLFIN XML](http://manpages.ubuntu.com/manpages/wily/man1/dolfin-convert.1.html)\n * [Exodus](https://cubit.sandia.gov/public/13.2/help_manual/WebHelp/finite_element_model/exodus/block_specification.htm)\n * [H5M](https://www.mcs.anl.gov/~fathom/moab-docs/h5mmain.html)\n * [Medit](https://people.sc.fsu.edu/~jburkardt/data/medit/medit.html)\n * [MED/Salome](http://docs.salome-platform.org/latest/dev/MEDCoupling/med-file.html)\n * [Gmsh](http://gmsh.info/doc/texinfo/gmsh.html#File-formats)\n * [OFF](http://segeval.cs.princeton.edu/public/off_format.html)\n * [PERMAS](http://www.intes.de)\n * [STL](https://en.wikipedia.org/wiki/STL_(file_format))\n * [VTK](https://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf)\n * [VTU](https://www.vtk.org/Wiki/VTK_XML_Formats)\n * [XDMF](http://www.xdmf.org/index.php/XDMF_Model_and_Format)\n\nmeshio can read and write all of these formats and smoothly converts between\nthem. Simply call\n```\nmeshio-convert input.msh output.vtu\n```\nwith any of the supported formats.\n\nIn Python, simply call\n```python\nimport meshio\n\nmesh = meshio.read(filename)\n# mesh.points, mesh.cells, ...\n```\nto read a mesh. To write, do\n```python\npoints = numpy.array([\n    [0.0, 0.0, 0.0],\n    [0.0, 1.0, 0.0],\n    [0.0, 0.0, 1.0],\n    ])\ncells = {\n    \"triangle\": numpy.array([\n        [0, 1, 2]\n        ])\n    }\nmeshio.write_points_cells(\n    \"foo.vtk\",\n    points,\n    cells,\n    # Optionally provide extra data on points, cells, etc.\n    # point_data=point_data,\n    # cell_data=cell_data,\n    # field_data=field_data\n    )\n```\nor explicitly create a mesh object for writing\n```python\nmesh = meshio.Mesh(points, cells)\nmeshio.write(\"foo.vtk\", mesh)\n```\nFor both input and output, you can optionally specify the exact `file_format`\n(in case you would like to enforce binary over ASCII VTK, for example).\n\n### Installation\n\nmeshio is [available from the Python Package\nIndex](https://pypi.org/project/meshio/), so simply type\n```\npip install -U meshio\n```\nto install or upgrade.\n\n\n### Testing\n\nTo run the meshio unit tests, check out this repository and type\n```\npytest\n```\n\n### Distribution\n\nTo create a new release\n\n1. bump the `__version__` number,\n\n2. tag and upload to PyPi:\n    ```\n    make publish\n    ```\n\n### License\n\nmeshio is published under the [MIT license](https://en.wikipedia.org/wiki/MIT_License).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nschloe/meshio",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshio",
    "package_url": "https://pypi.org/project/meshio/",
    "platform": "any",
    "project_url": "https://pypi.org/project/meshio/",
    "project_urls": {
      "Homepage": "https://github.com/nschloe/meshio"
    },
    "release_url": "https://pypi.org/project/meshio/2.0.4/",
    "requires_dist": [
      "numpy",
      "pipdate (<0.4.0,>=0.3.0)",
      "netCDF4; extra == 'all'",
      "h5py; extra == 'all'",
      "lxml; extra == 'all'",
      "netCDF4; extra == 'exodus'",
      "h5py; extra == 'hdf5'",
      "lxml; extra == 'xml'"
    ],
    "requires_python": "",
    "summary": "I/O for various mesh formats",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13149498,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d901f7444db3522ef6b56a24665c49d1466e224d34e3e5de5e06f1939cc398f9",
        "md5": "a748e83c6ca366500eec1c39cfcb8d27",
        "sha256": "38c7858b530ec3a78daed254637618b8bb3a17086fcdcaab5615f0fd71b3d81e"
      },
      "downloads": -1,
      "filename": "meshio-2.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a748e83c6ca366500eec1c39cfcb8d27",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 51159,
      "upload_time": "2018-07-01T00:05:33",
      "upload_time_iso_8601": "2018-07-01T00:05:33.882316Z",
      "url": "https://files.pythonhosted.org/packages/d9/01/f7444db3522ef6b56a24665c49d1466e224d34e3e5de5e06f1939cc398f9/meshio-2.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f29746bc5c37c20dbac4fbb606badfb72d3a82c92aa10f81cb3638d3fb9c5e13",
        "md5": "ccd9e82cc6889d381dcb0f49900a1fec",
        "sha256": "a134298fc62372342b192afe280e3fb469e801f2f5c741f469059097e1ba8a93"
      },
      "downloads": -1,
      "filename": "meshio-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ccd9e82cc6889d381dcb0f49900a1fec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46252,
      "upload_time": "2018-07-01T00:05:35",
      "upload_time_iso_8601": "2018-07-01T00:05:35.379912Z",
      "url": "https://files.pythonhosted.org/packages/f2/97/46bc5c37c20dbac4fbb606badfb72d3a82c92aa10f81cb3638d3fb9c5e13/meshio-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}