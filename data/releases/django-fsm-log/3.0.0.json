{
  "info": {
    "author": "Gizmag",
    "author_email": "tech@gizmag.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django Finite State Machine Log\n\n[![test suite](https://github.com/gizmag/django-fsm-log/actions/workflows/test_suite.yml/badge.svg)](https://github.com/gizmag/django-fsm-log/actions/workflows/test_suite.yml)\n[![Code Health](https://landscape.io/github/gizmag/django-fsm-log/master/landscape.png)](https://landscape.io/github/gizmag/django-fsm-log/master)\n[![codecov](https://codecov.io/gh/gizmag/django-fsm-log/branch/master/graph/badge.svg)](https://codecov.io/gh/gizmag/django-fsm-log)\nAutomatic logging for the excellent [Django FSM](https://github.com/kmmbvnr/django-fsm)\npackage.\n\nLogs can be accessed before a transition occurs and before they are persisted to the database\nby enabling a cached backend. See [Advanced Usage](#advanced-usage)\n\n## Changelog\n### 3.0.0 (2022-01-14)\n - Switch to github actions (from travis-ci)\n - Test against django 3.2 and 4.0, then python 3.9 and 3.10\n - Drop support for django 1.11, 2.0, 2.1, 3.0, 3.1\n - Drop support for python 3.4, 3.5, 3.6\n - allow using StateLogManager in migrations [#95](https://github.com/gizmag/django-fsm-log/pull/95)\n\n### 2.0.1 (2020-03-26)\n - Add support for django3.0\n - Drop support for python2\n\n### 1.6.2 (2019-01-06)\n\n- Address Migration history breakage added in 1.6.1\n\n### 1.6.1 (2018-12-02)\n\n- Make StateLog.description field nullable\n\n### 1.6.0 (2018-11-14)\n\n- Add source state on transitions\n- Fixed `get_state_display` with FSMIntegerField (#63)\n- Fixed handling of transitions if target is None (#71)\n- Added `fsm_log_description` decorator (#1, #67)\n- Dropped support for Django 1.10 (#64)\n\n### 1.5.0 (2017-11-29)\n\n- cleanup deprecated code.\n- add codecov support.\n- switch to pytest.\n- add Admin integration to visualize past transitions.\n\n### 1.4.0 (2017-11-09)\n\n- Bring compatibility with Django 2.0 and drop support of unsupported versions\n  of Django: `1.6`, `1.7`, `1.9`.\n\n### Compatibility\n\n- Python 2.7 and 3.4+\n- Django 1.8+\n- Django-FSM 2+\n\n## Installation\n\nFirst, install the package with pip. This will automatically install any\ndependencies you may be missing\n\n```bash\npip install django-fsm-log\n```\n\nRegister django_fsm_log in your list of Django applications:\n\n```python\nINSTALLED_APPS = (\n    ...,\n    'django_fsm_log',\n    ...,\n)\n```\n\nThen migrate the app to create the database table\n\n```bash\npython manage.py migrate django_fsm_log\n```\n\n## Usage\n\nThe app listens for the `django_fsm.signals.post_transition` signal and\ncreates a new record for each transition.\n\nTo query the log:\n\n```python\nfrom django_fsm_log.models import StateLog\nStateLog.objects.all()\n# ...all recorded logs...\n```\n\n### Disabling logging for specific models\n\nBy default transitions get recorded for all models. Logging can be disabled for\nspecific models by adding their fully qualified name to `DJANGO_FSM_LOG_IGNORED_MODELS`.\n\n```python\nDJANGO_FSM_LOG_IGNORED_MODELS = ('poll.models.Vote',)\n```\n\n### `for_` Manager Method\n\nFor convenience there is a custom `for_` manager method to easily filter on the generic foreign key:\n\n```python\nfrom my_app.models import Article\nfrom django_fsm_log.models import StateLog\n\narticle = Article.objects.all()[0]\n\nStateLog.objects.for_(article)\n# ...logs for article...\n```\n\n### `by` Decorator\n\nWe found that our transitions are commonly called by a user, so we've added a\ndecorator to make logging this easy:\n\n```python\nfrom django.db import models\nfrom django_fsm import FSMField, transition\nfrom django_fsm_log.decorators import fsm_log_by\n\nclass Article(models.Model):\n\n    state = FSMField(default='draft', protected=True)\n\n    @fsm_log_by\n    @transition(field=state, source='draft', target='submitted')\n    def submit(self, by=None):\n        pass\n```\n\nWith this the transition gets logged when the `by` kwarg is present.\n\n```python\narticle = Article.objects.create()\narticle.submit(by=some_user) # StateLog.by will be some_user\n```\n\n### Admin integration\n\nThere is an InlineForm available that can be used to display the history of changes.\n\nTo use it expand your own `AdminModel` by adding `StateLogInline` to its inlines:\n\n```python\nfrom django.contrib import admin\nfrom django_fsm_log.admin import StateLogInline\n\n\n@admin.register(FSMModel)\nclass FSMModelAdmin(admin.ModelAdmin):\n    inlines = [StateLogInline]\n```\n\n### Advanced Usage\n\nYou can change the behaviour of this app by turning on caching for StateLog records.\nSimply add `DJANGO_FSM_LOG_STORAGE_METHOD = 'django_fsm_log.backends.CachedBackend'` to your project's settings file.\nIt will use your project's default cache backend by default. If you wish to use a specific cache backend, you can add to\nyour project's settings:\n```python\nDJANGO_FSM_LOG_CACHE_BACKEND = 'some_other_cache_backend'\n```\n\nThe StateLog object is now available after the `django_fsm.signals.pre_transition`\nsignal is fired, but is deleted from the cache and persisted to the database after `django_fsm.signals.post_transition`\nis fired.\n\nThis is useful if:\n- you need immediate access to StateLog details, and cannot wait until `django_fsm.signals.post_transition`\nhas been fired\n- at any stage, you need to verify whether or not the StateLog has been written to the database\n\nAccess to the pending StateLog record is available via the `pending_objects` manager\n\n```python\nfrom django_fsm_log.models import StateLog\narticle = Article.objects.get(...)\npending_state_log = StateLog.pending_objects.get_for_object(article)\n```\n\n## Running Tests\n\n```bash\npip install tox\ntox\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gizmag/django-fsm-log",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-fsm-log",
    "package_url": "https://pypi.org/project/django-fsm-log/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-fsm-log/",
    "project_urls": {
      "Homepage": "https://github.com/gizmag/django-fsm-log"
    },
    "release_url": "https://pypi.org/project/django-fsm-log/3.0.0/",
    "requires_dist": [
      "django (>=1.8)",
      "django-fsm (>=2)",
      "django-appconf",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'",
      "pytest-django ; extra == 'testing'",
      "pytest-mock ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Logging for django-fsm",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17429084,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6025d1f82822bff06bf8c7f5d9caf4af3629714a0da49b8aa2a01cd9125ef069",
        "md5": "ff1c5b9a076b70fe1102c1b291c0e8a7",
        "sha256": "e7f4df38a7c1913a588ae446387017da9687f895b111347a3127781cdd7ce7a7"
      },
      "downloads": -1,
      "filename": "django_fsm_log-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff1c5b9a076b70fe1102c1b291c0e8a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13552,
      "upload_time": "2022-01-14T14:18:32",
      "upload_time_iso_8601": "2022-01-14T14:18:32.106571Z",
      "url": "https://files.pythonhosted.org/packages/60/25/d1f82822bff06bf8c7f5d9caf4af3629714a0da49b8aa2a01cd9125ef069/django_fsm_log-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dbfd4e7d44a7e9afc906ebd5532d136bbb3f3bbd76a7c22beebbf268b1afadb",
        "md5": "3125bd0b7ef4d147f17f4a97328024b5",
        "sha256": "8d7b7f5b29cca5567473eba1016af8cd607b8abae1405df70c61f57ed54cd9ab"
      },
      "downloads": -1,
      "filename": "django-fsm-log-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3125bd0b7ef4d147f17f4a97328024b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13983,
      "upload_time": "2022-01-14T14:18:33",
      "upload_time_iso_8601": "2022-01-14T14:18:33.719050Z",
      "url": "https://files.pythonhosted.org/packages/5d/bf/d4e7d44a7e9afc906ebd5532d136bbb3f3bbd76a7c22beebbf268b1afadb/django-fsm-log-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}