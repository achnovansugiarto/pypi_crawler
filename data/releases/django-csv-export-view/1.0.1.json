{
  "info": {
    "author": "Ben Konrath",
    "author_email": "ben@bagu.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Utilities"
    ],
    "description": "# django-csv-export-view\n\nA Django class-based view for CSV export.\n\n[![Build Status](https://travis-ci.org/benkonrath/django-csv-export-view.svg?branch=master)](https://travis-ci.org/benkonrath/django-csv-export-view)\n\n## Features\n\n* Easy CSV exports by setting a Django `model` and a `fields` or `exclude` iterable\n* Works with existing class-based view mixins for access control\n* Generates Microsoft Excel friendly CSV by default\n* Proper HTTP headers set for CSV\n* Easy to override defaults as needed\n* Easy integration into Django Admin\n\n## Installation\n\n`pip install django-csv-export-view`\n\n## Quick Start\n\nExamples:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = ('field1', 'field2__related_field', 'property1')\n\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\nclass DataExportView(CSVExportView):\n    model = Data\n    exclude = ('id',)\n\n    def get_queryset(self):\n        queryset = super(DataExportView, self).get_queryset()\n        return queryset.exclude(deleted=True)\n\nclass DataExportView(CSVExportView):\n    model = Data\n\n    def get_fields(self, queryset):\n        fields = ['username', 'email']\n        if self.request.user.is_superuser:\n            fields.append('birth_date')\n        return fields\n```\n\n`fields` / `exclude`: An iterable of field names and properties. You cannot set both `fields` and `exclude`.\n`fields` can also be `'__all__'` to export all fields. Model properties are not included when `'__all__'` is used.\nRelated field can be used with `__`. Override `get_fields(self, queryset)` for custom behaviour not supported by the\ndefault logic.\n\n`model`: The model to use for the CSV export queryset. Override `get_queryset()` if you need a custom queryset.\n\n## Further Customization\n\nExamples:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n    header = False\n    specify_separator = False\n    filename = 'data-export.csv'\n\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\n    def get_filename(self, queryset):\n        return 'data-export-{!s}.csv'.format(timezone.now())\n```\n\n`header` - *boolean* - Default: `True`  \nWhether or not to include the header in the CSV.\n\n`filename` - *string* - Default: Dasherized version of `verbose_name_plural` from `queryset.model`.  \nOverride `get_filename(self, queryset)` if a dynamic filename is required.\n\n`specify_separator` - *boolean* - Default: `True`  \nWhether or not to include `sep=<sepaator>` as the first line of the CSV file. This is useful for generating Microsoft\nExcel friendly CSV.\n\n## CSV Writer Options\n\nExample:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\n    def get_csv_writer_fmtparams(self):\n        fmtparams = super(DataExportView, self).get_csv_writer_fmtparams()\n        fmtparams['delimiter'] = '|'\n        return fmtparams\n```\n\nOverride `get_csv_writer_fmtparams(self)` and return a dictionary of csv write format parameters. Default format\nparameters are: dialect='excel' and quoting=csv.QUOTE_ALL. See all available options in the Python docs:\n\nhttps://docs.python.org/3.6/library/csv.html#csv.writer\n\n## Django Admin Integration\n\nExample:\n```python\n@admin.register(Data)\nclass DataAdmin(admin.ModelAdmin):\n    actions = ('export_data_csv',)\n\n    def export_data_csv(self, request, queryset):\n        view = CSVExportView(queryset=queryset, fields='__all__')\n        return view.get(request)\n\n    export_data_csv.short_description = 'Export CSV for selected Data records'\n```\n\n## Contributions\n\nPull requests are happily accepted.\n\n## Alternatives\n\nhttps://github.com/django-import-export/django-import-export/\n\nhttps://github.com/mjumbewu/django-rest-framework-csv",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/benkonrath/django-csv-export-view",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-csv-export-view",
    "package_url": "https://pypi.org/project/django-csv-export-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-csv-export-view/",
    "project_urls": {
      "Homepage": "https://github.com/benkonrath/django-csv-export-view"
    },
    "release_url": "https://pypi.org/project/django-csv-export-view/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
    "summary": "Django class-based view for CSV exports",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17388610,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01586d15569b0af6ee77f2612c5ff137669906cf41ede2fec780bbeadea808c6",
        "md5": "89b83e4e2d765a4a66cd41fffe89c641",
        "sha256": "178fb2be535f0b1d146ddd8cebb2f5ec6f738b7807a5600a9a234134ab7f9e92"
      },
      "downloads": -1,
      "filename": "django_csv_export_view-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "89b83e4e2d765a4a66cd41fffe89c641",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 8989,
      "upload_time": "2019-10-24T12:22:26",
      "upload_time_iso_8601": "2019-10-24T12:22:26.004036Z",
      "url": "https://files.pythonhosted.org/packages/01/58/6d15569b0af6ee77f2612c5ff137669906cf41ede2fec780bbeadea808c6/django_csv_export_view-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a84b5f3ac9675d7a595285162c04f60c95515e626e863bda77c11162cbd1b147",
        "md5": "ef135603f7cd73c329b11042ce066a2f",
        "sha256": "a6d4da40efa0f0d44178afd20dff54ff2d44b5625c362b506ae1f9f52e568c81"
      },
      "downloads": -1,
      "filename": "django-csv-export-view-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ef135603f7cd73c329b11042ce066a2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 9852,
      "upload_time": "2019-10-24T12:14:00",
      "upload_time_iso_8601": "2019-10-24T12:14:00.705521Z",
      "url": "https://files.pythonhosted.org/packages/a8/4b/5f3ac9675d7a595285162c04f60c95515e626e863bda77c11162cbd1b147/django-csv-export-view-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}