{
  "info": {
    "author": "Ben Konrath",
    "author_email": "ben@bagu.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Utilities"
    ],
    "description": "# django-csv-export-view\n\nA Django class-based view for CSV export.\n\n[![Build Status](https://travis-ci.org/benkonrath/django-csv-export-view.svg?branch=master)](https://travis-ci.org/benkonrath/django-csv-export-view)\n\n## Features\n\n* Easy CSV exports using the familiar `model` and `fields` / `exclude` pattern\n* Works with your existing class-based view mixins for access control\n* Generates Micosoft Excel friendly CSV by default\n* Proper HTTP headers set for CSV\n* Easy to override defaults as needed\n* Easy itegration into Django Admin\n\n## Quick Start\n\nExamples:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = ('field1', 'field2__related_field', 'property1')\n\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\nclass DataExportView(CSVExportView):\n    model = Data\n    exclude = ('id',)\n\n    def get_queryset(self):\n        queryset = super(DataExportView, self).get_queryset()\n        return queryset.exclude(deleted=True)\n\nclass DataExportView(CSVExportView):\n    model = Data\n\n    def get_fields(self, queryset):\n        fields = ['username', 'email']\n        if self.request.user.is_superuser:\n            fields.append('birth_date')\n        return fields\n```\n\n`fields` / `exclude`: An interable of field names and properties. You cannot set both `fields` and `exclude`.\n`fields` can also be `'__all__'` to export all fields. Model properties are not included when `'__all__'` is used.\nRelated field can be used with `__`. Override `get_fields(self, queryset)` for custom behaviour not supported by the\ndefault logic.\n\n`model`: The model to use for the CSV export queryset. Override `get_queryset()` if you need a custom queryset.\n\n## Further Customization\n\nExamples:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n    header = False\n    specify_separator = False\n    filename = 'data-export.csv'\n\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\n    def get_filename(self, queryset):\n        return 'data-export-{!s}.csv'.format(timezone.now())\n```\n\n`header` - *boolean* - Default: `True`  \nWhether or not to include the header in the CSV.\n\n`filename` - *string* - Default: Dasherized version of `verbose_name_plural` from `queryset.model`.  \nOverride `get_filename(self, queryset)` if a dynamic filename is required.\n\n`specify_separator` - *boolean* - Default: `True`  \nWhether or not to include `sep=<sepaator>` as the first line of the CSV file. This is useful for generating Microsoft\nExcel friendly CSV.\n\n## CSV Writer Options\n\nExample:\n```python\nclass DataExportView(CSVExportView):\n    model = Data\n    fields = '__all__'\n\n    def get_csv_writer_fmtparams(self):\n        fmtparams = super(DataExportView, self).get_csv_writer_fmtparams()\n        fmtparams['delimiter'] = '|'\n        return fmtparams\n```\n\nOverride `get_csv_writer_fmtparams(self)` and return a dictionary of csv write format parameters. Default format\nparameters are: dialect='excel' and quoting=csv.QUOTE_ALL. See all available options in the Python docs:\n\nhttps://docs.python.org/3.6/library/csv.html#csv.writer\n\n## Django Admin Integration\n\nExample:\n```python\n@admin.register(Data)\nclass DataAdmin(admin.ModelAdmin):\n    actions = ('export_data_csv',)\n\n    def export_data_csv(self, request, queryset):\n        view = CSVExportView(queryset=queryset, fields='__all__')\n        return view.get(request)\n\n    export_data_csv.short_description = 'Export CSV for selected Data records'\n```\n\n## Contributions\n\nPull requests are happily accepted.\n\n## Alternatives\n\nhttps://github.com/django-import-export/django-import-export/\n\nhttps://github.com/mjumbewu/django-rest-framework-csv\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/benkonrath/django-csv-export-view",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-csv-export-view",
    "package_url": "https://pypi.org/project/django-csv-export-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-csv-export-view/",
    "project_urls": {
      "Homepage": "https://github.com/benkonrath/django-csv-export-view"
    },
    "release_url": "https://pypi.org/project/django-csv-export-view/1.0.0/",
    "requires_dist": [
      "django (>=1.11)",
      "unicodecsv; python_version < \"3.0\""
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
    "summary": "Django class-based view for CSV exports",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17388610,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "edd0aa183d2d04247b1c52e6293bbda983bffb3f7ffda54d2fc03ca025a111c9",
        "md5": "d3e0ba11851b10f7fc1a5177c1c89d27",
        "sha256": "8e6731a534c8c14283976910f2737448d30cc44ba6b369670ceacb3d94229be4"
      },
      "downloads": -1,
      "filename": "django_csv_export_view-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d3e0ba11851b10f7fc1a5177c1c89d27",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 7896,
      "upload_time": "2018-10-22T18:50:22",
      "upload_time_iso_8601": "2018-10-22T18:50:22.165345Z",
      "url": "https://files.pythonhosted.org/packages/ed/d0/aa183d2d04247b1c52e6293bbda983bffb3f7ffda54d2fc03ca025a111c9/django_csv_export_view-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbf9db660f0c1889d185810d32b8b53c45fed1bf85628095bb67b1abbb0d1edd",
        "md5": "4ec130f414b671c4c8ad89d1d193aacf",
        "sha256": "eff05b155cba3387808852d09497229e7bfe7bcb3e43b67455f38e4f342f9a9d"
      },
      "downloads": -1,
      "filename": "django-csv-export-view-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4ec130f414b671c4c8ad89d1d193aacf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 9678,
      "upload_time": "2018-10-22T18:50:23",
      "upload_time_iso_8601": "2018-10-22T18:50:23.832698Z",
      "url": "https://files.pythonhosted.org/packages/bb/f9/db660f0c1889d185810d32b8b53c45fed1bf85628095bb67b1abbb0d1edd/django-csv-export-view-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}