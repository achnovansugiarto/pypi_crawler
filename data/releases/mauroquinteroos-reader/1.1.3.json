{
  "info": {
    "author": "Mauro Quinteros",
    "author_email": "quinterosmauro0599@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Pasos para crear un paquete\n\n- [Tutorial oficial de python](https://packaging.python.org/en/latest/tutorials/packaging-projects/)\n\n- [Keywords de setuptools](https://setuptools.pypa.io/en/latest/references/keywords.html)\n\n- [Gestión de dependencias](https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#declaring-dependencies)\n\n- [Gestión de archivos de datos](https://packaging.python.org/en/latest/guides/using-manifest-in/)\n\n- [Configurar setuptools usando setup.cfg](https://setuptools.pypa.io/en/latest/userguide/declarative_config.html)\n\n### Crear el archivo pyproject.toml (si usas setuptools no es necesario crearlo)\n\npyproject.toml le dice a las herramientas de build (como pip y build) que se necesita para construir el paquete.\n\n### Configuración de la metadata del paquete\n\nExisten 2 archivos [setup.cfg](https://setuptools.pypa.io/en/latest/userguide/declarative_config.html) (estático) y setup.py (dinámico). Se puede colocar toda la metadata en el archivo setup.py a pesar de que sea metadata estática debido a que antes era la única manera de hacerlo, pero ahora se recomienda separar la metadata estática de la dinámica.\n\n### Configuración del manejo de archivos de datos\n\nAl agregar el keyword `includ_package_data` dentro del archivo setup.py, se va agregar al paquete todos los archivos de datos. Si deseamos agregar ciertos archivos se debe crear el archivo `MANIFEST.in`.\n\n### Construir el paquete\n\nInstalar el paquete de `build` con el comando `python -m pip install --upgrade build`. Una vez terminemos de configurar el archivo setup.py se ejecuta el siguiente comando `python -m build` para construir el paquete y el wheel que se subirá al repositorio.\n\n### Subir el proyecto a pypi\n\nInstalar el paquete de `twine` con el comando `pip install twine`. Ejecutamos el siguiente comando `twine check dist/*` para verificar que los archivos estén bien configurados. Finalmente ejecutamos `twine upload dist/*` para subir el paquete a pypi. Al subir este proyecto te pedirá tu usuario y contraseña, para evitar colocarlo a cada rato crea el archivo `.pypirc` con la siguiente configuración:\n\n```\n[pypi]\nusername = __token__\npassword = <PyPI token>\n```\n\n### Actualizar algún cambio en el proyecto\n\nPara actualizar un cambio en el paquete, luego de haber realizado los cambios se debe actualizar la versión del paquete. Para ello se utilizar la herramienta de `bumpversion`. Primero la instalamos `pip install bumpversion` y luego ejecutamos `bumpversion --current-version 1.0.0 minor setup.py reader/__init__.py`.\n\nFinalmente, se debe eliminar los archivos de la carpeta dist y ejecutar el comando `python -m build` nuevamente.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mauroquinteroos/mauroquinteroos-reader",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mauroquinteroos-reader",
    "package_url": "https://pypi.org/project/mauroquinteroos-reader/",
    "platform": null,
    "project_url": "https://pypi.org/project/mauroquinteroos-reader/",
    "project_urls": {
      "Docs": "https://mauroquinteroos.github.io/mauroquinteroos-reader/",
      "Homepage": "https://github.com/mauroquinteroos/mauroquinteroos-reader",
      "Issues": "https://github.com/mauroquinteroos/mauroquinteroos-reader/issues"
    },
    "release_url": "https://pypi.org/project/mauroquinteroos-reader/1.1.3/",
    "requires_dist": [
      "feedparser",
      "html2text"
    ],
    "requires_python": ">=3.6",
    "summary": "Paquete de prueba de Mauro Quinteros",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13539038,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2d6d703bbc0b66b288c9a40af026ce28488fbb900a17044b9c2fa689493a98e",
        "md5": "80b85c400b2191488d074c9e66a261d1",
        "sha256": "e3dd60d907c01f9aa734eaeb2053031dd3dc67cc083f9598900b1e9da6dbbb1e"
      },
      "downloads": -1,
      "filename": "mauroquinteroos_reader-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80b85c400b2191488d074c9e66a261d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6356,
      "upload_time": "2022-04-17T15:52:54",
      "upload_time_iso_8601": "2022-04-17T15:52:54.803368Z",
      "url": "https://files.pythonhosted.org/packages/c2/d6/d703bbc0b66b288c9a40af026ce28488fbb900a17044b9c2fa689493a98e/mauroquinteroos_reader-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd65c5e4656bf89b4752328dfb6f6095b8ebe89e4b88cfd5c74b6345d1f4ba59",
        "md5": "5e73db9b40ad94a19af62ea9062141bb",
        "sha256": "a62961767a9877df5c529b3e3a2001c6d12876a08099eced6818ee5285665187"
      },
      "downloads": -1,
      "filename": "mauroquinteroos-reader-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5e73db9b40ad94a19af62ea9062141bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6107,
      "upload_time": "2022-04-17T15:52:56",
      "upload_time_iso_8601": "2022-04-17T15:52:56.184343Z",
      "url": "https://files.pythonhosted.org/packages/dd/65/c5e4656bf89b4752328dfb6f6095b8ebe89e4b88cfd5c74b6345d1f4ba59/mauroquinteroos-reader-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}