{
  "info": {
    "author": "Behzad B. Mokhtari",
    "author_email": "behzad.public@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Internationalization"
    ],
    "description": "# Django Translations\n\n[![build](https://travis-ci.com/bbmokhtari/django-translations.svg?branch=master)](https://travis-ci.com/bbmokhtari/django-translations)\n[![python](https://img.shields.io/badge/python-3.5%7C3.6-0073b7.svg)](https://pypi.org/project/django-translations/)\n[![pypi](https://img.shields.io/badge/pypi-1.0.0-f9d35f.svg)](https://pypi.org/project/django-translations/)\n[![django](https://img.shields.io/badge/django-2.0%7C2.1-0C4B33.svg)](https://pypi.org/project/django-translations/)\n[![flake8](https://img.shields.io/badge/flake8-linted-green.svg)](https://travis-ci.com/bbmokhtari/django-translations)\n\nDjango model translation for perfectionists with deadlines.\n\n## Goal\n\nThere are two types of content, each of which has its own challenges for translation:\n\n- Static content: This is the content which is defined in the code.\n  _e.g. \"Please enter a valid email address.\"_\n\n  Django already provides a\n  [solution](https://docs.djangoproject.com/en/2.1/topics/i18n/translation/)\n  for translating static content.\n\n- Dynamic content: This is the content which is stored in the database.\n  _(We can't know it beforehand!)_\n\n  Django Translations provides a solution\n  for translating dynamic content.\n\n## Requirements\n\n- Python (\\>=3.5)\n- Django (\\>=2.0)\n\n## Installation\n\n1.  Install Django Translations using pip:\n\n    ``` bash\n    $ pip install django-translations\n    ```\n\n2.  Add `translations` to the `INSTALLED_APPS` in the settings of your\n    project:\n\n    ``` python\n    INSTALLED_APPS += [\n        'translations',\n    ]\n    ```\n\n3.  Run `migrate`:\n\n    ``` bash\n    $ python manage.py migrate\n    ```\n\n4.  Configure Django internationalization and localization settings:\n\n    ``` python\n    USE_I18N = True          # use internationalization\n    USE_L10N = True          # use localization\n\n    MIDDLEWARE += [          # locale middleware\n        'django.middleware.locale.LocaleMiddleware',\n    ]\n\n    LANGUAGE_CODE = 'en-us'  # default (fallback) language\n    LANGUAGES = (            # supported languages\n        ('en', 'English'),\n        ('en-gb', 'English (Great Britain)'),\n        ('de', 'German'),\n        ('tr', 'Turkish'),\n    )\n    ```\n\n    Please note that these settings are for Django itself.\n\n## Basic Usage\n\n### Model\n\nInherit `Translatable` in any model you want translated:\n\n``` python\nfrom translations.models import Translatable\n\nclass Continent(Translatable):\n    code = models.Charfield(...)\n    name = models.Charfield(...)\n    denonym = models.Charfield(...)\n\n    class TranslatableMeta:\n        fields = ['name', 'denonym']\n```\n\nNo migrations needed afterwards.\n\n### Admin\n\nUse the admin extensions:\n\n``` python\nfrom translations.admin import TranslatableAdmin, TranslationInline\n\nclass ContinentAdmin(TranslatableAdmin):\n    inlines = [TranslationInline,]\n```\n\nThis provides specialized translation inlines for the model.\n\n![image](https://raw.githubusercontent.com/bbmokhtari/django-translations/master/docs/_static/admin.png)\n\n## QuerySet\n\nUse the queryset extensions:\n\n``` python\n>>> from sample.models import Continent\n>>> continents = Continent.objects.all(\n... ).distinct(           # familiar distinct\n... ).probe(['en', 'de']  # probe (filter, exclude, etc.) in English and German\n... ).filter(             # familiar filtering\n...     countries__cities__name__startswith='Köln'\n... ).translate('de'      # translate the results in German\n... ).translate_related(  # translate these relations as well\n...     'countries', 'countries__cities',\n... )\n>>> print(continents)\n<TranslatableQuerySet [\n    <Continent: Europa>,\n]>\n>>> print(continents[0].countries.all())\n<TranslatableQuerySet [\n    <Country: Deutschland>,\n]>\n>>> print(continents[0].countries.all()[0].cities.all())\n<TranslatableQuerySet [\n    <City: Köln>,\n]>\n```\n\nThis provides a powerful yet familiar interface to work with the querysets.\n\n## Context\n\nUse the translation context:\n\n``` python\n>>> from translations.context import Context\n>>> from sample.models import Continent\n>>> continents = Continent.objects.all()\n>>> relations = ('countries', 'countries__cities',)\n>>> with Context(continents, *relations) as context:\n...     context.read('de')    # read the translations onto the context\n...     print(':')            # use the objects like before\n...     print(continents)\n...     print(continents[0].countries.all())\n...     print(continents[0].countries.all()[0].cities.all())\n... \n...     continents[0].countries.all()[0].name = 'Change the name'\n...     context.update('de')  # update the translations from the context\n... \n...     context.delete('de')  # delete the translations of the context\n... \n...     context.reset()       # reset the translations of the context\n...     print(':')            # use the objects like before\n...     print(continents)\n...     print(continents[0].countries.all())\n...     print(continents[0].countries.all()[0].cities.all())\n:\n<TranslatableQuerySet [\n    <Continent: Europa>,\n    <Continent: Asien>,\n]>\n<TranslatableQuerySet [\n    <Country: Deutschland>,\n]>\n<TranslatableQuerySet [\n    <City: Köln>,\n]>\n:\n<TranslatableQuerySet [\n    <Continent: Europe>,\n    <Continent: Asia>,\n]>\n<TranslatableQuerySet [\n    <Country: Germany>,\n]>\n<TranslatableQuerySet [\n    <City: Cologne>,\n]>\n```\n\nThis can CRUD the translations of any objects (instance, queryset, list) and their relations.\n\n## Documentation\n\nFor more interesting capabilities browse through the\n[documentation](http://bbmokhtari.github.io/django-translations).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bbmokhtari/django-translations",
    "keywords": "django model translation internationalization localization",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-translations",
    "package_url": "https://pypi.org/project/django-translations/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-translations/",
    "project_urls": {
      "Documentation": "https://bbmokhtari.github.io/django-translations",
      "Funding": "https://bbmokhtari.github.io/django-translations/donation.html",
      "Homepage": "https://github.com/bbmokhtari/django-translations",
      "Source": "https://github.com/bbmokhtari/django-translations",
      "Tracker": "https://github.com/bbmokhtari/django-translations/issues"
    },
    "release_url": "https://pypi.org/project/django-translations/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "Django model translation for perfectionists with deadlines.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10682139,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d29cb3aeb3c4b01ad41b284f2e9a8206e365f2bea2c0ad18f9335a06f8c1f31c",
        "md5": "c075ef158ae71938e6033d11c2a81d48",
        "sha256": "99233d47005f9f1c0cdf6442bd3e771998bfb482ec57030ae59aa9a8b2a4eb81"
      },
      "downloads": -1,
      "filename": "django_translations-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c075ef158ae71938e6033d11c2a81d48",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 23357,
      "upload_time": "2018-11-27T19:36:12",
      "upload_time_iso_8601": "2018-11-27T19:36:12.262797Z",
      "url": "https://files.pythonhosted.org/packages/d2/9c/b3aeb3c4b01ad41b284f2e9a8206e365f2bea2c0ad18f9335a06f8c1f31c/django_translations-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c773970046e76c766b13127692412bf5e272919099b44cdc986c9f6b724bb71",
        "md5": "c0a217e85738d88f7a789910cd98536a",
        "sha256": "3e0099550ce0f016199032c2afd211a53fe74e0b19af927520170cf5ee318a51"
      },
      "downloads": -1,
      "filename": "django-translations-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c0a217e85738d88f7a789910cd98536a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 14503,
      "upload_time": "2018-11-27T19:36:13",
      "upload_time_iso_8601": "2018-11-27T19:36:13.994493Z",
      "url": "https://files.pythonhosted.org/packages/5c/77/3970046e76c766b13127692412bf5e272919099b44cdc986c9f6b724bb71/django-translations-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}