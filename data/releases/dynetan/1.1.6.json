{
  "info": {
    "author": "Marcelo C. R. Melo",
    "author_email": "melomcr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Dynamical Network Analysis\n===========================\n\nThe Python implementation of Dynamical Network Analysis was bulit to provide all functionalities necessary to the analysis of Molecular Dynamics (MD) simulations using the Dynamical Network Analysis method.\n\nInstall\n-------\n\nInstall the latest version of Dynamical Network Analysis::\n\n    $ pip install dynetan\n\nFor additional details, please see `INSTALL.rst`.\n\nTutorial\n--------\n\nFor an introduction to this implementation, a jupyter notebook tutorial has been prepared and released along with its latest publication:\n\n* Generalized correlation-based dynamical network analysis: a new high-performance approach for identifying allosteric communications in molecular dynamics trajectories. J. Chem. Phys. (2020). DOI: `10.1063/5.0018980 <https://doi.org/10.1063/5.0018980>`_\n\nDocumentation\n------------------------\n\nA full documentation can be found at https://dynamical-network-analysis.readthedocs.io/en/latest/index.html\n\nResources and References\n------------------------\n\nFor the background on Dynamical Network Analysis, see the following papers that describe its development:\n\n* Generalized correlation-based dynamical network analysis: a new high-performance approach for identifying allosteric communications in molecular dynamics trajectories. J. Chem. Phys. (2020). DOI: `10.1063/5.0018980 <https://doi.org/10.1063/5.0018980>`_\n\n* Experimental and computational determination of tRNA dynamics. FEBS Letters (2010). DOI: `10.1016/j.febslet.2009.11.061 <https://doi.org/10.1016/j.febslet.2009.11.061>`_\n\n* Exit strategies for charged tRNA from GluRS. JMB (2010). DOI: `10.1016/j.jmb.2010.02.003 <https://doi.org/10.1016/j.jmb.2010.02.003>`_\n\n* Dynamical Networks in tRNA:protein complexes. PNAS (2009). DOI: `10.1073/pnas.0810961106 <https://doi.org/10.1073/pnas.0810961106>`_\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynetan",
    "package_url": "https://pypi.org/project/dynetan/",
    "platform": null,
    "project_url": "https://pypi.org/project/dynetan/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dynetan/1.1.6/",
    "requires_dist": [
      "MDAnalysis",
      "SciPy",
      "NumPy",
      "nglview",
      "colorama",
      "pandas",
      "ipywidgets",
      "networkx",
      "numba",
      "cython",
      "h5py",
      "pympler",
      "python-louvain",
      "tzlocal",
      "recommonmark"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python implementation for Dynamical Network Analysis.",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17347601,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18ca4ee8ade34384975ee13e73b1a8c6d266c5f2798c942f8f8cb8c2f2671f14",
        "md5": "470c6841e03c17858fcdabdd853df3d6",
        "sha256": "285b7e4eda36853e2c6d35dc939d761eca1f77078f40ffe326192dfc44e93bbd"
      },
      "downloads": -1,
      "filename": "dynetan-1.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "470c6841e03c17858fcdabdd853df3d6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57917,
      "upload_time": "2022-04-28T16:06:01",
      "upload_time_iso_8601": "2022-04-28T16:06:01.103489Z",
      "url": "https://files.pythonhosted.org/packages/18/ca/4ee8ade34384975ee13e73b1a8c6d266c5f2798c942f8f8cb8c2f2671f14/dynetan-1.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d574dec8d0d1a35cfe5b64c8fe09a240ba783aa8d051cc49e7cf66ce1410fb5b",
        "md5": "ee03f02a44709946254ecd4f5cec9d2a",
        "sha256": "01552d36308124e6822340c32e4017e036e3641f5730e58d1d95589531ae0867"
      },
      "downloads": -1,
      "filename": "dynetan-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ee03f02a44709946254ecd4f5cec9d2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 54536,
      "upload_time": "2022-04-28T16:06:06",
      "upload_time_iso_8601": "2022-04-28T16:06:06.303305Z",
      "url": "https://files.pythonhosted.org/packages/d5/74/dec8d0d1a35cfe5b64c8fe09a240ba783aa8d051cc49e7cf66ce1410fb5b/dynetan-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}