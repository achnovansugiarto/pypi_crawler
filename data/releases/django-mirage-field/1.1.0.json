{
  "info": {
    "author": "tcitry",
    "author_email": "tcitry@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# django-mirage-field\n\n![](https://img.shields.io/pypi/v/django-mirage-field.svg?label=django-mirage-field)\n\n## Introduce\n\nA Django model field that encrypt your data when save to and decrypt when get from database. It keeps data always encrypted in database. Base on symmetric encryption, it support query the origin text and return encrypted objects in Django.\n\n## Support\n\n* Use settings.SECRET_KEY as secret key default or anyelse which length >= 32\n* Support CharField、TextField、IntegerField、EmailField\n* Support Django ORM's `get()`、`filter()` query method\n* Use AES-256-ECB algorithm\n* Support PostgreSQL and MySQL database\n* Support Django model field `db_index` and `unique` attributes\n\n## Installation\n\n```bash\npip install django-mirage-field\n```\n\n## Usage\n\n```python\nfrom mirage import fields\nclass TestModel(models.Model):\n    phone = fields.EncryptedIntegerField()\n```\n\n```python\nobj = TestModel.objects.get(phone=18866677777)\nobj.id          # 123\nobj.phone       # 18866677777\ntype(obj.phone) # int\n```\n\n```psql\ndatabase=# select * from testmodel where id = 123;\n         id          |           phone\n---------------------+--------------------------\n 123 | -bYijegsEDrmS1s7ilnspA==\n```\n\n```python\nfrom mirage.crypto import Crypto\nc = Crypto(key=\"\")                      # key is optional, default will use settings.SECRET_KEY\nc.encrypt('18866677777')                # -bYijegsEDrmS1s7ilnspA==\nc.decrypt('-bYijegsEDrmS1s7ilnspA==')   # 18866677777\n```\n\n### Settings\n\nYou can use the `settings.SECRET_KEY` as default key, if you want custom another key for mirage, set the `MIRAGE_SECRET_KEY` in settings.\n\nMirage will get the `settings.MIRAGE_SECRET_KEY` first, if not set, mirage will get the `settings.SECRET_KEY`.\n\n\n## Model Fields\n\n1. EncryptedTextField\n2. EncryptedCharField\n3. EncryptedEmailField\n4. EncryptedIntegerField\n\n## Data Migrate\n\nAdd`mirage`to`INSTALLED_APPS`\n\n### 1. Migrations\n\nadd `app_name`,`model_name`,`field_name` in [migrations.RunPython](https://docs.djangoproject.com/en/2.2/ref/migration-operations/#runpython)\n\n```\nfrom mirage.tools import Migrator\n\nmigrations.RunPython(Migrator(\"app_name\", \"model_name\", \"field_name\").encrypt, reverse_code=Migrator(\"app_name\", 'model_name', 'field_name').decrypt),\n```\n\n### 2. Commands\n\nOptions:\n\n* --app\n* --model\n* --field\n* --method (optional: `encrypt`, `decrypt`, `encrypt_to`, `decrypt_to`, `copy_to`)\n* --tofield (need when use `encryt_to`, `decrypt_to`, `copy_to` method)\n\nOptional options:\n\n* --offset (\"select * from xxx where id > offset\")\n* --total (\"select * from xxx order by id limit total\")\n\nExamples\n\n```\n./manage.py mirage --app=yourapp --model=testmodel --field=address --method=encrypt --offset=2000000 --total=3000000\n\n./manage.py mirage --app=yourapp --model=testmodel --field=address --method=encrypt_to --tofield=encrypted_address\n\n```\n\n## Exceptions\n\n```\nfrom mirage import exceptions\n```\n\n1. EncryptedFieldException\n\n## Performance\n\nMigrate data: 6000,000 columns takes 40 minutes, Average 1 column/2.5ms\n\nOnly encrypt/decrypt: Average 1 value/ms\n\n## Clients\n\n* [Java](https://github.com/luojilab/django-mirage-field/tree/master/client/java)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luojilab/django-mirage-field",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-mirage-field",
    "package_url": "https://pypi.org/project/django-mirage-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-mirage-field/",
    "project_urls": {
      "Homepage": "https://github.com/luojilab/django-mirage-field"
    },
    "release_url": "https://pypi.org/project/django-mirage-field/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django model field that encrypt your data when save to and decrypt when get from database. It keeps data always encrypted in database.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13167561,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "195cae11b7bbee4fdd55098ac38abd2130e1ea6b195f396c6b964de0c2ddcffa",
        "md5": "ad5d20e595aee16c4379bc567f8254b2",
        "sha256": "a447618d477a7e2386db3de0c5db86cd7bc0ce8d7d7c342af137cc38312e820a"
      },
      "downloads": -1,
      "filename": "django-mirage-field-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ad5d20e595aee16c4379bc567f8254b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6195,
      "upload_time": "2020-05-09T15:25:23",
      "upload_time_iso_8601": "2020-05-09T15:25:23.504918Z",
      "url": "https://files.pythonhosted.org/packages/19/5c/ae11b7bbee4fdd55098ac38abd2130e1ea6b195f396c6b964de0c2ddcffa/django-mirage-field-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}