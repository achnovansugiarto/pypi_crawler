{
  "info": {
    "author": "Ofek Lev",
    "author_email": "ofekmeister@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "# mkpatcher\n\n`mkpatcher` is a Python-Markdown extension allowing arbitrary scripts to modify MkDocs input files.\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Raw script](#raw-script)\n  - [Scripts on filesystem](#scripts-on-filesystem)\n- [License](#license)\n\n## Installation\n\n1. `pip install mkpatcher`\n1. Include the extension in your `mkdocs.yml` config file:\n\n    ```yaml\n    ...\n    markdown_extensions:\n      - mkpatcher:\n          ...\n    ```\n\n## Usage\n\nThis extension works as a pre-processor and will allow modifying the raw lines of Markdown before any other extension runs.\n\n### Raw script\n\nThe `script` option takes arbitrary Python code and will provide the Markdown lines as a variable named `lines`.\n\nYou can modify the lines directly:\n\n```yaml\n...\nmarkdown_extensions:\n  - mkpatcher:\n      script: |\n        lines.extend(('', 'some footer', ''))\n```\n\nor you can shadow the variable:\n\n```yaml\n...\nmarkdown_extensions:\n  ...\n  - mkpatcher:\n      script: |\n        lines = ['entirely', 'new']\n        lines.append('markdown')\n```\n\n### Scripts on filesystem\n\nThe `location` option takes a path to either a single Python file or a directory containing multiple Python files.\nIf the location refers to a directory, the scripts will be loaded and eventually executed in lexicographical order\nbased on file names.\n\nEach script must define a callable object named `patch` that accepts a single parameter which will be the Markdown lines.\n\nYou can modify the lines directly:\n\n```python\ndef patch(lines):\n    lines.extend(('', 'some footer', ''))\n```\n\nor you can return new lines:\n\n```python\ndef patch(lines):\n    new_lines = ['entirely', 'new']\n    new_lines.append('markdown')\n    return new_lines\n```\n\n## License\n\n`mkpatcher` is distributed under the terms of both\n\n- [Apache License, Version 2.0](https://choosealicense.com/licenses/apache-2.0)\n- [MIT License](https://choosealicense.com/licenses/mit)\n\nat your option.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ofek/mkpatcher",
    "keywords": "markdown,extensions,mkdocs,plugins",
    "license": "Apache-2.0 OR MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mkpatcher",
    "package_url": "https://pypi.org/project/mkpatcher/",
    "platform": "",
    "project_url": "https://pypi.org/project/mkpatcher/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ofek/mkpatcher/issues",
      "Documentation": "https://github.com/ofek/mkpatcher#readme",
      "Homepage": "https://github.com/ofek/mkpatcher",
      "Source Code": "https://github.com/ofek/mkpatcher"
    },
    "release_url": "https://pypi.org/project/mkpatcher/1.0.0/",
    "requires_dist": [
      "Markdown (>=3.2.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python-Markdown extension allowing arbitrary scripts to modify MkDocs input files",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7106468,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcfca1f926a2bff4488b46da29ed201ae2cdcfc1576452f05510e7c441432630",
        "md5": "15b22fb1b437dc7627533aa57aff478b",
        "sha256": "d75e6542583dc4d17ffb2ee41f1646c5e404d137316df3082042fd157382773d"
      },
      "downloads": -1,
      "filename": "mkpatcher-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15b22fb1b437dc7627533aa57aff478b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8419,
      "upload_time": "2020-04-26T18:21:17",
      "upload_time_iso_8601": "2020-04-26T18:21:17.913883Z",
      "url": "https://files.pythonhosted.org/packages/fc/fc/a1f926a2bff4488b46da29ed201ae2cdcfc1576452f05510e7c441432630/mkpatcher-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73785af45597ee56aab6292e5e59675b69ac79bc9365f2f6a5365d4536eec779",
        "md5": "eacb56433708bc055f9c3eb0c60e60a4",
        "sha256": "40abe48f221ab51eb964f59c84c071c45c6d10964466e6e4ad7abcb743032483"
      },
      "downloads": -1,
      "filename": "mkpatcher-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eacb56433708bc055f9c3eb0c60e60a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8158,
      "upload_time": "2020-04-26T18:21:19",
      "upload_time_iso_8601": "2020-04-26T18:21:19.857291Z",
      "url": "https://files.pythonhosted.org/packages/73/78/5af45597ee56aab6292e5e59675b69ac79bc9365f2f6a5365d4536eec779/mkpatcher-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}