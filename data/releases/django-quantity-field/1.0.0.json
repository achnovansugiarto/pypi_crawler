{
  "info": {
    "author": "Evgeniy Krysanov",
    "author_email": "evgeniy.krysanov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "=====================\r\ndjango-quantity-field\r\n=====================\r\n\r\nA Django application providing model and form field\r\nto accept and store multidimensional physical quantities.\r\n\r\n\r\nRequirements\r\n============\r\n\r\nThis application depends on ``Pint`` library, used for operate\r\nand manipulate physical quantities. Full documentation is\r\navailable at http://pint.readthedocs.org/\r\n\r\n\r\nInstallation\r\n============\r\n\r\nInstall django-quantity-field using pip: ``pip install django-quantity-field``.\r\n\r\n\r\nUsage\r\n=====\r\n\r\nIn order to use a quantity field add it to your model definition::\r\n\r\n    from quantity_field import ureg\r\n    from quantity_field.fields import MultiQuantityField\r\n\r\n    class Package(models.Model):\r\n        size = MultiQuantityField(dim=3, units=(ureg.mm, ureg.cm, ureg.m))\r\n        weight = MultiQuantityField(units=(ureg.g, ureg.kg))\r\n\r\n``django-quantity-field`` comes with the custom form field that is\r\nused by default for editing in admin or in your forms.\r\n\r\nAccessing ``MultiQuantityField`` field will returns ``MultiQuantity`` object\r\nthat can be used as ordinary Pint quantities.\r\n\r\n    >>> from quantity_field.base import MultiQuantity\r\n    >>> size = MultiQuantity.from_list(2, 5.5, 4, str(ureg.m))\r\n    >>> size\r\n    <Quantity(44.0, 'meter ** 3')>\r\n    >>> size.dim\r\n    3\r\n    >>> [v for v in size]\r\n    [<Quantity(2.0, 'meter')>, <Quantity(5.5, 'meter')>, <Quantity(4.0, 'meter')>]\r\n\r\n\r\nWarning\r\n=======\r\n\r\nDon't forget there are no global units in Pint. To use Pint quantities\r\nin your project side by side with ``django-quantity-field`` use\r\nPint registry from our application.\r\n\r\n    >>> from quantity_field import ureg\r\n    >>> from quantity_field.base import MultiQuantity\r\n    >>> box = MultiQuantity.from_string('42 kg')\r\n    >>> box + 2.2 * ureg.kg\r\n    <Quantity(44.2, 'kilogram')>",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tapeit/django-quantity-field",
    "keywords": "django multiple quantity field",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-quantity-field",
    "package_url": "https://pypi.org/project/django-quantity-field/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-quantity-field/",
    "project_urls": {
      "Homepage": "https://github.com/tapeit/django-quantity-field"
    },
    "release_url": "https://pypi.org/project/django-quantity-field/1.0.0/",
    "requires_dist": [
      "Django (>=1.8)",
      "Pint"
    ],
    "requires_python": "",
    "summary": "Field for Django models that stores multidimensional physical quantities",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3324182,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22e159e8efaea647f597078615b029d0ebaf582a6d22126c38aff14cb202bd00",
        "md5": "43532bc06b181dc0a9946c16460e38a9",
        "sha256": "fcce2d6233250ddf297b8ab3474cdb06f0d0baf05a67198da76086e84e31d1c0"
      },
      "downloads": -1,
      "filename": "django_quantity_field-1.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "43532bc06b181dc0a9946c16460e38a9",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 8256,
      "upload_time": "2017-03-24T21:40:10",
      "upload_time_iso_8601": "2017-03-24T21:40:10.919862Z",
      "url": "https://files.pythonhosted.org/packages/22/e1/59e8efaea647f597078615b029d0ebaf582a6d22126c38aff14cb202bd00/django_quantity_field-1.0.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a6e95a472ce0f590fbbc91c2c9f9beea1255fe8f7cfffa9aaf56889d6d7377e",
        "md5": "65d9fc33ff37932e11678deb098285b0",
        "sha256": "5762ae5a28dfc4255873f416e5f98975bd50dfe3e3568cdcaf6876f57593dfd7"
      },
      "downloads": -1,
      "filename": "django-quantity-field-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "65d9fc33ff37932e11678deb098285b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4730,
      "upload_time": "2017-03-24T21:40:12",
      "upload_time_iso_8601": "2017-03-24T21:40:12.478115Z",
      "url": "https://files.pythonhosted.org/packages/9a/6e/95a472ce0f590fbbc91c2c9f9beea1255fe8f7cfffa9aaf56889d6d7377e/django-quantity-field-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}