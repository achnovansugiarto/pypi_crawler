{
  "info": {
    "author": "MOBIO",
    "author_email": "contact@mobio.vn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "##  Thư viện Admin SDK dành cho các module.\n\n\n### Cài đặt:\n```bash\n $ pip3 install mobio-admin-sdk\n ```\n\n### Chức năng:\n* Verify token \n\n\n### Sử dụng:\n\n##### 1. Verify token:\n   ```python\n    from mobio.sdks.admin import MobioAdminSDK\n\n    MobioAdminSDK().config(\n        admin_host=\"\",\t# admin host\n        redis_uri=\"\",\t# redis uri\n        module_use=\"\",\t# liên hệ admin để khai báo tên của module\n        module_encrypt=\"\",\t# liên hệ admin để lấy mã\n        api_admin_version=\"api/v2.1\",   # danh sách api có thể sử dụng [\"v1.0\", \"api/v2.0\", \"api/v2.1\"]\n    )\n    auth = MobioAdminSDK().create_mobio_verify_token()\n    \n    @service_mod.route(url_path, methods=[\"get\"])\n    @auth.verify_token\n    @try_catch_error\n    def get_config(merchant_id):\n        return build_response_message(Config(merchant_id).get_data())\n   ```\n\n##### 2. Merchant config:\n   ```python\n    from mobio.sdks.admin import MobioAdminSDK\n\n    MobioAdminSDK().request_get_merchant_config_host(\n            merchant_id,\n            key=None,       # key muốn lấy giá trị\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n        )\n    MobioAdminSDK().request_get_merchant_config_other(\n            merchant_id,\n            list_key=None,       # danh sách key muốn lấy giá trị\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n        )\n    MobioAdminSDK().request_check_merchant_is_brand(\n            merchant_id,\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì \n                                # không cần truyền, token_value sẽ lấy từ header của request \n        )\n    MobioAdminSDK().request_get_info_staff(\n            merchant_id,\n            account_id,\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_list_info_staff(\n            merchant_id,\n            params=None, # tham số của api  VD: {\"per_page\": -1}\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_list_parent_merchant(\n            merchant_id,\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_list_profile_group(\n            merchant_id=None,\n            params=None,\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_list_sub_brand(\n            params=None,        # tham số của api  VD: {\"merchant_id\": \"\"}\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_info_sub_brand(\n            subbrand_id=None,\n            admin_version=None, # api version admin muốn gọi trong trường hợp chỉ có version đó hỗ trợ\n            token_value=None,  # token_value dạng là Bearer hoặc Basic, nếu nơi gọi là request đã authen thì\n                                # không cần truyền, token_value sẽ lấy từ header của request\n        )\n    MobioAdminSDK().request_get_partner_info(\n            partner_key=None,\n            decrypt_data=False,\n    )   # result: { \"code\": 200, \"data\": \"\"}, {\"code\": 400, \"message\": \"key not found\"}, {\"code\": 412, \"message\": \"key not active\"}, {\"code\": 413, \"message\": \"key expire\"}\n        \n\n\n\n```\n##### 3. Save log action account:\n   ```python\n    from mobio.sdks.admin import MobioAdminSDK\n    action_account = {\n            'account_id': \"uuid\",# required\n            'action_name_vi': 'action name',# required\n            'action_name_en': 'action name',# required\n            'merchant_id': \"uuid\",# required\n            'created_time': 0129301293  # required (timestamp(utcnow))\n        }\n    MobioAdminSDK().admin_save_log_action_account(action_account)\n   ```\n#### Log - 1.0.1\n    - release sdk\n#### Log - 1.0.2\n    - Kiểm tra license server còn hạn sử dụng hay không \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mobiovn",
    "keywords": "mobio,admin sdk,verify token",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mobio-admin-sdk",
    "package_url": "https://pypi.org/project/mobio-admin-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/mobio-admin-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/mobiovn",
      "Source": "https://github.com/mobiovn"
    },
    "release_url": "https://pypi.org/project/mobio-admin-sdk/1.0.2/",
    "requires_dist": [
      "Flask",
      "m-caching",
      "m-singleton",
      "python-jose",
      "m-cipher",
      "m-kafka-sdk",
      "redis",
      "pycryptodome",
      "mobio-license-sdk"
    ],
    "requires_python": ">=3",
    "summary": "Mobio admin SDK",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17267715,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8807f2dfdcd299e27abb7eeeb94adc7fb10079dae7aa55b927e49e05f776c99f",
        "md5": "0dc765dce8e1b5b2f2de88b7be97cbee",
        "sha256": "abf23ae7102997b886424875e75e4581480eab83f9a44dff10e84a2d25221dab"
      },
      "downloads": -1,
      "filename": "mobio_admin_sdk-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0dc765dce8e1b5b2f2de88b7be97cbee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 16952,
      "upload_time": "2022-01-24T04:01:31",
      "upload_time_iso_8601": "2022-01-24T04:01:31.432630Z",
      "url": "https://files.pythonhosted.org/packages/88/07/f2dfdcd299e27abb7eeeb94adc7fb10079dae7aa55b927e49e05f776c99f/mobio_admin_sdk-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e782d6b872934126a74b311da515e8e1930e60455045c97c06351262841a9beb",
        "md5": "05678143bb2ee996888a046d44604ffe",
        "sha256": "300a605291a0497107159357ec0227eee77540a8e8a9c13dc433c3dc243f1889"
      },
      "downloads": -1,
      "filename": "mobio-admin-sdk-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "05678143bb2ee996888a046d44604ffe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 17557,
      "upload_time": "2022-01-24T04:01:33",
      "upload_time_iso_8601": "2022-01-24T04:01:33.390464Z",
      "url": "https://files.pythonhosted.org/packages/e7/82/d6b872934126a74b311da515e8e1930e60455045c97c06351262841a9beb/mobio-admin-sdk-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}