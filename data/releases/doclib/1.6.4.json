{
  "info": {
    "author": "DoctorNumberFour",
    "author_email": "miloszecket@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Microsoft",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# **DocLib**\nA chatbot library for euphoria.io.\n# Usage\n## Installation\n**WINDOWS USERS: YOU MUST [INSTALL WSL](https://docs.microsoft.com/en-us/windows/wsl/install-win10 \"A tutorial for doing so\") AND RUN THIS ON IT IN ORDER FOR IT TO WORK**\nTo install, use `pip` or `pip3`:\n```bash\npip3 install doclib\n```\nWhen beginning a new bot, import the `Bot` class:\n```python\nfrom doclib import Bot\n```\n## Basic Bots\nA basic bot will be a `Bot` object, constructed with a `nick`(the bot's name, shown in the room), a `room`(where the bot is sent by default, defaults to bots or test in debug mode), and an `owner`(your euphoria username.):\n```python\nsampleBot = Bot(nick = 'bugBot', room = 'test', owner = 'sample user')\n```\n### Other Constructor Options\n| option | default | usage |\n| ------ | ------ | ------ |\n| `password` | blank string |room password (used for private rooms)|\n| `help`| `\"[nick] is a bot made with Doctor Number Four's Python 3 bot library, DocLib (link: https://github.com/milovincent/DocLib) by @[owner].\\nIt follows botrulez and does not have a custom !help message yet.\"` | your custom !help command response. can also be set by adding a `\"^!help @[nick w/o spaces]$\"` command to your regexes|\n|`ping`| `\"Pong!\"` | your custom !ping response.|\n|`important`|`False`|if `True`, the bot will only be killable by a roomhost or the owner. **NOT RECOMMENDED FOR SIMPLE BOTS OR BOTS PRONE TO SPAM**.|\n|`killed`|`\"/me has died\"`|your custom message sent when bot is !killed.|\n|`API_timeout`|`10`|ADVANCED: number of API responses to check for command responses. You should not need to change this unless the room is particularly active.|\n|`advanced`|`False`|ADVANCED: if `True`, declares the bot as advanced, enabling the user to directly handle any API response (while still obeying botrulez)|\n|`function`|`None`|ADVANCED: specifies the universal advanced start handler function.|\n|`sendable`|`False`|If `True`, enables the bot to be sent to other rooms with the !send @bot &room command.|\n\nOnce constructed, the user should assign a regex dictionary for non-advanced use cases:\n```python\nsampleBot.set_regexes({r'^!command$' : function, r'(?i)word' : 'response'})\n```\n#### Regex Formatting\nDocLib uses the default python `re` library for regex formatting.\n\n\n## Custom Function Responses\nRegexes with a function value run the function with a `Bot` object (`chatbot`), an `AttrDict` (`msg`), and the regex `match` object (`matches`).\nFunctions can utilise any of the numerous `Bot` methods and all return the API's reply as an `AttrDict`:\n\n|Method|Parameters|Effect|\n|------|-------|-------|\n|`send_msg`|`parent` (`AttrDict` or string), `msgString` (string)|Sends `msgString` as a reply to `parent`, where `parent` can either be a string containing the message id returned by the API or an `AttrDict` with the structure of a `send-reply` generated by the API (recommended: use the `msg` parameter given to your custom function)|\n|`set_nick`|`nick` (string)|Sets the bot's name to `nick`|\n|`get_userlist`|none|returns an array of user `AttrDict`s currently in the room, including bots, accounts, and agents.|\n|`move_to`|`roomName` (string), `password` (string, default is an empty string)|Moves the bot to a different room, specified by `roomName`, and, if necessary, attempts to log into it using `password`.|\n|`restart`|none|Restarts the bot.|\n|`kill`|none|Kills the bot.|\n|`copy_to`|`roomName` (string), `password` (string, default is an empty string)| Copies the bot to &`roomName`, starting it in the background.|\n|`initiate_pm`|`id` (string), `bot` (`Bot`, default None)|Starts a PM with the user `id`, placing `bot` in said PM room if specified. Bot must be able to initiate PMs (i.e. be a host).|\n\nTo log errors and info, use `botlog` with a `message` string and the optional `error` boolean. (note: NOT a `Bot` subfunction)\n\n#### Example:\nRegex:\n```python\nsampleBot.set_regexes({'^!alive$' : alive})\n```\nFunction (defined **above bot start**)\n```python\ndef alive(chatbot, msg, matches):\n    chatbot.send_msg(parent = msg, msgString = '/me IS ALIVE!')\n    chatbot.set_nick('Thunder')\n    chatbot.send_msg(parent = msg, msgString = '/me crashes')\n    chatbot.set_nick('sampleBot')\n```\n\n## Custom Handlers\nTo set custom function handlers for any API response (when not `advanced`, this does not include `ping-event`s, `send-event`s, `error`s, or `bounce-event`s), use `set_handler`:\n```python\nsampleBot.set_handler(eventString = \"join-event\", on_join)\n```\nAll handler functions, including the universal function parameter for advanced start, are passed the API response (`msg`) as an `AttrDict` every time the corresponding event is received. Custom handlers take precedence over advanced start's universal handler.\n\n# Startup\n\nOnce the bot is set up and populated with commands, the user can connect and start it:\n```python\nsampleBot.connect()\nsampleBot.start()\n```\n\n## Advanced Usage\nUsing an `advanced` value of `True` (whether in the bot's declaration or its start function) enables the user to set a universal handler for all API events, in addition to any custom handlers:\n```python\nsampleBot.start(advanced = True, handler_function)\n```\nIf unspecified, advanced start uses a filler function that does nothing, enabling the user to use entirely custom handlers for every API response.\n# Command Line Options\nWhen running any bot in the command line, the user has access to a few options:\n\n|option|usage|\n|--|--|\n|`-t`, `--test`, `--debug`|Used to debug dev builds. Sends bot to &test instead of its default room.|\n|`--room ROOM`, `-r ROOM`|Sends bot to &ROOM instead of its default room.|\n|`--password PASSWORD`, `-p PASSWORD`|Password to use should the room be locked.|\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/DoctorNumberFour/DocLib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doclib",
    "package_url": "https://pypi.org/project/doclib/",
    "platform": "",
    "project_url": "https://pypi.org/project/doclib/",
    "project_urls": {
      "Homepage": "https://gitlab.com/DoctorNumberFour/DocLib"
    },
    "release_url": "https://pypi.org/project/doclib/1.6.4/",
    "requires_dist": [
      "websocket-client",
      "websockets",
      "attrdict"
    ],
    "requires_python": ">=3.6",
    "summary": "A chatbot library for euphoria.io.",
    "version": "1.6.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8745422,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "876c7e974e62855ba3594d84cf8402f8bcedd57ccf61ad178c104d41ec324b30",
        "md5": "56c70210120d75947888685351b667ea",
        "sha256": "30d1d055f752eb5393047ce58d23ed12b10fa6085cb455f0ef90f2e7ac5f4bcc"
      },
      "downloads": -1,
      "filename": "doclib-1.6.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "56c70210120d75947888685351b667ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23340,
      "upload_time": "2020-04-14T03:47:50",
      "upload_time_iso_8601": "2020-04-14T03:47:50.302927Z",
      "url": "https://files.pythonhosted.org/packages/87/6c/7e974e62855ba3594d84cf8402f8bcedd57ccf61ad178c104d41ec324b30/doclib-1.6.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0acf4acf982b26462782cbce3c338b9571d4e56f1ed1ac227636ddb3762b4c87",
        "md5": "da469f2557663b7be55e8c29bd2d92c4",
        "sha256": "1f13c433dbac8459136bda428029113349343b1611e62c4aa9dd76e93daa566f"
      },
      "downloads": -1,
      "filename": "doclib-1.6.4.tar.gz",
      "has_sig": false,
      "md5_digest": "da469f2557663b7be55e8c29bd2d92c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7156,
      "upload_time": "2020-04-14T03:47:51",
      "upload_time_iso_8601": "2020-04-14T03:47:51.326231Z",
      "url": "https://files.pythonhosted.org/packages/0a/cf/4acf982b26462782cbce3c338b9571d4e56f1ed1ac227636ddb3762b4c87/doclib-1.6.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}