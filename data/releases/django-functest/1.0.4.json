{
  "info": {
    "author": "Luke Plant",
    "author_email": "L.Plant.98@cantab.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============\ndjango-functest\n===============\n\n.. image:: https://travis-ci.org/django-functest/django-functest.png?branch=master\n   :target: https://travis-ci.org/django-functest/django-functest\n\n.. image:: https://coveralls.io/repos/django-functest/django-functest/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/django-functest/django-functest?branch=master\n\n.. image:: https://readthedocs.org/projects/django-functest/badge/?version=latest\n   :target: https://django-functest.readthedocs.org/en/latest/\n\n\nHelpers for creating high-level functional tests in Django, with a unified API\nfor WebTest and Selenium tests.\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-functest.readthedocs.org.\n\nInstallation\n------------\n\n::\n\n   pip install django-functest\n\nSee also the `dependencies documentation\n<http://django-functest.readthedocs.io/en/latest/installation.html#dependencies>`_\nfor important compatibility information.\n\nFeatures\n--------\n\n* A simplified API for writing functional tests in Django (tests that check the\n  behaviour of entire views, or sets of views, e.g. a checkout process).\n\n* A unified API that abstracts over both `WebTest\n  <http://webtest.pythonpaste.org/en/latest/>`_ and `Selenium\n  <https://pypi.python.org/pypi/selenium>`_ - write two tests at once!\n\n* Many of the gotchas and difficulties of using WebTest and Selenium ironed out\n  for you.\n\n* Well tested - as well as its own test suite, which is run against Firefox\n  and Chrome, it is also used by `Wolf & Badger\n  <https://www.wolfandbadger.com/>`_ for tests covering many business critical\n  functionalities.\n\nTypical usage\n-------------\n\nIn your tests.py::\n\n    from django.test import LiveServerTestCase, TestCase\n    from django_functest import FuncWebTestMixin, FuncSeleniumMixin, FuncBaseMixin\n\n    class ContactTestBase(FuncBaseMixin):\n        # Abstract class, doesn't inherit from TestCase\n\n        def test_contact_form(self):\n            self.get_url('contact_form')\n            self.fill({'#id_name': 'Joe',\n                       '#id_message': 'Hello'})\n            self.submit('input[type=submit]')\n            self.assertTextPresent(\"Thanks for your message\")\n\n     class ContactWebTest(ContactTestBase, FuncWebTestMixin, TestCase):\n         pass\n\n     class ContactSeleniumTest(ContactTestBase, FuncSeleniumMixin, LiveServerTestCase):\n         pass\n\nIn this way, you can write a single test with a high-level API, and run it in\ntwo ways - using a fast, WSGI-based method which emulates typical HTTP usage of a\nbrowser, and using a full browser that actually executes Javascript (if present)\netc.\n\nUnder the hood, the WSGI-based method uses and builds upon `WebTest\n<http://webtest.pythonpaste.org/en/latest/>`_ and `django-webtest\n<https://pypi.python.org/pypi/django-webtest>`_.\n\ndjango-functest provides its functionality as mixins, so that you can have your\nown base class for tests.\n\nContributing and tests\n----------------------\n\nSee CONTRIBUTING.rst for information about running the test suite and\ncontributing to django-functest.\n\nCredits\n-------\n\nThis library was built by developers at `Wolf & Badger\n<https://www.wolfandbadger.com/>`_, released with the kind permission of that\ncompany.\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n1.0.4\n+++++\n\n* Fixed bug with setting checkboxes if a form with multiple checkboxes of the same name\n* Enabled installation on PyPy (doesn't necessarily work completely).\n* Test against Django 2.1\n* Removed tests and official support for PhantomJS. (No actual functionality\n  was changed regarding PhantomJS).\n\n1.0.3\n+++++\n\n* Deprecated ``fill_by_id``. Instead of ``fill_by_id({'foo': 'bar'})`` you\n  should do ``fill({'#foo': 'bar'})``, because it is shorter and more flexible.\n* Test against latest Firefox\n* Django 2.0 compatibility\n* Fix for Django 1.11.2 and later for MultiThreadedLiveServerMixin\n\n1.0.2\n+++++\n\n* Fixes to cope with WebTest 2.0.28. We now require django-webtest 1.9.2 or\n  later, and only test against the latest WebTest.\n* Fixed some deprecation warnings\n\n1.0.1\n+++++\n\n* Fixed incompatibility with django-webtest 1.9.0 and later\n\n1.0\n+++\n\n* Added Django 1.11 support.\n* Dropped official Django 1.7 support (may still work).\n\n0.2.1\n+++++\n\n* Made :meth:`~django_functest.FuncCommonApi.get_literal_url` accept\n  absolute URLs for Selenium (WebTest already worked by accident).\n\n0.2.0\n+++++\n\n* Added :meth:`~django_functest.FuncCommonApi.new_browser_session` and\n  :meth:`~django_functest.FuncCommonApi.switch_browser_session` to the common\n  API. These can be used to simulate multiple devices or users accessing the\n  site. See the docs for important usage information.\n\n0.1.9\n+++++\n\n* Fix for scrolling to exactly the right place.\n* Added docstrings everywhere, and a base class you can inherit from\n  for the purpose of providing autocomplete help.\n\n0.1.8\n+++++\n\n* Django 1.10 compatibility\n\n0.1.7\n+++++\n\n* Fixed performance/reliability issue caused by browsers attempting\n  to retrieve ``/favicon.ico`` after visiting ``emptypage``.\n\n0.1.6\n+++++\n\n* Fixed bug where elements wouldn't scroll into view if html height is set to\n  100%\n* New method :meth:`~django_functest.FuncSeleniumMixin.get_webdriver_options`\n  for customizing WebDriver behaviour.\n\n0.1.5\n+++++\n\n* Added get_session_data()\n* Improved reliability of ``FuncSeleniumMixin.get_literal_url()``\n* Allow ``<select>`` elements to be set using integers for values.\n* Fixed issues with ``.value()`` for radio buttons and text areas\n* Fixed bug with setting radio buttons when there are more than\n  one set of radio buttons in the form.\n\n0.1.4\n+++++\n\n* Added support for file uploads\n\n0.1.3\n+++++\n\n* Support for filling radio buttons\n* More convenient support for quotes and apostrophes (\" ') in text assertion methods.\n\n0.1.2\n+++++\n\n* Fixed wheel building - again!\n\n0.1.1\n+++++\n\n* Fixed packaging bug that caused wheels to fail on Python 3.\n\n0.1.0\n+++++\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/django-functest/django-functest",
    "keywords": "django-functest",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-functest",
    "package_url": "https://pypi.org/project/django-functest/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-functest/",
    "project_urls": {
      "Homepage": "https://github.com/django-functest/django-functest"
    },
    "release_url": "https://pypi.org/project/django-functest/1.0.4/",
    "requires_dist": [
      "Django (>=1.8)",
      "PyVirtualDisplay (>=0.1.4)",
      "django-webtest (>=1.9.2)",
      "faulthandler (>=2.4)",
      "furl (>=0.4.9)",
      "pyquery (>=1.2.10)",
      "selenium (>=2.48.0)",
      "six (>=1.10.0)"
    ],
    "requires_python": "",
    "summary": "Helpers for creating functional tests in Django, with a unified API for WebTest and Selenium tests.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16300825,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91d9f9b651f76684ec3b26643bf517fd4562a3b8c94f27dea7cc68a31365cbfc",
        "md5": "5aab66bfc3e53a83afc7afc2a4533268",
        "sha256": "6c0f68d5ca9d30eb9654914abe38cb509b68f5d7cd285e23695b299d78218774"
      },
      "downloads": -1,
      "filename": "django_functest-1.0.4-cp2-none-any.whl",
      "has_sig": false,
      "md5_digest": "5aab66bfc3e53a83afc7afc2a4533268",
      "packagetype": "bdist_wheel",
      "python_version": "cp2",
      "requires_python": null,
      "size": 39152,
      "upload_time": "2018-10-29T11:27:00",
      "upload_time_iso_8601": "2018-10-29T11:27:00.299703Z",
      "url": "https://files.pythonhosted.org/packages/91/d9/f9b651f76684ec3b26643bf517fd4562a3b8c94f27dea7cc68a31365cbfc/django_functest-1.0.4-cp2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8016af06033d50d3160cb43f83378c2c5df78641b64a636442cafb1de43b55d6",
        "md5": "1b2b55b910165afa03fa098c465921fe",
        "sha256": "dcae050f363672eadd28230713c182586cc3dae06f345b7050f8468622754698"
      },
      "downloads": -1,
      "filename": "django_functest-1.0.4-cp3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b2b55b910165afa03fa098c465921fe",
      "packagetype": "bdist_wheel",
      "python_version": "cp3",
      "requires_python": null,
      "size": 39130,
      "upload_time": "2018-10-29T11:27:02",
      "upload_time_iso_8601": "2018-10-29T11:27:02.568113Z",
      "url": "https://files.pythonhosted.org/packages/80/16/af06033d50d3160cb43f83378c2c5df78641b64a636442cafb1de43b55d6/django_functest-1.0.4-cp3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64ea3c428d63bfabe44a2bf82c7321a7a4259c7dfeff3b89209fd931522077c7",
        "md5": "84562dbb45f1c28e1e2cfd1719d7cf2d",
        "sha256": "9d801333a6a6ba0eff4fca182e351902b379eff9e42598f0cef37ace6eb848e0"
      },
      "downloads": -1,
      "filename": "django_functest-1.0.4-pp-none-any.whl",
      "has_sig": false,
      "md5_digest": "84562dbb45f1c28e1e2cfd1719d7cf2d",
      "packagetype": "bdist_wheel",
      "python_version": "pp",
      "requires_python": null,
      "size": 36934,
      "upload_time": "2018-10-29T11:27:04",
      "upload_time_iso_8601": "2018-10-29T11:27:04.326663Z",
      "url": "https://files.pythonhosted.org/packages/64/ea/3c428d63bfabe44a2bf82c7321a7a4259c7dfeff3b89209fd931522077c7/django_functest-1.0.4-pp-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05e6681a2df679c59dddd8241bed10e94ff8879ba095b2d0232c45d041b1f0db",
        "md5": "519eca52660ce893c6119874c2be8d47",
        "sha256": "a7aabdbc35ca814f257cab0c3a3868e676487490db6e126745ae93494eeeb8b2"
      },
      "downloads": -1,
      "filename": "django-functest-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "519eca52660ce893c6119874c2be8d47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51223,
      "upload_time": "2018-10-29T11:27:06",
      "upload_time_iso_8601": "2018-10-29T11:27:06.058377Z",
      "url": "https://files.pythonhosted.org/packages/05/e6/681a2df679c59dddd8241bed10e94ff8879ba095b2d0232c45d041b1f0db/django-functest-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}