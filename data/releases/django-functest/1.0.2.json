{
  "info": {
    "author": "Luke Plant",
    "author_email": "L.Plant.98@cantab.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============\ndjango-functest\n===============\n\n.. image:: https://travis-ci.org/django-functest/django-functest.png?branch=master\n   :target: https://travis-ci.org/django-functest/django-functest\n\n.. image:: https://coveralls.io/repos/django-functest/django-functest/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/django-functest/django-functest?branch=master\n\n.. image:: https://readthedocs.org/projects/pip/badge/?version=latest\n   :target: https://django-functest.readthedocs.org/en/latest/\n\n\nHelpers for creating high-level functional tests in Django, with a unified API\nfor WebTest and Selenium tests.\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-functest.readthedocs.org.\n\nInstallation\n------------\n\n::\n\n   pip install django-functest\n\nSee also the `dependencies documentation\n<http://django-functest.readthedocs.io/en/latest/installation.html#dependencies>`_\nfor important compatibility information.\n\nFeatures\n--------\n\n* A simplified API for writing functional tests in Django (tests that check the\n  behaviour of entire views, or sets of views, e.g. a checkout process).\n\n* A unified API that abstracts over both `WebTest\n  <http://webtest.pythonpaste.org/en/latest/>`_ and `Selenium\n  <https://pypi.python.org/pypi/selenium>`_ - write two tests at once!\n\n* Many of the gotchas and difficulties of using WebTest and Selenium ironed out\n  for you.\n\n* Well tested - as well as its own test suite, which is run against Firefox,\n  Chrome, and PhantomJS, it is also used by `Wolf & Badger\n  <https://www.wolfandbadger.com/>`_ for tests covering many business critical\n  functionalities.\n\nTypical usage\n-------------\n\nIn your tests.py::\n\n    from django.test import LiveServerTestCase, TestCase\n    from django_functest import FuncWebTestMixin, FuncSeleniumMixin, FuncBaseMixin\n\n    class ContactTestBase(FuncBaseMixin):\n        # Abstract class, doesn't inherit from TestCase\n\n        def test_contact_form(self):\n            self.get_url('contact_form')\n            self.fill({'#id_name': 'Joe',\n                       '#id_message': 'Hello'})\n            self.submit('input[type=submit]')\n            self.assertTextPresent(\"Thanks for your message\")\n\n     class ContactWebTest(ContactTestBase, FuncWebTestMixin, TestCase):\n         pass\n\n     class ContactSeleniumTest(ContactTestBase, FuncSeleniumMixin, LiveServerTestCase):\n         pass\n\nIn this way, you can write a single test with a high-level API, and run it in\ntwo way - using a fast, WSGI-based method which emulates typical HTTP usage of a\nbrowser, and using a full browser that actually executes Javascript (if present)\netc.\n\nUnder the hood, the WSGI-based method uses and builds upon `WebTest\n<http://webtest.pythonpaste.org/en/latest/>`_ and `django-webtest\n<https://pypi.python.org/pypi/django-webtest>`_.\n\ndjango-functest provides its functionality as mixins, so that you can have your\nown base class for tests.\n\n\nRunning Tests\n--------------\n\nTo run the tests::\n\n  source <YOURVIRTUALENV>/bin/activate\n  (myenv) $ ./setup.py develop\n  (myenv) $ ./runtests.py\n\nOr, to run on all environments::\n\n  pip install tox\n  tox\n\n\nFirefox tests are currently failing due to incompatibilities with recent\nFirefox versions (>= 47) and all published versions of Selenium (< 3.0).\n\nThis can be worked around by downloading an old version of Firefox from\nhttps://www.mozilla.org/en-US/firefox/organizations/all/ and\nusing ``runtests.py --firefox-binary=...``, or, in the case of using tox::\n\n    TEST_FIREFOX_BINARY=... tox\n\n\nCredits\n-------\n\nThis library was built by developers at `Wolf & Badger\n<https://www.wolfandbadger.com/>`_, released with the kind permission of that\ncompany.\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n1.0.2\n+++++\n\n* Fixes to cope with WebTest 2.0.28. We now require django-webtest 1.9.2 or\n  later, and only test against the latest WebTest.\n* Fixed some deprecation warnings\n\n1.0.1\n+++++\n\n* Fixed incompatibility with django-webtest 1.9.0 and later\n\n1.0\n+++\n\n* Added Django 1.11 support.\n* Dropped official Django 1.7 support (may still work).\n\n0.2.1\n+++++\n\n* Made :meth:`~django_functest.FuncCommonApi.get_literal_url` accept\n  absolute URLs for Selenium (WebTest already worked by accident).\n\n0.2.0\n+++++\n\n* Added :meth:`~django_functest.FuncCommonApi.new_browser_session` and\n  :meth:`~django_functest.FuncCommonApi.switch_browser_session` to the common\n  API. These can be used to simulate multiple devices or users accessing the\n  site. See the docs for important usage information.\n\n0.1.9\n+++++\n\n* Fix for scrolling to exactly the right place.\n* Added docstrings everywhere, and a base class you can inherit from\n  for the purpose of providing autocomplete help.\n\n0.1.8\n+++++\n\n* Django 1.10 compatibility\n\n0.1.7\n+++++\n\n* Fixed performance/reliability issue caused by browsers attempting\n  to retrieve ``/favicon.ico`` after visiting ``emptypage``.\n\n0.1.6\n+++++\n\n* Fixed bug where elements wouldn't scroll into view if html height is set to\n  100%\n* New method :meth:`~django_functest.FuncSeleniumMixin.get_webdriver_options`\n  for customizing WebDriver behaviour.\n\n0.1.5\n+++++\n\n* Added get_session_data()\n* Improved reliability of ``FuncSeleniumMixin.get_literal_url()``\n* Allow ``<select>`` elements to be set using integers for values.\n* Fixed issues with ``.value()`` for radio buttons and text areas\n* Fixed bug with setting radio buttons when there are more than\n  one set of radio buttons in the form.\n\n0.1.4\n+++++\n\n* Added support for file uploads\n\n0.1.3\n+++++\n\n* Support for filling radio buttons\n* More convenient support for quotes and apostrophes (\" ') in text assertion methods.\n\n0.1.2\n+++++\n\n* Fixed wheel building - again!\n\n0.1.1\n+++++\n\n* Fixed packaging bug that caused wheels to fail on Python 3.\n\n0.1.0\n+++++\n\n* First release on PyPI.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/django-functest/django-functest",
    "keywords": "django-functest",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-functest",
    "package_url": "https://pypi.org/project/django-functest/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-functest/",
    "project_urls": {
      "Homepage": "https://github.com/django-functest/django-functest"
    },
    "release_url": "https://pypi.org/project/django-functest/1.0.2/",
    "requires_dist": [
      "django-webtest (>=1.9.2)",
      "selenium (<3,>=2.48.0)",
      "PyVirtualDisplay (>=0.1.4)",
      "six (>=1.10.0)",
      "furl (>=0.4.9)",
      "pyquery (>=1.2.10)",
      "Django (>=1.8)",
      "faulthandler (>=2.4)"
    ],
    "requires_python": "",
    "summary": "Helpers for creating functional tests in Django, with a unified API for WebTest and Selenium tests.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16300825,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31b3466ba00cc507966fcb20f959aed77a9f2fda6ba68ef750e14fbd232db958",
        "md5": "6c863fa4eab06e8e9cefdcd73b5a5c18",
        "sha256": "6ef2a1d7f1f62ea3919ccb0484e30a941ca9b147fd3e06a54a5784c84ee5766f"
      },
      "downloads": -1,
      "filename": "django_functest-1.0.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c863fa4eab06e8e9cefdcd73b5a5c18",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 38539,
      "upload_time": "2017-08-16T17:52:25",
      "upload_time_iso_8601": "2017-08-16T17:52:25.988176Z",
      "url": "https://files.pythonhosted.org/packages/31/b3/466ba00cc507966fcb20f959aed77a9f2fda6ba68ef750e14fbd232db958/django_functest-1.0.2-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4548bd3061cc0031008ffea9ac7f2c36588a32e5a0c1a5d2861e1102fab519c",
        "md5": "70dec4ffb37ed5b3525f0d958b284437",
        "sha256": "b9bbbf61f0c07cc2b579ca3df2373da7045575223b72de2703a24fc023ac00ca"
      },
      "downloads": -1,
      "filename": "django_functest-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70dec4ffb37ed5b3525f0d958b284437",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38513,
      "upload_time": "2017-08-16T17:52:28",
      "upload_time_iso_8601": "2017-08-16T17:52:28.469032Z",
      "url": "https://files.pythonhosted.org/packages/a4/54/8bd3061cc0031008ffea9ac7f2c36588a32e5a0c1a5d2861e1102fab519c/django_functest-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e71d967cf0177e0eed522b972cb67a1fa2ffa12df0aa0db7fc0b7db81f971980",
        "md5": "f213b27433bf7de090204ff901f5e58f",
        "sha256": "feffb23c8c2bad43fcd6635e9b23bb666aca403492a9ca5037300864ebfd3acf"
      },
      "downloads": -1,
      "filename": "django-functest-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f213b27433bf7de090204ff901f5e58f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49703,
      "upload_time": "2017-08-16T17:52:31",
      "upload_time_iso_8601": "2017-08-16T17:52:31.910043Z",
      "url": "https://files.pythonhosted.org/packages/e7/1d/967cf0177e0eed522b972cb67a1fa2ffa12df0aa0db7fc0b7db81f971980/django-functest-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}