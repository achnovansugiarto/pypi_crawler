{
  "info": {
    "author": "Luke Plant",
    "author_email": "L.Plant.98@cantab.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============\ndjango-functest\n===============\n\n.. image:: https://travis-ci.org/django-functest/django-functest.png?branch=master\n   :target: https://travis-ci.org/django-functest/django-functest\n\n.. image:: https://coveralls.io/repos/django-functest/django-functest/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/django-functest/django-functest?branch=master\n\n.. image:: https://readthedocs.org/projects/pip/badge/?version=latest\n   :target: https://django-functest.readthedocs.org/en/latest/\n\n\nHelpers for creating high-level functional tests in Django, with a unified API\nfor WebTest and Selenium tests.\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-functest.readthedocs.org.\n\nInstallation\n------------\n\n::\n\n   pip install django-functest\n\nSee also the `dependencies documentation\n<http://django-functest.readthedocs.io/en/latest/installation.html#dependencies>`_\nfor important compatibility information.\n\nFeatures\n--------\n\n* A simplified API for writing functional tests in Django (tests that check the\n  behaviour of entire views, or sets of views, e.g. a checkout process).\n\n* A unified API that abstracts over both `WebTest\n  <http://webtest.pythonpaste.org/en/latest/>`_ and `Selenium\n  <https://pypi.python.org/pypi/selenium>`_ - write two tests at once!\n\n* Many of the gotchas and difficulties of using WebTest and Selenium ironed out\n  for you.\n\n* Well tested - as well as its own test suite, which is run against Firefox,\n  Chrome, and PhantomJS, it is also used by `Wolf & Badger\n  <https://www.wolfandbadger.com/>`_ for tests covering many business critical\n  functionalities.\n\nTypical usage\n-------------\n\nIn your tests.py::\n\n    from django.test import LiveServerTestCase, TestCase\n    from django_functest import FuncWebTestMixin, FuncSeleniumMixin, FuncBaseMixin\n\n    class ContactTestBase(FuncBaseMixin):\n        # Abstract class, doesn't inherit from TestCase\n\n        def test_contact_form(self):\n            self.get_url('contact_form')\n            self.fill({'#id_name': 'Joe',\n                       '#id_message': 'Hello'})\n            self.submit('input[type=submit]')\n            self.assertTextPresent(\"Thanks for your message\")\n\n     class ContactWebTest(ContactTestBase, FuncWebTestMixin, TestCase):\n         pass\n\n     class ContactSeleniumTest(ContactTestBase, FuncSeleniumMixin, LiveServerTestCase):\n         pass\n\nIn this way, you can write a single test with a high-level API, and run it in\ntwo way - using a fast, WSGI-based method which emulates typical HTTP usage of a\nbrowser, and using a full browser that actually executes Javascript (if present)\netc.\n\nUnder the hood, the WSGI-based method uses and builds upon `WebTest\n<http://webtest.pythonpaste.org/en/latest/>`_ and `django-webtest\n<https://pypi.python.org/pypi/django-webtest>`_.\n\ndjango-functest provides its functionality as mixins, so that you can have your\nown base class for tests.\n\n\nRunning Tests\n--------------\n\nTo run the tests::\n\n  source <YOURVIRTUALENV>/bin/activate\n  (myenv) $ ./setup.py develop\n  (myenv) $ ./runtests.py\n\nOr, to run on all environments::\n\n  pip install tox\n  tox\n\n\nFirefox tests are currently failing due to incompatibilities with recent\nFirefox versions (>= 47) and all published versions of Selenium (< 3.0).\n\nThis can be worked around by downloading an old version of Firefox from\nhttps://www.mozilla.org/en-US/firefox/organizations/all/ and\nusing ``runtests.py --firefox-binary=...``, or, in the case of using tox::\n\n    TEST_FIREFOX_BINARY=... tox\n\n\nCredits\n-------\n\nThis library was built by developers at `Wolf & Badger\n<https://www.wolfandbadger.com/>`_, released with the kind permission of that\ncompany.\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n1.0\n+++\n\n* Added Django 1.11 support.\n* Dropped official Django 1.7 support (may still work).\n\n0.2.1\n+++++\n\n* Made :meth:`~django_functest.FuncCommonApi.get_literal_url` accept\n  absolute URLs for Selenium (WebTest already worked by accident).\n\n0.2.0\n+++++\n\n* Added :meth:`~django_functest.FuncCommonApi.new_browser_session` and\n  :meth:`~django_functest.FuncCommonApi.switch_browser_session` to the common\n  API. These can be used to simulate multiple devices or users accessing the\n  site. See the docs for important usage information.\n\n0.1.9\n+++++\n\n* Fix for scrolling to exactly the right place.\n* Added docstrings everywhere, and a base class you can inherit from\n  for the purpose of providing autocomplete help.\n\n0.1.8\n+++++\n\n* Django 1.10 compatibility\n\n0.1.7\n+++++\n\n* Fixed performance/reliability issue caused by browsers attempting\n  to retrieve ``/favicon.ico`` after visiting ``emptypage``.\n\n0.1.6\n+++++\n\n* Fixed bug where elements wouldn't scroll into view if html height is set to\n  100%\n* New method :meth:`~django_functest.FuncSeleniumMixin.get_webdriver_options`\n  for customizing WebDriver behaviour.\n\n0.1.5\n+++++\n\n* Added get_session_data()\n* Improved reliability of ``FuncSeleniumMixin.get_literal_url()``\n* Allow ``<select>`` elements to be set using integers for values.\n* Fixed issues with ``.value()`` for radio buttons and text areas\n* Fixed bug with setting radio buttons when there are more than\n  one set of radio buttons in the form.\n\n0.1.4\n+++++\n\n* Added support for file uploads\n\n0.1.3\n+++++\n\n* Support for filling radio buttons\n* More convenient support for quotes and apostrophes (\" ') in text assertion methods.\n\n0.1.2\n+++++\n\n* Fixed wheel building - again!\n\n0.1.1\n+++++\n\n* Fixed packaging bug that caused wheels to fail on Python 3.\n\n0.1.0\n+++++\n\n* First release on PyPI.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/django-functest/django-functest",
    "keywords": "django-functest",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-functest",
    "package_url": "https://pypi.org/project/django-functest/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-functest/",
    "project_urls": {
      "Homepage": "https://github.com/django-functest/django-functest"
    },
    "release_url": "https://pypi.org/project/django-functest/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Helpers for creating functional tests in Django, with a unified API for WebTest and Selenium tests.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16300825,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7bd98496984143a62c18f3b06269db598fbd969848206772e31aa39578ee798d",
        "md5": "d2770b4d988f7857c21db191495a78be",
        "sha256": "e8c4ce0766f690104c6108c7f3292e7ef7852f88dfbad71cec116e85f21e7794"
      },
      "downloads": -1,
      "filename": "django_functest-1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2770b4d988f7857c21db191495a78be",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 38390,
      "upload_time": "2017-05-01T05:22:39",
      "upload_time_iso_8601": "2017-05-01T05:22:39.139057Z",
      "url": "https://files.pythonhosted.org/packages/7b/d9/8496984143a62c18f3b06269db598fbd969848206772e31aa39578ee798d/django_functest-1.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59049847b27ff8333ad57e7559c92de87b3fdc30a414eb4e438fccb276e01455",
        "md5": "e5cc7c83f9f439c8db7c6eed17cd67cd",
        "sha256": "b119f479b1a73b4054815e96804d9e61ac52d003c32c6902546a973da8fe536e"
      },
      "downloads": -1,
      "filename": "django_functest-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5cc7c83f9f439c8db7c6eed17cd67cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38356,
      "upload_time": "2017-05-01T05:23:07",
      "upload_time_iso_8601": "2017-05-01T05:23:07.380887Z",
      "url": "https://files.pythonhosted.org/packages/59/04/9847b27ff8333ad57e7559c92de87b3fdc30a414eb4e438fccb276e01455/django_functest-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf3fa4e82ad3f9c74589d1897b4a167e1712e50554d2bbf4975c053f5baff136",
        "md5": "d80d84843a2c826b424a7b4f4091d1cf",
        "sha256": "1b7558bd14aba942c589a93d63ff6bb32e6ccf9105ce52c3b932144fdf0d7b00"
      },
      "downloads": -1,
      "filename": "django-functest-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d80d84843a2c826b424a7b4f4091d1cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49397,
      "upload_time": "2017-05-01T05:22:29",
      "upload_time_iso_8601": "2017-05-01T05:22:29.351631Z",
      "url": "https://files.pythonhosted.org/packages/cf/3f/a4e82ad3f9c74589d1897b4a167e1712e50554d2bbf4975c053f5baff136/django-functest-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}