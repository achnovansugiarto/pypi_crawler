{
  "info": {
    "author": "Autumn Valenta",
    "author_email": "avalenta@pivotalenergysolutions.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "# Datatable View\n\nThis package is used in conjunction with the jQuery plugin [DataTables](http://datatables.net/), and supports state-saving detection with [fnSetFilteringDelay](http://datatables.net/plug-ins/api).  The package consists of a class-based view, and a small collection of utilities for rendering table data from models.\n\n[![PyPI Downloads][pypi-dl-image]][pypi-dl-link]\n[![PyPI Version][pypi-v-image]][pypi-v-link]\n[![Build Status][travis-image]][travis-link]\n[![Documentation Status][rtfd-image]][rtfd-link]\n\n[pypi-dl-link]: https://pypi.python.org/pypi/django-datatable-view\n[pypi-dl-image]: https://img.shields.io/pypi/dm/django-datatable-view.png\n[pypi-v-link]: https://pypi.python.org/pypi/django-datatable-view\n[pypi-v-image]: https://img.shields.io/pypi/v/django-datatable-view.png\n[travis-link]: https://travis-ci.org/pivotal-energy-solutions/django-datatable-view\n[travis-image]: https://travis-ci.org/pivotal-energy-solutions/django-datatable-view.svg?branch=traviscl\n[rtfd-link]: http://django-datatable-view.readthedocs.org/en/latest/?badge=latest\n[rtfd-image]: https://readthedocs.org/projects/django-datatable-view/badge/?version=latest\n\nDependencies:\n\n* Python 3.8 or later\n* [Django](http://www.djangoproject.com/) >= 2.2\n* [dateutil](http://labix.org/python-dateutil) library for flexible, fault-tolerant date parsing.\n* [jQuery](https://jquery.com/) >= 2\n* [dataTables.js](https://datatables.net/) >= 1.10\n\n# Getting Started\n\nInstall the package:\n\n```bash\npip install django-datatable-view\n```\n\nAdd to ``INSTALLED_APPS`` (so default templates and js can be discovered), and use the ``DatatableView`` like a Django ``ListView``:\n\n```python\n# settings.py\nINSTALLED_APPS = [\n    'datatableview',\n    # ...\n]\n\n\n# views.py\nfrom datatableview.views import DatatableView\nclass ZeroConfigurationDatatableView(DatatableView):\n    model = MyModel\n```\n\nUse the ``{{ datatable }}`` provided in the template context to render the table and initialize from server ajax:\n\n```html\n<!-- myapp/mymodel_list.html -->\n\n<!-- Load dependencies -->\n<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n        integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n        crossorigin=\"anonymous\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css\">\n<script type=\"text/javascript\" charset=\"utf8\" src=\"https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js\"></script>\n\n<!-- Load js for initializing tables via their server-side options -->\n<script type=\"text/javascript\" charset=\"utf8\" src=\"{% static 'js/datatableview.js' %}\"></script>\n<script type=\"text/javascript\">\n    $(function(){\n        datatableview.initialize($('.datatable'));\n    });\n</script>\n\n<!-- Render the table skeleton, includes the .datatable class for the on-ready initializer. -->\n{{ datatable }}\n```\n\n# Features at a glance\n\n* ``DatatableView``, a drop-in replacement for ``ListView`` that allows options to be specified for the datatable that will be rendered on the page.\n* ``MultipleDatatableView`` for configurating multiple Datatable specifications on a single view\n* ``ModelForm``-like declarative table design.\n* Support for ``ValuesQuerySet`` execution mode instead of object instances\n* Queryset caching between requests\n* Customizable table headers\n* Compound columns (columns representing more than one model field)\n* Columns backed by methods or callbacks instead of model fields\n* Easy related fields\n* Automatic search and sort support\n* Total control over cell contents (HTML, processing of raw values)\n* Search data fields that aren't present on the table\n* Support for DT_RowData\n* Customization hook for full JSON response object\n* Drop-in x-editable support, per-column\n* Customizable table templates\n* Easy Bootstrap integration\n* Allows all normal dataTables.js and x-editable Javascript options\n* Small library of common column markup processors\n* Full test suite\n\n# Documentation and Live Demos\nRead the module documentation at http://django-datatable-view.readthedocs.org.\n\nA public live demo server is in the works.  For version 0.8, we will continue to keep the live demo site alive at http://django-datatable-view.appspot.com/  Please note that 0.8 does not reflect the current state or direction of the project.\n\nYou can run the live demos locally from the included example project, using a few common setup steps.\n\n```bash\n$ git clone https://github.com/pivotal-energy-solutions/django-datatable-view.git\n$ cd django-datatable-view\n$ mkvirtualenv datatableview\n(datatableview)$ pip install -r requirements.txt\n(datatableview)$ datatableview/tests/example_project/manage.py migrate\n(datatableview)$ datatableview/tests/example_project/manage.py loaddata initial_data\n(datatableview)$ datatableview/tests/example_project/manage.py runserver\n```\n\nThe example project is configured to use a local sqlite3 database, and relies on the ``django-datatable-view`` app itself, which is made available in the python path by simply running the project from the distributed directory root.\n\n\n## Authors\n\n* Autumn Valenta\n* Steven Klass\n\n\n## Copyright and license\n\nCopyright 2011-2021 Pivotal Energy Solutions.  All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this work except in compliance with the License.\nYou may obtain a copy of the License in the LICENSE file, or at:\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pivotal-energy-solutions/django-datatable-view",
    "keywords": "",
    "license": "Apache License (2.0)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-datatable-view",
    "package_url": "https://pypi.org/project/django-datatable-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-datatable-view/",
    "project_urls": {
      "Homepage": "https://github.com/pivotal-energy-solutions/django-datatable-view"
    },
    "release_url": "https://pypi.org/project/django-datatable-view/2.1.6/",
    "requires_dist": [
      "django (>=2.1)",
      "python-dateutil"
    ],
    "requires_python": ">=3.8.*",
    "summary": "This package is used in conjunction with the jQuery plugin (http://http://datatables.net/), and supports state-saving detection with (http://datatables.net/plug-ins/api).  The package consists of a class-based view, and a small collection of utilities for rendering table data from models.",
    "version": "2.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10503398,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3eae026ee8aee1ad6b3d06407cccb2c3036d47a6b319b5b03986d221059e48bf",
        "md5": "a9e40f31a14c4da04efd1702b8fc647a",
        "sha256": "74b4ac9e99ebba50f5558b62434a21fa28c681b0c9f40b875c96ff497aeba11b"
      },
      "downloads": -1,
      "filename": "django_datatable_view-2.1.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9e40f31a14c4da04efd1702b8fc647a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8.*",
      "size": 59862,
      "upload_time": "2021-05-28T21:21:43",
      "upload_time_iso_8601": "2021-05-28T21:21:43.278994Z",
      "url": "https://files.pythonhosted.org/packages/3e/ae/026ee8aee1ad6b3d06407cccb2c3036d47a6b319b5b03986d221059e48bf/django_datatable_view-2.1.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05ccf26f6bf8cf70110fe40d86039ac01a6f407260eca1ea67ad56e529a39071",
        "md5": "ba33fc60fad9700f04fedff50d915c19",
        "sha256": "b84ba6809b35b1d018eb502b3fed5b9dec219ed87120ee54f04a601551a341af"
      },
      "downloads": -1,
      "filename": "django-datatable-view-2.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ba33fc60fad9700f04fedff50d915c19",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.*",
      "size": 50474,
      "upload_time": "2021-05-28T21:21:45",
      "upload_time_iso_8601": "2021-05-28T21:21:45.338782Z",
      "url": "https://files.pythonhosted.org/packages/05/cc/f26f6bf8cf70110fe40d86039ac01a6f407260eca1ea67ad56e529a39071/django-datatable-view-2.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}