{
  "info": {
    "author": "David COBAC",
    "author_email": "david.cobac@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This package provides a way to access repeating decimals in the\ndecimal representation of rational numbers.\n\n### class object\n\n``` python3\n>>> from dvtDecimal import *\n\n```\n\n\nOnce package importation completed, you have to create a rational\nnumber using:\n\n* a fraction representation\n\n\n``` python3\n>>> f = dvtDecimal(-604, 260)\n\n```\n\nfor the fraction whose numerator is -604 and denominator is 260.\n\n\n* or a decimal representation\n\n``` python3\n>>> f = dvtDecimal(2.5)\n\n```\n\n* or repeating decimals as a string\n\n``` python3\n>>> f = dvtDecimal('00765')\n\n```\n\nthus creating a number (w/o irregular part) between 0 and 1.\nIn the example, 0.007650076500765... and so on.\n\n\n### object methods\n\nOnce you created the object, you can access to those variables:\n\n\n``` python3\n>>> f.initValues\n[-604, 260]\n>>> f.simpValues\n[-151, 65]\n>>> f.intPart\n-2\n>>> f.irrPart\n0.3\n>>> f.repPart\n[2, 3, 0, 7, 6, 9]\n>>> f.repPartC\n230769\n>>> f.periodLen\n6\n>>> f.gcd\n4\n>>> f.mixedF\n[-2, 21, 65]\n>>> f.sign\n-1\n\n```\n\nand to those methods:\n\n\n``` python3\n>>> f.dispResults()\nFor fraction: -604 / 260\n    integer   part : -2\n    irregular part : 0.3\n    periodic  part : [2, 3, 0, 7, 6, 9]\n    mixed fraction : [-2, 21, 65]\n    simp. fraction : [-151, 65]\n               gcd : 4\n    Python outputs : -2.3230769230769233\n>>> f.isDecimal()\nFalse\n>>> f.dotWrite(20)\n-2.32307692307692307692\n\n```\n\nEntering via repeating decimals string allows:\n\n``` python3\n>>> f = dvtDecimal('0123456789')\n>>> f.simpValues\n[13717421, 1111111111]\n\n```\n\n\ndvtDecimal also supports minimal operations (+,-,*,/) in between\nelements of the class but also with integers:\n\n\n``` python3\n>>> f = dvtDecimal(1, 5)\n>>> g = dvtDecimal(10, 3)\n>>> h = f + g\n>>> h.mixedF\n[3, 8, 15]\n>>> i = f / g\n>>> i.mixedF\n[0, 3, 50]\n\n```\n\n``` python3\n>>> f = dvtDecimal(1, 5)\n>>> g = 5\n>>> h = f * g\n>>> h.isDecimal()\nTrue\n\n```\n\n\n``` python3\n>>> f = dvtDecimal(1, 5)\n>>> g = dvtDecimal(7, 5)\n>>> h = f - g\n>>> h.simpValues\n[-6, 5]\n\n```\n\n### egyptian fractions\n\nIMPORTANT: This part gives you results for the fractionnal part of\nthe rational number you work with i.e. the last two numbers in the\n`mixedF` list, so that you only get results for <=1 fractions.\n\n\ndvtDecimal provides the method `egyptFractions` to get all the\negyptian fractions equal to your current fraction.\n\n`egyptFractions` outputs a list of lists. Each of these lists are\ndenominators (increasing) for unitary fractions whose sum equals to\nyour fraction.\n\nTwo optional arguments:\n* `eF` number of fractions in the sums, default is `3`\n* `lim` max. number of solutions in the results, default is `10`\n\n``` python3\n>>> f = dvtDecimal(18,5)\n>>> f.mixedF\n[3, 3, 5]\n>>> f.egyptFractions()\n[[2, 11, 110], [2, 12, 60], [2, 14, 35], [2, 15, 30], [2, 20, 20], [3, 4, 60], [3, 5, 15], [3, 6, 10]]\n>>> f.egyptFractions(lim=5)\n[[2, 11, 110], [2, 12, 60], [2, 14, 35], [2, 15, 30], [2, 20, 20]]\n>>> f.egyptFractions(eF=4)\n[[2, 11, 111, 12210], [2, 11, 112, 6160], [2, 11, 114, 3135], [2, 11, 115, 2530], [2, 11, 120, 1320], [2, 11, 121, 1210], [2, 11, 130, 715], [2, 11, 132, 660], [2, 11, 135, 594], [2, 11, 154, 385]]\n\n```\n\nIn the above example, egyptian fractions are thus calculated with\nfraction 3/5.\n\nFirst solution `[2, 11, 111, 12210]` (in the last command result)\nhas to be interpreted as: 3/5 = 1/2 + 1/11 + 1/111 + 1/12210\n\n\ndvtDecimal also provides `egyptG2` variable. This gives you a list\nof two denominators of unitary fractions whose sum equals your\nfraction.\n\nThis is an implementation of  ###the greedy algorithm###.\n\nThe result may be an empty list since all numbers cannot be written\nas so.\n\n``` python3\n>>> f = dvtDecimal(18,5)\n>>> f.intPart\n3\n>>> f.egyptG2\n[2, 10]\n\n```\n\nSo: 18/5 = 3 + 1/2 + 1/10\n\n\n### further\n\nMore operations!\n\n\n### about\n\ndvtDecimal is rather an attempt to publish on the `PyPi` packages\nindex than a fully completed python project, I do not recommend\ndvtDecimal usage for professionnal use. You have to consider this\npackage as an experiment.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://twitter.com/davidequantique",
    "keywords": "",
    "license": "CC-BY-NC-SA",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvtDecimal",
    "package_url": "https://pypi.org/project/dvtDecimal/",
    "platform": "",
    "project_url": "https://pypi.org/project/dvtDecimal/",
    "project_urls": {
      "Homepage": "https://twitter.com/davidequantique"
    },
    "release_url": "https://pypi.org/project/dvtDecimal/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Repeating digits of rational numbers",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6030071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7e50da747c8fb904f91e89720cd5dc7dc8507a788393612c2c93f037996f9b7",
        "md5": "9153558e4848f34946fb438278b96a11",
        "sha256": "9af915ebcb769883cb31e10d716fdc63c8888999a1c6c14fa5c27022408b4459"
      },
      "downloads": -1,
      "filename": "dvtDecimal-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9153558e4848f34946fb438278b96a11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6241,
      "upload_time": "2018-12-06T10:06:46",
      "upload_time_iso_8601": "2018-12-06T10:06:46.671275Z",
      "url": "https://files.pythonhosted.org/packages/f7/e5/0da747c8fb904f91e89720cd5dc7dc8507a788393612c2c93f037996f9b7/dvtDecimal-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec55a2270dd892bc250ce7687be03b15e2ba5036f261a0cb9e4fde8c7bc0f471",
        "md5": "b815ed45668b170d557a5e9575b90acf",
        "sha256": "95266c3ffd5b46b7e8a64999c6f50235bde3643b9ef01a250547aecc26ee9da6"
      },
      "downloads": -1,
      "filename": "dvtDecimal-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b815ed45668b170d557a5e9575b90acf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6079,
      "upload_time": "2018-12-06T10:06:48",
      "upload_time_iso_8601": "2018-12-06T10:06:48.302286Z",
      "url": "https://files.pythonhosted.org/packages/ec/55/a2270dd892bc250ce7687be03b15e2ba5036f261a0cb9e4fde8c7bc0f471/dvtDecimal-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}