{
  "info": {
    "author": "Novapost",
    "author_email": "bruno.bord@novapost.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Database",
      "Topic :: System :: Logging"
    ],
    "description": "Django simple SQL log\n=====================\n\n.. image:: https://travis-ci.org/novafloss/django-sql-log.svg?branch=master\n\n\nGoal: provide a middleware that inserts start/stop annotations that\nwould land on the SQL logs.\n\nLike this:\n\n::\n\n    2014-12-08 09:33:58 CET LOG:  duration: 0.174 ms  statement: BEGIN\n    2014-12-08 09:33:58 CET LOG:  duration: 0.502 ms  statement: SET TIME ZONE 'UTC'\n    2014-12-08 09:33:58 CET LOG:  duration: 0.053 ms  statement: COMMIT\n    2014-12-08 09:33:58 CET LOG:  duration: 0.228 ms  statement: SHOW default_transaction_isolation\n    2014-12-08 09:33:58 CET LOG:  duration: 0.043 ms  statement: BEGIN\n    2014-12-08 09:33:58 CET LOG:  duration: 0.354 ms  statement: SELECT 'django_sql_log_demo.views.Index_START'\n    2014-12-08 09:33:58 CET LOG:  duration: 1.221 ms  statement: SELECT \"dummy_article\".\"id\", \"dummy_article\".\"title\", \"dummy_article\".\"body\" FROM \"dummy_article\"\n    2014-12-08 09:33:58 CET LOG:  duration: 0.118 ms  statement: SELECT 'django_sql_log_demo.views.Index_STOP'\n    2014-12-08 09:33:58 CET LOG:  duration: 0.067 ms  statement: ROLLBACK\n    2014-12-08 09:33:59 CET LOG:  duration: 0.179 ms  statement: BEGIN\n    2014-12-08 09:33:59 CET LOG:  duration: 0.513 ms  statement: SET TIME ZONE 'UTC'\n    2014-12-08 09:33:59 CET LOG:  duration: 0.054 ms  statement: COMMIT\n    2014-12-08 09:33:59 CET LOG:  duration: 0.231 ms  statement: SHOW default_transaction_isolation\n    2014-12-08 09:34:00 CET LOG:  duration: 117.999 ms  statement: DROP DATABASE \"test_hello_world\"\n\nThe available middleware has been tested only with Postgresql databases,\nbut it should work with other SQL-based RDBMs.\n\nUsage\n-----\n\nAdd this package to your requirements, and install it the usual way. You\ndon't have to add the application to the ``INSTALLED_APPS``, there's no\nmodel to sync.\n\nAdd the middleware like this:\n\n.. code:: python\n\n    MIDDLEWARE_CLASSES = (\n        'django_sql_log.middleware.SQLLoggingMiddleware',\n        # ...\n    )\n\nAlthough the order of the middlewares is not crucial, it is better to\nmake sure that the middleware is near the first place in the list.\n\nLog format string\n~~~~~~~~~~~~~~~~~\n\nBy default, the log format string is:\n\n::\n\n    {full_name}_{phase}\n\nIn the demo site, this would result in:\n\n::\n\n    django_sql_log_demo.views.Index_START\n\nfor the START event in the log.\n\nYou can customize this format by adding the ``DJANGO_SQL_LOG_FORMAT`` to\nyour settings. Available format variables are (with correspondance in\nthe demo tests):\n\n-  ``module_name``: ``django_sql_log_demo.views``,\n-  ``func_name``: ``Index``,\n-  ``full_name``: ``django_sql_log_demo.views.Index``,\n-  ``phase``: START or STOP,\n\nHacking\n-------\n\nIf you want to run the test-suite, have a look at the ``settings_pg.py`` file\nin your ``demo/django_sql_log_demo`` directory.\n\nIt carries the basic database settings you'll need to run tox tests and\neventually store demo data. Hopefully, by simply creating a\n``settings_pg_local.py`` file, you can override the default credentials to fit\nyour Postgresql server specifics.\n\nPlease bear in mind that the database you'll have to connect to **must exist**\non this server, and that your PG user should be able to *create* and *delete*\ndatabases.\n\nWith ``tox`` installed, simply run the command ``tox``. This should run\nthe tests for Sqlite and postgresql environments, if ready.\n\nLogging in Postgresql\n~~~~~~~~~~~~~~~~~~~~~\n\nFor you information, logs are not activated by default in postgresql settings.\nTo make sure your log file will display the START/STOP events, go edit\nyour ``postgresql.conf`` file and set this variable::\n\n    log_min_duration_statement = 0\n\nFor other database systems, please refer to the official documentation.\n\n\nThis software is published under the terms of the MIT License. Please\nsee the ``LICENSE`` file for more information.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/novafloss/django-sql-log",
    "keywords": "django SQL log postgresql",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-sql-log",
    "package_url": "https://pypi.org/project/django-sql-log/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-sql-log/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/novafloss/django-sql-log"
    },
    "release_url": "https://pypi.org/project/django-sql-log/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Write Start/Stop events in your SQL logs.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12696327,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4503bc417392c249dd9b95a2013b8387065433cb0bd7137277f8e9cc8a39b96f",
        "md5": "ccb8395bf072b5bbeea63083cf2d7351",
        "sha256": "70d0d94b37a78611965c55b4250306367125e4131e5f090dd40873e44b21c8d3"
      },
      "downloads": -1,
      "filename": "django_sql_log-1.2.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "ccb8395bf072b5bbeea63083cf2d7351",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 6299,
      "upload_time": "2015-06-10T10:20:25",
      "upload_time_iso_8601": "2015-06-10T10:20:25.581945Z",
      "url": "https://files.pythonhosted.org/packages/45/03/bc417392c249dd9b95a2013b8387065433cb0bd7137277f8e9cc8a39b96f/django_sql_log-1.2.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e89f1cae5e471b3dab269ebe0d3353afd95f31a5c742f0a1fb3751c66a05a7b",
        "md5": "74619c6c47c00fbd6e0310a987f85e3b",
        "sha256": "eba914e0cfaa200be3923f899e0eff76a782d8277cf946467671dba4d2c0b97f"
      },
      "downloads": -1,
      "filename": "django-sql-log-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "74619c6c47c00fbd6e0310a987f85e3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4575,
      "upload_time": "2015-06-10T10:20:21",
      "upload_time_iso_8601": "2015-06-10T10:20:21.762424Z",
      "url": "https://files.pythonhosted.org/packages/3e/89/f1cae5e471b3dab269ebe0d3353afd95f31a5c742f0a1fb3751c66a05a7b/django-sql-log-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}