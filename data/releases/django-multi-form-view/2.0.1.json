{
  "info": {
    "author": "Tim Best",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Multi. Form View\n[![CircleCI](https://circleci.com/gh/TimBest/django-multi-form-view.svg?style=shield)](https://circleci.com/gh/TimBest/django-multi-form-view)\n[![codecov](https://codecov.io/gh/timbest/django-multi-form-view/branch/master/graph/badge.svg)](https://codecov.io/gh/timbest/django-multi-form-view)\n[![PyPI](https://img.shields.io/pypi/v/django-multi-form-view.svg?maxAge=2592000)](https://pypi.python.org/pypi/django-multi-form-view)\n\nDjango class based views for using more than one Form or ModelForm in a single view.\n\n## Install\n```bash\n$ pip install django-multi-form-view\n```\n\n## Usage\n\n### MultiFormView ([Example](demo/base/views.py))\n**class multi_form_view.MultiFormView**\nA single view that can display multiple Django forms. Handles displaying, redisplaying on error, and\nredirects on form success in.\n\n#### Extends\n* django.views.generic import FormView\n\n#### Attributes and Methods\n* `form_classes`\n  A dictionary containing to forms for the view.\n* `are_forms_valid()`\n  Check if all forms defined in `form_classes` are valid.\n* `forms_valid()`\n  Redirects to get_success_url().\n* `forms_invalid()`\n  Renders a response containing the form errors.\n* `get()`\n  Render the forms.\n* `get_context_data()`\n  Adds the results of `get_forms()` to the context dictionary with the key `'forms'`.\n* `get_forms()`.\n  Initializes the forms defined in `form_classes` with initial data from `get_initial()` and kwargs\n  from get_form_kwargs().\n* `get_form_kwargs()`.\n  Build the keyword arguments required to instantiate the form.\n* `get_initial()`\n  Returns a copy of `initial` with empty initial data dictionaries for each form.\n* `post()`\n  Uses `are_forms_valid()` to call either `forms_valid()` or `forms_invalid()`.\n\n### MultiModelFormView ([Example](demo/base/views.py))\n**class multi_form_view.MultiModelFormView**\nA single view that can display multiple Django ModelForms. Handles displaying, redisplaying on\nerror, and redirects on form success in.\n\n#### Extends\n* multi_form_view.MultiFormView\n\n#### Attributes and Methods\n* `forms_valid()`\n  Calls `save()` on each form.\n* `get_forms()`.\n  Initializes the forms defined in `form_classes` with initial data from `get_initial()`, kwargs\n  from get_form_kwargs() and form instance object from `get_objects()`.\n* `get_objects()`\n  Returns dictionary with the instance objects for each form. Keys should match the corresponding\n  form.\n\n## Demo\n```bash\n$ cd demo\n$ pip3 install -r requirements.txt\n$ python3 manage.py migrate\n$ python3 manage.py runserver\n```\n\n## Testing\nInstall [PhantomJS](http://phantomjs.org/)\n```bash\n$ python3 demo/manage.py behave\n```\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TimBest/django-multi-form-view",
    "keywords": "",
    "license": "GNU licence, see LICENCE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-multi-form-view",
    "package_url": "https://pypi.org/project/django-multi-form-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-multi-form-view/",
    "project_urls": {
      "Homepage": "https://github.com/TimBest/django-multi-form-view"
    },
    "release_url": "https://pypi.org/project/django-multi-form-view/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Class based views for handling more than one form in a single view",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4748880,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7adc960db3e628ae990e950ccd5d3d4cb6e209b7b656008eedd8980c17332d25",
        "md5": "f49606f86375fd65ecdf5ba9f79baf0f",
        "sha256": "de3a73ec914a7c02cae523ef080eb6024deb319ba5f219d5d1a7091220fbf7f1"
      },
      "downloads": -1,
      "filename": "django_multi_form_view-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f49606f86375fd65ecdf5ba9f79baf0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15961,
      "upload_time": "2019-01-28T07:43:35",
      "upload_time_iso_8601": "2019-01-28T07:43:35.807969Z",
      "url": "https://files.pythonhosted.org/packages/7a/dc/960db3e628ae990e950ccd5d3d4cb6e209b7b656008eedd8980c17332d25/django_multi_form_view-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b5d914b79ddf555f9f1fa7d32f849adc749b97f29c203361c1ced2d816a47ae",
        "md5": "460b209b07645b5e0ffba825493a7a7f",
        "sha256": "40bca9a6841392b10f9c029187f4063ae4f5493792a55d8b4ed4bfa299f608de"
      },
      "downloads": -1,
      "filename": "django-multi-form-view-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "460b209b07645b5e0ffba825493a7a7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2991,
      "upload_time": "2019-01-28T07:43:37",
      "upload_time_iso_8601": "2019-01-28T07:43:37.023927Z",
      "url": "https://files.pythonhosted.org/packages/2b/5d/914b79ddf555f9f1fa7d32f849adc749b97f29c203361c1ced2d816a47ae/django-multi-form-view-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}