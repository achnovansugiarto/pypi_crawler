{
  "info": {
    "author": "Chris Beaven",
    "author_email": "smileychris@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===================\ndjango-easysettings\n===================\n\nEasy app-specific settings for Django.\n\n\nInstallation\n============\n\nTo install, run: ``pip install django-easysettings``\n\n\nUsage\n=====\n\nCreate a ``conf.py`` file within your app's directory, adding attributes for\nthe default values of your app-specific settings. They will be overridden by\nany project setting that is provided.\n\nFor example::\n\n    from easysettings import AppSettings\n\n\n    class Settings(AppSettings):\n        MYAPP_WIDGETS = ('foo', 'bar')\n\n\n    settings = Settings()\n\n\nThen in your app, rather than `from django.conf import settings`, use\n`from myapp.conf import settings`. For example::\n\n    from myapp.conf import settings\n\n\n    def dashboard(request):\n        data = {}\n        for widget in settings.MYAPP_WIDGETS:\n            data[widget] = render_widget(widget)\n        if settings.DEBUG:\n            data['debug_mode'] = True\n        # ...\n\n\nIsolating Settings when Testing\n-------------------------------\n\nYou can force your app's tests to use the default project settings rather than\nany value in the project's ``settings`` configuration module.\n\nJust set ``settings.isolated = True``.\n\nFor example, you could use a base test class to do this::\n\n    class BaseTest(TestCase):\n\n        def setUp(self):\n            \"\"\"\n            Isolate all application specific settings.\n            \"\"\"\n            output = super(BaseTest, self).setUp()\n            settings.isolated = True\n            return output\n\n        def tearDown(self):\n            \"\"\"\n            Restore settings to their original state.\n            \"\"\"\n            settings.isolated = False\n            settings.revert()\n            return super(BaseTest, self).tearDown()\n\nAs also shown in the example above, you can revert any changes made by calling\n``settings.revert()``.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/SmileyChris/django-easysettings",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-easysettings",
    "package_url": "https://pypi.org/project/django-easysettings/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-easysettings/",
    "project_urls": {
      "Homepage": "http://github.com/SmileyChris/django-easysettings"
    },
    "release_url": "https://pypi.org/project/django-easysettings/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Easy app-specific settings for Django",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5657953,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "847f2ca509e29ef1ee93c485302622f34795dfb91ee3e0d7437e9f06642822c4",
        "md5": "d6921c863f4febde7293890e75bafe30",
        "sha256": "758db6dbbf2a54a36be03b12e410f19135be88ccf848e0ed7be48d0461d88a17"
      },
      "downloads": -1,
      "filename": "django-easysettings-1.0.2.tar.gz",
      "has_sig": true,
      "md5_digest": "d6921c863f4febde7293890e75bafe30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2566,
      "upload_time": "2015-11-08T20:26:14",
      "upload_time_iso_8601": "2015-11-08T20:26:14.828422Z",
      "url": "https://files.pythonhosted.org/packages/84/7f/2ca509e29ef1ee93c485302622f34795dfb91ee3e0d7437e9f06642822c4/django-easysettings-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}