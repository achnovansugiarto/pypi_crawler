{
  "info": {
    "author": "Vittorio Zamboni",
    "author_email": "vittorio.zamboni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security"
    ],
    "description": "# Django groups manager\n\n[![Build Status](https://travis-ci.org/vittoriozamboni/django-groups-manager.svg?branch=master)](https://travis-ci.org/vittoriozamboni/django-groups-manager) [![Coverage Status](https://coveralls.io/repos/vittoriozamboni/django-groups-manager/badge.png?branch=master)](https://coveralls.io/r/vittoriozamboni/django-groups-manager?branch=master) ![Version](https://badge.fury.io/py/django-groups-manager.svg)\n\nThis application allows to create hierarchical groups by using [django-mptt](https://github.com/django-mptt/django-mptt) tree structure.\nIt is also possible to synchronize the groups with Django's `auth.models` Group and User, in order to take advantage of permissions applications like [django-guardian](https://github.com/lukaszb/django-guardian/).\n\n## Documentation\n\nOnline documentation is available at http://django-groups-manager.readthedocs.org/.\n\n### Note\n\nVersion `1.1.0` changed the default slugify function from `awesome-slugify` to `django.utils.text.slugify`.\nTo keep using `awesome-slugify` you need to install it separately, and then\n[customize the settings](https://django-groups-manager.readthedocs.io/en/latest/settings.html#slugify-function):\n\n```python\nfrom slugify import slugify\nGROUPS_MANAGER = {\n    # ... other settings\n    'SLUGIFY_FUNCTION': lambda s: slugify(s, to_lower=True),\n    'SLUGIFY_USERNAME_FUNCTION': lambda s: slugify(s, to_lower=True, separator=\"_\")\n}\n```\n\n## Requirements\n\n    - Python >= 3.5\n    - Django >= 2\n    - django-guardian for user permissions\n    - jsonfield == 3.1.0\n\nFor older versions of Python or Django, please look at 0.6.2 version.\n\n## Installation\n\nUse pip to install `django-groups-manager`:\n\n```bash\npip install django-groups-manager\n```\n\nTo use per-object permissions related features, `django-guardian` is required as well:\n\n```bash\npip install django-guardian\n```\n\n### Django Configuration\n\n1. Add `groups_manager` into your `INSTALLED_APPS`:\n\n   ```python\n   INSTALLED_APPS = (\n      ...\n      # 'guardian', # add as well to use permissions related features\n      'groups_manager',\n   )\n   ```\n\n2. Create models with `migrate`:\n\n   ```bash\n   python manage.py migrate groups_manager\n   ```\n\n   Note: for users that are upgrading from <0.4.2, launch:\n\n   ```bash\n   python manage.py migrate groups_manager 0001 --fake\n   python manage.py migrate groups_manager\n   ```\n\n3. To enable django `auth.models` synchronization, add to the settings module:\n\n   ```python\n   GROUPS_MANAGER = {\n       'AUTH_MODELS_SYNC': True,\n   }\n   ```\n\n## Basic usage\n\nThe common case is to create a simple parent-son relation:\n\n```python\nfrom groups_manager.models import Group, Member\nfc_internazionale = Group.objects.create(name='F.C. Internazionale Milan')\nstaff = Group.objects.create(name='Staff', parent=fc_internazionale)\nplayers = Group.objects.create(name='Players', parent=fc_internazionale)\nthohir = Member.objects.create(first_name='Eric', last_name='Thohir')\nstaff.add_member(thohir)\npalacio = Member.objects.create(first_name='Rodrigo', last_name='Palacio')\nplayers.add_member(palacio)\n```\n\nPer-object permissions handling is done by `django-guardian`. The Group/Member relation can be used to assing objects:\n\n```python\nfrom football.models import TeamBudget\nsmall_budget = TeamBudget.objects.create(euros='1000')\nthohir.assign_object(staff, small_budget)\nthohir.has_perm('change_teambudget', small_budget)  # True\npalacio.has_perm('change_teambudget', small_budget)  # False\n# or via group\nmid_budget = TeamBudget.objects.create(euros='3000')\nstaff.assign_object(mid_budget)\nthohir.has_perm('change_teambudget', mid_budget)  # True\npalacio.has_perm('change_teambudget', mid_budget)  # False\n```\n\nOwner/Group members policies can be defined via `PERMISSIONS` setting, as a dictionary of `GROUPS_MANAGER`, but can also be overwritten via `custom_permissions` `kwarg`:\n\n```python\nfrom football.models import Match\nfc_barcelona = Group.objects.create(name='FC Barcelona')\nfriendly_match = Match.objects.create(home=fc_internazionale, away=fc_barcelona)\npalacio.assign_match(players, friendly_match, custom_permissions={'group': ['play']})\nthohir.has_perm('play_match', friendly_match)  # False\npalacio.has_perm('play_match', friendly_match)  # True\n```\n\nFor more complex cases, see documentation.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vittoriozamboni/django-groups-manager",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-groups-manager",
    "package_url": "https://pypi.org/project/django-groups-manager/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-groups-manager/",
    "project_urls": {
      "Homepage": "https://github.com/vittoriozamboni/django-groups-manager"
    },
    "release_url": "https://pypi.org/project/django-groups-manager/1.2.0/",
    "requires_dist": [
      "django (>=2)",
      "django-mptt"
    ],
    "requires_python": "",
    "summary": "Django groups manager through django-mptt.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12729057,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f1cd884cd24d1c29d66c2ab88b712a21f6539aa636bfdabef66993f5b78b968",
        "md5": "a29e4201f622e4528bb8f95630a55eec",
        "sha256": "98d874e539b409d16af6bb8738b6cee6c25f6a70464577191ac46c5f21f57ecc"
      },
      "downloads": -1,
      "filename": "django_groups_manager-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a29e4201f622e4528bb8f95630a55eec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 67202,
      "upload_time": "2022-01-29T09:48:26",
      "upload_time_iso_8601": "2022-01-29T09:48:26.786987Z",
      "url": "https://files.pythonhosted.org/packages/6f/1c/d884cd24d1c29d66c2ab88b712a21f6539aa636bfdabef66993f5b78b968/django_groups_manager-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "562e9752a533735bbb46e008504a1af976579a1cdfc7b55562e343fe60790339",
        "md5": "dac529f5b21f635c3cefb1ff2903b9be",
        "sha256": "5b44c5341c77f078f22d646246e0acc6fad1cbf80ea2d91c7b62aaa965061f9d"
      },
      "downloads": -1,
      "filename": "django-groups-manager-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dac529f5b21f635c3cefb1ff2903b9be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 60517,
      "upload_time": "2022-01-29T09:48:28",
      "upload_time_iso_8601": "2022-01-29T09:48:28.916186Z",
      "url": "https://files.pythonhosted.org/packages/56/2e/9752a533735bbb46e008504a1af976579a1cdfc7b55562e343fe60790339/django-groups-manager-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}