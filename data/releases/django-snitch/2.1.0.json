{
  "info": {
    "author": "Marcos Gabarda",
    "author_email": "hey@marcosgabarda.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=============\nDjango Snitch\n=============\n\n.. image:: https://travis-ci.org/marcosgabarda/django-snitch.svg?branch=master\n    :target: https://travis-ci.org/marcosgabarda/django-snitch\n\n.. image:: https://coveralls.io/repos/github/marcosgabarda/django-snitch/badge.svg?branch=master\n    :target: https://coveralls.io/github/marcosgabarda/django-snitch?branch=master\n\n.. image:: https://img.shields.io/badge/code_style-black-000000.svg\n   :target: https://github.com/ambv/black\n\n.. image:: https://readthedocs.org/projects/django-snitch/badge/?version=latest\n    :target: https://django-snitch.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\nDjango app made to integrate generic events that create notifications that\ncan be sent to users using several backends.\n\nBy default, it integrates **push notifications** and **email** to send the\nnotifications.\n\nMade with Python 3 and Django with :heart:.\n\nQuick start\n-----------\n\n**1** Install using pip:\n\n.. code-block:: bash\n\n    pip install django-snitch\n\n**2** Add \"snitch\" to your INSTALLED_APPS settings like this:\n\n.. code-block:: python\n\n    INSTALLED_APPS += ('snitch',)\n\n**3** Create an ``events.py`` file in your app to register the events:\n\n.. code-block:: python\n\n    import snitch\n    from snitch.backends import PushNotificationBackend, EmailNotificationBackend\n\n    ACTIVATED_EVENT = \"activated\"\n    CONFIRMED_EVENT = \"confirmed\"\n\n\n    @snitch.register(ACTIVATED_EVENT)\n    class ActivatedHandler(snitch.EventHandler):\n        title = \"Activated!\"\n\n\n    @snitch.register(CONFIRMED_EVENT)\n    class ConfirmedHandler(snitch.EventHandler):\n        title = \"Confirmed!\"\n        notification_backends = [PushNotificationBackend, EmailNotificationBackend]\n\n        # Custom configuration for email backend\n        template_email_kwargs = {\"template_name\": \"email.html\"}\n        template_email_async = False\n\n        def audience(self):\n            return get_user_model().objects.all()\n\n\n**4** Use ``dispatch`` decorator to dispatch the event when a function is called:\n\n.. code-block:: python\n\n    from django.db import models\n    from django.utils import timezone\n\n    import snitch\n    from snitch.models import AbstractNotification\n    from tests.app.events import ACTIVATED_EVENT, CONFIRMED_EVENT\n\n\n    class Stuff(models.Model):\n        \"\"\"Simple stuff model with status.\"\"\"\n\n        IDLE, ACTIVE, CONFIRMED = 0, 1, 2\n        status = models.PositiveIntegerField(default=IDLE)\n        activated_at = models.DateTimeField(null=True, blank=True)\n        confirmed_at = models.DateTimeField(null=True, blank=True)\n\n        @snitch.dispatch(ACTIVATED_EVENT)\n        def activate(self):\n            self.activated_at = timezone.now()\n\n        @snitch.dispatch(CONFIRMED_EVENT)\n        def confirm(self):\n            self.confirmed_at = timezone.now()\n\n\nCustom Notification model\n-------------------------\n\nYou can, in the same way that ``django.contrib.auth.model.User`` works, swap the\nNotification model, to customize it.\n\nIn order to do that, you should create a model that inherits from\n``AbstractNotification``:\n\n.. code-block:: python\n\n    from django.db import models\n\n    from snitch.models import AbstractNotification\n\n\n    class Notification(AbstractNotification):\n        \"\"\"Custom notification.\"\"\"\n\n        extra_field = models.BooleanField(default=False)\n\n\nAnd after that, specify it in the settings:\n\n.. code-block:: python\n\n    SNITCH_NOTIFICATION_MODEL = \"app.Notification\"\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marcosgabarda/django-snitch",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-snitch",
    "package_url": "https://pypi.org/project/django-snitch/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-snitch/",
    "project_urls": {
      "Homepage": "https://github.com/marcosgabarda/django-snitch"
    },
    "release_url": "https://pypi.org/project/django-snitch/2.1.0/",
    "requires_dist": [
      "django (>=3.0.7,<4.0.0)",
      "django-model-utils (>=4.1.1,<5.0.0)",
      "bleach (>=3.3.0,<4.0.0)",
      "celery (>=5.0.5,<6.0.0)",
      "django-celery-beat (>=2.2.0,<3.0.0)",
      "django-push-notifications (>=2.0.0,<3.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Django app made to integrate generic events that create notifications that can be sent to users using several backends.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17524656,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dc377dae17ddedc44f0f755cbba59b8aa27edb3e05096d2ea46055a3c58eef8",
        "md5": "ee767ac141262f765dbc6f70d304f434",
        "sha256": "fee62be518d5aa7032a6ec9d75ad581c8825d1e94412b1279fe39528370986fe"
      },
      "downloads": -1,
      "filename": "django_snitch-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee767ac141262f765dbc6f70d304f434",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 26563,
      "upload_time": "2021-08-27T13:14:29",
      "upload_time_iso_8601": "2021-08-27T13:14:29.176253Z",
      "url": "https://files.pythonhosted.org/packages/2d/c3/77dae17ddedc44f0f755cbba59b8aa27edb3e05096d2ea46055a3c58eef8/django_snitch-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c116ad0599cf248be450cf52f2150eae036bc3024a4b926fcf6885372d20d83",
        "md5": "ffc5407579dcc6e16c6f91dae549af2e",
        "sha256": "6b951b3c446a6896d822d9be366a5aeba526173df820d7fc1d1843bd30521f85"
      },
      "downloads": -1,
      "filename": "django-snitch-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ffc5407579dcc6e16c6f91dae549af2e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 19748,
      "upload_time": "2021-08-27T13:14:27",
      "upload_time_iso_8601": "2021-08-27T13:14:27.454382Z",
      "url": "https://files.pythonhosted.org/packages/2c/11/6ad0599cf248be450cf52f2150eae036bc3024a4b926fcf6885372d20d83/django-snitch-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}