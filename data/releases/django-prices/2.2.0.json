{
  "info": {
    "author": "Mirumee Software",
    "author_email": "hello@mirumee.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-prices: Django fields for the `prices` module\n====================================================\n\n[![Build Status](https://secure.travis-ci.org/mirumee/django-prices.png)](https://travis-ci.org/mirumee/django-prices) [![codecov.io](https://img.shields.io/codecov/c/github/mirumee/django-prices/master.svg)](http://codecov.io/github/mirumee/django-prices?branch=master)\n\n# Installation\n\n* `pip install django-prices`\n* Add `django_prices` to your `INSTALLED_APPS` at `settings.py`\n* Follow `enmerkar` [instructions](https://github.com/Zegocover/enmerkar#using-the-middleware) and update both your `INSTALLED_APPS` and `MIDDLEWARE_CLASSES`.\n\n# Features\n\nProvides support for models:\n\n```python\nfrom django.db import models\nfrom django_prices.models import MoneyField, TaxedMoneyField\n\n\nclass Model(models.Model):\n    currency = models.CharField(max_length=3, default=\"BTC\")\n    price_net_amount = models.DecimalField(max_digits=9, decimal_places=2, default=\"5\")\n    price_net = MoneyField(amount_field=\"price_net_amount\", currency_field=\"currency\")\n    price_gross_amount = models.DecimalField(\n        max_digits=9, decimal_places=2, default=\"5\"\n    )\n    price_gross = MoneyField(\n        amount_field=\"price_gross_amount\", currency_field=\"currency\"\n    )\n    price = TaxedMoneyField(\n        net_amount_field=\"price_net_amount\",\n        gross_amount_field=\"price_gross_amount\",\n        currency=\"currency\",\n    )\n```\n\nAnd forms:\n\n```python\nfrom django import forms\n\nfrom django_prices.forms import MoneyField\n\nAVAILABLE_CURRENCIES = [\"BTC\", \"USD\"]\n\n\nclass ProductForm(forms.Form):\n    name = forms.CharField(label=\"Name\")\n    price_net = MoneyField(label=\"net\", available_currencies=AVAILABLE_CURRENCIES)\n```\n\nAnd validators:\n\n```python\nfrom django import forms\nfrom prices.forms import Money\n\nfrom django_prices.forms import MoneyField\nfrom django_prices.validators import (\n    MaxMoneyValidator, MinMoneyValidator, MoneyPrecisionValidator)\n\n\nclass DonateForm(forms.Form):\n    donator_name = forms.CharField(label=\"Your name\")\n    donation = MoneyField(\n        label=\"net\",\n        available_currencies=[\"BTC\", \"USD\"],\n        max_digits=9,\n        decimal_places=2,\n        validators=[\n            MoneyPrecisionValidator(),\n            MinMoneyValidator(Money(5, \"USD\")),\n            MaxMoneyValidator(Money(500, \"USD\")),\n        ],\n    )\n```\n\nIt also provides support for templates:\n\n```html+django\n{% load prices %}\n\n<p>Price: {{ foo.price.gross|amount }} ({{ foo.price.net|amount }} + {{ foo.price.tax|amount }} tax)</p>\n```\n\n\nYou can also use HTML output from `prices` template tags, they will wrap currency symbol in a `<span>` element:\n\n```html+django\n{% load prices %}\n\n<p>Price: {{ foo.price.gross|amount:'html' }} ({{ foo.price.net|amount:'html' }} + {{ foo.price.tax|amount:'html' }} tax)</p>\n```\n\nIt will be rendered as a following structure (for example with English locale):\n\n```html\n<span class=\"currency\">$</span>15.00\n```\n\n## How to migrate to django-prices 2.0\n\nVersion 2.0 introduces major changes to how prices data is stored in models, enabling setting price's currency per model instance.\n\nSteps to migrate:\n\n1. In your **forms**:\n    * remove the `currency` argument\n    * add `available_currencies` with available choices.\n\n    If the form specified `MoneyFields` in `fields` option, replace those with explicit declarations instead:\n\n    ```python\n    AVAILABLE_CURRENCIES = [(\"BTC\", \"bitcoins\"), (\"USD\", \"US dollar\")]\n\n    class ModelForm(forms.ModelForm):\n        class Meta:\n            model = models.Model\n            fields = []\n\n        price_net = MoneyField(available_currencies=AVAILABLE_CURRENCIES)\n    ```\n\n1. In your **models** using `MoneyField`:\n    * Replace all occurrences of the `MoneyField` class with `DecimalField`\n    * Remove the `currency` argument from them\n    * Change `default` from Money instance to value acceptable by Decimal field\n\n        Example of code:\n        ```python\n        price_net = MoneyField(\n            \"net\", currency=\"BTC\", default=Money(\"5\", \"BTC\"), max_digits=9, decimal_places=2\n        )\n        ```\n        Updated code:\n        ```python\n        price_net = models.DecimalField(\"net\", default=\"5\", max_digits=9, decimal_places=2)\n        ```\n\n1. In your **migration** files:\n    * Replace all occurrences of the `MoneyField` class with `DecimalField`\n    * Remove the `currency` argument from them\n    * Change `default` from Money instance to value acceptable by Decimal field\n\n        ```python\n        field = django_prices.models.MoneyField(currency='BTC', decimal_places=2, default='5', max_digits=9, verbose_name='net')\n        ```\n        Updated code:\n        ```python\n        field = models.DecimalField(decimal_places=2, default='5', max_digits=9, verbose_name='net')\n        ```\n\n1. Rename fields in **models**. Your old field will still store amount of money, so probably the best choice would be `price_net_amount` instead `price_net`.\n\n1. All places which use Models and it's fields can prevent django app from even starting the code. Possible issues: code tries to access non existing fields. Exclude those fields for now from your ModelForms, Graphene types etc.\n\n1. Run `python manage.py makemigrations`. Make sure to do this step before adding new `MoneyFields` to model! If not, django will generate `delete/create` migrations instead of `rename`.\n\n1. Run `python manage.py migrate`.\n\n1. Update `django-prices`.\n\n1. Add `models.CharField` for currency and `MoneyField` to your models:\n\n    ```python\n    currency = models.CharField(max_length=3, default=\"BTC\")\n    price_net_amount = models.DecimalField(\"net\", default=\"5\", max_digits=9, decimal_places=2)\n    price_net = MoneyField(amount_field=\"price_net_amount\", currency_field=\"currency\")\n    ```\n\n1. Run `python manage.py makemigrations` and `python manage.py migrate`.\n\n1. Change `TaxedMoneyField` declaration:\n\n    ```python\n    price = TaxedMoneyField(\n        net_amount_field=\"price_net_amount\",\n        gross_amount_field=\"price_gross_amount\",\n        currency=\"currency\",\n    )\n    ```\n\n1. Remember to address changes in previously edited ModelForms\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mirumee/django-prices",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-prices",
    "package_url": "https://pypi.org/project/django-prices/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-prices/",
    "project_urls": {
      "Homepage": "https://github.com/mirumee/django-prices"
    },
    "release_url": "https://pypi.org/project/django-prices/2.2.0/",
    "requires_dist": [
      "Babel (>=2.2)",
      "Django (<4,>=2.2)",
      "enmerkar (>=0.7.1)",
      "prices (>=1.0.0)"
    ],
    "requires_python": "",
    "summary": "Django fields for the prices module",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14924540,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2df1e35aa6e864a1160b9b9b05e34fa64b6b96ca83f7b5659b2411a0bae525a",
        "md5": "7338fbd1d8bdcc543ac2d6fa5de9beaa",
        "sha256": "4ef054a660663c216a869126f1d209752381d5e311e5808438d29c944c2009d3"
      },
      "downloads": -1,
      "filename": "django_prices-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7338fbd1d8bdcc543ac2d6fa5de9beaa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10370,
      "upload_time": "2020-03-06T16:17:38",
      "upload_time_iso_8601": "2020-03-06T16:17:38.753125Z",
      "url": "https://files.pythonhosted.org/packages/b2/df/1e35aa6e864a1160b9b9b05e34fa64b6b96ca83f7b5659b2411a0bae525a/django_prices-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2e4545c99cf4f2fa044c59612045518cd810372825a522259f2ed0bc62f4f09",
        "md5": "f1d1e13d463f7f1b84f77df6af0e2636",
        "sha256": "cdbea06db683c589d4cf3ec48d4b2385000ddc4df6e641f48cea563e19f645a3"
      },
      "downloads": -1,
      "filename": "django-prices-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1d1e13d463f7f1b84f77df6af0e2636",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10166,
      "upload_time": "2020-03-06T16:18:14",
      "upload_time_iso_8601": "2020-03-06T16:18:14.342005Z",
      "url": "https://files.pythonhosted.org/packages/f2/e4/545c99cf4f2fa044c59612045518cd810372825a522259f2ed0bc62f4f09/django-prices-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}