{
  "info": {
    "author": "doppelmarker",
    "author_email": "doppelmarker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Python RSS reader\n\nFinal task for EPAM Python Training 2021.09\n\n`markedrss` is a command line utility that makes it easy to view RSS feeds in a readable format.\n\n## Installation\n\nYou can install it by running the following command:\n\n    pip install markedrss\n\nIn order to install additional dependency to make `--check-urls` work, please, use the following command:\n\n    pip install markedrss[aiohttp]\n\n## Usage\n\nTo see help message, please, use `-h/--help` argument: `markedrss -h`.\n\n    usage: markedrss [-h] [-v] [--verbose] [-c] [--clear-cache] [-l LIMIT] [--json] [-d DATE] [--to-html [FOLDER_PATH]] [--to-pdf [FOLDER_PATH]] [--to-epub [FOLDER_PATH]] [--check-urls]\n                 [source]\n\n    Pure Python command-line RSS reader.\n\n    positional arguments:\n    source                   RSS URL\n\n    optional arguments:\n    -h, --help               Show this help message and exit.\n    -v, --version            Print version info.\n    --verbose                Output verbose status messages.\n    -c, --colorize           Print news in colorized mode.\n    --clear-cache            Clear cache file on startup.\n    -l LIMIT, --limit LIMIT  Limit news topics if this parameter provided.\n    --json                   Print result as JSON.\n    -d DATE, --date DATE     Print cached news published on a specific date.\n    --to-html [FOLDER_PATH]  Convert news to .html format and save it by the specified folder path (FOLDER_PATH can be omitted).\n    --to-pdf [FOLDER_PATH]   Convert news to .pdf format and save it by the specified folder path (FOLDER_PATH can be omitted).\n    --to-epub [FOLDER_PATH]  Convert news to .epub format and save it by the specified folder path (FOLDER_PATH can be omitted).\n    --check-urls             Ensure URL represents an image (requires installation of additional dependency, use: pip install markedrss[aiohttp]).\n\n*Some notes*:\n\n+ when `--clear-cache` is passed individually, cache gets cleared and application terminates;\n+ `--check-urls` requires internet connection; without passing this argument some URLs representing images may be\n  ascribed to `others` category of resulting converted files.\n\n## Logging\n\nThere are 2 loggers:\n\n+ general `rss-reader` application logger;\n+ `config` logger.\n\nMessages with either `WARNING` or `ERROR` severities are ***always*** printed to `rss_reader.log` file.\n\n`config` logs are only printed to console.\n\nIf `--verbose` argument is ***NOT*** passed, then only messages with either `WARNING` or `ERROR` severities\nof `rss_reader` are printed to console, `config` logs are not printed to console.\n\nIf `--verbose` argument is passed, then all `rss_reader` logs are printed both to console and log file, while `config`\nlogs are printed to console.\n\n## Configuration\n\nApplication creates several files:\n\n+ `cache.json`;\n+ `rss_reader.log`;\n+ converted to supported formats files: `news.html`/`pdf`/`epub`\n\nBy default, the application files are stored in the home directory:\n\n    - Windows: C:\\Users\\User\\rss_reader\n    - Linux: /home/username/rss_reader\n\nYou can change this by adding `rss_reader.ini` file inside `rss_reader` package.\n\nThe structure of `rss_reader.ini` file is the following:\n\n    [rss-reader]\n    DEFAULT_DIR_PATH =\n    LOG_DIR_PATH =\n    CACHE_DIR_PATH =\n    CONVERT_DIR_PATH =\n\nThe directory path resolution order for storing files, *from lowest to highest priority*, can be found below.\n\nFor `rss_reader.log` file:\n\n    home directory -> DEFAULT_DIR_PATH -> LOG_DIR_PATH \n\nFor `cache.json` file:\n\n    home directory -> DEFAULT_DIR_PATH -> CACHE_DIR_PATH \n\nFor converted to supported formats files like news.`html`/`pdf`/`epub`:\n\n    home directory -> DEFAULT_DIR_PATH -> CONVERT_DIR_PATH -> command line arguments \n\nIf `rss_reader.ini` file was given an invalid path or the path was empty, then the directory path gets resolved in the\nreversed order.\n\n## Cache JSON structure\n\nCache represents a dictionary of URLs with according lists of dictionaries of items, preceded by a dictionary of feed\ninfo.\n\n*Example:*\n\n    {\n        \"https://news.yahoo.com/rss/\": [\n            {\n                \"title\": \"Yahoo News - Latest News & Headlines\",\n                \"description\": \"The latest news and headlines from Yahoo! News. Get breaking news stories and in-depth coverage with videos and photos.\",\n                \"link\": \"https://www.yahoo.com/news\",\n                \"image\": \"http://l.yimg.com/rz/d/yahoo_news_en-US_s_f_p_168x21_news.png\",\n                \"language\": \"en-US\"\n            },\n            {\n                \"id\": 1,\n                \"title\": \"Colombia's most wanted drug lord captured in jungle raid\",\n                \"description\": \"\",\n                \"link\": \"https://news.yahoo.com/colombia-announces-capture-one-most-233233294.html\",\n                \"author\": \"\",\n                \"pubDate\": \"2021-10-23T23:32:33Z\",\n                \"links\": {\n                    \"images\": [],\n                    \"audios\": [],\n                    \"others\": [\n                        \"https://s.yimg.com/uu/api/res/1.2/sbSt9k2i59Ne3T5Dahi7dg--~B/aD0xNTAwO3c9MjAwMDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/en/ap.org/1fc569ce977352662b4cf3039acae975\",\n                        \"http://www.ap.org\"\n                    ]\n                }\n            },\n            {\n                \"id\": 2,\n                \"title\": \"I took a 30-hour train from New York to Miami, and the motion sickness and terrible sleep were too much for me\",\n                \"description\": \"\",\n                \"link\": \"https://news.yahoo.com/took-30-hour-train-york-102700276.html\",\n                \"author\": \"\",\n                \"pubDate\": \"2021-10-24T10:27:00Z\",\n                \"links\": {\n                    \"images\": [],\n                    \"audios\": [],\n                    \"others\": [\n                        \"https://s.yimg.com/uu/api/res/1.2/OEoRF0WWW8IeP0etSC7D2w--~B/aD0yMjQ5O3c9MzAwMDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/en/insider_articles_922/86c1372fd1bf9d0690cac85bdcdecf5f\",\n                        \"https://www.insider.com\"\n                    ]\n                }\n            },\n            ...\n        ...\n\n*Some notes*:\n\n+ cache auto-update mechanisms are not implemented, thus it endlessly grows; in order to clear cache\n  file `--clear-cache` argument is provided;\n+ `--json`-printed results are different from ones, stored in cache; user is usually not encouraged to explore and\n  modify cache file (though, he is not forbidden to do so), because it's not a part of the public interface, that's why\n  developers have a right to implement it in a handy manner for them, but not in a user-friendly manner,\n  whereas `--json`\n  argument is a part of the user interface, that's why its output is user-friendly.\n\n`--json` output example:\n\n     {\n      \"feeds\": [\n          {\n              \"title\": \"Yahoo News - Latest News & Headlines\",\n              \"description\": \"The latest news and headlines from Yahoo! News. Get breaking news stories and in-depth coverage with videos and photos.\",\n              \"link\": \"https://www.yahoo.com/news\",\n              \"image\": \"http://l.yimg.com/rz/d/yahoo_news_en-US_s_f_p_168x21_news.png\",\n              \"language\": \"en-US\",\n              \"items\": [\n                  {\n                      \"id\": 1,\n                      \"title\": \"Colombia's most wanted drug lord captured in jungle raid\",\n                      \"description\": \"\",\n                      \"link\": \"https://news.yahoo.com/colombia-announces-capture-one-most-233233294.html\",\n                      \"author\": \"\",\n                      \"pubDate\": \"2021-10-23T23:32:33Z\",\n                      \"links\": {\n                          \"images\": [],\n                          \"audios\": [],\n                          \"others\": [\n                              \"https://s.yimg.com/uu/api/res/1.2/sbSt9k2i59Ne3T5Dahi7dg--~B/aD0xNTAwO3c9MjAwMDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/en/ap.org/1fc569ce977352662b4cf3039acae975\",\n                              \"http://www.ap.org\"\n                          ]\n                      }\n                  },\n                  ...\n          ...\n\nWhy is there a list of feeds inside `--json` structure, not just a single feed? Inside cache file there may be items\nwith the same `pubDate`, but they may belong to different feeds. So, when there are such items and a user\npasses `--date DATE` argument which represents this exact date, then these several items are returned and attributed to\nseveral newly created `Feed` instances. After that, these `Feed` instances are printed. Printing returned news could be\nimplemented without respect to the feeds they belong to, but in this case it would be hard to distinguish them.\n\n## Parsing XML\n\nXML is parsed by parser implemented from scratch, it exploits the idea of *tokenization* of XML, then dom-tree is created from tokens.\n\n*Features*:\n+ XML CDATA parsing support: whenever CDATA is encountered in XML, it gets recursively parsed and substituted by a normal text in the final form.\n\\\nXML CDATA example link: https://rss.art19.com/apology-line\n+ detecting invalid XML: parser notifies user with a wide range of messages whenever invalid syntax or some mistake was encountered in XML document.\n\\\nInvalid XML example: https://feedforall.com/sample.xml\n\\\nIts fragment:\n\n      <i><font color=\"#0000FF\">Homework Assignments <br> School Cancellations <br> Calendar of Events <br> Sports Scores <br> Clubs/Organization Meetings <br> Lunches Menus </i></font>\n\n\n## Tested RSS links\n\n+ https://feeds.megaphone.fm/WWO3519750118\n+ https://news.yahoo.com/rss/\n+ https://rss.art19.com/apology-line\n+ https://feeds.simplecast.com/54nAGcIl\n+ https://feedforall.com/sample.xml\n+ https://rss.dw.com/xml/rss-ru-rus\n+ https://people.onliner.by/feed\n+ https://brestcity.com/blog/feed\n+ https://www.theguardian.com/international/rss - fails saving to .pdf\n+ https://rss.dw.com/xml/rss-ru-news\n+ https://lenta.ru/rss/top7\n+ https://www.liga.net/tech/battles/rss.xml\n\n\n## Testing\n\nModules tested:\n+ _caching.py\n+ _builder.py\n+ _parser.py\n\nTest coverage is 53%.\n\nIn order to run tests, please, install dependencies:\n\n    pip install pytest pytest-cov\n\n\nAnd use the following command:\n\n    pytest --cov=rss_reader tests/\n\n\n## Known problems:\n\n+ big feeds like this one https://feeds.megaphone.fm/WWO3519750118 may get truncated when printing to console because of\n  its native limitations;\n+ `--colorize` works console-specifically, which implies that in different terminals colorized text may look\n  differently.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/doppelmarker/Homework",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "markedrss",
    "package_url": "https://pypi.org/project/markedrss/",
    "platform": "",
    "project_url": "https://pypi.org/project/markedrss/",
    "project_urls": {
      "Homepage": "https://github.com/doppelmarker/Homework"
    },
    "release_url": "https://pypi.org/project/markedrss/3.2.2/",
    "requires_dist": [
      "requests",
      "pydantic",
      "Jinja2",
      "xhtml2pdf",
      "ebooklib",
      "colorama",
      "aiohttp ; extra == 'aiohttp'"
    ],
    "requires_python": ">=3.9",
    "summary": "Pure Python command-line RSS reader",
    "version": "3.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11822325,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8568a755af9f6cd39051a756f74dfcfa8c2ade4b6afc604dd1291a339f00293d",
        "md5": "2e21d25b2222c61e4d9b26447e1d080e",
        "sha256": "d7995f91f9fe3e54bb506a1e829bd5bf7e9c24ed0144e2e0a702cde51b61c502"
      },
      "downloads": -1,
      "filename": "markedrss-3.2.2-3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e21d25b2222c61e4d9b26447e1d080e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 31683,
      "upload_time": "2021-10-25T10:56:14",
      "upload_time_iso_8601": "2021-10-25T10:56:14.552038Z",
      "url": "https://files.pythonhosted.org/packages/85/68/a755af9f6cd39051a756f74dfcfa8c2ade4b6afc604dd1291a339f00293d/markedrss-3.2.2-3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ea4947a2aaf5e3642c822b3a3d565e7c97478c822d6175b71312056d1de78e8",
        "md5": "a48cffb5e2c45b266723c6412468f06a",
        "sha256": "caad67117cef5cbfcc9c8e23fda377dd7f54d92313bb1233885231f6ce589eec"
      },
      "downloads": -1,
      "filename": "markedrss-3.2.2-3.tar.gz",
      "has_sig": false,
      "md5_digest": "a48cffb5e2c45b266723c6412468f06a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 25542,
      "upload_time": "2021-10-25T10:56:16",
      "upload_time_iso_8601": "2021-10-25T10:56:16.616895Z",
      "url": "https://files.pythonhosted.org/packages/8e/a4/947a2aaf5e3642c822b3a3d565e7c97478c822d6175b71312056d1de78e8/markedrss-3.2.2-3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}