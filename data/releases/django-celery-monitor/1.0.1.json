{
  "info": {
    "author": "Jannis Leidel",
    "author_email": "jannis@leidel.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "============================\nCelery Monitoring for Django\n============================\n\n:Version: 1.0.1\n:Web: https://django-celery-monitor.readthedocs.io/\n:Download: https://pypi.python.org/pypi/django_celery_monitor\n:Source: https://github.com/jezdez/django-celery-monitor\n:Keywords: django, celery, events, monitoring\n\n|build-status| |coverage| |license| |wheel| |pyversion| |pyimp|\n\nAbout\n=====\n\nThis extension enables you to monitor Celery tasks and workers.\n\nIt defines two models (``django_celery_monitor.models.WorkerState`` and\n``django_celery_monitor.models.TaskState``) used to store worker and task states\nand you can query this database table like any other Django model.\nIt provides a Camera class (``django_celery_monitor.camera.Camera``) to be\nused with the Celery events command line tool to automatically populate the\ntwo models with the current state of the Celery workers and tasks.\n\nHistory\n=======\n\nThis package is a Celery 4 compatible port of the Django admin based\nmonitoring feature that was included in the old\n`django-celery <https://pypi.python.org/pypi/django-celery>`_ package which\nis only compatible with Celery < 4.0.\nOther parts of django-celery were released as\n`django-celery-beat <https://pypi.python.org/pypi/django_celery_beat>`_\n(Database-backed Periodic Tasks) and\n`django-celery-results <https://pypi.python.org/pypi/django_celery_results>`_\n(Celery result backends for Django).\n\nInstallation\n============\n\nYou can install django-celery-monitor either via the Python Package Index (PyPI)\nor from source.\n\nTo install using `pip`,:\n\n.. code-block:: console\n\n    $ pip install -U django-celery-monitor\n\nUsage\n=====\n\nTo use this with your project you need to follow these steps:\n\n#. Install the django_celery_monitor library:\n\n   .. code-block:: console\n\n      $ pip install django_celery_monitor\n\n#. Add ``django_celery_monitor`` to ``INSTALLED_APPS`` in your\n   Django project's ``settings.py``::\n\n    INSTALLED_APPS = (\n        ...,\n        'django_celery_monitor',\n    )\n\n   Note that there is no dash in the module name, only underscores.\n\n#. Create the Celery database tables by performing a database migrations:\n\n   .. code-block:: console\n\n      $ python manage.py migrate django_celery_monitor\n\nStarting the monitoring process\n===============================\n\nTo enable taking snapshots of the current state of tasks and workers you'll\nwant to run the Celery events command with the appropriate camera class\n``django_celery_monitor.camera.Camera``:\n\n.. code-block:: console\n\n    $ celery -A proj events -l info --camera django_celery_monitor.camera.Camera --frequency=2.0\n\nFor a complete listing of the command-line options available see:\n\n.. code-block:: console\n\n    $ celery events --help\n\nConfiguration\n=============\n\nThere are a few settings that regulate how long the task monitor should keep\nstate entries in the database. Either of the three should be a\n``datetime.timedelta`` value or ``None``.\n\n- ``monitor_task_success_expires`` -- Defaults to ``timedelta(days=1)`` (1 day)\n\n  The period of time to retain monitoring information about tasks with a\n  ``SUCCESS`` result.\n\n- ``monitor_task_error_expires`` -- Defaults to ``timedelta(days=3)`` (3 days)\n\n  The period of time to retain monitoring information about tasks with an\n  errornous result (one of the following event states: ``RETRY``, ``FAILURE``,\n  ``REVOKED``.\n\n- ``monitor_task_pending_expires`` -- Defaults to ``timedelta(days=5)`` (5 days)\n\n  The period of time to retain monitoring information about tasks with a\n  pending result (one of the following event states: ``PENDING``, ``RECEIVED``,\n  ``STARTED``, ``REJECTED``, ``RETRY``.\n\nIn your Celery configuration simply set them to override the defaults, e.g.::\n\n    from datetime import timedelta\n\n    monitor_task_success_expires = timedelta(days=7)\n\n\n.. |build-status| image:: https://secure.travis-ci.org/jezdez/django-celery-monitor.svg?branch=master\n    :alt: Build status\n    :target: https://travis-ci.org/jezdez/django-celery-monitor\n\n.. |coverage| image:: https://codecov.io/github/jezdez/django-celery-monitor/coverage.svg?branch=master\n    :target: https://codecov.io/github/jezdez/django-celery-monitor?branch=master\n\n.. |license| image:: https://img.shields.io/pypi/l/django-celery-monitor.svg\n    :alt: BSD License\n    :target: https://opensource.org/licenses/BSD-3-Clause\n\n.. |wheel| image:: https://img.shields.io/pypi/wheel/django-celery-monitor.svg\n    :alt: django-celery-monitor can be installed via wheel\n    :target: http://pypi.python.org/pypi/django_celery_monitor/\n\n.. |pyversion| image:: https://img.shields.io/pypi/pyversions/django-celery-monitor.svg\n    :alt: Supported Python versions.\n    :target: http://pypi.python.org/pypi/django_celery_monitor/\n\n.. |pyimp| image:: https://img.shields.io/pypi/implementation/django-celery-monitor.svg\n    :alt: Support Python implementations.\n    :target: http://pypi.python.org/pypi/django_celery_monitor/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jezdez/django-celery-monitor",
    "keywords": "celery django events monitoring",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django_celery_monitor",
    "package_url": "https://pypi.org/project/django_celery_monitor/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django_celery_monitor/",
    "project_urls": {
      "Homepage": "https://github.com/jezdez/django-celery-monitor"
    },
    "release_url": "https://pypi.org/project/django_celery_monitor/1.0.1/",
    "requires_dist": [
      "celery (>=4.0,<5.0)"
    ],
    "requires_python": "",
    "summary": "Celery monitor for Django.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8757065,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1b00779a9354b83a4e5cd2386e14caed960e6d695342dbbd0be45cd5af54817",
        "md5": "fcfd6b21ea8cb23f4126ad52e624ba13",
        "sha256": "b3f9a5e1b5cf751ac750153038f5b4f7ad60a652f36e8b49c31e59ce55c0a138"
      },
      "downloads": -1,
      "filename": "django_celery_monitor-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fcfd6b21ea8cb23f4126ad52e624ba13",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18181,
      "upload_time": "2017-05-03T08:42:45",
      "upload_time_iso_8601": "2017-05-03T08:42:45.216143Z",
      "url": "https://files.pythonhosted.org/packages/f1/b0/0779a9354b83a4e5cd2386e14caed960e6d695342dbbd0be45cd5af54817/django_celery_monitor-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7efefad883f853f9da4fafe0e19f24a1071ccd37bd9ba27177e7ac94e66f687f",
        "md5": "20c909a1e6a533c1f90e29bdb2d02b4b",
        "sha256": "95ea0a3bc55af27e929f5eb745bc459f3e9c1afb149b9e83100f4fbd514425f2"
      },
      "downloads": -1,
      "filename": "django_celery_monitor-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "20c909a1e6a533c1f90e29bdb2d02b4b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 61550,
      "upload_time": "2017-05-03T08:42:47",
      "upload_time_iso_8601": "2017-05-03T08:42:47.699857Z",
      "url": "https://files.pythonhosted.org/packages/7e/fe/fad883f853f9da4fafe0e19f24a1071ccd37bd9ba27177e7ac94e66f687f/django_celery_monitor-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}