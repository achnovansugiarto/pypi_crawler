{
  "info": {
    "author": "Mara contributors",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Mara Metabase\n\n[![Build Status](https://travis-ci.org/mara/mara-metabase.svg?branch=master)](https://travis-ci.org/mara/mara-metabase)\n[![PyPI - License](https://img.shields.io/pypi/l/mara-metabase.svg)](https://github.com/mara/mara-metabase/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/mara-metabase.svg)](https://badge.fury.io/py/mara-metabase)\n[![Slack Status](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://communityinviter.com/apps/mara-users/public-invite)\n\n\nAutomating the setup and configuration of Metabase instances. Comes with \n\n- Functions for adding users, databases & settings \n\n- Syncing of field descriptions and metrics defined with [Mara Schema](https://github.com/mara/mara-schema) to Metabase\n\n- syncing of users and permissions to Metabase\n\n- A Makefile for running Metabase locally\n\n\n&nbsp;\n\n## Installation\n\nTo use the library directly, use pip:\n\n```\npip install mara-metabase\n```\n\nor\n \n```\npip install -e git+https://github.com/mara/mara-metabase.git\n```\n\nFor an example of an integration into a flask application, have a look at the [mara example project 1](https://github.com/mara/mara-example-project-1).\n\n\n&nbsp;\n\n## Running Metabase\n\nFrom within a project, include [https://github.com/mara/mara-metabase/tree/master/.scripts/metabase.mk] in your project Makefile (as for example in [https://github.com/mara/mara-example-project-1/blob/master/Makefile](https://github.com/mara/mara-example-project-1/blob/master/Makefile)).\n\nRunning `make setup-metabase` will download a Metabase jar file, run database migrations, add an admin user & create a database connection to the data warehouse. Then running `make run-metabase` will start Metabase on port 3000: \n\n![Saiku](https://github.com/mara/mara-metabase/raw/master/docs/metabase.png)\n\nYou can log in with the default username `admin@my-company.com` and the password `123abc` (configurable via [mara_metabase/config.py](https://github.com/mara/mara-metabase/tree/master/mara_metabase/config.py), please change in production). \n\nFor running Metabase in production, please have a look at [https://www.metabase.com/docs/latest/operations-guide/installing-metabase.html](https://www.metabase.com/docs/latest/operations-guide/installing-metabase.html).\n\n&nbsp;\n\n## Features\n\n### Programatically setting up Metabase\n\nThe file [mara_metabase/setup.py](https://github.com/mara/mara-metabase/tree/master/mara_metabase/setup.py) contains functions for configuring a Metabase instance by directly writing to its metadata database (rather than manually configuring an instance through the UI). These functions are particularly useful when multiple Metabase instances are maintained (e.g. one for each testing / staging environment).\n\nThere is a a flask cli command for running the `setup` function: `flask mara_metabase.setup`. \n\n&nbsp;\n\n### Metadata sync\n\nIf you have a data warehouse schema defined in [Mara Schema](https://github.com/mara/mara-schema), then you can automatically sync field descriptions and metric definitions with the `update_metadata` function in [mara_metabase/metadata.py](https://github.com/mara/mara-metabase/tree/master/mara_metabase/metadata.py).\n\nHere's an example of an automatically synced definition for the metric average order value: \n\n![Metabae metadata sync](https://github.com/mara/mara-metabase/raw/master/docs/metabase-metadata-sync.png)\n\nThis function assumes that all reporting tables were created using the sql-generation features of Mara Schema.\n\nThe schema sync can be triggered manually with `flask mara_metabase.update-metadata`.\n\nHave a look at [https://github.com/mara/mara-example-project-1/blob/master/app/pipelines/update_frontends/__init__.py](https://github.com/mara/mara-example-project-1/blob/master/app/pipelines/update_frontends/__init__.py) for how to integrate schema sync into a data pipeline.\n\n&nbsp;\n\n\n## Syncing of users, groups & permissions from [Mara ACL](https://github.com/mara/mara-acl)\n\nOnce you add the Saiku ACL resource in [mara_metabase/views.py](https://github.com/mara/mara-metabase/tree/master/mara_metabase/views.py) to your project, you can control easily control which users can query which data sets:\n\n![Metabase ACL](https://github.com/mara/mara-metabase/raw/master/docs/mara-acl.png)\n\nAll users in Mara ACL will be synced to Metabase together with their respective groups. Permissions in Metabase can be given for all or for individual data sets.\n\nIn this example, users from the \"Management\" group can query all data sets, and users from \"Marketing\" only \"Customers\" and \"Leads\" (with the exception of Thomas who can also query \"Order items\" and \"Sellers\").\n\nThis is the same data in the Metabase admin UI:\n\n![Metabase permissions](https://github.com/mara/mara-metabase/raw/master/docs/metabase-permissions.png)\n\n\n&nbsp;\n\nThe easiest way to try out Mara Metabase is to run the [mara example project 1](https://github.com/mara/mara-example-project-1).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mara/mara-metabase",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mara-metabase",
    "package_url": "https://pypi.org/project/mara-metabase/",
    "platform": "",
    "project_url": "https://pypi.org/project/mara-metabase/",
    "project_urls": {
      "Homepage": "https://github.com/mara/mara-metabase"
    },
    "release_url": "https://pypi.org/project/mara-metabase/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Configuring Metabase from Python",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13971376,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e99d14e90836a0d70c4899215710a032b8c9c57d3c4f9e23ba97516057602e7d",
        "md5": "dd6b4e52b97553de30e7b0ba1c070c77",
        "sha256": "9bb0a13b124fb639b9040c5963dc364f4645cf94ffaee32030eb484fb549559c"
      },
      "downloads": -1,
      "filename": "mara-metabase-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dd6b4e52b97553de30e7b0ba1c070c77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11299,
      "upload_time": "2020-07-13T10:50:23",
      "upload_time_iso_8601": "2020-07-13T10:50:23.625352Z",
      "url": "https://files.pythonhosted.org/packages/e9/9d/14e90836a0d70c4899215710a032b8c9c57d3c4f9e23ba97516057602e7d/mara-metabase-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}