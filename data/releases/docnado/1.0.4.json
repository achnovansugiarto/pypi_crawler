{
  "info": {
    "author": "Hardy & Ellis Inventions LTD",
    "author_email": "support@heinventions.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# docnado\n\nA rapid documentation tool to blow you away.\n\nDocnado makes it easy to start and maintain a Markdown documentation project.  Store your own data your own way.\n\n[![PyPI version](https://badge.fury.io/py/docnado.svg)](https://badge.fury.io/py/docnado)\n\n# Basic Features\n\nDocnado renders an adapted Markdown to provide:\n\n* Images, Video, YouTube links, CSV tables.\n* Code highlighting.\n* File download blocks.\n* Lists and Tables.\n* Document defined template selection.\n* Document Meta-data.\n* Auto-generated index sidebar.\n\nDocnado can:\n\n* Output documents as insecure HTML on a localhost.\n* Output documents as PDF files via the HTML server.\n* Create a **static** set of HTML files that contain the documentation and related resources.\n\n# Advanced Features\n\n* Automatically find broken reference links in the generated HTML\n* Automatically find orphan files (i.e. images) that are not referenced by generated HTML\n\n# Usage\n\nBasic usage with the default template:\n\n```bash\npython -m pip install docnado --upgrade\nmkdir docs\nvim docs/home.md # then add some documentation\ndocnado\n```\n\nAdvanced usage with a custom templates and styles:\n\n```bash\npython -m pip install docnado --upgrade\ndocnado --new # copies sample style and docs into working directory\ndocnado # run the server\n```\n\n## Getting Started\n\nIf you are running from the script:\n\n```bash\npython docnado.py                       # start a server on localhost:5000\n\npython docnado.py --html                # freeze the server into a static site as a set of HTML files\n                                         # this will exit with -1 if there was a problem parsing any file\n\npython docnado.py --port                # specify a port for docnado to accept requests on\n\npython docnado.py --pdf                 # generate a set of pdf files for each .md file - won't pull through\n                                         # static resource files like with the --html command\n\npython docnado.py --new                 # copy default templates and sample docs into the working directory\n                                         # and update the config too, only if they don't already exist\n\npython docnado.py --new-force           # copy default templates and sample docs into the working directory\n                                         # and update the config too, this will overwrite any existing docs or\n                                         # configs.\n\n\npython docnado.py --dirs                # display all the different directories docnado will use to generate\n                                         # the documentation\n\npython docnado.py --find-orphans        # display unreferenced media assets in the documentation\npython docnado.py --find-broken-links   # display external broken links in the documentation\n```\n\n### Writing Documentation\n\nDocuments are managed using `meta-data` at the top of each document.\nDocuments can select which `template` they present themselves with.\nDocuments must end in **lowercase** `.md`. For example: `mydocument.md`.\n\n\n### Environment Variables\n\n* `DN_FLASK_DEBUG` flag for enabling or disabling flask debug. Defaults to `TRUE`.\n* `DN_RELOAD_ON_CHANGES` flag for reloading the server when a file changes. Defaults to `TRUE`.\n* `DN_WKHTMLTOPDF` the path to the WkHTMLtoPDF binary. Defaults to `wkhtmltopdf_0.12.5.exe`.\n* `DN_DOCS_DIR` the path to the directory that contains the documents. Defaults to `docs`.\n* `DN_STYLE_DIR` the path to the directory that contains the style templates and resources. Defaults to `style`.\n* `DN_PROJECT_LOGO` the path to the project logo *PNG* file. Defaults to `logo.png` in the current working directory.\n\n## Development\n\n### Virtual Environment\n\n```python\npython -m virtualenv env\nenv/Scripts/activate.bat # or the bash equivalent\npip install -r requirements.txt\n```\n\n```python\npython docnado.py # with options\n```\n\n```python\npip install flake8\nflake8 docnado.py --max-line-length=120\n```\n\n### WkHTMLtoPDF\n\nTo enable PDF output, WkHTMLtoPDF must be set in the config `DN_WKHTMLTOPDF` or `wkhtmltopdf_0.12.5.exe` placed in working directory.\n\nThis build uses version 0.12.5. Get it from here: https://wkhtmltopdf.org/downloads.html\n\n### SCSS\n\nThe default theme is built using SCSS.\n\nThe SASSC compiler can be found here: http://libsass.ocbnet.ch/installer/\nUsage: `sassc style/static/default.scss style/static/default.css`\n\nIf you want it to auto-watch, run as admin from this directory, and remember to disable your browser cache:\n\n```bash\npip install watchdog\nwatchmedo shell-command --patterns=\"*.scss\" --recursive --command='echo \"${watch_src_path}\" && sassc style/static/default.scss style/static/default.css' .\n````\n\n### Style\n\nWe use `flake8 docnado.py --max-line-length=110` to static check the code.\n\n### Rebuilding the Package\n\nPyPi\n\n```\npython -m pip install --user --upgrade setuptools wheel twine\npython setup.py sdist bdist_wheel\n\npython -m twine upload dist/*\n```\n\nExecutable\n\n```\nenv\\Scripts\\activate.bat\npip install pyinstaller\npyinstaller docnado.py\n```\n\n## Roadmap\n\nWe are requesting pull-requests for the following features:\n\n* [ ] Test cases and CI steps\n* [ ] Responsive design in default template.\n* [ ] Generate a large PDF file made from multiple documents (including table of contents with page numbers).\n* [ ] Gravatar print CSS / absent internet in the default theme.\n* [ ] Examples of Python extensions and SCSS extensions.\n* [ ] New template themes.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HEInventions/docnado",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docnado",
    "package_url": "https://pypi.org/project/docnado/",
    "platform": "",
    "project_url": "https://pypi.org/project/docnado/",
    "project_urls": {
      "Homepage": "https://github.com/HEInventions/docnado"
    },
    "release_url": "https://pypi.org/project/docnado/1.0.4/",
    "requires_dist": [
      "Flask (==1.0.2)",
      "Markdown (==2.6.11)",
      "timeago (==1.0.8)",
      "Frozen-Flask (==0.15)",
      "beautifulsoup4 (==4.6.3)",
      "requests (==2.20.0)",
      "watchdog (==0.9.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A rapid documentation tool to blow you away.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12971516,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e498b82156eaadeccd45989aad88aba0dea65eb1cfabbfe9c74f2328d4275f38",
        "md5": "488ef6b8a8755b3e170bea56c808fba5",
        "sha256": "95f36ba263fb6d54357ef677fafa6e6092c6e8b44d874043469d1f399583ae6c"
      },
      "downloads": -1,
      "filename": "docnado-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "488ef6b8a8755b3e170bea56c808fba5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 5819706,
      "upload_time": "2018-11-09T21:21:46",
      "upload_time_iso_8601": "2018-11-09T21:21:46.289799Z",
      "url": "https://files.pythonhosted.org/packages/e4/98/b82156eaadeccd45989aad88aba0dea65eb1cfabbfe9c74f2328d4275f38/docnado-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3a8c8e94ff43bf31997309664b2e315f4541676792bcd769113c97bc82cedd6",
        "md5": "31d0f6f666f117e752320fcce76c1659",
        "sha256": "a48b9169efc149de77165e87fe9595e079969c826eb0fa00d3e875fc585f5c53"
      },
      "downloads": -1,
      "filename": "docnado-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "31d0f6f666f117e752320fcce76c1659",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 5808120,
      "upload_time": "2018-11-09T21:23:09",
      "upload_time_iso_8601": "2018-11-09T21:23:09.631548Z",
      "url": "https://files.pythonhosted.org/packages/f3/a8/c8e94ff43bf31997309664b2e315f4541676792bcd769113c97bc82cedd6/docnado-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}