{
  "info": {
    "author": "Bruno Barreto Freitas",
    "author_email": "brunobarretofreitas@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "![Python application](https://github.com/brunobarretofreitas/django-rest-action-serializer/workflows/Python%20application/badge.svg) [![codecov](https://codecov.io/gh/brunobarretofreitas/django-rest-action-serializer/branch/master/graph/badge.svg)](https://codecov.io/gh/brunobarretofreitas/django-rest-action-serializer)\n\n# django-rest-action-serializer\nA Django app that provides a serializer that allows You to customize the fields according to the action provided without the need to create other serializers.\n\n# Installation\nInstall the package using pip\n\n```python\npip install django-rest-action-serializer\n```\nAnd then, include the app in your **INSTALLED_APPS** configuration in django settings:\n```python\nINSTALLED_APPS = [\n  ...,\n  ...,\n  'dra'\n]\n\n```\n\n# Quickstart\n\nAs an example, let's suppose You have a ModelViewSet which You need to display different fields in the list action and in the retrieve action. Without django-rest-action-serializer, You would do:\n\n```python\nclass SerializerForList(serializers.ModelSerializer):\n  \n    class Meta:\n        model = User\n        fields = ('url', 'name', 'age')\n    \n\nclass SerializerForDetail(SerializerForList):\n    stories = StorySerializer(many=True, read_only=True)\n    class Meta:\n        model = User\n        fields = ('name', 'age', 'stories')\n    \n\nclass UserModelViewSet(ModelViewSet):\n    serializer_class = SerializerForList\n    queryset = User.objects.all()\n    \n    def get_serializer_class(self):\n        if self.detail:\n            return SerializerForDetail\n        \n        return super().get_serializer_class()\n```\n\nA lot of code, right? See how It's easy to do it with django-rest-action-serializer\n\n```python\nfrom dra.serializers import ActionSerializer\n\nclass UserSerializer(ActionSerializer,\n                     serializers.ModelSerializer):\n    \n    class Meta:\n        model = User\n        fields = ('url', 'name', 'age',)\n        action_fields_map: {\n            'retrieve': {\n                'fields': fields + ('stories',),\n                'exclude': ('url',),\n                'custom_fields': {\n                    'stories': StorySerializer(\n                        read_only=True,\n                        many=True\n                    )\n                }\n            }\n        }\n        \nclass UserModelViewSet(ModelViewSet):\n    serializer_class = SerializerForList\n    queryset = User.objects.all()\n```\n\nSo, all You need to do is to make your serializer class innherit the ActionSerializer from django-rest-action-serializer and set in it's Meta class the **action_fields_map** attribute, with the following structure:\n\n```python\nclass Meta:\n    ...\n    action_fields_map = {\n      '<action name (retrieve, list, delete)>': {\n        'fields': (<all the fields you want to display/provide>),\n        'exclude': (<all the fields you want to remove from the fields attribute>),\n        'custom_fields': { # All the fields you need to customize\n          '<field_name>': <Serializer or Serializer Field Class (ex: UserSerializer, SerializerMethodField)>\n        }\n      }\n    }\n```\n\n# Contribution\nFeel free to contribute to this project :D Just open an issue or a pull-request",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/brunobarretofreitas/django-rest-action-serializer/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brunobarretofreitas/django-rest-action-serializer",
    "keywords": "django django-rest-framework api serializer",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-action-serializer",
    "package_url": "https://pypi.org/project/django-rest-action-serializer/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-action-serializer/",
    "project_urls": {
      "Download": "https://github.com/brunobarretofreitas/django-rest-action-serializer/archive/master.zip",
      "Homepage": "https://github.com/brunobarretofreitas/django-rest-action-serializer"
    },
    "release_url": "https://pypi.org/project/django-rest-action-serializer/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django app that provides a serializer that allows You to customize the fieldsaccording to the action provided without the need tocreate other serializers.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6576783,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b5057fa2cd3bc2cf05bf2f4a6a20b85e9f2d69aeb5c9f546690c608613fcbd4",
        "md5": "2a105b7d174c7d6cc3370d8e82100013",
        "sha256": "0e7c9b77439c4ee444d0bc73d647cc9cfab8ce599bccbc1004a17c6c1f15e9df"
      },
      "downloads": -1,
      "filename": "django-rest-action-serializer-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2a105b7d174c7d6cc3370d8e82100013",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5411,
      "upload_time": "2020-02-02T16:12:43",
      "upload_time_iso_8601": "2020-02-02T16:12:43.077525Z",
      "url": "https://files.pythonhosted.org/packages/3b/50/57fa2cd3bc2cf05bf2f4a6a20b85e9f2d69aeb5c9f546690c608613fcbd4/django-rest-action-serializer-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}