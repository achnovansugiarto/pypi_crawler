{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-polymorphic-tree\n=======================\n\n.. image:: https://img.shields.io/travis/edoburu/django-polymorphic-tree/master.svg?branch=master\n    :target: http://travis-ci.org/edoburu/django-polymorphic-tree\n.. image:: https://img.shields.io/pypi/v/django-polymorphic-tree.svg\n    :target: https://pypi.python.org/pypi/django-polymorphic-tree/\n.. image:: https://img.shields.io/pypi/dm/django-polymorphic-tree.svg\n    :target: https://pypi.python.org/pypi/django-polymorphic-tree/\n.. image:: https://img.shields.io/badge/wheel-yes-green.svg\n    :target: https://pypi.python.org/pypi/django-polymorphic-tree/\n.. image:: https://img.shields.io/pypi/l/django-polymorphic-tree.svg\n    :target: https://pypi.python.org/pypi/django-polymorphic-tree/\n.. image:: https://img.shields.io/codecov/c/github/edoburu/django-polymorphic-tree/master.svg\n    :target: https://codecov.io/github/edoburu/django-polymorphic-tree?branch=master\n\nThis package combines django-mptt_ with django-polymorphic_.\n\nIn other words, this module provides a node tree, where each node can be a different model type.\nThis allows you to freely structure tree data. For example:\n\n* Build a tree of a root node, category nodes, leaf nodes, each with custom fields.\n* Build a todo list of projects, categories and items.\n* Build a book of chapters, sections, and pages.\n\nOrigin\n------\n\nThis module was extracted out of django-fluent-pages_ because it turned out to serve a generic purpose.\nThis was done during contract work at Leukeleu_ (also known for their involvement in django-fiber_).\n\n\nInstallation\n============\n\nFirst install the module, preferably in a virtual environment::\n\n    pip install django-polymorphic-tree\n\nOr install the current repository::\n\n    pip install -e git+https://github.com/edoburu/django-polymorphic-tree.git#egg=django-polymorphic-tree\n\nThe main dependencies are django-mptt_ and django-polymorphic_,\nwhich will be automatically installed.\n\nConfiguration\n-------------\n\nNext, create a project which uses the application::\n\n    cd ..\n    django-admin.py startproject demo\n\nAdd the following to ``settings.py``:\n\n.. code:: python\n\n    INSTALLED_APPS += (\n        'polymorphic_tree',\n        'polymorphic',\n        'mptt',\n    )\n\n\nUsage\n-----\n\nThe main feature of this module is creating a tree of custom node types.\nIt boils down to creating a application with 2 files:\n\nThe ``models.py`` file should define the custom node type, and any fields it has:\n\n.. code:: python\n\n    from django.db import models\n    from django.utils.translation import ugettext_lazy as _\n    from polymorphic_tree.models import PolymorphicMPTTModel, PolymorphicTreeForeignKey\n\n\n    # A base model for the tree:\n\n    class BaseTreeNode(PolymorphicMPTTModel):\n        parent = PolymorphicTreeForeignKey('self', blank=True, null=True, related_name='children', verbose_name=_('parent'))\n        title = models.CharField(_(\"Title\"), max_length=200)\n\n        class Meta(PolymorphicMPTTModel.Meta):\n            verbose_name = _(\"Tree node\")\n            verbose_name_plural = _(\"Tree nodes\")\n\n\n    # Create 3 derived models for the tree nodes:\n\n    class CategoryNode(BaseTreeNode):\n        opening_title = models.CharField(_(\"Opening title\"), max_length=200)\n        opening_image = models.ImageField(_(\"Opening image\"), upload_to='images')\n\n        class Meta:\n            verbose_name = _(\"Category node\")\n            verbose_name_plural = _(\"Category nodes\")\n\n\n    class TextNode(BaseTreeNode):\n        extra_text = models.TextField()\n\n        # Extra settings:\n        can_have_children = False\n\n        class Meta:\n            verbose_name = _(\"Text node\")\n            verbose_name_plural = _(\"Text nodes\")\n\n\n    class ImageNode(BaseTreeNode):\n        image = models.ImageField(_(\"Image\"), upload_to='images')\n\n        class Meta:\n            verbose_name = _(\"Image node\")\n            verbose_name_plural = _(\"Image nodes\")\n\n\nThe ``admin.py`` file should define the admin, both for the child nodes and parent:\n\n.. code:: python\n\n    from django.contrib import admin\n    from django.utils.translation import ugettext_lazy as _\n    from polymorphic_tree.admin import PolymorphicMPTTParentModelAdmin, PolymorphicMPTTChildModelAdmin\n    from . import models\n\n\n    # The common admin functionality for all derived models:\n\n    class BaseChildAdmin(PolymorphicMPTTChildModelAdmin):\n        GENERAL_FIELDSET = (None, {\n            'fields': ('parent', 'title'),\n        })\n\n        base_model = models.BaseTreeNode\n        base_fieldsets = (\n            GENERAL_FIELDSET,\n        )\n\n\n    # Optionally some custom admin code\n\n    class TextNodeAdmin(BaseChildAdmin):\n        pass\n\n\n    # Create the parent admin that combines it all:\n\n    class TreeNodeParentAdmin(PolymorphicMPTTParentModelAdmin):\n        base_model = models.BaseTreeNode\n        child_models = (\n            (models.CategoryNode, BaseChildAdmin),\n            (models.TextNode, TextNodeAdmin),  # custom admin allows custom edit/delete view.\n            (models.ImageNode, BaseChildAdmin),\n        )\n\n        list_display = ('title', 'actions_column',)\n\n        class Media:\n            css = {\n                'all': ('admin/treenode/admin.css',)\n            }\n\n\n    admin.site.register(models.BaseTreeNode, TreeNodeParentAdmin)\n\n\nThe ``child_models`` attribute defines which admin interface is loaded for the *edit* and *delete* page.\nThe list view is still rendered by the parent admin.\n\n\nTests\n-----\n\nTo run the included test suite, execute::\n\n    ./runtests.py\n\nTo test support for multiple Python and Django versions, run tox from the repository root::\n\n    pip install tox\n    tox\n\nThe Python versions need to be installed at your system.  See pyenv (Linux) or Homebrew (Mac OS X).\n\nPython 2.6, 2.7, and 3.3 are the currently supported versions.\n\n\nTodo\n----\n\n* Sphinx Documentation\n\n\nContributing\n------------\n\nThis module is designed to be generic. In case there is anything you didn't like about it,\nor think it's not flexible enough, please let us know. We'd love to improve it!\n\nIf you have any other valuable contribution, suggestion or idea,\nplease let us know as well because we will look into it.\nPull requests are welcome too. :-)\n\n\n.. _Leukeleu: http://www.leukeleu.nl/\n.. _django-fiber: https://github.com/ridethepony/django-fiber\n.. _django-fluent-pages: https://github.com/edoburu/django-fluent-pages\n.. _django-mptt: https://github.com/django-mptt/django-mptt\n.. _django-polymorphic: https://github.com/chrisglass/django_polymorphic",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-polymorphic-tree/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-polymorphic-tree",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-polymorphic-tree",
    "package_url": "https://pypi.org/project/django-polymorphic-tree/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-polymorphic-tree/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-polymorphic-tree/zipball/master",
      "Homepage": "https://github.com/edoburu/django-polymorphic-tree"
    },
    "release_url": "https://pypi.org/project/django-polymorphic-tree/1.2.5/",
    "requires_dist": [
      "django-mptt (>=0.6.0)",
      "django-polymorphic (>=0.9.1)",
      "django-tag-parser (>=2.1)",
      "future (>=0.12.2)"
    ],
    "requires_python": "",
    "summary": "A polymorphic mptt structure to display content in a tree.",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12057859,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b27335e85b5c1016ae19c99b7e75335870c063c61d7f181954dab59aa574b33c",
        "md5": "b78169ebd41be3bb89066d96c2b5e95a",
        "sha256": "98ada863ee9c3bbd9b09f1aad45b1548e65e54321b6a2ff3b8142b105c227639"
      },
      "downloads": -1,
      "filename": "django_polymorphic_tree-1.2.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b78169ebd41be3bb89066d96c2b5e95a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 155614,
      "upload_time": "2016-05-23T12:42:25",
      "upload_time_iso_8601": "2016-05-23T12:42:25.747797Z",
      "url": "https://files.pythonhosted.org/packages/b2/73/35e85b5c1016ae19c99b7e75335870c063c61d7f181954dab59aa574b33c/django_polymorphic_tree-1.2.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "faad8286a662a1e1c35ae4624942ee4286171225539eb4270c8fdc786da61425",
        "md5": "34872843376724223ae2deff958f5cb1",
        "sha256": "9d34bddaf735c9adb022f2e5797c182c8f893a09e41d4578d341d4ee4034608b"
      },
      "downloads": -1,
      "filename": "django-polymorphic-tree-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "34872843376724223ae2deff958f5cb1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 138446,
      "upload_time": "2016-05-23T12:42:36",
      "upload_time_iso_8601": "2016-05-23T12:42:36.108804Z",
      "url": "https://files.pythonhosted.org/packages/fa/ad/8286a662a1e1c35ae4624942ee4286171225539eb4270c8fdc786da61425/django-polymorphic-tree-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}