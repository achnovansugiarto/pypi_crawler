{
  "info": {
    "author": null,
    "author_email": "Ivan Schaller <ivan@schaller.sh>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# manga-dlp\n\n## python script to download mangas\n\n#### CI/CD:\n\n[![status-badge](https://ci.44net.ch/api/badges/olofvndrhr/manga-dlp/status.svg)](https://ci.44net.ch/olofvndrhr/manga-dlp)\n[![Last Release](https://img.shields.io/github/release-date/olofvndrhr/manga-DLP?label=last%20release)](https://github.com/olofvndrhr/manga-dlp/releases)\n[![Version](https://img.shields.io/github/v/release/olofvndrhr/manga-dlp?label=version&sort=semver)](https://github.com/olofvndrhr/manga-dlp/releases)\n\n#### Code Analysis:\n\n[![Quality Gate Status](https://sonarqube.44net.ch/api/project_badges/measure?project=olofvndrhr%3Amanga-dlp&metric=alert_status&token=f9558470580eea5b4899cf33f190eee16011346d)](https://sonarqube.44net.ch/dashboard?id=olofvndrhr%3Amanga-dlp)\n[![Coverage](https://sonarqube.44net.ch/api/project_badges/measure?project=olofvndrhr%3Amanga-dlp&metric=coverage&token=f9558470580eea5b4899cf33f190eee16011346d)](https://sonarqube.44net.ch/dashboard?id=olofvndrhr%3Amanga-dlp)\n[![Bugs](https://sonarqube.44net.ch/api/project_badges/measure?project=olofvndrhr%3Amanga-dlp&metric=bugs&token=f9558470580eea5b4899cf33f190eee16011346d)](https://sonarqube.44net.ch/dashboard?id=olofvndrhr%3Amanga-dlp)\n\n#### Meta:\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-black)](https://github.com/psf/black)\n[![Types - Mypy](https://img.shields.io/badge/types-mypy-blue)](https://github.com/python/mypy)\n[![Imports - isort](https://img.shields.io/badge/imports-isort-ef8336.svg)](https://github.com/pycqa/isort)\n[![Tests](https://img.shields.io/badge/tests-pytest-yellow)](https://github.com/pytest-dev/pytest/)\n[![Coverage generation](https://img.shields.io/badge/coverage-coveragepy-green)](https://github.com/nedbat/coveragepy)\n[![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://snyk.io/learn/what-is-mit-license/)\n\n---\n\n## Description\n\nA manga download script written in python. It only supports [mangadex.org](https://mangadex.org/) for now. But support\nfor other sites is planned.\n\nBefore downloading a new chapter, the script always checks if there is already a chapter with the same name in the\ndownload directory. If found the chapter is skipped. So you can run the script on a schedule to only download new\nchapters without any additional setup.\n\nThe default behaiviour is to pack the images to a [cbz archive](https://en.wikipedia.org/wiki/Comic_book_archive). If\nyou just want the folder with all the pictures use the flag `--nocbz`.\n\n## _Currently_ Supported sites\n\n- [Mangadex.org](https://mangadex.org/)\n\n## Usage\n\n### Quick start\n\n```sh\npython3 manga-dlp.py \\\n          --url https://mangadex.org/title/a96676e5-8ae2-425e-b549-7f15dd34a6d8/komi-san-wa-komyushou-desu \\\n          --language \"en\" \\\n          --chapters \"all\"\n```\n\n### With GitHub\n\n```sh\ngit clone https://github.com/olofvndrhr/manga-dlp.git # clone the repository\n\ncd manga-dlp # go in the directory\n\npip install -r requirements.txt # install required packages\n\n# on windows\npython manga-dlp.py <options>\n# on unix\npython3 manga-dlp.py <options>\n```\n\n### With pip (pypi)\n\n(not yet done)\n\n### With docker\n\nSee the docker [README](./docker/README.md)\n\n## Options\n\n```txt\nusage: manga-dlp.py [-h] (-u URL_UUID | --read READ | -v) [-c CHAPTERS] [-p PATH] [-l LANG] [--list] [--format FORMAT] [--forcevol] [--wait WAIT] [--verbose]\n\nScript to download mangas from various sites\n\noptions:\n-h, --help                          show this help message and exit\n-u URL_UUID, --url URL_UUID         URL or UUID of the manga\n--read READ                         Path of file with manga links to download. One per line\n-v, --version                       Show version of manga-dlp and exit\n-c CHAPTERS, --chapters CHAPTERS    Chapters to download\n-p PATH, --path PATH                Download path. Defaults to \"<script_dir>/downloads\"\n-l LANG, --language LANG            Manga language. Defaults to \"en\" --> english\n--list                              List all available chapters. Defaults to false\n--format FORMAT                     Archive format to create. An empty string means dont archive the folder. Defaults to 'cbz'\n--forcevol                          Force naming of volumes. For mangas where chapters reset each volume\n--wait WAIT                         Time to wait for each picture to download in seconds(float). Defaults 0.5\n--verbose                           Verbose logging. Defaults to false\n```\n\n### Downloads file-structure\n\n```txt\n.\n└── <download path>/\n    └── <manga title>/\n        └── <chapter title>/\n```\n\n#### Example:\n\n```txt\n./downloads/mangatitle/chaptertitle(.cbz)\n```\n\n### Select chapters to download\n\n> With the option `-c \"all\"` you download every chapter available in the selected language\n\nTo download specific chapters you can use the option `-c` or `--chapters`. That you don't have to specify all chapters\nindividually, the script has some logic to fill in the blanks.\n\nExamples:\n\n```sh\n# if you want to download chapters 1 to 5\npython3 manga-dlp -u <url> -c 1-5\n\n# if you want to download chapters 1 and 5\npython3 manga-dlp -u <url> -c 1,5\n```\n\nIf you use `--forcevol` it's the same, just with the volume number\n\n```sh\n# if you want to download chapters 1:1 to 1:5\npython3 manga-dlp -u <url> -c 1:1-1:5\n\n# if you want to download chapters 1:1 and 1:5\npython3 manga-dlp -u <url> -c 1:1,1:5\n\n# to download the whole volume 1\npython3 manga-dlp -u <url> -c 1:\n```\n\nAnd a combination of all\n\n```sh\n# if you want to download chapters 1 to 5 and 9\npython3 manga-dlp -u <url> -c 1-5,9\n\n# with --forcevol\n# if you want to download chapters 1:1 to 1:5 and 9, also the whole volume 4\npython3 manga-dlp -u <url> -c 1:1-1:5,1:9,4:\n```\n\n### Read list of links from file\n\nWith the option `--read` you can specify a file with links to multiple mangas. They will be parsed from top to bottom\none at a time. Every link will be matched for the right api to use. It is important that you only have one link per\nline, otherwise they can't be parsed.\n\n#### Example:\n\n```txt\n# mangas.txt\nlink1\nlink2\nlink3\n```\n\n`python3 manga-dlp.py --read mangas.txt --list`\n\nThis will list all available chapters for link1, link2 and link3.\n\n### Set download path\n\nWith the option `-p/--path` you can specify a path to download the chapters to. The default path\nis `<script_dir>/downloads`. Absolute and relative paths are supported.\n\n#### Example:\n\n`python3 manga-dlp.py <other options> --path /media/mangas`\n\nThis will save all mangas/chapters in the path `/media/mangas/<manga title>/<chapter name>`\n\n### Set output format\n\n> `--format` currently only works with `\"\"`, `\"pdf\"`, `\"zip\"`, `\"rar\"` and `\"cbz\"`.\n> As it just renames the zip file with the new\n> suffix (except pdf).\n\nYou can specify the output format of the manga images with the `--format` option.\nThe default is set to `.cbz`, so if no format is given it falls back to `<manga-name>/<chapter_name>.cbz`\n\nFor pdf creation you have to install [img2pdf](https://pypi.org/project/img2pdf/).\nWith the amd64 docker image it is already installed\nsee more in the Docker [README.md](docker/README.md).\n\n#### Supported format options are:\n\n* cbz - `--format \"cbz\"` or `--format \".cbz\"` **- default**\n* cbr - `--format \"cbr\"` or `--format \".cbr\"`\n* zip - `--format \"zip\"` or `--format \".zip\"`\n* pdf - `--format \"pdf\"` or `--format \".pdf\"`\n* _none_ - `--format \"\"` - this saves the images just in a folder\n\n#### Example:\n\n`python3 manga-dlp.py <other options> --format \"zip\"`\n\nThis will download the chapter and save it as a zip archive.\n\n## Contribution / Bugs\n\nFor suggestions for improvement, just open a pull request.\n\nIf you want to add support for a new site, there is an api [template file](./contrib/api_template.py) which you can use.\n\nOtherwise you can open a issue with the name of the site which you want support for. (not guaranteed to be implemented)\n\nIf you encounter any bugs, also just open a issue with a description of the problem.\n\n## TODO's\n\n- <del>Make docker container for easy distribution</del>\n  --> [Dockerhub](https://hub.docker.com/repository/docker/olofvndrhr/manga-dlp)\n- <del>Automate release</del>\n  --> Done with woodpecker-ci\n- Make pypi package\n- Add more supported sites\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "downloader,manga,mangadex",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "manga-dlp",
    "package_url": "https://pypi.org/project/manga-dlp/",
    "platform": null,
    "project_url": "https://pypi.org/project/manga-dlp/",
    "project_urls": {
      "History": "https://github.com/olofvndrhr/manga-dlp/commits/master",
      "Homepage": "https://github.com/olofvndrhr/manga-dlp",
      "Source": "https://github.com/olofvndrhr/manga-dlp",
      "Tracker": "https://github.com/olofvndrhr/manga-dlp/issues"
    },
    "release_url": "https://pypi.org/project/manga-dlp/2.1.6/",
    "requires_dist": [
      "requests>=2.24.0"
    ],
    "requires_python": ">=3.8",
    "summary": "A cli manga downloader",
    "version": "2.1.6",
    "yanked": true,
    "yanked_reason": "wrong entry point"
  },
  "last_serial": 17257657,
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "8061c6c81545f678cc3cdb72517a88ee26e2d9f19f84ad2bf10216fe786704c3",
        "md5": "97ed88abfdc382edad0ae3e5b9cd98d8",
        "sha256": "a6558f3227f1dc23029136a6133d5cec81e01d6f272ed984b22e5341fc40b2f0"
      },
      "downloads": -1,
      "filename": "manga_dlp-2.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "97ed88abfdc382edad0ae3e5b9cd98d8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14927,
      "upload_time": "2022-06-22T10:37:56",
      "upload_time_iso_8601": "2022-06-22T10:37:56.877944Z",
      "url": "https://files.pythonhosted.org/packages/80/61/c6c81545f678cc3cdb72517a88ee26e2d9f19f84ad2bf10216fe786704c3/manga_dlp-2.1.6-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "wrong entry point"
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "3a2d4c01629f7eb0fcfcdd727732d8f7e49fdb452a30c1c64aa9259d93e86add",
        "md5": "121151a25b73bd37cf62a00a8e6dd93e",
        "sha256": "d29e4c4d25550938844fecc7d7ebbc3b0e1c9b8a446ae0cd0852f4a2a0d470ab"
      },
      "downloads": -1,
      "filename": "manga_dlp-2.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "121151a25b73bd37cf62a00a8e6dd93e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 22183,
      "upload_time": "2022-06-22T10:37:54",
      "upload_time_iso_8601": "2022-06-22T10:37:54.411537Z",
      "url": "https://files.pythonhosted.org/packages/3a/2d/4c01629f7eb0fcfcdd727732d8f7e49fdb452a30c1c64aa9259d93e86add/manga_dlp-2.1.6.tar.gz",
      "yanked": true,
      "yanked_reason": "wrong entry point"
    }
  ],
  "vulnerabilities": []
}