{
  "info": {
    "author": "Martin Rusilowicz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "MHelper\n=======\n\nA collection of utility packages.\n\n.. contents::\n\n.. **** autogenerated content follows ****\n\n\nansi\n----\nThis package contains constants for ANSI-terminal escape sequences for colour\nand font formatting.\nThere are also functions for generating 24-bit colour codes.\n\nPlease note that this package only defines the codes, it does not guarantee\nsupport for their correct interpretation in the terminal.\n\n\nansi_format_helper\n------------------\nContains functions for printing error tracebacks to an ANSI terminal using\ncolour highlighting, as well as a function to replace the default Python handler\nwith a colour version.\n\n\nansi_helper\n-----------\nUsing a string containing ANSI colour codes is problematic in that __len__, etc.\nreturn the length of the full text, including the codes.\n\nThis class provides functions for dealing with such strings, as well as a class\n`AnsiStr`, that behaves like `str`, but accounts for colour codes.\n\n\narray_helper\n------------\nThis package includes a variety of utility functions for dealing with arrays\n(lists, tuples, iterables, etc.)\n\n\nbatch_lists\n-----------\nContains a class and function for dealing with workloads split into batches.\n\n\ncolours\n-------\nContains constants and a class for dealing with 24 bit colours.\n\n\ncomponent_helper\n----------------\nAllows one to find connected components given a graph-like data-set without\nhaving to actually construct a graph.\n\n\ndata_store\n----------\nContains a class for generating proxies for settings objects, committing changes\nto disk when their attributes are modified.\n\n\ndebug_helper\n------------\nContains a terminal based object inspector `view`, which is similar to Python's\ninbuilt `help`, but prettier.\n\nWhen passed a raw function, this display hook includes the documentation,\narguments, and PEP-484 annotations.\n\nWhen passed a type, the documentation and available methods are included.\n\nWhen passed a list, tuple, or dict, the contents are of the iterable are\nincluded, one per line.\n\nWhen passed any object, the fields of the object are listed, if available,\nalongside the object repr.\n\n\ndispatch_helper\n---------------\nContains a multithreaded dispatch queue class, for dispatching function calls\ninto worker threads.\n\nThis can be easily converted into a multiprocessed queue, by having the threads\nmake a system call.\n\n\ndisposal_helper\n---------------\nContains the `ManagedWith` class, which allows a function to generate an object\ncompatible with `with ...`.\n\nThis may be more convenient than generating a separate class implementing\n`__enter__` and `__exit__` for simple functions.\n\n\ndocumentation_helper\n--------------------\nManages and creates a documentation `dict` from docstrings.\n\nThis handles extracting `:param:` tags, etc.\n\n\nemoji_helper\n------------\nHelper class that contains definitions for all emoji.\n\nNames should be identical to those defined in Unicode, with the exceptions:\n    * All names are in upper case\n    * Names beginning 1st, 2nd, 3rd are replaced with FIRST, SECOND, THIRD\n    * Special symbols &, # and * are replaced with AND, HASH and ASTERISK\n\n\nevent_helper\n------------\nContains the multiple dispatch `Event` class, which is designed to behave\nthe same as the one in C#.\n\n\nexception_helper\n----------------\nContains various assertion functions, generic exception classes and functions\nto generate error messages which actually try to be helpful.\n\nNotable examples include `SwitchError`, `NotSupportedError` and `safe_cast`.\n\nThis package also includes functions for more easily parsing exception\ntracebacks.\n\n\nfile_helper\n-----------\nVarious functions for parsing and generating filenames and enumerating\ndirectories.\n\n\nio_helper\n---------\nConvenience functions for reading and writing files of different types: text,\npickle, json, etc.\n\n\nipc_helper\n----------\nProvides an interprocess mutex.\n\nUses the `posix_ipc.Semaphore`.\n\n\nlambda_helper\n-------------\nProvides classes with lambda based dunders.\n\n\nlog_helper\n----------\nLogging helpers.\n\nIncludes:\n\n* A logging handler that formats for the terminal, including thread and process information.\n* A logger which highlights variadic values, contains helpers for dealing with progress bars, iteration, enumeration and timing.\n* A function to iterate information on existing loggers.\n\n\nmaths_helper\n------------\nContains a few simple math functions.\n\n\npassword_helper\n---------------\nFixes issues with the `keyring` library on Ubuntu - see the `get_keyring`\nfunction.\n\nContains a `ManagedPassword` class, which wraps the `keyring` module.\n\n\nprogress_helper\n---------------\nContains functions for generating the information required for progress-bar\ntype reports, notably the estimated time to completion.\n\n\nproperty_helper\n---------------\nVarious property related helpers:\n\n* Indexable properties\n* Frozen classes\n* Class properties\n\n\nproxy_helper\n------------\nContains the class `SimpleProxy` and its dependencies.\n\n\nqt_resource_objects\n-------------------\nWraps Qt resource paths into an object which extracts that resource, caching\nit if necessary.\n\n\nreflection_helper\n-----------------\nVarious helpers for reflection.\n\n\nserialisable\n------------\nDynamically generates both `__getstate__` and `__setstate__` based on a single\ndefinition of the serialisable (or non-serialisable) attributes.\n\n\nspecial_types\n-------------\nDefines a Sentinel class, as well as a typical `NOT_PROVIDED` sentinel value.\n\n\nstring_helper\n-------------\nFunctions for parsing strings into objects and generating strings from objects.\n\nAlso contains `TStr` functions that replicate several of Python's `str` methods.\nUnlike `str`, `TStr` permits an duck-typed object behaving *like* a `str`,\nrather than enforcing a `str` specificly.\n\n\nsubprocess_helper\n-----------------\nWraps a subprocess, creating threads to monitor its output, allowing a\nprocess's output to be recorded and displayed in real-time.\n\n\nsvg_helper\n----------\nFunctions for writing SVG images to disk.\n\n\nutf_helper\n----------\nFunctions for generating UTF-formatted text (e.g. bold, italic, small-caps,\netc.)\n\n\nutf_table\n---------\nThis is a package for drawing ASCII boxes and tables.\n\nA variety of box drawing character sets are specified, and table drawing\nsupports wrapping and text spanning multiple columns.\n\nUnlike most other available tools, the direction of lines is honoured and\nUTF characters can be used.\n\nTo draw a table, please see the `TextTable` class documentation.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/mjr129/mhelper",
    "keywords": "",
    "license": "https://www.gnu.org/licenses/agpl-3.0.html",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mhelper",
    "package_url": "https://pypi.org/project/mhelper/",
    "platform": "",
    "project_url": "https://pypi.org/project/mhelper/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/mjr129/mhelper"
    },
    "release_url": "https://pypi.org/project/mhelper/1.0.1.76/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Includes a collection of utility functions.",
    "version": "1.0.1.76",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6576140,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "721bc8131518be5d8d52c42dbc3b3a7d1a2deeb8a4973d95d47cd9f0a1068c84",
        "md5": "594afd7a04a68bc5e7cacebe5a357a61",
        "sha256": "e2871541c44ab607df182c28cc169ca5f9e1517e0b2705109f5aec4e9692c08d"
      },
      "downloads": -1,
      "filename": "mhelper-1.0.1.76.tar.gz",
      "has_sig": false,
      "md5_digest": "594afd7a04a68bc5e7cacebe5a357a61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1406537,
      "upload_time": "2020-02-05T14:14:20",
      "upload_time_iso_8601": "2020-02-05T14:14:20.856663Z",
      "url": "https://files.pythonhosted.org/packages/72/1b/c8131518be5d8d52c42dbc3b3a7d1a2deeb8a4973d95d47cd9f0a1068c84/mhelper-1.0.1.76.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}