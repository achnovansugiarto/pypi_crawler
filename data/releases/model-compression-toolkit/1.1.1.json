{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Model Compression Toolkit (MCT)\n![tests](https://github.com/sony/model_optimization/actions/workflows/run_tests_suite_tf27.yml/badge.svg)\n\n\nModel Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient, constrained hardware. <br />\nThis project provides researchers, developers and engineers tools for optimizing and deploying state-of-the-art neural network on efficient hardware. <br />\nSpecifically, this project applies constrained quantization and pruning schemes on a neural network. \n\nCurrently, this project only supports hardware friendly post training quantization (HPTQ) with Tensorflow 2 [1]. \n\nThe MCT project is developed by researchers and engineers working at Sony Semiconductors Israel.\n\nFor more information, please visit our [project website](https://sony.github.io/model_optimization/).\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Supported features](#supported-features)\n- [Results](#results)\n- [Contributions](#contributions)\n- [License](#license)\n\n## Getting Started\n\nThis section provides a quick starting guide. We begin with installtion via source code or pip server. Then, we provide a short usage example.\n\n### Installation\nSee the MCT install guide for the pip package, and build from source.\n\n\n#### From Source\n```\ngit clone https://github.com/sony/model_optimization.git\npython setup.py install\n```\n#### From PyPi - latest stable release\n```\npip install model-compression-toolkit\n```\n\nA nightly package is also available (unstable):\n```\npip install mct-nightly\n```\n\n\n### Usage Example \nAn example of how to use the post training quantization, using Keras, is shown in the following code snapshot.\n\n```python\nimport model_compression_toolkit as mct\n\n# Set the batch size of the images at each calibration iteration.\nbatch_size = 50\n\n# Create a representative data generator, which returns a list of images.\n# Load a folder of images. \nfolder = '/path/to/images/folder'\n\n# The images can be preprocessed using a list of preprocessing functions.\ndef normalization(x):\n    return (x - 127.5) / 127.5\n\n# Create a FolderImageLoader instance which loads the images, preprocess them and enables you to sample batches of them.\nimage_data_loader = mct.FolderImageLoader(folder,\n                                          preprocessing=[normalization],\n                                          batch_size=batch_size)\n\n# Create a Callable representative dataset for calibration purposes.\n# The function should be called without any arguments, and should return a list numpy arrays (array for each model's input).\n# For example: if the model has two input tensors - one with input shape of 32X32X3 and the second with input \n# shape of 224X224X3, and we calibrate the model using batches of 20 images,\n# calling representative_data_gen() should return a list \n# of two numpy.ndarray objects where the arrays' shapes are [(20, 32, 32, 3), (20, 224, 224, 3)].\ndef representative_data_gen() -> list:\n        return [image_data_loader.sample()]\n\n\n# Create a model and quantize it using the representative_data_gen as the calibration images.\n# Set the number of calibration iterations to 10.\nquantized_model, quantization_info = mct.keras_post_training_quantization(model,\n                                                                          representative_data_gen,\n                                                                          n_iter=10)\n```\nFor more examples please see the tutorials' directory.\n\n\n## Supported Features\n\nQuantization:\n\n\t* Post Training Quantization \n    * Gradient based post training (Experimental) \n    * Mixed-precision post training quantization (Experimental)\n\nTensorboard Visualization (Experimental):\n\n    * CS Analyizer: compare a model compressed with the orignal model to analyze large accuracy drops.\n    * Activation statisicis and errors\n\nMCT is tested with Tensorflow Version 2.7. \n\n## Tutorials and Results\nAs part of the MCT library, we have a set of example networks on image classification. These networks can be used as examples when using the package.\n\n* Image Classification Example with MobileNet V1 on ImageNet dataset\n\n| Network Name             | Float Accuracy  | 8Bit Accuracy   | Comments                             |\n| -------------------------| ---------------:| ---------------:| ------------------------------------:|\n| MobileNetV1 [2]          | 70.558          | 70.418          |                                      |\n\n\nFor more results please see [1]\n\n## Contributions\nMCT aims at keeping a more up-to-date fork and welcomes contributions from anyone.\n\n*You will find more information about contributions in the [Contribution guide](CONTRIBUTING.md).\n\n\n## License\n[Apache License 2.0](LICENSE).\n\n## Refernce \n\n[1] Habi, H.V., Peretz, R., Cohen, E., Dikstein, L., Dror, O., Diamant, I., Jennings, R.H. and Netzer, A., 2021. [HPTQ: Hardware-Friendly Post Training Quantization. arXiv preprint](https://arxiv.org/abs/2109.09113).\n\n[2] [MobilNet](https://keras.io/api/applications/mobilenet/#mobilenet-function) from Keras applications.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-compression-toolkit",
    "package_url": "https://pypi.org/project/model-compression-toolkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/model-compression-toolkit/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/model-compression-toolkit/1.1.1/",
    "requires_dist": [
      "networkx (==2.5)",
      "tqdm",
      "Pillow",
      "numpy",
      "opencv-python",
      "scikit-image",
      "scikit-learn",
      "tensorboard",
      "PuLP",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A Model Compression Toolkit for neural networks",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16747046,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adf833c433948f0fbe61bd0d0e2050333cd75460e2298857cf3e6b37d5941012",
        "md5": "a386024ba59493e31cfb803066ce7200",
        "sha256": "6b8c72f7b33cb13f174fd04891ebabf04c37d6c101e4cb09bd8c416f655df338"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a386024ba59493e31cfb803066ce7200",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 239404,
      "upload_time": "2022-01-12T18:22:05",
      "upload_time_iso_8601": "2022-01-12T18:22:05.102090Z",
      "url": "https://files.pythonhosted.org/packages/ad/f8/33c433948f0fbe61bd0d0e2050333cd75460e2298857cf3e6b37d5941012/model_compression_toolkit-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "741f996bacdc28c4a821e9a4b0fc904810f3265e08d2e54576f3b23a0bdcea6a",
        "md5": "1e732d627ce24b7d48cceac5231dcc41",
        "sha256": "a7da86c0348cb2ab55dd64a1323fdff2202d5cd91ceb7f7816ac7cc9a10a8807"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1e732d627ce24b7d48cceac5231dcc41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 126926,
      "upload_time": "2022-01-12T18:22:06",
      "upload_time_iso_8601": "2022-01-12T18:22:06.324365Z",
      "url": "https://files.pythonhosted.org/packages/74/1f/996bacdc28c4a821e9a4b0fc904810f3265e08d2e54576f3b23a0bdcea6a/model_compression_toolkit-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}