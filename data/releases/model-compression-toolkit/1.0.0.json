{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Model Compression Toolkit (MCT)\n![tests](https://github.com/sony/model_optimization/actions/workflows/run_tests_suite.yml/badge.svg)\n\n\nModel Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient hardware constrained. <br />\nThis project enables researchers, developers and engineers an easy way to optimized and deploy state-of-the-art neural network on efficient hardware. <br />\nSpecifically this project apply constrained quantization and pruning scheme on a neural network. \n\nCurrently, this project only support hardware friendly post training quantization (HPTQ) with Tensorflow 2 [1]. \n\nMCT project is developed by researchers and engineers working on the Sony Semiconductors Israel.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Supported features](#supported-features)\n- [Results](#results)\n- [Contributions](#contributions)\n- [License](#license)\n\n## Getting Started\n\nThis section provides a quick starting guide start with installtion via source code or pip server then a short example usage.\n\n### Installation\nSee the MCT install guide for the pip package, and build from source.\n\n\n#### From Source\n```\ngit clone https://github.com/sony/model_optimization.git\npython setup.py install\n```\n\n### Example Usage\nHere is a snapshot of a code that shown an example of how to use the post training quantization using keras.\n\n```python\nimport model_compression_toolkit as mct\n\n# Set the batch size of the images at each calibration iteration.\nbatch_size = 50\n\n# Create a representative data generator, which returns a list of images.\n# Load a folder of images. \nfolder = '/path/to/images/folder'\n\n# The images can be preprocessed using a list of preprocessing functions.\ndef normalization(x):\n    return (x - 127.5) / 127.5\n\n# Create a FolderImageLoader instance which loads the images, preprocess them and enables you to sample batches of them.\nimage_data_loader = mct.FolderImageLoader(folder,\n                                          preprocessing=[normalization],\n                                          batch_size=batch_size)\n\n# Create a Callable representative dataset for calibration purposes.\n# The function should be called without any arguments, and should return a list numpy arrays (array for each model's input).\n# For example: if the model has two input tensors - one with input shape of 32X32X3 and the second with input \n# shape of 224X224X3, and we calibrate the model using batches of 20 images,\n# calling representative_data_gen() should return a list \n# of two numpy.ndarray objects where the arrays' shapes are [(20, 32, 32, 3), (20, 224, 224, 3)].\ndef representative_data_gen() -> list:\n        return [image_data_loader.sample()]\n\n\n# Create a model and quantize it using the representative_data_gen as the calibration images.\n# Set the number of calibration iterations to 10.\nquantized_model, quantization_info = mct.keras_post_training_quantization(model,\n                                                                          representative_data_gen,\n                                                                          n_iter=10)\n```\nFor more example please see the tutorials' directory.\n\nFor more information, please visit out [project website](https://sony.github.io/model_optimization/).\n\n## Supported Features\n\nQuantization:\n\n\t* Post Training Quantization \n    * Gradient base post training using knowledge distillation (Experimental) \n\nTensorboard Visualization (Experimental):\n\n    * CS Analyizer: compare comprased model with orignal model to analysis large accuracy drop.\n    * Activation statisicis and errors\n\n\nNote that currently we only have full support for Keras layers, using the TensorFlow native layer may lead to unexpected behavior. This limitation will be removed in future releases. \n\nMCT is test with Tensorflow Version 2.5. \n\n## Tutorials and Results\nAs part of the MCT library, we have a set of example network on image classification which can be used as an example while using the package.\n\n* Image Classification Example with MobileNet V1 on ImageNet dataset\n\n| Network Name             | Float Accuracy  | 8Bit Accuracy   | Comments                             |\n| -------------------------| ---------------:| ---------------:| ------------------------------------:|\n| MobileNetV1 [2]          | 70.558          | 70.418          |                                      |\n\n\nFor more results please see [1]\n\n## Contributions\nMCT aims at keeping a more up-to-date fork and welcomes contributions from anyone.\n\n*You will find more information about contributions in the [Contribution guide](CONTRIBUTING.md).\n\n\n## License\n[Apache License 2.0](LICENSE).\n\n## Refernce \n\n[1] Habi, H.V., Peretz, R., Cohen, E., Dikstein, L., Dror, O., Diamant, I., Jennings, R.H. and Netzer, A., 2021. [HPTQ: Hardware-Friendly Post Training Quantization. arXiv preprint](https://arxiv.org/abs/2109.09113).\n\n[2] [MobilNet](https://keras.io/api/applications/mobilenet/#mobilenet-function) from Keras applications.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-compression-toolkit",
    "package_url": "https://pypi.org/project/model-compression-toolkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/model-compression-toolkit/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/model-compression-toolkit/1.0.0/",
    "requires_dist": [
      "tensorflow (==2.5.*)",
      "networkx (==2.5)",
      "tqdm",
      "Pillow",
      "numpy",
      "opencv-python",
      "scikit-image",
      "scikit-learn",
      "tensorflow-model-optimization",
      "tensorboard"
    ],
    "requires_python": ">=3.6",
    "summary": "A Model Compression Toolkit for neural networks",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16747046,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33adbdc81854a48bb9c79e48b23ec89a782534526fd53464e1503e42ff30f5bd",
        "md5": "8f5fb174460bb434de927e88d0a1a71a",
        "sha256": "ed9015d2ada5d4418d18ed5f83531630a63211a050b0cf7ae43c00209188bb09"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f5fb174460bb434de927e88d0a1a71a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 176257,
      "upload_time": "2021-11-15T11:24:40",
      "upload_time_iso_8601": "2021-11-15T11:24:40.864462Z",
      "url": "https://files.pythonhosted.org/packages/33/ad/bdc81854a48bb9c79e48b23ec89a782534526fd53464e1503e42ff30f5bd/model_compression_toolkit-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d00b5314f11b9f2eacdefc80187135b399aae3a745d6a92c154ffbb9b994d18e",
        "md5": "73f177414c90dc80a1a33d584511df28",
        "sha256": "56d229e98ba26cc0a3cf63f13ca3c6b3a0c53f606d1d5544992ad746ee8dc2d3"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "73f177414c90dc80a1a33d584511df28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 94117,
      "upload_time": "2021-11-15T11:24:42",
      "upload_time_iso_8601": "2021-11-15T11:24:42.161835Z",
      "url": "https://files.pythonhosted.org/packages/d0/0b/5314f11b9f2eacdefc80187135b399aae3a745d6a92c154ffbb9b994d18e/model_compression_toolkit-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}