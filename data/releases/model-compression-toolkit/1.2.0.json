{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Model Compression Toolkit (MCT)\n![tests](https://github.com/sony/model_optimization/actions/workflows/run_tests_suite_tf27.yml/badge.svg)\n\n\nModel Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient, constrained hardware. <br />\nThis project provides researchers, developers and engineers tools for optimizing and deploying state-of-the-art neural network on efficient hardware. <br />\nSpecifically, this project applies constrained quantization and pruning schemes on a neural network. \n\nCurrently, this project only supports hardware friendly post training quantization (HPTQ) with Tensorflow 2 [1]. \n\nThe MCT project is developed by researchers and engineers working at Sony Semiconductors Israel.\n\nFor more information, please visit our [project website](https://sony.github.io/model_optimization/).\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Supported features](#supported-features)\n- [Results](#results)\n- [Contributions](#contributions)\n- [License](#license)\n\n## Getting Started\n\nThis section provides a quick starting guide. We begin with installtion via source code or pip server. Then, we provide a short usage example.\n\n### Installation\nSee the MCT install guide for the pip package, and build from source.\n\n\n#### From Source\n```\ngit clone https://github.com/sony/model_optimization.git\npython setup.py install\n```\n#### From PyPi - latest stable release\n```\npip install model-compression-toolkit\n```\n\nA nightly package is also available (unstable):\n```\npip install mct-nightly\n```\n\nTo run MCT, one of the supported frameworks, Tenosflow/Pytorch, needs to be installed.\n\nFor using with Tensorflow please install the packages: \n[tensorflow](https://www.tensorflow.org/install), \n[tensorflow-model-optimization](https://www.tensorflow.org/model_optimization/guide/install)\n\nFor using with Pytorch (experimental) please install the packages: \n[torch](https://pytorch.org/)\n\nMCT is tested with:\n* Tensorflow version 2.7 \n* Pytorch version 1.10.0 \n\n### Usage Example \nFor an example of how to use the post training quantization, using Keras,\nplease use this [link](tutorials/example_keras_mobilenet.py).\n\nFor an example using Pytorch (experimental), please use this [link](tutorials/example_pytorch_mobilenet_v2.py).\n\nFor more examples please see the [tutorials' directory](tutorials).\n\n\n## Supported Features\n\nQuantization:\n\n\t* Post Training Quantization for Keras models.\n\t* Post Training Quantization for Pytorch models (experimental).\n    * Gradient based post training (Experimental, Keras only).\n    * Mixed-precision post training quantization (Experimental, Keras only).\n\nTensorboard Visualization (Experimental):\n\n    * CS Analyizer: compare a model compressed with the orignal model to analyze large accuracy drops.\n    * Activation statisicis and errors\n\n\n## Results\n### Keras\nAs part of the MCT library, we have a set of example networks on image classification. These networks can be used as examples when using the package.\n\n* Image Classification Example with MobileNet V1 on ImageNet dataset\n\n| Network Name             | Float Accuracy  | 8Bit Accuracy   | Comments                             |\n| -------------------------| ---------------:| ---------------:| ------------------------------------:|\n| MobileNetV1 [2]          | 70.558          | 70.418          |                                      |\n\n\nFor more results please see [1]\n\n### Pytorch\nWe quantized classification networks from the torchvision library. \nIn the following table we present the ImageNet validation results for these models:\n\n| Network Name              | Float Accuracy  | 8Bit Accuracy   | \n| --------------------------| ---------------:| ---------------:| \n| MobileNet V2 [3]          | 71.886          | 71.444           |                                      \n| ResNet-18 [3]             | 69.86           | 69.63           |                                      \n| SqueezeNet 1.1 [3]        | 58.128          | 57.678          |                                      \n\n\n\n## Contributions\nMCT aims at keeping a more up-to-date fork and welcomes contributions from anyone.\n\n*You will find more information about contributions in the [Contribution guide](CONTRIBUTING.md).\n\n\n## License\n[Apache License 2.0](LICENSE).\n\n## References \n\n[1] Habi, H.V., Peretz, R., Cohen, E., Dikstein, L., Dror, O., Diamant, I., Jennings, R.H. and Netzer, A., 2021. [HPTQ: Hardware-Friendly Post Training Quantization. arXiv preprint](https://arxiv.org/abs/2109.09113).\n\n[2] [MobilNet](https://keras.io/api/applications/mobilenet/#mobilenet-function) from Keras applications.\n\n[3] [TORCHVISION.MODELS](https://pytorch.org/vision/stable/models.html) \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-compression-toolkit",
    "package_url": "https://pypi.org/project/model-compression-toolkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/model-compression-toolkit/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/model-compression-toolkit/1.2.0/",
    "requires_dist": [
      "networkx (==2.5)",
      "tqdm",
      "Pillow",
      "numpy",
      "opencv-python",
      "scikit-image",
      "scikit-learn",
      "tensorboard",
      "PuLP",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A Model Compression Toolkit for neural networks",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16747046,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e49b1ba454283a4657108df6136e52db6c1e1f98a3fb05d8871c17a66caf461d",
        "md5": "2f65e226dc635c2c33cce216eecd4314",
        "sha256": "dcfd086bec2f3fc5f02a6173cfce0be453ad5ea44e2fca257d00e4d50993539a"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f65e226dc635c2c33cce216eecd4314",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 273654,
      "upload_time": "2022-02-08T14:13:10",
      "upload_time_iso_8601": "2022-02-08T14:13:10.657486Z",
      "url": "https://files.pythonhosted.org/packages/e4/9b/1ba454283a4657108df6136e52db6c1e1f98a3fb05d8871c17a66caf461d/model_compression_toolkit-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "489e6d5d081efb672902904e1b75faf7dc0e15d219fc04733a57096e54e4e6cb",
        "md5": "48966a9686fb70fd5a217796cc9e7068",
        "sha256": "07b8c6e1d178ab4806617169346e70e05475bfdfdf16ceae381a7c093187397e"
      },
      "downloads": -1,
      "filename": "model_compression_toolkit-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "48966a9686fb70fd5a217796cc9e7068",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 144709,
      "upload_time": "2022-02-08T14:13:12",
      "upload_time_iso_8601": "2022-02-08T14:13:12.300334Z",
      "url": "https://files.pythonhosted.org/packages/48/9e/6d5d081efb672902904e1b75faf7dc0e15d219fc04733a57096e54e4e6cb/model_compression_toolkit-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}