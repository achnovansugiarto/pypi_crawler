{
  "info": {
    "author": "Python Discord",
    "author_email": "staff@pythondiscord.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-simple-bulma\n===================\n[![Discord](https://img.shields.io/static/v1?label=Python%20Discord&logo=discord&message=%3E100k%20members&color=%237289DA&logoColor=white)](https://discord.gg/2B963hn)\n[![License](https://img.shields.io/github/license/python-discord/bot)](LICENSE)\n[![Website](https://img.shields.io/badge/website-visit-brightgreen)](https://pythondiscord.com)\n\n`django-simple-bulma` is a Django application that makes [Bulma](https://bulma.io) and [Bulma-Extensions](https://wikiki.github.io/) available to use in your Django project with as little setup as possible. The goal of this project is to make it as easy as possible to use Bulma with Django.\n\nThis project currently uses **Bulma v0.9.1**, and is automatically updated with every new release. If a new version has come out with features you'd like to make use of, please [create an issue](https://github.com/python-discord/django-simple-bulma/issues), and we will be happy to make a release to update it.\n\nInstallation\n------------\nTo get `django-simple-bulma`, up and running for your Django project, follow these simple steps:\n- Install it from PyPI with `pip install django-simple-bulma` (or add it to your [Pipfile](https://pipenv.readthedocs.io/en/latest/))\n- In your Django projects `settings.py` file:\n  - Add `django_simple_bulma` to your `INSTALLED_APPS`\n    ```python\n    INSTALLED_APPS = [\n      #...\n      'django_simple_bulma',\n      #...\n    ]\n    ```\n  - Add `django_simple_bulma.finders.SimpleBulmaFinder` to your `STATICFILES_FINDERS`. This normally holds two default handlers that you will probably want to keep, so unless you have any other custom Finders, it should look like this:\n    ```python\n    STATICFILES_FINDERS = [\n      # First add the two default Finders, since this will overwrite the default.\n      'django.contrib.staticfiles.finders.FileSystemFinder',\n      'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n\n      # Now add our custom SimpleBulma one.\n      'django_simple_bulma.finders.SimpleBulmaFinder',\n    ]\n    ```\n- Run `python manage.py collectstatic` command in order to build Bulma and move it to your `staticfiles` folder. Please note that you will need to use this command every time you make a change to the configuration, as this is the only way to rebuild the Bulma css file. If you are not using `collectstatic`, [read up on it](https://stackoverflow.com/questions/34586114/whats-the-point-of-djangos-collectstatic) and [start using it](https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/).\n\n  This app works fine with [Whitenoise](http://whitenoise.evans.io/en/stable/), which is a great way to serve static files without needing to mess with your webserver.\n\n`django-simple-bulma` should now be working! In order to import it into your template, first load the app with `{% load django_simple_bulma %}`, and then use the `{% bulma %}` template tag. If you're planning on using icons, you might also want to import FontAwesome by using `{% font_awesome %}`.\n  ```html\n    <head>\n        <!-- ... -->\n        {% load django_simple_bulma %}\n        {% bulma %}\n        {% font_awesome %}\n        <!-- ... -->\n    </head>\n  ```\n- You're all set! Any Bulma classes you apply should now be working!\n\nCustomization\n-------------\nBulma looks nice by default, but most users will want to customize its look and feel. For this, we've provided a super simple way to change the [Bulma variables](https://bulma.io/documentation/customize/variables/) and to choose which [Bulma extensions](https://wikiki.github.io/) you want to load into your project.\n\nIn order to do this, we'll simply create a dictionary inside your `settings.py` called `BULMA_SETTINGS`, and configure it there. Here's an example of what that looks like:\n```python\n# Custom settings for django-simple-bulma\nBULMA_SETTINGS = {\n    \"extensions\": [\n        \"bulma-collapsible\",\n        \"bulma-calendar\",\n    ],\n    \"variables\": {\n        \"primary\": \"#000000\",\n        \"size-1\": \"6rem\",\n    },\n    \"alt_variables\": {\n        \"primary\": \"#fff\",\n        \"scheme-main\": \"#000\",\n    },\n    \"output_style\": \"compressed\",\n    \"fontawesome_token\": \"e761a01be3\",\n}\n```\n\nYou may here define any variable found on the [Bulma variables](https://bulma.io/documentation/customize/variables/) page, and you may use any valid SASS or CSS as the value. For example, `hsl(217, 71%, 53%)` would be a valid value for a color variable, as would `#ffff00`. Please note that any syntactically incorrect values may prevent Bulma from building correctly, so be careful what you add here unless you know exactly what you're doing.\n\n#### Multiple themes\nIf you want multiple different configurations of variables, then you should define them as separate themes. Define a new theme by providing a key that matches the regex `\\w+_variables` (e.g. `alt_variables` or `dark_variables`), unique stylesheets will then be generated using the variables at that key.\n\nTo use these stylesheets in a template, pass the theme name to the `{% bulma %}` tag either as a string `{% bulma 'alt' %}` or as a template variable `{% bulma theme %}`.\n\n#### Extensions\nIf the `extensions` key is not found, it will default to not loading any extensions. If you want all extensions, simply set it to the string `\"all\"`.\n\nWe currently support these extensions:\n- bulma-badge\n- bulma-calendar\n- bulma-carousel\n- bulma-collapsible\n- bulma-checkradio\n- bulma-divider\n- bulma-megamenu\n- bulma-pageloader\n- bulma-pricingtable\n- bulma-quickview\n- bulma-ribbon\n- bulma-slider\n- bulma-steps\n- bulma-switch\n- bulma-tagsinput\n- bulma-timeline\n- bulma-tooltip\n- bulma-coolcheckboxes (Cool-Checkboxes-for-Bulma.io)\n\nIf an extension you want to use is missing, feel free to [create an issue](https://github.com/python-discord/django-simple-bulma/issues) and we will be happy to add it. Alternatively, add it yourself and create a pull request (see [this pr](https://github.com/python-discord/django-simple-bulma/pull/55) for some context on how to go about doing that).\n\n\n#### CSS style\nThe `output_style` parameter determines the style of the resulting CSS file. It can be any of `\"nested\"` (default), `\"expanded\"`, `\"compact\"`, and `\"compressed\"`. It is recommended to use `\"compressed\"` in production as to reduce the final file size.\n\n#### FontAwesome\nThe optional `fontawesome_token` parameter allows you to specify your personal FontAwesome kit, which is necessary for FontAwesome v6 and up. This should be set to the identifier part of your FontAwesome kit script src parameter. For example, if your FontAwesome kit looks like this:\n```html\n<script src=\"https://kit.fontawesome.com/e761a01be3.js\" crossorigin=\"anonymous\"></script>\n```\nThen your `fontawesome_token` should be **e761a01be3**.\n\nThis is used by the `{% font_awesome %}` template tag to set up FontAwesome for you. If you don't specify a `fontawesome_token`, **the template tag will still work**, but will then use an older version of FontAwesome (v5.14.0).\n\nAdditional scripts\n------------------\nFor your convenience, we also give you the option to add other quality of life improvements to your Bulma app. You may want to add these as well if they sound useful to you.\n\n* `bulma-fileupload` will handle displaying the filename in your [file upload inputs](https://bulma.io/documentation/form/file/).\n* `bulma-navbar-burger` will hook up your `navbar-burger`s and `navbar-menu`s automatically, to provide a toggle for mobile users. We use a slightly updated version of [the example from Bulma's documentation](https://bulma.io/documentation/components/navbar/#navbarJsExample) - simply add a `data-target` attribute to your `navbar-burger` that refers to the `id` of the `navbar-menu` that should be expanded and collapsed by the button.\n* `bulma-notifications` will allow you to close [notifications](https://bulma.io/documentation/elements/notification/) by clicking on the X button.\n* `bulma-dropdown` will open/close dropdowns using the `is-active` class. It mimics how the dropdowns function on the [documentation page](https://bulma.io/documentation/components/dropdown/#hoverable-or-toggable).\n\nCompiling additional SCSS\n------------------------\n\nIf you're writing custom SCSS for your application, `django-simple-bulma` does provide a very basic mechanism for compiling\nit for you. This is provided because, currently, `django-simple-bulma` will cause issues with current Django apps that exist\nto compile SCSS for you.\n\nTo use this feature, please specify the `custom_css` key when defining your `BULMA_SETTINGS`. This should be a list\nof strings, containing relative paths to `.scss` files to be compiled.\n\n```python\nBULMA_SETTINGS = {\n    \"custom_scss\": [\n        \"myapp/static/css/base/base.scss\"\n    ],\n}\n```\n\n**Please note**: The default Django behavior when collecting static files is to keep the containing file structure for\nthem when they're copied over to the final static files directory. We attempt to do the same thing by parsing the given\npath to your `.scss` file, using the following strategy:\n\n* If a containing path exists in the `STATICFILES_DIRS` setting, assume that this is the base path to use, and the\n  directory structure below it will be used to contain the resulting `.css` file\n* Otherwise, if the path contains `static/`, assume that the base path ends there and use the rest of the path\n  below it to contain the resulting `.css` file.\n\nIf both of these strategies fail to figure out what base path to use, an exception will be raised.\n\nTroubleshooting\n---------------\n\n- If you have the module `sass` installed, please note that it is incompatible with this project. There is a namespace conflict between `sass` and `libsass` which will make `django-simple-bulma` crash when you attempt to do a `collectstatic`. To solve this, just uninstall `sass` and use `libsass` instead.\n\nIf you run into any other problems with this app, please [create an issue](https://github.com/python-discord/django-simple-bulma/issues), and we will be happy to help you with it. Alternatively, head over to our discord server at https://discord.gg/python and we'll help you figure it out over chat.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-discord/django-simple-bulma",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-simple-bulma",
    "package_url": "https://pypi.org/project/django-simple-bulma/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-simple-bulma/",
    "project_urls": {
      "Homepage": "https://github.com/python-discord/django-simple-bulma"
    },
    "release_url": "https://pypi.org/project/django-simple-bulma/2.1.0/",
    "requires_dist": [
      "Django (>=2.0)",
      "libsass (~=0.19)",
      "flake8 (~=3.8) ; extra == 'dev'",
      "flake8-annotations (~=2.0) ; extra == 'dev'",
      "flake8-bugbear (~=20.1) ; extra == 'dev'",
      "flake8-docstrings (~=1.4) ; extra == 'dev'",
      "flake8-import-order (~=0.18) ; extra == 'dev'",
      "flake8-tidy-imports (~=4.0) ; extra == 'dev'",
      "flake8-todo (~=0.7) ; extra == 'dev'",
      "flake8-string-format (~=0.3) ; extra == 'dev'",
      "pdoc (~=0.3) ; extra == 'dev'",
      "pep8-naming (~=0.9) ; extra == 'dev'",
      "pre-commit (~=2.1) ; extra == 'dev'",
      "PyGithub (~=1.43) ; extra == 'dev'",
      "wheel (~=0.33) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Django application to add the Bulma CSS framework and its extensions",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12820070,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f36f09bfd2b29802f80a1a1ce282102e759c250bb098e3b4c69bf959a91cbeb0",
        "md5": "c817b60711c1babb53c4d9a909493d5a",
        "sha256": "0894e247b7f6e88432894f10e7c051fba867df5cd645e42de2b94892dacaeeba"
      },
      "downloads": -1,
      "filename": "django_simple_bulma-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c817b60711c1babb53c4d9a909493d5a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 368304,
      "upload_time": "2020-11-09T09:25:42",
      "upload_time_iso_8601": "2020-11-09T09:25:42.210285Z",
      "url": "https://files.pythonhosted.org/packages/f3/6f/09bfd2b29802f80a1a1ce282102e759c250bb098e3b4c69bf959a91cbeb0/django_simple_bulma-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e379b18a529f91f0dc410d99261c64f195ad043b68db5369e6e0f93fca091129",
        "md5": "351c5bab21a0bddcdec7af751a5bf5e6",
        "sha256": "048d957a4c2a3c37c461082d07c473e72abef2f706a619bc069a78bef98c84ac"
      },
      "downloads": -1,
      "filename": "django-simple-bulma-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "351c5bab21a0bddcdec7af751a5bf5e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 310031,
      "upload_time": "2020-11-09T09:25:44",
      "upload_time_iso_8601": "2020-11-09T09:25:44.574783Z",
      "url": "https://files.pythonhosted.org/packages/e3/79/b18a529f91f0dc410d99261c64f195ad043b68db5369e6e0f93fca091129/django-simple-bulma-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}