{
  "info": {
    "author": "Stephen Ausman",
    "author_email": "stephen@dwolla.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "DwollaV2\n========\n\n.. figure:: https://travis-ci.org/Dwolla/dwolla-v2-python.svg\n   :alt: Build Status\n\n   Build Status\nDwolla V2 Python client.\n\n`API Documentation <https://docsv2.dwolla.com>`__\n\nInstallation\n------------\n\n``dwollav2`` is available on\n`PyPi <https://pypi.python.org/pypi/dwollav2>`__, and therefore can be\ninstalled automagically via\n`pip <https://pip.pypa.io/en/stable/installing/>`__.\n\n::\n\n    pip install dwollav2\n\n``dwollav2.Client``\n-------------------\n\nBasic usage\n~~~~~~~~~~~\n\nCreate a client using your application's consumer key and secret found\non the applications page\n(`Sandbox <https://dashboard-sandbox.dwolla.com/applications>`__,\n`Production <https://dashboard.dwolla.com/applications>`__).\n\n.. code:: python\n\n    client = dwollav2.Client(id = os.environ['DWOLLA_APP_KEY'], secret = os.environ['DWOLLA_APP_SECRET'])\n\nUsing the sandbox environment (optional)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    client = dwollav2.Client(\n      key = os.environ['DWOLLA_APP_KEY'],\n      secret = os.environ['DWOLLA_APP_SECRET'],\n      environment = 'sandbox'\n    )\n\n``environment`` defaults to ``'production'``.\n\nConfigure an ``on_grant`` callback (optional)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAn ``on_grant`` callback is useful for storing new tokens when they are\ngranted. The ``on_grant`` callback is called with the ``Token`` that was\njust granted by the server.\n\n.. code:: python\n\n    client = dwollav2.Client(\n      key = os.environ['DWOLLA_APP_KEY'],\n      secret = os.environ['DWOLLA_APP_SECRET'],\n      on_grant = lambda t: save(t)\n    )\n\nIt is highly recommended that you encrypt any token data you store.\n\n``Token``\n---------\n\nTokens can be used to make requests to the Dwolla V2 API.\n\nApplication tokens\n~~~~~~~~~~~~~~~~~~\n\nApplication access tokens are used to authenticate against the API on\nbehalf of a consumer application. Application tokens can be used to\naccess resources in the API that either belong to the application itself\n(``webhooks``, ``events``, ``webhook-subscriptions``) or the partner\nAccount that owns the consumer application (``accounts``, ``customers``,\n``funding-sources``, etc.). Application tokens are obtained by using the\n```client_credentials`` <https://tools.ietf.org/html/rfc6749#section-4.4>`__\nOAuth grant type:\n\n.. code:: python\n\n    application_token = client.Auth.client()\n\n*Application tokens do not include a ``refresh_token``. When an\napplication token expires, generate a new one using\n``client.Auth.client()``.*\n\nInitializing pre-existing tokens:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``Token``\\ s can be initialized with the following attributes:\n\n.. code:: python\n\n    client.Token(access_token = '...',\n                 expires_in = 123)\n\nRequests\n--------\n\n``Token``\\ s can make requests using the ``#get``, ``#post``, and\n``#delete`` methods.\n\n.. code:: python\n\n    # GET api.dwolla.com/resource?foo=bar\n    token.get('resource', foo = 'bar')\n\n    # POST api.dwolla.com/resource {\"foo\":\"bar\"}\n    token.post('resource', foo = 'bar')\n\n    # POST api.dwolla.com/resource multipart/form-data foo=...\n    token.post('resource', foo = ('mclovin.jpg', open('mclovin.jpg', 'rb'), 'image/jpeg'))\n\n    # PUT api.dwolla.com/resource {\"foo\":\"bar\"}\n    token.put('resource', foo = 'bar')\n\n    # DELETE api.dwolla.com/resource\n    token.delete('resource')\n\nSetting headers\n^^^^^^^^^^^^^^^\n\nTo set additional headers on a request you can pass a ``dict`` of\nheaders as the 3rd argument.\n\nFor example:\n\n.. code:: python\n\n    token.post('customers', { 'firstName': 'John', 'lastName': 'Doe', 'email': 'jd@doe.com' },\n                            { 'Idempotency-Key': 'a52fcf63-0730-41c3-96e8-7147b5d1fb01' })\n\nResponses\n---------\n\nRequests return a ``Response``.\n\n.. code:: python\n\n    res = token.get('/')\n\n    res.status\n    # => 200\n\n    res.headers\n    # => {'server'=>'cloudflare-nginx', 'date'=>'Mon, 28 Mar 2016 15:30:23 GMT', 'content-type'=>'application/vnd.dwolla.v1.hal+json; charset=UTF-8', 'content-length'=>'150', 'connection'=>'close', 'set-cookie'=>'__cfduid=d9dcd0f586c166d36cbd45b992bdaa11b1459179023; expires=Tue, 28-Mar-17 15:30:23 GMT; path=/; domain=.dwolla.com; HttpOnly', 'x-request-id'=>'69a4e612-5dae-4c52-a6a0-2f921e34a88a', 'cf-ray'=>'28ac1f81875941e3-MSP'}\n\n    res.body['_links']['events']['href']\n    # => 'https://api-sandbox.dwolla.com/events'\n\nErrors\n------\n\nIf the server returns an error, a ``dwollav2.Error`` (or one of its\nsubclasses) will be raised. ``dwollav2.Error``\\ s are similar to\n``Response``\\ s.\n\n.. code:: python\n\n    try:\n      token.get('/not-found')\n    except dwollav2.NotFoundError:\n      e.status\n      # => 404\n\n      e.headers\n      # => {\"server\"=>\"cloudflare-nginx\", \"date\"=>\"Mon, 28 Mar 2016 15:35:32 GMT\", \"content-type\"=>\"application/vnd.dwolla.v1.hal+json; profile=\\\"http://nocarrier.co.uk/profiles/vnd.error/\\\"; charset=UTF-8\", \"content-length\"=>\"69\", \"connection\"=>\"close\", \"set-cookie\"=>\"__cfduid=da1478bfdf3e56275cd8a6a741866ccce1459179332; expires=Tue, 28-Mar-17 15:35:32 GMT; path=/; domain=.dwolla.com; HttpOnly\", \"access-control-allow-origin\"=>\"*\", \"x-request-id\"=>\"667fca74-b53d-43db-bddd-50426a011881\", \"cf-ray\"=>\"28ac270abca64207-MSP\"}\n\n      e.body.code\n      # => \"NotFound\"\n    except dwollav2.Error:\n      # ...\n\n``dwollav2.Error`` subclasses:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*See https://docsv2.dwolla.com/#errors for more info.*\n\n-  ``dwollav2.AccessDeniedError``\n-  ``dwollav2.InvalidCredentialsError``\n-  ``dwollav2.NotFoundError``\n-  ``dwollav2.BadRequestError``\n-  ``dwollav2.InvalidGrantError``\n-  ``dwollav2.RequestTimeoutError``\n-  ``dwollav2.ExpiredAccessTokenError``\n-  ``dwollav2.InvalidRequestError``\n-  ``dwollav2.ServerError``\n-  ``dwollav2.ForbiddenError``\n-  ``dwollav2.InvalidResourceStateError``\n-  ``dwollav2.TemporarilyUnavailableError``\n-  ``dwollav2.InvalidAccessTokenError``\n-  ``dwollav2.InvalidScopeError``\n-  ``dwollav2.UnauthorizedClientError``\n-  ``dwollav2.InvalidAccountStatusError``\n-  ``dwollav2.InvalidScopesError``\n-  ``dwollav2.UnsupportedGrantTypeError``\n-  ``dwollav2.InvalidApplicationStatusError``\n-  ``dwollav2.InvalidVersionError``\n-  ``dwollav2.UnsupportedResponseTypeError``\n-  ``dwollav2.InvalidClientError``\n-  ``dwollav2.MethodNotAllowedError``\n-  ``dwollav2.ValidationError``\n-  ``dwollav2.TooManyRequestsError``\n-  ``dwollav2.ConflictError``\n\nDevelopment\n-----------\n\nAfter checking out the repo, run ``pip install -r requirements.txt`` to\ninstall dependencies. Then, run ``python setup.py test`` to run the\ntests.\n\nTo install this gem onto your local machine, run ``pip install -e .``.\n\nContributing\n------------\n\nBug reports and pull requests are welcome on GitHub at\nhttps://github.com/Dwolla/dwolla-v2-python.\n\nLicense\n-------\n\nThe package is available as open source under the terms of the `MIT\nLicense <https://github.com/Dwolla/dwolla-v2-python>`__.\n\nChangelog\n---------\n\n-  **1.2.4** Create a new session for each Token.\n-  **1.2.3** Check if IOBase when checking to see if something is a\n   file.\n-  **1.2.2** Strip domain from URLs provided to token.\\* methods.\n-  **1.2.1** Update sandbox URLs from uat => sandbox.\n-  **1.2.0** Refer to Client id as key.\n-  **1.1.8** Support ``verified_account`` and ``dwolla_landing`` auth\n   flags\n-  **1.1.7** Use session over connections for `performance\n   improvement <http://docs.python-requests.org/en/master/user/advanced/#session-objects>`__\n   (`#8 <https://github.com/Dwolla/dwolla-v2-python/pull/8>`__ - Thanks\n   @bfeeser!)\n-  **1.1.5** Fix file upload bug when using with Python 2\n   (`#6 <https://github.com/Dwolla/dwolla-v2-python/issues/6>`__)\n-  **1.1.2** Add ``TooManyRequestsError`` and ``ConflictError``\n-  **1.1.1** Add MANIFEST.in\n-  **1.1.0** Support per-request headers\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://docsv2.dwolla.com",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwollav2",
    "package_url": "https://pypi.org/project/dwollav2/",
    "platform": "",
    "project_url": "https://pypi.org/project/dwollav2/",
    "project_urls": {
      "Homepage": "https://docsv2.dwolla.com"
    },
    "release_url": "https://pypi.org/project/dwollav2/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Official Dwolla V2 API client",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12529877,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "486d1b5144cdaebc4945338e0b261ca36a0bf0184ff67ae35c081b85d89bb6de",
        "md5": "b5aa1258c54766c8792661738eee580a",
        "sha256": "2b75b1927707a5bb6a20bf6f624dc7723253a735f7e257387a33fbb16b522b38"
      },
      "downloads": -1,
      "filename": "dwollav2-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b5aa1258c54766c8792661738eee580a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10151,
      "upload_time": "2018-11-01T20:17:32",
      "upload_time_iso_8601": "2018-11-01T20:17:32.436095Z",
      "url": "https://files.pythonhosted.org/packages/48/6d/1b5144cdaebc4945338e0b261ca36a0bf0184ff67ae35c081b85d89bb6de/dwollav2-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}