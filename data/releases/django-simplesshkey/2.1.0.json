{
  "info": {
    "author": "Baptiste Jonglez",
    "author_email": "python@bitsofnetworks.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===================\ndjango-simplesshkey\n===================\n\ndjango-simplesshkey allows you to associate multiple SSH public keys with Django\nuser accounts.  It provides views to list, add, edit, and delete keys, each of\nwhich is intended for end-user consumption.  Of course, you can also manage SSH keys\nfrom the administration interface.\n\nSSH keys are simply stored in the Django database, and what you do with them is\nup to you: you can have a cron job that regularly dumps SSH keys to files, or\nconnect a signal to take an action each time a SSH key is saved...\nFor instance, the author `uses Ansible to deploy the SSH keys to several machines\n<https://framagit.org/compile-farm/gccfarm>`_.\n\n\nAbout django-sshkey and django-simplesshkey\n===========================================\n\n`django-simplesshkey` is a fork of django-sshkey_, based on version 2.5.0.\n\nThe goal of this fork is twofolds:\n\n* Keep only basic functionalities needed to manage SSH keys linked to Django\n  users.  In particular, the optional integration with OpenSSH has been\n  completely removed, which simplifies configuration and avoids leaking\n  information by default (public lookup view).  Also, sending emails when\n  keys are added or modified is no longer done, because it can easily be\n  implemented outside of this application.\n\n* Be more flexible: impose less constraints on the model (no unicity),\n  allow to override some fields of the model or form.  Also, sending emails\n  outside of this application obviously allows more flexibility.\n\nOf course, if you need all the extra features of django-sshkey, you should\ncontinue using it!\n\nMigrating from django-sshkey\n============================\n\nIf you are using django-sshkey but don't need the extra functionalities, it is\npossible to start using django-simplesshkey and import your data.\n\nThe migration process is a bit convoluted, see `README.upgrading.rst` for details.\n\n\nThe Django app\n==============\n\nTo use django-sshkey in your Django project, simply add ``django_sshkey`` to\n``INSTALLED_APPS`` in ``settings.py``, map the URLs into your project, and\nprovide templates for the views (example templates are provided in the source).\n\n\nURL Configuration\n-----------------\n\nThis text assumes that your project's ``urls.py`` maps ``simplesshkey.urls``\ninto the URL namespace as follows::\n\n  urlpatterns = [\n    ...\n    url('^sshkey/', include('simplesshkey.urls')),\n    ...\n  ]\n\nYou will need to adjust your URLs in the examples below if you use a different\nmapping.\n\n\nSettings\n--------\n\n``SSHKEY_ALLOW_EDIT``\n  Boolean, defaults to ``False``.  Whether or not editing keys is allowed.\n\n``SSHKEY_DEFAULT_HASH``\n  String, either ``sha256``, ``md5``, or ``legacy`` (the default).  The default\n  hash algorithm to use for calculating the fingerprint of keys.  The resulting\n  hash is stored in the ``fingerprint`` field of each SSH key object.\n  Legacy behavior enforces OpenSSH's pre-6.8 behavior of MD5 without the ``MD5:``\n  prefix.\n\n\nTemplates\n---------\n\nExample templates are available in the ``templates.example`` directory.\n\n``sshkey/userkey_list.html``\n  Used when listing a user's keys.\n\n``sshkey/userkey_detail.html``\n  Used when adding or editing a user's keys.\n\n\nManagement commands\n-------------------\n\n``import_sshkey [--auto-resolve] [--prefix PREFIX] [--name NAME] USERNAME KEY_PATH ...``\n  Imports SSH public keys to tie to a user. If ``--auto-resolve/-a`` are given,\n  attempt to generate unique key names using a UUID. The prefix used during\n  this process is the key name, but can be changed using ``--prefix/-p``.\n\n``normalize_sshkeys [USERNAME KEY_NAME]``\n  Recalculates key data to reflect a changed setting, for instance, if you have\n  changed ``SSHKEY_DEFAULT_HASH`` and some keys have incorrect fingerprints in\n  your database. Given no arguments, all keys will be normalized. The username\n  asnd key name are optional, and if specified, will limit affected keys to\n  those owned by a user, or a particular key of a user.  This can also be done\n  via the administration panel, but if you have a large key database the\n  request could end up timing out.\n\n\n.. _django-sshkey: https://github.com/ClemsonSoCUnix/django-sshkey",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zorun/django-simplesshkey",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-simplesshkey",
    "package_url": "https://pypi.org/project/django-simplesshkey/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-simplesshkey/",
    "project_urls": {
      "Homepage": "https://github.com/zorun/django-simplesshkey"
    },
    "release_url": "https://pypi.org/project/django-simplesshkey/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Associates multiple SSH public keys with Django user accounts (fork of django-sshkey without SSHD integration)",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17188575,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77cfce8e7f7ff0bc9930b941f48705f8b09551f55e66546c577f09b663a73c50",
        "md5": "4d2a210dce6ed2d604d6fc8666aac054",
        "sha256": "5bee57b5564469f35c8711fe0ac78b0cbe6094c46099055e7058e411ec18e4f4"
      },
      "downloads": -1,
      "filename": "django-simplesshkey-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4d2a210dce6ed2d604d6fc8666aac054",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16500,
      "upload_time": "2023-03-07T09:44:21",
      "upload_time_iso_8601": "2023-03-07T09:44:21.445762Z",
      "url": "https://files.pythonhosted.org/packages/77/cf/ce8e7f7ff0bc9930b941f48705f8b09551f55e66546c577f09b663a73c50/django-simplesshkey-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}