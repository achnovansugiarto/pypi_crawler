{
  "info": {
    "author": "Ryan Gibson",
    "author_email": "ryan.alex.gibson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# ModularityPruning\n\nModularityPruning is a pruning tool to identify small subsets of network\npartitions that are significant from the perspective of stochastic block model\ninference. This method works for single-layer and multi-layer networks, as well\nas for restricting focus to a fixed number of communities when desired.\n\nSee the [documentation](https://modularitypruning.readthedocs.io/en/latest/)\nor the preprint at https://doi.org/10.21203/rs.3.rs-1551680/v1 for more\ninformation.\n\n## Installation\nThis project is on [PyPI](https://pypi.org/project/modularitypruning/) and can\nbe installed with\n\n    pip install modularitypruning\n    # OR\n    pip3 install modularitypruning\n\nAlternatively, you can install it from this repository directly:\n\n    git clone https://github.com/ragibson/ModularityPruning\n    cd ModularityPruning\n    python3 setup.py install\n\n<a name = \"Basic Usage\"></a>\n## Basic Usage\n\nThis package interfaces directly with python-igraph. A simple example of its\nusage is\n\n```python\nimport igraph as ig\nfrom modularitypruning import prune_to_stable_partitions\nfrom modularitypruning.louvain_utilities import repeated_louvain_from_gammas\nimport numpy as np\n\n# get Karate Club graph in igraph\nG = ig.Graph.Famous(\"Zachary\")\n\n# run louvain 1000 times on this graph from gamma=0 to gamma=2\npartitions = repeated_louvain_from_gammas(G, np.linspace(0, 2, 1000))\n\n# prune to the stable partitions from gamma=0 to gamma=2\nstable_partitions = prune_to_stable_partitions(G, partitions, 0, 2)\nprint(stable_partitions)\n``` \n\nThis prints\n\n    [(0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 1, 0, 0, 0, 2, 2, 1, 0, 2, 0, 2, 0, 2, 3, 3, 3, 2, 3, 3, 2, 2, 3, 2, 2)]\n\nwhich is the stable 4-community split of the Karate Club network.\n\n## More Information\n\nThe [TODO items](TODO.md) and\n[figure generation runtimes](figure_generation_runtimes.md) READMEs may also be\nof interest.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ragibson/ModularityPruning",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modularitypruning",
    "package_url": "https://pypi.org/project/modularitypruning/",
    "platform": null,
    "project_url": "https://pypi.org/project/modularitypruning/",
    "project_urls": {
      "Homepage": "https://github.com/ragibson/ModularityPruning"
    },
    "release_url": "https://pypi.org/project/modularitypruning/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Pruning tool to identify small subsets of network partitions that are significant from the perspective of stochastic block model inference.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17435385,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4934a4e02f626785dc84a1561d65f50fd0bd83a3f7a20135f63af9761e381d2a",
        "md5": "189251114d92db743eb23bd086510d19",
        "sha256": "b849cde84691388f9b76a03b985f2665a1ffc6b27f9f6698259aed28f0e42031"
      },
      "downloads": -1,
      "filename": "modularitypruning-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "189251114d92db743eb23bd086510d19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 22567,
      "upload_time": "2022-05-31T22:32:39",
      "upload_time_iso_8601": "2022-05-31T22:32:39.383180Z",
      "url": "https://files.pythonhosted.org/packages/49/34/a4e02f626785dc84a1561d65f50fd0bd83a3f7a20135f63af9761e381d2a/modularitypruning-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c52043e3fb007565f2dfffde6c6fdd4de5cb2b59cb8ea7b596e7a7c320c1a794",
        "md5": "c1cb4339bf09ef34a9bd590689bfda93",
        "sha256": "053bc3094491bbfb88ff3bff936ca1941c2c68754187a367e349b2c47615687d"
      },
      "downloads": -1,
      "filename": "modularitypruning-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c1cb4339bf09ef34a9bd590689bfda93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 2211886,
      "upload_time": "2022-04-28T23:57:25",
      "upload_time_iso_8601": "2022-04-28T23:57:25.513860Z",
      "url": "https://files.pythonhosted.org/packages/c5/20/43e3fb007565f2dfffde6c6fdd4de5cb2b59cb8ea7b596e7a7c320c1a794/modularitypruning-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}