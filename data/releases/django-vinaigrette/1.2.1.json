{
  "info": {
    "author": "Ecometrica Ltd",
    "author_email": "software@ecometrica.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Internationalization"
    ],
    "description": ".. image:: https://travis-ci.com/ecometrica/django-vinaigrette.svg?branch=master\n    :target: https://travis-ci.com/ecometrica/django-vinaigrette?branch=master\n.. image:: https://coveralls.io/repos/github/ecometrica/django-vinaigrette/badge.svg?branch=master\n    :target: https://coveralls.io/github/ecometrica/django-vinaigrette?branch=master\n\n\n==================\ndjango-vinaigrette\n==================\n\nVinaigrette translates Django model data -- stored in the database -- using GNU gettext\nand Django's standard internationalization features.\n\nInstalling\n==========\n\nAdd ``vinaigrette`` to ``INSTALLED_APPS`` in your settings.\n\nThen, tell vinaigrette which fields you want to translate. Because vinaigrette needs to register signals,\nyou should register your model translations when models have finished loading, in the appropriate ``apps.py`` files\n(or wherever you keep your ``AppConfig`` subclasses):\n\n.. code:: python\n\n    import vinaigrette\n\n    class SaladAppConfig(AppConfig):\n        def ready(self):\n            # Import the model requiring translation\n            from .models import Ingredient  # or...\n            Ingredient = self.get_model(\"Ingredient\")\n\n            # Register fields to translate\n            vinaigrette.register(Ingredient, ['name', 'description'])\n\n\nThis tells vinaigrette to translate the ``name`` and ``description`` fields on Ingredient objects.\n\nUsing\n=====\n\nAfter installing vinaigrette, the PO files generated by ``manage.py makemessages`` will include\nstrings from the registered fields. If a particular string is translated, the model value will\nbe the string translated into the appropriate language:\n\n.. code:: python\n\n    >>> from django.utils.translation import activate\n    >>> i = Ingredient(name=u'Lettuce')\n    >>> i.name\n    u'Lettuce'\n    >>> activate('fr')\n    >>> i.name\n    u'Laitue'\n\nEt cetera\n=========\n\nThere are a couple of options to restrict which objects translation strings will be collected\nfrom. See the docstring for ``vinaigrette.register``.\n\nVinaigrette adds a ``--keep-obsolete`` option to ``manage.py makemessages``, which prevents gettext\nfrom deactivating translated messages no longer present in code or in registered database fields.\n\nVinaigrette is designed for database content that is:\n\n- always edited in the default language\n- edited by site administrators, not users\n\nOnly model instances are translated. Data accessed via the Django QuerySet ``values`` method will\nnot be translated.\n\nIn general, when a field is accessed, it will always return the translated version, if one exists.\nHowever, if a value is set, the exact value entered (and not the translated version) should be saved\nto the database. For example:\n\n.. code:: python\n\n    >>> from django.utils.translation import activate\n    >>> i = Ingredient(name=u'Lettuce')\n    >>> activate('fr')\n    >>> i.name\n    u'Laitue'\n    >>> i.name = 'Cabbage'\n    >>> i.name\n    u'Chou'\n    >>> i.save()\n    >>> Ingredient.objects.get(name='Cabbage').name\n    u'Chou'\n\nHelp! The Admin is messing up all the vinaigrette fields whenever I save changes!\n---------------------------------------------------------------------------------\n\nAdd ``vinaigrette.middleware.VinaigretteAdminLanguageMiddleware`` to your\n``settings.MIDDLEWARE`` to force the admin to always use the main language, and\nnot have vinaigrette mess with your change views.\n\nContributing\n============\n\nTesting\n-------\n\n* Create a virtualenv for the project\n* Install ``tox``. When tox is run, it will create the test environments for\n  supported Django and Python versions and then run tests against them\n\n\nRelease Notes\n=============\n\n1.2.1\n-----\n\n* Fix Python 2 support for makemessages\n\n  * Add a test for makemessages\n\n\n1.2.0\n--------\n\n* Added an optional contexts parameter for the register function, for\n  providing translation context for model fields.\n\n* Update middleware to the 1.10+ style\n\n  * Maintains backwards-compat with 1.9 and below\n\n    * Will now work in either ``MIDDLEWARE_CLASSES`` or ``MIDDLEWARE``\n\n  * Deprecates ``VinaigrettteAdminLanguageMiddleware`` for ``VinaigretteAdminLanguageMiddleware``\n\n    * Users should change to ``vinaigrette.middleware.VinaigretteAdminLanguageMiddleware``\n    * ``vinaigrette.VinaigrettteAdminLanguageMiddleware`` will continue to work until next major version\n\n* Adds tox and pytest for development and testing\n\n1.1.1\n-----\n\n* Update contact info\n\n1.1.0\n-----\n\n* Django 2.0 support\n\n1.0.1\n-----\n\n* Remembered to update version properly\n\n1.0.0\n-----\n\n* Add the ``--keep-vinaigrette-temp`` option which keeps the temporary file containing the generated list of translations\n* Added support for Django 1.9\n* Remove support for Django versions < 1.8\n\n0.5.0\n-----\n\n* Can specify properties to use instead of database field names in .register() function.\n\n0.4.0\n-----\n\n* Support for Django 1.7\n\n0.3.0\n-----\n\n* Support for python 3.3.\n\n0.2.0\n-----\n\n* Bug fix for the --all option, it now works again.\n* New VinaigrettteAdminLanguageMiddleware middleware.\n\n0.1.3\n-----\n\n* Support for Django 1.6.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ecometrica/django-vinaigrette/",
    "keywords": "django,translation,gettext,internationalization,i18n,database,model",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-vinaigrette",
    "package_url": "https://pypi.org/project/django-vinaigrette/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-vinaigrette/",
    "project_urls": {
      "Homepage": "https://github.com/ecometrica/django-vinaigrette/"
    },
    "release_url": "https://pypi.org/project/django-vinaigrette/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Translate Django model data using gettext",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6432519,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43654e79a458331918559489024ebc60102256fcc62212f74f596ce8f2a37a26",
        "md5": "86b303d8dc6535b1925a8d9c99e30607",
        "sha256": "3375c4c178022badec5e00346f7571b16f0934f8fe697dc183ef88717a7696f7"
      },
      "downloads": -1,
      "filename": "django_vinaigrette-1.2.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "86b303d8dc6535b1925a8d9c99e30607",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 14070,
      "upload_time": "2019-07-05T17:46:25",
      "upload_time_iso_8601": "2019-07-05T17:46:25.283441Z",
      "url": "https://files.pythonhosted.org/packages/43/65/4e79a458331918559489024ebc60102256fcc62212f74f596ce8f2a37a26/django_vinaigrette-1.2.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "384de0bc23f5017d2041a3d091b673810e0b0557f8c8f6f9b37d48e804d304cf",
        "md5": "de4201d573e95cfb3c8dfc8163657cb3",
        "sha256": "084f4d777bb0077eb75e55ac01d669f035e87138f3628c3741ca57e4241d2877"
      },
      "downloads": -1,
      "filename": "django-vinaigrette-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "de4201d573e95cfb3c8dfc8163657cb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10227,
      "upload_time": "2019-07-05T17:46:27",
      "upload_time_iso_8601": "2019-07-05T17:46:27.169638Z",
      "url": "https://files.pythonhosted.org/packages/38/4d/e0bc23f5017d2041a3d091b673810e0b0557f8c8f6f9b37d48e804d304cf/django-vinaigrette-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}