{
  "info": {
    "author": "Srijan Anand",
    "author_email": "srijan.pydev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=========\nMango-JWT\n=========\n\nMango-JWT is a minimal JWT User Authentication tool for Django Rest Framework and MongoDB. Recommended for developers using django-rest-framework and pymongo. Not supported in versions below Django 2.0. ::\n\n    pip install mango-jwt\n\n\n\nQuick start\n-----------\n\n1. Add \"mongo_auth\" to your INSTALLED_APPS setting below \"rest_framework\"::\n\n    INSTALLED_APPS = [\n        ...\n        'rest_framework',\n        'mongo_auth',\n    ]\n\n\n2. Include the mongo_auth URLconf in your project urls.py like this::\n\n    path('mongo_auth/', include('mongo_auth.urls')),\n\n3. Add DB config in settings.py :- ::\n\n    # Minimal settings (all mandatory)\n    MANGO_JWT_SETTINGS = {\n        \"db_host\": \"some_db_host\",\n        \"db_port\": \"some_db_port\",\n        \"db_name\": \"for_example_auth_db\",\n        \"db_user\": \"username\",\n        \"db_pass\": \"password\"\n    }\n\n    # Or use Advanced Settings (including optional settings)\n    MANGO_JWT_SETTINGS = {\n        \"db_host\": \"some_db_host\",\n        \"db_port\": \"some_db_port\",\n        \"db_name\": \"for_example_auth_db\",\n        \"db_user\": \"username\",\n        \"db_pass\": \"password\",\n        \"auth_collection\": \"name_your_auth_collection\", # default is \"user_profile\"\n        \"fields\": (\"email\", \"password\"), # default\n        \"jwt_secret\": \"secret\", # default\n        \"jwt_life\": 7 # default (in days)\n    }\n\n4. Make a POST request on http://127.0.0.1:8000/mongo_auth/signup/ with body as :- ::\n\n    {\n        \"email\": \"some_email@email.com\",\n        \"password\": \"some_password\"\n    }\n\n5. Now login with these credentials at http://127.0.0.1:8000/mongo_auth/login/ :- ::\n\n    {\n        \"email\": \"some_email@email.com\",\n        \"password\": \"some_password\"\n    }\n\n6. This will return a JWT. Pass this JWT in your request in **\"Authorization\"** header.\n\n---------------------------\nAuthenticatedOnly\n---------------------------\n\nThe **AuthenticatedOnly** permission class will only allow authenticated users to access your endpoint. ::\n\n    from rest_framework.views import APIView\n    from mongo_auth.permissions import AuthenticatedOnly\n    from rest_framework.response import Response\n    from rest_framework import status\n\n    class GetTest(APIView):\n\n        permission_classes = [AuthenticatedOnly]\n\n        def get(self, request, format=None):\n            try:\n                print(request.user)  # This is where magic happens\n                return Response(status=status.HTTP_200_OK,\n                                data={\"data\": {\"msg\": \"User Authenticated\"}})\n            except:\n                return Response(status=status.HTTP_404_NOT_FOUND)\n\n\nOr, if you're using the **@api_view** decorator with function based views. ::\n\n    from mongo_auth.permissions import AuthenticatedOnly\n    from rest_framework.decorators import permission_classes\n    from rest_framework.decorators import api_view\n    from rest_framework.response import Response\n    from rest_framework import status\n\n    @api_view([\"GET\"])\n    @permission_classes([AuthenticatedOnly])\n    def get_test(request):\n        try:\n            print(request.user)\n            return Response(status=status.HTTP_200_OK,\n                            data={\"data\": {\"msg\": \"User Authenticated\"}})\n        except:\n            return Response(status=status.HTTP_404_NOT_FOUND)\n\n\nDon't forget to pass **\"Authorization\"** Header in your requests while using your views with **\"AuthenticatedOnly\"** Permission Class.\n\nMore Info\n---------\n\n1. Passlib is used for password encryption with default scheme as \"django_pbkdf2_sha256\".\n\n2. Only for Django 2.0 and above.\n\n3. Dependent on \"django-rest-framework\" and \"pymongo\".\n\nMore Work To Do\n---------------\n\n1. Fields like \"username\", \"mobile\" or some unique field should be supportable for login.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/srijannnd/mango-jwt",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mango-jwt",
    "package_url": "https://pypi.org/project/mango-jwt/",
    "platform": "",
    "project_url": "https://pypi.org/project/mango-jwt/",
    "project_urls": {
      "Homepage": "https://github.com/srijannnd/mango-jwt"
    },
    "release_url": "https://pypi.org/project/mango-jwt/1.2.1/",
    "requires_dist": [
      "Django (>=2.0)",
      "djangorestframework",
      "passlib",
      "PyJWT",
      "pymongo",
      "pytz"
    ],
    "requires_python": "",
    "summary": "JWT Authentication for Django Rest Framework and MongoDB",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6519399,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd33cb90ada4ba48bb40c4f1c360ac3d90eb4e0173b55ca4cccd7a27ef54d733",
        "md5": "545929a2f550cf0a19fae5bfc57e8c41",
        "sha256": "b0ff361079c4d2c53635ac9be0bcc32deb8568fe682e2e17bf3d0974c30247fa"
      },
      "downloads": -1,
      "filename": "mango_jwt-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "545929a2f550cf0a19fae5bfc57e8c41",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7043,
      "upload_time": "2018-10-27T12:57:14",
      "upload_time_iso_8601": "2018-10-27T12:57:14.134663Z",
      "url": "https://files.pythonhosted.org/packages/fd/33/cb90ada4ba48bb40c4f1c360ac3d90eb4e0173b55ca4cccd7a27ef54d733/mango_jwt-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b129dbc49eaed1718a5c107a4541f5a42da4d28d38dc0b537724ab5c77bc647c",
        "md5": "9ffd0412460cb18a9543018f2e676d64",
        "sha256": "da0329d970f511a3a04f27a49b49b37e807ca7027f978ee4f633450512fc4d0f"
      },
      "downloads": -1,
      "filename": "mango-jwt-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9ffd0412460cb18a9543018f2e676d64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5442,
      "upload_time": "2018-10-27T12:57:15",
      "upload_time_iso_8601": "2018-10-27T12:57:15.916427Z",
      "url": "https://files.pythonhosted.org/packages/b1/29/dbc49eaed1718a5c107a4541f5a42da4d28d38dc0b537724ab5c77bc647c/mango-jwt-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}