{
  "info": {
    "author": "Altitude Networks Engineering Team",
    "author_email": "engineering@altitudenetworks.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "# DynamoQuery\n\n[![PyPI - dynamoquery](https://img.shields.io/pypi/v/dynamoquery.svg?color=blue&label=dynamoquery)](https://pypi.org/project/dynamoquery)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dynamoquery.svg?color=blue)](https://pypi.org/project/dynamoquery)\n[![Coverage](https://img.shields.io/codecov/c/github/altitudenetworks/dynamoquery)](https://codecov.io/gh/altitudenetworks/dynamoquery)\n\nHelper for building Boto3 DynamoDB queries.\n\n- [DynamoQuery](#dynamoquery)\n  - [Installation](#installation)\n  - [Usage](#usage)\n    - [DynamoQuery](#dynamoquery-1)\n    - [DynamoTable](#dynamotable)\n  - [Development](#development)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n  - [Versioning](#versioning)\n\n## Installation\n\n```python\npython -m pip install dynamoquery\n```\n\n## Usage\n\nYou can find commented usage examples in [examples](https://github.com/altitudenetworks/dynamoquery/tree/master/examples) directory.\n\n### DynamoQuery\n\n```python\nimport boto3\n\nfrom dynamo_query import DynamoQuery, DataTable\n\ntable_resource = boto3.resource(\"dynamodb\").Table('people')\nquery = DynamoQuery.build_scan(\n    filter_expression=ConditionExpression('first_name') & ('last_name', 'in'),\n).limit(\n    5,\n).projection(\n    'first_name', 'last_name', 'age',\n).table(\n    table_resource=table_resource,\n    table_keys=('pk', ),\n)\n...\n\n# simple query\ndata = {\n    'first_name': 'John',\n    'last_name': ['Cena', 'Doe', 'Carmack'],\n}\n\nresult_data_table = query.execute_dict(data)\nfor record in result_data_table.get_records():\n    print(record)\n\n# batch get\ndata_table = DataTable.create().add_record(\n    {\"pk\": \"my_pk\"},\n    {\"pk\": \"my_pk2\"},\n    {\"pk\": \"my_pk3\"},\n)\n\nresult_data_table = query.execute(data_table)\nfor record in result_data_table.get_records():\n    print(record)\n```\n\n### DynamoTable\n\n```python\nfrom typing import Optional\nfrom dynamo_query import DynamoTable, DynamoDictClass\n\n# first, define your record\n@dataclass\nclass UserRecord(DynamoDictClass):\n    pk: str\n    email: str\n    name: str\n    points: Optional[int] = None\n\n    @DynamoDictClass.compute_key(\"pk\")\n    def get_pk(self) -> str:\n        return self.email\n\n\n# Create your dynamo table manager with your record class\nclass UserTable(DynamoTable[UserRecord]):\n    # provide a set of your table keys\n    table_keys = {'pk'}\n    record_class = UserRecord\n\n    # use this property to define your table resource\n    @property\n    def table(self) -> Any:\n        return boto3.resource(\"dynamodb\").Table(\"user_table\")\n\n\n# okay, let's start using our manager\nuser_table = UserTable()\n\n# add a new record to your table\nuser_table.upsert_record(\n    UserRecord(\n        email=\"user@gmail.com\",\n        name=\"John User\",\n        age=12,\n    )\n)\n\n# and output all the records\nfor user_record in user_table.scan():\n    print(user_record)\n```\n\n## Development\n\nInstall dependencies with [pipenv](https://github.com/pypa/pipenv)\n\n```bash\npython -m pip install pipenv\npipenv install -d\n```\n\nEnable `pylint` and `mypy` checks in your IDE.\n\nRun unit tests and linting.\n\n```bash\n./scripts/before_commit.sh\n```\n\nAdd false-positive unused entities to `vulture` whitelist\n\n```bash\nvulture dynamo_query --make-whitelist > vulture_whitelist.py\n```\n\n### VSCode\n\nRecommended `.vscode/settings.json`\n\n```json\n{\n  \"python.pythonPath\": \"<pipenv_path>/bin/python\",\n  \"python.linting.pylintEnabled\": true,\n  \"python.linting.enabled\": true,\n  \"python.linting.mypyEnabled\": true,\n  \"python.formatting.provider\": \"black\"\n}\n```\n\n### PyCharm\n\n- Install `mypy` unofficial extension\n- Install `black`extension, enable format on save\n- Run `pylint` on save\n\n## Versioning\n\n`dynamo_query` version follows [Semantic Versioning](https://semver.org/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/altitudenetworks/dynamoquery",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamoquery",
    "package_url": "https://pypi.org/project/dynamoquery/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamoquery/",
    "project_urls": {
      "Homepage": "https://github.com/altitudenetworks/dynamoquery"
    },
    "release_url": "https://pypi.org/project/dynamoquery/2.5.0/",
    "requires_dist": [
      "botocore"
    ],
    "requires_python": ">=3.6.10",
    "summary": "# DynamoQuery",
    "version": "2.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8225440,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4986521301f056ded44db7be6220afb030e4e205e7700cda9ae662014218887e",
        "md5": "47364f72e4fa008b2eb0eb9c8018cb0e",
        "sha256": "dc3cca886c6bcd50bfff712e5d5f65703525f4f998b9039ccdda3fd327a5d930"
      },
      "downloads": -1,
      "filename": "dynamoquery-2.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47364f72e4fa008b2eb0eb9c8018cb0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.10",
      "size": 40999,
      "upload_time": "2020-06-09T19:30:34",
      "upload_time_iso_8601": "2020-06-09T19:30:34.898997Z",
      "url": "https://files.pythonhosted.org/packages/49/86/521301f056ded44db7be6220afb030e4e205e7700cda9ae662014218887e/dynamoquery-2.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}