{
  "info": {
    "author": "Guillaume Pousseo, Tharushan",
    "author_email": "guillaumepousseo@revsquare.com, contact@tharushan.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. image:: https://badge.fury.io/py/django4-tabbed-admin.png\r\n  :target: http://badge.fury.io/py/django4-tabbed-admin\r\n  :alt: PyPI version\r\n  :height: 18px\r\n\r\n.. image::  https://travis-ci.org/Tharushan/django4-tabbed-admin.png?branch=master\r\n  :target: https://travis-ci.org/Tharushan/django4-tabbed-admin\r\n  :alt: build-status\r\n  :height: 18px\r\n\r\n.. image:: https://coveralls.io/repos/Tharushan/django4-tabbed-admin/badge.png?branch=master\r\n  :target: https://coveralls.io/r/Tharushan/django4-tabbed-admin\r\n  :alt: coverage\r\n  :height: 18px\r\n\r\n###################\r\nDjango tabbed admin\r\n###################\r\n\r\nSimple library to easilly add tabs to admin forms. It also allows users to re-order inlines and fieldsets.\r\nDjango tabbed admin is compatible with django-grappelli and django-gipsy.\r\n\r\n*******\r\nInstall\r\n*******\r\n\r\nIt is strongly recommanded to install this theme from GIT with PIP onto you project virtualenv.\r\n\r\nFrom PyPi\r\n\r\n.. code-block::  shell-session\r\n\r\n    pip install django4-tabbed-admin\r\n\r\nFrom Github\r\n\r\n.. code-block::  shell-session\r\n\r\n    https://github.com/Tharushan/django4-tabbed-admin#egg=tabbed_admin\r\n\r\n\r\n*****\r\nsetup\r\n*****\r\n\r\nSimply add the app in your installed apps list in settings.py\r\n\r\n.. code-block::  python\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'tabbed_admin'\r\n        ...\r\n    )\r\n\r\nDjango-tabbed-admin by default requires Jquery UI tabs plugin in order to work. It is packaged with the static files required to make it funcitonnal, however, they are not activated by default to avoid a conflict with other libraries.\r\n\r\nIn order to activate the Jquery UI statics, add the following line to the project settings:\r\n\r\n.. code-block::  python\r\n\r\n    TABBED_ADMIN_USE_JQUERY_UI = True\r\n\r\n\r\n********************\r\nConfigure admin tabs\r\n********************\r\n\r\nIn order to add tabs to a model admin, it should inherit from tabbed_admin.TabbedModelAdmin and contain a tabs attribute.\r\nThe tab attribute configuration tries to remain similar to the fieldsets and inlines setup logic.\r\n\r\nBasically, a tuple can be created for each tab exactely the same way as for fieldsets, except that inlines can be added anywhere in between.\r\n\r\n.. code-block::  python\r\n\r\n    tab_overview = (\r\n        (None, {\r\n            'fields': ('name', 'bio', 'style')\r\n        }),\r\n        MusicianInline,\r\n        ('Contact', {\r\n            'fields': ('agent', 'phone', 'email')\r\n        })\r\n    )\r\n\r\nThen each tuple have to be passed to a *tabs* attribute prefixed by the verbose name to display within the tab:\r\n\r\n.. code-block::  python\r\n\r\n    tabs = [\r\n        ('Overview', tab_overview),\r\n        ('Albums', tab_album)\r\n    ]\r\n\r\n\r\nA full example would give:\r\n\r\n.. code-block::  python\r\n\r\n    from django.contrib import admin\r\n\r\n    from tabbed_admin import TabbedModelAdmin\r\n    from .models import Band, Musician, Album\r\n\r\n\r\n    class MusicianInline(admin.StackedInline):\r\n        model = Musician\r\n        extra = 1\r\n\r\n\r\n    class AlbumInline(admin.TabularInline):\r\n        model = Album\r\n        extra = 1\r\n\r\n\r\n    @admin.register(Band)\r\n    class BandAdmin(TabbedModelAdmin):\r\n        model = Band\r\n\r\n        tab_overview = (\r\n            (None, {\r\n                'fields': ('name', 'bio', 'style')\r\n            }),\r\n            MusicianInline,\r\n            ('Contact', {\r\n                'fields': ('agent', 'phone', 'email')\r\n            })\r\n        )\r\n        tab_album = (\r\n            AlbumInline,\r\n        )\r\n        tabs = [\r\n            ('Overview', tab_overview),\r\n            ('Albums', tab_album)\r\n        ]\r\n\r\n**************************\r\nConfigure tabs dynamically\r\n**************************\r\n\r\nBe warned that the tabs will completely reset the fieldsets and inlines attributes in order to avoid conflicts during the form saving. Both attributes are overwritten with the entries passed to the tabs attribute. For the same reasons, it is highly recommanded not to overwrite get_fieldsets or get_inlines.\r\n\r\nYou can pass and modify the tabs dynamically the same way you would do for fieldsets or inlines.\r\n\r\n.. code-block::  python\r\n\r\n    def get_tabs(self, request, obj=None):\r\n        tabs = self.tabs\r\n        if obj is not None:\r\n            tab_overview = self.tab_overview + ('Social', {\r\n                'fields': ('website', 'twitter', 'facebook')\r\n            })\r\n            tab_ressources = self.tab_ressources + (InterviewInline, )\r\n            tabs = [\r\n                ('Overview', tab_overview),\r\n                ('Ressources', tab_ressources)\r\n            ]\r\n        self.tabs = tabs\r\n        return super(BandAdmin, self).get_tabs(request, obj)\r\n\r\n\r\n********************\r\nChange the jquery ui\r\n********************\r\n\r\nYou can change the jquery ui css and js by either overriding the media in the\r\nadmin class\r\n\r\n.. code-block:: python\r\n\r\n    class Media:\r\n        css = {\r\n            'all': ('css/jquery-ui.theme.min.css',)\r\n        }\r\n\r\nor by changing the the following settings,\r\n\r\n`TABBED_ADMIN_JQUERY_UI_CSS` and `TABBED_ADMIN_JQUERY_UI_JS`\r\n\r\n.. code-block:: python\r\n\r\n    TABBED_ADMIN_JQUERY_UI_CSS = 'static/css/my-custom-jquery-ui.css'\r\n    TABBED_ADMIN_JQUERY_UI_JS = 'static/js/my-custom-jquery-ui.js'\r\n\r\n\r\nContribution\r\n************\r\n\r\nPlease feel free to contribute. Any help and advices are much appreciated.\r\nYou will find an example application to run and develop the library easily.\r\n\r\n\r\n*****\r\nLINKS\r\n*****\r\n\r\nDevelopment:\r\n    https://github.com/Tharushan/django4-tabbed-admin\r\n\r\nPackage:\r\n    https://pypi.python.org/pypi/django4-tabbed-admin\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.revsquare.com",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django4-tabbed-admin",
    "package_url": "https://pypi.org/project/django4-tabbed-admin/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django4-tabbed-admin/",
    "project_urls": {
      "Homepage": "http://www.revsquare.com"
    },
    "release_url": "https://pypi.org/project/django4-tabbed-admin/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Easily add tabs to django admin forms.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14201923,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e321ae934d768fdc7022ba5394b81e9cd9efb61418c17a1f9cbfe0bfd21003c",
        "md5": "a11c26597da4e7b664077600c0724e57",
        "sha256": "346c9772239b4c595336e54be6caac4cb7b10fa4e3084da72fc39ae3ea6e2e81"
      },
      "downloads": -1,
      "filename": "django4-tabbed-admin-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a11c26597da4e7b664077600c0724e57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 64972,
      "upload_time": "2022-06-21T18:03:19",
      "upload_time_iso_8601": "2022-06-21T18:03:19.544044Z",
      "url": "https://files.pythonhosted.org/packages/0e/32/1ae934d768fdc7022ba5394b81e9cd9efb61418c17a1f9cbfe0bfd21003c/django4-tabbed-admin-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}