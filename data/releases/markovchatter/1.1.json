{
  "info": {
    "author": "Masaaki Shibata",
    "author_email": "mshibata@emptypage.jp",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Markovchatter\n\nEasy Markov chain text generator. (CLI / Web API)\n\nDeveloped on: [emptypage / markovchatter â€” Bitbucket](https://bitbucket.org/emptypage/markovchatter/)\n\n## Table of contents\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Use as a command](#use-as-a-command)\n  - [Run as a Web API server](#run-as-a-web-api-server)\n  - [Options details](#options-details)\n- [Docker image](#docker-image)\n- [License](#license)\n- [Thanks](#thanks)\n- [Changes](#changes)\n\n## Install\n\n```\npip install markovchatter\n```\n\nThis installs The `markovchatter` Python module and the `markovchatter` command line program. You can run the program like both\n\n```\n$ python3 -m markovchatter ...\n```\n\nand\n\n```\n$ markovchatter ...\n```\n\n\n## Usage\n\n### Use as a command\n\n```\nusage: markovchatter.py run [-h] [-d] [-l] [-m MAX_CHARS] [-t TRIES] file [file ...]\n\npositional arguments:\n  file                  text file(s) to learn\n\noptions:\n  -h, --help            show this help message and exit\n  -d, --no-divider      join words without spaces\n  -l, --new-line        files are in new-line text format\n  -m MAX_CHARS, --max-chars MAX_CHARS\n                        Maximum number of characters [0]\n  -t TRIES, --tries TRIES\n                        Maximum times to make a sentence [10]\n```\n\nExample:\n\n```\n$ markovchatter run source.txt\nEnim ut sem nulla pharetra diam sit amet risus nullam eget felis eget nunc scelerisque viverra.\n```\n\n(Of course, the output text is depends on your source.)\n\n### Run as a Web API server\n\n```\nusage: markovchatter.py server [-h] [-l] [-d] [-p PORT] file [file ...]\n\npositional arguments:\n  file                  text file(s) to learn\n\noptions:\n  -h, --help            show this help message and exit\n  -l, --new-line        files are in new-line text format\n  -d, --no-divider      join words without spaces\n  -p PORT, --port PORT  listen port number [8080]\n```\n\nStart the server:\n\n```\n$ markovchatter server source.txt\n * Serving Flask app 'markovchatter'\n * Debug mode: off\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\n * Running on all addresses (0.0.0.0)\n * Running on http://127.0.0.1:8080\n * Running on http://...:8080\n Press CTRL+C to quit\n```\n\nAnd send `GET` request to `http://hostname:port/text` in another terminal:\n\n```\n$ curl http://localhost:8080/text\nCursus sit amet consectetur adipiscing elit ut aliquam purus sit amet nisl suscipit adipiscing bibendum est.\n```\n\n(The response text is depends on your source, again.)\n\nMaximum length of characters and count of tries can be controlled by query string like `/text?max_charas=140&tries=20`.\n\n### Options details\n\n#### Files\n\nThe files given to the program is the source text file, which contain sentences it uses as the model. They are normally well-punctuationed text which terminates its sentence with a dot ('.').\n\nIf your source text is not suitable for the style; e.g. languages doesn't use dots for its period, you can use new-line format text file with `--new-line` option. See option details bellow.\n\n#### `-d`, `--no-divider`\n\nThe markovify library suppose languages that separate words with spaces, and its output is in the same way too. This is annoying when the language doesn't use spaces for its [word divider](https://en.wikipedia.org/wiki/Word_divider). When the option is set, markovchatter joins words *without* spaces; which is more suitable for languages like Japanese.\n\n#### `-l`, `--new-line`\n\nIf this option is set, given files are treated as new-line formatted text; which has each sentence on a newline. This is suitable for languages that doesn't use dot (\".\") for its sentence period.\n\nThe feature comes from a library implementation:\n\n> Markovify works best with large, well-punctuated texts. If your text does not use .s to delineate sentences, put each sentence on a newline, and use the markovify.NewlineText class instead of markovify.Text class.\n>\n> &mdash; [jsvine/markovify: A simple, extensible Markov chain generator.](https://github.com/jsvine/markovify)\n\nWhen the option is set, marcovchatter uses `markovify.NewlineText` class instead of `markovify.Text` as described above.\n\n#### `-m MAX_CHARS`, `--max-chars MAX_CHARS`\n\nAvailable in `run` sub-cpmmand.\n\nTries making a sentence of no more than `MAX_CHARS` characters. If it is specified to `0`, Its length is not limited. The default is `0`.\n\n#### `-t TRIES`, `--tries TRIES`\n\nAvailable in `run` sub-cpmmand.\n\nMaximum count of tries to generate a valid sentense. If it can not be done in specified trials, it returns  empty string.\n\n\n## Docker image\n\nThe image containing Linux that the library is already installed is also [availabe on Docker Hub](https://hub.docker.com/r/emptypage/markovchatter).\n\n```\n$ docker run --rm -v $(pwd)/text:/etc/markovchatter emptypage/markovchatter run /etc/markovchatter/dict.txt\nVel fringilla est ullamcorper eget nulla facilisi cras fermentum odio eu feugiat pretium nibh ipsum consequat.\n```\n\nNotice that the image doesn't contain any source text file so you have to explicitly mount it and specify its path as an argument.\n\n## License\n\nMIT. See LICENSE.\n\n## Thanks\n\nThis program uses [markovify by Jeremy Singer-Vine](https://github.com/jsvine/markovify) and [Flask by Armin Ronacher](https://flask.palletsprojects.com/en/2.2.x/). Thank you for these libraries and its developers.\n\n## Changes\n\n### 1.1.0\n\n- Add control ways for maximum character length and count of tries.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/emptypage/markovchatter/",
    "keywords": "markov,chain,text",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "markovchatter",
    "package_url": "https://pypi.org/project/markovchatter/",
    "platform": null,
    "project_url": "https://pypi.org/project/markovchatter/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/emptypage/markovchatter/"
    },
    "release_url": "https://pypi.org/project/markovchatter/1.1/",
    "requires_dist": [
      "flask",
      "markovify"
    ],
    "requires_python": "",
    "summary": "Easy Markov chain text generator.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15141973,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b5228185237f6c879e39bc002aadf7fc467b1b045c08eb04b3c54d805d482fb",
        "md5": "9c6eda913e2da55192db35728aa8dbb2",
        "sha256": "c3595798477a8e55870a783ed78b528d897f3a0411520c42d2d1da7bc8d788da"
      },
      "downloads": -1,
      "filename": "markovchatter-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c6eda913e2da55192db35728aa8dbb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6100,
      "upload_time": "2022-09-19T10:35:51",
      "upload_time_iso_8601": "2022-09-19T10:35:51.507845Z",
      "url": "https://files.pythonhosted.org/packages/0b/52/28185237f6c879e39bc002aadf7fc467b1b045c08eb04b3c54d805d482fb/markovchatter-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4347e89f55b0cce5e3d035f9f907ee2bcc3156d6305cb62fffdef975979dcdb0",
        "md5": "b738433dd96d92bf030046a3c5ccfea7",
        "sha256": "5a24a07499ed05a4f78e530ab9082782eed7849afb4e4b42e9dd13b975af69f5"
      },
      "downloads": -1,
      "filename": "markovchatter-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b738433dd96d92bf030046a3c5ccfea7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5716,
      "upload_time": "2022-09-19T10:35:52",
      "upload_time_iso_8601": "2022-09-19T10:35:52.779997Z",
      "url": "https://files.pythonhosted.org/packages/43/47/e89f55b0cce5e3d035f9f907ee2bcc3156d6305cb62fffdef975979dcdb0/markovchatter-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}