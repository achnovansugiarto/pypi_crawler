{
  "info": {
    "author": "Ming Chen",
    "author_email": "mockey.chen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Django CAS NG\n=============\n\n.. image:: https://travis-ci.org/mingchen/django-cas-ng.svg?branch=master\n    :target: https://travis-ci.org/mingchen/django-cas-ng\n\n\n``django-cas-ng`` is CAS (Central Authentication Service) client implementation.\nThis project inherit from `django-cas`_.\n`django-cas`_ is not updated since 2013-4-1. This project will include new bugfix\nand new feature development.\n\n\nFeatures\n--------\n\n- Support CAS_ version 1.0, 2.0 and 3.0.\n- Support Django 1.5, 1.6, 1.7 with `User custom model`_\n- Support Python 2.7, 3.x\n\n\nInstallation\n------------\n\nInstall with `pip`_::\n\n    pip install django-cas-ng\n\n\nInstall the latest code::\n\n    pip install https://github.com/mingchen/django-cas-ng/archive/master.zip\n    \n\nInstall from source code::\n\n    python setup.py install\n\n\nSettings\n--------\n\nNow add it to the middleware and authentication backends in your settings.\nMake sure you also have the authentication middleware installed. \nHere's an example::\n\n    MIDDLEWARE_CLASSES = (\n        'django.middleware.common.CommonMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n    )\n\n    AUTHENTICATION_BACKENDS = (\n        'django.contrib.auth.backends.ModelBackend',\n        'django_cas_ng.backends.CASBackend',\n    )\n\nSet the following required setting in ``settings.py``:\n\n* ``CAS_SERVER_URL``: This is the only setting you must explicitly define.\n   Set it to the base URL of your CAS source (e.g. https://account.example.com/cas/).\n\nOptional settings include:\n\n* ``CAS_ADMIN_PREFIX``: The URL prefix of the Django administration site.\n  If undefined, the CAS middleware will check the view being rendered to\n  see if it lives in ``django.contrib.admin.views``.\n* ``CAS_CREATE_USER``: Create a user when the CAS authentication is successful.\n  The default is ``True``.\n* ``CAS_EXTRA_LOGIN_PARAMS``: Extra URL parameters to add to the login URL\n  when redirecting the user. Example::\n\n  CAS_EXTRA_LOGIN_PARAMS = {'renew': true}\n\n* ``CAS_RENEW``: whether pass ``renew`` parameter on login and verification\n  of ticket to enforce that the login is made with a fresh username and password\n  verification in the CAS server. Default is ``False``.\n* ``CAS_IGNORE_REFERER``: If ``True``, logging out of the application will\n  always send the user to the URL specified by ``CAS_REDIRECT_URL``.\n* ``CAS_LOGOUT_COMPLETELY``: If ``False``, logging out of the application\n  won't log the user out of CAS as well.\n* ``CAS_REDIRECT_URL``: Where to send a user after logging in or out if\n  there is no referrer and no next page set. Default is ``/``.\n* ``CAS_RETRY_LOGIN``: If ``True`` and an unknown or invalid ticket is\n  received, the user is redirected back to the login page.\n* ``CAS_VERSION``: The CAS protocol version to use. ``'1'`` and ``'2'`` are\n  supported, with ``'2'`` being the default.\n\nMake sure your project knows how to log users in and out by adding these to\nyour URL mappings::\n\n    (r'^accounts/login$', 'django_cas_ng.views.login'),\n    (r'^accounts/logout$', 'django_cas_ng.views.logout'),\n\nUsers should now be able to log into your site using CAS.\n\nSignals\n-------\n\n``django_cas_ng.signals.cas_user_authenticated``\n\nSent on successful authentication, the ``CASBackend`` will fire the ``cas_user_authenticated`` signal.\n\n**Arguments sent with this signal**\n\n**sender**\n  The authentication backend instance that authenticated the user.\n\n**user**\n  The user instance that was just authenticated.\n\n**created**\n  Boolean as to whether the user was just created.\n\n**attributes**\n  Attributes returned during by the CAS during authentication.\n\n**ticket**\n  The ticket used to authenticate the user with the CAS.\n\n**service**\n  The service used to authenticate the user with the CAS.\n\n\nTesting\n-------\n\nEvery code commit triggers a **travis-ci** build. checkout current build status at https://travis-ci.org/mingchen/django-cas-ng\n\nTesting is managed by ``pytest`` and ``tox``.\nBefore run install, you need install required packages for testing::\n\n    pip install -r requirements-dev.txt\n\n\nTo run testing on locally::\n\n    py.test\n\n\nTo run all testing on all enviroments locally::\n\n    tox\n\n\nContribution\n------------\n\nContributions are welcome!\n\nIf you would like to contribute this project.\nPlease feel free to fork and send pull request.\nPlease make sure tests are passed.\nAlso welcome to add your name to **Credits** section of this document.\n\nNew code should follow both `PEP8`_ and the `Django coding style`_.\n\n\nCredits\n-------\n\n* `django-cas`_.\n* `Stefan Horomnea`_.\n* `Piotr Buliński`_.\n* `Piper Merriam`_.\n* `Nathan Brown`_.\n* `Jason Brownbridge`_.\n\n\nReferences\n----------\n\n* `django-cas`_\n* `CAS protocol`_\n* `Jasig CAS server`_\n\n.. _CAS: https://www.apereo.org/cas\n.. _CAS protocol: https://www.apereo.org/cas/protocol\n.. _django-cas: https://bitbucket.org/cpcc/django-cas\n.. _pip: http://www.pip-installer.org/\n.. _PEP8: http://www.python.org/dev/peps/pep-0008\n.. _Django coding style: https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style\n.. _User custom model: https://docs.djangoproject.com/en/1.5/topics/auth/customizing/\n.. _Jasig CAS server: http://jasig.github.io/cas\n.. _Piotr Buliński: https://github.com/piotrbulinski\n.. _Stefan Horomnea: https://github.com/choosy\n.. _Piper Merriam: https://github.com/pipermerriam\n.. _Nathan Brown: https://github.com/tsitra\n.. _Jason Brownbridge: https://github.com/jbrownbridge",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/mingchen/django-cas-ng/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mingchen/django-cas-ng",
    "keywords": "django,cas,cas2,cas3,client,sso,single sign-on,authentication,auth",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-cas-ng",
    "package_url": "https://pypi.org/project/django-cas-ng/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-cas-ng/",
    "project_urls": {
      "Download": "https://github.com/mingchen/django-cas-ng/releases",
      "Homepage": "https://github.com/mingchen/django-cas-ng"
    },
    "release_url": "https://pypi.org/project/django-cas-ng/3.4.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "CAS 1.0/2.0 client authentication backend for Django (inherited from django-cas)",
    "version": "3.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12516815,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f1a7a3ee3aed590f746093d817cbca94596def85cf50dcb445ad5fb84bc2f04",
        "md5": "7982b2749da37834c06481f5fdfa1b3e",
        "sha256": "1e27acbe740a67e47f5134d7660d6cfcfecf3207e921cadc12791627bcdb4b98"
      },
      "downloads": -1,
      "filename": "django-cas-ng-3.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7982b2749da37834c06481f5fdfa1b3e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9835,
      "upload_time": "2015-01-11T22:14:55",
      "upload_time_iso_8601": "2015-01-11T22:14:55.008158Z",
      "url": "https://files.pythonhosted.org/packages/0f/1a/7a3ee3aed590f746093d817cbca94596def85cf50dcb445ad5fb84bc2f04/django-cas-ng-3.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}