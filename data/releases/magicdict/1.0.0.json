{
  "info": {
    "author": "Kaede Hoshikawa",
    "author_email": "futursolo@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "magicdict\n=========\n.. image:: https://codecov.io/gl/futursolo/magicdict/branch/master/graph/badge.svg\n  :target: https://codecov.io/gl/futursolo/magicdict\n\n.. image:: https://gitlab.com/futursolo/magicdict/badges/master/build.svg\n  :target: https://gitlab.com/futursolo/magicdict/commits/master\n\nAn ordered, one-to-many mapping.\n\nThread Safety\n-------------\n`FrozenMagicDict` and its classes should be thread safe without additional\nlocking. If any data races occurred during using, then that's a bug. Please\nfile an issue with reproducing procedure.\n\nUsage\n-----\n`MagicDict` should function like a `collections.OrderedDict` except\n`move_to_end` is not defined and the item selection always returns the first\nitem. It it is not, submit an issue.\n\n`FrozenMagicDict` is an immutable version of `MagicDict`.\nAlso, compared to `MagicDict`, `FrozenMagicDict` is lockless. Hence,\nwhen an action is available in both dictionaries, `FrozenMagicDict` is usually\nfaster.\n\n`FrozenTolerantMagicDict` and `TolerantMagicDict` are case-insensitive version\nof `FrozenMagicDict` and `MagicDict` respectively.\n\n`get_first`, `get_last`, `get_iter`, and `get_list`:\nThese methods are available in `FrozenMagicDict` and its subclasses to get the\nelements. For more details, please read the comments of each method.\n\n`add`:\nMethod `add` is available in `MagicDict` and `TolerantMagicDict`. This method\nis used as an instead of `dic[\"key\"] = \"value\"` as it can append a value to the\ndictionary without removing the former one. Setting values like normal\n`OrderedDict` will clear the stored value(s) if any.\n\nContributing\n------------\nThe repository is hosted on `GitLab <https://gitlab.com/futursolo/magicdict>`_.\n\nLicense\n-------\nCopyright 2018 Kaede Hoshikawa\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/futursolo/magicdict",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magicdict",
    "package_url": "https://pypi.org/project/magicdict/",
    "platform": "",
    "project_url": "https://pypi.org/project/magicdict/",
    "project_urls": {
      "Homepage": "https://gitlab.com/futursolo/magicdict"
    },
    "release_url": "https://pypi.org/project/magicdict/1.0.0/",
    "requires_dist": [
      "pytest (<4,>=3.3.2); extra == 'test'",
      "pytest-benchmark (<4,>=3.1.1); extra == 'test'",
      "flake8 (<4,>=3.5.0); extra == 'test'",
      "mypy (<1,>=0.560); extra == 'test'"
    ],
    "requires_python": "",
    "summary": "An ordered, one-to-many mapping.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8171136,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8cf5ef28ab13cf1429613ecc5f8e1bf9f3943e428336fdc678469dfd928cb06",
        "md5": "b1391c9d70d38ee5b149f42940ce0d85",
        "sha256": "a55ab31b5c5cc2923980632257388dea6590ac8da0d0f9312fbc99da6f3413eb"
      },
      "downloads": -1,
      "filename": "magicdict-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1391c9d70d38ee5b149f42940ce0d85",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15128,
      "upload_time": "2018-01-19T02:14:00",
      "upload_time_iso_8601": "2018-01-19T02:14:00.733932Z",
      "url": "https://files.pythonhosted.org/packages/b8/cf/5ef28ab13cf1429613ecc5f8e1bf9f3943e428336fdc678469dfd928cb06/magicdict-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a796714dc32de497497d6045538522e34f37a1284812e84258b8641eb434560c",
        "md5": "8569b9150be79d004fac4788fff106a2",
        "sha256": "04b926d23529c2686a96f9e379fa4335429fce83a63b46b63ab14686f8f4efc8"
      },
      "downloads": -1,
      "filename": "magicdict-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8569b9150be79d004fac4788fff106a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13693,
      "upload_time": "2018-01-19T02:14:01",
      "upload_time_iso_8601": "2018-01-19T02:14:01.880393Z",
      "url": "https://files.pythonhosted.org/packages/a7/96/714dc32de497497d6045538522e34f37a1284812e84258b8641eb434560c/magicdict-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}