{
  "info": {
    "author": "Kaede Hoshikawa",
    "author_email": "futursolo@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "magicdict\n=========\n.. image:: https://codecov.io/gl/futursolo/magicdict/branch/master/graph/badge.svg\n  :target: https://codecov.io/gl/futursolo/magicdict\n\n.. image:: https://gitlab.com/futursolo/magicdict/badges/master/pipeline.svg\n  :target: https://gitlab.com/futursolo/magicdict/commits/master\n\nAn ordered, one-to-many mapping.\n\nInstall\n-------\n\n.. code-block:: shell\n\n   $ pip install -U magicdict\n\nThread Safety\n-------------\n:code:`FrozenMagicDict` and its subclasses should be thread safe without additional\nlocking. If any data races occurred, then that's a bug. Please file an issue\nwith reproducing procedure.\n\nUsage\n-----\n:code:`MagicDict` should function like :code:`collections.OrderedDict` except\n:code:`move_to_end` is not defined and :code:`d[key]` always returns the first\nitem.\n\n:code:`FrozenMagicDict` is an immutable version of :code:`MagicDict`.\n\n:code:`FrozenTolerantMagicDict` and :code:`TolerantMagicDict` are\ncase-insensitive versions of :code:`FrozenMagicDict` and :code:`MagicDict`\nrespectively.\n\n:code:`get_first`, :code:`get_last`, :code:`get_iter`, and :code:`get_list`:\nThese methods are available in `FrozenMagicDict` and its subclasses.\nFor more details, please read the comments of each method.\n\n:code:`add`:\nMethod :code:`add` is available in :code:`MagicDict` and\n:code:`TolerantMagicDict`. This method is used as an substitution of\n:code:`dic[key] = value` as it can append a value to the\ndictionary without removing the existing one. Setting values like normal\n:code:`OrderedDict` will clear the stored value(s) if any.\n\nContributing\n------------\nThe repository is hosted on `GitLab <https://gitlab.com/futursolo/magicdict>`_.\n\nLicense\n-------\nCopyright 2020 Kaede Hoshikawa\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/futursolo/magicdict",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magicdict",
    "package_url": "https://pypi.org/project/magicdict/",
    "platform": "",
    "project_url": "https://pypi.org/project/magicdict/",
    "project_urls": {
      "Homepage": "https://gitlab.com/futursolo/magicdict"
    },
    "release_url": "https://pypi.org/project/magicdict/1.0.5/",
    "requires_dist": [
      "importlib-metadata (>=1.6.1)",
      "pytest (<5,>=4.6.11) ; extra == 'test'",
      "pytest-benchmark (<4,>=3.2.3) ; extra == 'test'",
      "flake8 (<4,>=3.8.2) ; extra == 'test'",
      "mypy (<1,>=0.780) ; extra == 'test'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "An ordered, one-to-many mapping.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8171136,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffa6658e5dc2408a28680ed5658f01c03bdaad4fbce2a5e39451528fc4b9abda",
        "md5": "7fdb9c5984e1877fdc82015df26b4e24",
        "sha256": "189625a36e83f0327f26deb1ffeb017294b0516e34bc4ff8975f4cd7941e68be"
      },
      "downloads": -1,
      "filename": "magicdict-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7fdb9c5984e1877fdc82015df26b4e24",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 18135,
      "upload_time": "2020-06-10T16:07:33",
      "upload_time_iso_8601": "2020-06-10T16:07:33.163232Z",
      "url": "https://files.pythonhosted.org/packages/ff/a6/658e5dc2408a28680ed5658f01c03bdaad4fbce2a5e39451528fc4b9abda/magicdict-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af7ea02124d45f206611ad7b9e987dd4638180384b8778fac33d2f7cddded3fa",
        "md5": "05b4480e7557920a0ef5001341f00ec8",
        "sha256": "bb4a90dde71769c961ae8956037317fcdae4885082c91ee3983ebbb6abaa0fe2"
      },
      "downloads": -1,
      "filename": "magicdict-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "05b4480e7557920a0ef5001341f00ec8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 15278,
      "upload_time": "2020-06-10T16:07:34",
      "upload_time_iso_8601": "2020-06-10T16:07:34.259930Z",
      "url": "https://files.pythonhosted.org/packages/af/7e/a02124d45f206611ad7b9e987dd4638180384b8778fac33d2f7cddded3fa/magicdict-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}