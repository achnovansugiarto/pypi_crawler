{
  "info": {
    "author": "Oscar Chen",
    "author_email": "quacky@duck.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-rest-microservice\n\nThis package is built on the \n[djangorestframework-simplejwt](https://github.com/jazzband/djangorestframework-simplejwt) package, which provides\nsome JWT authentication mechanisms with [Django REST framework](https://github.com/encode/django-rest-framework).\nThis package offers the following features:\n- Provides refresh cookie in HttpOnly cookie, and access token in response body, for better security \nwhen implemented properly with SPA.\n- Provides an easier approach to customizing token claims than the standard mechanism described in \ndjangorestframework-simplejwt documentation.\n- Provides a mechanism for authentication with a third-party IDP, before issuing internal JWT to your users.\n- Currently, supports authentication with AWS Cognito using OAuth 2 Code Grant with PKCE for best security practices.\n\nInstallation\n============\nInstall package to environment:\n```commandline\npip install django-rest-microservice\n```\nIn the main urls.py, include the default package url routes:\n```python\nfrom django.urls import path, include\n\nurlpatterns = [\n    path(\"auth/\", include(\"rest_framework_microservice.urls\"))\n]\n```\n\nIn Django settings, include the following:\n```python\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTTokenUserAuthentication',\n    )\n}\n```\n\nSettings\n========\nSettings are specified in Django settings.py under `REST_FRAMEWORK_MICROSERVICE`, the defaults are\nthe following:\n```python\nREST_FRAMEWORK_MICROSERVICE = {\n    \"REFRESH_COOKIE_NAME\": \"refresh_cookie\",\n    \"IDP\": {\n        \"PROVIDER\": \"aws\",\n        \"USER_POOL\": \"us-west-2_abcdefg\",\n        \"CLIENT_ID\": \"abcdefg\",\n    },\n    \"CUSTOM_TOKEN_USER_ATTRIBUTES\": [],\n    \"CUSTOM_TOKEN_CALLABLE_ATTRIBUTES\": [],\n    \"COOKIE_SALT\": \"extra\",\n    \"USER_SERIALIZER_CLASS\": None,\n}\n```\n\n``REFRESH_COOKIE_NAME``\n-----------------------\nName of refresh cookie to set in HTTP header.\n\n``IDP``\n-----------------\nA dictionary containing IDP attributes:\n- ``PROVIDER``: a string identifying what IDP backend to use, defaults to `'aws'` \n(Currently only AWS Cognito is supported.)\n- ``USER_POOL``: user pool identifier used with the IDP.\n- ``CLIENT_ID``: IDP client id for your application.\n\n\n\n``CUSTOM_TOKEN_USER_ATTRIBUTES``\n--------------------------------\n\nThe list of Django user attributes to be copied to token as claims. i.e.: ``['is_active',]``.\n\n``CUSTOM_TOKEN_CALLABLE_ATTRIBUTES``\n------------------------------------\n\nThis is used to customize claims which cannot be done by simply using ``CUSTOM_TOKEN_USER_ATTRIBUTES`` setting.\nThis should be a list of dictionaries containing ``attr_name`` and ``attr_getter``.\ni.e. : ``[{'attr_name': 'preferences', 'attr_getter': 'my_module.some_file.get_user_preferences'}, ...]``\n\nThe function specified in ``attr_getter`` should accept an argument of a Django user instance.\n\n``COOKIE_SALT``\n---------------\nSalt to be used when signing cookie.\n\n``USER_SERIALIZER_CLASS``\n-------------------------\nDefaults to None. If specified, the default view serializers will try to add a user object representing the user.\nThe content of the user object is defined by ``USER_SERIALIZER_CLASS``.\n\nCustomizing token claims\n========================\n\nYou can include additional user attributes in the token claims by specifying them\nin the ``CUSTOM_TOKEN_USER_ATTRIBUTES``.\n\nYou can also specify functions to return the value for custom claims by using\n``CUSTOM_TOKEN_CALLABLE_ATTRIBUTES``.\n\n```python\n# settings.py\nREST_FRAMEWORK_MICROSERVICE = {\n  ...,\n  'CUSTOM_TOKEN_CALLABLE_ATTRIBUTES': [\n        {'attr_name': 'user_services',\n         'attr_getter': 'my_module.token_claims.get_user_subscribed_services'\n         }\n    ]\n}\n\n# my_module.token_claims.py\ndef get_user_subscribed_services(user):\n  return user.subscribed_services\n\n```\nIf you are using `djangorestframework-simplejwt` version <= 5.0.0, you will also need to extend the \n`rest_framework_simplejwt.models.TokenUser` to include the additional claims. This is only applicable when using\n[older versions](https://github.com/jazzband/djangorestframework-simplejwt/pull/528/).\n\n```python\nfrom functools import cached_property\nfrom rest_framework_simplejwt.models import TokenUser\n\nclass CustomTokenUser(TokenUser):\n    \"\"\"\n    Extend TokenUser and adds custom attributes to be pulled from TokenUser.\n    This class should be specified in Django settings SIMPLE_JWT.TOKEN_USER_CLASS\n    \"\"\"\n\n    @cached_property\n    def first_name(self):\n        return self.token.get('first_name', None)\n```\nand include the following Django setting:\n```python\nSIMPLE_JWT = {\n    'TOKEN_USER_CLASS': 'microservice.models.CustomTokenUser'\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oscarychen/django-rest-microservice",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-microservice",
    "package_url": "https://pypi.org/project/django-rest-microservice/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-microservice/",
    "project_urls": {
      "Homepage": "https://github.com/oscarychen/django-rest-microservice"
    },
    "release_url": "https://pypi.org/project/django-rest-microservice/1.0/",
    "requires_dist": [
      "Django (>=2.2)",
      "djangorestframework (>=3.0)",
      "djangorestframework-simplejwt (>=5.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Facilitating microservice architecture in Django REST framework",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16338766,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5301ce6824cff40711040cbffa1467de01a20bc6b9077e7ea6481db2e4f1a14",
        "md5": "59ea95b0e9a9aa9e954e424036f10efc",
        "sha256": "7b3fc20b7b1b1324499de4bf74035a60d05576ccaa2e8a49284f1963cf21bafe"
      },
      "downloads": -1,
      "filename": "django_rest_microservice-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59ea95b0e9a9aa9e954e424036f10efc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11273,
      "upload_time": "2022-02-22T04:33:12",
      "upload_time_iso_8601": "2022-02-22T04:33:12.196320Z",
      "url": "https://files.pythonhosted.org/packages/f5/30/1ce6824cff40711040cbffa1467de01a20bc6b9077e7ea6481db2e4f1a14/django_rest_microservice-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7563d9b22e77877ece7a085c36a7197e21cf4402a0fdd28d7023b6f6c702b8d1",
        "md5": "459baa3a5f4c72c7a3acff6d59a13d02",
        "sha256": "f62d1935a96abdb8a0460f4f06e628ef7fb230790a0f627f78968529f42a83aa"
      },
      "downloads": -1,
      "filename": "django-rest-microservice-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "459baa3a5f4c72c7a3acff6d59a13d02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9057,
      "upload_time": "2022-02-22T04:33:14",
      "upload_time_iso_8601": "2022-02-22T04:33:14.809337Z",
      "url": "https://files.pythonhosted.org/packages/75/63/d9b22e77877ece7a085c36a7197e21cf4402a0fdd28d7023b6f6c702b8d1/django-rest-microservice-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}