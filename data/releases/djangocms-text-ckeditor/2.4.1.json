{
  "info": {
    "author": "Divio AG",
    "author_email": "info@divio.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Communications",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Message Boards"
    ],
    "description": "djangocms-text-ckeditor\r\n=======================\r\n\r\nText Plugin for django-cms with CK-Editor\r\n\r\n.. WARNING::\r\n   ``cms.plugins.text`` and ``djangocms-text-ckeditor`` can't be used at the same time.\r\n\r\n.. WARNING::\r\n   For django CMS 2.3 and 2.4 use ``djangocms-text-ckeditor`` < 2 (e.g.: version 1.0.10).\r\n\r\n   ``djangocms-text-ckeditor`` >= 2 is compatible with django CMS 3 only.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThis plugin requires `django CMS` 2.3 or higher to be properly installed.\r\n\r\n* In your projects `virtualenv`, run ``pip install djangocms-text-ckeditor``.\r\n* Add ``'djangocms_text_ckeditor'`` to your ``INSTALLED_APPS`` setting **BEFORE** the ``cms`` entry.\r\n* If using Django 1.7 add ``'djangocms_text_ckeditor': 'djangocms_text_ckeditor.migrations_django',``\r\n  to ``MIGRATION_MODULES``  (or define ``MIGRATION_MODULES`` if it does not exists);\r\n  when django CMS 3.1 will be released, migrations for Django 1.7 will be moved\r\n  to the standard location and the south-style ones to ``south_migrations``.\r\n* Run ``manage.py migrate djangocms_text_ckeditor``.\r\n\r\nUpgrading from ``cms.plugins.text``\r\n-----------------------------------\r\n\r\n* Remove ``cms.plugins.text`` from ``INSTALLED_APPS``\r\n* Add ``djangocms_text_ckeditor`` to ``INSTALLED_APPS``\r\n* Run ``python manage.py migrate djangocms_text_ckeditor 0001 --fake``\r\n\r\n\r\nUsage\r\n-----\r\n\r\nDefault content in Placeholder\r\n******************************\r\n\r\nIf you use Django-CMS >= 3.0, you can use ``TextPlugin`` in \"default_plugins\"\r\n(see docs about the CMS_PLACEHOLDER_CONF setting in Django CMS 3.0).\r\n``TextPlugin`` requires just one value: ``body`` where you write your default\r\nHTML content. If you want to add some \"default children\" to your\r\nautomagically added plugin (i.e. a ``LinkPlugin``), you have to put children\r\nreferences in the body. References are ``\"%(_tag_child_<order>)s\"`` with the\r\ninserted order of chidren. For example::\r\n\r\n    CMS_PLACEHOLDER_CONF = {\r\n        'content': {\r\n            'name' : _('Content'),\r\n            'plugins': ['TextPlugin', 'LinkPlugin'],\r\n            'default_plugins':[\r\n                {\r\n                    'plugin_type':'TextPlugin',\r\n                    'values':{\r\n                        'body':'<p>Great websites : %(_tag_child_1)s and %(_tag_child_2)s</p>'\r\n                    },\r\n                    'children':[\r\n                        {\r\n                            'plugin_type':'LinkPlugin',\r\n                            'values':{\r\n                                'name':'django',\r\n                                'url':'https://www.djangoproject.com/'\r\n                            },\r\n                        },\r\n                        {\r\n                            'plugin_type':'LinkPlugin',\r\n                            'values':{\r\n                                'name':'django-cms',\r\n                                'url':'https://www.django-cms.org'\r\n                            },\r\n                        },\r\n                    ]\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\nCKEDITOR_SETTINGS\r\n*****************\r\n\r\nYou can override the setting ``CKEDITOR_SETTINGS`` in your settings.py::\r\n\r\n    CKEDITOR_SETTINGS = {\r\n        'language': '{{ language }}',\r\n        'toolbar': 'CMS',\r\n        'skin': 'moono',\r\n    }\r\n\r\nThis is the default dict that holds all **CKEditor** settings.\r\n\r\nCustomizing plugin editor\r\n#########################\r\n\r\nTo customize the plugin editor, use `toolbar_CMS` attribute, as in::\r\n\r\n    CKEDITOR_SETTINGS = {\r\n        'language': '{{ language }}',\r\n        'toolbar_CMS': [\r\n            ['Undo', 'Redo'],\r\n            ['cmsplugins', '-', 'ShowBlocks'],\r\n            ['Format', 'Styles'],\r\n        ]\r\n        'skin': 'moono',\r\n    }\r\n\r\nCustomizing HTMLField editor\r\n############################\r\n\r\nIf you use ``HTMLField`` from ``djangocms_text_ckeditor.fields`` in your own\r\nmodels, use `toolbar_HTMLField` attribute::\r\n\r\n    CKEDITOR_SETTINGS = {\r\n        'language': '{{ language }}',\r\n        'toolbar_HTMLField': [\r\n            ['Undo', 'Redo'],\r\n            ['ShowBlocks'],\r\n            ['Format', 'Styles'],\r\n        ]\r\n        'skin': 'moono',\r\n    }\r\n\r\n\r\nYou can further customize each `HTMLField` field by using different\r\nconfiguration parameter in your settings::\r\n\r\n\r\n    models.py\r\n\r\n    class Model1(models.Model):\r\n        text = HTMLField(configuration='CKEDITOR_SETTINGS_MODEL1')\r\n\r\n    class Model2(models.Model):\r\n        text = HTMLField(configuration='CKEDITOR_SETTINGS_MODEL2')\r\n\r\n    settings.py\r\n\r\n    CKEDITOR_SETTINGS_MODEL1 = {\r\n        'toolbar_HTMLField': [\r\n            ['Undo', 'Redo'],\r\n            ['ShowBlocks'],\r\n            ['Format', 'Styles'],\r\n            ['Bold', 'Italic', 'Underline', '-', 'Subscript', 'Superscript', '-', 'RemoveFormat'],\r\n        ]\r\n    }\r\n\r\n    CKEDITOR_SETTINGS_MODEL2 = {\r\n        'toolbar_HTMLField': [\r\n            ['Undo', 'Redo'],\r\n            ['Bold', 'Italic', 'Underline', '-', 'Subscript', 'Superscript', '-', 'RemoveFormat'],\r\n        ]\r\n    }\r\n\r\n\r\n#. Add `configuration='MYSETTING'` to the `HTMLField` usage(s) you want to\r\n   customize;\r\n#. Define a setting parameter named as the string used in the `configuration`\r\n   argument of the `HTMLField` instance with the desidered configuration;\r\n\r\nValues not specified in your custom configuration will be taken from the global\r\n``CKEDITOR_SETTINGS``.\r\n\r\nFor an  overview of all the available settings have a look here:\r\n\r\nhttp://docs.ckeditor.com/#!/api/CKEDITOR.config\r\n\r\n\r\nDrag & Drop Images\r\n------------------\r\n\r\nIn IE and Firefox based browsers it is possible to drag and drop a picture into the text editor.\r\nThis image is base64 encoded and lives in the 'src' attribute as a 'data' tag.\r\n\r\nWe detect this images, encode them and convert them to picture plugins.\r\nIf you want to overwirite this behavior for your own picture plugin:\r\n\r\nThere is a setting called::\r\n\r\n    TEXT_SAVE_IMAGE_FUNCTION = 'djangocms_text_ckeditor.picture_save.create_picture_plugin'\r\n\r\nyou can overwrite this setting in your settings.py and point it to a function that handles image saves.\r\nHave a look at the function ``create_picture_plugin`` for details.\r\n\r\nTo completely disable the feature, set ``TEXT_SAVE_IMAGE_FUNCTION = None``.\r\n\r\n\r\nTranslations\r\n------------\r\n\r\nIf you want to help translate the plugin please do it on transifex:\r\n\r\nhttps://www.transifex.com/projects/p/django-cms/resource/djangocms-text-ckeditor/\r\n\r\n\r\nUsage as a model field\r\n----------------------\r\n\r\nIf you want to use the widget on your own model fields, you can! Just import the provided ``HTMLField`` like so::\r\n\r\n    from djangocms_text_ckeditor.fields import HTMLField\r\n\r\nAnd use it in your models, just like a ``TextField``::\r\n\r\n    class MyModel(models.Model):\r\n        myfield = HTMLField(blank=True)\r\n\r\nThis field does not allow you to embed any other CMS plugins within the text editor. Plugins can only be embedded \r\nwithin ``Placeholder`` fields.\r\n\r\nIf you need to allow additional plugins to be embedded in a HTML field, convert the ``HTMLField`` to a ``Placeholderfield``\r\nand configure the placeholder to only accept TextPlugin. For more information on using placeholders outside of the CMS see:\r\n\r\nhttp://django-cms.readthedocs.org/en/latest/extending_cms/placeholders.html\r\n\r\n\r\nExtending the plugin\r\n--------------------\r\n\r\n.. NOTE::\r\n    Added in version 2.0.1\r\n\r\nYou can use this plugin as base to create your own CKEditor-based plugins.\r\n\r\nYou need to create your own plugin model extending ``AbstractClass``::\r\n\r\n    from djangocms_text_ckeditor.models import AbstractText\r\n\r\n    class MyTextModel(AbstractText):\r\n        title = models.CharField(max_length=100)\r\n\r\nand a plugin class extending ``TextPlugin`` class::\r\n\r\n    from djangocms_text_ckeditor.cms_plugins import TextPlugin\r\n    from .models import MyTextModel\r\n\r\n\r\n    class MyTextPlugin(TextPlugin):\r\n        name = _(u\"My text plugin\")\r\n        model = MyTextModel\r\n        \r\n    plugin_pool.register_plugin(MyTextPlugin)\r\n\r\nNote that if you override the `render` method that is inherited from the base ``TextPlugin`` class, any child text\r\nplugins will not render correctly. You must call the super ``render`` method in order for ``plugin_tags_to_user_html()``\r\nto render out all child plugins located in the ``body`` field. For example::\r\n\r\n    from djangocms_text_ckeditor.cms_plugins import TextPlugin\r\n    from .models import MyTextModel\r\n    \r\n    \r\n    class MyTextPlugin(TextPlugin):\r\n        name = _(u\"My text plugin\")\r\n        model = MyTextModel\r\n\r\n        def render(self, context, instance, placeholder):\r\n            context.update({\r\n                'name': instance.name,\r\n            })\r\n            # Other custom render code you may have\r\n        return super(MyTextPlugin, self).render(context, instance, placeholder)\r\n        \r\n    plugin_pool.register_plugin(MyTextPlugin)\r\n\r\nYou can further `customize your plugin`_ as other plugins.\r\n\r\n.. _customize your plugin: http://django-cms.readthedocs.org/en/latest/extending_cms/custom_plugins.html\r\n\r\nAdding plugins to the \"CMS Plugins\" dropdown\r\n--------------------------------------------\r\n\r\nIf you have another plugin that you want to use inside texts you can make them appear in the dropdown by making them text_enabled.\r\nCheck in `django-cms doc`_ how to do this.\r\n\r\n.. _django-cms doc: http://django-cms.readthedocs.org/en/develop/extending_cms/custom_plugins.html#text-enabled\r\n\r\nConfigurable sanitizer\r\n----------------------\r\n\r\n``djangocms-text-ckeditor`` uses `html5lib`_ to sanitize HTML to avoid\r\nsecurity issues and to check for correct HTML code.\r\nSanitisation may strip tags usesful for some use cases such as ``iframe``;\r\nyou may customize the tags and attributes allowed by overriding the\r\n``TEXT_ADDITIONAL_TAGS`` and ``TEXT_ADDITIONAL_ATTRIBUTES`` settings::\r\n\r\n    TEXT_ADDITIONAL_TAGS = ('iframe',)\r\n    TEXT_ADDITIONAL_TAGS = ('scrolling', 'allowfullscreen', 'frameborder')\r\n\r\nTo completely disable the feature, set ``TEXT_HTML_SANITIZE = False``.\r\n\r\nSee the `html5lib documentation`_ for further information.\r\n\r\n.. _html5lib: https://pypi.python.org/pypi/html5lib\r\n.. _html5lib documentation: https://code.google.com/p/html5lib/wiki/UserDocumentation#Sanitizing_Tokenizer\r\n\r\nAbout CKEditor\r\n--------------\r\n\r\nThe current integrated Version of CKeditor is **4.4**. For a full documentation visit: http://ckeditor.com/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/divio/djangocms-text-ckeditor",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangocms-text-ckeditor",
    "package_url": "https://pypi.org/project/djangocms-text-ckeditor/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/djangocms-text-ckeditor/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/divio/djangocms-text-ckeditor"
    },
    "release_url": "https://pypi.org/project/djangocms-text-ckeditor/2.4.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Text Plugin for django CMS with CKEditor support",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16590641,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8714554778883598605b14cc094e816e06e09e5df9f8034c4bba5d14074847a4",
        "md5": "7d874ffc62483ef3c6220221c4641d9c",
        "sha256": "76b77a43229471539054ae1933a0b2908979f7d9ceb02c40c1c1ea4e573d12e8"
      },
      "downloads": -1,
      "filename": "djangocms_text_ckeditor-2.4.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d874ffc62483ef3c6220221c4641d9c",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 1616326,
      "upload_time": "2014-10-26T12:16:57",
      "upload_time_iso_8601": "2014-10-26T12:16:57.750928Z",
      "url": "https://files.pythonhosted.org/packages/87/14/554778883598605b14cc094e816e06e09e5df9f8034c4bba5d14074847a4/djangocms_text_ckeditor-2.4.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3e53753c5664cb1b616f24b8c60daf28b465c9e21c158b520f9432e4d8a1967",
        "md5": "b8096e448a640812d220b8ede8f977ed",
        "sha256": "b2fa7af735ae22ef65aef4f922dc1f47b5e1c32aeb2773a6ccdb647ffa3c567b"
      },
      "downloads": -1,
      "filename": "djangocms-text-ckeditor-2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b8096e448a640812d220b8ede8f977ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1178568,
      "upload_time": "2014-10-26T12:16:33",
      "upload_time_iso_8601": "2014-10-26T12:16:33.188663Z",
      "url": "https://files.pythonhosted.org/packages/e3/e5/3753c5664cb1b616f24b8c60daf28b465c9e21c158b520f9432e4d8a1967/djangocms-text-ckeditor-2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}