{
  "info": {
    "author": "DMOJ Team",
    "author_email": "contact@dmoj.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education",
      "Topic :: Software Development"
    ],
    "description": "DMOJ Judge [![Linux Build Status](https://img.shields.io/travis/DMOJ/judge-server.svg?logo=linux)](https://travis-ci.org/DMOJ/judge-server) [![FreeBSD Build Status](https://img.shields.io/jenkins/s/https/ci.dmoj.ca/job/dmoj-judge-freebsd.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMTQiIGhlaWdodD0iMTQiIHZpZXdCb3g9IjAgMCAyNTYgMjUyIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIj48ZyBmaWxsPSJ3aGl0ZSI%2BPHBhdGggZD0iTTI1Mi43MjMgNS4xMWMxMy41MDggMTMuNS0yMy45MzkgNzIuODQ4LTMwLjI3IDc5LjE4Mi02LjMzIDYuMzIxLTIyLjQwOS41MDUtMzUuOTEtMTMtMTMuNTA4LTEzLjUtMTkuMzI3LTI5LjU4My0xMi45OTYtMzUuOTE0IDYuMzI3LTYuMzMzIDY1LjY3MS00My43NzcgNzkuMTc2LTMwLjI2OU02My4zMDUgMTkuMzk0Yy0yMC42MjItMTEuNy00OS45NjYtMjQuNzE2LTU5LjMtMTUuMzgtOS40NTggOS40NTQgNC4wMzQgMzkuNDU4IDE1Ljg1OCA2MC4xMTdhMTI2LjgxMiAxMjYuODEyIDAgMCAxIDQzLjQ0Mi00NC43MzciLz48cGF0aCBkPSJNMjMyLjEyMyA3OS42MzZjMS44OTkgNi40NCAxLjU1OCAxMS43Ni0xLjUyMiAxNC44MzQtNy4xOTMgNy4xOTYtMjYuNjI0LS40NjQtNDQuMTQtMTcuMTM0YTg5LjM4MyA4OS4zODMgMCAwIDEtMy42MjctMy40MjhjLTYuMzM0LTYuMzM2LTExLjI2Mi0xMy4wOC0xNC40MTQtMTkuMjkxLTYuMTM1LTExLjAwNi03LjY3LTIwLjcyNi0zLjAzMy0yNS4zNjQgMi41MjctMi41MjQgNi41Ny0zLjIxMiAxMS41MDItMi4zMjUgMy4yMTYtMi4wMzQgNy4wMTMtNC4zIDExLjE3Ni02LjYyMS0xNi45MjktOC44My0zNi4xNzYtMTMuODE3LTU2LjU5My0xMy44MTdDNjMuNzUzIDYuNDkgOC44NTQgNjEuMzggOC44NTQgMTI5LjEwNWMwIDY3LjcxMyA1NC45IDEyMi42MSAxMjIuNjE4IDEyMi42MSA2Ny43MiAwIDEyMi42MTYtNTQuODk3IDEyMi42MTYtMTIyLjYxIDAtMjEuODctNS43NC00Mi4zNzctMTUuNzY3LTYwLjE1Ni0yLjE2NyAzLjk1NS00LjI3NCA3LjU3OC02LjE5OCAxMC42ODciLz48L2c%2BPC9zdmc%2B)](https://ci.dmoj.ca/job/dmoj-judge-freebsd/lastBuild/consoleFull) [![Coverage](https://img.shields.io/codecov/c/github/DMOJ/judge-server.svg)](https://codecov.io/gh/DMOJ/judge-server) [![Slack](https://slack.dmoj.ca/badge.svg)](https://slack.dmoj.ca)\n=====\n\nPython [AGPLv3](https://github.com/DMOJ/judge/blob/master/LICENSE) contest judge backend for the [DMOJ site](http://github.com/DMOJ/site) interface. See it in action at [dmoj.ca](https://dmoj.ca/)!\n\n<table>\n<tr>\n<td>\n<a href=\"http://dmoj.ca\">\n<img src=\"https://avatars2.githubusercontent.com/u/6934864?v=3&s=100\" align=\"left\"></img>\n</a>\n</td>\n<td>\nA modern online judge and contest platform system, supporting <b>IO-based</b>, <b>interactive</b>, and <b>signature-graded</b> tasks,\n            with <b>runtime data generators</b> and <b>custom output validators</b>.\n</td>\n</tr>\n</table>\n\n## Supported Platforms and Runtimes\n\nThe judge implements secure grading on Linux and FreeBSD machines.\n\n|           | Linux \t| FreeBSD \t|\n|------\t|-------\t|---------\t|\n| x64  \t| [✔](https://travis-ci.org/DMOJ/judge)     \t| [✔](https://ci.dmoj.ca/job/dmoj-judge-freebsd/)       \t|\n| x86  \t| ✔     \t|       ¯\\\\\\_(ツ)\\_/¯   |\n| x32 \t| ✔     \t|      &mdash;   \t|\n| ARM  \t| ✔     \t|      ❌   \t|\n\nVersions up to and including [v1.4.0](https://github.com/DMOJ/judge/releases/tag/v1.4.0) also supported grading on Windows machines.\n\nThe DMOJ judge does **not** need a root user to run on Linux machines: it will run just fine under a normal user.\n\nSupported languages include:\n* C++ 11/14/17 (GCC and Clang)\n* C 99/11\n* Java 8/9/10/11\n* Python 2/3\n* PyPy 2/3\n* Pascal\n* Perl\n* Mono C#/F#/VB\n\nThe judge can also grade in the languages listed below. These languages are less tested and more likely to be buggy.\n* Ada\n* AWK\n* COBOL\n* D\n* Dart\n* Fortran\n* Forth\n* Go\n* Groovy\n* Haskell\n* INTERCAL\n* Kotlin\n* Lua\n* NASM\n* Objective-C\n* OCaml\n* PHP\n* Pike\n* Prolog\n* Racket\n* Ruby\n* Rust\n* Scala\n* Chicken Scheme\n* sed\n* Steel Bank Common Lisp\n* Swift\n* Tcl\n* Turing\n* V8 JavaScript\n* Brain\\*\\*\\*\\*\n* Zig\n\n## Installation\nInstalling the DMOJ judge creates two executables in your Python's script directory: `dmoj` and `dmoj-cli`.\n`dmoj` is used to connect a judge to a DMOJ site instance, while `dmoj-cli` provides a command-line interface to a\nlocal judge, useful for testing problems.\n\nFor more detailed steps, read the [installation instructions](https://docs.dmoj.ca/#/judge/linux_installation).\n\nNote that **the only officially-supported Linux distribution is the latest Debian**, with the default `apt` versions of all runtimes. This is [what we run on dmoj.ca](https://dmoj.ca/runtimes/matrix/), and it should \"just work\". While the judge will likely still work with other distributions and runtime versions, some runtimes might fail to initialize. In these cases, please [file an issue](https://github.com/DMOJ/judge/issues).\n\n### Stable Build\n[![PyPI version](https://badge.fury.io/py/dmoj.svg)](https://pypi.python.org/pypi/dmoj)\n[![PyPI](https://img.shields.io/pypi/pyversions/dmoj.svg)](https://pypi.python.org/pypi/dmoj)\n\nWe periodically publish builds [on PyPI](https://pypi.python.org/pypi/dmoj). This is the easiest way to get started,\nbut may not contain all the latest features and improvements.\n\n```\n$ pip install dmoj\n```\n\n### Bleeding-Edge Build\nThis is the version of the codebase we run live on [dmoj.ca](https://dmoj.ca).\n\n```\n$ git clone --recursive https://github.com/DMOJ/judge.git\n$ cd judge\n$ pip install -e .\n```\n\nSeveral environment variables can be specified to control the compilation of the sandbox:\n\n* `DMOJ_USE_SECCOMP`; set it to `no` if you're building on a pre-Linux 3.5 kernel to disable `seccomp` filtering in favour of pure `ptrace` (slower).\n   This flag has no effect when building outside of Linux.\n* `DMOJ_TARGET_ARCH`; use it to override the default architecture specified for compiling the sandbox (via `-march`).\n   Usually this is `native`, but will not be specified on ARM unless `DMOJ_TARGET_ARCH` is set (a generic, slow build will be compiled instead).\n\n### With Docker\nWe maintain Docker images with all runtimes we support in the [runtimes-docker](https://github.com/DMOJ/runtimes-docker) project.\n\nRuntimes are split into three tiers of decreasing support. Tier 1 includes\nPython 2/3, C/C++ (GCC only), Java 8, and Pascal. Tier 3 contains all the\nruntimes we run on [dmoj.ca](https://dmoj.ca). Tier 2 contains some in-between\nmix; read the `Dockerfile` for each tier for details. These images are rebuilt\nand tested every week to contain the latest runtime versions.\n\nThe script below spawns a tier 1 judge image. It expects the relevant\nenvironment variables to be set, the network device to be `enp1s0`, problems\nto be placed under `/mnt/problems`, and judge-specific configuration to be in\n`/mnt/problems/judge.yml`. Note that runtime configuration is already done for you,\nand will be merged automatically into the `judge.yml` provided.\n\n```\n$ git clone --recursive https://github.com/DMOJ/judge.git\n$ cd judge/.docker\n$ make judge-tier1\n$ exec docker run \\\n    --name judge \\\n    -p \"$(ip addr show dev enp1s0 | perl -ne 'm@inet (.*)/.*@ and print$1 and exit')\":9998:9998 \\\n    -v /mnt/problems:/problems \\\n    --cap-add=SYS_PTRACE \\\n    -d \\\n    --restart=always \\\n    dmoj/judge-tier1:latest \\\n    run -p15001 -s -c /problems/judge.yml \\\n    \"$BRIDGE_ADDRESS\" \"$JUDGE_NAME\" \"$JUDGE_KEY\"\n```\n\n## Usage\n### Running a Judge Server\n```\n$ dmoj --help\nusage: dmoj [-h] [-p SERVER_PORT] -c CONFIG [-l LOG_FILE] [--no-watchdog]\n            [-a API_PORT] [-A API_HOST] [-s] [-k] [-T TRUSTED_CERTIFICATES]\n            [-e ONLY_EXECUTORS | -x EXCLUDE_EXECUTORS] [--no-ansi]\n            server_host [judge_name] [judge_key]\n\nSpawns a judge for a submission server.\n\npositional arguments:\n  server_host           host to connect for the server\n  judge_name            judge name (overrides configuration)\n  judge_key             judge key (overrides configuration)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p SERVER_PORT, --server-port SERVER_PORT\n                        port to connect for the server\n  -c CONFIG, --config CONFIG\n                        file to load judge configurations from\n  -l LOG_FILE, --log-file LOG_FILE\n                        log file to use\n  --no-watchdog         disable use of watchdog on problem directories\n  -a API_PORT, --api-port API_PORT\n                        port to listen for the judge API (do not expose to\n                        public, security is left as an exercise for the\n                        reverse proxy)\n  -A API_HOST, --api-host API_HOST\n                        IPv4 address to listen for judge API\n  -s, --secure          connect to server via TLS\n  -k, --no-certificate-check\n                        do not check TLS certificate\n  -T TRUSTED_CERTIFICATES, --trusted-certificates TRUSTED_CERTIFICATES\n                        use trusted certificate file instead of system\n  -e ONLY_EXECUTORS, --only-executors ONLY_EXECUTORS\n                        only listed executors will be loaded (comma-separated)\n  -x EXCLUDE_EXECUTORS, --exclude-executors EXCLUDE_EXECUTORS\n                        prevent listed executors from loading (comma-\n                        separated)\n  --no-ansi             disable ANSI output\n  --skip-self-test      skip executor self-tests\n```\n\n### Running a CLI Judge\n```\n$ dmoj-cli --help\nusage: dmoj-cli [-h] -c CONFIG\n                [-e ONLY_EXECUTORS | -x EXCLUDE_EXECUTORS]\n                [--no-ansi]\n\nSpawns a judge for a submission server.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        file to load judge configurations from\n  -e ONLY_EXECUTORS, --only-executors ONLY_EXECUTORS\n                        only listed executors will be loaded (comma-separated)\n  -x EXCLUDE_EXECUTORS, --exclude-executors EXCLUDE_EXECUTORS\n                        prevent listed executors from loading (comma-\n                        separated)\n  --no-ansi             disable ANSI output\n  --skip-self-test      skip executor self-tests\n```\n\n## Documentation\nFor info on the problem file format and more, [read the documentation.](https://docs.dmoj.ca)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DMOJ/judge",
    "keywords": "online-judge",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dmoj",
    "package_url": "https://pypi.org/project/dmoj/",
    "platform": "",
    "project_url": "https://pypi.org/project/dmoj/",
    "project_urls": {
      "Homepage": "https://github.com/DMOJ/judge"
    },
    "release_url": "https://pypi.org/project/dmoj/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The judge component of the DMOJ: Modern Online Judge platform",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16951231,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a273e25cf59b925ade3c0b66547c4605b54294ac5aff0843e021109d6de1af5",
        "md5": "2db1cabd66880340db9a2d8a9e5ee30f",
        "sha256": "6f1fca16fe6d1fdda7dc7da465ee8f70540e64eee068c7e0ec26e4a2c991cae8"
      },
      "downloads": -1,
      "filename": "dmoj-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2db1cabd66880340db9a2d8a9e5ee30f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 183728,
      "upload_time": "2020-05-11T20:12:51",
      "upload_time_iso_8601": "2020-05-11T20:12:51.914467Z",
      "url": "https://files.pythonhosted.org/packages/7a/27/3e25cf59b925ade3c0b66547c4605b54294ac5aff0843e021109d6de1af5/dmoj-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}