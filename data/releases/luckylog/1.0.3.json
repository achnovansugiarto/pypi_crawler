{
  "info": {
    "author": "测码课堂-范晔",
    "author_email": "1538379200@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# -*- coding: UTF-8 -*-\n##Version: 0.0.1\n日志模板\n目前仅支持自定义消息处理\n使用log请直接再文件中导入  from luckylog import Logger\n如需要保存为文件，则需要导入整个文件获取全局变量  import logger\n执行：Logger.sccess(xxx)\n文件中有两个全局变量，当设置 path 为保存的文件位置和格式，module为选择保存的类型\nmodule = 'success,error,warning,tip' 目前有四种类型的日志消息\n目前展示类型：运行时间、函数名称、文件路径、状态、行数,格式固定,固定调用即显示\nsuccess：成功； error：错误； warning：警告； tip：提示；\n\n添加装饰器功能：\n装饰器使用： from luckylog import logger  （注意是小写的l）\n装饰器自带两个参数，success和fail，代表自定义的成功和失败自定义消息\n使用：在需要使用的def放上  @logger(success=xxx,fail=xxx)\n如果不定义消息，则默认成功为--Success，失败为--Fail\n使用装饰器后可不用带异常错误处理\n装饰器不能用在类class上，可能出现报错而日志显示成功的情况\n\n增设全局变量debug_file，当debug_file传入文件路径时(包含文件本身及格式)，系统将判断函数执行正确性，失败则将报错写入路径中的文件\n函数运行成功将不会保存并写入文件\ndebug_file保存内容：运行事件，函数名称，文件路径，报错信息\n！！！！！debug_file的保存文件方式，目前仅支持 @logger() 装饰器形式的启用！！！！！\n\n## v1.0.0\nLogger改为元组形式，可输入不限定参数\n装饰器增加Debug模式，from luckylog import luckylog\nluckylog.Debug = True   可开启debug模式，默认关闭状态\nDebug模式开启，使用装饰器，成功增加返回输入参数，失败增加返回参数和异常报错信息   Arguments/Exception\n错误日志增加输入参数\n\n## v1.0.3\n1、修改书写错误worning改成warning，以前写法仍旧可用\n2、修改书写错误erro改成error，方法名替换\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "luckylog",
    "package_url": "https://pypi.org/project/luckylog/",
    "platform": null,
    "project_url": "https://pypi.org/project/luckylog/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/luckylog/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "自定义日志模式",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14411159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6570cd885031406c92aad6a5a4f8370163a87796bf2c2e4244f2db0d8a974e4",
        "md5": "2ff0ed5786343c9a430dfe9c46d4e53e",
        "sha256": "d3cac6e5e2b1e8fa7c3f8d4d92ed4b2975b2174e958e7af1aef8018315267465"
      },
      "downloads": -1,
      "filename": "luckylog-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ff0ed5786343c9a430dfe9c46d4e53e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6311,
      "upload_time": "2022-03-31T12:10:51",
      "upload_time_iso_8601": "2022-03-31T12:10:51.565671Z",
      "url": "https://files.pythonhosted.org/packages/f6/57/0cd885031406c92aad6a5a4f8370163a87796bf2c2e4244f2db0d8a974e4/luckylog-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5bb1cfd6059ef9dfd1ef432246ca30d30056564e7e6ffd7135b103eea47b8587",
        "md5": "99ac5ea7cb59e7ba4d76a1443e81fa3d",
        "sha256": "121f7ffd70ba3e1492ffb6a0cabc8d4e904ebb5b547c15ce7ca9609d54c1d546"
      },
      "downloads": -1,
      "filename": "luckylog-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "99ac5ea7cb59e7ba4d76a1443e81fa3d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4940,
      "upload_time": "2022-03-31T12:10:53",
      "upload_time_iso_8601": "2022-03-31T12:10:53.686505Z",
      "url": "https://files.pythonhosted.org/packages/5b/b1/cfd6059ef9dfd1ef432246ca30d30056564e7e6ffd7135b103eea47b8587/luckylog-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}