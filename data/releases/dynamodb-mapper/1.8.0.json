{
  "info": {
    "author": "Jean-Tiare Le Bigot",
    "author_email": "jtlebigot@socialludia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Database :: Front-Ends",
      "Topic :: Internet"
    ],
    "description": "Dynamodb-mapper -- a DynamoDB object mapper, based on boto.\r\n\r\nPresentation\r\n============\r\n\r\n`DynamoDB <http://aws.amazon.com/dynamodb/>`_ is a minimalistic NoSQL engine\r\nprovided by Amazon as a part of their AWS product.\r\n\r\n**DynamoDB** allows you to stores documents composed of unicode strings or numbers\r\nas well as sets of unicode strings and numbers. Each tables must define a hash\r\nkey and may define a range key. All other fields are optional.\r\n\r\n**Dynamodb-mapper** brings a tiny abstraction layer over DynamoDB to overcome some\r\nof the limitations with no performance compromise. It is highly inspired by the\r\nmature `MoongoKit project <http://namlook.github.com/mongokit>`_\r\n\r\n- **Full documentation**: http://dynamodb-mapper.readthedocs.org/en/latest/\r\n- **Report bugs**: https://bitbucket.org/Ludia/dynamodb-mapper/issues\r\n- **Download**: http://pypi.python.org/pypi/dynamodb-mapper\r\n\r\nRequirements\r\n============\r\n\r\n - Boto = 2.6.0\r\n - AWS account\r\n\r\nHighlights\r\n==========\r\n\r\n- Python <--> DynamoDB type mapping\r\n- Dramatic performance improvements (new in 1.8.0)\r\n- Deep schema definition and validation with ``Onctuous`` (new in 1.8.0)\r\n- Multi-target transaction (new in 1.6.0)\r\n- Sub-transactions (new in 1.6.2)\r\n- Migration engine (new in 1.7.0)\r\n- Smart conflict detection (new in 1.7.0)\r\n- Full low-level chunking abstraction for ``scan``, ``query`` and ``get_batch``\r\n- Default values\r\n- Auto-inc hash_key\r\n- Framework agnostic\r\n\r\n\r\nExample usage\r\n=============\r\n\r\nWe assume you've correctly set your Boto credentials or use ``ddbmock``.\r\n\r\nQuick install\r\n-------------\r\n\r\n::\r\n\r\n    $ pip install dynamodb-mapper\r\n\r\nIf you have not yet configured Boto, you may simply\r\n\r\n::\r\n\r\n    $ export AWS_ACCESS_KEY_ID=<your id key here>\r\n    $ export AWS_SECRET_ACCESS_KEY=<your secret key here>\r\n\r\n\r\nFirst Model\r\n-----------\r\n\r\n::\r\n\r\n    from dynamodb_mapper.model import DynamoDBModel\r\n\r\n\r\n    class DoomMap(DynamoDBModel):\r\n        __table__ = u\"doom_map\"\r\n        __hash_key__ = u\"episode\"\r\n        __range_key__ = u\"map\"\r\n        __schema__ = {\r\n            u\"episode\": int,\r\n            u\"map\": int,\r\n            u\"name\": unicode,\r\n            u\"cheats\": set,\r\n        }\r\n        __defaults__ = {\r\n            \"cheats\": set([u\"Konami\"]),\r\n        }\r\n\r\n\r\nInitial Table creation\r\n----------------------\r\n\r\n::\r\n\r\n    from dynamodb_mapper.model import ConnectionBorg\r\n\r\n    conn = ConnectionBorg()\r\n    conn.create_table(DoomMap, 10, 10, wait_for_active=True)\r\n\r\n\r\nModel Usage\r\n-----------\r\n\r\n::\r\n\r\n    e1m1 = DoomMap()\r\n    e1m1.episode = 1\r\n    e1m1.map = 1\r\n    e1m1.name = u\"Hangar\"\r\n    e1m1.cheats = set([u\"idkfa\", u\"iddqd\", u\"idclip\"])\r\n    e1m1.save()\r\n\r\n\r\n    # Later on, retrieve that same object from the DB...\r\n    e1m1 = DoomMap.get(1, 1)\r\n\r\n    # query all maps of episode 1\r\n    e1_maps = DoomMap.query(hash_key=1)\r\n\r\n    # query all maps of episode 1 with 'map' hash_key > 5\r\n    from boto.dynamodb.condition import GT\r\n    e1_maps_after_5 = DoomMap.query(\r\n        hash_key=1,\r\n        range_key_condition=GT(5))\r\n\r\nContribute\r\n==========\r\n\r\nWant to contribute, report a but of request a feature ? The development goes on\r\nat Ludia's BitBucket account:\r\n\r\nDynamodb-mapper\r\n---------------\r\n\r\n- **Report bugs**: https://bitbucket.org/Ludia/dynamodb-mapper/issues\r\n- **Fork the code**: https://bitbucket.org/Ludia/dynamodb-mapper/overview\r\n- **Download**: http://pypi.python.org/pypi/dynamodb-mapper\r\n\r\nOnctuous\r\n--------\r\n\r\n- **Full documentation**: https://onctuous.readthedocs.org/en/latest\r\n- **Report bugs**: https://bitbucket.org/Ludia/onctuous/issues\r\n- **Download**: http://pypi.python.org/pypi/onctuous",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://dynamodb-mapper.readthedocs.org/en/latest/",
    "keywords": "",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamodb-mapper",
    "package_url": "https://pypi.org/project/dynamodb-mapper/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dynamodb-mapper/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://dynamodb-mapper.readthedocs.org/en/latest/"
    },
    "release_url": "https://pypi.org/project/dynamodb-mapper/1.8.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Object mapper for Amazon DynamoDB",
    "version": "1.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 791468,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4331d28b04ff236292921d4efe475ec164ab89d23a5312e286c3bf0bce347873",
        "md5": "f0042ae44979e4a403031a02ab2be47c",
        "sha256": "47564a745b51c7000f31e433bcb0b15b4801e53f6820f132ee56970fda1652c6"
      },
      "downloads": -1,
      "filename": "dynamodb-mapper-1.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0042ae44979e4a403031a02ab2be47c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25989,
      "upload_time": "2012-11-22T16:11:01",
      "upload_time_iso_8601": "2012-11-22T16:11:01.702044Z",
      "url": "https://files.pythonhosted.org/packages/43/31/d28b04ff236292921d4efe475ec164ab89d23a5312e286c3bf0bce347873/dynamodb-mapper-1.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}