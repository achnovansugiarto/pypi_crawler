{
  "info": {
    "author": "Kenneth (Kip) Hart",
    "author_email": "kiphart91@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "MicroStructPy - Microstructure Mesh Generation in Python\n========================================================\n\n|s-ci|\n|s-license|\n|s-doi|\n\n|l-github| `Repository <https://github.com/kip-hart/MicroStructPy>`_\n|l-rtd| `Documentation <https://docs.microstructpy.org>`_\n|l-pypi| `PyPI <https://pypi.org/project/microstructpy/>`_\n\n.. end-badges\n\nMicroStructPy is a microstructure mesh generator written in Python.\nFeatures of MicroStructPy include:\n\n* 2D and 3D microstructures\n* Grain size, shape, orientation, and position control\n* Polycrystals, amorphous phases, and voids\n* Mesh verification\n* Visualizations\n* Output to common file formats\n* Customizable workflow\n\n\n.. image:: https://docs.microstructpy.org/en/latest/_images/banner.png\n    :alt: Banner image showing the three steps for creating microstructure.\n\n*The three steps to creating a microstructure are:\n1) seed the domain with particles,\n2) create a Voronoi power diagram, and\n3) convert the diagram into an unstructured mesh.*\n\nDownload & Installation\n-----------------------\n\nTo install MicroStructPy, download it from PyPI using::\n\n    pip install microstructpy\n\nIf there is an error with the install, try ``pip install pybind11`` first,\nthen install MicroStructPy.\n\n\nMicroStructPy can also be installed from source::\n\n    git clone https://github.com/kip-hart/MicroStructPy.git\n    pip install -e MicroStructPy/\n\nInstalling MicroStructPy creates the command line program ``microstructpy`` and\nthe Python package ``microstructpy``.\nThe command line program executes a standard workflow on XML input files,\nwhile the package exposes classes and functions for a customized workflow.\n\n\nRun a Demo\n----------\n\nMicroStructPy includes several demo and example files to help new users get\nstarted with the program.\nA full list of examples is available online at\nhttps://docs.microstructpy.org/examples.html.\n\nHere is minimal example input file:\n\n.. code-block:: XML\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <input>\n        <material>\n            <shape> circle </shape>\n            <size> 0.15 </size>\n        </material>\n\n        <domain>\n            <shape> square </shape>\n        </domain>\n    </input>\n\nThis example can be run from the command line by excuting::\n\n    microstructpy --demo=minimal.xml\n\nAlternatively, you can copy the text to a file such as\n``my_input.xml`` and run ``microstructpy my_input.xml``.\n\nThe same output can be obtained from using the package in a script:\n\n.. code-block:: python\n\n    import matplotlib.pyplot as plt\n    import microstructpy as msp\n\n\n    phase = {'shape': 'circle', 'size': 0.15}\n    domain = msp.geometry.Square()\n\n    # Unpositioned list of seeds\n    seeds = msp.seeding.SeedList.from_info(phase, domain.area)\n\n    # Position seeds in domain\n    seeds.position(domain)\n\n    # Create polygonal mesh\n    polygon_mesh = msp.meshing.PolyMesh.from_seeds(seeds, domain)\n\n    # Create triangular mesh\n    triangle_mesh = msp.meshing.TriMesh.from_polymesh(polygon_mesh)\n\n    # Plot outputs\n    for output in [seeds, polygon_mesh, triangle_mesh]:\n        plt.figure()\n        output.plot(edgecolor='k')\n        plt.axis('image')\n        plt.axis([-0.5, 0.5, -0.5, 0.5])\n        plt.show()\n\nDocumentation\n-------------\n\nMicroStructPy documentation is available online at\nhttps://docs.microstructpy.org.\n\nTo build a local copy of the documentation, execute the following from the\ntop-level directory of the MicroStructPy repository::\n\n    pip install tox\n    tox -e docs\n\nOnce built, the documentation will be in ``docs/build/``.\n\n.. begin-publications\n\nPublications\n------------\n\nIf you use MicroStructPy in you work, please consider including this citation\nin your bibliography:\n\nK. A. Hart and J. J. Rimoli, Generation of statistically representative\nmicrostructures with direct grain geomety control,\n*Computer Methods in Applied Mechanics and Engineering*,\n370 (2020), pp. 113242.\n(`BibTeX <https://github.com/kip-hart/MicroStructPy/raw/master/docs/publications/cmame2020.bib>`_)\n(`DOI <https://doi.org/10.1016/j.cma.2020.113242>`_)\n\n.. end-publications\n\nContributing\n------------\n\nContributions to the project are welcome.\nPlease use the GitHub pull request and issue submission features.\nSee the `Contributing Guidelines`_ for more details.\n\n\nLicense and Attributions\n------------------------\n\nMicroStructPy is open source and freely available.\nCopyright for MicroStructPy is held by Georgia Tech Research Corporation.\nMicroStructPy is a major part of Kenneth (Kip) Hart's doctoral thesis,\nadvised by Prof. Julian Rimoli.\n\n\n.. LINKS\n\n.. _`Contributing Guidelines`: https://github.com/kip-hart/MicroStructPy/blob/dev/.github/CONTRIBUTING.md\n\n.. external-images\n\n.. |l-github| image:: https://api.iconify.design/octicon:mark-github.svg?color=black0&inline=true&height=16\n    :alt: GitHub\n\n.. |l-rtd| image:: https://api.iconify.design/simple-icons:readthedocs.svg?color=black&inline=true&height=16\n    :alt: ReadTheDocs\n\n.. |l-pypi| image:: https://api.iconify.design/mdi:cube-outline.svg?color=black&inline=true&height=16\n    :alt: PyPI\n\n\n.. SHIELDS\n\n.. |s-ci| image:: https://github.com/kip-hart/MicroStructPy/workflows/CI/badge.svg\n    :target: https://github.com/kip-hart/MicroStructPy/actions\n    :alt: Continuous Integration\n\n.. |s-license| image:: https://img.shields.io/github/license/kip-hart/MicroStructPy\n    :target: https://github.com/kip-hart/MicroStructPy/blob/master/LICENSE.rst\n    :alt: License\n\n.. |s-doi| image:: https://img.shields.io/badge/DOI-10.1016%2Fj.cma.2020.113242-blue\n   :target: https://doi.org/10.1016/j.cma.2020.113242\n   :alt: DOI\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kip-hart/MicroStructPy",
    "keywords": "microstructure,micromechanics,finite element,FEM,FEA,mesh,polycrystal,tessellation,Laguerre tessellation,multi-sphere",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microstructpy",
    "package_url": "https://pypi.org/project/microstructpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/microstructpy/",
    "project_urls": {
      "Documentation": "https://docs.microstructpy.org",
      "Homepage": "https://github.com/kip-hart/MicroStructPy"
    },
    "release_url": "https://pypi.org/project/microstructpy/1.3.2/",
    "requires_dist": [
      "aabbtree (>=2.5.0)",
      "matplotlib (>=3.0.0)",
      "pybind11",
      "lsq-ellipse",
      "meshpy (>=2018.2.1)",
      "numpy (>=1.13.0)",
      "pyquaternion",
      "pyvoro-mmalahe",
      "scipy",
      "xmltodict"
    ],
    "requires_python": "",
    "summary": "Microstructure modeling, mesh generation, analysis, and visualization.",
    "version": "1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14971044,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf29bb23a7b65c7981d97bea96334bf36819eddca16ef80f790a00484ffa0dbc",
        "md5": "2cbe6be43b229e603da46c2c080d7a2f",
        "sha256": "3a03b2a6d638875f8fd49f97f113fccacbd8b122e5a8171cb046c6d963275023"
      },
      "downloads": -1,
      "filename": "microstructpy-1.3.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cbe6be43b229e603da46c2c080d7a2f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 119745,
      "upload_time": "2020-07-11T17:36:00",
      "upload_time_iso_8601": "2020-07-11T17:36:00.224901Z",
      "url": "https://files.pythonhosted.org/packages/bf/29/bb23a7b65c7981d97bea96334bf36819eddca16ef80f790a00484ffa0dbc/microstructpy-1.3.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a16d59d024fcd97d6a91ed2d241acb1cdd063b4ca9bd0a08d1800903fef62942",
        "md5": "236e0d9b9d0142fed2f048f534b1b560",
        "sha256": "458cebd4416491194478284eba783ff19c51ae7555249e4889d1fc93703d4c29"
      },
      "downloads": -1,
      "filename": "microstructpy-1.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "236e0d9b9d0142fed2f048f534b1b560",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1179011,
      "upload_time": "2020-07-11T17:36:01",
      "upload_time_iso_8601": "2020-07-11T17:36:01.877190Z",
      "url": "https://files.pythonhosted.org/packages/a1/6d/59d024fcd97d6a91ed2d241acb1cdd063b4ca9bd0a08d1800903fef62942/microstructpy-1.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}