{
  "info": {
    "author": "Stephen McDonald",
    "author_email": "stephen.mc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://secure.travis-ci.org/stephenmcd/mezzanine.png?branch=master\n   :target: http://travis-ci.org/stephenmcd/mezzanine\n\nCreated by `Stephen McDonald <http://twitter.com/stephen_mcd>`_\n\n========\nOverview\n========\n\nMezzanine is a powerful, consistent, and flexible content management\nplatform. Built using the `Django`_ framework, Mezzanine provides a\nsimple yet highly extensible architecture that encourages diving in\nand hacking on the code. Mezzanine is `BSD licensed`_ and supported by\na diverse and active community.\n\nIn some ways, Mezzanine resembles tools such as `Wordpress`_,\nproviding an intuitive interface for managing pages, blog posts, form\ndata, store products, and other types of content. But Mezzanine is\nalso different. Unlike many other platforms that make extensive use of\nmodules or reusable applications, Mezzanine provides most of its\nfunctionality by default. This approach yields a more integrated and\nefficient platform.\n\nVisit the `Mezzanine project page`_ to see some of the `great sites\npeople have built using Mezzanine`_.\n\nFeatures\n========\n\nIn addition to the usual features provided by Django such as MVC\narchitecture, ORM, templating, caching and an automatic admin\ninterface, Mezzanine provides the following:\n\n* Hierarchical page navigation\n* Save as draft and preview on site\n* Scheduled publishing\n* Drag-and-drop page ordering\n* WYSIWYG editing\n* `In-line page editing`_\n* Drag-and-drop HTML5 forms builder with CSV export\n* SEO friendly URLs and meta data\n* Ecommerce / Shopping cart module (`Cartridge`_)\n* Configurable `dashboard`_ widgets\n* Blog engine\n* Tagging\n* `Free Themes`_, and a `Premium Themes`_ Marketplace\n* User accounts and profiles with email verification\n* Translated to over 35 languages\n* Sharing via Facebook or Twitter\n* `Multi-lingual sites`_\n* `Custom templates`_ per page or blog post\n* `Twitter Bootstrap`_ integration\n* API for `custom content types`_\n* `Search engine and API`_\n* Seamless integration with third-party Django apps\n* Multi-device detection and template handling\n* One step migration from other blogging engines\n* Automated production provisioning and deployments\n* `Disqus`_ integration, or built-in threaded comments\n* `Gravatar`_ integration\n* `Google Analytics`_ integration\n* `Twitter`_ feed integration\n* `bit.ly`_ integration\n* `Akismet`_ spam filtering\n* Built-in `test suite`_\n* `JVM`_ compatible (via `Jython`_)\n\nThe Mezzanine admin dashboard:\n\n.. image:: http://mezzanine.jupo.org/docs/_images/dashboard.png\n\n\nSupport\n=======\n\nTo **report a security issue**, please send an email privately to\n`core-team@mezzaninecms.com`_. This gives us a chance to fix the issue\nand create an official release prior to the issue being made public.\n\nFor **all other Mezzanine support**, the primary channel is the\n`mezzanine-users`_ mailing list. Questions, comments, issues, feature\nrequests, and all other related discussions should take place here.\n\nIf you're **certain** you've come across a bug, then please use the\n`GitHub issue tracker`_, however it's crucial that enough information\nis provided to reproduce the bug, ideally with a small code sample repo\nwe can simply fork, run, and see the issue with. Other useful\ninformation includes things such as the Python stack trace generated by\nerror pages, as well as other aspects of the development environment\nused, such as operating system, database, and Python version. If\n**you're not sure you've found a reproducible bug**, then please try\nthe mailing list first.\n\nFinally, feel free to drop by the `#mezzanine IRC channel`_ on\n`Freenode`_, for a chat! Lastly, communications in all Mezzanine spaces\nare expected to conform to the `Django Code of Conduct`_.\n\n\nContributing\n============\n\nMezzanine is an open source project managed using both the Git and\nMercurial version control systems. These repositories are hosted on\nboth `GitHub`_ and `Bitbucket`_ respectively, so contributing is as\neasy as forking the project on either of these sites and committing\nback your enhancements.\n\nPlease note the following guidelines for contributing:\n\n* Before doing anything, discuss it on the `mezzanine-users`_ mailing\n  list first.\n* Contributed code must be written in the existing style. For Python\n  (and to a decent extent, JavaScript as well), this is as simple as\n  following the `Django coding style`_ and (most importantly)\n  `PEP 8`_. Front-end CSS should adhere to the\n  `Bootstrap CSS guidelines`_.\n* Contributions must be available on a separately named branch\n  based on the latest version of the main branch.\n* Run the tests before committing your changes. If your changes\n  cause the tests to break, they won't be accepted.\n* If you are adding new functionality, you must include basic tests\n  and documentation.\n\n\nDonating\n========\n\nIf you would like to make a donation to continue development of\nMezzanine, you can do so via the `Mezzanine Project`_ website.\n\n\nQuotes\n======\n\n* \"I'm enjoying working with Mezzanine, it's good work\"\n  - `Van Lindberg`_, `Python Software Foundation`_ chairman\n* \"Mezzanine looks like it may be Django's killer app\"\n  - `Antonio Rodriguez`_, ex CTO of `Hewlett Packard`_, founder\n  of `Tabblo`_\n* \"Mezzanine looks pretty interesting, tempting to get me off\n  Wordpress\" - `Jesse Noller`_, Python core contributor,\n  `Python Software Foundation`_ board member\n* \"I think I'm your newest fan. Love these frameworks\"\n  - `Emile Petrone`_, integrations engineer at `Urban Airship`_\n* \"Mezzanine is amazing\" - `Audrey Roy`_, founder of `PyLadies`_\n  and `Django Packages`_\n* \"Mezzanine convinced me to switch from the Ruby world over\n  to Python\" - `Michael Delaney`_, developer\n* \"Like Linux and Python, Mezzanine just feels right\" - `Phil Hughes`_,\n  Linux For Dummies author, `The Linux Journal`_ columnist\n* \"Impressed with Mezzanine so far\" - `Brad Montgomery`_, founder\n  of `Work For Pie`_\n* \"From the moment I installed Mezzanine, I have been delighted, both\n  with the initial experience and the community involved in its\n  development\" - `John Campbell`_, founder of `Head3 Interactive`_\n* \"You need to check out the open source project Mezzanine. In one\n  word: Elegant\" - `Nick Hagianis`_, developer\n\n\n.. _`Django`: http://djangoproject.com/\n.. _`Django Code of Conduct`: https://www.djangoproject.com/conduct/\n.. _`Wordpress`: http://wordpress.org/\n.. _`BSD licensed`: http://www.linfo.org/bsdlicense.html\n.. _`great sites people have built using Mezzanine`: http://mezzanine.jupo.org/sites/\n.. _`Mezzanine project page`: http://mezzanine.jupo.org\n.. _`In-line page editing`: http://mezzanine.jupo.org/docs/inline-editing.html\n.. _`custom content types`: http://mezzanine.jupo.org/docs/content-architecture.html#creating-custom-content-types\n.. _`Cartridge`: http://cartridge.jupo.org/\n.. _`Search engine and API`: http://mezzanine.jupo.org/docs/search-engine.html\n.. _`dashboard`: http://mezzanine.jupo.org/docs/admin-customization.html#dashboard\n.. _`Free Themes`: https://github.com/thecodinghouse/mezzanine-themes\n.. _`Premium Themes`: http://mezzathe.me/\n.. _`@abhinavsohani`: https://twitter.com/abhinavsohani\n.. _`@joshcartme`: https://twitter.com/joshcartme\n.. _`Custom templates`: http://mezzanine.jupo.org/docs/content-architecture.html#page-templates\n.. _`test suite`: http://mezzanine.jupo.org/docs/packages.html#module-mezzanine.core.tests\n.. _`Multi-lingual sites`: http://mezzanine.jupo.org/docs/multi-lingual-sites.html\n.. _`JVM`: http://en.wikipedia.org/wiki/Java_virtual_machine\n.. _`Jython`: http://www.jython.org/\n.. _`Twitter Bootstrap`: http://getbootstrap.com/\n.. _`Disqus`: http://disqus.com/\n.. _`Gravatar`: http://gravatar.com/\n.. _`Google Analytics`: http://www.google.com/analytics/\n.. _`Twitter`: http://twitter.com/\n.. _`bit.ly`: http://bit.ly/\n.. _`Akismet`: http://akismet.com/\n.. _`GitHub`: http://github.com/stephenmcd/mezzanine/\n.. _`Bitbucket`: http://bitbucket.org/stephenmcd/mezzanine/\n.. _`mezzanine-users`: http://groups.google.com/group/mezzanine-users/topics\n.. _`core-team@mezzaninecms.com`: mailto:core-team@mezzaninecms.com?subject=Mezzanine+Security+Issue\n.. _`GitHub issue tracker`: http://github.com/stephenmcd/mezzanine/issues\n.. _`#mezzanine IRC channel`: irc://irc.freenode.net/mezzanine\n.. _`Freenode`: http://freenode.net\n.. _`Django coding style`: https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/\n.. _`PEP 8`: http://www.python.org/dev/peps/pep-0008/\n.. _`Bootstrap CSS guidelines`: https://github.com/twbs/bootstrap/blob/master/CONTRIBUTING.md#css\n.. _`Mezzanine Project`: http://mezzanine.jupo.org\n\n.. _`Python Software Foundation`: http://www.python.org/psf/\n.. _`Urban Airship`: http://urbanairship.com/\n.. _`Django Packages`: http://djangopackages.com/\n.. _`Hewlett Packard`: http://www.hp.com/\n.. _`Tabblo`: http://www.tabblo.com/\n.. _`The Linux Journal`: http://www.linuxjournal.com\n.. _`Work For Pie`: http://workforpie.com/\n.. _`Van Lindberg`: http://www.lindbergd.info/\n.. _`Antonio Rodriguez`: http://an.ton.io/\n.. _`Jesse Noller`: http://jessenoller.com/\n.. _`Emile Petrone`: https://twitter.com/emilepetrone\n.. _`Audrey Roy`: http://cartwheelweb.com/\n.. _`Michael Delaney`: http://github.com/fusepilot/\n.. _`John Campbell`: http://head3.com/\n.. _`Phil Hughes`: http://www.linuxjournal.com/blogs/phil-hughes\n.. _`Nick Hagianis`: http://hagianis.com\n.. _`Brad Montgomery`: http://blog.bradmontgomery.net\n.. _`Head3 Interactive`: http://head3.com\n.. _`PyLadies`: http://www.pyladies.com",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mezzanine.jupo.org/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Mezzanine",
    "package_url": "https://pypi.org/project/Mezzanine/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Mezzanine/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://mezzanine.jupo.org/"
    },
    "release_url": "https://pypi.org/project/Mezzanine/4.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "An open source content management platform built using the Django framework.",
    "version": "4.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13794085,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2f97bcfe730a6a4ab407eb8a283297968dc6743f028dfbc6d5ee707ea7e5521",
        "md5": "e28046cb7818f854f95d105665e604f0",
        "sha256": "5f8f19c003d0ae02ec32c7dfc9f16ba94dfe237dbfa5b4f4c60285566676b68f"
      },
      "downloads": -1,
      "filename": "Mezzanine-4.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e28046cb7818f854f95d105665e604f0",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 6062868,
      "upload_time": "2016-09-19T01:48:21",
      "upload_time_iso_8601": "2016-09-19T01:48:21.176751Z",
      "url": "https://files.pythonhosted.org/packages/f2/f9/7bcfe730a6a4ab407eb8a283297968dc6743f028dfbc6d5ee707ea7e5521/Mezzanine-4.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ddf292c23330db29774d9a0fd82a0d1ccb5bdc65133ef3e72d48073a613d638",
        "md5": "850f6a0cc614066efd1e9e48126b9c34",
        "sha256": "bc2cf3d6cca59dd1d0e04461490e2749d336faa7deaf4647b3e4139fcc93a76b"
      },
      "downloads": -1,
      "filename": "Mezzanine-4.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "850f6a0cc614066efd1e9e48126b9c34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6229169,
      "upload_time": "2016-09-19T01:47:57",
      "upload_time_iso_8601": "2016-09-19T01:47:57.628921Z",
      "url": "https://files.pythonhosted.org/packages/3d/df/292c23330db29774d9a0fd82a0d1ccb5bdc65133ef3e72d48073a613d638/Mezzanine-4.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2020-19002"
      ],
      "details": "Cross Site Scripting (XSS) in Mezzanine v4.3.1 allows remote attackers to execute arbitrary code via the 'Description' field of the component 'admin/blog/blogpost/add/'. This issue is different than CVE-2018-16632.",
      "fixed_in": [],
      "id": "PYSEC-2021-343",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-343",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}