{
  "info": {
    "author": "Stephen McDonald",
    "author_email": "stephen.mc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://secure.travis-ci.org/stephenmcd/mezzanine.png?branch=master\n\n========\nOverview\n========\n\nMezzanine is a content management platform built using the `Django`_\nframework. It is `BSD licensed`_ and designed to provide both a\nconsistent interface for managing content, and a simple, extensible\narchitecture that makes diving in and hacking on the code as easy as\npossible.\n\nMezzanine resembles tools like `Wordpress`_, with an intuitive\ninterface for managing pages, blog posts, form data, store products,\nor any other type of content you can imagine. Mezzanine takes a different\napproach from other Django applications in this space like `Pinax`_ or\n`Mingus`_ that glue together a lot of reusable apps, instead opting to\nprovide most of its functionality included with the project by default.\n\nVisit the `Mezzanine project page`_ to see some of the great sites people\nhave built using Mezzanine.\n\nFeatures\n========\n\nOn top of all the usual features provided by Django such as MVC architecture,\nORM, templating, caching and the automatic admin interface, Mezzanine\nprovides the following features:\n\n  * Hierarchical page navigation\n  * Save as draft and preview on site\n  * Scheduled publishing\n  * Drag-n-drop page ordering\n  * WYSIWYG editing\n  * `In-line page editing`_\n  * Drag-n-drop HTML5 forms builder with CSV export\n  * `Custom templates`_ per page or blog post\n  * `Twitter Bootstrap`_ integration\n  * API for `custom content types`_\n  * SEO friendly URLs and meta data\n  * `Search engine and API`_\n  * Configurable `dashboard`_ widgets\n  * Multi-device detection and template handling\n  * Shopping cart module (`Cartridge`_)\n  * Blogging engine\n  * Tagging\n  * One step migration from other blogging engines\n  * `Disqus`_ integration or built-in threaded comments\n  * `Gravatar`_ integration\n  * `Google Analytics`_ integration\n  * `Twitter`_ feed integration\n  * `bit.ly`_ integration\n  * Sharing via Facebook or Twitter\n  * Built-in `test suite`_\n\nThe Mezzanine admin dashboard:\n\n.. image:: http://github.com/stephenmcd/mezzanine/raw/master/docs/img/dashboard.png\n\nDependencies\n============\n\nMezzanine has no explicit dependencies apart from a standard Django\nenvironment using:\n\n  * `Python`_ 2.5 ... 2.7\n  * `Django`_ 1.3.x\n\nMezzanine is designed however to be used most effectively in conjunction\nwith the following libraries:\n\n  * `Python Imaging Library`_ (PIL)\n  * `grappelli-safe`_ (Mezzanine's fork of Grappelli)\n  * `filebrowser-safe`_ (Mezzanine's fork of FileBrowser)\n  * `South`_\n  * `pyflakes`_ and `pep8`_ (required for running the test suite)\n\nBrowser Support\n===============\n\nMezzanine's admin interface works with all modern browsers.\nInternet Explorer 7 and earlier are generally unsupported.\n\nInstallation\n============\n\nThe easiest method is to install directly from pypi using `pip`_ or\n`setuptools`_ by running the respective command below, which will also\nattempt to install the dependencies mentioned above::\n\n    $ pip install -U mezzanine\n\nor::\n\n    $ easy_install -U mezzanine\n\nOtherwise you can download Mezzanine and install it directly from source::\n\n    $ python setup.py install\n\nOnce installed, the command ``mezzanine-project`` should be available which\ncan be used for creating a new Mezzanine project in a similar fashion to\n``django-admin.py``::\n\n    $ mezzanine-project project_name\n\nYou can then run your project with the usual Django steps::\n\n    $ cd project_name\n    $ python manage.py createdb --noinput\n    $ python manage.py runserver\n\n.. note::\n\n    The ``createdb`` is a shortcut for using Django's ``syncdb`` command and\n    setting the initial migration state for `South`_. You can alternatively\n    use ``syncdb`` and ``migrate`` if preferred.\n\nYou should then be able to browse to http://127.0.0.1:8000/admin/ and log\nin using the default account (``username: admin, password: default``). If\nyou'd like to specify a different username and password during set up, simply\nexclude the ``--noinput`` option included above when running ``createdb``.\n\nFor information on how to add Mezzanine to an existing Django project,\nsee the FAQs section of the documentation.\n\nContributing\n============\n\nMezzanine is an open source project that is managed using both Git and\nMercurial version control systems. These repositories are hosted on both\n`GitHub`_ and `Bitbucket`_ respectively, so contributing is as easy as\nforking the project on either of these sites and committing back your\nenhancements.\n\nPlease note the following points around contributing:\n\n  * Contributed code must be written in the existing style. This is as simple as following the `Django coding style`_ and most importantly `PEP 8`_.\n  * Contributions must be available on a separately named branch that is based on the latest version of the main branch.\n  * Run the tests before committing your changes. If your changes causes the tests to break, they won't be accepted.\n  * If you're adding new functionality, you must include basic tests and documentation.\n\nThird-party Modules\n===================\n\nThe following modules have been developed outside of Mezzanine. If you\nhave developed a module to integrate with Mezzanine and would like it\nlisted here, send an email to the `mezzanine-users`_ mailing list.\n\n  * `mezzanine-html5boilerplate`_ - Integrates the `html5boilerplate project`_ into Mezzanine.\n  * `mezzanine-mdown`_ - Adds `Markdown`_ support to Mezzanine's rich text editor.\n  * `mezzanine-openshift`_ Setup for running Mezzanine on `Redhat's OpenShift`_ cloud platform.\n  * `mezzanine-stackato`_ Setup for running Mezzanine on `ActiveState's Stackato`_ cloud platform.\n\nDonating\n========\n\nIf you would like to make a donation to continue development of the\nproject, you can do so via the `Mezzanine Project`_ website.\n\nSupport\n=======\n\nFor general questions or comments, please join the\n`mezzanine-users`_ mailing list. To report a bug or other type of issue,\nplease use the `GitHub issue tracker`_.\n\nSites Using Mezzanine\n=====================\n\n  * `Citrus Agency <http://citrus.com.au>`_\n  * `Mezzanine Project <http://mezzanine.jupo.org>`_\n  * `Nick Hagianis <http://hagianis.com>`_\n  * `Thomas Johnson <http://tomfmason.net>`_\n  * `Central Mosque Wembley <http://wembley-mosque.co.uk>`_\n  * `Ovarian Cancer Research Foundation <http://ocrf.com.au>`_\n  * `The Source Procurement <http://thesource.com.au>`_\n  * `Imageinary <http://imageinary.com>`_\n  * `Brad Montgomery <http://blog.bradmontgomery.net>`_\n  * `Jashua Cloutier <http://www.senexcanis.com>`_\n  * `Alpha & Omega Contractors <http://alphaomegacontractors.com>`_\n  * `Equity Advance <http://equityadvance.com.au>`_\n  * `Head3 Interactive <http://head3.com>`_\n  * `PyLadies <http://www.pyladies.com>`_\n  * `Ripe Maternity <http://www.ripematernity.com>`_\n  * `Cotton On <http://shop.cottonon.com>`_\n  * `List G Barristers <http://www.listgbarristers.com.au>`_\n  * `Tri-Cities Flower Farm <http://www.tricitiesflowerfarm.com>`_\n  * `daon.ru <http://daon.ru>`_\n  * `autoindeks.ru <http://autoindeks.ru>`_\n  * `immiau.ru <http://immiau.ru>`_\n  * `ARA Consultants <http://www.araconsultants.com.au>`_\n  * `Boîte à Z'images <http://boiteazimages.com>`_\n  * `The Melbourne Cup <http://www.melbournecup.com>`_\n  * `Diablo News <http://www.diablo-news.com>`_\n  * `Goldman Travel <http://www.goldmantravel.com.au>`_\n  * `IJC Digital <http://ijcdigital.com>`_\n  * `Coopers <http://store.coopers.com.au>`_\n  * `Joe Julian <http://joejulian.name>`_\n  * `Sheer Ethic <http://sheerethic.com>`_\n  * `Salt Lake Magazine <http://saltlakemagazine.com>`_\n  * `Boca Raton Magazine <http://bocamag.com>`_\n  * `Photog.me <http://www.photog.me>`_\n  * `Elephant Juice Soup <http://www.elephantjuicesoup.com>`_\n  * `National Positions <http://www.nationalpositions.co.uk>`_\n  * `Like Humans Do <http://www.likehumansdo.com>`_\n\nQuotes\n======\n\n  * \"I'm enjoying working with Mezzanine, it's good work\"\n    - `Van Lindberg`_, engineer, IP lawyer for the `Python Software Foundation`_\n  * \"Mezzanine looks like it may be Django's killer app\"\n    - `Antonio Rodriguez`_, ex CTO of `Hewlett Packard`_, founder of `Tabblo`_\n  * \"Mezzanine looks pretty interesting, tempting to get me off Wordpress\"\n    - `Jesse Noller`_, Python core contributor, `Python Software Foundation`_ board member\n  * \"Mezzanine is amazing\"\n    - `Audrey Roy`_, founder of `PyLadies`_ and `Django Packages`_\n  * \"Mezzanine convinced me to switch from the Ruby world over to Python\"\n    - `Michael Delaney`_, developer\n  * \"Impressed with Mezzanine so far\"\n    - `Brad Montgomery`_, founder of `Work For Pie`_\n  * \"From the moment I installed Mezzanine, I have been delighted, both with the initial experience and the community involved in its development\"\n    - `John Campbell`_, founder of `Head3 Interactive`_\n  * \"You need to check out the open source project Mezzanine. In one word: Elegant\"\n    - `Nick Hagianis`_, developer\n  * \"Who came up with the name Mezzanine? I love it, like a platform between the client's ideas and their published website. Very classy!\"\n    - `Stephen White`_, developer\n\n.. GENERAL LINKS\n\n.. _`Django`: http://djangoproject.com/\n.. _`BSD licensed`: http://www.linfo.org/bsdlicense.html\n.. _`Wordpress`: http://wordpress.org/\n.. _`Pinax`: http://pinaxproject.com/\n.. _`Mingus`: http://github.com/montylounge/django-mingus\n.. _`Mezzanine project page`: http://mezzanine.jupo.org\n.. _`Python`: http://python.org/\n.. _`pip`: http://www.pip-installer.org/\n.. _`setuptools`: http://pypi.python.org/pypi/setuptools\n.. _`Python Imaging Library`: http://www.pythonware.com/products/pil/\n.. _`grappelli-safe`: http://github.com/stephenmcd/grappelli-safe\n.. _`filebrowser-safe`: http://github.com/stephenmcd/filebrowser-safe/\n.. _`django-grappelli`: http://code.google.com/p/django-grappelli/\n.. _`django-filebrowser`: http://code.google.com/p/django-filebrowser/\n.. _`South`: http://south.aeracode.org/\n.. _`pyflakes`: http://pypi.python.org/pypi/pyflakes\n.. _`pep8`: http://pypi.python.org/pypi/pep8\n.. _`In-line page editing`: http://mezzanine.jupo.org/docs/inline-editing.html\n.. _`custom content types`: http://mezzanine.jupo.org/docs/content-architecture.html#creating-custom-content-types\n.. _`Search engine and API`: http://mezzanine.jupo.org/docs/search-engine.html\n.. _`dashboard`: http://mezzanine.jupo.org/docs/admin-customization.html#dashboard\n.. _`Cartridge`: http://cartridge.jupo.org/\n.. _`Themes`: http://mezzanine.jupo.org/docs/themes.html\n.. _`Custom templates`: http://mezzanine.jupo.org/docs/content-architecture.html#page-templates\n.. _`test suite`: http://mezzanine.jupo.org/docs/packages.html#module-mezzanine.tests\n.. _`Twitter Bootstrap`: http://twitter.github.com/bootstrap/\n.. _`Disqus`: http://disqus.com/\n.. _`Gravatar`: http://gravatar.com/\n.. _`Google Analytics`: http://www.google.com/analytics/\n.. _`Twitter`: http://twitter.com/\n.. _`bit.ly`: http://bit.ly/\n.. _`project_template`: https://github.com/stephenmcd/mezzanine/tree/master/mezzanine/project_template\n.. _`GitHub`: http://github.com/stephenmcd/mezzanine/\n.. _`Bitbucket`: http://bitbucket.org/stephenmcd/mezzanine/\n.. _`mezzanine-users`: http://groups.google.com/group/mezzanine-users/topics\n.. _`GitHub issue tracker`: http://github.com/stephenmcd/mezzanine/issues\n.. _`Django coding style`: http://docs.djangoproject.com/en/dev/internals/contributing/#coding-style\n.. _`PEP 8`: http://www.python.org/dev/peps/pep-0008/\n.. _`Python Software Foundation`: http://www.python.org/psf/\n.. _`Django Packages`: http://djangopackages.com/\n.. _`Hewlett Packard`: http://www.hp.com/\n.. _`Tabblo`: http://www.tabblo.com/\n.. _`Work For Pie`: http://workforpie.com/\n\n\n.. THIRD PARTY LIBS\n\n.. _`mezzanine-html5boilerplate`: https://github.com/tvon/mezzanine-html5boilerplate\n.. _`html5boilerplate project`: http://html5boilerplate.com/\n.. _`mezzanine-mdown`: https://bitbucket.org/onelson/mezzanine-mdown\n.. _`Markdown`: http://en.wikipedia.org/wiki/Markdown\n.. _`mezzanine-openshift`: https://github.com/k4ml/mezzanine-openshift\n.. _`Redhat's OpenShift`: https://openshift.redhat.com/\n.. _`mezzanine-stackato`: https://github.com/ActiveState/mezzanine-stackato\n.. _`ActiveState's Stackato`: http://www.activestate.com/stackato\n\n.. PEOPLE WITH QUOTES\n\n.. _`Van Lindberg`: http://www.lindbergd.info/\n.. _`Antonio Rodriguez`: http://an.ton.io/\n.. _`Jesse Noller`: http://jessenoller.com/\n.. _`Audrey Roy`: http://cartwheelweb.com/\n.. _`Michael Delaney`: http://github.com/fusepilot/\n.. _`John Campbell`: http://head3.com/\n.. _`Stephen White`: http://bitbucket.org/swhite/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mezzanine.jupo.org/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Mezzanine",
    "package_url": "https://pypi.org/project/Mezzanine/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Mezzanine/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://mezzanine.jupo.org/"
    },
    "release_url": "https://pypi.org/project/Mezzanine/1.0.8/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "An open source content management platform built using the Django framework.",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13794085,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "330e5de5d3c99e0f4dbc6e74b3b3f4c2db9da9aad3a94eb562495d5ad08b3ea3",
        "md5": "4089f8e768431f888e545d42574bf26e",
        "sha256": "d64d07176cc7755e2ae82146abd467b04791e8f1bb88656a3c68c9d830b5a5c3"
      },
      "downloads": -1,
      "filename": "Mezzanine-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "4089f8e768431f888e545d42574bf26e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4454468,
      "upload_time": "2012-03-24T12:58:44",
      "upload_time_iso_8601": "2012-03-24T12:58:44.832678Z",
      "url": "https://files.pythonhosted.org/packages/33/0e/5de5d3c99e0f4dbc6e74b3b3f4c2db9da9aad3a94eb562495d5ad08b3ea3/Mezzanine-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2020-19002"
      ],
      "details": "Cross Site Scripting (XSS) in Mezzanine v4.3.1 allows remote attackers to execute arbitrary code via the 'Description' field of the component 'admin/blog/blogpost/add/'. This issue is different than CVE-2018-16632.",
      "fixed_in": [],
      "id": "PYSEC-2021-343",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-343",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}