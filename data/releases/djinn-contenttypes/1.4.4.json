{
  "info": {
    "author": "PythonUnited",
    "author_email": "info@pythonunited.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: Freely Distributable",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "djinn_contenttypes\n===================\n\nThis module provides the content type framework for Djinn. Content\ntypes are the 'things' that a user of the system can create, delete,\nedit and view.\n\n\nViews\n-----\n\nDjinn uses generic views for content types. Views behave differently\naccording to how they are called: when called Ajax style or when\nmodal=1 is passed as parameter, the template rendered will be 'modal',\notherwise a complete HTML page will be rendered. Successfull add and\nedit views will return a 'record' like snippet, assuming that they\nwere called to return an inline template view of the object.\n\nThe following views normally apply:\n\n - Creation:\n   Creation can either use a temporary object, in case the add screen already\n   provides some means of relating things to the new object, or simply use the\n   standard add view, that doesn't create anything untill a commit.\n   The default templates for creation are:\n      <app label>/<content type name>_add.html\n      <app label>/<content type name>_add_modal.html\n      djinn_contenttypes/base_add.html\n      djinn_contenttypes/base_add_modal.html\n\n - Update: either update or JSON update\n      <app label>/<content type name>_edit.html\n      <app label>/<content type name>_edit_modal.html\n      djinn_contenttypes/base_edit.html\n      djinn_contenttypes/base_edit_modal.html\n\n - Delete: delete or JSON delete\n\n - View: base view or modal view\n     <content type module>/<content type name>_modal_detail.html\n     <content type module>/<content type name>_detail.html\n      djinn_contenttypes/base_detail.html\n      djinn_contenttypes/base_detail_modal.html\n\n1.4.4\n=====\n* Temporarily switched off history\n\n1.4.3\n=====\n* improved history behavior\n\n1.4.2\n=====\n* Removed highlight info\n* fixed clean of publish_to\n\n1.4.1\n=====\n* Hide highlight for non authorized users\n\n1.4.0\n=====\n* Added highlight model\n* Added history mixin to get a better behavior on cancel and delete actions\n* changes for publishing mechanism\n* new class on buttons for protection of double submit etc.\n* move to Django 1.6.x\n* Added djinn_workflow\n* overhaul of publishing semantics\n\n1.3.0\n=====\n* Removed protected classes from forms\n\n1.2.9\n=====\n* added check on valid model for relations\n* clean up model backdrop\n\n1.2.8\n=====\n* Fixes for modal window\n* Moved to new keyword widget   \n* stop event propgation for inline action\n* Fixes for search related content\n\n1.2.7\n=====\n* Fixes for relate and sharing widgets\n* Dependency on djinn_forms 1.2.3\n\n1.2.6\n=====\n* Dependency on djinn_forms 1.2.2\n\n1.2.5\n=====\n* Return modal on create, to allow chaining\n\n1.2.4\n=====\n* Fixed missing return on cancel of update view POST\n\n1.2.3\n=====\n* usergroup choice is now required, but permits empty\n* i18n fixes\n* Added share view\n* PEP8 fixes\n* removed some dependencies\n\n1.2.2\n====\n* Added forms.fields.NoScripCharField \n\n1.2.1\n=====\n* Fixes for comment model\n\n1.2.0\n=====\n* Added submit buttons for save and save as draft\n* Comment model configurable\n* publication can be scheduled\n\n1.1.1\n=====\n * Translation hotfix\n\n1.1.0\n=====\n * Well, basically too much to mention...\n\n1.0.2\n=====\n * Added name override option to url generate, to enable dynamic models\n\n1.0.1\n=====\n * Added check on group permission, if content is placed in a group\n\n1.0.0\n=====\nInitial version",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PythonUnited/djinn-contenttypes",
    "keywords": "Djinn Contenttypes",
    "license": "beer-ware",
    "maintainer": null,
    "maintainer_email": null,
    "name": "djinn_contenttypes",
    "package_url": "https://pypi.org/project/djinn_contenttypes/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/djinn_contenttypes/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/PythonUnited/djinn-contenttypes"
    },
    "release_url": "https://pypi.org/project/djinn_contenttypes/1.4.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Djinn Intranet Contenttypes framework",
    "version": "1.4.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2204191,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5e7de6bbdf8d3789958f1932845b12844cdf0769d6bb29903b79a7ba9c0269b",
        "md5": "2bfb0ea7770e2bea6b931004f4bcca2c",
        "sha256": "4e3328bb0a18ed2226024439f1f3cd31657ce71343b232095a68ade40d70bf2c"
      },
      "downloads": -1,
      "filename": "djinn_contenttypes-1.4.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2bfb0ea7770e2bea6b931004f4bcca2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 75073,
      "upload_time": "2015-06-18T09:55:53",
      "upload_time_iso_8601": "2015-06-18T09:55:53.166040Z",
      "url": "https://files.pythonhosted.org/packages/c5/e7/de6bbdf8d3789958f1932845b12844cdf0769d6bb29903b79a7ba9c0269b/djinn_contenttypes-1.4.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}