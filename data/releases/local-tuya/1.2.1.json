{
  "info": {
    "author": "Gabriel Pajot",
    "author_email": "gab@les-cactus.co",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# local-tuya\n\n[![tests](https://github.com/gpajot/local-tuya/workflows/Test/badge.svg?branch=main&event=push)](https://github.com/gpajot/local-tuya/actions?query=workflow%3ATest+branch%3Amain+event%3Apush)\n[![version](https://img.shields.io/pypi/v/local-tuya?label=stable)](https://pypi.org/project/local-tuya/)\n[![python](https://img.shields.io/pypi/pyversions/local-tuya)](https://pypi.org/project/local-tuya/)\n\nInterface to Tuya devices over LAN.\n\nFeatures:\n- asynchronous methods and transport\n- persistent communication to the device\n- automatic remote device state updates (remotes can still be used)\n- configuratble of buffering for subsequent updates\n- constraints between device commands\n- Domoticz plugin using a dedicated thread\n\n> 💡 For now, only v3.3 is supported as I only own devices using this version.\n\n## Requirements\nTo control a device you will need these 3 things:\n- the device ID\n- the device local IP address\n- the device local key (encryption key generated upon pairing)\n\n> ⚠️ This library does not provide support for getting these.\n> See how to do that using any of those projects:\n> - [tuyapi](https://github.com/codetheweb/tuyapi)\n> - [tinytuya](https://github.com/jasonacox/tinytuya)\n> \n> Generous thanks to the maintainers of those tools for details on interfacing with Tuya devices.\n\n> ⚠️ Keep in mind that:\n> - After pairing the devices, it's recommended to assign static IPs in your router.\n> - If you reset or re-pair devices the local key will change.\n> - You can delete your tuya IOT account but not the SmartLife one and devices should be kept there.\n> - For state updates to be received properly, the device needs to be able to access the Tuya backend.\n\n## Architecture\nThis library is composed of two main components:\n- the Tuya protocol\n- the device\n\n### Protocol\nThe protocol is responsible for handling communication details with the Tuya device.\nIts interface consists of an asynchronous method to update the device and accepts a callback to subscribe to state changes.\n\nSee [protocol module](./local_tuya/protocol).\n\n### Device\nThe device handles higher level functional logic such as buffering, constraints and specific device commands.\n\nSee [device module](./local_tuya/device).\n\n## Domoticz plugin tools\nSee [Domoticz module](./local_tuya/domoticz).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gpajot/local-tuya",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "local-tuya",
    "package_url": "https://pypi.org/project/local-tuya/",
    "platform": null,
    "project_url": "https://pypi.org/project/local-tuya/",
    "project_urls": {
      "Homepage": "https://github.com/gpajot/local-tuya",
      "Repository": "https://github.com/gpajot/local-tuya"
    },
    "release_url": "https://pypi.org/project/local-tuya/1.2.1/",
    "requires_dist": [
      "pycryptodomex (>=3,<4)",
      "importlib-metadata (>=4,<5) ; python_version < \"3.8\"",
      "concurrent-tasks (>=1.3,<2)",
      "xmltodict (>=0.13,<0.14)"
    ],
    "requires_python": ">=3.7,<3.12",
    "summary": "Interface to Tuya devices over LAN.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17227028,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4b0ce8180ebbdb477be9b51cbc2dcc596426449c18e1035c1a27a39caccaab8",
        "md5": "25c3b637e494ab3ec36900487366fec5",
        "sha256": "a6ec2740d0844f28dd9572b712f56ebbdfa7bdf12b7166fa84f85cd63b12aa33"
      },
      "downloads": -1,
      "filename": "local_tuya-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25c3b637e494ab3ec36900487366fec5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<3.12",
      "size": 37176,
      "upload_time": "2023-02-13T20:33:06",
      "upload_time_iso_8601": "2023-02-13T20:33:06.232754Z",
      "url": "https://files.pythonhosted.org/packages/a4/b0/ce8180ebbdb477be9b51cbc2dcc596426449c18e1035c1a27a39caccaab8/local_tuya-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2437a0ff1d36225028a141de18d9c4ad9269b2c5a599f2b44dec735b82f05c2",
        "md5": "fbf4cf7cc14eacae0059df5dfcded2fe",
        "sha256": "d6baf77d398ed1eb79ab7ef2a94e5a0abf7afbcfd600fc1d4b66cdbc4ac73dc0"
      },
      "downloads": -1,
      "filename": "local_tuya-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fbf4cf7cc14eacae0059df5dfcded2fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<3.12",
      "size": 23770,
      "upload_time": "2023-02-13T20:33:07",
      "upload_time_iso_8601": "2023-02-13T20:33:07.837524Z",
      "url": "https://files.pythonhosted.org/packages/a2/43/7a0ff1d36225028a141de18d9c4ad9269b2c5a599f2b44dec735b82f05c2/local_tuya-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}