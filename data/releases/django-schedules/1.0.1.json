{
  "info": {
    "author": "sedrubal",
    "author_email": "dev@sedrubal.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Schedules\n\nThis app allows you to define routines that should run periodically (e.g. every day at 0:00, ...).\nThey will be triggered by systemd-timers or cron.\n\n## Define Routines\n\n1. Add \"schedules\" to your `INSTALLED_APPS` setting.\n2. Add a file called `schedules.py` to your django app.\n3. Define functions in this file.\n4. Each function which is a timer job should be decorated by the `register` decorater:\n\n### Example:\n\n```py\nimport django_schedules\n\n@django_schedules.register(mins=0, hour=0)\ndef run_at_midnight(**kwargs):\n    print('hello')\n\n@django_schedules.register(mins=3, hour=18, day_of_month=2, month='5,11', lock=False, job_name='foobar')\ndef bar(**kwargs):\n    \"\"\"\n    Run on 2.5. and 2.11. at 18:03.\n    Don't use locking (allow to run this job more than once at the same time).\n    The job will be called 'foobar'.'\n    \"\"\"\n    print('hello')\n\n```\n\n## Commands\n\nNow you can use following management commands:\n\n```sh\n./manage.py schedules_list  # list all available jobs\n./manage.py schedules_update_systemd [-u user] [-p path]  # generate systemd units (for user 'user' (default root))\n./manage.py schedules_update_cron [-u user] [-o file]  # generate crontab \"code\" (for user 'user' (default root)) (and write it to file file)\n./manage.py schedules_run [<app_name>:]<job_name> [additional_args, ...]  # run the job app_name:job_name\n```\n\n## Installation\n\n- Write your code (see above)\n- Run `./manage.py schedules_list` to verify all jobs are registered as expected\n- Run `./manage.py schedules_update_systemd -u $DJANGO_USER [-p /etc/systemd/system/]` to generate systemd units\n- Or run `./manage.py schedules_update_cron -u $DJANGO_USER -o /etc/cron.d/$DJANGO_PROJECT_NAME` to let the jobs run by system cron\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/sedrubal/django_schedules",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-schedules",
    "package_url": "https://pypi.org/project/django-schedules/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-schedules/",
    "project_urls": {
      "Homepage": "https://gitlab.com/sedrubal/django_schedules"
    },
    "release_url": "https://pypi.org/project/django-schedules/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "A Django app to define routines that should run periodically",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16492993,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae7b2e5af352469e3ddcd27437e1c232dd526ca8efebe23bf03f5b3c0f34c997",
        "md5": "6b5a5ab0c97583c93b861ab646a9d5f9",
        "sha256": "212b39507b1316af5e7ae46d6b886c0d159e6dd580fe95b3160400c9eb8acd47"
      },
      "downloads": -1,
      "filename": "django-schedules-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6b5a5ab0c97583c93b861ab646a9d5f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 12134,
      "upload_time": "2023-01-19T21:30:51",
      "upload_time_iso_8601": "2023-01-19T21:30:51.416284Z",
      "url": "https://files.pythonhosted.org/packages/ae/7b/2e5af352469e3ddcd27437e1c232dd526ca8efebe23bf03f5b3c0f34c997/django-schedules-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}