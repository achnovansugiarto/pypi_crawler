{
  "info": {
    "author": "Joe Paavola",
    "author_email": "joe@workhere.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# Django REST Spreadsheets renderer\n\nThis project pulls work from [drf-renderer-xlsx](https://github.com/wharton/drf-renderer-xlsx) and \n[django-rest-framework-csv](https://github.com/mjumbewu/django-rest-framework-csv) aiming to combine these renderers\ninto a single package while fixing some of their individual quirks.\n\n## Differences\nAn important use case for file export in a RESTful API is to allow the user to manipulate data using their own tools. \nWhile pagination is useful for endpoints where you don't need to see all the data, they don't make sense for these types\nof file export. This project will handle pagination by ignoring it, serializing the entire queryset.\n\n---\n\nIn addition, to enable CSV/XLSX on an endpoint, all that needs to be done is adding a single mixin like such:\n\n```lang=py\nfrom drf_spreadsheets.mixins import SpreadsheetMixIn\n\nclass YourViewSet(SpreadsheetMixIn, ModelViewSet):\n    ...\n\n```\n\nThis instead of manually overriding `renderer_classes`, or adding the renderer to the defaults. The former is clunky and \ncan lead to unwanted behavior, and the latter is rarely necessary since there will be many endpoints that don't need\nspreadsheet exports in most projects.\n\n---\n\nOne regression is in XLSX styling. For the initial version of this package, no styling can be applied to generated \nXLSX files. Since this is not an essential feature for most export use-cases, it has been left as a potential future feature\n\n## Usage\n\nTo use this package, simply add the `SpreadsheetMixIn` to a ViewSet! By default, both CSV and XLSX formats will be \navailable on that view. There are six fields provided by `SpreadsheetMixIn`:\n\n |field|default|use|\n |-----|-------|---|\n |enable_csv|True|Allows CSV format to be accessed on that particular ViewSet|\n |enable_xlsx|True|Allows XLSX format to be accessed on that particular ViewSet|\n |enable_spreadsheets_on_details|False|Allows the CSV and/or XLSX renderers to be used on detail views (ie not list views)|\n |enable_renderer_defaults|True|Allows the default renderers found in api_settings to also be used. If set to false, exclusively the spreadsheet renderers will be used|\n |filename|None|Overrides the auto-generated filename of the form \"\\<Model name> Report\" or \"\\<View name> Report\" if no model is available|\n |spreadsheet_headers|None|Overrides the auto-generated columns with either a list or a dictionary. If it is set to be a dictionary, the keys will be columns to include and the values will be their names/labels.|\n |compact_columns|False|Renders secondary data structures as json strings instead of creating new columns for their children|\n\nAn alternative to providing `spreadsheet_headers` as a field through `SpreadsheetMixIn` is providing it via overriding\nthe `get_renderer_context()` method. For example\n\n```lang=py\n    def get_renderer_context(self):\n        context = super(MyViewSet, self).get_renderer_context()\n        if 'headers' in self.request.GET:\n            context[\"spreadsheet_headers\"] = self.request.GET['headers'].split(',')\n        return context\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/workhere/drf-spreadsheets",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-spreadsheets",
    "package_url": "https://pypi.org/project/drf-spreadsheets/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-spreadsheets/",
    "project_urls": {
      "Homepage": "https://github.com/workhere/drf-spreadsheets"
    },
    "release_url": "https://pypi.org/project/drf-spreadsheets/1.1.3/",
    "requires_dist": [
      "djangorestframework (>=3.6)",
      "openpyxl (>=2.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Django REST Framework package allowing views to be rendered as CSV or XLSX",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8843117,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9213dd1e024cfb78422c463962b64f4269ccefb040e69ffa51536049145b9d9",
        "md5": "0e0be7f766154b91b928a4cfbc5c9090",
        "sha256": "51fa0f0afe325b33232f722b9eb4e9b15e8adf0cff5ab1c96d459161834bdaeb"
      },
      "downloads": -1,
      "filename": "drf_spreadsheets-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e0be7f766154b91b928a4cfbc5c9090",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7458,
      "upload_time": "2020-12-07T21:10:38",
      "upload_time_iso_8601": "2020-12-07T21:10:38.185578Z",
      "url": "https://files.pythonhosted.org/packages/f9/21/3dd1e024cfb78422c463962b64f4269ccefb040e69ffa51536049145b9d9/drf_spreadsheets-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25adc4a5060e9c5f023927e69cffc387343033060fc5296aff28b24c358765f5",
        "md5": "4dc52bc8aa004d1e2d34af96c4424a42",
        "sha256": "6aeba7f645acb5c8de79956f9a5fa47a8627e48ccfecb3a1528fd51b84dc8eb9"
      },
      "downloads": -1,
      "filename": "drf-spreadsheets-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4dc52bc8aa004d1e2d34af96c4424a42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5718,
      "upload_time": "2020-12-07T21:10:39",
      "upload_time_iso_8601": "2020-12-07T21:10:39.156370Z",
      "url": "https://files.pythonhosted.org/packages/25/ad/c4a5060e9c5f023927e69cffc387343033060fc5296aff28b24c358765f5/drf-spreadsheets-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}