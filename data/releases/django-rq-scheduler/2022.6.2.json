{
  "info": {
    "author": "Daniel Moran",
    "author_email": "daniel.maruani@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Django RQ Scheduler \n[![Django CI](https://github.com/dsoftwareinc/django-rq-scheduler/actions/workflows/test.yml/badge.svg)](https://github.com/dsoftwareinc/django-rq-scheduler/actions/workflows/test.yml)\n![badge](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/cunla/b756396efb895f0e34558c980f1ca0c7/raw/django-rq-scheduler-4.json)\n\nA database backed job scheduler for Django RQ.\nBased on original [django-rq-scheduler](https://github.com/isl-x/django-rq-scheduler) - Now supports Django 4.0.\n\nThis allows remembering scheduled jobs, their parameters, etc.\n\n# Installation\n\n1. Use pip to install:\n\n```shell\npip install django-rq-scheduler\n```\n\n2. In `settings.py`, add `django_rq` and `scheduler` to  `INSTALLED_APPS`:\n   ```python\n   INSTALLED_APPS = [\n       ...\n       'django_rq',\n       'scheduler',\n       ...\n   ]\n   ```\n\n3. Configure Django RQ. See https://github.com/ui/django-rq#installation\n   \n   Add at least one Redis Queue to your `settings.py`:\n   ```python\n   RQ_QUEUES = {\n     'default': {\n         'HOST': 'localhost',\n         'PORT': 6379,\n         'DB': 0,\n         'PASSWORD': 'some-password',\n         'DEFAULT_TIMEOUT': 360,\n     },\n   }\n   ```\n\n5. Run migrations.\n\t```shell\n\t./manage.py migrate\n\t```\n\n# Usage\n\n## Making a method in your code a schedulable job to be run by a worker.\n\nSee http://python-rq.org/docs/jobs/ or https://github.com/ui/django-rq#job-decorator\n\nAn example:\n\n**myapp.jobs.py**\n\n```python\nfrom django_rq import job\n\n@job\ndef count():\n    return 1 + 1\n```\n\n## Scheduling a Job\n\n### Scheduled Job\n\n1. Sign into the Django Admin site, http://localhost:8000/admin/ and locate the **Django RQ Scheduler** section.\n\n2. Click on the **Add** link for Scheduled Job.\n\n3. Enter a unique name for the job in the **Name** field.\n\n4. In the **Callable** field, enter a Python dot notation path to the method that defines the job. For the example above, that would be `myapp.jobs.count`\n\n5. Choose your **Queue**. Side Note: The queues listed are defined in the Django Settings.\n\n6. Enter the time the job is to be executed in the **Scheduled time** field. Side Note: Enter the date via the browser's local timezone, the time will automatically convert UTC.\n\n7. Click the **Save** button to schedule the job.\n\n### Repeatable Job\n\n1. Sign into the Django Admin site, http://localhost:8000/admin/ and locate the **Django RQ Scheduler** section.\n\n2. Click on the **Add** link for Repeatable Job\n\n3. Enter a unique name for the job in the **Name** field.\n\n4. In the **Callable** field, enter a Python dot notation path to the method that defines the job. For the example above, that would be `myapp.jobs.count`\n\n5. Choose your **Queue**. Side Note: The queues listed are defined in the Django Settings.\n\n6. Enter the time the first job is to be executed in the **Scheduled time** field. Side Note: Enter the date via the browser's local timezone, the time will automatically convert UTC.\n\n7. Enter an **Interval**, and choose the **Interval unit**. This will calculate the time before the function is called again.\n\n8. In the **Repeat** field, enter the number of time the job is to be ran. Leaving the field empty, means the job will be scheduled to run forever.\n\n9. Click the **Save** button to schedule the job.\n\n# Advanced usage using jobs with args\n\ndjango-rq-scheduler supports \n```python\n\nfrom django_rq import job\n@job\ndef job_args_kwargs(*args, **kwargs):\n    func = \"test_args_kwargs({})\"\n    args_list = [repr(arg) for arg in args]\n    kwargs_list = [k + '=' + repr(v) for (k, v) in kwargs.items()]\n    return func.format(', '.join(args_list + kwargs_list))\n```\n\n\n### Schedule job with custom arguments to be calculated when scheduling\n\n1. Sign into the Django Admin site, http://localhost:8000/admin/ and locate the **Django RQ Scheduler** section.\n\n2. Click on the **Add** link for Scheduled Job.\n\n3. Enter a unique name for the job in the **Name** field.\n\n4. In the **Callable** field, enter a Python dot notation path to the method that defines the job. For the example above, that would be `myapp.jobs.job_args_kwargs`\n\n5. Choose your **Queue**. Side Note: The queues listed are defined in the Django Settings.\n\n6. Enter the time the job is to be executed in the **Scheduled time** field. Side Note: Enter the date via the browser's local timezone, the time will automatically convert UTC.\n\n7. Click the **Save** button to schedule the job.\n\n8. Add arguments to the job, pick argument type.\n\n9. Add arguments with keys to the job, pick argument type and value.\n\n# Reporting issues or Features requests\n\nPlease report issues via [GitHub Issues](https://github.com/dsoftwareinc/django-rq-scheduler/issues) .\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dsoftwareinc/django-rq-scheduler",
    "keywords": "django,rq,django-rq,rq-scheduler",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rq-scheduler",
    "package_url": "https://pypi.org/project/django-rq-scheduler/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-rq-scheduler/",
    "project_urls": {
      "Homepage": "https://github.com/dsoftwareinc/django-rq-scheduler"
    },
    "release_url": "https://pypi.org/project/django-rq-scheduler/2022.6.2/",
    "requires_dist": [
      "croniter (>=1.2.0,<2.0.0)",
      "django (>=3.2,<=4.1)",
      "django-model-utils (>=4.2.0,<5.0.0)",
      "django-rq (>=2.4.1,<3.0.0)",
      "pytz (>=2021.3,<2023.0)",
      "rq-scheduler (>=0.11.0,<0.12.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A database backed job scheduler for Django RQ with Django",
    "version": "2022.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17543129,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4ad6ab97b2c520eb3584ab70f2dfb3232b637977c0fcef0c50a59409d14f68c",
        "md5": "08422f27b6863ee52c0b8b69d4b6b412",
        "sha256": "6137e5bf355fd2a56fcc088f3ff9dffd7c1c3a2aa30288ac000ec0ed7a936b95"
      },
      "downloads": -1,
      "filename": "django_rq_scheduler-2022.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08422f27b6863ee52c0b8b69d4b6b412",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 17036,
      "upload_time": "2022-06-23T10:43:18",
      "upload_time_iso_8601": "2022-06-23T10:43:18.532886Z",
      "url": "https://files.pythonhosted.org/packages/a4/ad/6ab97b2c520eb3584ab70f2dfb3232b637977c0fcef0c50a59409d14f68c/django_rq_scheduler-2022.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daa844fa7597bca3c13c3b80034146fd4e6dab870ce03c91023a779aa2344628",
        "md5": "550f19205e842a94023cb4ee04cdc273",
        "sha256": "84c0c2090cbaf607d1c0bb575e31c1d17a16dde9c689f9ea5a1c4addda94c68c"
      },
      "downloads": -1,
      "filename": "django-rq-scheduler-2022.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "550f19205e842a94023cb4ee04cdc273",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 15534,
      "upload_time": "2022-06-23T10:43:20",
      "upload_time_iso_8601": "2022-06-23T10:43:20.800928Z",
      "url": "https://files.pythonhosted.org/packages/da/a8/44fa7597bca3c13c3b80034146fd4e6dab870ce03c91023a779aa2344628/django-rq-scheduler-2022.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}