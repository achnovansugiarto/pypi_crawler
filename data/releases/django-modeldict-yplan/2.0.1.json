{
  "info": {
    "author": "DISQUS",
    "author_email": "opensource@disqus.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development"
    ],
    "description": "================\ndjango-modeldict\n================\n\n.. image:: https://img.shields.io/pypi/v/django-modeldict-yplan.svg\n    :target: https://pypi.python.org/pypi/django-modeldict-yplan\n\n.. image:: https://travis-ci.org/adamchainz/django-modeldict.svg?branch=master\n    :target: https://travis-ci.org/adamchainz/django-modeldict\n\n\n``ModelDict`` is a very efficient way to store things like settings in your database. The entire model is transformed into a dictionary (lazily) as well as stored in your cache. It's invalidated only when it needs to be (both in process and based on ``CACHE_BACKEND``).\n\nIt was originally created by `Disqus <https://github.com/disqus/django-modeldict>`_, but due to the inactivity we at YPlan have taken over maintenance on this fork.\n\nRequirements\n------------\n\nTested with all combinations of:\n\n* Python: 3.6\n* Django: 1.11, 2.0, 2.1\n\nPython 3.4+ supported.\n\nInstall\n-------\n\nInstall it with **pip**:\n\n.. code-block:: bash\n\n    pip install django-modeldict-yplan\n\nMake sure you ``pip uninstall django-modeldict`` first if you're upgrading from the original to this fork - the packages clash.\n\nExample Usage\n-------------\n\n.. code-block:: python\n\n    # You'll need a model with fields to use as key and value in the dict\n    class Setting(models.Model):\n        key = models.CharField(max_length=32)\n        value = models.CharField(max_length=200)\n\n    # Create the ModelDict...\n    settings = ModelDict(Setting, key='key', value='value', instances=False)\n\n    # And you can treat it like a normal dict:\n\n    # Missing values = KeyError\n    settings['foo']\n    >>> KeyError\n\n    # Sets supported\n    settings['foo'] = 'hello'\n\n    # Fetch the current value using normal dictionary access\n    settings['foo']\n    >>> 'hello'\n\n    # ...or by normal model queries\n    Setting.objects.get(key='foo').value\n    >>> 'hello'\n\n\n\n\n=======\nHistory\n=======\n\nPending release\n---------------\n\n.. Add new release notes below here\n\n2.0.1 (2019-02-15)\n------------------\n\n* No functional changes. This is a re-release of version 2.0.0 to fix immutable\n  metadata on PyPI so that Pip on Python 2 doesn't pick up the Python 3 only\n  2.X series. **Version 2.0.0 will be pulled from PyPI on 2019-02-29.**\n\n2.0.0 (2019-01-29)\n------------------\n\n----\n\n**This version is due to be pulled from PyPI, please use version 2.0.1 as per\nits above release note.**\n\n----\n\n* Drop Python 2 support, only Python 3.4+ is supported now.\n* Drop Django 1.8, 1.9, and 1.10 support. Only Django 1.11+ is supported now.\n* Remove ``iteritems()``, ``iterkeys()``, and ``itervalues()`` methods from\n  ``ModelDict``, and move ``items()``, ``keys()``, and ``values()`` to Python 3\n  semantics, returning iterators rather than lists.\n* Include LICENSE file in wheel.\n* Tested with Django 2.1 (no changes were needed for compatibility).\n\n1.5.4 (2016-10-28)\n------------------\n\n* Fixed a race condition in threaded code. See https://github.com/adamchainz/django-modeldict/pull/40 for a detailed\n  explanation. Thanks @Jaidan.\n\n1.5.3 (2016-09-20)\n------------------\n\n* Stop rounding ``time.time()`` down to the nearest integer, so we are more fine grained around expiration. It might\n  also fix a subtle timing bug around re-fetching the remote cache unnecessarily.\n\n1.5.2 (2016-07-31)\n------------------\n\n* Fixed update missing when ``_local_last_updated`` could be set even when it\n  wasn't updated\n* Fixed update missing from integer rounding in time comparison\n* Fixed ``CachedDict.__repr__`` so it works for other subclasses of\n  ``CachedDict`` than ``ModelDict`` (don't assume ``self.model`` exists)\n\n1.5.1 (2016-06-13)\n------------------\n\n* Fixed local cache never expiring if value was checked too often.\n* Use Django's ``cache.set_many`` for more efficient storage.\n\n1.5.0 (2016-01-11)\n------------------\n\n* Forked by YPlan\n* Fixed concurrency TOCTTOU bug for threaded Django servers.\n* Stopped including the 'tests' directory in package\n* Django 1.8 and 1.9 supported.\n* Python 3 support added.\n* Fixed ``setdefault()`` to return the value that was set/found, as per normal dict semantics. Thanks @olevinsky.\n\n1.4.1 (2012-12-04)\n------------------\n\n* Last release by Disqus\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-modeldict",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "Adam Johnson",
    "maintainer_email": "me@adamj.eu",
    "name": "django-modeldict-yplan",
    "package_url": "https://pypi.org/project/django-modeldict-yplan/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-modeldict-yplan/",
    "project_urls": {
      "Homepage": "https://github.com/adamchainz/django-modeldict"
    },
    "release_url": "https://pypi.org/project/django-modeldict-yplan/2.0.1/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": ">=3.4",
    "summary": "Stores a model as a dictionary",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5283984,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "599a866349a11236879cec67172fea32d6a2de744342d1770045c90304b5ea57",
        "md5": "9077283d8a58a1505abe9015638532a3",
        "sha256": "6a783ab535b8e547cc4e192dbc0b99959f0ed6e705349ac437b9eba3761aa55c"
      },
      "downloads": -1,
      "filename": "django_modeldict_yplan-2.0.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "9077283d8a58a1505abe9015638532a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 15452,
      "upload_time": "2019-02-15T14:32:27",
      "upload_time_iso_8601": "2019-02-15T14:32:27.296412Z",
      "url": "https://files.pythonhosted.org/packages/59/9a/866349a11236879cec67172fea32d6a2de744342d1770045c90304b5ea57/django_modeldict_yplan-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fba63b8bcaa8d40822ce70e7980bf630f991e483c8137399712e830494962333",
        "md5": "f59c1f51933dc525d36b4a5634192638",
        "sha256": "1d3fe67fccb557676ef2adae946853f498e15382a7d45440ac8a60c0f5107096"
      },
      "downloads": -1,
      "filename": "django-modeldict-yplan-2.0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "f59c1f51933dc525d36b4a5634192638",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 13760,
      "upload_time": "2019-02-15T14:32:29",
      "upload_time_iso_8601": "2019-02-15T14:32:29.135078Z",
      "url": "https://files.pythonhosted.org/packages/fb/a6/3b8bcaa8d40822ce70e7980bf630f991e483c8137399712e830494962333/django-modeldict-yplan-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}