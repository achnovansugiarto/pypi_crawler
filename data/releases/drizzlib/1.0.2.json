{
  "info": {
    "author": "Antoine Goutenoir",
    "author_email": "antoine.goutenoir@irap.omp.eu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "DRIZZLIB\n========\n\nThis is a [HEALPIx] to [WCS] FITS conversion python package.\nYou can extract a rectangular subset of the [HEALPIx] image into the [WCS]\nformat with the frame, projection and resolution of your choosing.\n\nIt has only been tested with python `2.6` and `2.7`.\n\n[HEALPIx]:   http://healpix.jpl.nasa.gov\n[WCS]:       http://fits.gsfc.nasa.gov/fits_wcs.html\n[drizzling]: http://en.wikipedia.org/wiki/Drizzle_(image_processing)\n[pip]:       http://www.pip-installer.org\n\n\n\nHOW TO INSTALL\n==============\n\nDependencies\n------------\n\n`drizzlib` requires the python packages `numpy`, `astropy`, and `healpy`.\nThose dependencies are listed in `requirements.txt`.\n\nYou can install them easily with [pip] (Pip Installs Packages) :\n\n```\n$ pip install --upgrade setuptools\n$ pip install -r requirements.txt\n```\n\nor, as a user, if you're not root or in a virtual env :\n\n```\n$ pip install --upgrade --user setuptools\n$ pip install --user -r requirements.txt\n```\n\nAs you can see, we need to upgrade `setuptools` to at least `14.3.1` _first_.\nThis is because `healpy` requires it, and pip internally uses `setuptools` too.\n\n\nInstall\n-------\n\nSimply run :\n\n```\n$ python setup.py install\n```\n\nYou might need to be superuser for it to work if you are not in a\nvirtualenv :\n\n```\n$ sudo python setup.py install\n```\n\nor, as a simple user :\n\n```\n$ python setup.py install --user\n```\n\n\nTroubleshooting\n---------------\n\n- `The following required packages can not be built: freetype, png`\n  Older versions of healpy require old matplotlib that requires freetype :\n  `sudo apt-get install pkg-config libfreetype*`\n\n- `fatal error: Python.h`\n  You need python's development packages, too :\n  `sudo apt-get install python-dev`\n\n- `no lapack/blas resources found`\n  On Debian-based systems, install the following system packages :\n  `sudo apt-get install gfortran libopenblas-dev liblapack-dev`\n\n- `UnicodeEncodeError`\n  Make sure the directory in which you uncompressed drizzlib does not contain\n  non-ascii characters in its path.\n\n\n\nHOW TO USE\n==========\n\nAs a library\n------------\n\nSee `doc/TUTORIAL.md` for a more extensive example.\n\n``` python\nfrom drizzlib import healpix2wcs\n\n# Reads `my_healpix.fits`, extracts a subset of its data described by the\n# header in `wcs_config.fits`, and writes the result into `my_wcs.fits`.\nhealpix2wcs('my_healpix.fits', header='wcs_config.fits', output='my_wcs.fits')\n```\n\n\nAs a binary\n-----------\n\nIn the shell, run :\n\n```\n$ bin/healpix2wcs -h\n```\n\nor, if you installed the package, simply :\n\n```\n$ healpix2wcs -h\n```\n\nIt will show you how to use it, which is like this:\n\n```\n$ healpix2wcs [-h] [-f] <healpix> <header> <out>\n```\n\n\n\nHOW TO DISTRIBUTE\n=================\n\nBump the `VERSION`, and then run :\n\n```\n$ python setupy.py sdist\n```\n\nIt will create a source distribution tarball in the `dist` directory.\nIt uses `MANIFEST.in` to exclude files we want to exclude.\n\n\nPackaging on Pypi\n-----------------\n\npip install -U \"pip>=1.4\" \"setuptools>=0.9\" \"wheel>=0.21\" twine\npython setup.py sdist\ntwine upload dist/drizzlib-*\n\nIn your ``~/.pypirc` :\n\n```\n[distutils]\nindex-servers=pypi\n\n[pypi]\nrepository = https://pypi.python.org/pypi\nusername = <username>\npassword = <password>\n```\n\n\n\nGUIDELINES\n==========\n\nVersioning\n----------\n\nWe use [semantic versioning](http://semver.org/).\n\nCode formatting\n---------------\n\nWe follow [PEP 8](https://www.python.org/dev/peps/pep-0008/).\n\nDocumentation\n-------------\n\nWrite your documentation in\n[Markdown](https://daringfireball.net/projects/markdown/).\n\n\n\nCHANGELOG\n=========\n\n1.0.1\n-----\n\n- Fix the source distribution.\n\n\n1.0.0\n-----\n\n- Initial release of `healpix2wcs`.\n- Fix all of the bugsÂ©.\n\n\n0.5.0\n-----\n\n- Basic `wcs2healpix`.\n\n\n0.4.0\n-----\n\n- Add a `healpix2wcs` executable.\n- [healpix2wcs] Fix some more bugs.\n- [healpix2wcs] Ignore `BLANK` values in input HEALPix.\n\n\n0.3.0\n-----\n\n- Embark a Sutherland-Hodgman clipping algorithm written in C, to optimize further.\n\n\n0.2.0\n-----\n\n- Optimize a lot thanks to the `line_profiler`.\n\n\n0.1.0\n-----\n\n- [healpix2wcs] Initial project skeleton files.\n- [healpix2wcs] Non-optimized conversion using `healpy`.\n\n\n\nTHE SCIENCE\n===========\n\nRelated Papers\n--------------\n\nTODO: @Deborah, reference your paper(s) here.\n\n\nHealpix\n-------\n\nLearn more about the awesome HEALPix pixelation here :\nhttp://healpix.sourceforge.net/\n\n\nDrizzling\n---------\n\nLearn more about [drizzling].\n\nHere are some polygon clipping algorithms:\n\n- We're using: http://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm\n- Faster: http://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland_algorithm\n- Even faster : http://en.wikipedia.org/wiki/Liang%E2%80%93Barsky_algorithm\n\n\n\nBLACKBOARD\n==========\n\nPython 3.4\n----------\n\nNotes taken while trying with python 3.4.\n\nDebian packages : python3.4 python3.4-dev virtualenv python-virtualenv\n\n    cd drizzlib\n    virtualenv -p /usr/bin/python3.4 venv3.4\n    source venv3.4/bin/activate\n\n    # Now we're in virtualenv\n\n    # Annoying that we MUST do that first\n    # It might mess with our integration in pypi\n    pip install setuptools --upgrade\n\n    pip install -r requirements.txt\n\n\nAlso, I had to soft link the generated so file from where it was to the project root :\n\nln -s build/lib.linux-x86_64-3.4/optimized.cpython-34m.so optimized.so\n\nThe install should do this, but in a virtualenv... YMMV.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.irap.omp.eu/OV-GSO-DC/drizzlib",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drizzlib",
    "package_url": "https://pypi.org/project/drizzlib/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/drizzlib/",
    "project_urls": {
      "Homepage": "https://gitlab.irap.omp.eu/OV-GSO-DC/drizzlib"
    },
    "release_url": "https://pypi.org/project/drizzlib/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Drizzlib is a drizzling module to convert from HEALPIX to WCS FITS files.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14939226,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a0992819e02b81a60d11266f6240225711a6ffa925a17e4f7622c0791658332",
        "md5": "6d0e96a42f5bb6e2dc6f79b515bd00a1",
        "sha256": "ab28e0a69e66be521a6fdbf8b2d5593b6868addf3bcdc51d8e268fb7544d2457"
      },
      "downloads": -1,
      "filename": "drizzlib-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6d0e96a42f5bb6e2dc6f79b515bd00a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23492,
      "upload_time": "2016-06-06T12:04:50",
      "upload_time_iso_8601": "2016-06-06T12:04:50.037159Z",
      "url": "https://files.pythonhosted.org/packages/4a/09/92819e02b81a60d11266f6240225711a6ffa925a17e4f7622c0791658332/drizzlib-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}