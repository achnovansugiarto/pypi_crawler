{
  "info": {
    "author": "Michael Meffie",
    "author_email": "mmeffie@sinenomine.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "**********************\nMolecule VirtUp Plugin\n**********************\n\nMolecule VirtUp is designed to allow use of `virt-up`_ for provisioning of\nmolecule test guests on a libvirt based hypervisor.  The libvirt hypervisor\nmay be local or remote.\n\nSee `virt-up`_ for installation instructions.\n\n.. _`virt-up`: https://github.com/meffie/virt-up.git\n\nRequires\n========\n\nOn the hypervisor (local or remote)\n\n* libvirt based hypervisor\n* ssh server and connection credentials if remote\n* python virt_up module and dependencies\n\nSupported libvirt providers:\n\n* qemu/KVM\n* XEN\n\nExample\n=======\n\nTo use this plugin, you'll need to set the ``driver`` and ``platform``\nvariables in your ``molecule.yml``. Here is a example using the\n``generic/centos8`` template:\n\n.. code-block:: yaml\n\n   driver:\n     name: virtup\n     options:\n        connection: local\n        host: localhost\n        port: 22\n        python_interpreter: \"/usr/bin/python3\"\n        libvirt_default_uri: \"qemu:///session\"\n        config_home: \"~/.config/virt-up\"\n        data_home: \"~/.local/share/virt-up\"\n\n   platforms:\n     - name: instance\n       template: generic/centos8\n       memory: 512\n       cpus: 1\n\nEnvironment variables\n=====================\n\nVIRTUP_OPTIONS_FILE\n  Specifies the path to the external yaml formatted options file.  An external\n  driver options yaml file is supported in order to promote driver independent\n  molecule scenarios. Options specified in the ``molecule.yml`` take precedent.\n\n  Default: ``~/.config/molecule-virtup.yml``\n\nExample:\n\n.. code-block:: yaml\n\n    ---\n    connection: ssh\n    host: kvm.example.com\n    port: 22\n    libvirt_default_uri: \"qemu:///session\"\n\nOptions\n=======\n\nconnection\n  The **ansible_connection** type used when connecting to the hypervisor; ``local`` or ``ssh``.\n\n  Default: local\n\nhost\n  The **ansible_host** used when connecting to the hypervisor.\n\n  Default: localhost\n\nport\n  The **ansible_port** used when connecting to the hypervisor.\n\n  Default: 22\n\nuser\n  The **ansible_user** used when connecting to the hypervisor.\n\n  Default: None\n\nloglevel\n  The logging level name. Log messages are written to the syslog on the hypervisor.\n  Specify one of: critical, error, warning, warn, info, debug\n\n  Default: info\n\nconfig_home\n  Specifies the ``virt_up`` configuration directory path.\n\ndata_home\n  Specifies the ``virt_up`` data directory path.\n\npython_interpreter\n  Specifies the **ansible_python_interpreter** on the hypervisor.\n\n  Default: Detected by ansible\n\nlibvirt_default_uri\n  The libvirt local connection URI when the ``LIBVIRT_DEFAULT_URI`` environment\n  variable is **not** present on the hypervisor for the ansible user. This URI should\n  be a **local** connection URI, not ssh. The connection URI is used by the\n  module running on the hypervisor to connect to the local libvirt daemon also\n  running on the hypervisor.\n\n  **virt_up** defaults to ``qemu:///session`` when the ``LIBVIRT_DEFAULT_URI``\n  environment variable is not set on the hypervisor and the\n  **libvirt_default_uri** option is not specified.\n\n  Default: None\n\npassword\n  The **ansible_password** used when connecting to the hypervisor.\n\n  Default: None\n\nssh_private_key_file\n  The **ansible_private_key_file** used when connecting to the hypervisor.\n  Private key file used by ssh. Useful if using multiple keys and you donâ€™t want to use SSH agent.\n\n  Default: None\n\nssh_common_args\n  The **ansible_ssh_common_args** used when connecting to the hypervisor.\n  This setting is always appended to the default command line ssh..\n\n  Default: None\n\nssh_extra_args\n  The **ansible_ssh_extra_args** used when connecting to the hypervisor.\n  This setting is always appended to the default ssh command line.\n\n  Default: None\n\nssh_pipelining\n  The **ansible_ssh_pipelining** used when connecting to the hypervisor.\n  Determines whether or not to use SSH pipelining.\n\n  Default: None\n\nssh_executable\n  The **ansible_ssh_executable** used when connecting to the hypervisor.\n  Overrides the ssh command to be used.\n\n  Default: None\n\nPlatform parameters\n===================\n\ntemplate\n  Name of the ``virt-up`` template definition on the hypervisor. See ``virt-up show templates``.\n\n  Aliases: box\n\n  Default: default\n\nsize\n  Image size expressed as <number><units>, for example 10G.\n\n  Default: set by template definition\n\nmemory\n  Memory size of virtual machine in Mb. e.g. 2048\n\n  Default: set by template definition\n\ncpus\n  Number of virtual cpus, e.g. 1\n\n  Default: set by template definition\n\nAuthors\n=======\n\nMolecule Virt-Up Plugin was created by Michael Meffie based on code from\nMolecule.\n\nLicense\n=======\n\nThe `MIT`_ License.\n\n.. _`MIT`: https://github.com/meffie/molecule-virtup/blob/master/LICENSE\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meffie/molecule-virtup",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molecule-virtup",
    "package_url": "https://pypi.org/project/molecule-virtup/",
    "platform": "",
    "project_url": "https://pypi.org/project/molecule-virtup/",
    "project_urls": {
      "Homepage": "https://github.com/meffie/molecule-virtup"
    },
    "release_url": "https://pypi.org/project/molecule-virtup/1.5.0/",
    "requires_dist": [
      "molecule (>=3.2.0)",
      "pyyaml (<6,>=5.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "virt-up Molecule Plugin :: run molecule tests using virt-up",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11999522,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3ddd8f32ef2f95c65a6435fc05e7c635b6f552463ab64de22c36a0b510dbd52",
        "md5": "1d87657c614cb369c78981970d53d593",
        "sha256": "91fac1d56239c2837fe40d03fd1b0a607e27dfe93b06a8cf0aa74a435f97eae6"
      },
      "downloads": -1,
      "filename": "molecule_virtup-1.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d87657c614cb369c78981970d53d593",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13692,
      "upload_time": "2021-11-11T20:58:31",
      "upload_time_iso_8601": "2021-11-11T20:58:31.102715Z",
      "url": "https://files.pythonhosted.org/packages/b3/dd/d8f32ef2f95c65a6435fc05e7c635b6f552463ab64de22c36a0b510dbd52/molecule_virtup-1.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e507dcc77e2cfddb5ff75d9182043f77f1cb5181f4b16641be5708727fd92f88",
        "md5": "282be974fb8515ab779cf3a01f607784",
        "sha256": "8c3c84d1cc12f63bff6e7148871d714a97725cf31b423ba337f1b6956270ffe5"
      },
      "downloads": -1,
      "filename": "molecule-virtup-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "282be974fb8515ab779cf3a01f607784",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9995,
      "upload_time": "2021-11-11T20:58:32",
      "upload_time_iso_8601": "2021-11-11T20:58:32.988453Z",
      "url": "https://files.pythonhosted.org/packages/e5/07/dcc77e2cfddb5ff75d9182043f77f1cb5181f4b16641be5708727fd92f88/molecule-virtup-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}