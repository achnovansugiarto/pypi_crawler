{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Communications :: Chat"
    ],
    "description": "================\nSynapse |shield|\n================\n\n.. |shield| image:: https://img.shields.io/matrix/synapse:matrix.org?label=support&logo=matrix\n  :alt: (get support on #synapse:matrix.org)\n  :target: https://matrix.to/#/#synapse:matrix.org\n\n.. contents::\n\nIntroduction\n============\n\nMatrix is an ambitious new ecosystem for open federated Instant Messaging and\nVoIP.  The basics you need to know to get up and running are:\n\n- Everything in Matrix happens in a room.  Rooms are distributed and do not\n  exist on any single server.  Rooms can be located using convenience aliases\n  like ``#matrix:matrix.org`` or ``#test:localhost:8448``.\n\n- Matrix user IDs look like ``@matthew:matrix.org`` (although in the future\n  you will normally refer to yourself and others using a third party identifier\n  (3PID): email address, phone number, etc rather than manipulating Matrix user IDs)\n\nThe overall architecture is::\n\n      client <----> homeserver <=====================> homeserver <----> client\n             https://somewhere.org/_matrix      https://elsewhere.net/_matrix\n\n``#matrix:matrix.org`` is the official support room for Matrix, and can be\naccessed by any client from https://matrix.org/docs/projects/try-matrix-now.html or\nvia IRC bridge at irc://irc.freenode.net/matrix.\n\nSynapse is currently in rapid development, but as of version 0.5 we believe it\nis sufficiently stable to be run as an internet-facing service for real usage!\n\nAbout Matrix\n============\n\nMatrix specifies a set of pragmatic RESTful HTTP JSON APIs as an open standard,\nwhich handle:\n\n- Creating and managing fully distributed chat rooms with no\n  single points of control or failure\n- Eventually-consistent cryptographically secure synchronisation of room\n  state across a global open network of federated servers and services\n- Sending and receiving extensible messages in a room with (optional)\n  end-to-end encryption[1]\n- Inviting, joining, leaving, kicking, banning room members\n- Managing user accounts (registration, login, logout)\n- Using 3rd Party IDs (3PIDs) such as email addresses, phone numbers,\n  Facebook accounts to authenticate, identify and discover users on Matrix.\n- Placing 1:1 VoIP and Video calls\n\nThese APIs are intended to be implemented on a wide range of servers, services\nand clients, letting developers build messaging and VoIP functionality on top\nof the entirely open Matrix ecosystem rather than using closed or proprietary\nsolutions. The hope is for Matrix to act as the building blocks for a new\ngeneration of fully open and interoperable messaging and VoIP apps for the\ninternet.\n\nSynapse is a reference \"homeserver\" implementation of Matrix from the core\ndevelopment team at matrix.org, written in Python/Twisted.  It is intended to\nshowcase the concept of Matrix and let folks see the spec in the context of a\ncodebase and let you run your own homeserver and generally help bootstrap the\necosystem.\n\nIn Matrix, every user runs one or more Matrix clients, which connect through to\na Matrix homeserver. The homeserver stores all their personal chat history and\nuser account information - much as a mail client connects through to an\nIMAP/SMTP server. Just like email, you can either run your own Matrix\nhomeserver and control and own your own communications and history or use one\nhosted by someone else (e.g. matrix.org) - there is no single point of control\nor mandatory service provider in Matrix, unlike WhatsApp, Facebook, Hangouts,\netc.\n\nWe'd like to invite you to join #matrix:matrix.org (via\nhttps://matrix.org/docs/projects/try-matrix-now.html), run a homeserver, take a look\nat the `Matrix spec <https://matrix.org/docs/spec>`_, and experiment with the\n`APIs <https://matrix.org/docs/api>`_ and `Client SDKs\n<https://matrix.org/docs/projects/try-matrix-now.html#client-sdks>`_.\n\nThanks for using Matrix!\n\n[1] End-to-end encryption is currently in beta: `blog post <https://matrix.org/blog/2016/11/21/matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last>`_.\n\n\nSupport\n=======\n\nFor support installing or managing Synapse, please join |room|_ (from a matrix.org\naccount if necessary) and ask questions there. We do not use GitHub issues for\nsupport requests, only for bug reports and feature requests.\n\n.. |room| replace:: ``#synapse:matrix.org``\n.. _room: https://matrix.to/#/#synapse:matrix.org\n\n\nSynapse Installation\n====================\n\n.. _federation:\n\n* For details on how to install synapse, see `<INSTALL.md>`_.\n* For specific details on how to configure Synapse for federation see `docs/federate.md <docs/federate.md>`_\n\n\nConnecting to Synapse from a client\n===================================\n\nThe easiest way to try out your new Synapse installation is by connecting to it\nfrom a web client.\n\nUnless you are running a test instance of Synapse on your local machine, in\ngeneral, you will need to enable TLS support before you can successfully\nconnect from a client: see `<INSTALL.md#tls-certificates>`_.\n\nAn easy way to get started is to login or register via Riot at\nhttps://riot.im/app/#/login or https://riot.im/app/#/register respectively.\nYou will need to change the server you are logging into from ``matrix.org``\nand instead specify a Homeserver URL of ``https://<server_name>:8448``\n(or just ``https://<server_name>`` if you are using a reverse proxy).\n(Leave the identity server as the default - see `Identity servers`_.)\nIf you prefer to use another client, refer to our\n`client breakdown <https://matrix.org/docs/projects/clients-matrix>`_.\n\nIf all goes well you should at least be able to log in, create a room, and\nstart sending messages.\n\n.. _`client-user-reg`:\n\nRegistering a new user from a client\n------------------------------------\n\nBy default, registration of new users via Matrix clients is disabled. To enable\nit, specify ``enable_registration: true`` in ``homeserver.yaml``. (It is then\nrecommended to also set up CAPTCHA - see `<docs/CAPTCHA_SETUP.md>`_.)\n\nOnce ``enable_registration`` is set to ``true``, it is possible to register a\nuser via `riot.im <https://riot.im/app/#/register>`_ or other Matrix clients.\n\nYour new user name will be formed partly from the ``server_name``, and partly\nfrom a localpart you specify when you create the account. Your name will take\nthe form of::\n\n    @localpart:my.domain.name\n\n(pronounced \"at localpart on my dot domain dot name\").\n\nAs when logging in, you will need to specify a \"Custom server\".  Specify your\ndesired ``localpart`` in the 'User name' box.\n\nACME setup\n==========\n\nFor details on having Synapse manage your federation TLS certificates\nautomatically, please see `<docs/ACME.md>`_.\n\n\nSecurity Note\n=============\n\nMatrix serves raw user generated data in some APIs - specifically the `content\nrepository endpoints <https://matrix.org/docs/spec/client_server/latest.html#get-matrix-media-r0-download-servername-mediaid>`_.\n\nWhilst we have tried to mitigate against possible XSS attacks (e.g.\nhttps://github.com/matrix-org/synapse/pull/1021) we recommend running\nmatrix homeservers on a dedicated domain name, to limit any malicious user generated\ncontent served to web browsers a matrix API from being able to attack webapps hosted\non the same domain.  This is particularly true of sharing a matrix webclient and\nserver on the same domain.\n\nSee https://github.com/vector-im/riot-web/issues/1977 and\nhttps://developer.github.com/changes/2014-04-25-user-content-security for more details.\n\n\nUpgrading an existing Synapse\n=============================\n\nThe instructions for upgrading synapse are in `UPGRADE.rst`_.\nPlease check these instructions as upgrading may require extra steps for some\nversions of synapse.\n\n.. _UPGRADE.rst: UPGRADE.rst\n\n\nUsing PostgreSQL\n================\n\nSynapse offers two database engines:\n * `SQLite <https://sqlite.org/>`_\n * `PostgreSQL <https://www.postgresql.org>`_\n\nBy default Synapse uses SQLite in and doing so trades performance for convenience.\nSQLite is only recommended in Synapse for testing purposes or for servers with\nlight workloads.\n\nAlmost all installations should opt to use PostgreSQL. Advantages include:\n\n* significant performance improvements due to the superior threading and\n  caching model, smarter query optimiser\n* allowing the DB to be run on separate hardware\n* allowing basic active/backup high-availability with a \"hot spare\" synapse\n  pointing at the same DB master, as well as enabling DB replication in\n  synapse itself.\n\nFor information on how to install and use PostgreSQL, please see\n`docs/postgres.md <docs/postgres.md>`_.\n\n.. _reverse-proxy:\n\nUsing a reverse proxy with Synapse\n==================================\n\nIt is recommended to put a reverse proxy such as\n`nginx <https://nginx.org/en/docs/http/ngx_http_proxy_module.html>`_,\n`Apache <https://httpd.apache.org/docs/current/mod/mod_proxy_http.html>`_,\n`Caddy <https://caddyserver.com/docs/quick-starts/reverse-proxy>`_ or\n`HAProxy <https://www.haproxy.org/>`_ in front of Synapse. One advantage of\ndoing so is that it means that you can expose the default https port (443) to\nMatrix clients without needing to run Synapse with root privileges.\n\nFor information on configuring one, see `<docs/reverse_proxy.md>`_.\n\nIdentity Servers\n================\n\nIdentity servers have the job of mapping email addresses and other 3rd Party\nIDs (3PIDs) to Matrix user IDs, as well as verifying the ownership of 3PIDs\nbefore creating that mapping.\n\n**They are not where accounts or credentials are stored - these live on home\nservers. Identity Servers are just for mapping 3rd party IDs to matrix IDs.**\n\nThis process is very security-sensitive, as there is obvious risk of spam if it\nis too easy to sign up for Matrix accounts or harvest 3PID data. In the longer\nterm, we hope to create a decentralised system to manage it (`matrix-doc #712\n<https://github.com/matrix-org/matrix-doc/issues/712>`_), but in the meantime,\nthe role of managing trusted identity in the Matrix ecosystem is farmed out to\na cluster of known trusted ecosystem partners, who run 'Matrix Identity\nServers' such as `Sydent <https://github.com/matrix-org/sydent>`_, whose role\nis purely to authenticate and track 3PID logins and publish end-user public\nkeys.\n\nYou can host your own copy of Sydent, but this will prevent you reaching other\nusers in the Matrix ecosystem via their email address, and prevent them finding\nyou. We therefore recommend that you use one of the centralised identity servers\nat ``https://matrix.org`` or ``https://vector.im`` for now.\n\nTo reiterate: the Identity server will only be used if you choose to associate\nan email address with your account, or send an invite to another user via their\nemail address.\n\n\nPassword reset\n==============\n\nIf a user has registered an email address to their account using an identity\nserver, they can request a password-reset token via clients such as Riot.\n\nA manual password reset can be done via direct database access as follows.\n\nFirst calculate the hash of the new password::\n\n    $ ~/synapse/env/bin/hash_password\n    Password:\n    Confirm password:\n    $2a$12$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\nThen update the ``users`` table in the database::\n\n    UPDATE users SET password_hash='$2a$12$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n        WHERE name='@test:test.com';\n\n\nSynapse Development\n===================\n\nBefore setting up a development environment for synapse, make sure you have the\nsystem dependencies (such as the python header files) installed - see\n`Installing from source <INSTALL.md#installing-from-source>`_.\n\nTo check out a synapse for development, clone the git repo into a working\ndirectory of your choice::\n\n    git clone https://github.com/matrix-org/synapse.git\n    cd synapse\n\nSynapse has a number of external dependencies, that are easiest\nto install using pip and a virtualenv::\n\n    virtualenv -p python3 env\n    source env/bin/activate\n    python -m pip install --no-use-pep517 -e \".[all]\"\n\nThis will run a process of downloading and installing all the needed\ndependencies into a virtual env.\n\nOnce this is done, you may wish to run Synapse's unit tests, to\ncheck that everything is installed as it should be::\n\n    python -m twisted.trial tests\n\nThis should end with a 'PASSED' result::\n\n    Ran 143 tests in 0.601s\n\n    PASSED (successes=143)\n\nRunning the Integration Tests\n=============================\n\nSynapse is accompanied by `SyTest <https://github.com/matrix-org/sytest>`_,\na Matrix homeserver integration testing suite, which uses HTTP requests to\naccess the API as a Matrix client would. It is able to run Synapse directly from\nthe source tree, so installation of the server is not required.\n\nTesting with SyTest is recommended for verifying that changes related to the\nClient-Server API are functioning correctly. See the `installation instructions\n<https://github.com/matrix-org/sytest#installing>`_ for details.\n\nBuilding Internal API Documentation\n===================================\n\nBefore building internal API documentation install sphinx and\nsphinxcontrib-napoleon::\n\n    pip install sphinx\n    pip install sphinxcontrib-napoleon\n\nBuilding internal API documentation::\n\n    python setup.py build_sphinx\n\nTroubleshooting\n===============\n\nNeed help? Join our community support room on Matrix:\n`#synapse:matrix.org <https://matrix.to/#/#synapse:matrix.org>`_\n\nRunning out of File Handles\n---------------------------\n\nIf synapse runs out of file handles, it typically fails badly - live-locking\nat 100% CPU, and/or failing to accept new TCP connections (blocking the\nconnecting client).  Matrix currently can legitimately use a lot of file handles,\nthanks to busy rooms like #matrix:matrix.org containing hundreds of participating\nservers.  The first time a server talks in a room it will try to connect\nsimultaneously to all participating servers, which could exhaust the available\nfile descriptors between DNS queries & HTTPS sockets, especially if DNS is slow\nto respond. (We need to improve the routing algorithm used to be better than\nfull mesh, but as of March 2019 this hasn't happened yet).\n\nIf you hit this failure mode, we recommend increasing the maximum number of\nopen file handles to be at least 4096 (assuming a default of 1024 or 256).\nThis is typically done by editing ``/etc/security/limits.conf``\n\nSeparately, Synapse may leak file handles if inbound HTTP requests get stuck\nduring processing - e.g. blocked behind a lock or talking to a remote server etc.\nThis is best diagnosed by matching up the 'Received request' and 'Processed request'\nlog lines and looking for any 'Processed request' lines which take more than\na few seconds to execute. Please let us know at #synapse:matrix.org if\nyou see this failure mode so we can help debug it, however.\n\nHelp!! Synapse is slow and eats all my RAM/CPU!\n-----------------------------------------------\n\nFirst, ensure you are running the latest version of Synapse, using Python 3\nwith a PostgreSQL database.\n\nSynapse's architecture is quite RAM hungry currently - we deliberately\ncache a lot of recent room data and metadata in RAM in order to speed up\ncommon requests. We'll improve this in the future, but for now the easiest\nway to either reduce the RAM usage (at the risk of slowing things down)\nis to set the almost-undocumented ``SYNAPSE_CACHE_FACTOR`` environment\nvariable. The default is 0.5, which can be decreased to reduce RAM usage\nin memory constrained enviroments, or increased if performance starts to\ndegrade.\n\nHowever, degraded performance due to a low cache factor, common on\nmachines with slow disks, often leads to explosions in memory use due\nbacklogged requests. In this case, reducing the cache factor will make\nthings worse. Instead, try increasing it drastically. 2.0 is a good\nstarting value.\n\nUsing `libjemalloc <http://jemalloc.net/>`_ can also yield a significant\nimprovement in overall memory use, and especially in terms of giving back\nRAM to the OS. To use it, the library must simply be put in the\nLD_PRELOAD environment variable when launching Synapse. On Debian, this\ncan be done by installing the ``libjemalloc1`` package and adding this\nline to ``/etc/default/matrix-synapse``::\n\n    LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.1\n\nThis can make a significant difference on Python 2.7 - it's unclear how\nmuch of an improvement it provides on Python 3.x.\n\nIf you're encountering high CPU use by the Synapse process itself, you\nmay be affected by a bug with presence tracking that leads to a\nmassive excess of outgoing federation requests (see `discussion\n<https://github.com/matrix-org/synapse/issues/3971>`_). If metrics\nindicate that your server is also issuing far more outgoing federation\nrequests than can be accounted for by your users' activity, this is a\nlikely cause. The misbehavior can be worked around by setting\n``use_presence: false`` in the Synapse config file.\n\nPeople can't accept room invitations from me\n--------------------------------------------\n\nThe typical failure mode here is that you send an invitation to someone \nto join a room or direct chat, but when they go to accept it, they get an\nerror (typically along the lines of \"Invalid signature\"). They might see\nsomething like the following in their logs::\n\n    2019-09-11 19:32:04,271 - synapse.federation.transport.server - 288 - WARNING - GET-11752 - authenticate_request failed: 401: Invalid signature for server <server> with key ed25519:a_EqML: Unable to verify signature for <server>\n\nThis is normally caused by a misconfiguration in your reverse-proxy. See\n`<docs/reverse_proxy.md>`_ and double-check that your settings are correct.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-synapse",
    "package_url": "https://pypi.org/project/matrix-synapse/",
    "platform": "",
    "project_url": "https://pypi.org/project/matrix-synapse/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/matrix-synapse/1.17.0/",
    "requires_dist": [
      "jsonschema (>=2.5.1)",
      "frozendict (>=1)",
      "unpaddedbase64 (>=1.1.0)",
      "canonicaljson (>=1.1.3)",
      "signedjson (>=1.1.0)",
      "pynacl (>=1.2.1)",
      "idna (>=2.5)",
      "service-identity (>=18.1.0)",
      "Twisted (>=18.9.0)",
      "treq (>=15.1)",
      "pyopenssl (>=16.0.0)",
      "pyyaml (>=3.11)",
      "pyasn1 (>=0.1.9)",
      "pyasn1-modules (>=0.0.7)",
      "daemonize (>=2.3.1)",
      "bcrypt (>=3.1.0)",
      "pillow (>=4.3.0)",
      "sortedcontainers (>=1.4.4)",
      "pymacaroons (>=0.13.0)",
      "msgpack (>=0.5.2)",
      "phonenumbers (>=8.2.0)",
      "prometheus-client (<0.9.0,>=0.0.18)",
      "attrs (>=19.1.0)",
      "netaddr (>=0.7.18)",
      "Jinja2 (>=2.9)",
      "bleach (>=1.4.3)",
      "typing-extensions (>=3.7.4)",
      "txacme (>=0.9.2) ; extra == 'acme'",
      "eliot (<1.8.0) ; (python_version < \"3.5.3\") and extra == 'acme'",
      "txredisapi (>=1.4.7) ; extra == 'all'",
      "Jinja2 (>=2.9) ; extra == 'all'",
      "txacme (>=0.9.2) ; extra == 'all'",
      "matrix-synapse-ldap3 (>=0.1) ; extra == 'all'",
      "parameterized (>=0.7.0) ; extra == 'all'",
      "opentracing (>=2.2.0) ; extra == 'all'",
      "authlib (>=0.14.0) ; extra == 'all'",
      "pysaml2 (>=4.5.0) ; extra == 'all'",
      "jaeger-client (>=4.0.0) ; extra == 'all'",
      "hiredis ; extra == 'all'",
      "mock (>=2.0) ; extra == 'all'",
      "lxml (>=3.5.0) ; extra == 'all'",
      "sentry-sdk (>=0.7.2) ; extra == 'all'",
      "psycopg2 (>=2.7) ; extra == 'all'",
      "pyjwt (>=1.6.4) ; extra == 'all'",
      "eliot (<1.8.0) ; (python_version < \"3.5.3\") and extra == 'all'",
      "pyjwt (>=1.6.4) ; extra == 'jwt'",
      "matrix-synapse-ldap3 (>=0.1) ; extra == 'matrix-synapse-ldap3'",
      "authlib (>=0.14.0) ; extra == 'oidc'",
      "jaeger-client (>=4.0.0) ; extra == 'opentracing'",
      "opentracing (>=2.2.0) ; extra == 'opentracing'",
      "psycopg2 (>=2.7) ; extra == 'postgres'",
      "txredisapi (>=1.4.7) ; extra == 'redis'",
      "hiredis ; extra == 'redis'",
      "Jinja2 (>=2.9) ; extra == 'resources.consent'",
      "pysaml2 (>=4.5.0) ; extra == 'saml2'",
      "sentry-sdk (>=0.7.2) ; extra == 'sentry'",
      "systemd-python (>=231) ; extra == 'systemd'",
      "mock (>=2.0) ; extra == 'test'",
      "parameterized (>=0.7.0) ; extra == 'test'",
      "lxml (>=3.5.0) ; extra == 'url_preview'"
    ],
    "requires_python": "~=3.5",
    "summary": "Reference homeserver for the Matrix decentralised comms protocol",
    "version": "1.17.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17476749,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7dfc93d42a45aa85881f06c6c457309e0a862a19d1119299545a520340f36a4",
        "md5": "412920a8695d614c42484da81dcf432a",
        "sha256": "cb9ff36797b1bfca462f549869254df9953ce43524bab6caae3e26bd753e67e7"
      },
      "downloads": -1,
      "filename": "matrix_synapse-1.17.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "412920a8695d614c42484da81dcf432a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.5",
      "size": 1634162,
      "upload_time": "2020-07-13T10:36:30",
      "upload_time_iso_8601": "2020-07-13T10:36:30.484355Z",
      "url": "https://files.pythonhosted.org/packages/f7/df/c93d42a45aa85881f06c6c457309e0a862a19d1119299545a520340f36a4/matrix_synapse-1.17.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d0ab5b16849db0c7848119edc4558923ef9fa358a07eee8f5b79727c0407108",
        "md5": "2ca70e5c807b3550db65115bed06b2fc",
        "sha256": "f7d4717d36fec179d2db059578de354a8fb45956b813676e57b5ac0fb1400c9a"
      },
      "downloads": -1,
      "filename": "matrix-synapse-1.17.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2ca70e5c807b3550db65115bed06b2fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 1832419,
      "upload_time": "2020-07-13T10:39:07",
      "upload_time_iso_8601": "2020-07-13T10:39:07.808715Z",
      "url": "https://files.pythonhosted.org/packages/3d/0a/b5b16849db0c7848119edc4558923ef9fa358a07eee8f5b79727c0407108/matrix-synapse-1.17.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2021-21393",
        "GHSA-jrh7-mhhx-6h88"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.28.0 Synapse is missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. Note that the groups feature is not part of the Matrix specification and the chosen maximum lengths are arbitrary. Not all clients might abide by them. Refer to referenced GitHub security advisory for additional details including workarounds.",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "PYSEC-2021-26",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-26",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26890",
        "GHSA-4mp3-385r-v63f"
      ],
      "details": "Matrix Synapse before 1.20.0 erroneously permits non-standard NaN, Infinity, and -Infinity JSON values in fields of m.room.member events, allowing remote attackers to execute a denial of service attack against the federation and common Matrix clients. If such a malformed event is accepted into the room's state, the impact is long-lasting and is not fixed by an upgrade to a newer version, requiring the event to be manually redacted instead. Since events are replicated to servers of other room members, the impact is not constrained to the server of the event sender.",
      "fixed_in": [
        "1.20.0"
      ],
      "id": "PYSEC-2020-237",
      "link": "https://osv.dev/vulnerability/PYSEC-2020-237",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-29471",
        "GHSA-x345-32rc-8h85"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.33.2 \"Push rules\" can specify conditions under which they will match, including `event_match`, which matches event content against a pattern including wildcards. Certain patterns can cause very poor performance in the matching engine, leading to a denial-of-service when processing moderate length events. The issue is patched in version 1.33.2. A potential workaround might be to prevent users from making custom push rules, by blocking such requests at a reverse-proxy.",
      "fixed_in": [
        "1.33.2"
      ],
      "id": "PYSEC-2021-135",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-135",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21274",
        "GHSA-2hwx-mjrm-v3g8"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, a malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver. This affects any server which accepts federation requests from untrusted servers. Issue is resolved in version 1.25.0. As a workaround the `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.",
      "fixed_in": [
        "1.25.0"
      ],
      "id": "PYSEC-2021-132",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-132",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21273",
        "GHSA-v936-j8gp-9q3p"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, requests to user provided domains were not restricted to external IP addresses when calculating the key validity for third-party invite events and sending push notifications. This could cause Synapse to make requests to internal infrastructure. The type of request was not controlled by the user, although limited modification of request bodies was possible. For the most thorough protection server administrators should remove the deprecated `federation_ip_range_blacklist` from their settings after upgrading to Synapse v1.25.0 which will result in Synapse using the improved default IP address restrictions. See the new `ip_range_blacklist` and `ip_range_whitelist` settings if more specific control is necessary.",
      "fixed_in": [
        "1.25.0"
      ],
      "id": "PYSEC-2021-131",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-131",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39163",
        "GHSA-jj53-8fmw-f2w2"
      ],
      "details": "Matrix is an ecosystem for open federated Instant Messaging and Voice over IP. In versions 1.41.0 and prior, unauthorised users can access the name, avatar, topic and number of members of a room if they know the ID of the room. This vulnerability is limited to homeservers where the vulnerable homeserver is in the room and untrusted users are permitted to create groups (communities). By default, only homeserver administrators can create groups. However, homeserver administrators can already access this information in the database or using the admin API. As a result, only homeservers where the configuration setting `enable_group_creation` has been set to `true` are impacted. Server administrators should upgrade to 1.41.1 or higher to patch the vulnerability. There are two potential workarounds. Server administrators can set `enable_group_creation` to `false` in their homeserver configuration (this is the default value) to prevent creation of groups by non-administrators. Administrators that are using a reverse proxy could, with partial loss of group functionality, block the endpoints `/_matrix/client/r0/groups/{group_id}/rooms` and `/_matrix/client/unstable/groups/{group_id}/rooms`.",
      "fixed_in": [
        "1.41.1"
      ],
      "id": "PYSEC-2021-424",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-424",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21392",
        "GHSA-5wrh-4jwv-5w78"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.28.0 requests to user provided domains were not restricted to external IP addresses when transitional IPv6 addresses were used. Outbound requests to federation, identity servers, when calculating the key validity for third-party invite events, sending push notifications, and generating URL previews are affected. This could cause Synapse to make requests to internal infrastructure on dual-stack networks. See referenced GitHub security advisory for details and workarounds.",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "PYSEC-2021-25",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-25",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39164",
        "GHSA-3x4c-pq33-4w3q"
      ],
      "details": "Matrix is an ecosystem for open federated Instant Messaging and Voice over IP. In versions 1.41.0 and prior, unauthorised users can access the membership (list of members, with their display names) of a room if they know the ID of the room. The vulnerability is limited to rooms with `shared` history visibility. Furthermore, the unauthorised user must be using an account on a vulnerable homeserver that is in the room. Server administrators should upgrade to 1.41.1 or later in order to receive the patch. One workaround is available. Administrators of servers that use a reverse proxy could, with potentially unacceptable loss of functionality, block the endpoints: `/_matrix/client/r0/rooms/{room_id}/members` with `at` query parameter, and `/_matrix/client/unstable/rooms/{room_id}/members` with `at` query parameter.",
      "fixed_in": [
        "1.41.1"
      ],
      "id": "PYSEC-2021-425",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-425",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21394",
        "GHSA-w9fg-xffh-p362"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.28.0 Synapse is missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. Note that the groups feature is not part of the Matrix specification and the chosen maximum lengths are arbitrary. Not all clients might abide by them. Refer to referenced GitHub security advisory for additional details including workarounds.",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "PYSEC-2021-27",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-27",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-41281",
        "GHSA-3hfw-x7gx-437c"
      ],
      "details": "Synapse is a package for Matrix homeservers written in Python 3/Twisted. Prior to version 1.47.1, Synapse instances with the media repository enabled can be tricked into downloading a file from a remote server into an arbitrary directory. No authentication is required for the affected endpoint. The last 2 directories and file name of the path are chosen randomly by Synapse and cannot be controlled by an attacker, which limits the impact. Homeservers with the media repository disabled are unaffected. Homeservers with a federation whitelist are also unaffected, since Synapse will check the remote hostname, including the trailing `../`s, against the whitelist. Server administrators should upgrade to 1.47.1 or later. Server administrators using a reverse proxy could, at the expense of losing media functionality, may block the certain endpoints as a workaround. Alternatively, non-containerized deployments can be adapted to use the hardened systemd config.",
      "fixed_in": [
        "1.47.1"
      ],
      "id": "PYSEC-2021-436",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-436",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26891",
        "GHSA-3x8c-fmpc-5rmq"
      ],
      "details": "AuthRestServlet in Matrix Synapse before 1.21.0 is vulnerable to XSS due to unsafe interpolation of the session GET parameter. This allows a remote attacker to execute an XSS attack on the domain Synapse is hosted on, by supplying the victim user with a malicious URL to the /_matrix/client/r0/auth/*/fallback/web or /_matrix/client/unstable/auth/*/fallback/web Synapse endpoints.",
      "fixed_in": [
        "1.21.0"
      ],
      "id": "PYSEC-2020-238",
      "link": "https://osv.dev/vulnerability/PYSEC-2020-238",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21333",
        "GHSA-c5f8-35qr-q4fm"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.27.0, the notification emails sent for notifications for missed messages or for an expiring account are subject to HTML injection. In the case of the notification for missed messages, this could allow an attacker to insert forged content into the email. The account expiry feature is not enabled by default and the HTML injection is not controllable by an attacker. This is fixed in version 1.27.0.",
      "fixed_in": [
        "1.27.0"
      ],
      "id": "PYSEC-2021-134",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-134",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26257",
        "GHSA-hxmp-pqch-c8mm"
      ],
      "details": "Matrix is an ecosystem for open federated Instant Messaging and VoIP. Synapse is a reference \"homeserver\" implementation of Matrix. A malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request. This can lead to a denial of service in which future events will not be correctly sent to other servers over federation. This affects any server which accepts federation requests from untrusted servers. The Matrix Synapse reference implementation before version 1.23.1 the implementation is vulnerable to this injection attack. Issue is fixed in version 1.23.1. As a workaround homeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).",
      "fixed_in": [
        "1.23.1"
      ],
      "id": "PYSEC-2020-236",
      "link": "https://osv.dev/vulnerability/PYSEC-2020-236",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21332",
        "GHSA-246w-56m2-5899"
      ],
      "details": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.27.0, the password reset endpoint served via Synapse was vulnerable to cross-site scripting (XSS) attacks. The impact depends on the configuration of the domain that Synapse is deployed on, but may allow access to cookies and other browser data, CSRF vulnerabilities, and access to other resources served on the same domain or parent domains. This is fixed in version 1.27.0.",
      "fixed_in": [
        "1.27.0"
      ],
      "id": "PYSEC-2021-133",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-133",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26891"
      ],
      "details": "### Impact\nThe fallback authentication endpoint served via Synapse was vulnerable to cross-site scripting (XSS) attacks. The impact depends on the configuration of the domain that Synapse is deployed on, but may allow access to cookies and other browser data, CSRF vulnerabilities, and access to other resources served on the same domain or parent domains.\n\n### Patches\nThis is fixed by #8444, which is included in Synapse v1.21.0.\n\n### Workarounds\nIf the homeserver is not configured to use reCAPTCHA, consent (terms of service), or single sign-on then the affected endpoint can be blocked at a reverse proxy:\n\n* `/_matrix/client/r0/auth/.*/fallback/web`\n* `/_matrix/client/unstable/auth/.*/fallback/web`",
      "fixed_in": [
        "1.21.0"
      ],
      "id": "GHSA-3x8c-fmpc-5rmq",
      "link": "https://osv.dev/vulnerability/GHSA-3x8c-fmpc-5rmq",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-29471"
      ],
      "details": "### Impact\n\n\"Push rules\" can specify [conditions](https://matrix.org/docs/spec/client_server/r0.6.1#conditions) under which they will match, including `event_match`, which matches event content against a pattern including wildcards.\n\nCertain patterns can cause very poor performance in the matching engine, leading to a denial-of-service when processing moderate length events.\n\n### Patches\n\nThe issue is patched by https://github.com/matrix-org/synapse/commit/03318a766cac9f8b053db2214d9c332a977d226c.\n\n### Workarounds\n\nA potential workaround might be to prevent users from making custom push rules, by blocking such requests at a reverse-proxy.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.",
      "fixed_in": [
        "1.33.2"
      ],
      "id": "GHSA-x345-32rc-8h85",
      "link": "https://osv.dev/vulnerability/GHSA-x345-32rc-8h85",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21274"
      ],
      "details": "### Impact\nA malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver.\n\nThis affects any server which accepts federation requests from untrusted servers.\n\n### Patches\nIssue is resolved by #8950. A bug not affecting the security aspects of this was fixed in #9108.\n\n### Workarounds\nThe `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.",
      "fixed_in": [
        "1.25.0"
      ],
      "id": "GHSA-2hwx-mjrm-v3g8",
      "link": "https://osv.dev/vulnerability/GHSA-2hwx-mjrm-v3g8",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26890"
      ],
      "details": "### Impact\nA denial of service attack against Matrix clients can be exploited by sending an event including invalid JSON data to Synapse. Synapse would relay the data to clients which could crash or hang. Impact is long-lasting if the event is made part of the room state.\n\n### Patches\nAt a minimum #8106 and #8291 must be applied. #7372 and #8124 include additional checks.\n\n### Workarounds\nThere are no known workarounds.\n\n### Upgrading notes\nIf an invalid event is accepted by an earlier Synapse it can become part of the room state and will not be fixed by upgrading Synapse. Redacting the invalid event should avoid clients receiving the invalid event.",
      "fixed_in": [
        "1.20.0"
      ],
      "id": "GHSA-4mp3-385r-v63f",
      "link": "https://osv.dev/vulnerability/GHSA-4mp3-385r-v63f",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [],
      "details": "### Impact\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\nThe issue is fixed by https://github.com/matrix-org/synapse/pull/9855.\n\n### Workarounds\nThere are no known workarounds.\n\n### References\nn/a\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@matrix.org.\n",
      "fixed_in": [
        "1.33.0"
      ],
      "id": "GHSA-7h5v-85w9-pq6c",
      "link": "https://osv.dev/vulnerability/GHSA-7h5v-85w9-pq6c",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-41281"
      ],
      "details": "### Impact\n\nSynapse instances with the media repository enabled can be tricked into downloading a file from a remote server into an arbitrary directory, potentially outside the media store directory.\n\nThe last two directories and file name of the path are chosen randomly by Synapse and cannot be controlled by an attacker, which limits the impact.\n\nHomeservers with the media repository disabled are unaffected. Homeservers configured with a federation whitelist are also unaffected.\n\n### Patches\nServer administrators should upgrade to 1.47.1 or later.\n\n### Workarounds\nServer administrators using a reverse proxy could, at the expense of losing media functionality, block the following endpoints:\n\n* `/_matrix/media/r0/download/{serverName}/{mediaId}`\n* `/_matrix/media/r0/download/{serverName}/{mediaId}/{fileName}`\n* `/_matrix/media/r0/thumbnail/{serverName}/{mediaId}`\n\nAlternatively, non-containerized deployments can be adapted to use the hardened systemd config, located at `contrib/systemd/override-hardened.conf`.\n\n### References\nn/a\n\n### For more information\n\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.\n",
      "fixed_in": [
        "1.47.1"
      ],
      "id": "GHSA-3hfw-x7gx-437c",
      "link": "https://osv.dev/vulnerability/GHSA-3hfw-x7gx-437c",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-26257"
      ],
      "details": "### Impact\n\nA malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request.\n\nThis can lead to a denial of service in which future events will not be correctly sent to other servers over federation.\n\nThis affects any server which accepts federation requests from untrusted servers.\n\n### Patches\n\nIssue is resolved by https://github.com/matrix-org/synapse/pull/8776.\n\n### Workarounds\n\nHomeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).",
      "fixed_in": [
        "1.23.1"
      ],
      "id": "GHSA-hxmp-pqch-c8mm",
      "link": "https://osv.dev/vulnerability/GHSA-hxmp-pqch-c8mm",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21332"
      ],
      "details": "### Impact\nThe password reset endpoint served via Synapse was vulnerable to cross-site scripting (XSS) attacks. The impact depends on the configuration of the domain that Synapse is deployed on, but may allow access to cookies and other browser data, CSRF vulnerabilities, and access to other resources served on the same domain or parent domains.\n\n### Patches\nThis is fixed in #9200.\n\n### Workarounds\nDepending on the needs and configuration of the homeserver a few options are available:\n\n1. Password resets can be disabled by delegating email to a third-party service (via the `account_threepid_delegates.email` setting) or disabling email (by not configuring the `email` setting).\n\n2. If the homeserver is not configured to use passwords (via the `password_config.enabled` setting) then the affected endpoint can be blocked at a reverse proxy:\n\n    * `/_synapse/client/password_reset/email/submit_token`\n\n3. The `password_reset_confirmation.html` template can be overridden with a custom template that manually escapes the variables using [JInja2's `escape` filter](https://jinja.palletsprojects.com/en/2.11.x/templates/#escape). See the `email.template_dir` setting.",
      "fixed_in": [
        "1.27.0"
      ],
      "id": "GHSA-246w-56m2-5899",
      "link": "https://osv.dev/vulnerability/GHSA-246w-56m2-5899",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39164"
      ],
      "details": "### Impact\nUnauthorised users can access the membership (list of members, with their display names) of a room if they know the ID of the room. The vulnerability is limited to rooms with `shared` history visibility. Furthermore, the unauthorised user must be using an account on a vulnerable homeserver that is in the room.\n\n### Patches\nServer administrators should upgrade to 1.41.1 or later.\n\n### Workarounds\nAdministrators of servers that use a reverse proxy could, with potentially unacceptable loss of functionality, block the following endpoints:\n* `/_matrix/client/r0/rooms/{room_id}/members` with `at` query parameter\n* `/_matrix/client/unstable/rooms/{room_id}/members` with `at` query parameter\n\n### References\nn/a\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.",
      "fixed_in": [
        "1.41.1"
      ],
      "id": "GHSA-3x4c-pq33-4w3q",
      "link": "https://osv.dev/vulnerability/GHSA-3x4c-pq33-4w3q",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21393"
      ],
      "details": "### Impact\nMissing input validation of some parameters on the groups (also known as communities) endpoints could cause excessive use of disk space and memory leading to resource exhaustion. Additionally clients may have issues rendering large fields.\n\n### Patches\nThis issue is fixed by #9321 and #9393.\n\n### Workarounds\nThe groups feature can be disabled (by setting `enable_group_creation` to `False`) to mitigate this issue. Note that it is disabled by default.\n\n### Other information\nNote that the groups feature is not part of the [Matrix specification](https://matrix.org/docs/spec/) and the chosen maximum lengths are arbitrary. Not all clients might abide by them.",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "GHSA-jrh7-mhhx-6h88",
      "link": "https://osv.dev/vulnerability/GHSA-jrh7-mhhx-6h88",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39163"
      ],
      "details": "### Impact\nUnauthorised users can access the name, avatar, topic and number of members of a room if they know the ID of the room. This vulnerability is limited to homeservers where:\n- the vulnerable homeserver is in the room; and\n- untrusted users are permitted to create groups (communities).\n\nBy default, only homeserver administrators can create groups. However, homeserver administrators can already access this information in the database or using the admin API. As a result, only homeservers where the configuration setting `enable_group_creation` has been set to `true` are impacted.\n\n### Patches\nServer administrators should upgrade to 1.41.1 or higher.\n\n### Workarounds\nServer administrators can set `enable_group_creation` to `false` in their homeserver configuration (this is the default value) to prevent creation of groups by non-administrators.\n\nAdministrators that are using a reverse proxy could, with partial loss of group functionality, block the following endpoints:\n* `/_matrix/client/r0/groups/{group_id}/rooms`\n* `/_matrix/client/unstable/groups/{group_id}/rooms`\n\n### References\nn/a\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.\n",
      "fixed_in": [
        "1.41.1"
      ],
      "id": "GHSA-jj53-8fmw-f2w2",
      "link": "https://osv.dev/vulnerability/GHSA-jj53-8fmw-f2w2",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21273"
      ],
      "details": "### Impact\nRequests to user provided domains were not restricted to external IP addresses when calculating the key validity for third-party invite events and sending push notifications. This could cause Synapse to make requests to internal infrastructure. The type of request was not controlled by the user, although limited modification of request bodies was possible.\n\nFor the most thorough protection server administrators should remove the deprecated `federation_ip_range_blacklist` from their settings after upgrading to Synapse v1.25.0 which will result in Synapse using the improved default IP address restrictions. See the new `ip_range_blacklist` and `ip_range_whitelist` settings if more specific control is necessary.\n\n### Patches\nIssue is resolved by #8821. Further improvements to protect homeservers by default were made in #8870 and #8954.\n\n### Workarounds\nRequests to internal IP addresses could be blocked at the system or network level.",
      "fixed_in": [
        "1.25.0"
      ],
      "id": "GHSA-v936-j8gp-9q3p",
      "link": "https://osv.dev/vulnerability/GHSA-v936-j8gp-9q3p",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21392"
      ],
      "details": "### Impact\nRequests to user provided domains were not restricted to external IP addresses when transitional IPv6 addresses were used. Outbound requests to federation, identity servers, when calculating the key validity for third-party invite events, sending push notifications, and generating URL previews are affected. This could cause Synapse to make requests to internal infrastructure on dual-stack networks.\n\n### Patches\nThis issue is fixed by #9240.\n\n### Workarounds\nOutbound requests to the following address ranges can be blocked by a firewall, if unused for internal communication between systems:\n\n* `::ffff/80`\n* `::0000/80` (note that this IP range is considered deprecated by the IETF)\n* `2002::/16` (note that this IP range is considered deprecated by the IETF)\n\n### References\n* [RFC3056](https://tools.ietf.org/html/rfc3056)\n* [RFC4291](https://tools.ietf.org/html/rfc4291)",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "GHSA-5wrh-4jwv-5w78",
      "link": "https://osv.dev/vulnerability/GHSA-5wrh-4jwv-5w78",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21333"
      ],
      "details": "### Impact\nThe notification emails sent for notifications for missed messages or for an expiring account are subject to HTML injection. In the case of the notification for missed messages, this could allow an attacker to insert forged content into the email.\n\nThe account expiry feature is not enabled by default and the HTML injection is not controllable by an attacker.\n\n### Patches\nThis issue is fixed in #9200.\n\n### Workarounds\nFor the missed messages notifications:\n\nThe `notif.html`, `notif_mail.html`, and `room.html` templates can be overridden with custom templates that manually escapes the variables using [JInja2's `escape` filter](https://jinja.palletsprojects.com/en/2.11.x/templates/#escape). See the `email.template_dir` setting.\n\nFor the account expiry notifications:\n\n1. Account expiry can be disabled via the `account_validity.enabled` setting.\n\n2. The `notice_expiry.html` template can be overridden with a custom template that manually escapes the variables using [JInja2's `escape` filter](https://jinja.palletsprojects.com/en/2.11.x/templates/#escape). See the `email.template_dir` setting.",
      "fixed_in": [
        "1.27.0"
      ],
      "id": "GHSA-c5f8-35qr-q4fm",
      "link": "https://osv.dev/vulnerability/GHSA-c5f8-35qr-q4fm",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-21394"
      ],
      "details": "### Impact\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\nThe issue is fixed by #9321.\n\n### Workarounds\nDepending on the needs and configuration of the homeserver a few options are available:\n\n1. Using email as third-party identifiers be disabled by not configuring the `email` setting.\n2. Using phone numbers as third-party identifiers can be disabled by ensuring that `account_threepid_delegates.msisdn` is not configured.\n3. Additionally, the affected endpoint patterns can be blocked at a reverse proxy:\n\n    * `^/_matrix/client/(r0|unstable)/register/email`\n    * `^/_matrix/client/(r0|unstable)/register/msisdn`\n    * `^/_matrix/client/(r0|unstable)/account/password`\n    * `^/_matrix/client/(r0|unstable)/account/3pid`",
      "fixed_in": [
        "1.28.0"
      ],
      "id": "GHSA-w9fg-xffh-p362",
      "link": "https://osv.dev/vulnerability/GHSA-w9fg-xffh-p362",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-41952"
      ],
      "details": "### Impact\n\nSynapse before 1.52.0 with URL preview functionality enabled will attempt to generate URL previews for media stream URLs without properly limiting connection time. Connections will only be terminated after `max_spider_size` (default: 10M) bytes have been downloaded, which can in some cases lead to long-lived connections towards the streaming media server (for instance, Icecast).\n\nThis can cause excessive traffic and connections toward such servers if their stream URL is, for example, posted to a large room with many Synapse instances with URL preview enabled.\n\n### Patches\n1.52.0 implements a timeout mechanism which will terminate URL preview connections after 30 seconds. Since generating URL previews for media streams is not supported and always fails, 1.53.0 additionally implements an allow list for content types for which Synapse will even attempt to generate a URL preview.\n\nWe recommend upgrading to 1.53.0 to fully resolve the issue.\n\n### Workarounds\nTurn off URL preview functionality by setting `url_preview_enabled: false` in the Synapse configuration file.\n\n### References\n- Patch (timeout): https://github.com/matrix-org/synapse/pull/11784\n- Patch (content type allow list): https://github.com/matrix-org/synapse/pull/11936\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.\n",
      "fixed_in": [
        "1.53.0"
      ],
      "id": "GHSA-4822-jvwx-w47h",
      "link": "https://osv.dev/vulnerability/GHSA-4822-jvwx-w47h",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-31052"
      ],
      "details": "### Impact\n\nURL previews of some web pages can exhaust the available stack space for the Synapse process due to unbounded recursion.\nThis is sometimes recoverable and leads to an error for the request causing the problem, but in other cases the Synapse process may crash altogether.\n\nIt is possible to exploit this maliciously, either by malicious users on the homeserver, or by remote users sending URLs that a local user's client may automatically request a URL preview for.\nRemote users are not able to exploit this directly, because [the URL preview endpoint is authenticated](https://spec.matrix.org/v1.2/client-server-api/#get_matrixmediav3preview_url).\n\n### Am I affected?\n\n* deployments with `url_preview_enabled: false` set in configuration are not affected.\n* deployments with `url_preview_enabled: true` set in configuration **are** affected.\n* deployments with no configuration value set for `url_preview_enabled` are not affected, because the default is `false`.\n\n### Patches\n\nAdministrators of homeservers with URL previews enabled are advised to upgrade to v1.61.1 or higher.\n\n### Workarounds\n\n* URL previews can be disabled in the configuration file by setting `url_preview_enabled: false`.\n* Deployments using workers can choose to offload URL previews to one or more dedicated worker(s), ensuring that a process crash does not disrupt other functionality of Synapse.\n\n### For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).\n",
      "fixed_in": [
        "1.61.1"
      ],
      "id": "GHSA-22p3-qrh9-cx32",
      "link": "https://osv.dev/vulnerability/GHSA-22p3-qrh9-cx32",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-31052",
        "GHSA-22p3-qrh9-cx32"
      ],
      "details": "Synapse is an open source home server implementation for the Matrix chat network. In versions prior to 1.61.1 URL previews of some web pages can exhaust the available stack space for the Synapse process due to unbounded recursion. This is sometimes recoverable and leads to an error for the request causing the problem, but in other cases the Synapse process may crash altogether. It is possible to exploit this maliciously, either by malicious users on the homeserver, or by remote users sending URLs that a local user's client may automatically request a URL preview for. Remote users are not able to exploit this directly, because the URL preview endpoint is authenticated. Deployments with `url_preview_enabled: false` set in configuration are not affected. Deployments with `url_preview_enabled: true` set in configuration **are** affected. Deployments with no configuration value set for `url_preview_enabled` are not affected, because the default is `false`. Administrators of homeservers with URL previews enabled are advised to upgrade to v1.61.1 or higher. Users unable to upgrade should set `url_preview_enabled` to false.",
      "fixed_in": [
        "1.61.1"
      ],
      "id": "PYSEC-2022-224",
      "link": "https://osv.dev/vulnerability/PYSEC-2022-224",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-31152"
      ],
      "details": "### Impact\n\nThe Matrix specification specifies a list of [event authorization rules](https://spec.matrix.org/v1.3/rooms/v10/#authorization-rules) which must be checked when determining if an event should be accepted into a room.\n\nIn versions of Synapse up to and including v1.61, some of these rules are not correctly applied. An attacker could craft events which would be accepted by Synapse but not a spec-conformant server, potentially causing divergence in the room state between servers.\n\n### Patches\n\nAdministrators of homeservers with federation enabled are advised to upgrade to v1.62.0 or higher.\n\n### Workarounds\n\n * Federation can be disabled by setting [`federation_domain_whitelist`](https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html#federation_domain_whitelist) to an empty list (`[]`).\n\n### References\n\n * https://github.com/matrix-org/synapse/pull/13087\n * https://github.com/matrix-org/synapse/pull/13088\n\n### For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).",
      "fixed_in": [
        "1.62"
      ],
      "id": "GHSA-jhjh-776m-4765",
      "link": "https://osv.dev/vulnerability/GHSA-jhjh-776m-4765",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-31152",
        "GHSA-jhjh-776m-4765"
      ],
      "details": "Synapse is an open-source Matrix homeserver written and maintained by the Matrix.org Foundation. The Matrix specification specifies a list of [event authorization rules](https://spec.matrix.org/v1.2/rooms/v9/#authorization-rules) which must be checked when determining if an event should be accepted into a room. In versions of Synapse up to and including version 1.61.0, some of these rules are not correctly applied. An attacker could craft events which would be accepted by Synapse but not a spec-conformant server, potentially causing divergence in the room state between servers. Administrators of homeservers with federation enabled are advised to upgrade to version 1.62.0 or higher. Federation can be disabled by setting [`federation_domain_whitelist`](https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html#federation_domain_whitelist) to an empty list (`[]`) as a workaround.",
      "fixed_in": [
        "1.62.0"
      ],
      "id": "PYSEC-2022-262",
      "link": "https://osv.dev/vulnerability/PYSEC-2022-262",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}