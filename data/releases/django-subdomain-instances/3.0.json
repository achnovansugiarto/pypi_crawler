{
  "info": {
    "author": "mySociety",
    "author_email": "matthew@mysociety.org",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Instances\n=========\n\nA simple way of allowing subdomains to be served by the same project, and\nassociating objects with particular subdomains.\n\nInstallation\n------------\n\n1. By default, it will work if you use 127.0.0.1.nip.io (a domain that points\n   to localhost) on port 80. To use a different base domain/port, set the\n   `BASE_HOST` and/or `BASE_PORT` variables.\n\n2. Add `instances` to your `INSTALLED_APPS` and migrate to get the Instance\n   database table.\n\n3. Add Instance objects, with the label being the subdomain you wish to use.\n   Optionally, associate users with these instances.\n\n4. Add `instances.middleware.MultiInstanceMiddleware` to your middleware; it\n   must come after AuthenticationMiddleware. Now\n   if you go to `<subdomain>.<BASE_HOST>`, request.instance will be set to the\n   matching Instance object. If there's a subdomain given but no match, it will\n   redirect to `BASE_HOST`.\n\nRequests to a subdomain will use your `ROOT_URLCONF` file; requests to the\n`BASE_HOST` will use `ROOT_URLCONF_HOST` or `instances.urls` by default (which\njust has one page that lists all instances)..\n\nInstance edit form\n------------------\n\nIn your ROOT_URLCONF, use a line like the following to have a page for editing\nthe title and description of an instance:\n\n`url(r'^instance/edit$', InstanceUpdate.as_view(), name='instance-edit')`\n\nAssociating models\n------------------\n\nTo have a model's objects be associated with an instance, mix in InstanceMixin,\nand if you have a custom manager make it a subclass of InstanceManager. This\nadds an `instance` field, and provides a `for_instance` manager method to\nreturn all the objects in the given instance.\n\nMix in InstanceViewMixin to any display class-based view to restrict the\ndefault queryset to the request's instance. Add InstanceFormMixin to any\ncreate/update view to store the current instance upon save, and allow editing\nonly by those users associated with the instance. Remember to exclude\n`instance` from any model form, as it won't be seen.\n\nRunning tests\n-------------\n\n.. code-block::\n\n    pip install .\n    python runtests.py\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mysociety/django-subdomain-instances",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-subdomain-instances",
    "package_url": "https://pypi.org/project/django-subdomain-instances/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-subdomain-instances/",
    "project_urls": {
      "Homepage": "https://github.com/mysociety/django-subdomain-instances"
    },
    "release_url": "https://pypi.org/project/django-subdomain-instances/3.0/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "A way of allowing subdomains to be served by the same project, and associating objects with particular subdomains.",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5519201,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a279da6759db8cb4e59322e45d5c7eb247e2d24684c8876fa169ef251585c228",
        "md5": "729fcf14a219b8e85f6831d6bab742e9",
        "sha256": "efe9589b0cd6e4227470e06ebfa716e669ba0bce2e31b658d610a3434d5f6a06"
      },
      "downloads": -1,
      "filename": "django_subdomain_instances-3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "729fcf14a219b8e85f6831d6bab742e9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 15047,
      "upload_time": "2019-04-09T15:57:02",
      "upload_time_iso_8601": "2019-04-09T15:57:02.545565Z",
      "url": "https://files.pythonhosted.org/packages/a2/79/da6759db8cb4e59322e45d5c7eb247e2d24684c8876fa169ef251585c228/django_subdomain_instances-3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b27018556edcff549649e1385c4698b6fafb4e7f6257b785656f71a683e513f",
        "md5": "d97e97e2fb7f9d3132c8df184452936d",
        "sha256": "5dcabb7728fab9626a5231a27db6ad1a13d0a6f1b8c79557e54ef99fca77116f"
      },
      "downloads": -1,
      "filename": "django-subdomain-instances-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d97e97e2fb7f9d3132c8df184452936d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9161,
      "upload_time": "2019-04-09T15:57:05",
      "upload_time_iso_8601": "2019-04-09T15:57:05.596295Z",
      "url": "https://files.pythonhosted.org/packages/9b/27/018556edcff549649e1385c4698b6fafb4e7f6257b785656f71a683e513f/django-subdomain-instances-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}