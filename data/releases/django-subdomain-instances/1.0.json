{
  "info": {
    "author": "mySociety",
    "author_email": "matthew@mysociety.org",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django"
    ],
    "description": "Instances\n=========\n\nA simple way of allowing subdomains to be served by the same project, and\nassociating objects with particular subdomains.\n\nInstallation\n------------\n\n1. By default, it will work if you use 127.0.0.1.xip.io (a domain that points\n   to localhost) on port 80. To use a different base domain/port, set the\n   `BASE_HOST` and/or `BASE_PORT` variables.\n\n2. Add `instances` to your `INSTALLED_APPS` and migrate to get the Instance\n   database table.\n\n3. Add Instance objects, with the label being the subdomain you wish to use.\n   Optionally, associate users with these instances.\n\n4. Add `instances.middleware.MultiInstanceMiddleware` to your middleware; it\n   must come after AuthenticationMiddleware. Now\n   if you go to `<subdomain>.<BASE_HOST>`, request.instance will be set to the\n   matching Instance object. If there's a subdomain given but no match, it will\n   redirect to `BASE_HOST`.\n\nRequests to a subdomain will use your `ROOT_URLCONF` file; requests to the\n`BASE_HOST` will use `ROOT_URLCONF_HOST` or `instances.urls` by default (which\njust has one page that lists all instances)..\n\nInstance edit form\n------------------\n\nIn your ROOT_URLCONF, use a line like the following to have a page for editing\nthe title and description of an instance:\n\n`url(r'^instance/edit$', InstanceUpdate.as_view(), name='instance-edit')`\n\nAssociating models\n------------------\n\nTo have a model's objects be associated with an instance, mix in InstanceMixin,\nand if you have a custom manager make it a subclass of InstanceManager. This\nadds an `instance` field, and provides a `for_instance` manager method to\nreturn all the objects in the given instance.\n\nMix in InstanceViewMixin to any display class-based view to restrict the\ndefault queryset to the request's instance. Add InstanceFormMixin to any\ncreate/update view to store the current instance upon save, and allow editing\nonly by those users associated with the instance. Remember to exclude\n`instance` from any model form, as it won't be seen.\n\nRunning tests\n-------------\n\n.. code-block::\n\n    pip install .\n    python runtests.py",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mysociety/django-subdomain-instances",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-subdomain-instances",
    "package_url": "https://pypi.org/project/django-subdomain-instances/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-subdomain-instances/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/mysociety/django-subdomain-instances"
    },
    "release_url": "https://pypi.org/project/django-subdomain-instances/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A way of allowing subdomains to be served by the same project, and associating objects with particular subdomains.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5519201,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9509fe40cd3030db44ddd67c74e874fc4209d8061dfd740a85b06d377844947",
        "md5": "2abb40fd6536e2ce4df32faeae865efe",
        "sha256": "f184ca045f658cee6736f52ae97b51d1c05e917a71b9a6d5413775bffdca2214"
      },
      "downloads": -1,
      "filename": "django_subdomain_instances-1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2abb40fd6536e2ce4df32faeae865efe",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 19209,
      "upload_time": "2015-11-13T16:25:48",
      "upload_time_iso_8601": "2015-11-13T16:25:48.650251Z",
      "url": "https://files.pythonhosted.org/packages/a9/50/9fe40cd3030db44ddd67c74e874fc4209d8061dfd740a85b06d377844947/django_subdomain_instances-1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "111f0f3e46c78997d3d2c266de8f33763bdf91553e40445fad25c290599803be",
        "md5": "31215c67ed21d2ebd5ed2e0f53eac38f",
        "sha256": "cce8513df5a6117ac68e7eea47d01f25a78855518fe6263da6278421d034eebb"
      },
      "downloads": -1,
      "filename": "django-subdomain-instances-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "31215c67ed21d2ebd5ed2e0f53eac38f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9359,
      "upload_time": "2015-11-13T16:25:43",
      "upload_time_iso_8601": "2015-11-13T16:25:43.784877Z",
      "url": "https://files.pythonhosted.org/packages/11/1f/0f3e46c78997d3d2c266de8f33763bdf91553e40445fad25c290599803be/django-subdomain-instances-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}