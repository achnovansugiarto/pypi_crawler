{
  "info": {
    "author": "Andrey Fedoseev",
    "author_email": "andrey.fedoseev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "=========================\r\nDjango Static Precompiler\r\n=========================\r\n\r\nDjango Static Precompiler provides template tags to compile CoffeeScript, SASS / SCSS, LESS, and Babel.\r\nIt works with both inline code and external files.\r\n\r\n.. image:: https://circleci.com/gh/andreyfedoseev/django-static-precompiler.svg?style=shield\r\n    :target: https://circleci.com/gh/andreyfedoseev/django-static-precompiler\r\n    :alt: Build Status\r\n\r\n.. image:: http://codecov.io/github/andreyfedoseev/django-static-precompiler/coverage.svg?branch=master\r\n    :target: http://codecov.io/github/andreyfedoseev/django-static-precompiler?branch=master\r\n    :alt: Code Coverage\r\n\r\n.. image:: https://codeclimate.com/github/andreyfedoseev/django-static-precompiler/badges/gpa.svg\r\n    :target: https://codeclimate.com/github/andreyfedoseev/django-static-precompiler\r\n    :alt: Code Climate\r\n\r\n.. image:: https://readthedocs.org/projects/django-static-precompiler/badge/\r\n    :target: http://django-static-precompiler.readthedocs.org/\r\n    :alt: Documentation\r\n\r\n.. image:: https://badges.gitter.im/Join Chat.svg\r\n    :target: https://gitter.im/andreyfedoseev/django-static-precompiler?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n    :alt: Gitter\r\n\r\nInstallation\r\n============\r\n\r\n1. Add \"static_precompiler\" to INSTALLED_APPS setting.\r\n2. Initialize DB:\r\n\r\n   * On Django < 1.7 run ``syncdb`` or ``migrate static_precompiler`` if you use South (1.0 is required).\r\n   * On Django >= 1.7 run ``migrate static_precompiler``.\r\n\r\n3. Make sure that you have necessary compilers installed.\r\n4. Optionally, you can specify the full path to compilers (see below).\r\n5. In case you use Django’s staticfiles contrib app you have to add static-precompiler’s file finder to the ``STATICFILES_FINDERS`` setting, for example::\r\n\r\n    STATICFILES_FINDERS = (\r\n        'django.contrib.staticfiles.finders.FileSystemFinder',\r\n        'django.contrib.staticfiles.finders.AppDirectoriesFinder',\r\n        # other finders..\r\n        'static_precompiler.finders.StaticPrecompilerFinder',\r\n    )\r\n\r\nNote that by default compiled files are saved into ``COMPILED`` folder under your ``STATIC_ROOT`` (or ``MEDIA_ROOT`` if you have no ``STATIC_ROOT`` in your settings).\r\nYou can change this folder with ``STATIC_PRECOMPILER_ROOT`` and ``STATIC_PRECOMPILER_OUTPUT_DIR`` settings.\r\n\r\nNote that all relative URLs in your stylesheets are converted to absolute URLs using your ``STATIC_URL`` setting.\r\n\r\n``compile`` template filter\r\n===========================\r\n\r\n``compile`` is a template filter that allows to compile any source file supported by compilers configured with\r\n``STATIC_PRECOMPILER_COMPILERS`` settings.\r\n\r\nExample Usage\r\n-------------\r\n\r\n::\r\n\r\n  {% load compile_static %}\r\n  {% load static %}\r\n\r\n  <script src=\"{% static \"path/to/script.coffee\"|compile %}\"></script>\r\n  <link rel=\"stylesheet\" href=\"{% static \"path/to/styles1.less\"|compile %}\" />\r\n  <link rel=\"stylesheet\" href=\"{% static \"path/to/styles2.scss\"|compile %}\" />\r\n\r\nrenders to::\r\n\r\n  <script src=\"/static/COMPILED/path/to/script.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"/static/COMPILED/path/to/styles1.css\" />\r\n  <link rel=\"stylesheet\" href=\"/static/COMPILED/path/to/styles2.css\" />\r\n\r\n{% inlinecompile %} tag\r\n=======================\r\n\r\nCompiles everything between ``{% inlinecompile %}`` and ``{% endinlinecompile %}`` with compiler specified by name.\r\nCompiler must be specified in ``STATIC_PRECOMPILER_COMPILERS`` setting. Names for default compilers are:\r\n\r\n* ``coffeescript``\r\n* ``babel``\r\n* ``less``\r\n* ``sass``\r\n* ``scss``\r\n* ``stylus``\r\n\r\nExample Usage\r\n-------------\r\n\r\n::\r\n\r\n  {% load compile_static %}\r\n\r\n  <script type=\"text/javascript\">\r\n    {% inlinecompile \"coffeescript\" %}\r\n      console.log \"Hello, World!\"\r\n    {% endinlinecompile %}\r\n  </script>\r\n\r\nrenders to::\r\n\r\n  <script type=\"text/javascript\">\r\n    (function() {\r\n      console.log(\"Hello, World!\");\r\n    }).call(this);\r\n  </script>\r\n\r\nGeneral settings\r\n================\r\n\r\n``STATIC_PRECOMPILER_COMPILERS``\r\n  List of enabled compilers. You can modify it to enable your custom compilers. Default::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        'static_precompiler.compilers.CoffeeScript',\r\n        'static_precompiler.compilers.Babel',\r\n        'static_precompiler.compilers.SASS',\r\n        'static_precompiler.compilers.SCSS',\r\n        'static_precompiler.compilers.LESS',\r\n        'static_precompiler.compilers.Stylus',\r\n    )\r\n\r\n  You can specify compiler options using the following format::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.CoffeeScript', {\"executable\": \"/usr/bin/coffeescript\"}),\r\n        ('static_precompiler.compilers.SCSS', {\"compass_enabled\": True}),\r\n    )\r\n\r\n\r\n``STATIC_PRECOMPILER_ROOT``\r\n  Controls the absolute file path that compiled files will be written to. Default: ``STATIC_ROOT``.\r\n\r\n``STATIC_PRECOMPILER_OUTPUT_DIR``\r\n  Controls the directory inside ``STATIC_PRECOMPILER_ROOT`` that compiled files will be written to. Default: ``\"COMPILED\"``.\r\n\r\n``STATIC_PRECOMPILER_USE_CACHE``\r\n  Whether to use cache for inline compilation. Default: ``True``.\r\n\r\n``STATIC_PRECOMPILER_CACHE_TIMEOUT``\r\n  Cache timeout for inline styles (in seconds). Default: 30 days.\r\n\r\n``STATIC_PRECOMPILER_MTIME_DELAY``\r\n  Cache timeout for reading the modification time of source files (in seconds). Default: 10 seconds.\r\n\r\n``STATIC_PRECOMPILER_CACHE_NAME``\r\n  Name of the cache to be used. If not specified then the default django cache is used. Default: ``None``.\r\n\r\n``STATIC_PRECOMPILER_PREPEND_STATIC_URL``\r\n  Add ``STATIC_URL`` to the output of template tags and filters. Default: ``False``\r\n\r\n``STATIC_PRECOMPILER_DISABLE_AUTO_COMPILE``\r\n  Disable automatic compilation from template tags or ``compile_static`` utility function. Files are compiled\r\n  only with ``compilestatic`` command (see below). Default:: ``False``\r\n\r\n``STATIC_PRECOMPILER_LIST_FILES``\r\n  Whether or not ``static_precompiler.finders.StaticPrecompilerFinder`` will list compiled files when ``collectstatic``\r\n  command is executed. Set to ``True`` if you want compiled files to be found by ``collectstatic``. Default:: ``False``.\r\n\r\n\r\nCompiler specific settings\r\n==========================\r\n\r\nCoffeeScript\r\n------------\r\n\r\n``executable``\r\n  Path to CoffeeScript compiler executable. Default: ``\"coffee\"``.\r\n\r\nExample::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.CoffeeScript', {\"executable\": \"/usr/bin/coffee\"}),\r\n    )\r\n\r\n\r\nBabel\r\n-----\r\n\r\n``executable``\r\n  Path to Babel compiler executable. Default: ``\"babel\"``.\r\n\r\nExample::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.Babel', {\"executable\": \"/usr/bin/babel\"}),\r\n    )\r\n\r\n\r\nSASS / SCSS\r\n-----------\r\n\r\n``executable``\r\n  Path to SASS compiler executable. Default: \"sass\".\r\n\r\n``compass_enabled``\r\n  Boolean. Wheter to use compass or not. Compass must be installed in your system. Run \"sass --compass\" and if no error is shown it means that compass is installed.\r\n\r\nExample::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.SCSS', {\"executable\": \"/usr/bin/sass\", \"compass_enabled\": True}),\r\n    )\r\n\r\n\r\nLESS\r\n----\r\n\r\n``executable``\r\n  Path to LESS compiler executable. Default: ``\"lessc\"``.\r\n\r\nExample::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.LESS', {\"executable\": \"/usr/bin/lessc\"),\r\n    )\r\n\r\n\r\nStylus\r\n------\r\n\r\n``executable``\r\n  Path to Stylus compiler executable. Default: ``\"stylus\"``.\r\n\r\nExample::\r\n\r\n    STATIC_PRECOMPILER_COMPILERS = (\r\n        ('static_precompiler.compilers.Stylus', {\"executable\": \"/usr/bin/stylus\"),\r\n    )\r\n\r\n\r\nUsage with forms media\r\n======================\r\n\r\nIf you want to use ``static_precompiler`` in form media definitions, you can use the following approach::\r\n\r\n  from django import forms\r\n  from static_precompiler.utils import compile_static\r\n\r\n  class MyForm(forms.Form):\r\n\r\n      @property\r\n      def media(self):\r\n          return forms.Media(\r\n              css={\"all\": (\r\n                  compile_static(\"styles/myform.scss\"),\r\n              )},\r\n              js=(\r\n                  compile_static(\"scripts/myform.coffee\"),\r\n              )\r\n          )\r\n\r\n\r\n``compilestatic`` management command\r\n====================================\r\n\r\nDjango Static Precompiler includes a management command ``compilestatic``. If will scan your static files for source\r\nfiles and compile all of them.\r\n\r\nYou can use this command in conjunction with ``STATIC_PRECOMPILER_DISABLE_AUTO_COMPILE`` setting if you use custom\r\n``STATICFILES_STORAGE`` such as S3 or some CDN. In that case you can should run ``compilestatic`` every time when your\r\nsource files change and then run ``collectstatic``.\r\n\r\nYou can run ``compilestatic`` in watch mode (``--watch`` option). In watch mode it will monitor the changes in your\r\nsource files and re-compile them on the fly. It can be handy if you use tools such as\r\n`LiveReload <http://livereload.com/>`_.\r\n\r\nYou should install `Watchdog <http://pythonhosted.org/watchdog/>`_ to use watch mode.\r\n\r\n\r\nTroubleshooting\r\n===============\r\n\r\nIf you get ``[Errno 2] No such file or directory`` make sure that you have the required compiler installed. For all\r\ncompilers you can specify the path to executable file using the ``executable`` option, see examples above.\r\n\r\nIf you run ``migrate`` and get ``ImportError: cannot import name migrations`` then most likely you use Django < 1.7 and\r\nSouth < 1.0. You should either upgrade to Django 1.7+ or use South 1.0.\r\n\r\n\r\n=======\r\nChanges\r\n=======\r\n\r\n1.0\r\n===\r\n\r\n- Add ``compile`` template filter\r\n- Deprecate ``{% compile %}`` template tag\r\n- **The following compiler specific template tags are REMOVED:**\r\n\r\n  * ``{% coffeescript %}``\r\n  * ``{% inlinecoffeescript %}``\r\n  * ``{% sass %}``\r\n  * ``{% inlinesass %}``\r\n  * ``{% scss %}``\r\n  * ``{% inlinescss %}``\r\n  * ``{% less %}``\r\n  * ``{% inlineless %}``\r\n- Add `Stylus <http://learnboost.github.io/stylus/>`_ compiler\r\n\r\n0.9\r\n===\r\n\r\n- Compiler options are specified with ``STATIC_PRECOMPILER_COMPILERS`` setting.\r\n- **The following settings are DEPRECATED:**\r\n\r\n  * ``COFFEESCRIPT_EXECUTABLE``\r\n  * ``SCSS_EXECUTABLE``\r\n  * ``SCSS_USE_COMPASS``\r\n  * ``LESS_EXECUTABLE``\r\n- ``-C`` (``--no-cache``) flag is removed from SASS/SCSS compilers\r\n- Add ``STATIC_PRECOMPILER_LIST_FILES`` setting\r\n- Add `Babel <https://babeljs.io>`_ compiler\r\n\r\n0.8\r\n===\r\n\r\n- Add ``{% inlinecompile %}`` template tag\r\n- **The following compiler specific template tags are DEPRECATED:**\r\n\r\n  * ``{% coffeescript %}``\r\n  * ``{% inlinecoffeescript %}``\r\n  * ``{% sass %}``\r\n  * ``{% inlinesass %}``\r\n  * ``{% scss %}``\r\n  * ``{% inlinescss %}``\r\n  * ``{% less %}``\r\n  * ``{% inlineless %}``\r\n- Use Django 1.7 migrations\r\n- BUGFIX: fix sass imports from scss and vice versa\r\n- BUGFIX: make sure that ``compilestatic`` works if ``watchdog`` isn't installed.\r\n- BUGFIX: fix compilation error when dependency file was removed or renamed\r\n\r\n0.7\r\n===\r\n\r\n- Add ``compilestatic`` management command (replaces ``static_precompiler_watch``)\r\n- Add ``STATIC_PRECOMPILER_DISABLE_AUTO_COMPILE`` to settings\r\n- Add ``STATIC_PRECOMPILER_CACHE_NAME`` to settings\r\n- Bugfixes\r\n\r\n0.6\r\n===\r\n\r\n- Add ``STATIC_PRECOMPILER_PREPEND_STATIC_URL`` to settings\r\n- Add ``{% compile %}`` template tag\r\n\r\n0.5.3\r\n=====\r\n\r\n- Update the parsing of ``@import`` statements. Fix the bug with URLs containing commas.\r\n\r\n0.5.2\r\n=====\r\n\r\n- ``static_precompiler_watch``: watch for changes in all directories handled by static finders, not only ``STATIC_ROOT``\r\n- ``static_precompiler_watch``: add ``--no-initial-scan`` option\r\n\r\n0.5.1\r\n=====\r\n\r\n- Fix SCSS compilation error when importing Compass styles\r\n\r\n0.5\r\n===\r\n\r\n- Add Python 3 support\r\n\r\n0.4\r\n===\r\n\r\n- Add ``compile_static`` and ``compile_static_lazy`` utility functions.\r\n\r\n0.3\r\n===\r\n\r\n- Bug fixes\r\n- Add Windows compatibility\r\n\r\n\r\n0.2\r\n===\r\n\r\n- Reduce the max length of varchar fields in Dependency model to meet MySQL limitations\r\n- static_precompiler_watch: don't fall with exception on compilation errors or if\r\n  source file is not found\r\n\r\n0.1\r\n===\r\n\r\n- Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andreyfedoseev/django-static-precompiler",
    "keywords": "sass,scss,less,stylus,css,coffeescript,javascript,babel",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-static-precompiler",
    "package_url": "https://pypi.org/project/django-static-precompiler/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-static-precompiler/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/andreyfedoseev/django-static-precompiler"
    },
    "release_url": "https://pypi.org/project/django-static-precompiler/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django template tags to compile all kinds of static files (SASS, LESS, Stylus, CoffeeScript, Babel).",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16238960,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "649c1c9dba3eea867466d269df2cf07296fbc8b38fdca9a5f182c8ef9a88c190",
        "md5": "fe166273937de1872fa53dbc14098da4",
        "sha256": "412df048f00d75b322dbb55303366e49ad0a6bf93a09556cd955ec2c708f0c39"
      },
      "downloads": -1,
      "filename": "django-static-precompiler-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fe166273937de1872fa53dbc14098da4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24534,
      "upload_time": "2015-09-21T17:15:18",
      "upload_time_iso_8601": "2015-09-21T17:15:18.347908Z",
      "url": "https://files.pythonhosted.org/packages/64/9c/1c9dba3eea867466d269df2cf07296fbc8b38fdca9a5f182c8ef9a88c190/django-static-precompiler-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}