{
  "info": {
    "author": "Martin Bierbaum",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DJANGO-TEX\n\nDjango-tex is a simple Django app to render LaTeX templates and compile\nthem into PDF files.\n\nDjango-tex requires a local LaTeX installation and uses the jinja2 \ntemplating engine for template rendering.\n\n## Installation\n\n`django-tex` is available on [pypi.org](https://pypi.org/project/django-tex/). It can be installed by:\n\n```pip install django_tex```\n\n## Quick start\n\n1. Add \"django_tex\" to your `INSTALLED_APPS` setting:\n\n    ```python\n    INSTALLED_APPS = [\n        ...\n        'django_tex',\n    ]\n    ```\n\n2. Configure a template engine named `tex` in settings.py:\n\n    ```python\n    TEMPLATES = [\n        {\n            'NAME': 'tex',\n            'BACKEND': 'django_tex.engine.TeXEngine', \n            'APP_DIRS': True,\n        },\n    ]\n    ```\n\n3. Create a LaTeX template in your template directory:\n\n    ```tex\n    # test.tex\n    \\documentclass{article}\n\n    \\begin{document}\n\n    \\section{ {{- foo -}} }\n\n    \\end{document}\n    ```\n\n4. Use \"compile_template_to_pdf\" in your code to get the PDF file as a bytes object:\n\n    ```python\n    from django_tex.core import compile_template_to_pdf\n\n    template_name = 'test.tex'\n    context = {'foo': 'Bar'}\n    PDF = compile_template_to_pdf(template_name, context)\n    ```\n\n    Or use `render_to_pdf` to generate a HTTPResponse containing the PDF file:\n\n    ```python\n    from django_tex.views import render_to_pdf\n\n    def view(request):\n        template_name = 'test.tex'\n        context = {'foo': 'Bar'}\n        return render_to_pdf(request, template_name, context, filename='test.pdf')\n    ```\n\n## Some notes on usage\n\n### Latex binary\n\nThe default LaTeX interpreter is set to `lualatex`. This can be changed by the setting\n`LATEX_INTERPRETER`, for instance: `LATEX_INTERPRETER = 'pdflatex'`. Of course, the interpreter needs\nto be installed on your system for `django-tex` to work properly.\n\n### Whitespace control\n\nSince django-tex uses jinja, you can use jinja's whitespace control in \nLaTeX templates. For example, `\\section{ {{ foo }} }` would be rendered as \n`\\section{ Bar }` with the above context; `\\section{ {{- foo -}} }`, however, \ngets rendered nicely as `\\section{Bar}`.\n\n### Built-in filters\n\nDjango's built-in filters are available. So you can use `{{ foo|date('d. F Y') }}` \nto get `1. Januar 2018`, for instance.\n\nFurther, django-tex adds the custom filter `localize` to the jinja environment.\nThis runs its input through `django.utils.formats.localize_input` to\ncreate a localized representation. The output depends on the `USE_L10N` and `LANGUAGE_CODE`\nsettings. Use the filter like this: `{{ foo|localize }}`.\n\nIf you want to convert linebreaks into LaTeX linebreaks (`\\\\`), use the `linebreaks` filter (`{{ foo | linebreaks }}`).\n\n### Custom filters\n\nCustom filters can be defined as explained in  the jinja documentation [here](http://jinja.pocoo.org/docs/2.10/api/#custom-filters). For example, the following filter formats a\n`datetime.timedelta` object as a hh:mm string:\n\n```python\ndef hhmm_format(value):\n    total_seconds = value.total_seconds()\n    hours, remainder = divmod(total_seconds, 3600)\n    minutes, seconds = divmod(remainder, 60)\n    return '{:n}:{:02n}'.format(hours, minutes)\n```\n\nThe filter has to be added to a custom environment and the `django-tex` templating engine has to be made aware\nof the environment. This can be achieved, for example, by defining a custom environment callable in an `environment.py` module in your app:\n\n```python\n# environment.py\nfrom django_tex.environment import environment\n\ndef hhmm_format(value):\n    pass # as above\n\ndef my_environment(**options):\n    env = environment(**options)\n    env.filters.update({\n        'hhmm_format': hhmm_format\n    })\n    return env\n```\n\n... and passing the dotted path to `my_environment` to the `TEMPLATES` settings:\n\n```python\n# settings.py\n\nTEMPLATES = [\n    {\n        'NAME': 'tex',\n        'BACKEND': 'django_tex.engine.TeXEngine', \n        'APP_DIRS': True,\n        'OPTIONS': {\n            'environment': 'myapp.environment.my_environment',\n        }\n    },\n]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/weinbusch/django-tex",
    "keywords": "django latex jinja2",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-tex",
    "package_url": "https://pypi.org/project/django-tex/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-tex/",
    "project_urls": {
      "Homepage": "https://github.com/weinbusch/django-tex"
    },
    "release_url": "https://pypi.org/project/django-tex/1.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6.2",
    "summary": "A simple Django app to render Latex templates and compile them into PDF files.",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12329857,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5de1d940314af683a3d0b3c9821d44102f07aa0a69ee7b0cbdf2f887075b6e9",
        "md5": "a203a9fa9e80a8bc27aa130b13f7db99",
        "sha256": "962c30ae7b605379dc556f5b73382a6ac04196e1e95716b039ffbd14d5ae55fd"
      },
      "downloads": -1,
      "filename": "django-tex-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a203a9fa9e80a8bc27aa130b13f7db99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2",
      "size": 10457,
      "upload_time": "2019-02-04T21:30:20",
      "upload_time_iso_8601": "2019-02-04T21:30:20.955677Z",
      "url": "https://files.pythonhosted.org/packages/e5/de/1d940314af683a3d0b3c9821d44102f07aa0a69ee7b0cbdf2f887075b6e9/django-tex-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}