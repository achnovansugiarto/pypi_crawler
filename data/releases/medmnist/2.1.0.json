{
  "info": {
    "author": "MedMNIST Team",
    "author_email": "jekyll4168@sjtu.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# MedMNIST \n## Project ([Website](https://medmnist.github.io/)) | Dataset ([Zenodo](https://doi.org/10.5281/zenodo.6496656)) | Paper ([arXiv](https://arxiv.org/abs/2110.14795)) | MedMNIST v1 ([ISBI'21](https://medmnist.github.io/v1)) \n[Jiancheng Yang](https://jiancheng-yang.com/), Rui Shi, [Donglai Wei](https://donglaiw.github.io/), Zequan Liu, Lin Zhao, [Bilian Ke](https://scholar.google.com/citations?user=2cX5y8kAAAAJ&hl=en), [Hanspeter Pfister](https://scholar.google.com/citations?user=VWX-GMAAAAAJ&hl=en), [Bingbing Ni](https://scholar.google.com/citations?user=eUbmKwYAAAAJ)\n\n[![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/MedMNIST/MedMNIST/blob/main/examples/getting_started.ipynb)\n\nWe introduce *MedMNIST v2*, a large-scale MNIST-like collection of standardized biomedical images, including 12 datasets for 2D and 6 datasets for 3D. All images are pre-processed into 28x28 (2D) or 28x28x28 (3D) with the corresponding classification labels, so that no background knowledge is required for users. Covering primary data modalities in biomedical images, MedMNIST v2 is designed to perform classification on lightweight 2D and 3D images with various data scales (from 100 to 100,000) and diverse tasks (binary/multi-class, ordinal regression and multi-label). The resulting dataset, consisting of 708,069 2D images and 9,998 3D images in total, could support numerous research / educational purposes in biomedical image analysis, computer vision and machine learning. We benchmark several baseline methods on MedMNIST v2, including 2D / 3D neural networks and open-source / commercial AutoML tools. \n\n![MedMNISTv2_overview](https://raw.githubusercontent.com/MedMNIST/MedMNIST/main/assets/medmnistv2.jpg)\n\nFor more details, please refer to our paper:\n\n**MedMNIST v2: A Large-Scale Lightweight Benchmark for 2D and 3D Biomedical Image Classification** ([arXiv](https://arxiv.org/abs/2110.14795))\n\n# Key Features\n* ***Diverse***: It covers diverse data modalities, dataset scales (from 100 to 100,000), and tasks (binary/multi-class, multi-label, and ordinal regression). It is as diverse as the VDD and MSD to fairly evaluate the generalizable performance of machine learning algorithms in different settings, but both 2D and 3D biomedical images are provided. \n* ***Standardized***: Each sub-dataset is pre-processed into the same format, which requires no background knowledge for users. As an MNIST-like dataset collection to perform classification tasks on small images, it primarily focuses on the machine learning part rather than the end-to-end system. Furthermore, we provide standard train-validation-test splits for all datasets in MedMNIST v2, therefore algorithms could be easily compared. \n* ***Lightweight***: The small size of 28×28 (2D) or 28×28×28 (3D) is friendly to evaluate machine learning algorithms. \n* ***Educational***: As an interdisciplinary research area, biomedical image analysis is difficult to hand on for researchers from other communities, as it requires background knowledge from computer vision, machine learning, biomedical imaging, and clinical science. Our data with the Creative Commons (CC) License is easy to use for educational purposes.\n\nPlease note that this dataset is **NOT** intended for clinical use.\n\n# Code Structure\n* [`medmnist/`](medmnist/):\n    * [`dataset.py`](medmnist/dataset.py): PyTorch datasets and dataloaders of MedMNIST.\n    * [`evaluator.py`](medmnist/evaluator.py): Standardized evaluation functions.\n    * [`info.py`](medmnist/info.py): Dataset information `dict` for each subset of MedMNIST.\n* [`examples/`](examples/):\n    * [`getting_started.ipynb`](examples/getting_started.ipynb): To explore the MedMNIST dataset with jupyter notebook. It is ONLY intended for a quick exploration, i.e., it does not provide full training and evaluation functionalities. \n    * [`getting_started_without_PyTorch.ipynb`](examples/getting_started_without_PyTorch.ipynb): This notebook provides snippets about how to use MedMNIST data (the `.npz` files) without PyTorch.\n* [`setup.py`](setup.py): To install `medmnist` as a module.\n* [EXTERNAL] [`MedMNIST/experiments`](https://github.com/MedMNIST/experiments): training and evaluation scripts to reproduce both 2D and 3D experiments in our paper, including PyTorch, auto-sklearn, AutoKeras and Google AutoML Vision together with their weights ;)\n\n# Installation and Requirements\nSetup the required environments and install `medmnist` as a standard Python package from [PyPI](https://pypi.org/project/medmnist/):\n\n    pip install medmnist\n\nOr install from source:\n\n    pip install --upgrade git+https://github.com/MedMNIST/MedMNIST.git\n\nCheck whether you have installed the latest [version](medmnist/info.py):\n\n    >>> import medmnist\n    >>> print(medmnist.__version__)\n\nThe code requires only common Python environments for machine learning. Basically, it was tested with\n* Python 3 (>=3.6)\n* PyTorch\\==1.3.1\n* numpy\\==1.18.5, pandas\\==0.25.3, scikit-learn\\==0.22.2, Pillow\\==8.0.1, fire, scikit-image\n\nHigher (or lower) versions should also work (perhaps with minor modifications). \n\n# If you use PyTorch\n\n* Great! Our code is designed to work with PyTorch.\n\n* Explore the MedMNIST dataset with jupyter notebook ([`getting_started.ipynb`](examples/getting_started.ipynb)), and train basic neural networks in PyTorch.\n\n\n# If you do not use PyTorch\n\n* Although our code is tested with PyTorch, you are free to parse them with your own code (without PyTorch or even without Python!), as they are only standard NumPy serialization files. It is simple to create a dataset without PyTorch.\n* Go to [`getting_started_without_PyTorch.ipynb`](examples/getting_started_without_PyTorch.ipynb), which provides snippets about how to use MedMNIST data (the `.npz` files) without PyTorch.\n* Simply change the super class of `MedMNIST` from `torch.utils.data.Dataset` to `collections.Sequence`, you will get a standard dataset without PyTorch. Check [`dataset_without_pytorch.py`](examples/dataset_without_pytorch.py) for more details.\n* You still have most functionality of our MedMNIST code ;)\n\n# Dataset\n\nPlease download the dataset(s) via [`Zenodo`](https://doi.org/10.5281/zenodo.6496656). You could also use our code to download automatically by setting `download=True` in [`dataset.py`](medmnist/dataset.py).\n\nThe MedMNIST dataset contains several subsets. Each subset (e.g., `pathmnist.npz`) is comprised of 6 keys: `train_images`, `train_labels`, `val_images`, `val_labels`, `test_images` and `test_labels`.\n* `train_images` / `val_images` / `test_images`: `N` × 28 × 28 for 2D gray-scale datasets, `N` × 28 × 28 × 3 for 2D RGB datasets, `N` × 28 × 28 × 28 for 3D datasets. `N` denotes the number of samples.  \n* `train_labels` / `val_labels` / `test_labels`: `N` x `L`. `N` denotes the number of samples. `L` denotes the number of task labels; for single-label (binary/multi-class) classification, `L=1`, and `{0,1,2,3,..,C}` denotes the category labels (`C=1` for binary); for multi-label classification `L!=1`, e.g., `L=14` for `chestmnist.npz`.\n\n# Command Line Tools\n\n* List all available datasets:\n    \n        python -m medmnist available\n\n* Download all available datasets:\n    \n        python -m medmnist download\n\n* Delete all downloaded npz from root:\n\n        python -m medmnist clean\n\n* Print the dataset details given a subset flag:\n\n        python -m medmnist info --flag=xxxmnist\n\n* Save the dataset as standard figure and csv files, which could be used for AutoML tools, e.g., Google AutoML Vision:\n\n    for 2D datasets:\n\n        python -m medmnist save --flag=xxxmnist --folder=tmp/ --postfix=png\n        \n    for 3D datasets:\n\n        python -m medmnist save --flag=xxxmnist3d --folder=tmp/ --postfix=gif\n\n* Parse and evaluate a standard result file, refer to [`Evaluator.parse_and_evaluate`](medmnist/evaluator.py) for details.\n\n        python -m medmnist evaluate --path=folder/{flag}_{split}@{run}.csv\n\n# License and Citation\n\nThe code is under [Apache-2.0 License](./LICENSE).\n\nThe MedMNIST dataset is licensed under *Creative Commons Attribution 4.0 International* ([CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)).\nIf you find this project useful in your research, please cite the following papers:\n\n    Jiancheng Yang, Rui Shi, Donglai Wei, Zequan Liu, Lin Zhao, Bilian Ke, Hanspeter Pfister, Bingbing Ni. \"MedMNIST v2: A Large-Scale Lightweight Benchmark for 2D and 3D Biomedical Image Classification\". arXiv preprint arXiv:2110.14795, 2021.\n\n    Jiancheng Yang, Rui Shi, Bingbing Ni. \"MedMNIST Classification Decathlon: A Lightweight AutoML Benchmark for Medical Image Analysis\". IEEE 18th International Symposium on Biomedical Imaging (ISBI), 2021.\n\nor using the bibtex:\n\n    @article{medmnistv2,\n        title={MedMNIST v2: A Large-Scale Lightweight Benchmark for 2D and 3D Biomedical Image Classification},\n        author={Yang, Jiancheng and Shi, Rui and Wei, Donglai and Liu, Zequan and Zhao, Lin and Ke, Bilian and Pfister, Hanspeter and Ni, Bingbing},\n        journal={arXiv preprint arXiv:2110.14795},\n        year={2021}\n    }\n     \n    @inproceedings{medmnistv1,\n        title={MedMNIST Classification Decathlon: A Lightweight AutoML Benchmark for Medical Image Analysis},\n        author={Yang, Jiancheng and Shi, Rui and Ni, Bingbing},\n        booktitle={IEEE 18th International Symposium on Biomedical Imaging (ISBI)},\n        pages={191--195},\n        year={2021}\n    }\n\nPlease also cite source data paper(s) of the MedMNIST subset(s) as per the [description](https://medmnist.github.io/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MedMNIST/MedMNIST/",
    "keywords": "",
    "license": "Apache-2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "medmnist",
    "package_url": "https://pypi.org/project/medmnist/",
    "platform": null,
    "project_url": "https://pypi.org/project/medmnist/",
    "project_urls": {
      "Homepage": "https://github.com/MedMNIST/MedMNIST/"
    },
    "release_url": "https://pypi.org/project/medmnist/2.1.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scikit-learn",
      "scikit-image",
      "tqdm",
      "Pillow",
      "fire",
      "torch",
      "torchvision"
    ],
    "requires_python": ">=3.6.0",
    "summary": "MedMNIST: A Large-Scale Lightweight Benchmark for 2D and 3D Biomedical Image Classification",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17550578,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3780488d3a2aa2eb303309704294c25f1deec9a5c3fa5e7f3f796ef8fbf7923",
        "md5": "4c5113f1e1eed64d21a4f582b3e7d35f",
        "sha256": "6ee94dce904bee823a225d26f7f8e63c371fcec79a86f452dbfa79d3e2fec863"
      },
      "downloads": -1,
      "filename": "medmnist-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c5113f1e1eed64d21a4f582b3e7d35f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 21624,
      "upload_time": "2022-05-06T15:08:08",
      "upload_time_iso_8601": "2022-05-06T15:08:08.338550Z",
      "url": "https://files.pythonhosted.org/packages/e3/78/0488d3a2aa2eb303309704294c25f1deec9a5c3fa5e7f3f796ef8fbf7923/medmnist-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8e19742ccd6a1198fdaf3226d331a8921029ef237c138439944c77d3b9c96fe",
        "md5": "3ec78ab3a17c77594505fd20f3d96483",
        "sha256": "cf4c7784da35be18f23a4aec92f29560f411df4aa7decbe1d3563888ff58c678"
      },
      "downloads": -1,
      "filename": "medmnist-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ec78ab3a17c77594505fd20f3d96483",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 23052,
      "upload_time": "2022-05-06T15:08:10",
      "upload_time_iso_8601": "2022-05-06T15:08:10.978951Z",
      "url": "https://files.pythonhosted.org/packages/b8/e1/9742ccd6a1198fdaf3226d331a8921029ef237c138439944c77d3b9c96fe/medmnist-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}