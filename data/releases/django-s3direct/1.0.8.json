{
  "info": {
    "author": "Bradley Griffiths",
    "author_email": "bradley.griffiths@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "django-s3direct\n===============\n\nUpload files directly to S3 from Django\n-------------------------------------\n\n[![Build Status](https://travis-ci.org/bradleyg/django-s3direct.svg?branch=master)](https://travis-ci.org/bradleyg/django-s3direct)\n\nAdd direct uploads to AWS S3 functionality with a progress bar to file input fields.\n\n<img src=\"https://raw.githubusercontent.com/bradleyg/django-s3direct/master/screenshot.png\" width=\"381\"/>\n\n## Installation\n\nInstall with Pip:\n\n```pip install django-s3direct```\n\n## AWS Setup\n\n### Access Credentials\n\nYou have two options of providing access to AWS resources:\n\n1. Add credentials of an IAM user to your Django settings\n2. Use the EC2 instance profile and its attached IAM role\n\nWhether you are using an IAM user or a role, there needs to be an IAM policy\nin effect that grants permission to upload to S3. Remember to swap out __YOUR_BUCKET_NAME__ for your bucket.\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:ListMultipartUploadParts\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": \"arn:aws:s3:::YOUR_BUCKET_NAME/*\"\n    }\n  ]\n}\n```\n\nIf the instance profile is to be used, the IAM role needs to have a\nTrust Relationship configuration applied:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```\n\nNote that in order to use the EC2 instance profile, django-s3direct needs\nto query the EC2 instance metadata using utility functions from the\n[botocore](https://github.com/boto/botocore) package. You already have `botocore` installed if `boto3`\nis a dependency of your project.\n\n### S3 CORS\n\nSetup a CORS policy on your S3 bucket. Note the ETag header is particularly\nimportant as it is used for multipart uploads by EvaporateJS. For more information\nsee [here](https://github.com/TTLabs/EvaporateJS/wiki/Configuring-The-AWS-S3-Bucket). Remember to swap out YOURDOMAIN.COM for your domain, including port if developing locally.\n\n```xml\n<CORSConfiguration>\n    <CORSRule>\n        <AllowedOrigin>http://YOURDOMAIN.COM:8080</AllowedOrigin>\n        <AllowedMethod>GET</AllowedMethod>\n        <AllowedMethod>HEAD</AllowedMethod>\n        <AllowedMethod>PUT</AllowedMethod>\n        <AllowedMethod>POST</AllowedMethod>\n        <MaxAgeSeconds>3000</MaxAgeSeconds>\n        <ExposeHeader>ETag</ExposeHeader>\n        <AllowedHeader>*</AllowedHeader>\n    </CORSRule>\n</CORSConfiguration>\n```\n\n## Django Setup\n\n### settings.py\n\n```python\nINSTALLED_APPS = [\n    ...\n    's3direct',\n    ...\n]\n\nTEMPLATES = [{\n    ...\n    'APP_DIRS': True,\n    ...\n}]\n\n# AWS\n\n# If these are set to None, the EC2 instance profile and IAM role are used.\n# This requires you to add boto3 (or botocore, which is a dependency of boto3)\n# to your project dependencies.\nAWS_ACCESS_KEY_ID = 'your-aws-access-key-id'\nAWS_SECRET_ACCESS_KEY = 'your-aws-secret-access-key'\nAWS_STORAGE_BUCKET_NAME = 'your-aws-s3-bucket-name'\n\n# The region of your bucket, more info:\n# http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\nS3DIRECT_REGION = 'us-east-1'\n\n# Destinations, with the following keys:\n#\n# key [required] Where to upload the file to, can be either:\n#     1. '/' = Upload to root with the original filename.\n#     2. 'some/path' = Upload to some/path with the original filename.\n#     3. functionName = Pass a function and create your own path/filename.\n# key_args [optional] Arguments to be passed to 'key' if it's a function.\n# auth [optional] An ACL function to whether the current Django user can perform this action.\n# allowed [optional] List of allowed MIME types.\n# acl [optional] Give the object another ACL rather than 'public-read'.\n# cache_control [optional] Cache control headers, eg 'max-age=2592000'.\n# content_disposition [optional] Useful for sending files as attachments.\n# bucket [optional] Specify a different bucket for this particular object.\n# server_side_encryption [optional] Encryption headers for buckets that require it.\n\nS3DIRECT_DESTINATIONS = {\n    'example_destination': {\n        # REQUIRED\n        'key': 'uploads/images',\n\n        # OPTIONAL\n        'auth': lambda u: u.is_staff, # Default allow anybody to upload\n        'allowed': ['image/jpeg', 'image/png', 'video/mp4'],  # Default allow all mime types\n        'bucket': 'pdf-bucket', # Default is 'AWS_STORAGE_BUCKET_NAME'\n        'acl': 'private', # Defaults to 'public-read'\n        'cache_control': 'max-age=2592000', # Default no cache-control\n        'content_disposition': lambda x: 'attachment; filename=\"{}\"'.format(x),  # Default no content disposition\n        'content_length_range': (5000, 20000000), # Default allow any size\n        'server_side_encryption': 'AES256', # Default no encryption\n    },\n    'example_other': {\n        'key': lambda filename, args: args + '/' + filename,\n    \t'key_args': 'uploads/images',  # Only if 'key' is a function\n    }\n}\n```\n\n### urls.py\n\n```python\nurlpatterns = [\n    ...\n    url(r'^s3direct/', include('s3direct.urls')),\n    ...\n]\n```\n\nRun ```python manage.py collectstatic``` if required.\n\n## Use in Django admin\n\n### models.py\n\n```python\nfrom django.db import models\nfrom s3direct.fields import S3DirectField\n\nclass Example(models.Model):\n    video = S3DirectField(dest='example_destination')\n```\n\n## Use the widget in a custom form\n\n### forms.py\n\n```python\nfrom django import forms\nfrom s3direct.widgets import S3DirectWidget\n\nclass S3DirectUploadForm(forms.Form):\n    images = forms.URLField(widget=S3DirectWidget(dest='example_destination'))\n```\n\n__*Optional.__ You can modify the HTML of the widget by overiding template __s3direct/templates/s3direct-widget.tpl__\n\n### views.py\n\n```python\nfrom django.views.generic import FormView\nfrom .forms import S3DirectUploadForm\n\nclass MyView(FormView):\n    template_name = 'form.html'\n    form_class = S3DirectUploadForm\n```\n\n### templates/form.html\n\n```html\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>s3direct</title>\n    {{ form.media }}\n</head>\n<body>\n    <form action=\"\" method=\"post\">{% csrf_token %}\n        {{ form.as_p }}\n    </form>\n</body>\n</html>\n```\n\n\n## Examples\n\nExamples of both approaches can be found in the examples folder. To run them:\n\n```shell\n$ git clone git@github.com:bradleyg/django-s3direct.git\n$ cd django-s3direct\n$ python setup.py install\n$ cd example\n\n# Add your AWS keys to your environment\nexport AWS_ACCESS_KEY_ID='…'\nexport AWS_SECRET_ACCESS_KEY='…'\nexport AWS_STORAGE_BUCKET_NAME='…'\nexport S3DIRECT_REGION='…'    # e.g. 'eu-west-1'\n\n$ python manage.py migrate\n$ python manage.py createsuperuser\n$ python manage.py runserver\n```\n\nVisit ```http://localhost:8000/admin``` to view the admin widget and ```http://localhost:8000/form``` to view the custom form widget.\n\n## Development\n```shell\n$ git clone git@github.com:bradleyg/django-s3direct.git\n$ cd django-s3direct\n$ virtualenv venv\n$ source venv/bin/activate\n$ pip install -r requirements-dev.txt\n$ python setup.py install\n$ npm install\n\n# Add your AWS keys to your environment\nexport AWS_ACCESS_KEY_ID='…'\nexport AWS_SECRET_ACCESS_KEY='…'\nexport AWS_STORAGE_BUCKET_NAME='…'\nexport S3DIRECT_REGION='…'    # e.g. 'eu-west-1'\n\n# Run examples\n$ cd django-s3direct\n$ python manage.py migrate\n$ python manage.py createsuperuser\n$ python manage.py runserver\n\n# Run tests\n$ npm run test\n\n# Run frontend dev bundler\n$ npm run dev\n\n# Build frontend\n$ npm run build\n\n# Upload to PYPI\n$ npm run pypi\n```",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bradleyg/django-s3direct#readme",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-s3direct",
    "package_url": "https://pypi.org/project/django-s3direct/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-s3direct/",
    "project_urls": {
      "Homepage": "https://github.com/bradleyg/django-s3direct#readme"
    },
    "release_url": "https://pypi.org/project/django-s3direct/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Add direct uploads to S3 functionality with a progress bar to file input fields.",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14161038,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44fb4d1540e40454f154094ca6579fcfe83ae9a1e905c24205b01f759f46b122",
        "md5": "ea6ba76a854ae47484cea3f21a1e7fc5",
        "sha256": "9cf3626a6c50ca22e8683d8864243ea49af159bfed829059cbc39e44b0441108"
      },
      "downloads": -1,
      "filename": "django-s3direct-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "ea6ba76a854ae47484cea3f21a1e7fc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 166618,
      "upload_time": "2019-01-27T12:40:24",
      "upload_time_iso_8601": "2019-01-27T12:40:24.448572Z",
      "url": "https://files.pythonhosted.org/packages/44/fb/4d1540e40454f154094ca6579fcfe83ae9a1e905c24205b01f759f46b122/django-s3direct-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}