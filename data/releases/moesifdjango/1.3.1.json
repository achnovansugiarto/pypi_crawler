{
  "info": {
    "author": "Moesif, Inc",
    "author_email": "derric@moesif.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: Log Analysis",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "Moesif Middleware for Python Django\n===================================\n\nDjango middleware to log *incoming* REST API calls to Moesif's error\nanalysis platform.\n\n`Source Code on GitHub <https://github.com/moesif/moesifdjango>`__\n\n`Package on PyPI <https://pypi.python.org/pypi/moesifdjango>`__\n\nThis SDK uses the Requests library and will work for Python 2.7 â€” 3.5.\n\nHow to install\n--------------\n\n.. code:: shell\n\n    pip install moesifdjango\n\nHow to use\n----------\n\nIn your ``settings.py`` file in your Django project directory, please\nadd ``moesifdjango.middleware.moesif_middleware`` to the MIDDLEWARE\narray.\n\nBecause of middleware execution order, it is best to add moesifdjango\nmiddleware **below** SessionMiddleware and AuthenticationMiddleware,\nbecause they add useful session data that enables deeper error analysis.\nOn the other hand, if you have other middleware that modified response\nbefore going out, you may choose to place Moesif middleware **above**\nthe middleware modifying response. This allows Moesif to see the\nmodifications to the response data and see closer to what is going over\nthe wire.\n\nDjango middleware style and setup changed drastically from version 1.10.\n\nFor **Django 1.10 or newer**, the please add Middleware this way:\n\n::\n\n    MIDDLEWARE = [\n        ...\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.common.CommonMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'moesifdjango.middleware.moesif_middleware'\n        ...\n    ]\n\nFor **Django 1.9 or older**, please add Middleware this way:\n\n::\n\n    MIDDLEWARE_CLASSES = [\n        ...\n        'moesifdjango.middleware_pre19.MoesifMiddlewarePre19',\n        ...\n        # other middlewares\n    ]\n\nAlso, add ``MOESIF_MIDDLEWARE`` to your ``settings.py`` file,\n\n::\n\n\n    MOESIF_MIDDLEWARE = {\n        'APPLICATION_ID': 'Your Application ID Found in Settings on Moesif',\n        ...\n        # other options see below.\n    }\n\nYou can find your Application Id from `*Moesif\nDashboard* <https://www.moesif.com/>`__ -> *Top Right Menu* -> *App\nSetup*\n\nConfiguration options\n---------------------\n\n**``APPLICATION_ID``**\n^^^^^^^^^^^^^^^^^^^^^^\n\n(**required**), *string*, is obtained via your Moesif Account, this is\nrequired.\n\n**``SKIP``**\n^^^^^^^^^^^^\n\n(optional) *(request, response) => boolean*, a function that takes a\nrequest and a response, and returns true if you want to skip this\nparticular event.\n\n**``IDENTIFY_USER``**\n^^^^^^^^^^^^^^^^^^^^^\n\n(optional) *(request, response) => string*, a function that takes a\nrequest and a response, and returns a string that is the user id used by\nyour system. While Moesif identify users automatically, and this\nmiddleware try to use the standard Django request.user.username, if your\nset up is very different from the standard implementations, it would be\nhelpful to provide this function.\n\n**``GET_SESSION_TOKEN``**\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n(optional) *(request, response) => string*, a function that takes a\nrequest and a response, and returns a string that is the session token\nfor this event. Again, Moesif tries to get the session token\nautomatically, but if you setup is very different from standard, this\nfunction will be very help for tying events together, and help you\nreplay the events.\n\n**``GET_METADATA``**\n^^^^^^^^^^^^^^^^^^^^\n\n(optional) *(request, response) => dictionary*, getMetadata is a\nfunction that returns an object that allows you to add custom metadata\nthat will be associated with the event. The metadata must be a\ndictionary that can be converted to JSON. For example, you may want to\nsave a VM instance\\_id, a trace\\_id, or a tenant\\_id with the request.\n\n**``MASK_EVENT_MODEL``**\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n(optional) *(EventModel) => EventModel*, a function that takes an\nEventModel and returns an EventModel with desired data removed. Use this\nif you prefer to write your own mask function than use the string based\nfilter options: REQUEST\\_BODY\\_MASKS, REQUEST\\_HEADER\\_MASKS,\nRESPONSE\\_BODY\\_MASKS, & RESPONSE\\_HEADER\\_MASKS. The return value must\nbe a valid EventModel required by Moesif data ingestion API. For details\nregarding EventModel please see the `Moesif Python API\nDocumentation <https://www.moesif.com/docs/api?python>`__.\n\n**``REQUEST_HEADER_MASKS``**\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n(deprecated), *string[]*, is a list of strings for headers that you want\nto hide from Moesif. Will be removed in future version. Replaced by the\nfunction based 'MASK\\_EVENT\\_MODEL' for additional flexibility.\n\n**``REQUEST_BODY_MASKS``**\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n(deprecated), *string[]*, is a list of key values in the body that you\nwant to hide from Moesif. All key values in the body will be recursively\nremoved before sending to Moesif. Will be removed in future version.\nReplaced by the function based 'MASK\\_EVENT\\_MODEL' for additional\nflexibility.\n\n**``RESPONSE_HEADER_MASKS``**\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n(deprecated), *string[]*, performs the same function for response\nheaders. Will be removed in future version. Replaced by the function\nbased 'MASK\\_EVENT\\_MODEL' for additional flexibility.\n\n**``RESPONSE_BODY_MASKS``**\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n(deprecated), *string[]*, performs the same task for response body. Will\nbe removed in future version. Replaced by the function based\n'MASK\\_EVENT\\_MODEL' for additional flexibility.\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    def identifyUser(req, res):\n        # if your setup do not use the standard request.user.username\n        # return the user id here\n        return \"user_id_1\"\n\n    def should_skip(req, res):\n        if \"healthprobe\" in req.path:\n            return True\n        else:\n            return False\n\n    def get_token(req, res):\n        # if your setup do not use the standard Django method for\n        # setting session tokens. do it here.\n        return \"token\"\n\n    def mask_event(eventmodel):\n        # do something to remove sensitive fields\n        # be sure not to remove any required fields.\n        return eventmodel\n\n    def get_metadata(req, res):\n        return {\n            'foo': '12345',\n            'bar': '23456',\n        }\n\n\n    MOESIF_MIDDLEWARE = {\n        'APPLICATION_ID': 'Your application id',\n        'LOCAL_DEBUG': False,\n        'IDENTIFY_USER': identifyUser,\n        'GET_SESSION_TOKEN': get_token,\n        'SKIP': should_skip,\n        'MASK_EVENT_MODEL': mask_event,\n        'GET_METADATA': get_metadata,\n    }\n\nExample\n-------\n\nAn example Moesif integration based on quick start tutorials of Django\nand Django Rest Framework: `Moesif Django\nExample <https://github.com/Moesif/moesifdjangoexample>`__\n\nOther integrations\n------------------\n\nTo view more more documentation on integration options, please visit\n**`the Integration Options\nDocumentation <https://www.moesif.com/docs/getting-started/integration-options/>`__.**\n\n\n",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/moesifdjango/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.moesif.com/developer-documentation",
    "keywords": "log analysis restful api development debug",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "moesifdjango",
    "package_url": "https://pypi.org/project/moesifdjango/",
    "platform": "",
    "project_url": "https://pypi.org/project/moesifdjango/",
    "project_urls": {
      "Homepage": "https://www.moesif.com/developer-documentation"
    },
    "release_url": "https://pypi.org/project/moesifdjango/1.3.1/",
    "requires_dist": [
      "requests",
      "jsonpickle",
      "python-dateutil",
      "isodatetimehandler",
      "moesifapi",
      "nose; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Moesif Middleware for Python Django",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15394575,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a0f2167d32dfa45307a0ede38a1fc44c2aecfe40095d5a7da0c40d87a9b46c4",
        "md5": "73345dcc07b75e093b9b2ab5e37992ad",
        "sha256": "09b7616df0340f9c271f4b4efaf11d42df75ff3fa590946874fe1e31132f8455"
      },
      "downloads": -1,
      "filename": "moesifdjango-1.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73345dcc07b75e093b9b2ab5e37992ad",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 15706,
      "upload_time": "2018-02-07T01:16:53",
      "upload_time_iso_8601": "2018-02-07T01:16:53.993118Z",
      "url": "https://files.pythonhosted.org/packages/5a/0f/2167d32dfa45307a0ede38a1fc44c2aecfe40095d5a7da0c40d87a9b46c4/moesifdjango-1.3.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e4b1923d945a02ee556222e72e5af96c0a2fa224012777f54d74b4d12848cdb",
        "md5": "d54e4f49c0798fbc221c770e3f555659",
        "sha256": "fc25b3da3e65ee43f24ddcbae1f0c266a2a2652918b5f0118ee50a22972b549e"
      },
      "downloads": -1,
      "filename": "moesifdjango-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d54e4f49c0798fbc221c770e3f555659",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17674,
      "upload_time": "2018-02-07T01:16:56",
      "upload_time_iso_8601": "2018-02-07T01:16:56.339277Z",
      "url": "https://files.pythonhosted.org/packages/4e/4b/1923d945a02ee556222e72e5af96c0a2fa224012777f54d74b4d12848cdb/moesifdjango-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}