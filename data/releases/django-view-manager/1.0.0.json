{
  "info": {
    "author": "",
    "author_email": "Arrai Innovations <support@arrai.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# django-view-manager\n\nA management command for django, designed to provide a way in pull requests, to see a diff of the sql (`CREATE VIEW ...`) for unmanaged models.\n\nThe management command creates an `sql` folder inside an app, along with files like `view-animals_pets-latest.sql` (live) and `view-animals_pets-0002.sql` (historical), where you write your sql. Migrations are also created in the process, which read these files, so you don't need to create them yourself.\n\nRefer to folder and file structure, and usage, for more detailed information.\n\n![Flake8](https://docs.arrai-dev.com/django-view-manager/artifacts/main/flake8.svg)\n\n![Python 3.7 - Django 3.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.7%20-%20django%203.2.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.7%20-%20django%203.2.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.7%20-%20django%203.2/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%203.2.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%203.2.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.8%20-%20django%203.2/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%204.0.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%204.0.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.8%20-%20django%204.0/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%204.1.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.8%20-%20django%204.1.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.8%20-%20django%204.1/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%203.2.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%203.2.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.9%20-%20django%203.2/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%204.0.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%204.0.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.9%20-%20django%204.0/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%204.1.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.9%20-%20django%204.1.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.9%20-%20django%204.1/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%203.2.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%203.2.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.10%20-%20django%203.2/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%204.0.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%204.0.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.10%20-%20django%204.0/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%204.1.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.10%20-%20django%204.1.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.10%20-%20django%204.1/)\n\n![Python%203.7%20-%20Django%203.2](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.11%20-%20django%204.1.svg) [![Coverage](https://docs.arrai-dev.com/django-view-manager/artifacts/main/python%203.11%20-%20django%204.1.coverage.svg)](https://docs.arrai-dev.com/django-view-manager/artifacts/main/htmlcov_python%203.11%20-%20django%204.1/)\n\n<!-- prettier-ignore-start -->\n<!--TOC-->\n\n- [django-view-manager](#django-view-manager)\n- [Installation](#installation)\n- [Requirements](#requirements)\n- [Folder and File Structure](#folder-and-file-structure)\n- [Usage](#usage)\n  - [Calling the command with no arguments:](#calling-the-command-with-no-arguments)\n  - [Calling the command with arguments on a new app:](#calling-the-command-with-arguments-on-a-new-app)\n  - [Calling the command again, when changes are needed:](#calling-the-command-again-when-changes-are-needed)\n\n<!--TOC-->\n<!-- prettier-ignore-end -->\n\n# Installation\n\n```shell\n$ pip install django-view-manager\n```\n\nor\n\n```shell\n$ pipenv install django-view-manager\n```\n\n# Requirements\n\nA `Pipfile` and `dev_requirements.txt` exist for convenience. You can choose which you want to use.\n\nAt least a django 3.2 and python 3.7.\n\nIt may work in an older django, but we only test against supported versions.\n\n# Folder and File Structure\n\nThe following folder and file structure is used by this management command. If you were to run the commands listed under usage, you would end up with the following:\n\n```shell\nproject_name\n    employees\n        migrations\n            0001_initial.py\n            0002_create_view.py\n            0003_add_date_to_employee_likes.py\n        sql\n            view-employees_employeelikes-0002.sql\n            view-employees_employeelikes-latest.sql\n        __init__.py\n        apps.py\n        models.py\n```\n\nThe numbers in a filename are associated to the corresponding migration number, and are meant to be historic.\n\n# Usage\n\nIf you need to know how to run a django management command, please refer to the documentation in django for more details.\n\nExamples in this documentation use the apps in the test folder, which are also used by tests. The examples will focus on the `employees` app.\n\nhttps://github.com/arrai-innovations/django-view-manager/blob/ccf70282f4ca5a45946a514fd859b8352706296a/tests/employees/models.py#L4-L27\n\n## Calling the command with no arguments:\n\n```shell\n$ python manage.py makeviewmigration\n```\n\nThe results will be:\n\n```shell\n$ python manage.py makeviewmigration [-h] [--version] [-v {0,1,2,3}] [--settings SETTINGS] [--pythonpath PYTHONPATH] [--traceback] [--no-color] [--force-color]\n                                   [--skip-checks]\n                                   {animals_pets,employees_employeelikes,food_sweets} migration_name\nmanage.py makeviewmigration: error: the following arguments are required: db_table_name, migration_name\n```\n\n## Calling the command with arguments on a new app:\n\n```shell\n$ python manage.py makeviewmigration employees_employeelikes create_view\n```\n\nThe results will be:\n\n```\nCreated 'migrations' folder in app 'employees'.\n‧\nCreating initial migration for app 'employees'.\nMigrations for 'employees':\n  project_name/employees/migrations/0001_initial.py\n    - Create model Sweets\n‧\nCreated 'sql' folder in app 'employees'.\n‧\nCreating empty migration for the new SQL view.\nMigrations for 'employees':\n  project_name/employees/migrations/0002_create_view.py\n    - Raw SQL operation\n‧\nCreated new SQL view file - 'view-employees_employeelikes-latest.sql'.\n‧\nModified migration '0002_create_view' to read from 'view-employees_employeelikes-latest.sql'.\n‧\nDone - You can now edit 'view-employees_employeelikes-latest.sql'.\n```\n\nInstructions will be added into the `view-employees_employeelikes-latest.sql` file:\n\n```sql\n/*\n    This file was generated using django-view-manager 1.0.0.\n    Add the SQL for this view and then commit the changes.\n    You can remove this comment before committing.\n‧\n    When you have changes to make to this sql, you need to run the makeviewmigration command\n    before altering the sql, so the historical sql file is created with the correct contents.\n‧\n    eg.\n    DROP VIEW IF EXISTS animals_pets;\n    CREATE VIEW\n        animals_pets AS\n    SELECT\n        1 AS id,\n        42 AS employee_id,\n        'Kittens' AS name\n    UNION\n        2 AS id,\n        314 AS employee_id,\n        'Puppies' AS name\n*/\n```\n\n## Calling the command again, when changes are needed:\n\n<b>Important:</b> Run the command before you alter the contents of your sql file, like `view-employees_employeelikes-latest.sql`. If you do not, the historical version created by the command will not contain the sql that it should,\n\n```shell\n$ python manage.py makeviewmigration employees_employeelikes add_date_to_employee_likes\n```\n\nThe results will be:\n\n```\nCreating empty migration for the SQL changes.\nMigrations for 'employees':\n  tests/employees/migrations/0003_add_date_to_employee_likes.py\n    - Raw SQL operation\n‧\nCreated historical SQL view file - 'view-employees_employeelikes-0002.sql'.\n‧\nModified migration '0002_create_view' to read from 'view-employees_employeelikes-0002.sql'.\n‧\nModified migration '0003_add_date_to_employee_likes' to read from 'view-employees_employeelikes-latest.sql' and 'view-employees_employeelikes-0002.sql'.\n‧\nDone - You can now edit 'view-employees_employeelikes-latest.sql'.\n```\n\nThe historic file `view-employees_employeelikes-0002.sql` becomes a copy of `view-employees_employeelikes-latest.sql`, and the corresponding migration 0002 is modified to use this historic file.\n\n```sql\n/*\n    This file was generated using django-view-manager 1.0.0.\n    Modify the SQL for this view and then commit the changes.\n    You can remove this comment before committing.\n‧\n    When you have changes to make to this sql, you need to run the makeviewmigration command\n    before altering the sql, so the historical sql file is created with the correct contents.\n*/\nDROP VIEW IF EXISTS employees_employeelikes;\nCREATE VIEW\n    employees_employeelikes AS\nSELECT\n    1 AS id,\n    42 AS employee_id,\n    'Kittens' AS name\nUNION\n    2 AS id,\n    314 AS employee_id,\n    'Puppies' AS name\n```\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-Clause License  Copyright (c) 2022, Arrai Innovations  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-view-manager",
    "package_url": "https://pypi.org/project/django-view-manager/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-view-manager/",
    "project_urls": {
      "repository": "https://github.com/arrai-innovations/django-view-manager/"
    },
    "release_url": "https://pypi.org/project/django-view-manager/1.0.0/",
    "requires_dist": [
      "django (>=3.2.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "A management command for django that provides diffs of sql views.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16909202,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "379253ec573735e1f38bad02cefda71f7e09152601003cd5851a29a5dc40bd10",
        "md5": "b5f4eb80a78c984737c532c0a550e85d",
        "sha256": "85fdadfd1715f8c48b927676f6b6edbaaac0b119da85b9b8bc46fa6d33786cb4"
      },
      "downloads": -1,
      "filename": "django_view_manager-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5f4eb80a78c984737c532c0a550e85d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11282,
      "upload_time": "2023-02-17T23:40:50",
      "upload_time_iso_8601": "2023-02-17T23:40:50.438002Z",
      "url": "https://files.pythonhosted.org/packages/37/92/53ec573735e1f38bad02cefda71f7e09152601003cd5851a29a5dc40bd10/django_view_manager-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}