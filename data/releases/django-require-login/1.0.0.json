{
  "info": {
    "author": "Steven Pate",
    "author_email": "steven@laac.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Django Require Login\n\n[![Build Status](https://travis-ci.org/laactech/django-require-login.svg?branch=master)](https://travis-ci.org/laactech/django-require-login)\n[![codecov](https://codecov.io/gh/laactech/django-require-login/branch/master/graph/badge.svg)](https://codecov.io/gh/laactech/django-require-login)\n![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-require-login)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-require-login)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/laactech/django-require-login/blob/master/LICENSE.md)\n\nForked from [django-stronghold](https://github.com/mgrouchy/django-stronghold)\n\nMake all your Django URLs login_required by default.\n\n## Installation\n\nInstall via pip.\n\n```sh\npip install django-require-login\n```\n\nThen add the middleware to your MIDDLEWARE_CLASSES in your Django settings file\n\n```python\nMIDDLEWARE_CLASSES = (\n    #...\n    \"django_require_login.middleware.LoginRequiredMiddleware\",\n)\n\n```\n\n## Usage\n\nIf you followed the installation instructions now all your views are defaulting to require a login.\nTo make a view public again you can use the public decorator:\n\n### For function based views\n```python\nfrom django_require_login.decorators import public\nfrom django.http import HttpResponse\n\n\n@public\ndef my_view(request):\n    return HttpResponse(\"Public\")\n\n```\n\n### For class based views (decorator)\n\n```python\nfrom django.utils.decorators import method_decorator\nfrom django_require_login.decorators import public\nfrom django.views.generic import View\nfrom django.http import HttpResponse\n\n\nclass SomeView(View):\n    def get(self, request, *args, **kwargs):\n        return HttpResponse(\"Public view\")\n    \n    @method_decorator(public)\n    def dispatch(self, *args, **kwargs):\n        return super().dispatch(*args, **kwargs)\n```\n\n### For class based views (mixin)\n\n```python\nfrom django_require_login.mixins import PublicViewMixin\nfrom django.views.generic import View\n\n\nclass SomeView(PublicViewMixin, View):\n\tpass\n```\n\n## Configuration (optional)\n\nYou can add a tuple of url regexes in your settings file with the\n`REQUIRE_LOGIN_PUBLIC_URLS` setting. Any url that matches against these patterns\n will be made public without using the `@public` decorator.\n\n\n### REQUIRE_LOGIN_PUBLIC_URLS\n\n**Default**:\n```python\nREQUIRE_LOGIN_PUBLIC_URLS = ()\n```\n\nIf DEBUG is True, REQUIRE_LOGIN_PUBLIC_URLS contains:\n```python\nfrom django.conf import settings\n\n(\n    r'{}.+$'.format(settings.STATIC_URL),\n    r'{}.+$'.format(settings.MEDIA_URL),\n)\n\n```\nWhen settings.DEBUG = True, this is additive to your settings to support serving\nStatic files and media files from the development server. It does not replace any\nsettings you may have in `REQUIRE_LOGIN_PUBLIC_URLS`.\n\n> Note: Public URL regexes are matched against \n>[HttpRequest.path_info](https://docs.djangoproject.com/en/dev/ref/request-response/#django.http.HttpRequest.path_info).\n\n### REQUIRE_LOGIN_PUBLIC_NAMED_URLS\nYou can add a tuple of url names in your settings file with the\n`REQUIRE_LOGIN_PUBLIC_NAMED_URLS` setting. Names in this setting will be reversed using\n`django.urls.reverse` and any url matching the output of the reverse\ncall will be made public without using the `@public` decorator:\n\n**Default**:\n```python\nREQUIRE_LOGIN_PUBLIC_NAMED_URLS = ()\n```\n\n### REQUIRE_LOGIN_USER_TEST_FUNC\nOptionally, set REQUIRE_LOGIN_USER_TEST_FUNC to a callable to limit access to users\nthat pass a custom test. The callback receives a `User` object and should\nreturn `True` if the user is authorized. This is equivalent to decorating a\nview with `user_passes_test`.\n\n**Example**:\n\n```python\nREQUIRE_LOGIN_USER_TEST_FUNC = lambda user: user.is_staff\n```\n\n**Default**:\n\n```python\nREQUIRE_LOGIN_USER_TEST_FUNC = lambda user: user.is_authenticated\n```\n\n## Contribute\n\nSee CONTRIBUTING.md\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/laactech/django-require-login",
    "keywords": "django,login required,authentication,login,python",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-require-login",
    "package_url": "https://pypi.org/project/django-require-login/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-require-login/",
    "project_urls": {
      "Homepage": "https://github.com/laactech/django-require-login",
      "Repository": "https://github.com/laactech/django-require-login"
    },
    "release_url": "https://pypi.org/project/django-require-login/1.0.0/",
    "requires_dist": [
      "django (>=1.11,<3.0)"
    ],
    "requires_python": ">=3.5,<4.0",
    "summary": "Middleware to require login for all Django URLs",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12475863,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd70dfb2621e2bab81e3eb37f20ce2a502e7aedaa47eedfb8745cb294fc2c508",
        "md5": "baf5656a48662782e3dc20f3089cc194",
        "sha256": "ee1e47f5d191c240be802ecd0099f334dfb58e9a786e632fe07956fa6b398bb4"
      },
      "downloads": -1,
      "filename": "django_require_login-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "baf5656a48662782e3dc20f3089cc194",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5,<4.0",
      "size": 7460,
      "upload_time": "2019-11-10T17:28:42",
      "upload_time_iso_8601": "2019-11-10T17:28:42.318177Z",
      "url": "https://files.pythonhosted.org/packages/cd/70/dfb2621e2bab81e3eb37f20ce2a502e7aedaa47eedfb8745cb294fc2c508/django_require_login-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b28fe8a21fa29e271d8d8c8f592b79ec061cf88b1229d2f2f26548fc94335fef",
        "md5": "fafd0fe16e2649a5e067c207b5e7610e",
        "sha256": "3a8b9a31b56c5331ba4b68f366acd0acd5b0f8f910871d3b336287b1b8470e13"
      },
      "downloads": -1,
      "filename": "django_require_login-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fafd0fe16e2649a5e067c207b5e7610e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5,<4.0",
      "size": 6562,
      "upload_time": "2019-11-10T17:28:44",
      "upload_time_iso_8601": "2019-11-10T17:28:44.653988Z",
      "url": "https://files.pythonhosted.org/packages/b2/8f/e8a21fa29e271d8d8c8f592b79ec061cf88b1229d2f2f26548fc94335fef/django_require_login-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}