{
  "info": {
    "author": "Chris Bailey",
    "author_email": "chris.p.bailey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "Duat - A lightweight django UAT feedback tool\n=============================================\n\nThis is a simple django application for embedding a lightweight feedback\nmechanism into you websites. It’s intended primarily as an aid for user\nacceptance testing, much like `Google Feedback`_. The backend leverages\nDjango’s admin module to provide its functionality.\n\nHow to use it\n-------------\n\nVia the admin interface on the server you set up a ‘Project’. Once done\nthis will provide you with a single custom javascript file which you can\nembed into your website. Once embedded, the javascript will create a\nsmall feedback form on the bottom right of the page. When the user\nelects to provide feedback they can select any elements on the page\nwhich will become highlighted (to indicate the problem areas). After the\nfeedback is submitted, the server generates an image of the page (with\nhighlighted elements) and records the url, user agent and time of\nsubmission. Site administrators can then easily view the issues as they\ncome in. You can view the generated image or the html of the problem\npage.\n\nHow it works\n------------\n\nThe web tool allows the user to highlight different elements on the page\n(by adding a specific class to those elements). This DOM is then sent to\nthe server where PhantomJS is used to generate a static image of the\npage and the admin interface lets you view the full page contents.\n\nInstallation (Standalone)\n-------------------------\n\n1. Install the `Django`_ framework\n2. Download and extract `PhantomJS`_\n3. Checkout this repository.\n4. Edit ``settings.py``:\n\n-  Setup your database as necessary\n-  Edit the ``PHANTOMJS_EXECUTABLE`` path\n\n5. Initialise the database (don’t forget to setup an administrator)\n   ``python manage.py syncdb``\n6. Run the server ``python manage.py runserver 8000``\n\nInstallation (Shared)\n---------------------\n\nDuat can also be installed alongside other django apps.\n\n1. Download and extract `PhantomJS`_\n2. Edit ``settings.py``:\n\n-  Add ``PHANTOMJS_EXECUTABLE=<path_to_phantomjs_binary>``\n-  Include duat in your ``INSTALLED_APPS`` list\n\n3. Edit your ``urls.py`` and include duat\n\n- ``url(r'^feedback/', include('duat.urls')),``\n\n4. Run syncdb.\n\nSetup\n-----\n\nOnce you have the server running, you will first need to set up a site\nadministrator, then create your first project to receive feedback.\n\n1. Visit the admin page (e.g. http://localhost:8000/admin) and log in\n   using the admin details you just provided.\n\nFirst create a project administrator (this is the person who can log\ninto the back end to view submissions and receive notifications).\n\n2. Click the ‘Add’ button next to the Users section.\n3. Enter a username and password and click ‘Save and continue editing’.\n4. On the next screen make sure you check the box next to the Staff\n   status option.\n5. Provide an email address to receive notifications of new feedback\n   submissions.\n6. In the User Permissions box, select\n   ``'duat | feedback | Can change feedback'`` and\n   ``'duat | feedback | Readonly Feedback'`` and click the corresponding\n   arrow to add these to the box on the right.\n7. Save this page.\n\nNow create a Project\n\n8.  Use the ‘Home’ link to go back to the home screen and click ‘Add’\n    next to the Projects section.\n9.  Provide a name for your project and select the project administrator\n    you’ve just created. If you wish to send notifications to this\n    administrator click the ‘Notify admin’ checkbox.\n10. After clicking the Save button you will have set up your first\n    project.\n\nYou can then use the javascript link provided on the project screen to\nembed a <script> tag onto your site. If duat is being used from within your application, you can reference this script with the following:\n\n    ``<script src=\"{% url 'duat-feedback' project_name='bos2' %}\"></script>``\n\nThe project administrator can log into the admin site and will be able\nto view the Feedback entries submitted for their corresponding project.\n\nNotes\n-----\n\nInspiration for this system originally came from `feedback.js`_ but I\nfound the canvas tainting in chrome to be a blocker for our requirements\nso I decided to implement a simpler system. \n\nTested with Django 1.4, 1.5, 1.6, 1.7 & 1.8\n\n.. _PhantomJS: http://phantomjs.org/\n.. _feedback.js: http://experiments.hertzen.com/jsfeedback/\n.. _Google Feedback: http://www.google.com/tools/feedback/intl/en/learnmore.html\n.. _Django: https://www.djangoproject.com/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chrispbailey/duat/",
    "keywords": null,
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-duat",
    "package_url": "https://pypi.org/project/django-duat/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-duat/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/chrispbailey/duat/"
    },
    "release_url": "https://pypi.org/project/django-duat/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A lightweight Django User Acceptance Testing feedback tool.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1832974,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1923d6c38e21f045e354151262e9dbe0cb1c1eab7449f825278fc636128f2ff9",
        "md5": "01416c22fa778835c25a581eae33624d",
        "sha256": "580fa61a4ab344eb1246f9c767623a563ce39e1af8442dd49a22f7a7d087f652"
      },
      "downloads": -1,
      "filename": "django-duat-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "01416c22fa778835c25a581eae33624d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22376,
      "upload_time": "2015-11-25T11:53:16",
      "upload_time_iso_8601": "2015-11-25T11:53:16.439645Z",
      "url": "https://files.pythonhosted.org/packages/19/23/d6c38e21f045e354151262e9dbe0cb1c1eab7449f825278fc636128f2ff9/django-duat-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}