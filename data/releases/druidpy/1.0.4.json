{
  "info": {
    "author": "Naresh Kumar B N",
    "author_email": "nareshbn007@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Druidpy\n\nDruidpy provides all the required methods to use the Druid ( an open source database which gives sub second query performance ). Druidpy makes life of druid users easy and simple. \n\n# Overview\n\nDruid users will be doing the below regular activities for working with druid and all of these activities can be done using the druidpy\n\n  - Perform an ingestion\n  - Post a lookup\n  - Delete a lookup\n  - Query the datasource\n  - Get the details about datasources & lookups\n\n# Usage\n\nIn the following paragraphs, I am going to describe how you can get and use Scrapeasy for your own projects.\n\n# Downloading it\n\nTo download druidpy, either fork this github repo or simply use Pypi via pip.\n\n            $ pip install druidpy\n\n# Using it\n\n\n            from druidpy import Druid\n            \n# Available methods to use\n\n     get_status(url)  \n         This function returns the status of node passed. Url is the connection url of any druid process type like broker, coordintor,overlord etc.\n         example : get_status(\"http://localhost:8090\")\n\n     get_health(url) \n        This function returns the health of the node passed. Url is the connection url of any druid process type like broker, coordintor,overlord etc.\n        example : get_health(\"http://localhost:8090\")\n\n     coordinator_leader(coordinator_url)\n        This function returns the current  coordinator leader.\n        example : coordinator_leader(\"http://localhost:8081\")\n\n     overlord_leader(overlord_url)  \n        This function returns the current  overlord leader.\n        example : overlord_leader(\"http://localhost:8090\")\n\n     list_datasources(coordinator_url)\n        This function returns the list of all the data sources available in the cluster of which the passsed coordinator belongs to.\n        example : list_datasources(\"http://localhost:8081\")\n\n     list_segments(coordinator_url, datasource)\n        This function returns the list of all the available segments for the passed data source.\n        example : list_segments(\"http://localhost:8081\",\"wikipedia\")\n\n     list_intervals(coordinator_url, dataset)\n        This function returns the list of all the available intervals for the passed data source.\n        example : list_intervals(\"http://localhost:8081\",\"wikipedia\")\n\n     datasource_meta(coordinator_url, dataset)\n        This function returns the meta data of the passed data source.\n        example : datasource_meta(\"http://localhost:8081\",\"wikipedia\")\n\n     list_tiers(coordinator_url)\n        This function returns all the lookup tiers available in  the  cluster.\n        example : list_tiers(\"http://localhost:8081\")\n\n     list_lookups(coordinator_url, tier)\n        This function returns all the lookups available in the cluster.\n        example : list_lookups(\"http://localhost:8081\")\n\n     lookup_meta(coordinator_url, tier, lookup)  \n        This function returns the meta data of the passed lookup within the given tier.\n        example : list_lookups(\"http://localhost:8081\",\"_default_tier\",\"test_lkp\")\n\n     lookup_status(coordinator_url, tier, lookup)\n        This function returns the state of all the lookups available in the given tier , if the lookup name passed as the parameter then it will return the status of the lookup.\n        example : list_lookups(\"http://localhost:8081\",\"_default_tier\",\"test_lkp\") \n                  list_lookups(\"http://localhost:8081\",\"_default_tier\")\n\n     list_lookups_by_state(coordinator_url, tier, state)\n        This function returns all the lookups with the requested state in the given tier. By default all the lookups with the `True` state will be returned\n         example : list_lookups_by_state(\"http://localhost:8081\",\"_default_tier\",True)  \n                   list_lookups_by_state(\"http://localhost:8081\",\"_default_tier\",False) \n\n     lookup_post(coordinator_url, tier, lookup name, mysql_jdbc, db_user, db_password, key_column, val_column, poll_min):  \n        This function can be used to post the lookup into druid cluster with the given details\n        example : lookup_post(\"http://localhost:8081\",\"_default_tier\",\"test_lkp\",\"<jdbc url of the metastore database with port number>\",\"<db user name>\",\"<db password>\",\"tst_key_col\",\"tst_desc_col\",\"10\")\n        \n     lookup_delete(coordinator_url, tier, lookup)  \n        This function can be used to delete the lookup in the given tier.\n        example: lookup_delete(\"http://localhost:8081\", \"_default_tier\", \"test_lkp\")\n\n     data_query(broker_url, query)  \n        This function can be used to query the data sources availble in the druid.\n        example : data_query(\"http://localhost:8082\", \"select count(*) from wikipedia\") \n\n     ingest_task(overlord_url, ingestion_spec)  \n        This function can be used to post the ingestion task to overlord\n        example : ingest_task(\"http://localhost:8090\", \"/u/users/sampleuser/wikipedia_ingestion.json\") \n            \nAnd you are ready to go!\n\n\n\n\n# License\nMIT License\nCopyright (c) 2018 NARESH KUMAR B N\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Naresh-kumar-B-N/druidpy/archive/v1.0.4.tar.gz",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "druidpy",
    "package_url": "https://pypi.org/project/druidpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/druidpy/",
    "project_urls": {
      "Homepage": "https://github.com/Naresh-kumar-B-N/druidpy/archive/v1.0.4.tar.gz"
    },
    "release_url": "https://pypi.org/project/druidpy/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package which provides minimum required methods for working with Druid through Python!",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6245419,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db478f4a5c130ab669c670c1558d7aa8b50f887b2861ca8997a9500a7d7293f7",
        "md5": "50ef161f9c8a0b562ba409b7cc419a61",
        "sha256": "789489267af552a3fe447e8fbaa6d6122e780f79ddf3ebc2be400f99d4db29dd"
      },
      "downloads": -1,
      "filename": "druidpy-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "50ef161f9c8a0b562ba409b7cc419a61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5565,
      "upload_time": "2019-09-04T05:58:04",
      "upload_time_iso_8601": "2019-09-04T05:58:04.746098Z",
      "url": "https://files.pythonhosted.org/packages/db/47/8f4a5c130ab669c670c1558d7aa8b50f887b2861ca8997a9500a7d7293f7/druidpy-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}