{
  "info": {
    "author": "Rogerio da Costa Dantas Luiz",
    "author_email": "rogeriocdluiz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2"
    ],
    "description": "# Django-SysAce - Sistema de Administração de Cabeamento Estruturado e Infraestrutura de TI\n\n\n[![Documentation Status](https://readthedocs.org/projects/django-sysace/badge/?version=latest)](http://django-sysace.readthedocs.io/en/latest/?badge=latest)\n\nSistema desenvolvido em Django para controle de pontos de rede (voz, dados, voip), ramais, telefones, switches, racks, patchpanels, equipamentos, redes, serviços e endereços IP.\n\nO ACE permite um controle centralizado de várias informações da infraestrutura de TI de uma organização  tais como:\n\n* Listagem de todos os servidores, sejam físicos ou virtuais em uso ou não;\n* Localização dos equipamentos (computadores, impressoras, switches, accesspoints, equipamentos de segurança e outros);\n* Controle de bens;\n* Conexões de rede de equipamentos em tomadas, patchpanels e portas de switches;\n* Controle de VLANs e suas associações a redes e portas de switch;\n* Controle de switches e pilhas (stacks);\n* Controle de redes e endereçamentos IP;\n* Controle de linhas telefônicas sejam elas analógicas, digitais ou VoIP.\n\n### Requisitos (Requirements)\n\n\n- Python 2.7\n- Django 1.11\n\n\n\n### Documentação\n\nCompatível com **Django 1.11**\n\nA documentação está disponível no [Readthedocs](http://django-sysace.readthedocs.io).\n\n\n\n### Instalação\n\n\nCaso esteja utilizando um sistema GNU-Linux será necessário instalar previamente pacotes de desenvolvimento como gcc, make e outros (o pacote build-essential no Debian e Ubuntu) além do python-dev.\n\n* 1 - Instale o ACE com o comando a seguir:\n\n\n    pip install django-sysace\n\n\n\n\n* 2 - Adicione **django.contrib.admin**, **ace** e os outros apps necessários à seção **INSTALLED_APPS** do arquivos **settings.py**.  ::\n\n\n\tINSTALLED_APPS = [\n\t    ...\n\t    'django.contrib.admin',    \n\t    ...\n\t    'ace',\n\t    'simple_history',\n\t    'django_modalview',\n\t    'dal',\n\t    'dal_select2',\n\t    'solo',\n\t    'tinymce',\n\t    'widget_tweaks',\n\t    'django_modalview',\n\t    'django_cron',\n\t    'mail_templated',\n\t    'django_extensions',\n\t    'django_tables2',\n\t    'import_export',\n\t    'massadmin',\n\n\n* 3 - Inclua no arquivo urls.py do projeto URLconf do ace no arquivo urls.py do projeto como mostrado a seguir::\n\n\n\turl(r'^ace/', include('ace.urls')),\n\n\n* 4 - Rode o comando abaixo para criar os modelos do ace::\n\n\n\tpython manage.py migrate\n\n\n\n* 5 -  Inicie o servidor e acesse pelo endereço http://127.0.0.1:8000/admin/\n   (vocẽ precisará do app Admin habilitado).\n    \n* 6 -  Acesse http://127.0.0.1:8000/ace/ para iniciar a inclusão dos componentes da infraestrutura de TI.\n\n\n\n\n#### Resources\n\n\n- [Git graciously hosted](https://github.com/rogeriocdluiz/Django-SysAce) by [GitHub](http://github.com)\n- [Documentation graciously hosted](http://django-sysace.readthedocs.io) by [RTFD](http://rtfd.org)\n- [Package graciously hosted](https://pypi.org/project/django-sysace/) by [PyPi](https://pypi.org)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.rogeriodacosta.com.br/",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sysace",
    "package_url": "https://pypi.org/project/django-sysace/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sysace/",
    "project_urls": {
      "Homepage": "https://www.rogeriodacosta.com.br/"
    },
    "release_url": "https://pypi.org/project/django-sysace/1.2.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "ACE is a Django app to administrate networks hosts, ip address, services, racks, patchpanels, phones and more. The system objective is turn the IT Infraestructure adminsitration easyer.",
    "version": "1.2.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5300036,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ad87436193316be4822ab06b855e414dfcf39dd9f8ee514f47ed4450e0c0703",
        "md5": "a704ae8edd0918bf787056d96f50e86d",
        "sha256": "500fe4036dcaba890fb5d1c21096fe17995450b478b04235568e2f1d85d4bf98"
      },
      "downloads": -1,
      "filename": "django-sysace-1.2.8.tar.gz",
      "has_sig": false,
      "md5_digest": "a704ae8edd0918bf787056d96f50e86d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14820116,
      "upload_time": "2019-05-21T22:04:35",
      "upload_time_iso_8601": "2019-05-21T22:04:35.805542Z",
      "url": "https://files.pythonhosted.org/packages/5a/d8/7436193316be4822ab06b855e414dfcf39dd9f8ee514f47ed4450e0c0703/django-sysace-1.2.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}