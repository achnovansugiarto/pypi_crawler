{
  "info": {
    "author": "Jérôme Lebleu",
    "author_email": "jerome.lebleu@cliss21.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Foundation Forms for Django\n===========================\n\nA reusable Django application for rendering forms with `Foundation for\nSites <http://foundation.zurb.com/sites/docs/>`__.\n\nRequirements\n------------\n\n-  Python 3.5, 3.6 and 3.7\n-  Django 2.0.x, 2.1.x and 2.2.x (Jinja2 is not supported yet)\n-  Foundation for Sites 6.x\n\nNote that this application does not include Foundation for Sites assets\nso that you can customize it as you need. Get started by reading its\n`documentation <http://foundation.zurb.com/sites/getting-started.html>`__!\n\nFeatures\n--------\n\n-  Displays the field label as well as its help text\n-  Renders the Django base Widgets following the `Forms\n   component <http://foundation.zurb.com/sites/docs/forms.html>`__\\ ’s\n   guidelines\n-  Shows the field errors as needed and sets the proper CSS classes on\n   the field label and the input\n\nInstallation\n------------\n\n1. Install Foundation Forms for Django:\n\n   ::\n\n      pip install django-fsforms\n\n2. Add it to the ``INSTALLED_APPS`` in your ``settings.py``:\n\n   .. code:: python\n\n      INSTALLED_APPS = (\n          ...\n          'fsforms',\n          ...\n      )\n\n3. Set the ``FORM_RENDERER`` in your ``settings.py`` to use\n   ``fsforms``\\ ’ one:\n\n   -  If you are using Django templates:\n\n      .. code:: python\n\n         FORM_RENDERER = 'fsforms.renderers.DjangoTemplates'\n\n   -  If you are using ``TemplateSetting`` as form renderer, you just\n      have to ensure that the ``fsforms`` templates will be sourced\n      before the built-in widgets templates directory.\n\n   Note that this step is required since Django is loading templates\n   first from the built-in form templates directory in ``django/forms``\n   when using those backends (see the `Built-in-template form renderers’\n   doc <https://docs.djangoproject.com/en/stable/ref/forms/renderers/#built-in-template-form-renderers>`__).\n\nUsage\n-----\n\nIn your template, you will just have to load ``fsforms`` then use the\n``fsfield`` tag to render a form field.\n\n.. code:: django\n\n   {% load fsforms %}\n\n   <form action=\"/url/to/submit/\" method=\"post\">\n     {% csrf_token %}\n     <ul class=\"no-bullet\">\n       <li>{% fsfield form.simple_field %}</li>\n       <li>{% fsfield form.other_field label_class=\"my-field\" %}</li>\n     </ul>\n     <div class=\"button-holder\">\n       <button type=\"submit\" class=\"button\">Submit</button>\n     </div>\n   </form>\n\nHere are the special arguments you can pass to the ``fsfield`` tag: -\n``show_label``: a boolean which turns on or off the label output. Note\nthat label of choices widgets will always be displayed. -\n``label_class``: a string which contains additional CSS classes to apply\nto the label element. - ``show_errors``: a boolean which turns on or off\nthe field errors’ output as well as the CSS classes applied to the\nelements - e.g. ``is-invalid-input`` and ``is-invalid-label``. Default\nis ``True``. - ``as_list``: a boolean which controls the rendering of\nchoices widgets - i.e. RadioSelect and CheckboxSelectMultiple. When set\nto ``True`` - the default, the fields will be rendered inline and\nwrapped inside a fieldset as suggested by the Forms component.\nOtherwise, they will be rendered as a list.\n\nAll the remaining arguments will be added to the widget attributes. As\nregards the ``required`` one, you can alter its value too but only with\nclient-side effect. It means that if a field is defined as required in\nthe form class and you pass ``required=False`` to the tag, it will\nappear as non-required to the user but will still be validated at the\nform’s submission.\n\nLicense\n-------\n\nYou can use this under GNU AGPLv3+. See `LICENSE <LICENSE>`__ file for\ndetails.\n\n\nChangelog\n---------\n\n[6.0.0] - 2019-09-23\n--------------------\n\nFixed\n~~~~~\n\n-  Add compatibility for Django >= 2.1 and Python 3.5\n\n[6.0.0rc2] - 2018-04-11\n-----------------------\n\nAdded\n~~~~~\n\n-  ``fsfield`` tag to render a form field using Foundation Forms\n   structure.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://forge.cliss21.org/cliss21/django-fsforms",
    "keywords": "",
    "license": "GNU AGPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-fsforms",
    "package_url": "https://pypi.org/project/django-fsforms/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-fsforms/",
    "project_urls": {
      "Homepage": "https://forge.cliss21.org/cliss21/django-fsforms"
    },
    "release_url": "https://pypi.org/project/django-fsforms/6.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A reusable Django application for rendering forms with Foundation for Sites.",
    "version": "6.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5872197,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79981c6c1a41154b515dd0ce90ea84349cd679050af5b869bce6a9798f11bc5c",
        "md5": "3b83076715c11f191bd1b96fe140825d",
        "sha256": "d5378b47ac3fef460464b7c9e9deead58f7ad832b7f2cf59f448c02add3e6e09"
      },
      "downloads": -1,
      "filename": "django_fsforms-6.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b83076715c11f191bd1b96fe140825d",
      "packagetype": "bdist_wheel",
      "python_version": "3.7",
      "requires_python": null,
      "size": 21037,
      "upload_time": "2019-09-23T08:24:47",
      "upload_time_iso_8601": "2019-09-23T08:24:47.339863Z",
      "url": "https://files.pythonhosted.org/packages/79/98/1c6c1a41154b515dd0ce90ea84349cd679050af5b869bce6a9798f11bc5c/django_fsforms-6.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b835d034357ede71797e67dd8ad72ad9e2ff9682391fc543039c94d0655cf1c5",
        "md5": "ccf691cf4bb914ce9e45e8c573be7095",
        "sha256": "799870aa3122de7cd57ee513f5bd9fe31733d97a4242b4c0bf69f98817bbd6a8"
      },
      "downloads": -1,
      "filename": "django-fsforms-6.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ccf691cf4bb914ce9e45e8c573be7095",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18441,
      "upload_time": "2019-09-23T08:24:42",
      "upload_time_iso_8601": "2019-09-23T08:24:42.200041Z",
      "url": "https://files.pythonhosted.org/packages/b8/35/d034357ede71797e67dd8ad72ad9e2ff9682391fc543039c94d0655cf1c5/django-fsforms-6.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}