{
  "info": {
    "author": "lcd1232",
    "author_email": "malexey1984@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database"
    ],
    "description": "![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-postgrespool2)\n[![PyPI - License](https://img.shields.io/pypi/l/django-postgrespool2)](https://github.com/lcd1232/django-postgrespool2/blob/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/django-postgrespool2)](https://pypi.org/project/django-postgrespool2/)\n\n# Django-PostgresPool2\nThis is simple PostgreSQL connection pooling for Django. You can use it as an alternative for [PgBouncer](https://www.pgbouncer.org/).\nThis is a fork of the original [django-postgrespool](https://github.com/kennethreitz/django-postgrespool).\n\n## Installation\n\nInstalling Django-PostgresPool2 is simple, with pip:\n```bash\n$ pip install django-postgrespool2\n```\n\n## Usage\n\nUsing Django-PostgresPool2 is simple, just set `django_postgrespool2` as your connection engine:\n```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_postgrespool2\",\n        \"NAME\": \"yourdb\",\n        \"USER\": \"user\",\n        \"PASSWORD\": \"some_password\",\n        \"HOST\": \"localhost\",\n    }\n}\n```\nIf you're using the [environ](https://github.com/joke2k/django-environ) module:\n```python\nimport environ\n\nenv = environ.Env()\n\nDATABASES = {\"default\": env.db(\"DATABASE_URL\", engine=\"django_postgrespool2\")}\n```\nEverything should work as expected.\n\nConfiguration\n-------------\n\nOptionally, you can provide pool class to construct the pool (default `sqlalchemy.pool.QueuePool`) or additional options to pass to SQLAlchemy's pool creation.\nList of possible values `DATABASE_POOL_CLASS` is [here](https://docs.sqlalchemy.org/en/14/core/pooling.html#api-documentation-available-pool-implementations)\n```python\nDATABASE_POOL_CLASS = 'sqlalchemy.pool.QueuePool'\n\nDATABASE_POOL_ARGS = {\n    'max_overflow': 10,\n    'pool_size': 5,\n    'recycle': 300,\n}\n```\nHere's a basic explanation of two of these options:\n\n-   **pool_size** – The *minimum* number of connections to maintain in the pool.\n-   **max_overflow** – The maximum *overflow* size of the pool. This is not the maximum size of the pool.\n-   **recycle** - Number of seconds between connection recycling, which means upon checkout, if this timeout is surpassed the connection will be closed and replaced with a newly opened connection.\n\nThe total number of \"sleeping\" connections the pool will allow is `pool_size`. The total simultaneous connections the pool will allow is `pool_size + max_overflow`.\n\nAs an example, databases in the [Heroku Postgres](https://www.heroku.com/postgres) starter tier have a maximum connection limit of 20. In that case your `pool_size` and `max_overflow`, when combined, should not exceed 20.\n\nCheck out the official [SQLAlchemy Connection Pooling](http://docs.sqlalchemy.org/en/latest/core/pooling.html#sqlalchemy.pool.QueuePool.__init__) docs to learn more about the optoins that can be defined in `DATABASE_POOL_ARGS`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lcd1232/django-postgrespool2",
    "keywords": "postgresql,django,pool,pgbouncer",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-postgrespool2",
    "package_url": "https://pypi.org/project/django-postgrespool2/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-postgrespool2/",
    "project_urls": {
      "Homepage": "https://github.com/lcd1232/django-postgrespool2"
    },
    "release_url": "https://pypi.org/project/django-postgrespool2/2.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "PostgreSQL connection pooling for Django.",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15286853,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9a31c4669e0a27f232b574d932b02833549ad97685fcf15b6d6df0f678aad69",
        "md5": "013ee3d475462bd1a1e56bd63159a577",
        "sha256": "8b2979be3373128bf6691c875da3ac704969d95378b1d4db0d5d07760552752e"
      },
      "downloads": -1,
      "filename": "django-postgrespool2-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "013ee3d475462bd1a1e56bd63159a577",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7812,
      "upload_time": "2022-07-17T09:55:16",
      "upload_time_iso_8601": "2022-07-17T09:55:16.192601Z",
      "url": "https://files.pythonhosted.org/packages/a9/a3/1c4669e0a27f232b574d932b02833549ad97685fcf15b6d6df0f678aad69/django-postgrespool2-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}