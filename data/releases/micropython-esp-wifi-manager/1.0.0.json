{
  "info": {
    "author": "brainelectronics",
    "author_email": "info@brainelectronics.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# ESP WiFi Manager\n\nMicroPython WiFi Manager to configure and connect to networks\n\n-----------------------\n\n\n## Setup\n\nThe [esptool][ref-esptool] is required to flash the micropython firmware onto\nthe device.\n\nFor interaction with the filesystem of the device the\n[Remote MicroPython shell][ref-remote-upy-shell] can be used.\n\n### Installation\n\nInstall both python packages with the following command in a virtual\nenvironment to avoid any conflicts with other packages installed on your local\nsystem.\n\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\n\npip install esptool\npip install rshell\n```\n\nTest both tools by showing their man/help info description.\n\n```bash\nesptool.py --help\nrshell --help\n```\n\n### Flash firmware\n\nTo flash the [micropython firmware][ref-upy-firmware-download] as described on\nthe micropython firmware download page, use the `esptool.py` to erase the\nflash before flashing the firmware.\n\n```bash\nesptool.py --chip esp32 --port /dev/tty.SLAB_USBtoUART erase_flash\nesptool.py --chip esp32 --port /dev/tty.SLAB_USBtoUART --baud 460800 write_flash -z 0x1000 esp32-20210623-v1.16.bin\n```\n\nIf the Micropython board is equipped with an external PSRAM chip, the\n`esp32spiram-20210623-v1.16.bin` can also be used for ESP32 devices. If there\nis no external PRSAM only the non SPIRAM version is working.\n\n### Upload files to board\n\n#### Install package with pip\n\nConnect to a network\n\n```python\nimport network\nstation = network.WLAN(network.STA_IF)\nstation.connect('SSID', 'PASSWORD')\nstation.isconnected()\n```\n\nand install this lib on the MicroPython device like this\n\n```python\nimport upip\n# may use the latest test version of it, by adding test.pypi.org as the first\n# location to search for the package\n# upip.index_urls = [\"https://test.pypi.org/pypi\", \"https://micropython.org/pi\", \"https://pypi.org/pypi\"]\nupip.install('micropython-esp-wifi-manager')\n# its dependencies will be installed alongside\n\n# if test.pypi.org is added to the index urls, required depencendies won't be\n# installed if they are not available from test.pypi.org, may install them\n# manually\n# upip.index_urls = [\"https://micropython.org/pi\", \"https://pypi.org/pypi\"]\n# upip.install('picoweb')\n# upip.install('micropython-ulogging')\n# upip.install('utemplate')\n```\n\n#### rshell\n\nCopy the module(s) to the MicroPython board and import them as shown below\nusing [Remote MicroPython shell][ref-remote-upy-shell]\n\nOpen the remote shell with the following command. Additionally use `-b 115200`\nin case no CP210x is used but a CH34x.\n\n```bash\nrshell -p /dev/tty.SLAB_USBtoUART --editor nano\n```\n\nCreate compressed CSS and JS files as described in the\n[simulation static files README](simulation/static) to save disk space on the\ndevice and increase the performance (webpages are loading faster)\n\n```bash\nmkdir /pyboard/lib/\nmkdir /pyboard/lib/wifi_manager/\nmkdir /pyboard/lib/wifi_manager/static/\nmkdir /pyboard/lib/wifi_manager/static/css\ncp static/css/*.gz /pyboard/lib/wifi_manager/static/css\n# around 24kB compared to uncompressed 120kB\n\n# optional, not used so far\n# mkdir /pyboard/lib/wifi_manager/static/js\n# cp static/js/*.gz /pyboard/lib/wifi_manager/static/js\n# around 12kB compared to uncompressed 40kB\n\nmkdir /pyboard/lib/wifi_manager/templates/\ncp templates/* /pyboard/lib/wifi_manager/templates/\n# around 20kB\n\ncp wifi_manager/wifi_manager.py /pyboard/lib/wifi_manager/\ncp main.py /pyboard\ncp boot.py /pyboard\n# around 40kB\n```\n\n##### Open REPL in rshell\n\nCall `repl` in the rshell. Use CTRL+X to leave the repl or CTRL+D for a soft\nreboot of the device\n\n### Install Micropython Packages\n\nRestart ESP device and open the printed IP address in your browser\n\nClose all connection, and start REPL of uPyCraft or other serial connection.\n\n```python\nimport upip\nupip.install('picoweb')\nupip.install('utemplate')\nupip.install('micropython-ulogging')\nupip.install('micropython-brainelectronics-helper')\n```\n\n<!-- Links -->\n[ref-esptool]: https://github.com/espressif/esptool\n[ref-remote-upy-shell]: https://github.com/dhylands/rshell\n[ref-upy-firmware-download]: https://micropython.org/download/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brainelectronics/Micropython-ESP-WiFi-Manager",
    "keywords": "micropython,brainelectronics,wifi,wifimanager,library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-esp-wifi-manager",
    "package_url": "https://pypi.org/project/micropython-esp-wifi-manager/",
    "platform": "",
    "project_url": "https://pypi.org/project/micropython-esp-wifi-manager/",
    "project_urls": {
      "Bug Reports": "https://github.com/brainelectronics/Micropython-ESP-WiFi-Manager/issues",
      "Homepage": "https://github.com/brainelectronics/Micropython-ESP-WiFi-Manager",
      "Source": "https://github.com/brainelectronics/Micropython-ESP-WiFi-Manager"
    },
    "release_url": "https://pypi.org/project/micropython-esp-wifi-manager/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MicroPython WiFi Manager to configure and connect to networks",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16926360,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4772b61e21f867252c8d7ef08c493cf67a6f8e3e83dfc4088f07f75fca8e635c",
        "md5": "cb281e7eb0f328132c59c339e01b1fba",
        "sha256": "4e8b230f88354b7297cbd4a056856f5f53e7b3824985056cfbd71d87449cf07a"
      },
      "downloads": -1,
      "filename": "micropython-esp-wifi-manager-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb281e7eb0f328132c59c339e01b1fba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 70492,
      "upload_time": "2022-02-25T11:57:55",
      "upload_time_iso_8601": "2022-02-25T11:57:55.395993Z",
      "url": "https://files.pythonhosted.org/packages/47/72/b61e21f867252c8d7ef08c493cf67a6f8e3e83dfc4088f07f75fca8e635c/micropython-esp-wifi-manager-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}