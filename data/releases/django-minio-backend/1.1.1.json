{
  "info": {
    "author": "Kristof Daja (theriverman)",
    "author_email": "kristof@daja.hu",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "# django-minio-backend\nThe `django-minio-backend` provides a wrapper around the \n[MinIO Python SDK](https://docs.min.io/docs/python-client-quickstart-guide.html).\n\n## Integration\n1. Get and install the package:\n    `pip install django-minio-backend`\n\n2. Add `django_minio_backend` to `INSTALLED_APPS`:\n    ```python\n    INSTALLED_APPS = [\n        '...'\n        'django_minio_backend',  # django-minio-backend | https://github.com/theriverman/django-minio-backend\n    ]\n    ```\n\n3. Add the following parameters to your `settings.py`:\n    ```python\n    from datetime import timedelta\n    MINIO_ENDPOINT = 'minio.yourcompany.co.uk'\n    MINIO_ACCESS_KEY = 'yourMinioAccessKey'\n    MINIO_SECRET_KEY = 'yourVeryS3cr3tP4ssw0rd'\n    MINIO_USE_HTTPS = True\n    MINIO_PRIVATE_BUCKET_NAME = 'my-app-private'\n    MINIO_PUBLIC_BUCKET_NAME = 'my-app-public'\n    MINIO_URL_EXPIRY_HOURS = timedelta(days=1)\n    ```\n\n4. Implement your own Attachment handler and integrate django-minio-backend:\n    ```python\n    from django.db import models\n    from django_minio_backend import MinioBackend, iso_date_prefix\n    \n    # noinspection PyUnresolvedReferences\n    class PrivateAttachment(models.Model):   \n        file = models.FileField(verbose_name=\"Object Upload\", storage=MinioBackend(is_public=False),\n                                upload_to=iso_date_prefix)\n    ```\n\n5. Initialize buckets & set public policy (OPTIONAL):<br>\n    This `django-admin` command creates both the private and public buckets in case one of them does not exists\n    and sets the public bucket's privacy policy from private(default) to public.<br>\n    `python manage.py initialize_buckets`\n    \n    Code reference: [initialize_buckets.py](django_minio_backend/management/commands/initialize_buckets.py).\n\n### Health Check\nTo check the connection link between Django and MinIO, use the provided `MinioBackend.is_minio_available()` method.<br>\nIt returns a `MinioServerStatus` instance which can be quickly evaluated as boolean.<br>\n\n**Example:**\n```\nminio_available = MinioBackend.is_minio_available()\nif minio_available:\n    print(\"OK\")\nelse:\n    print(\"NOK\")\n    print(minio_available.details)\n```\n\n\n### Reference Implementation\nFor a reference implementation, see [Examples](examples).\n\n## Compatibility\n  * Django 2.0 or later\n  * Python 3.5.0 or later\n\n**Note:** This library relies heavily on [PEP 484 -- Type Hints](https://www.python.org/dev/peps/pep-0484/) \nwhich was introduced in *Python 3.5.0*.\n\n## Contribution\nTo build a new package, execute the following command:\n`python setup.py sdist`\n\n## Copyright\n  * theriverman/django-minio-backend licensed under the MIT License\n  * minio/minio-py is licensed under the Apache License 2.0",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theriverman/django-minio-backend",
    "keywords": "",
    "license": "MIT License | Copyright (c) 2019 Kristof Daja",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-minio-backend",
    "package_url": "https://pypi.org/project/django-minio-backend/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-minio-backend/",
    "project_urls": {
      "Homepage": "https://github.com/theriverman/django-minio-backend"
    },
    "release_url": "https://pypi.org/project/django-minio-backend/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The django-minio-backend provides a wrapper around the MinIO Python Library.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17452448,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "816a792d2d663831a6a16908e332fae72217771d33e4155fb9f5e1468377eead",
        "md5": "bc07e7d19aa36c408585003542b296f2",
        "sha256": "6eba45ba25c65df9464c12ae3efb5679e46170f890a6aa5aeaea7ee3187451f7"
      },
      "downloads": -1,
      "filename": "django-minio-backend-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bc07e7d19aa36c408585003542b296f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8175,
      "upload_time": "2019-10-24T08:25:51",
      "upload_time_iso_8601": "2019-10-24T08:25:51.592330Z",
      "url": "https://files.pythonhosted.org/packages/81/6a/792d2d663831a6a16908e332fae72217771d33e4155fb9f5e1468377eead/django-minio-backend-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}