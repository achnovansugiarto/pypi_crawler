{
  "info": {
    "author": "adi-",
    "author_email": "aaadeji@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "# django-markdownx [![Version](https://img.shields.io/pypi/v/django-markdownx.svg)](https://pypi.python.org/pypi/django-markdownx/)\n\n[![Travis](https://img.shields.io/travis/adi-/django-markdownx.svg)](https://travis-ci.org/adi-/django-markdownx)\n[![Python Versions](https://img.shields.io/pypi/pyversions/django-markdownx.svg)](https://pypi.python.org/pypi/django-markdownx/)\n[![Status](https://img.shields.io/pypi/status/django-markdownx.svg)](https://pypi.python.org/pypi/django-markdownx/)\n[![Downloads](https://img.shields.io/pypi/dm/django-markdownx.svg)](https://pypi.python.org/pypi/django-markdownx/)\n[![License](https://img.shields.io/pypi/l/django-markdownx.svg)](https://pypi.python.org/pypi/django-markdownx/)\n\nDjango Markdownx is a Markdown editor built for Django. It enables raw editing with a live preview and image uploads (stored locally in `MEDIA_ROOT` folder! yay!) with drag&drop functionality and auto tag insertion. Also, django-markdownx supports multiple editors on one page.\n\nTemplate is highly customizable, so you can easily use i.e. Bootstrap to layout editor pane and preview pane side by side (as in preview animation below).\n\n*Side note: Just to keep it simple, all UI editing controls are unwelcome – this is Markdown editor not a web MS Word imitation.*\n\n##### Preview\n\n![Preview](https://github.com/adi-/django-markdownx/blob/master/django-markdownx-preview.gif?raw=true \"Preview\")\n\n*(using Bootstrap for layout and styling)*\n\n\n##### Menu\n\n* [Quick Start](#quick-start)\n* [Usage](#usage)\n    * [Model](#model)\n    * [Form](#form)\n    * [Django Admin](#django-admin)\n* [Customization](#customization)\n    * [Settings](#settings)\n    * [Widget's template](#widgets-template)\n* [Dependencies](#dependencies)\n* [Changelog](#changelog)\n* [License](#license)\n\n----\n\n# Quick Start\n\n1. Install `django-markdownx` package.\n\n    ```python\n    pip install django-markdownx\n    ```\n\n\n1. Add `markdownx` to your `INSTALLED_APPS`.\n\n    ```python\n    #settings.py\n    INSTALLED_APPS = (\n        [...]\n        'markdownx',\n    )\n    ```\n\n1. Add url pattern to your `urls.py`.\n\n    ```python\n    #urls.py\n    urlpatterns = [\n        [...]\n        url(r'^markdownx/', include('markdownx.urls')),\n    ]\n    ```\n\n1. Collect included `markdownx.js` and `markdownx.css` (for django admin styling) to your `STATIC_ROOT` folder.\n\n    ```python\n    python manage.py collectstatic\n    ```\n\n1. ...and don't forget to include jQuery in your html file.\n\n    ```html\n    <head>\n        [...]\n        <script src=\"//code.jquery.com/jquery-2.1.1.min.js\"></script>\n    </head>\n    ```\n\n# Usage\n\n## Model\n\n```python\n#models.py\nfrom markdownx.models import MarkdownxField\n\nclass MyModel(models.Model):\n\n    myfield = MarkdownxField()\n```\n\n...and then, include a form's required media in the template using `{{ form.media }}`:\n\n```html\n<form method=\"POST\" action=\"\">{% csrf_token %}\n    {{ form }}\n</form>\n{{ form.media }}\n```\n\n## Form\n\n```python\n#forms.py\nfrom markdownx.fields import MarkdownxFormField\n\nclass MyForm(forms.Form):\n\n    myfield = MarkdownxFormField()\n```\n\n...and then, include a form's required media in the template using `{{ form.media }}`:\n\n```html\n<form method=\"POST\" action=\"\">{% csrf_token %}\n    {{ form }}\n</form>\n{{ form.media }}\n```\n\n## Django Admin\n\nWhen using included `MarkdowxModel` class in your models, just use `MarkdownxModelAdmin` as follows:\n\n```python\n#admin.py\nfrom django.contrib import admin\n\nfrom markdownx.admin import MarkdownxModelAdmin\n\nfrom .models import MyModel\n\nadmin.site.register(MyModel, MarkdownxModelAdmin)\n```\n\nHowever, when you want to use `markdownx` with other classes – lets say `TextField` – than override default widget as below:\n\n```python\n#admin.py\nfrom django.db import models\nfrom django.contrib import admin\n\nfrom markdownx.widgets import AdminMarkdownxWidget\n\nfrom .models import MyModel\n\nclass MyModelAdmin(admin.ModelAdmin):\n    formfield_overrides = {\n        models.TextField: {'widget': AdminMarkdownxWidget},\n    }\n\nadmin.site.register(MyModel, MyModelAdmin)\n```\n\n\n# Customization\n\n## Settings\n\nPlace settings in your `settings.py` to override default values:\n\n```python\n#settings.py\nMARKDOWNX_MARKDOWN_EXTENSIONS = []\nMARKDOWNX_URLS_PATH = '/markdownx/markdownify/' # Urls path that returns compiled markdown text. Change this path to your custom app url. That could i.e. enable do some additional work with compiled markdown text.\nMARKDOWNX_MEDIA_PATH = 'markdownx/' # subdirectory, where images will be stored in MEDIA_ROOT folder\nMARKDOWNX_UPLOAD_MAX_SIZE = 52428800 # 50MB\nMARKDOWNX_UPLOAD_CONTENT_TYPES = ['image/jpeg', 'image/png']\nMARKDOWNX_IMAGE_MAX_SIZE = {'size': (500, 500), 'quality': 90,}\nMARKDOWNX_EDITOR_RESIZABLE = True # update editor's height to inner content height while typing\n```\n\n**NOTE:** `MARKDOWNX_IMAGE_MAX_SIZE` dict properties:\n\n* **size** – (width, height). When `0` used, i.e.: (500,0),  property will figure out proper height by itself\n* **quality** – default: `90` – image quality, from `0` (full compression) to `100` (no compression)\n* **crop** – default: `False` – if `True` use `size` to crop final image\n* **upscale** – default: `False` – if image dimensions are smaller than those in `size`, upscale image to `size` dimensions\n\n## Custom MARKDOWNX_URLS_PATH\n\nChange this path to your app path in `urls.py`. Default view that compiles markdown text:\n\n```python\n#views.py\nimport markdown\n\nfrom django.http import HttpResponse\nfrom django.views.generic.edit import View\n\nfrom _your_app_.settings import MARKDOWNX_MARKDOWN_EXTENSIONS\n\nclass MarkdownifyView(View):\n\n    def post(self, request, *args, **kwargs):\n        return HttpResponse(markdown.markdown(request.POST['content'], extensions=MARKDOWNX_MARKDOWN_EXTENSIONS))\n```\n\n## Widget's template\n\nDefault widget's template looks like:\n\n```html\n<div class=\"markdownx\">\n    {{ markdownx_editor }}\n    <div class=\"markdownx-preview\"></div>\n</div>\n```\n\nWhen you want to use Bootstrap 3 and side-by-side panes (as in preview image above), just place `templates/markdownx/widget.html` file in your project with:\n\n```html\n<div class=\"markdownx row\">\n    <div class=\"col-md-6\">\n        {{ markdownx_editor }}\n    </div>\n    <div class=\"col-md-6\">\n        <div class=\"markdownx-preview\"></div>\n    </div>\n</div>\n```\n\n# Dependencies\n\n* Markdown\n* Pillow\n* Django\n* jQuery\n\n# Changelog\n\n###### v1.2.1\n\n* Fix by Eduard Sukharev: Fix accessing file length in python3\n\n###### v1.2\n\n* Added custom url path setting MARKDOWNX_URLS_PATH to compile markdown with custom view (i.e. for pre/post altering markdown text)\n\n###### v1.1.3\n\n* Setup tools fix\n\n###### v1.1.2\n\n* Critical fix for image upload\n\n###### v1.1.1\n\n* Package fix\n\n###### v1.1\n\n* Python 3.3+ support\n* Very simple test added just to test python 3 support\n\n###### v1.0.1\n\n* Moved html logic from FormField to Widget to be able to override model objects other than included MarkdownxModel\n* Fixed default value for `MARKDOWNX_EDITOR_RESIZABLE`\n\n###### v1.0.0\n\n* Warning: no backward compatibility\n* Admin, Model and Form custom objects\n* Django admin styles for compiled markdown\n* Settings variables changed:\n    * MARKDOWNX_MAX_SIZE => MARKDOWNX_IMAGE_MAX_SIZE\n    * MARKDOWNX_MARKDOWN_KWARGS => MARKDOWNX_MARKDOWN_EXTENSIONS\n    * MARKDOWNX_MAX_UPLOADSIZE => MARKDOWNX_UPLOAD_MAX_SIZE\n    * MARKDOWNX_CONTENT_TYPES => MARKDOWNX_UPLOAD_CONTENT_TYPES\n\n###### v0.4.2\n\n* Path fix by argaen\n\n###### v0.4.1\n\n* Better editor height updates\n* Refresh preview on image upload\n* Small JS code fixes\n\n###### v0.4.0\n\n* editor auto height\n\n###### v0.3.1\n\n* JS event fix\n\n###### v0.3.0\n\n* version bump\n\n###### v0.2.9\n\n* Removed any inlcuded css\n* Removed JS markdown compiler (full python support now with Markdown lib)\n\n###### v0.2.0\n\n* Allow to paste tabs using Tab button\n\n###### v0.1.4\n\n* package data fix\n\n###### v0.1.3\n\n* README.md fix on PyPi\n\n###### v0.1.2\n\n* critical setuptools fix\n\n###### v0.1.1\n\n* change context name `editor` to `markdownx_editor` for better consistency\n\n###### v0.1.0\n\n* init\n\n\n# License\n\ndjango-markdown is licensed under the open source BSD license\n\n\n# Notes\n\n**django-markdownx** was inspired by great [django-images](https://github.com/mirumee/django-images) and [django-bootstrap-markdown](http://thegoods.aj7may.com/django-bootstrap-markdown/) packages.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adi-/django-markdownx",
    "keywords": "django markdown live preview images upload",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-markdownx",
    "package_url": "https://pypi.org/project/django-markdownx/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-markdownx/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/adi-/django-markdownx"
    },
    "release_url": "https://pypi.org/project/django-markdownx/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Markdown editor with image uploads (stored in MEDIA_ROOT folder) and live preview.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17525097,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf32f8396b5786bde2b0e9867cff554011a778037509df98126a4723713834d4",
        "md5": "5f076906cd957d61a091a9bd5ce5ea4b",
        "sha256": "d14f10c328f4dc5b672c3dd09186c94c2c2eb71eb91b88c782bc696c9374ba25"
      },
      "downloads": -1,
      "filename": "django-markdownx-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f076906cd957d61a091a9bd5ce5ea4b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19320,
      "upload_time": "2015-10-19T18:14:49",
      "upload_time_iso_8601": "2015-10-19T18:14:49.502804Z",
      "url": "https://files.pythonhosted.org/packages/cf/32/f8396b5786bde2b0e9867cff554011a778037509df98126a4723713834d4/django-markdownx-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}