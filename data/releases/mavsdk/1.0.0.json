{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.6+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development (editable) version of the package using:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.0.0/",
    "requires_dist": [
      "aiogrpc (>=1.5)",
      "grpcio (>=1.11.0)",
      "protobuf (>=3.13.0)",
      "importlib-resources (>=1.0.2) ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19010578089058a6beb290e8da25ddcf3e739b55fd8d02e093db0e7a137f7909",
        "md5": "1959f488cf3749150014a74204fb13e5",
        "sha256": "037e478b88ae92e821daf83995f0ac1a3688c294efdfc0e3fdcbc4dcd1000823"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "1959f488cf3749150014a74204fb13e5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11146538,
      "upload_time": "2022-03-18T00:03:14",
      "upload_time_iso_8601": "2022-03-18T00:03:14.232364Z",
      "url": "https://files.pythonhosted.org/packages/19/01/0578089058a6beb290e8da25ddcf3e739b55fd8d02e093db0e7a137f7909/mavsdk-1.0.0-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b38615cd6371933db674fef14a7c1fa572241b5aed4993df09429bad489673c7",
        "md5": "7e6b89683b64e35a54d0de2d9d004408",
        "sha256": "16a1a9e0eb16e5b17c69cd23afce534d232370ccfe4056ce6a9628f1017dbf01"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "7e6b89683b64e35a54d0de2d9d004408",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11146453,
      "upload_time": "2022-03-18T00:03:23",
      "upload_time_iso_8601": "2022-03-18T00:03:23.232290Z",
      "url": "https://files.pythonhosted.org/packages/b3/86/15cd6371933db674fef14a7c1fa572241b5aed4993df09429bad489673c7/mavsdk-1.0.0-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30d8d774140b5c22a9d0e191258dff9b490abf3b0f729c30ef0327a6d199e2db",
        "md5": "ed490098a3393a4734ba2e2026f5c9d5",
        "sha256": "5d1f8a4a697020294b1cfd3a8b01fbaa903f97dc05376d0d4fea3442f76a3adb"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ed490098a3393a4734ba2e2026f5c9d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6746674,
      "upload_time": "2022-03-18T00:03:50",
      "upload_time_iso_8601": "2022-03-18T00:03:50.092907Z",
      "url": "https://files.pythonhosted.org/packages/30/d8/d774140b5c22a9d0e191258dff9b490abf3b0f729c30ef0327a6d199e2db/mavsdk-1.0.0-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12bfe6b33bd212560aaf8137c34b75f99d827e5fc75ddf08cf796815374e94f7",
        "md5": "f8e041867abf98ab2626c90be08ea91f",
        "sha256": "a3dcceb9ca3757a96cea4b17dc526e9a2664df1176e302536414c0e0e9e9939d"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "f8e041867abf98ab2626c90be08ea91f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11977358,
      "upload_time": "2022-03-18T00:03:13",
      "upload_time_iso_8601": "2022-03-18T00:03:13.910538Z",
      "url": "https://files.pythonhosted.org/packages/12/bf/e6b33bd212560aaf8137c34b75f99d827e5fc75ddf08cf796815374e94f7/mavsdk-1.0.0-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5837edee815d205723baaa86986c1150559f47949856b114fdf1058005ceb88e",
        "md5": "10b6928846e0151c2dca42be8fb0a87b",
        "sha256": "12f1163e5ac28a9230636dec58fde276bf9985b2eaed69ef0926188ddcb24ea7"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "10b6928846e0151c2dca42be8fb0a87b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11452962,
      "upload_time": "2022-03-18T00:03:36",
      "upload_time_iso_8601": "2022-03-18T00:03:36.562419Z",
      "url": "https://files.pythonhosted.org/packages/58/37/edee815d205723baaa86986c1150559f47949856b114fdf1058005ceb88e/mavsdk-1.0.0-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a017c74225c00454e452f8737499015527ad19ddee2ba32c717ba5d432a8718",
        "md5": "678fd4bc98dcb7ed19f2d2bf1f45dec6",
        "sha256": "3d662118dd891fb3e82a7e5eb97e9cd2f97e50c649ed1a995b48ae8417c568a9"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "678fd4bc98dcb7ed19f2d2bf1f45dec6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3974319,
      "upload_time": "2022-03-18T00:03:36",
      "upload_time_iso_8601": "2022-03-18T00:03:36.452912Z",
      "url": "https://files.pythonhosted.org/packages/8a/01/7c74225c00454e452f8737499015527ad19ddee2ba32c717ba5d432a8718/mavsdk-1.0.0-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f908f1c3d14d35a53ad7972e70c31acbce6227b1b0ad84cb030355fd4a258e79",
        "md5": "602570b533256e83c1568e44e14aca1e",
        "sha256": "02909c4439b7fbf2f877f62c92b5b8523c8636ebeff3b04402cd299f852fae1c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.0.0-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "602570b533256e83c1568e44e14aca1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3974319,
      "upload_time": "2022-03-18T00:03:35",
      "upload_time_iso_8601": "2022-03-18T00:03:35.936379Z",
      "url": "https://files.pythonhosted.org/packages/f9/08/f1c3d14d35a53ad7972e70c31acbce6227b1b0ad84cb030355fd4a258e79/mavsdk-1.0.0-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}