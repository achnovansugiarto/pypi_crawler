{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.7+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development version of the package, which links the package to the generated code in this local directory. To do so, use:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.4.5/",
    "requires_dist": [
      "aiogrpc (>=1.8)",
      "grpcio (>=1.50.0)",
      "protobuf (<=3.20.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d081fd4a6e1180fcc8ceed2c2976a09b7b251c8d58cf5f8c679f3e570feb9a0",
        "md5": "911784634e078e2d47c4b5c7d7c003f0",
        "sha256": "203ef23bd8573a984bc84e4e8cf7677628e5bbf2db47c0c8ce564dd661e9e442"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "911784634e078e2d47c4b5c7d7c003f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11201584,
      "upload_time": "2023-03-28T01:16:41",
      "upload_time_iso_8601": "2023-03-28T01:16:41.993019Z",
      "url": "https://files.pythonhosted.org/packages/6d/08/1fd4a6e1180fcc8ceed2c2976a09b7b251c8d58cf5f8c679f3e570feb9a0/mavsdk-1.4.5-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b510f752f360504f34cfaa11ba8c3110facf74f3c41951efcb6bad90e1d57d35",
        "md5": "e1f7943d95546b14d2d10abec5ff82c3",
        "sha256": "816aa0f6e778cb8bc1858a81b24fd2b6dc8b9d483f5f183d53775632193faf58"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "e1f7943d95546b14d2d10abec5ff82c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11200937,
      "upload_time": "2023-03-28T01:16:41",
      "upload_time_iso_8601": "2023-03-28T01:16:41.535770Z",
      "url": "https://files.pythonhosted.org/packages/b5/10/f752f360504f34cfaa11ba8c3110facf74f3c41951efcb6bad90e1d57d35/mavsdk-1.4.5-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c99dba5f8ce24a5205ccbc8582d5025cfe83c2cf37d0e12e83d0f4f78998fc6",
        "md5": "2152af2a40c6c63ad75d1d226b5d69e1",
        "sha256": "a238f723fdb27797147eb31c46a3be74e3ce89e32c7c97faec4055d554b4edca"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2152af2a40c6c63ad75d1d226b5d69e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6835262,
      "upload_time": "2023-03-28T01:17:21",
      "upload_time_iso_8601": "2023-03-28T01:17:21.581772Z",
      "url": "https://files.pythonhosted.org/packages/7c/99/dba5f8ce24a5205ccbc8582d5025cfe83c2cf37d0e12e83d0f4f78998fc6/mavsdk-1.4.5-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "133ddffe5a5c377871ea83feb973952bc469fa696f0bb5d7fceb3d4725ee2997",
        "md5": "7b11c1732b14e70b943d37121d811eb9",
        "sha256": "4484da53c9ace30b8054d54587b90e8eec6a00c0641dcc0b89c77d559af18545"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "7b11c1732b14e70b943d37121d811eb9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12020693,
      "upload_time": "2023-03-28T01:16:52",
      "upload_time_iso_8601": "2023-03-28T01:16:52.491093Z",
      "url": "https://files.pythonhosted.org/packages/13/3d/dffe5a5c377871ea83feb973952bc469fa696f0bb5d7fceb3d4725ee2997/mavsdk-1.4.5-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0abe2dacdbcdd6ee14f7133662d52f76d62272cb8ba0021e142772b7a55adc17",
        "md5": "34caf14482bf9aa9dc1c12a434e8b42d",
        "sha256": "24c70fec04cf5340309c2c1446a5f9110818b6d71e75caa2e7d921cbc12fb05a"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "34caf14482bf9aa9dc1c12a434e8b42d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11572042,
      "upload_time": "2023-03-28T01:17:01",
      "upload_time_iso_8601": "2023-03-28T01:17:01.988138Z",
      "url": "https://files.pythonhosted.org/packages/0a/be/2dacdbcdd6ee14f7133662d52f76d62272cb8ba0021e142772b7a55adc17/mavsdk-1.4.5-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "636036336d1651a2929f0525a3962dfd31fb13aad7a0ed50032e3169025e2479",
        "md5": "f1542d966a43edd6df256f2223c9c159",
        "sha256": "6722016396267cf85f8a06253a696357d4a989efd98f0a5d85477f2ddfebfff2"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "f1542d966a43edd6df256f2223c9c159",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296514,
      "upload_time": "2023-03-28T01:18:14",
      "upload_time_iso_8601": "2023-03-28T01:18:14.720792Z",
      "url": "https://files.pythonhosted.org/packages/63/60/36336d1651a2929f0525a3962dfd31fb13aad7a0ed50032e3169025e2479/mavsdk-1.4.5-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56b2fe72e3ac2ba193e382158f8a1c5c3fe3b65096482f212bfdb57d2d9cba37",
        "md5": "f50fe11324a0ddd9f96026772f69f0c9",
        "sha256": "df3cbd098d3431e379361f6071d948957453e08cd20342a40bd4f120c22b844c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.5-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "f50fe11324a0ddd9f96026772f69f0c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296514,
      "upload_time": "2023-03-28T01:20:31",
      "upload_time_iso_8601": "2023-03-28T01:20:31.192515Z",
      "url": "https://files.pythonhosted.org/packages/56/b2/fe72e3ac2ba193e382158f8a1c5c3fe3b65096482f212bfdb57d2d9cba37/mavsdk-1.4.5-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}