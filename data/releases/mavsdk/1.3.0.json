{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.6+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development (editable) version of the package using:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.3.0/",
    "requires_dist": [
      "aiogrpc (>=1.5)",
      "grpcio (>=1.11.0)",
      "protobuf (>=3.20.1)",
      "importlib-resources (>=1.0.2) ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f75e25a13b61448f03878e2aa1dc2c3d9ce1ae94d85261426a4454e4aeac37b",
        "md5": "6a80e73ae6dd49e7d2f564a3769646d1",
        "sha256": "be38c2a259b904afe0d785beead1efe982dcb81dda6b4b8eead67222a371d87a"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "6a80e73ae6dd49e7d2f564a3769646d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11141365,
      "upload_time": "2022-05-09T03:20:30",
      "upload_time_iso_8601": "2022-05-09T03:20:30.238389Z",
      "url": "https://files.pythonhosted.org/packages/3f/75/e25a13b61448f03878e2aa1dc2c3d9ce1ae94d85261426a4454e4aeac37b/mavsdk-1.3.0-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b5abc5d4cc4b09efc97bb35bab5d258f3e9e607b0bc9e3ae97f7f2f570c857d",
        "md5": "58778ef06f8d5d8d15d473d1865bca99",
        "sha256": "6e594251bc95ed40dbee796651282f2d50871af5d32fcaf534f02d3c592721ad"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "58778ef06f8d5d8d15d473d1865bca99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11141335,
      "upload_time": "2022-05-09T03:20:35",
      "upload_time_iso_8601": "2022-05-09T03:20:35.035813Z",
      "url": "https://files.pythonhosted.org/packages/1b/5a/bc5d4cc4b09efc97bb35bab5d258f3e9e607b0bc9e3ae97f7f2f570c857d/mavsdk-1.3.0-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "217afb66359a9c45b92ce569022cc254039ea79f20232a5b2c401b346c39fea5",
        "md5": "2fd202a4b2d67142ea874d98b6a09dd5",
        "sha256": "bbca79da3cc1559d8b71148cf028effd39123c0f5e0b5a9315c91375cd5bb757"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2fd202a4b2d67142ea874d98b6a09dd5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6782676,
      "upload_time": "2022-05-09T03:21:19",
      "upload_time_iso_8601": "2022-05-09T03:21:19.519194Z",
      "url": "https://files.pythonhosted.org/packages/21/7a/fb66359a9c45b92ce569022cc254039ea79f20232a5b2c401b346c39fea5/mavsdk-1.3.0-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba6eb3c51cfb4bbfce42a3a1265b198be530cb9f62e4056894d1162d19a81506",
        "md5": "f78e7fa36b7decc6eab3757932c13479",
        "sha256": "06d7f0e5419b95702e1f7c26742575598aff75ab6b95e073442674ab4f2e48aa"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "f78e7fa36b7decc6eab3757932c13479",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11947820,
      "upload_time": "2022-05-09T03:18:47",
      "upload_time_iso_8601": "2022-05-09T03:18:47.286459Z",
      "url": "https://files.pythonhosted.org/packages/ba/6e/b3c51cfb4bbfce42a3a1265b198be530cb9f62e4056894d1162d19a81506/mavsdk-1.3.0-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89a4fa65af071056b7cc88d1431c6ea8fbd864d2c04ac794a63b0fa425d9d9a1",
        "md5": "5332026db80161c841e27349cd6906db",
        "sha256": "927fac2fdec0480d2a2a71fd9f026ff8e4bd70553d659f5fbca9e8329e1aa3d7"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "5332026db80161c841e27349cd6906db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11493680,
      "upload_time": "2022-05-09T03:20:24",
      "upload_time_iso_8601": "2022-05-09T03:20:24.398481Z",
      "url": "https://files.pythonhosted.org/packages/89/a4/fa65af071056b7cc88d1431c6ea8fbd864d2c04ac794a63b0fa425d9d9a1/mavsdk-1.3.0-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6b06f3152cf9cf3927bc9615c235e757c041f5f42a741dd6c6c12673aecf906",
        "md5": "4d7512433a0e85905e0017d82fc7bc91",
        "sha256": "6612f91ce2e839277d8f31d401a74c0821252499ec06c8344f18b8d0f5bc3e8f"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "4d7512433a0e85905e0017d82fc7bc91",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 294134,
      "upload_time": "2022-05-09T03:21:55",
      "upload_time_iso_8601": "2022-05-09T03:21:55.871058Z",
      "url": "https://files.pythonhosted.org/packages/b6/b0/6f3152cf9cf3927bc9615c235e757c041f5f42a741dd6c6c12673aecf906/mavsdk-1.3.0-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7546ea19b466f63e97280b583faab1d986639ab1cda34e629de9f991e802e8f4",
        "md5": "aaf241ef0ed904b59960a14cd3e5d8cd",
        "sha256": "4212a4ccac4fa1a6a808ed2ac1165580f99917bde01befe5632f440c78b2d5f0"
      },
      "downloads": -1,
      "filename": "mavsdk-1.3.0-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "aaf241ef0ed904b59960a14cd3e5d8cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 294134,
      "upload_time": "2022-05-09T03:22:00",
      "upload_time_iso_8601": "2022-05-09T03:22:00.641175Z",
      "url": "https://files.pythonhosted.org/packages/75/46/ea19b466f63e97280b583faab1d986639ab1cda34e629de9f991e802e8f4/mavsdk-1.3.0-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}