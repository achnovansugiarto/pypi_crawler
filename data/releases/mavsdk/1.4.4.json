{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.7+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development version of the package, which links the package to the generated code in this local directory. To do so, use:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.4.4/",
    "requires_dist": [
      "aiogrpc (>=1.8)",
      "grpcio (>=1.50.0)",
      "protobuf (<=3.20.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.4.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e497276f2b8baccc243619ca162382ae68ac068cb7b646ca0ba01444f35adeb",
        "md5": "4e024a6432f2a58c4259421d586fcdc2",
        "sha256": "2f04c65dbca613184bc43d1cd175e4240924c5ce2246067067044b23b580944c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "4e024a6432f2a58c4259421d586fcdc2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11201707,
      "upload_time": "2023-02-10T18:05:09",
      "upload_time_iso_8601": "2023-02-10T18:05:09.648079Z",
      "url": "https://files.pythonhosted.org/packages/0e/49/7276f2b8baccc243619ca162382ae68ac068cb7b646ca0ba01444f35adeb/mavsdk-1.4.4-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18dbb681a3aab9792f004e89282bbc622e5556f0f210adcf5fbb7715dcbfc311",
        "md5": "f880348401c073d904b1a1c6e6352a62",
        "sha256": "ae76ceddf9883800ef518d897db3904dab4fc769a80c952617d393a7e36ed8af"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "f880348401c073d904b1a1c6e6352a62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11200957,
      "upload_time": "2023-02-10T18:05:02",
      "upload_time_iso_8601": "2023-02-10T18:05:02.123413Z",
      "url": "https://files.pythonhosted.org/packages/18/db/b681a3aab9792f004e89282bbc622e5556f0f210adcf5fbb7715dcbfc311/mavsdk-1.4.4-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56435f5b19b0521e1c8d15036a97c3459df9ef361cc6577c745b56b2169f8af4",
        "md5": "b5aecabaa33a5a7654d8dfa33d544d4e",
        "sha256": "9cc99a7c9a0d528e3ff83fee0cf407d4b62e79e6e5015af12a0f3825fb7dc3ea"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b5aecabaa33a5a7654d8dfa33d544d4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6835187,
      "upload_time": "2023-02-10T18:05:47",
      "upload_time_iso_8601": "2023-02-10T18:05:47.323695Z",
      "url": "https://files.pythonhosted.org/packages/56/43/5f5b19b0521e1c8d15036a97c3459df9ef361cc6577c745b56b2169f8af4/mavsdk-1.4.4-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c848a5c9c291e40449a514a02daeaa47525186b3dc2e72d46b41ca1f03b420d",
        "md5": "1c0b3c4f25ddaea937aba6e949aeea1b",
        "sha256": "d745972611f681baa74d82f8dfd33a64d8f0effb0d3d4cb476be66d79961e6f1"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "1c0b3c4f25ddaea937aba6e949aeea1b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12021074,
      "upload_time": "2023-02-10T18:05:03",
      "upload_time_iso_8601": "2023-02-10T18:05:03.043330Z",
      "url": "https://files.pythonhosted.org/packages/5c/84/8a5c9c291e40449a514a02daeaa47525186b3dc2e72d46b41ca1f03b420d/mavsdk-1.4.4-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29737207b0f1bda324b64593aedb5584398467f9c6a88383a28a0a6b19dc23d3",
        "md5": "63e358e111e619f5ef1d66818337936d",
        "sha256": "8cec107068b31349700884cba02f961cc4eadc9db931397b345ca647f4e7b884"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "63e358e111e619f5ef1d66818337936d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11571410,
      "upload_time": "2023-02-10T18:05:32",
      "upload_time_iso_8601": "2023-02-10T18:05:32.113925Z",
      "url": "https://files.pythonhosted.org/packages/29/73/7207b0f1bda324b64593aedb5584398467f9c6a88383a28a0a6b19dc23d3/mavsdk-1.4.4-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0a9185991c4a9b386d10c81f28b25f89872dca4968d95a58f637cb0656e9e84",
        "md5": "1bc70fcfccc8fdb06ee15e2e3e3108b5",
        "sha256": "204b35d6c51e72099058c9d061c30dbf9e60de2e1e9471db8e17e54f53046d45"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "1bc70fcfccc8fdb06ee15e2e3e3108b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296513,
      "upload_time": "2023-02-10T18:06:25",
      "upload_time_iso_8601": "2023-02-10T18:06:25.325063Z",
      "url": "https://files.pythonhosted.org/packages/e0/a9/185991c4a9b386d10c81f28b25f89872dca4968d95a58f637cb0656e9e84/mavsdk-1.4.4-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad13c43e38ed4063bd4f56fafba8d59406c70d5b9251533e760843f840f1c813",
        "md5": "4373563ae0490b3c3aa66a154e08edbd",
        "sha256": "bfb19aa3154d6cfd675949a0884b26b3d5fb5e2ccc99a630e0cddc6dc3243501"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.4-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "4373563ae0490b3c3aa66a154e08edbd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296513,
      "upload_time": "2023-02-10T18:06:05",
      "upload_time_iso_8601": "2023-02-10T18:06:05.957790Z",
      "url": "https://files.pythonhosted.org/packages/ad/13/c43e38ed4063bd4f56fafba8d59406c70d5b9251533e760843f840f1c813/mavsdk-1.4.4-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}