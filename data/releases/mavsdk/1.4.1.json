{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.6+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development (editable) version of the package using:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.4.1/",
    "requires_dist": [
      "aiogrpc (>=1.5)",
      "grpcio (>=1.11.0)",
      "protobuf (>=3.20.1)",
      "importlib-resources (>=1.0.2) ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68d5f5f61061f509817b6197d86b9816b2cd229b33e4d8160cc800eda440c707",
        "md5": "e9d49122f478e09074208fafc4fef8dd",
        "sha256": "8b0985e7936f40a2a8894a188e6c8ebe810e13411ac4142dd5db6ef9dd148b25"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "e9d49122f478e09074208fafc4fef8dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11200445,
      "upload_time": "2022-07-21T07:55:22",
      "upload_time_iso_8601": "2022-07-21T07:55:22.337958Z",
      "url": "https://files.pythonhosted.org/packages/68/d5/f5f61061f509817b6197d86b9816b2cd229b33e4d8160cc800eda440c707/mavsdk-1.4.1-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2017d2c6bf7a657345f2b26f2ed728d6fd67945010b2f9d628313df9d5fb164c",
        "md5": "6f13e9ccaef40799286b283da3c710b4",
        "sha256": "24c1bdffe274e685f2589109e073570090d5a99fa7b45964fb9a437999c50d39"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "6f13e9ccaef40799286b283da3c710b4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11199807,
      "upload_time": "2022-07-21T07:55:14",
      "upload_time_iso_8601": "2022-07-21T07:55:14.931504Z",
      "url": "https://files.pythonhosted.org/packages/20/17/d2c6bf7a657345f2b26f2ed728d6fd67945010b2f9d628313df9d5fb164c/mavsdk-1.4.1-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92418c4aaa1ec355aa1b85b675e6be080fccd4e7854d54f8ecc48ab68eb1f38d",
        "md5": "a7a395d7f77bcc1b4795603e84335ebf",
        "sha256": "10047c1071290cd7ff3bc243e4fa64c5ba3ac0e126a8940ae715e7a5ae669803"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a7a395d7f77bcc1b4795603e84335ebf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6818747,
      "upload_time": "2022-07-21T07:55:49",
      "upload_time_iso_8601": "2022-07-21T07:55:49.306574Z",
      "url": "https://files.pythonhosted.org/packages/92/41/8c4aaa1ec355aa1b85b675e6be080fccd4e7854d54f8ecc48ab68eb1f38d/mavsdk-1.4.1-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6121b65f5192b430ecdcb5b2c10cf972af53f2c27b9d00d72c12c35c77e9a8af",
        "md5": "4b51a328e547365c3ec8347b7e846dec",
        "sha256": "2111590317fbe63768888c20f868ade242e866c1d0cd3b16c106ed2ff3ee6f8e"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "4b51a328e547365c3ec8347b7e846dec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12019637,
      "upload_time": "2022-07-21T07:55:18",
      "upload_time_iso_8601": "2022-07-21T07:55:18.991874Z",
      "url": "https://files.pythonhosted.org/packages/61/21/b65f5192b430ecdcb5b2c10cf972af53f2c27b9d00d72c12c35c77e9a8af/mavsdk-1.4.1-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec0a3295c58cdfbab9361813d726384248b5d58d473aa1b802a74e5b36399ae4",
        "md5": "c228e0fd53d9e2bcc72a18eb69a85996",
        "sha256": "24ac54c4793f0a4e4aed055d980a64396c118d86190728f79bbcd9f90b36d29c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c228e0fd53d9e2bcc72a18eb69a85996",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11570627,
      "upload_time": "2022-07-21T07:55:46",
      "upload_time_iso_8601": "2022-07-21T07:55:46.261502Z",
      "url": "https://files.pythonhosted.org/packages/ec/0a/3295c58cdfbab9361813d726384248b5d58d473aa1b802a74e5b36399ae4/mavsdk-1.4.1-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87558270793e1de187e5679e78c5db3c27852ebb00cef6195382a6c77a3a24b2",
        "md5": "d9bfd14be306f98ad204a6b266d08ed8",
        "sha256": "a739f552b462284ef74caeeaf7417294d9ae85693d43161816343b5057a46c70"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "d9bfd14be306f98ad204a6b266d08ed8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 294196,
      "upload_time": "2022-07-21T07:56:55",
      "upload_time_iso_8601": "2022-07-21T07:56:55.900943Z",
      "url": "https://files.pythonhosted.org/packages/87/55/8270793e1de187e5679e78c5db3c27852ebb00cef6195382a6c77a3a24b2/mavsdk-1.4.1-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74bd36f47c14a3142bfd9c7d7fdc97a4089ae0527d2c6628c3d95d09c0599775",
        "md5": "17b327b2f40506079e3296ddc1115728",
        "sha256": "5f3aafbbc61349d9cfc84b06b7dae53fe102cf08d49859d2aa74f9dd5d3164ca"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.1-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "17b327b2f40506079e3296ddc1115728",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 294196,
      "upload_time": "2022-07-21T07:55:53",
      "upload_time_iso_8601": "2022-07-21T07:55:53.627067Z",
      "url": "https://files.pythonhosted.org/packages/74/bd/36f47c14a3142bfd9c7d7fdc97a4089ae0527d2c6628c3d95d09c0599775/mavsdk-1.4.1-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}