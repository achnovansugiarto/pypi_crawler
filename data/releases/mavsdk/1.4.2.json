{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# MAVSDK-Python\n\n[![GitHub Actions Status](https://github.com/mavlink/MAVSDK-Python/workflows/PyPi%20Upload/badge.svg?branch=main)](https://github.com/mavlink/MAVSDK-Python/actions?query=branch%3Amain)\n\nThis is the Python wrapper for MAVSDK.\n\nThe Python wrapper is based on a gRPC client communicating with the gRPC server written in C++. To use the Python wrapper the gRPC server called \"backend\" needs to be running on the same system. The wrapper is essentially auto-generated from the message definitions ([proto files](https://github.com/mavlink/MAVSDK-Proto)).\n\n\n## Important Notes\n\n- Python 3.7+ is required (because the wrapper is based on [asyncio](https://docs.python.org/3.7/library/asyncio.html)).\n- You may need to run `pip3` instead of `pip` and `python3` instead of `python`, depending of your system defaults.\n- Auterion has a [Getting started with MAVSDK-Python](https://auterion.com/getting-started-with-mavsdk-python/) guide if you're a beginner and not sure where to start.\n\n## API Reference docs\n\n-> [API Reference documentation](http://mavsdk-python-docs.s3-website.eu-central-1.amazonaws.com/).\n\n## Install using pip from PyPi\n\nTo install mavsdk-python, simply run:\n\n```sh\npip3 install mavsdk\n```\n\nThe package contains `mavsdk_server` already (previously called \"backend\"), which is started automatically when connecting (e.g. `await drone.connect()`). Have a look at the examples to see it used in practice. It will be something like:\n\n```python\nfrom mavsdk import System\n\n...\n\ndrone = System()\nawait drone.connect(system_address=\"udp://:14540\")\n```\n\nNote: `System()` takes two named parameters: `mavsdk_server_address` and `port`. When left empty, they default to `None` and `50051`, respectively, and `mavsdk_server -p 50051` is run by `await drone.connect()`. If `mavsdk_server_address` is set (e.g. to \"localhost\"), then `await drone.connect()` will not start the embedded `mavsdk_server` and will try to connect to a server running at this address. This is useful for platforms where `mavsdk_server` does not come embedded, for debugging purposes, and for running `mavsdk_server` in a place different than where the MAVSDK-Python script is run.\n\n## Run the examples\n\nOnce the package has been installed, the examples can be run:\n\n```\nexamples/takeoff_and_land.py\n```\n\nThe examples assume that the embedded `mavsdk_server` binary can be run. In some cases (e.g. on Raspberry Pi), it may be necessary to run `mavsdk_server` manually, and therefore to set `mavsdk_server_address='localhost'` as described above.\n\n## Contribute\n\nNote: this is more involved and targeted at contributors.\n\nMost of the code is auto-generated from the [proto definitions](https://github.com/mavlink/mavsdk-proto), using our [templates](./other/templates). The generated files can be found in the [generated](./mavsdk/generated) folder. As a result, contributions are generally made in the templates or on the build system. Regularly, there is a need to update MAVSDK-Python to include the latest features defined in the proto definitions. This is described [below](#generate-the-code).\n\n### Clone the repo\n\nClone this repo and recursively update submodules:\n\n```\ngit clone https://github.com/mavlink/MAVSDK-Python --recursive\ncd MAVSDK-Python\n```\n\n### Install prerequisites\n\nFirst install the protoc plugin (`protoc-gen-mavsdk`):\n\n```\ncd proto/pb_plugins\npip3 install -r requirements.txt\n```\n\nYou can check that the plugin was installed with `$ which protoc-gen-mavsdk`, as it should now be in the PATH.\n\nThen go back to the root of the repo and install the dependencies of the SDK:\n\n```\ncd ../..\npip3 install -r requirements.txt -r requirements-dev.txt\n```\n\n### Generate the code\n\nRun the following helper script. It will generate the Python wrappers for each plugin.\n\n```\n./other/tools/run_protoc.sh\n```\n\n### Update `mavsdk_server` version\n\n[MAVSDK_SERVER_VERSION](./MAVSDK_SERVER_VERSION) contains exactly the tag name of the `mavsdk_server` release corresponding to the version of MAVSDK-Python. When the [proto](./proto) submodule is updated here, chances are that `mavsdk_server` should be updated, too. Just edit this file, and the corresponding binary will be downloaded by the `setup.py` script (see below).\n\n### Build and install the package locally\n\nAfter generating the wrapper and only in ARM architectures with linux, defines a variable `MAVSDK_SERVER_ARCH`:\n```\nexport MAVSDK_SERVER_ARCH=<ARM embedded architecture>\n```\nSupported architectures: `armv6l`, `armv7l` and `aarch64`. For example for Raspberry Pi it is `armv7l`, or `aarch64` (if a 64 bit distribution is used).\n\nThen you can install a development version of the package, which links the package to the generated code in this local directory. To do so, use:\n```\npython3 setup.py build\npip3 install -e .\n```\n\nNote: MAVDSK-Python runs `mavsdk/bin/mavsdk_server` when `await drone.connect()` is called. This binary comes from [MAVSDK](https://github.com/mavlink/MAVSDK/releases) and is downloaded during the `setup.py` step above.\n\n\n### Generate the API documentation\n\nMake sure the version tag is set correctly before generating new documentation.\n\n```\npip3 install -r requirements-docs.txt\nmake -C mavsdk html\n```\n\n\n### Release steps\n\n1. Check the proto submodule is up-to-date and the generated code has been updated.\n2. Check all required pull requests are merged to main\n3. Check [MAVSDK_SERVER_VERSION](MAVSDK_SERVER_VERSION) is set to the correct version of mavsdk_server.\n4. Create git tag on laster main, e.g.:\n   ```\n   git switch main\n   git pull\n   git tag X.Y.Z\n   git push --tags\n   ```\n5. Go to [releases page](https://github.com/mavlink/MAVSDK-Python/releases) and create new release.\n   The CI will now:\n   - Create and push a wheel for Windows, Linux and macOS to PyPi.\n   - Generate the latest docs and push them to s3.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mavlink/MAVSDK-Python",
    "keywords": "",
    "license": "",
    "maintainer": "Jonas Vautherin, Julian Oes",
    "maintainer_email": "jonas@auterion.com, julian.oes@auterion.com",
    "name": "mavsdk",
    "package_url": "https://pypi.org/project/mavsdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/mavsdk/",
    "project_urls": {
      "Bug Reports": "https://github.com/mavlink/MAVSDK-Python/issues",
      "Homepage": "https://github.com/mavlink/MAVSDK-Python",
      "Source": "https://github.com/mavlink/MAVSDK-Python/"
    },
    "release_url": "https://pypi.org/project/mavsdk/1.4.2/",
    "requires_dist": [
      "aiogrpc (>=1.8)",
      "grpcio (>=1.50.0)",
      "protobuf (<=3.20.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Python wrapper for MAVSDK",
    "version": "1.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17470966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b4e03f9f4c68396f80e53151d42a3ecfb002b2c65f262a62820c24f8e42f91e",
        "md5": "5dc55fbb42d15d69f4cc54310d94516e",
        "sha256": "780402d49bec80bed533d97b6c95ce328751ae5f0c04db5426e8256393ba8bca"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-linux_armv6l.whl",
      "has_sig": false,
      "md5_digest": "5dc55fbb42d15d69f4cc54310d94516e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11201693,
      "upload_time": "2023-01-13T20:37:01",
      "upload_time_iso_8601": "2023-01-13T20:37:01.930789Z",
      "url": "https://files.pythonhosted.org/packages/1b/4e/03f9f4c68396f80e53151d42a3ecfb002b2c65f262a62820c24f8e42f91e/mavsdk-1.4.2-py3-none-linux_armv6l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a66fd031b0b4a663bec384275a2047c9b92473101fec0815fad5d38eee4475a1",
        "md5": "665515dce8680802fb16de6eb98db783",
        "sha256": "40ba37af1c07faef61cdc7f1e59ff7c125da0060119d95c5a23089dc70d8ff5c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "665515dce8680802fb16de6eb98db783",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11201001,
      "upload_time": "2023-01-13T20:37:05",
      "upload_time_iso_8601": "2023-01-13T20:37:05.288256Z",
      "url": "https://files.pythonhosted.org/packages/a6/6f/d031b0b4a663bec384275a2047c9b92473101fec0815fad5d38eee4475a1/mavsdk-1.4.2-py3-none-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8354230a014e075d5caa1ee43d15a3d79148eff6a5e6f57f777ceb0ae6816dc5",
        "md5": "ce97ae0c97021a4a1d8b8377e3825a80",
        "sha256": "6e274386703845ed0665d4c882f4673903b7f1a7b5a58d4406493af9dfbadd86"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ce97ae0c97021a4a1d8b8377e3825a80",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6834829,
      "upload_time": "2023-01-13T20:37:36",
      "upload_time_iso_8601": "2023-01-13T20:37:36.163653Z",
      "url": "https://files.pythonhosted.org/packages/83/54/230a014e075d5caa1ee43d15a3d79148eff6a5e6f57f777ceb0ae6816dc5/mavsdk-1.4.2-py3-none-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac3636ea76fbab158ee69dd4919b23fa2d81280d45d3b0ddd3a852971d846bbc",
        "md5": "521f3e950ca6298aaada42f5f8a7d809",
        "sha256": "7d7fbe13ca826dc6358fd2eb3dcb1d0d42a3a5c18af8fa233ec3e3c214be0eb5"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "521f3e950ca6298aaada42f5f8a7d809",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12020704,
      "upload_time": "2023-01-13T20:37:09",
      "upload_time_iso_8601": "2023-01-13T20:37:09.085963Z",
      "url": "https://files.pythonhosted.org/packages/ac/36/36ea76fbab158ee69dd4919b23fa2d81280d45d3b0ddd3a852971d846bbc/mavsdk-1.4.2-py3-none-manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5a5e6ce294d77c152a39c2e4fe5b351b839a56c5397fdfaab7b5b99b4ace8d7",
        "md5": "b94d312cdabb63119c0456597b59b441",
        "sha256": "61318c8a2d0c8ea1b9bf50dd29217134fb4687a85fa6501f3735461c4c6ea184"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b94d312cdabb63119c0456597b59b441",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11571454,
      "upload_time": "2023-01-13T20:37:12",
      "upload_time_iso_8601": "2023-01-13T20:37:12.289410Z",
      "url": "https://files.pythonhosted.org/packages/f5/a5/e6ce294d77c152a39c2e4fe5b351b839a56c5397fdfaab7b5b99b4ace8d7/mavsdk-1.4.2-py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d97185c40509b099f196a0cf3e4dcc3e4e14f17822369c768b750b2bff89d9c",
        "md5": "2a4e42a04ceebff5b4d116c967d8b17e",
        "sha256": "cc4062bec5691441163cba08e4bda5f38622938d456d07cc8c956a1ec6f3bd8c"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "2a4e42a04ceebff5b4d116c967d8b17e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296514,
      "upload_time": "2023-01-13T20:37:55",
      "upload_time_iso_8601": "2023-01-13T20:37:55.810403Z",
      "url": "https://files.pythonhosted.org/packages/2d/97/185c40509b099f196a0cf3e4dcc3e4e14f17822369c768b750b2bff89d9c/mavsdk-1.4.2-py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82a8d108f3e749192bd1efbe7bc94173f707a26b5a5a537acc83dda18ab857e7",
        "md5": "9aa49825efe8cd7d3190b29870020a70",
        "sha256": "dfba3e7a559dbc01d6f86de8061afbfe5a684fce2a301ad8216c9985832f31d3"
      },
      "downloads": -1,
      "filename": "mavsdk-1.4.2-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "9aa49825efe8cd7d3190b29870020a70",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 296514,
      "upload_time": "2023-01-13T20:38:00",
      "upload_time_iso_8601": "2023-01-13T20:38:00.295458Z",
      "url": "https://files.pythonhosted.org/packages/82/a8/d108f3e749192bd1efbe7bc94173f707a26b5a5a537acc83dda18ab857e7/mavsdk-1.4.2-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}