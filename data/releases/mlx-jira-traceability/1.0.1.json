{
  "info": {
    "author": "Jasper Craeghs",
    "author_email": "jce@melexis.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Sphinx :: Extension",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Documentation :: Sphinx",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n    :target: https://opensource.org/licenses/Apache-2.0\n    :alt: Apache 2.0 License\n\n.. image:: https://badge.fury.io/py/mlx.jira-traceability.svg\n    :target: https://badge.fury.io/py/mlx.jira-traceability\n    :alt: PyPI packaged release\n\n.. image:: https://github.com/melexis/jira-traceability/actions/workflows/python-package.yml/badge.svg?branch=main\n    :target: https://github.com/melexis/jira-traceability/actions/workflows/python-package.yml\n    :alt: Build status\n\n.. image:: https://img.shields.io/badge/contributions-welcome-brightgreen.svg\n    :target: https://github.com/melexis/jira-traceability/issues\n    :alt: Contributions welcome\n\n============\nIntroduction\n============\n\nSphinx plugin for creating Jira tickets based on traceable items that have been added by\n`mlx.traceability <https://pypi.org/project/mlx.traceability/>`_. You can look at this module as an extension for\nmlx.traceability.\n\n=====\nUsage\n=====\n\n--------------------\nJira ticket creation\n--------------------\n\nJira tickets that are based on traceable items can be automatically created by the plugin. A ticket gets created only\nfor each item of which its ID **matches** the configured regular expression ``item_to_ticket_regex``.\nDuplication of tickets is avoided by querying Jira first for existing tickets based on the Jira project and the\nvalue of the ticket field configured by ``jira_field_id``. Below is an example configuration:\n\nConfiguration\n=============\n\n.. code-block:: python\n\n    extensions = [\n        'mlx.traceability',\n        'mlx.jira_traceability',\n    ]\n\n    traceability_jira_automation = {\n        'api_endpoint': 'https://jira.atlassian.com/rest/api/latest/',\n        'username': 'my_username',\n        'password': 'my_password',\n        'item_to_ticket_regex': r'ACTION-12345_ACTION_\\d+',\n        'jira_field_id': 'summary',\n        'issue_type': 'Task',\n        'project_key_regex': r'ACTION-(?P<project>\\d{5})_',\n        'project_key_prefix': 'MLX',\n        'default_project': 'SWCC',\n        'relationship_to_parent': ('depends_on', r'MEETING-[\\w_]+'),\n        'components': '[SW],[HW]',\n        'description_head': 'Action raised in [this meeting|https://docserver.com/<<file_name>>.html].\\n\\n',\n        'description_str_to_attr': {'<<file_name>>': 'docname'},\n        'warn_if_exists': False,\n        'errors_to_warnings': True,\n        'notify_watchers': False,\n    }\n\n``project_key_regex`` can optionally be defined. This regular expression with a named group *project* is used to\nextract a certain part of the item ID to determine the Jira project key. ``project_key_prefix`` can optionally be\ndefined to add a prefix to the match for ``project_key_regex``. Additionally, ``default_project`` defines the Jira\nproject key or id in case the regular expression doesn't come up with a match or hasn't been configured.\n\n``item_to_ticket_regex`` defines the regular expression used to filter item IDs to be exported as Jira tickets.\nA warning gets reported when a Jira ticket already exists. These warnings can be disabled by setting\n``warn_if_exists`` to ``True``. Errors raised by Jira are converted to warnings by default. If you want these errors to\ncrash your build, you can set ``errors_to_warnings`` to a falsy value.\n\nThe item ID of a linked item can be added to the summary of the Jira ticket to create by specifying the relationship\nto this item in the value for setting ``relationship_to_parent``. The value can be a list or tuple with the relationship\nas the first element and the regular expression to match the linked item's ID as the second element.\nThis feature makes it possible to create a query link in advance to list all Jira tickets that are related to this\nlinked item.\n\nA string can be added to the start of a ticket's description by configuring ``description_head``. If the item to create\na ticket for does not have a body, its caption will be used to build the ticket's description.\n\nWatchers of a ticket can be notified about the creation of the ticket by setting ``notify_watchers`` to ``True``.\nNote that this notification is only sent when the user to assign to the ticket is different from the default assignee\nconfigured in Jira.\n\nAttributes\n==========\n\nAll attributes are optional and are defined in `the default configuration of mlx.traceability\n<https://melexis.github.io/sphinx-traceability-extension/configuration.html#default-config>`_.\n\n- *assignee* is used to assign a username to the Jira ticket.\n- *effort* is used to set the original effort estimation field. On failure, it gets appended to the description field.\n\nIf the item for which to create a ticket has an item linked to it by a ``relationship_to_parent`` relationship,\nthe *attendees* attribute of this linked item should be a comma-separated list of usernames that get added as watchers\nto the ticket.\n\nMapping of Strings to Item Attributes (advanced)\n================================================\n\nIf you want to use the value of an attribute of a TraceableItem in the string value for the\n``description_head`` setting, you can set the ``description_str_to_attr`` setting to a dictionary mapping the string you\nwant to have replaced to the attribute of the ``TraceableItem`` that should take its place. In the following example,\nsome placeholder text will get replaced by the document name the item is located in:\n\n.. code-block:: python\n\n    'description_head': 'Action raised in [this meeting|https://docserver.com/<<file_name>>.html].\\n\\n',\n    'description_str_to_attr': {'<<file_name>>': 'docname'}\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/melexis/jira-traceability",
    "keywords": "traceability,jira,sphinx",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlx.jira-traceability",
    "package_url": "https://pypi.org/project/mlx.jira-traceability/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mlx.jira-traceability/",
    "project_urls": {
      "Homepage": "https://github.com/melexis/jira-traceability"
    },
    "release_url": "https://pypi.org/project/mlx.jira-traceability/1.0.1/",
    "requires_dist": [
      "Sphinx (>=2.1)",
      "jira",
      "mlx.traceability (>=9.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Sphinx plugin to create Jira tickets based on traceable items",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15794413,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "079f3ab033ed47e7094b1e521bf2d9741743ef0d2cb3d0c6424d18975ed11f42",
        "md5": "ee2cba1640aa9d811f36b9b06405481d",
        "sha256": "5481471b33d18a36e05fa9df229f02ffda8fab5f1ab6f3dc215761b484d31402"
      },
      "downloads": -1,
      "filename": "mlx.jira_traceability-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee2cba1640aa9d811f36b9b06405481d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 12452,
      "upload_time": "2022-09-20T09:38:39",
      "upload_time_iso_8601": "2022-09-20T09:38:39.981308Z",
      "url": "https://files.pythonhosted.org/packages/07/9f/3ab033ed47e7094b1e521bf2d9741743ef0d2cb3d0c6424d18975ed11f42/mlx.jira_traceability-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2d8d2659684b304efb95719338c03f457bdbdcff5e2cac93f84bdbd743f30b0",
        "md5": "f21a59caa019f26e21f49691063546c4",
        "sha256": "1c7e2d67babe645e7c658b29a21554b987485232125cccddb655a1e716fe69ad"
      },
      "downloads": -1,
      "filename": "mlx.jira-traceability-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f21a59caa019f26e21f49691063546c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19049,
      "upload_time": "2022-09-20T09:38:41",
      "upload_time_iso_8601": "2022-09-20T09:38:41.221495Z",
      "url": "https://files.pythonhosted.org/packages/a2/d8/d2659684b304efb95719338c03f457bdbdcff5e2cac93f84bdbd743f30b0/mlx.jira-traceability-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}