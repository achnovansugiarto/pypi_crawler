{
  "info": {
    "author": "Ajesh Sen Thapa",
    "author_email": "aj3sshh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PAGE META\nPage meta is a Django package allowing to add meta tags, og tags, images, and descriptions dynamically. Meta tags are stored in models and can be managed through Django admin (or any CMS).\n\n## Installation\n\n```bash\npip install django-pagemeta\n```\n\nIn settings file\n```python\nINSTALLED_APPS = [\n    ...\n    'pagemeta',\n    ...\n]\n\nMIDDLEWARE = [\n    ...\n    'pagemeta.middleware.MetaRequestMiddleware', # for binding meta into the request\n    ...\n]\n```\n\n## Creating a Meta tags\n- Run the server. \n- Go to the **Django Admin** > **Pagemeta** > **Meta for Pages**.\n- Create Meta for pages, use full absolute url in `page_url`. Also supports relative url but might varies in different domains.\n- To create default tags for the whole system, use `page_url` as `default` or `DEFAULT` (case insensitive)\n\n\n## Usage\n\n### Load the meta tags in template\n\nIn your template\n```DjangoHTML\n<head>\n    ...\n    {{ request.meta }}\n    ...\n</head>\n```\n\nPage titles are not rendered through `request.meta`. To render page title see the below example.\n```DjangoHTML\n...\n<title>{{ request.meta.title }}</title>\n...\n```\n\nFor conditional titles `request.meta_exact` will be good. `request.meta_exact` contains the exact meta tags for the url or `None`. Whereas `request.meta` contains default value if no match found.\n```DjangoHTML\n...\n<title>{{ request.meta_exact.title|default:'Default title' }}</title>\n...\n```\nOR\n```DjangoHTML\n...\n<title>{% if request.meta_exact %}{{ request.meta_exact.title }}{% else %}Title for {{ article }}{% endif %}</title>\n...\n```\n\n\n### Set a Custom Meta tags\nIf you want to set a custom meta tags for specific pages or conditions, you can reassign request.meta with an instance of `Meta`.  \n_Note: context variable can be overridden if MetaForPage for that url exists_\n\nExample code:\n```python\n\nclass MyView(TemplateView):\n    ...\n\n    def get_context_data(self, **kwargs):\n        ...\n        # adding custom meta\n        self.request.meta = Meta(\n            title='custom test',\n            description='custom description',\n            image_url='http://image_url_dot_com',\n        )\n        ...\n\n```\n\n## Contribution\n\n### Install requirements\nCreate your virtualenv first.\n```bash\npip install -r requirements.txt\n```\n\n### Running test cases\n```\npython manage.py test\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aj3sh/pagemeta",
    "keywords": "django meta,django page meta,meta tags,og tags,open tags,twitter card,seo,seo tags,keywords,keywords management",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pagemeta",
    "package_url": "https://pypi.org/project/django-pagemeta/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-pagemeta/",
    "project_urls": {
      "Homepage": "https://github.com/aj3sh/pagemeta"
    },
    "release_url": "https://pypi.org/project/django-pagemeta/1.2.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple django package for managing meta tags, og tags, images, and descriptions dynamically.",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15342010,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c56c0733334bb06549e6483fb39773dcdd2f0e450383325b692f3de93cdbee2e",
        "md5": "4a3025ccf1e221450f7752aadf784adc",
        "sha256": "86a30f21fcf13ba7b9959e7e7151cbd589fea2dab9608fc656c26f6a8418d9f9"
      },
      "downloads": -1,
      "filename": "django_pagemeta-1.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a3025ccf1e221450f7752aadf784adc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18531,
      "upload_time": "2022-10-08T05:02:01",
      "upload_time_iso_8601": "2022-10-08T05:02:01.554499Z",
      "url": "https://files.pythonhosted.org/packages/c5/6c/0733334bb06549e6483fb39773dcdd2f0e450383325b692f3de93cdbee2e/django_pagemeta-1.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6f0cc2d81920fbeaa7a3256bef923c7c4ab1718736323b92dfb5c2b127e1f72",
        "md5": "842e13faac4773be8f008ff717068642",
        "sha256": "25297f49539dd78c19ce9634bc33bdee35ec511655982b9eec0553872f148305"
      },
      "downloads": -1,
      "filename": "django-pagemeta-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "842e13faac4773be8f008ff717068642",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12383,
      "upload_time": "2022-10-08T05:02:03",
      "upload_time_iso_8601": "2022-10-08T05:02:03.122876Z",
      "url": "https://files.pythonhosted.org/packages/b6/f0/cc2d81920fbeaa7a3256bef923c7c4ab1718736323b92dfb5c2b127e1f72/django-pagemeta-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}