{
  "info": {
    "author": "Ralf Gerlich",
    "author_email": "ralf@ralfgerlich.biz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": ".. image:: https://badge.fury.io/py/modypy.svg\n    :alt: PyPi Version\n\n.. image:: https://img.shields.io/pypi/pyversions/modypy\n    :alt: PyPI - Python Version\n\n.. image:: https://travis-ci.com/ralfgerlich/modypy.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.com/ralfgerlich/modypy\n\n.. image:: https://readthedocs.org/projects/modypy/badge/\n    :alt: ReadTheDocs Build Status\n    :target: https://modypy.readthedocs.io/\n\n.. image:: https://codecov.io/gh/ralfgerlich/modypy/branch/master/graph/badge.svg\n    :alt: Cove Coverage\n    :target: https://codecov.io/gh/ralfgerlich/modypy\n\n.. image:: https://www.code-inspector.com/project/17342/score/svg\n    :alt: Code Quality Store\n\n.. image:: https://www.code-inspector.com/project/17342/status/svg\n    :alt: Code Grade\n\nMoDyPy (rhymes with \"modify\") is a Python framework for *Mo*\\ delling *dy*\\ namic\nsystems in *Py*\\ thon. The framework provides methods for describing continuous-time\nlinear and non-linear systems in\n`state-space representation <https://en.wikipedia.org/wiki/State-space_representation>`_.\nIt was originally inspired by `simupy <https://github.com/simupy/simupy>`_\ndeveloped by Ben Margolis, but has a completely different philosophy and\narchitecture than simupy.\n\nThe basic components of a dynamic system in MoDyPy are states and signals.\nStates represent the internal state of the system, and signals represent the\nvalues calculated based on the state. Ports can be connected to signals, so that\nreusable blocks with input and output ports can be easily built. For more\ndetails refer to the `documentation <https://modypy.readthedocs.io/>`_.\n\nMain Features\n-------------\n\n- Simple architecture based on states, signals and connectible ports\n- Enables hierarchical modelling\n- Allows the establishment of reusable building blocks\n- Simulator for linear and non-linear continuous- and discrete-time systems\n- Clock system to model periodic events and discrete-time components\n- Steady state determination and linearization\n- Library of standard blocks, including 6-degree-of-freedom rigid body motion\n- Tested for 100% statement and branch coverage\n\nInstallation\n------------\n\nMoDyPy is available via the *pip* installer:\n\n.. code-block:: bash\n\n  $ pip install modypy\n\nTo install the development version,\n\n.. code-block:: bash\n\n  $ git clone https://github.com/ralfgerlich/modypy.git\n  $ pip install -e modypy\n\nExamples\n--------\n\n.. figure:: docs/guide/06_dc_engine_sampling.png\n    :align: center\n    :alt: Simulation of a DC-motor with propeller\n\n    Simulation of a DC-motor with propeller\n\nCheck out the examples in the\n`examples directory <https://github.com/ralfgerlich/modypy/tree/master/examples>`_\nand the `Programmer's Guide <https://modypy.readthedocs.io/>`_. These include:\n\n`dcmotor.py <https://github.com/ralfgerlich/modypy/tree/master/examples/dcmotor.py>`_\n    A simple example using a DC-motor driving a propeller and sampling the\n    thrust using a zero-order hold.\n`rigidbody.py <https://github.com/ralfgerlich/modypy/tree/master/examples/rigidbody.py>`_\n    Some rigid-body simulation using moments and forces showing an object\n    moving in a circle with constant velocity and turn-rate.\n`bouncing_ball.py <https://github.com/ralfgerlich/modypy/tree/master/examples/bouncing_ball.py>`_\n    An example modelling a bouncing ball, demonstrating the use of events and\n    event-handler functions.\n`quadcopter_trim.py <https://github.com/ralfgerlich/modypy/tree/master/examples/quadcopter_trim.py>`_\n    A larger example showcasing the steady-state-determination and linearisation\n    of complex systems, in this case for a quadrocopter frame with four\n    DC-motors with propellers.\n\nThey can be run from the sources using, e.g.,\n\n.. code-block:: bash\n\n  $ pip install matplotlib\n  $ python examples/bouncing_ball.py\n\nNote that some of the examples require ``matplotlib`` to run and display the\nresults.\n\nContributing\n------------\n\nContributions are welcome! Check out the\n`GitHub Project Page <https://github.com/ralfgerlich/modypy>`_ for issues and\nideas on how to add to the project.\n\nContributions must adhere to the following conditions:\n\n- New features must be accompanied by appropriate pytest tests.\n- New features should at least carry Python Docstrings for API documentation\n  following the general style of the existing API documentation.\n- Coding style should adhere to\n  `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_ as per the settings of the\n  ``pylintrc`` file in the project directory.\n- Contributors must accept publishing their contribution under the licensing\n  conditions laid out in the ``LICENSE`` file.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ralfgerlich/modypy",
    "keywords": "",
    "license": "BSD 2-clause \"Simplified\" License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modypy",
    "package_url": "https://pypi.org/project/modypy/",
    "platform": "",
    "project_url": "https://pypi.org/project/modypy/",
    "project_urls": {
      "Homepage": "https://github.com/ralfgerlich/modypy",
      "documentation": "https://modypy.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/modypy/2.0.0/",
    "requires_dist": [
      "numpy (>=1.18.1)",
      "scipy (>=1.5.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "A framework for hierarchical modelling and simulation of dynamic systems",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10581390,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1566aad508aa8d0432669e9d29423d52f16e4592f8ed641b6014b62dacac83a7",
        "md5": "be229c8634830a95ed18589eb269196c",
        "sha256": "4680ecc4e91d7a9d76ee9f5cdf3ef43830bedc27950f03c4d513af32c0ae7ec9"
      },
      "downloads": -1,
      "filename": "modypy-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be229c8634830a95ed18589eb269196c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 34461,
      "upload_time": "2021-02-28T18:16:10",
      "upload_time_iso_8601": "2021-02-28T18:16:10.334899Z",
      "url": "https://files.pythonhosted.org/packages/15/66/aad508aa8d0432669e9d29423d52f16e4592f8ed641b6014b62dacac83a7/modypy-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b5c47606948eafe487c23dfecc301735d6a783160c445b806e02a2db9e91f13",
        "md5": "476bd11874f8c478edfef3351a46e30b",
        "sha256": "49356a8e6e51a202eeede40dc5b6657da390fe3bb86d9e1de03caafcc1d4ebb7"
      },
      "downloads": -1,
      "filename": "modypy-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "476bd11874f8c478edfef3351a46e30b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 307698,
      "upload_time": "2021-02-28T18:16:12",
      "upload_time_iso_8601": "2021-02-28T18:16:12.699071Z",
      "url": "https://files.pythonhosted.org/packages/3b/5c/47606948eafe487c23dfecc301735d6a783160c445b806e02a2db9e91f13/modypy-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}