{
  "info": {
    "author": "James Philip Rowell",
    "author_email": "james@alpha-eleven.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# About lsseq\n\n`lsseq` is a Unix/Linux command-line utility that\nlists directory contents (akin to `/bin/ls`) while condensing image\nsequences (or cache sequences) to one entry each and listing the sequence in\na helpful way. Filenames that are part of sequences are assumed to be of\nthe form:\n```\n    <descriptiveName>.<frameNum>.<imgExtension>\n```\nwhere `<imgExtension>` is drawn from a default list of image extensions or an\nenvironment variable that can be set to override the default list. (see\n`lsseq --help` and in particular `--imgExt`).\nNote that `lsseq` can also handle the case that the dot-separator\nbetween the `<descriptiveName>` and the `<frameNum>` is an underscore\n(see `lsseq --help` for `--looseNumSeparator, -l`).\n\n`lsseq` can print the image sequence in a variety of formats useful for `nuke`,\n`houdini` or `rv` and can also print a `glob` pattern for use in the shell. It also\nhas it's own native format which is nicer to read, and also used by another command-line\ntool called [`renumseq`](https://github.com/jrowellfx/renumSeq).\n\n#### For example:\n```\n    $ ls\n    aaa.097.tif  aaa.098.tif  aaa.100.tif  aaa.101.tif  aaa.102.tif  aaa.103.tif\n    $ lsseq\n    aaa.[097-103].tif m:[99]\n```\nWhat `lsseq` tells us here is that there is a sequence of tif files named\n`aaa` with frames 97 through 103 (three padded) and frame 99 is missing.\n\n`lsseq` is designed to have the flavor of the unix/linux/osx `ls`\ncommand as much as possible. The idea is to make it easier on the user when\nswitching back and forth between using `lsseq` and regular `ls` so that the\nlook of the output as well as several command-line-arguments are the same\n(where possible and it makes sense).\n\nFurthermore it was written to be as robust as possible. For example, it\nhandles negative frames properly and has been extensively tested and used at\nseveral production studios. There is a regression test program included with\nthe source here on github to help test any changes, additions, bug fixes\netc.\n\nLastly some useful options have been added beyond what `/bin/ls` does that\nextend `lsseq's` capability.\n\n#### For example:\n```\n    1$ ls -F\n    aaa/  bbb/  ccc.0101.exr  nonImage.file\n\n    2$ ls *\n    ccc.0101.exr  nonImage.file\n\n    aaa:\n    aaa.097.tif  aaa.098.tif  aaa.100.tif  aaa.101.tif  aaa.102.tif  aaa.103.tif  nonImage_A.file\n\n    bbb:\n    bbx.0097.tif  bbx.0100.tif  bbx.0103.tif  bby.0199.tif  bby.0202.tif      nonImage_B2.file\n    bbx.0098.tif  bbx.0101.tif  bby.0197.tif  bby.0200.tif  bby.0203.tif\n    bbx.0099.tif  bbx.0102.tif  bby.0198.tif  bby.0201.tif  nonImage_B1.file\n\n    3$ lsseq *\n    nonImage.file\n    ccc.[0101].exr\n\n    aaa:\n    nonImage_A.file\n    aaa.[097-103].tif m:[99]\n\n    bbb:\n    nonImage_B1.file  nonImage_B2.file\n    bbx.[0097-0103].tif\n    bby.[0197-0203].tif\n\n    4$ lsseq --prependPathRel *\n    ccc.[0101].exr\n    aaa/aaa.[097-103].tif m:[99]\n    bbb/bbx.[0097-0103].tif\n    bbb/bby.[0197-0203].tif\n\n    5$ lsseq --prependPathAbs --skipMissing --format rv *\n    /user/jrowellfx/test/ccc.0101.exr\n    /user/jrowellfx/test/aaa/aaa.97-103@@@.tif\n    /user/jrowellfx/test/bbb/bbx.97-103#.tif\n    /user/jrowellfx/test/bbb/bby.197-203#.tif\n```\nThe first thing to note above is how close `lsseq` is to mimicking `/bin/ls` in\nlabelling directories and listing directory contents etc. (compare the\noutput of command 2 to 3). One difference being that `lsseq` first lists all\nnon-sequence images in a directory exactly as `ls` would list them (minus the\nsequences) then lists all the sequences in their condensed form.\n\nSecondly note the two useful options in commands 4 and 5 above,\n`--prependPathRel` and `--prependPathAbs` which can be very useful when creating\nlists of sequences to pipe into other scripts.\n\nIt's recommended to review the capabilities of lsseq in how it can sort\nsequences, especially with respect to how it handles sorting by time. See\n`lsseq --help` for `--time, -t and --onlyShow` options.\n\n## Installing `lsseq`\n\n```\n    python3 -m pip install lsseq\n```\n\nI have written more helpful installation-information below in an addendum.\nYou may find it helpful when\ntrying to install this command on your system, be it Linux or macOS.\n\n## Testing `lsseq`\n\nTo test `lsseq`, `cd` into a directory containing frames from an image\nsequence then `lsseq` the contents of the directory.\n\nIf you don't have one handy you can try this to test it.\n```\n    $ cd ~\n    $ mkdir tmp\n    $ cd tmp\n    $ touch aaa.001.tif aaa.002.tif aaa.003.tif aaa.004.tif aaa.005.tif\n    $ lsseq\n    aaa.[001-005].tif z:[1-5]\n```\nNote the `z:[1-5]` which is telling you that the frames `aaa.[001-005].tif`\nhave zero length, and if you had generated those with a renderer I'm\nguessing you'd need to rerender them.\n\nType:\n```\n    $ lsseq --help\n```\nfor much more useful info.\n\n## Addendum - more on installing command-line tools\n\nHere's the process that I've followed to install `lsseq`, as well as my other\npytthon-based command-line\ntools (i.e., `expandseq`, `condenseseq` and `renumseq`)\nso that they are accessible to all users. This works on both macOS and Linux.\n\n```\n    $ su -\n    # cd /usr/local\n    # python3 -m venv venv\n    # cd venv\n    # source bin/activate\n    # python3 -m pip install --upgrade pip\n    # deactivate\n    # bin/pip install lsseq\n    # bin/pip install expandSeq\n    # bin/pip install renumSeq\n    # ln -s /usr/local/venv/bin/lsseq /usr/local/bin/lsseq\n    # ln -s /usr/local/venv/bin/expandseq /usr/local/bin/expandseq\n    # ln -s /usr/local/venv/bin/condenseseq /usr/local/bin/condenseseq\n    # ln -s /usr/local/venv/bin/renumseq /usr/local/bin/renumseq\n    # exit\n    $ cd $HOME\n    $ lsseq --version\n    2.4.1\n```\nAt this point any user should be able to run any of the commands linked in the example above.\nNote that updates are easy now too. Say there's an update to lsseq that you want to install.\n\n```\n    $ su -\n    # cd /usr/local/venv\n    # bin/pip install lsseq --upgrade\n    # exit\n    $ cd $HOME\n    $ lsseq --version\n    99.99.99\n```\n\nJust kidding about the version number, maybe in the year 2159? Will Unix still be a thing!?\n\n## Contact\n\nPlease contact `j a m e s <at> a l p h a - e l e v e n . c o m` with any bug\nreports, suggestions or praise as the case may be.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrowellfx/lsseq",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lsseq",
    "package_url": "https://pypi.org/project/lsseq/",
    "platform": "",
    "project_url": "https://pypi.org/project/lsseq/",
    "project_urls": {
      "Homepage": "https://github.com/jrowellfx/lsseq"
    },
    "release_url": "https://pypi.org/project/lsseq/2.4.1/",
    "requires_dist": [
      "seqLister"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "ls-like command for image frame sequences",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16026215,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a386676dc490ca50e1886791a2490e412adadca4d0d39f541a2a43ee5693a9d1",
        "md5": "0a3268b1d51514f376adc462bcaeb515",
        "sha256": "481b65e8c6ded6eb6d50b59895e20274e8fde18beffd0ee97064e1ecf41d70d0"
      },
      "downloads": -1,
      "filename": "lsseq-2.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a3268b1d51514f376adc462bcaeb515",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 17706,
      "upload_time": "2021-07-13T18:38:15",
      "upload_time_iso_8601": "2021-07-13T18:38:15.500093Z",
      "url": "https://files.pythonhosted.org/packages/a3/86/676dc490ca50e1886791a2490e412adadca4d0d39f541a2a43ee5693a9d1/lsseq-2.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd6b807745556e1aeb1d6e958a126166f61993fe3bfe73f247b3500917ee9dcf",
        "md5": "5106c6326ec52bb08cc18a851546b6cb",
        "sha256": "1ab980529af619de0eb82bb60fe91280197b1301836e49d264aa2b1b8d71cd9a"
      },
      "downloads": -1,
      "filename": "lsseq-2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5106c6326ec52bb08cc18a851546b6cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 19535,
      "upload_time": "2021-07-13T18:38:16",
      "upload_time_iso_8601": "2021-07-13T18:38:16.504557Z",
      "url": "https://files.pythonhosted.org/packages/fd/6b/807745556e1aeb1d6e958a126166f61993fe3bfe73f247b3500917ee9dcf/lsseq-2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}