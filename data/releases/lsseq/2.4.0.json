{
  "info": {
    "author": "James Philip Rowell",
    "author_email": "james@alpha-eleven.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# About lsseq\n\n`lsseq` is a unix/linux command-line utility that\nlists directory contents (akin to `/bin/ls`) while condensing image\nsequences (or cache sequences) to one entry each and listing the sequence in\na helpful way. Filenames that are part of sequences are assumed to be of\nthe form:\n```\n    <descriptiveName>.<frameNum>.<imgExtension>\n```\nwhere `<imgExtension>` is drawn from a default list of image extensions or an\nenvironment variable that can be set to override the default list. (see\n`lsseq --help` and in particular `--imgExt`).\nNote that `lsseq` can also handle the case that the dot-separator\nbetween the `<descriptiveName>` and the `<frameNum>` is an underscore\n(see `lsseq --help` for `--looseNumSeparator, -l`).\n\n`lsseq` can print the image sequence in a variety of formats useful for `nuke`,\n`houdini` or `rv` and can also print a `glob` pattern for use in the shell. It also\nhas it's own native output which is nice to read.\n\n#### For example:\n```\n$ ls\naaa.097.tif  aaa.098.tif  aaa.100.tif  aaa.101.tif  aaa.102.tif  aaa.103.tif\n$ lsseq\naaa.[097-103].tif m:[99]\n```\nWhat `lsseq` tells us here is that there is a sequence of tif files named\n`aaa` with frames 97 through 103 (three padded) and frame 99 is missing.\n\n`lsseq` was written and designed in a way that hopefully makes it unnecessary\nfor anyone to feel they have to write such a utility ever again.\n\nTo that end `lsseq` is designed to have the flavor of the unix/linux/osx `ls`\ncommand as much as possible. The idea is to make it easier on the user when\nswitching back and forth between using `lsseq` and regular `ls` so that the\nlook of the output as well as several command-line-arguments are the same\n(where possible and it makes sense).\n\nFurthermore it was written to be as robust as possible. For example, it\nhandles negative frames properly and has been extensively tested and used at\nseveral production studios. There is a regression test program included with\nthe source here on github to help test any changes, additions, bug fixes\netc.\n\nLastly some useful options have been added beyond what `/bin/ls` does that\nextend `lsseq's` capability.\n\n#### For example:\n```\n1$ ls -F\naaa/  bbb/  ccc.0101.exr  nonImage.file\n\n2$ ls *\nccc.0101.exr  nonImage.file\n\naaa:\naaa.097.tif  aaa.098.tif  aaa.100.tif  aaa.101.tif  aaa.102.tif  aaa.103.tif  nonImage_A.file\n\nbbb:\nbbx.0097.tif  bbx.0100.tif  bbx.0103.tif  bby.0199.tif  bby.0202.tif      nonImage_B2.file\nbbx.0098.tif  bbx.0101.tif  bby.0197.tif  bby.0200.tif  bby.0203.tif\nbbx.0099.tif  bbx.0102.tif  bby.0198.tif  bby.0201.tif  nonImage_B1.file\n\n3$ lsseq *\nnonImage.file\nccc.[0101].exr\n\naaa:\nnonImage_A.file\naaa.[097-103].tif m:[99]\n\nbbb:\nnonImage_B1.file  nonImage_B2.file\nbbx.[0097-0103].tif\nbby.[0197-0203].tif\n\n4$ lsseq --prependPathRel *\nccc.[0101].exr\naaa/aaa.[097-103].tif m:[99]\nbbb/bbx.[0097-0103].tif\nbbb/bby.[0197-0203].tif\n\n5$ lsseq --prependPathAbs --skipMissing --format rv *\n/user/jrowellfx/test/ccc.0101.exr\n/user/jrowellfx/test/aaa/aaa.97-103@@@.tif\n/user/jrowellfx/test/bbb/bbx.97-103#.tif\n/user/jrowellfx/test/bbb/bby.197-203#.tif\n```\nThe first thing to note above is how close `lsseq` is to mimicking `/bin/ls` in\nlabelling directories and listing directory contents etc. (compare the\noutput of command 2 to 3). One difference being that `lsseq` first lists all\nnon-sequence images in a directory exactly as `ls` would list them (minus the\nsequences) then lists all the sequences in their condensed form.\n\nSecondly note the two useful options in commands 4 and 5 above,\n`--prependPathRel` and `--prependPathAbs` which can be very useful when creating\nlists of sequences to pipe into other scripts.\n\nIt's recommended to review the capabilities of lsseq in how it can sort\nsequences, especially with respect to how it handles sorting by time. See\n`lsseq --help` for `--time, -t and --onlyShow` options.\n\nThis package also includes two helpful command-line utilities (`expandseq` and `condenseseq`) that\nexpand and condense lists of frame numbers into a fairly standard format\nused by many computer-graphics programs and CG-production studios.\n\n## How to install lsseq, expandseq and condenseseq on your computer\n\nTo install these commands on your system follow these steps (you need root\nprivileges).\n\n1)  First make sure you have python version 3.x (x >= 6) installed on your machine, you can do\n    this simply by typing `python3` at the command prompt. If you are told\n    `\"command not found\"`, then you need to download and install it, there are\n    many helpful websites to get this going, not the least of which is [Python.org](https://www.python.org/).\n\n2)  Download `lsseq-2.3.2.tar.gz` assuming that the latest version is `2.3.2` (if\n    not just grab the latest one), you can find all versions in the `dist` directory of this\n    repo: [jrowellfx/lsseq/dist](dist)\n\n3)  Uncompress the file:\n    ```\n    $ tar -xvzf lsseq-2.3.2.tar.gz\n    ```\n4)  install the commands and supporting python module:\n    ```\n    $ cd lsseq-2.3.2\n    $ sudo python3 setup.py install\n    ```\n\n5)  ...that's it! You should be able to run the commands `lsseq`, `expandseq`\n    and `condenseseq` now.\n\nTo test `lsseq` properly `cd` into a directory containing frames from an image\nsequence then `lsseq` the contents of the directory.\n\nIf you don't have one handy you can try this to test it.\n```\n$ cd ~\n$ mkdir tmp\n$ cd tmp\n$ touch aaa.001.tif aaa.002.tif aaa.003.tif aaa.004.tif aaa.005.tif\n$ lsseq\naaa.[001-005].tif z:[1-5]\n```\nNote the `z:[1-5]` which is telling you that the frames `aaa.[001-005].tif`\nhave zero length, and if you had generated those with a renderer I'm\nguessing you'd need to rerender them.\n\nType:\n```\n$ lsseq --help\n$ expandseq --help\n$ condenseseq --help\n```\nfor much more useful info.\n\nPlease contact `j a m e s <at> a l p h a - e l e v e n . c o m` with any bug\nreports, suggestions or oodles of praise as the case may be.\n\nIf you want everthing in the `lsseq` repo:\n```\n$ git clone git@github.com:jrowellfx/lsseq.git\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrowellfx/lsseq",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lsseq",
    "package_url": "https://pypi.org/project/lsseq/",
    "platform": "",
    "project_url": "https://pypi.org/project/lsseq/",
    "project_urls": {
      "Homepage": "https://github.com/jrowellfx/lsseq"
    },
    "release_url": "https://pypi.org/project/lsseq/2.4.0/",
    "requires_dist": [
      "seqLister"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "ls-like command for image frame sequences",
    "version": "2.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16026215,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ce8980914a968cff81bc8759630ce96886377ece4e58bd9082397b8d4cd689f",
        "md5": "4bef4b59901d6a14d54f3a495a441342",
        "sha256": "71f0c2c6c2c5f4dfcb9e41d1fdb8b777e97fb14bdc151a889a135a0c528c889d"
      },
      "downloads": -1,
      "filename": "lsseq-2.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4bef4b59901d6a14d54f3a495a441342",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 17782,
      "upload_time": "2021-07-13T05:25:59",
      "upload_time_iso_8601": "2021-07-13T05:25:59.333307Z",
      "url": "https://files.pythonhosted.org/packages/3c/e8/980914a968cff81bc8759630ce96886377ece4e58bd9082397b8d4cd689f/lsseq-2.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5309e8a3b87312c9fd4760c956711f790bb75abb66373019ec660a496ff828b9",
        "md5": "a1ec361e3023b6b3cf6997ddf2654a9e",
        "sha256": "01041418ce6e9abb11f66f562549b2604ee04db26615f5595cd3064500b3aae3"
      },
      "downloads": -1,
      "filename": "lsseq-2.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a1ec361e3023b6b3cf6997ddf2654a9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 19719,
      "upload_time": "2021-07-13T05:26:00",
      "upload_time_iso_8601": "2021-07-13T05:26:00.817285Z",
      "url": "https://files.pythonhosted.org/packages/53/09/e8a3b87312c9fd4760c956711f790bb75abb66373019ec660a496ff828b9/lsseq-2.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}