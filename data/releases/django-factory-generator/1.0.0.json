{
  "info": {
    "author": "Charles TISSIER",
    "author_email": "charles@vingtcinq.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.3",
      "Programming Language :: Python :: 2.4",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|django-factory-generator v1.0.0 on PyPi| |MIT license| |Stable|\n\ndjango-factory-generator\n========================\n\nGenerate (factory_boy) Model Factory for each model of your Django app\n\nChangelog\n=========\n\n-  1.0.0 Init project\n\nRequirements\n------------\n\nThis Django app generates factory_boy Model Factories from your\ninstalled apps, so you need to have\n`factory_boy <https://github.com/FactoryBoy/factory_boy>`__ installed.\n\nInstallation\n------------\n\nInstall using ``pip`` :\n\n``pip install django_factory_generator``\n\nAdd ``factory_generator`` to your ``INSTALLED_APPS`` settings.\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'factory_generator',\n        ...\n    )\n\nGenerate factories\n------------------\n\nGenerate factories with a single command line:\n\n``python manage.py generate_factories``\n\nThis will create a ``model_factories`` directory with the following\nstructure :\n\n::\n\n    |__ model_factories/\n        |__ app_label_foo/\n            |__ __init__.py\n            |__ model_foo.py\n            |__ model_bar.py\n            |__ base/\n                |__ __init__.py\n                |__ model_foo.py\n                |__ model_bar.py\n\nEach model results in two generated files :\n\n-  *model_factories/app_label_foo/base/model_foo* containing the\n   ``ModelFooFactoryBase`` class definition generated from the model\n   ``ModelFoo``. This file **should not be manually edited** since it\n   would be overriden each time the command ``generate_factories`` is\n   run.\n-  *model_factories/app_label_foo/model_foo* containing the\n   ``ModelFooFactory`` class which simply extends\n   ``ModelFooFactoryBase``. This file is generated once but not\n   overriden when you run the ``generate_factories`` command again.\n\nThis structure gives you the ability to **override** the ModelFactory\nthat was automatically generated. You can then edit the\n``ModelFooFactory`` to change / edit the base fields that were\ngenerated.\n\nYou can then import your model factories the following way:\n\n::\n\n    # app_label/tests.py\n    from django.test import TestCase\n\n    from model_factories.app_label import ModelFooFactory, ModelBarFactory\n\n    class FooTests(TestCase):\n\n        def test_model_factory(self):\n            modelfoo = ModelFooFactory(\n                foo='bar',\n            )\n            modelbar = ModelBarFactory(\n                bar='baz',\n            )\n            # Run your tests here\n\nSettings\n--------\n\nHere are all the settings you can use, with their default value :\n\n::\n\n    FACTORY_NORMALIZE_FIELD_MAP = {}\n    FACTORY_FIELD_FAKER_MAP = {}\n    FACTORY_IGNORE_FIELDS = []\n    FACTORY_ROOT_DIR = 'model_factories'\n    FACTORY_IGNORE_NON_EDITABLE_FIELDS = True\n\nTodo\n----\n\n-  Improve documentation\n-  Write unit tests\n-  validate compatibility with previous versions of Django and Python\n\nSupport\n-------\n\nIf you are having issues, please let us know or submit a pull request.\n\nLicense\n-------\n\nThe project is licensed under the MIT License.\n\n.. |django-factory-generator v1.0.0 on PyPi| image:: https://img.shields.io/badge/pypi-1.0.0-green.svg\n   :target: https://pypi.python.org/pypi/django-factory-generator\n.. |MIT license| image:: https://img.shields.io/badge/licence-MIT-blue.svg\n.. |Stable| image:: https://img.shields.io/badge/status-stable-green.svg\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/charlesthk/django-factory-generator",
    "keywords": "python django factory_boy test",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-factory-generator",
    "package_url": "https://pypi.org/project/django-factory-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-factory-generator/",
    "project_urls": {
      "Homepage": "https://github.com/charlesthk/django-factory-generator"
    },
    "release_url": "https://pypi.org/project/django-factory-generator/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generate Model Factory (factory_boy) for each model of your Django app",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6653811,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e80c5e381f9fbcb713bf5ce7f8f6de0baa74d85f156b3b40653798e96b7b00de",
        "md5": "22c96c663c0e3e54ee4742f1f84cad90",
        "sha256": "28b8afc23d44d461b1cd6adeaac9831aac43271aceebdb63f2a66f471e9be075"
      },
      "downloads": -1,
      "filename": "django_factory_generator-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "22c96c663c0e3e54ee4742f1f84cad90",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13101,
      "upload_time": "2018-10-07T20:15:31",
      "upload_time_iso_8601": "2018-10-07T20:15:31.747218Z",
      "url": "https://files.pythonhosted.org/packages/e8/0c/5e381f9fbcb713bf5ce7f8f6de0baa74d85f156b3b40653798e96b7b00de/django_factory_generator-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "985142bb2459b2ebd23e4845743ef605df1245b5d330cc7bd2248074d4ab5579",
        "md5": "962b7c9ae11b16db192903312d67968f",
        "sha256": "ebd9e64b155ba0071afb3f16f45635a1926ba3d5a5262cb17632cb6230c91656"
      },
      "downloads": -1,
      "filename": "django_factory_generator-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "962b7c9ae11b16db192903312d67968f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10442,
      "upload_time": "2018-10-07T20:15:33",
      "upload_time_iso_8601": "2018-10-07T20:15:33.284158Z",
      "url": "https://files.pythonhosted.org/packages/98/51/42bb2459b2ebd23e4845743ef605df1245b5d330cc7bd2248074d4ab5579/django_factory_generator-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}