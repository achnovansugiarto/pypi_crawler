{
  "info": {
    "author": "Peter Polidoro",
    "author_email": "polidorop@janelia.hhmi.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "modular_client_python\n=====================\n\nThis Python package creates a class named ModularClient, which\ncontains an instance of serial_device2.SerialDevice and adds methods\nto it, like auto discovery of available modular devices in Linux,\nWindows, and Mac OS X. This class automatically creates methods from\navailable functions reported by the modular device when it is running\nthe appropriate firmware. This is the modular device client library\nfor communicating with and calling remote methods on modular device\nservers.\n\nAuthors::\n\n    Peter Polidoro <polidorop@janelia.hhmi.org>\n\nLicense::\n\n    BSD\n\nExample Usage::\n\n    from modular_client import ModularClient\n    dev = ModularClient() # Might automatically find device if one available\n    # if it is not found automatically, specify port directly\n    dev = ModularClient(port='/dev/ttyACM0') # Linux specific port\n    dev = ModularClient(port='/dev/tty.usbmodem262471') # Mac OS X specific port\n    dev = ModularClient(port='COM3') # Windows specific port\n    dev.get_device_id()\n    dev.get_methods()\n    from modular_client import ModularClients\n    devs = ModularClients()  # Might automatically find all available devices\n    # if they are not found automatically, specify ports to use\n    devs = ModularClients(use_ports=['/dev/ttyUSB0','/dev/ttyUSB1']) # Linux\n    devs = ModularClients(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X\n    devs = ModularClients(use_ports=['COM3','COM4']) # Windows\n    devs.items()\n    dev = devs[name][form_factor][serial_number]\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/janelia-pypi/modular_client_python",
    "keywords": "modular serial arduino device client modulardevice modular-device modular_device modularclient modular-client modular_client json json-rpc",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modular-client",
    "package_url": "https://pypi.org/project/modular-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/modular-client/",
    "project_urls": {
      "Homepage": "https://github.com/janelia-pypi/modular_client_python"
    },
    "release_url": "https://pypi.org/project/modular-client/4.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Modular device Python client interface for communicating with and calling remote methods on modular device servers.",
    "version": "4.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13349991,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c8f6f15a446bcc603d6b4c3a4fd68b91ca8ea7f8fda915f63048de6b628051ed",
        "md5": "537c54b8a6bcab6213d15297300581f7",
        "sha256": "0f33574277203bca5a98c891f1c17a6df53dc72afa82d7f431054f0912130a99"
      },
      "downloads": -1,
      "filename": "modular_client-4.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "537c54b8a6bcab6213d15297300581f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8868,
      "upload_time": "2017-06-21T18:50:32",
      "upload_time_iso_8601": "2017-06-21T18:50:32.358410Z",
      "url": "https://files.pythonhosted.org/packages/c8/f6/f15a446bcc603d6b4c3a4fd68b91ca8ea7f8fda915f63048de6b628051ed/modular_client-4.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}