{
  "info": {
    "author": "Radico",
    "author_email": "mus.radi85@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": ".. image:: https://img.shields.io/pypi/pyversions/django-comments-dab.svg\n    :target: https://pypi.python.org/pypi/django-comments-dab/\n    :alt: python\n\n.. image:: https://img.shields.io/pypi/djversions/django-comments-dab.svg\n    :target: https://pypi.python.org/pypi/django-comments-dab/\n    :alt: django\n\n.. image:: https://codecov.io/gh/radi85/Comment/branch/develop/graph/badge.svg?token=JBorE9i0De\n    :target: https://codecov.io/gh/radi85/Comment\n    :alt: Coverage\n\n.. image:: https://github.com/radi85/Comment/actions/workflows/tests.yml/badge.svg?branch=develop\n    :target: https://github.com/radi85/Comment/actions\n    :alt: Test\n\n.. image:: https://readthedocs.org/projects/django-comment-dab/badge/?version=latest\n    :target: https://django-comment-dab.readthedocs.io/?badge=latest\n    :alt: docs\n\n.. image:: https://img.shields.io/github/contributors/radi85/Comment\n    :target: https://github.com/Radi85/Comment/graphs/contributors\n    :alt: contributors\n\n.. image:: https://img.shields.io/github/license/radi85/Comment?color=gr\n    :target: https://github.com/Radi85/Comment/blob/develop/LICENSE\n    :alt: licence\n\n.. image:: https://img.shields.io/pypi/dm/django-comments-dab\n    :alt: downloads\n\n.. image:: https://badge.fury.io/py/django-comments-dab.svg\n    :target: https://pypi.org/project/django-comments-dab/\n    :alt: pypi\n\n.. image:: https://img.shields.io/github/v/tag/radi85/Comment?color=gr\n    :target: https://github.com/Radi85/Comment/releases\n    :alt: tag\n\n.. image:: https://img.shields.io/github/release-date/radi85/comment?color=blue\n    :target: #\n    :alt: Django-comment-dab Release Date\n\n.. image:: https://img.shields.io/github/commits-since/radi85/comment/latest/develop\n    :target: #\n    :alt: Commits since latest release for a branch develop\n\n\n===================\ndjango-comments-dab\n===================\n\nThanks https://www.pythonanywhere.com/\n\n**Here is a** live_ **demo**\n\n.. _live: https://rmustafa.pythonanywhere.com/\n\nFull Documentation_\n\n.. _Documentation: https://django-comment-dab.readthedocs.io/\n\n\n    .. image:: https://github.com/radi85/comment/blob/develop/docs/_static/img/comment.gif\n\n\nContent:\n\n* Introduction_\n* Installation_\n* Setup_\n* Usage_\n* Example_\n\n.. _Introduction:\n\nIntroduction\n============\n\n**dab stands for Django-Ajax-Bootstrap**\nPS: Ajax and JQuery are not used anymore since v2.0.0 Vanilla JS and fetch API is used instead.\n\n``django-comments-dab`` is a commenting application for Django-powered websites.\n\nIt allows you to integrate commenting functionality with any model you have e.g. blogs, pictures, video etc…\n\n*List of actions that can be performed:*\n\n    1. Post a new comment. (v2.0.0 authenticated and anonymous users)\n\n    2. Reply to an existing comment. (v2.0.0 authenticated and anonymous users)\n\n    3. Edit a comment. (authenticated user `comment owner`)\n\n    4. Delete a comment. (authenticated user `comment owner` and admins)\n\n    5. React to a comment. (authenticated users) Available reactions are LIKE and DISLIKE  # open PR if you would like to have more reactions\n\n    6. Report (flag) a comment. (authenticated users)\n\n    7. Delete flagged comment. (admins and moderators)\n\n    8. Resolve or reject flag. This is used to revoke the flagged comment state (admins and moderators)\n\n    9. Follow and unfollow thread. (authenticated users)\n\n- All actions are done by Fetch API since V2.0.0\n\n- Bootstrap 4.1.1 is used in comment templates for responsive design.\n\n.. _Installation:\n\nInstallation\n============\n\nRequirements:\n-------------\n\n    1. **django>=2.1**\n    2. **djangorestframework**  # only for the API Framework\n    3. **Bootstrap 4.1.1**\n\n\nInstallation:\n-------------\n\n\nInstallation is available via ``pip``\n\n::\n\n    $ pip install django-comments-dab\n\n\nor via source on github\n\n::\n\n    $ git clone https://github.com/radi85/Comment.git\n    $ cd Comment\n    $ python setup.py install\n\n\nComment Settings and urls:\n--------------------------\n\n    1. Add ``comment`` to installed_apps in the ``settings.py`` file. It should be added after ``django.contrib.auth``.\n    2. ``LOGIN_URL`` shall be defined in the settings.\n\n``settings.py`` should look like this:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        'django.contrib.admin',\n        'django.contrib.auth',\n        ...\n        'comment',\n        ..\n    )\n\n    LOGIN_URL = 'login'  # or actual url\n\nIn ``urls.py``:\n\n.. code:: python\n\n    urlpatterns = patterns(\n        path('admin/', admin.site.urls),\n        path('comment/', include('comment.urls')),\n        ...\n        path('api/', include('comment.api.urls')),  # only required for API Framework\n        ...\n    )\n\nMigrations:\n-----------\n\nMigrate comment app:\n\n::\n\n    $ python manage.py migrate comment\n\n\n.. _Setup:\n\nSetup\n=====\n\nStep 1 - Connecting comment model with the target model\n-------------------------------------------------------\n\nIn models.py add the field ``comments`` as a ``GenericRelation`` field to the required model.\n\nPS: Please note that the field name must be ``comments`` **NOT** ``comment``.\n\nE.g. ``Post`` model, as shown below:\n\n.. code:: python\n\n    from django.contrib.contenttypes.fields import GenericRelation\n\n    from comment.models import Comment\n\n    class Post(models.Model):\n        author = models.ForeignKey(User)\n        title = models.CharField(max_length=200)\n        body = models.TextField()\n        # the field name should be comments\n        comments = GenericRelation(Comment)\n\nStep 2 - Adding template tags:\n------------------------------\n\n``render_comments`` *tag uses 2 required and 1 optional args*:\n\n    1. Instance of the targeted model. (**Required**)\n    2. Request object. (**Required**)\n    3. oauth. (optional - Default is false)\n\n\n.. _Usage:\n\nUsage\n=====\n\n1. Basics usage:\n----------------\n\n``include_bootstrap`` tag is for bootstrap-4.1.1, if it’s already used in the project, get rid of this tag.\n\nIn the template (e.g. post_detail.) add the following template tags where ``obj`` is the instance of post model.\n\n.. code:: jinja\n\n    {% load comment_tags %}  {# Loading the template tag #}\n    {% render_comments obj request %}  {# Render all the comments belong to the passed object \"obj\" #}\n    {% include_bootstrap %} {# Include bootstrap 4.1.1 - remove this line if BS is already used in your project #}\n\n\n2. Advanced usage:\n------------------\n\nFor advanced usage and other documentation, you may read the Documentation_ or look at the docs_ directory in the repository.\n\n.. _docs: https://github.com/Radi85/Comment/tree/develop/docs\n\n.. _Example:\n\nExample\n========\n\nYou can play with the example app using local virtual environment\n\n.. code:: bash\n\n    $ git clone https://github.com/Radi85/Comment.git  # or clone your forked repo\n    $ cd Comment\n    $ python3 -m venv local_env  # or any name. local_env is in .gitignore\n    $ export DEBUG=True\n    $ source local_env/bin/activate\n    $ pip install -r test/example/requirements.txt\n    $ python manage.py migrate\n    $ python manage.py create_initial_data\n    $ python manage.py runserver\n\n\nOr run with docker\n\n.. code:: bash\n\n    $ git clone https://github.com/Radi85/Comment.git  # or clone your forked repo\n    $ cd Comment\n    $ docker-compose up\n\n\nLogin with:\n\n    username: ``test``\n\n    password: ``test``\n\nThe icons are picked from Feather_. Many thanks to them for the good work.\n\n.. _Feather: https://feathericons.com\n\n\nEmail's HTML template is used from https://github.com/leemunroe/responsive-html-email-template\n\nContributing\n============\n\nFor contributing, please see the instructions at Contributing_\n\n.. _Contributing: https://github.com/Radi85/Comment/blob/develop/CONTRIBUTING.rst\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/radi85/Comment",
    "keywords": "django comment comments ajax",
    "license": "MIT",
    "maintainer": "Radi Mustafa",
    "maintainer_email": "mus.radi85@gmail.com",
    "name": "django-comments-dab",
    "package_url": "https://pypi.org/project/django-comments-dab/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-comments-dab/",
    "project_urls": {
      "Documentation": "https://django-comment-dab.readthedocs.io/index.html",
      "Homepage": "https://github.com/radi85/Comment",
      "Source Code": "https://github.com/radi85/Comment"
    },
    "release_url": "https://pypi.org/project/django-comments-dab/2.7.1/",
    "requires_dist": [
      "django"
    ],
    "requires_python": "",
    "summary": "Django Comment app. It can be associated with any given model.",
    "version": "2.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14244194,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0705d585fdabdf737793ddc8b2839c47241eff49c2b5d8cdef93a24585757e68",
        "md5": "0e3e683703a0c5a5c9ea8d974dad51b6",
        "sha256": "b9b0a000d8783a2faf1924953e8992f6fb0399afb459df69a5a16edb0b778761"
      },
      "downloads": -1,
      "filename": "django_comments_dab-2.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e3e683703a0c5a5c9ea8d974dad51b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 161613,
      "upload_time": "2021-09-06T07:55:22",
      "upload_time_iso_8601": "2021-09-06T07:55:22.725945Z",
      "url": "https://files.pythonhosted.org/packages/07/05/d585fdabdf737793ddc8b2839c47241eff49c2b5d8cdef93a24585757e68/django_comments_dab-2.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84038b5915dc784d8a3b3b94e7e282211f71aa44abafc6c057fe80de6880ab93",
        "md5": "c6cae5381e73dd797949af01cbf1fb4d",
        "sha256": "74e7c61435fde84ca8f5ee6f383584b5eaaf5d5a6ed19968e7bc2462f2bb3ae5"
      },
      "downloads": -1,
      "filename": "django-comments-dab-2.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c6cae5381e73dd797949af01cbf1fb4d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 112186,
      "upload_time": "2021-09-06T07:55:24",
      "upload_time_iso_8601": "2021-09-06T07:55:24.951596Z",
      "url": "https://files.pythonhosted.org/packages/84/03/8b5915dc784d8a3b3b94e7e282211f71aa44abafc6c057fe80de6880ab93/django-comments-dab-2.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}