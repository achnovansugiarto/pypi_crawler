{
  "info": {
    "author": "Radico",
    "author_email": "mus.radi85@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-comments-dab App - v1.1.0\n================================\n\n**dab stands for Django-Ajax-Bootstrap**\n\n``django-comments-dab`` is a commenting application for Django-powered\nwebsites.\n\nIt allows you to integrate commenting functionality to any model you\nhave e.g. blogs, pictures, etc…\n\n*List of actions you can do:*\n\n    1. Add a comment. (Authenticated)\n\n    2. Edit a comment you posted. (Authenticated)\n\n    3. Delete a comment you posted. (Authenticated)\n\n\n**-All actions are done by ajax - JQuery 3.2.1**\n\n**-Bootstrap 4.1.1 is used in comment templates for responsive design.**\n\nInstallation\n------------\n\n\nRequirements:\n~~~~~~~~~~~~~\n\n    1. **django-widget-tweaks==1.4.2**\n    2. **Bootstrap 4.1.1**\n    3. **jQuery 3.2.1**\n\n\nInstallation:\n~~~~~~~~~~~~~\n\n\nInstallation is available via ``pip``\n\n``$ pip install django-comments-dab``\n\nor via source on github\n\n::\n\n    $ git clone https://github.com/radi85/Comment.git\n    $ cd Comment\n    $ python setup.py install\n\nAdd ``comment`` to your installed_apps in your ``settings.py`` file. It\nshould be added after ``django.contrib.auth``:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        'django.contrib.admin',\n        'django.contrib.auth',\n        ...\n        'comment',\n        ..\n    )\n\nIn your urls.py:\n\n.. code:: python\n\n    urlpatterns = patterns('',\n        ...\n        path('comment/', include('comment.urls')),\n        ...\n    )\n\nMigrations for Django 2.0 and later\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMigrate comments:\n\n::\n\n    $ python manage.py migrate comment\n\n\n\nSetup\n-----\n\nStep 1\n~~~~~~\n\nIn your models.py add the field comments (Please note that field name\nmust be ``comments`` not ``comment``) to the model for which comment\nshould be added (e.g. Post) and the appropriate imports as shown below:\n\n.. code:: python\n\n    from django.contrib.contenttypes.fields import GenericRelation\n    from comment.models import Comment\n\n    class Post(models.Model):\n        author = models.ForeignKey(User)\n        title = models.CharField(max_length=200)\n        body = models.TextField()\n        # the field name should be comments\n        comments = GenericRelation(Comment)\n\nStep 2\n~~~~~~\n\n``get_comments`` *tag uses 2 positional and 3 optional args*:\n\n    1. The instance of the model. (**positional**)\n    2. Request object. (**positional**)\n    3. oauth. (optional - Default is false)\n    4. paginate. (optional - Default is false)\n    5. cpp (number of Comments Per Page - Default is 10)\n\n\n1. Basics usage:\n^^^^^^^^^^^^^^^^\n\n``include_static`` this tag will include required jquery and javascript\nfile. ``include_bootstrap`` for bootstrap 4.1.1 if it’s already included\nin your project, get rid of this tag.\n\nIn your template (e.g. post-detail.html) add the following template tags\nwhere object is the instance of post.\n\n.. code:: python\n\n    {% load comment_tags %}  # Loading the template tag\n    {% get_comments object request %}  # Include all the comments belonging to a certain object\n    {% include_bootstrap %} # Include bootstrap 4.1.1 - remove this line if BS 4.1.1 is already used in your project\n    {% include_static %} # Include jQuery 3.2.1 and required js file\n\n\n\n2. Advanced usage:\n^^^^^^^^^^^^^^^^^^\n\n    **1. Add pagination:**\n\n    To add pagination to your comments, you need to pass two variables to the ``get_comments`` tag.\n    ``paginate`` must be set to ``True`` and set ``cpp`` var (number of comments per page - default is 10) to the desired number of comments per page.\n    e.g. If you would like to have 5 comments per page, the ``get_comments`` tag should look like this:\n\n    .. code:: python\n\n        {% load comment_tags %}  # Loading the template tag\n        {% get_comments object request paginate=True cpp=5 %}  # Include all the comments belonging to a certain object\n        {% include_bootstrap %} # Include bootstrap 4.1.1 - remove this line if BS 4.1.1 is already used in your project\n        {% include_static %} # Include jQuery 3.2.1 and required js file\n\n\n\n    **2. Integrate existing profile app with comments app:**\n\n    If you have profile model for the user and you would like to show the\n    profile image on each comment you need to assign PROFILE_APP_NAME and\n    PROFILE_MODEL_NAME variables in your ``settings.py`` file. (e.g if user profile\n    app is called ``accounts`` and profile model is called ``UserProfile``)\n    Update your ``settings.py``:\n\n    .. code:: python\n\n        PROFILE_APP_NAME = 'accounts'\n        PROFILE_MODEL_NAME = 'UserProfile' # letter case insensitive\n\n\n\nCustomize Styling\n-----------------\n\nIf you want to customize the default style of comments app , you can do the following steps:\n    1. Create a ``comment.css`` file inside your ``static/css`` directory.\n    2. The new created file will overwrite the original file used in the app.\n\nand you’re done.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/radi85/Comment",
    "keywords": "comments comment development",
    "license": "MIT",
    "maintainer": "Radi Mustafa",
    "maintainer_email": "mus.radi85@gmail.com",
    "name": "django-comments-dab",
    "package_url": "https://pypi.org/project/django-comments-dab/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-comments-dab/",
    "project_urls": {
      "Documentation": "https://django-comment-dab.readthedocs.io/index.html",
      "Homepage": "https://github.com/radi85/Comment",
      "Source Code": "https://github.com/radi85/Comment"
    },
    "release_url": "https://pypi.org/project/django-comments-dab/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Comment Framework app. It can be associated with any given model.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14244194,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ac3cdaefade13800c211750185d4e7aafa81926d4415d62800b7b059f7736d7",
        "md5": "c8f482f6b91672be6ddaaba5ecb717b6",
        "sha256": "d0f36f5777ab43108179abde576c103b8ec3dce099db3c20b8ad2a970c96e044"
      },
      "downloads": -1,
      "filename": "django-comments-dab-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c8f482f6b91672be6ddaaba5ecb717b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 69751,
      "upload_time": "2018-09-05T12:29:13",
      "upload_time_iso_8601": "2018-09-05T12:29:13.010490Z",
      "url": "https://files.pythonhosted.org/packages/1a/c3/cdaefade13800c211750185d4e7aafa81926d4415d62800b7b059f7736d7/django-comments-dab-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}