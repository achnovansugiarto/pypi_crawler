{
  "info": {
    "author": "Ryan May, Patrick Marsh, Sean Arms, Eric Bruning, John Leeman, Zach Bruick",
    "author_email": "support-python@unidata.ucar.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Matplotlib",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Atmospheric Science"
    ],
    "description": "MetPy\n=====\n\n[![MetPy Logo](https://github.com/Unidata/MetPy/raw/main/docs/_static/metpy_150x150.png)](https://unidata.github.io/MetPy/)\n[![Unidata Logo](https://github.com/Unidata/MetPy/raw/main/docs/_static/unidata_150x150.png)](https://www.unidata.ucar.edu)\n\n[![License](https://img.shields.io/pypi/l/metpy.svg)](https://pypi.python.org/pypi/MetPy/)\n[![Gitter](https://badges.gitter.im/Unidata/MetPy.svg)](https://gitter.im/Unidata/MetPy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=round-square)](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n\n[![Latest Docs](https://github.com/Unidata/MetPy/workflows/Build%20Docs/badge.svg)](http://unidata.github.io/MetPy)\n[![PyPI Package](https://img.shields.io/pypi/v/metpy.svg)](https://pypi.python.org/pypi/MetPy/)\n[![Conda Package](https://anaconda.org/conda-forge/metpy/badges/version.svg)](https://anaconda.org/conda-forge/metpy)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/metpy.svg)](https://pypi.python.org/pypi/MetPy/)\n[![Conda Downloads](https://anaconda.org/conda-forge/metpy/badges/downloads.svg)](https://anaconda.org/conda-forge/metpy)\n\n[![PyPI Tests](https://github.com/Unidata/MetPy/workflows/PyPI%20Tests/badge.svg)](https://github.com/Unidata/MetPy/actions?query=workflow%3A%22PyPI+Tests%22)\n[![Conda Tests](https://github.com/Unidata/MetPy/workflows/Conda%20Tests/badge.svg)](https://github.com/Unidata/MetPy/actions?query=workflow%3A%22Conda+Tests%22)\n[![Code Coverage Status](https://codecov.io/github/Unidata/MetPy/coverage.svg?branch=main)](https://codecov.io/github/Unidata/MetPy?branch=main)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/2e64843f595c42e991457cb76fcfa769)](https://www.codacy.com/gh/Unidata/MetPy/dashboard)\n[![Code Climate](https://codeclimate.com/github/Unidata/MetPy/badges/gpa.svg)](https://codeclimate.com/github/Unidata/MetPy)\n\nMetPy is a collection of tools in Python for reading, visualizing and\nperforming calculations with weather data.\n\nMetPy follows [semantic versioning](https://semver.org) in its version number. This means\nthat any MetPy ``1.x`` release will be backwards compatible with an earlier ``1.y`` release. By\n\"backward compatible\", we mean that **correct** code that works on a ``1.y`` version will work\non a future ``1.x`` version.\n\nFor additional MetPy examples not included in this repository, please see the [Unidata Python\nGallery](https://unidata.github.io/python-gallery/).\n\nWe support Python >= 3.8.\n\nNeed Help?\n----------\n\nNeed help using MetPy? Found an issue? Have a feature request? Checkout our\n[support page](https://github.com/Unidata/MetPy/blob/main/SUPPORT.md).\n\nImportant Links\n---------------\n\n- [HTML Documentation](http://unidata.github.io/MetPy)\n- [Unidata Python Gallery](https://unidata.github.io/python-gallery/)\n- \"metpy\" tagged questions on [Stack Overflow](https://stackoverflow.com/questions/tagged/metpy)\n- [Gitter chat room](https://gitter.im/Unidata/MetPy)\n\nDependencies\n------------\n\nOther required packages:\n\n- Numpy\n- Scipy\n- Matplotlib\n- Pandas\n- Pint\n- Xarray\n\nThere is also an optional dependency on the pyproj library for geographic\nprojections (used with cross sections, grid spacing calculation, and the GiniFile interface).\n\nSee the [installation guide](https://unidata.github.io/MetPy/latest/userguide/installguide.html)\nfor more information.\n\nCode of Conduct\n---------------\n\nWe want everyone to feel welcome to contribute to MetPy and participate in discussions. In that\nspirit please have a look at our [Code of Conduct](https://github.com/Unidata/MetPy/blob/main/CODE_OF_CONDUCT.md).\n\nContributing\n------------\n\n**Imposter syndrome disclaimer**: We want your help. No, really.\n\nThere may be a little voice inside your head that is telling you that you're not ready to be\nan open source contributor; that your skills aren't nearly good enough to contribute. What\ncould you possibly offer a project like this one?\n\nWe assure you - the little voice in your head is wrong. If you can write code at all,\nyou can contribute code to open source. Contributing to open source projects is a fantastic\nway to advance one's coding skills. Writing perfect code isn't the measure of a good developer\n(that would disqualify all of us!); it's trying to create something, making mistakes, and\nlearning from those mistakes. That's how we all improve, and we are happy to help others learn.\n\nBeing an open source contributor doesn't just mean writing code, either. You can help out by\nwriting documentation, tests, or even giving feedback about the project (and yes - that\nincludes giving feedback about the contribution process). Some of these contributions may be\nthe most valuable to the project as a whole, because you're coming to the project with fresh\neyes, so you can see the errors and assumptions that seasoned contributors have glossed over.\n\nFor more information, please read the see the [contributing guide](https://github.com/Unidata/MetPy/blob/main/CONTRIBUTING.md).\n\nPhilosophy\n----------\n\nThe space MetPy aims for is GEMPAK (and maybe NCL)-like functionality, in a way that plugs\neasily into the existing scientific Python ecosystem (numpy, scipy, matplotlib). So, if you\ntake the average GEMPAK script for a weather map, you need to:\n\n- read data\n- calculate a derived field\n- show on a map/skew-T\n\nOne of the benefits hoped to achieve over GEMPAK is to make it easier to use these routines for\nany meteorological Python application; this means making it easy to pull out the LCL\ncalculation and just use that, or re-use the Skew-T with your own data code. MetPy also prides\nitself on being well-documented and well-tested, so that on-going maintenance is easily\nmanageable.\n\nThe intended audience is that of GEMPAK: researchers, educators, and any one wanting to script\nup weather analysis. It doesn't even have to be scripting; all python meteorology tools are\nhoped to be able to benefit from MetPy. Conversely, it's hoped to be the meteorological\nequivalent of the audience of scipy/scikit-learn/skimage.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Unidata/MetPy",
    "keywords": "meteorology,weather",
    "license": "BSD 3-Clause",
    "maintainer": "MetPy Developers",
    "maintainer_email": "support-python@unidata.ucar.edu",
    "name": "MetPy",
    "package_url": "https://pypi.org/project/MetPy/",
    "platform": "any",
    "project_url": "https://pypi.org/project/MetPy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Unidata/MetPy/issues",
      "Documentation": "https://unidata.github.io/MetPy/",
      "Homepage": "https://github.com/Unidata/MetPy",
      "MetPy Mondays": "https://www.youtube.com/playlist?list=PLQut5OXpV-0ir4IdllSt1iEZKTwFBa7kO",
      "Release Notes": "https://github.com/Unidata/MetPy/releases",
      "Source Code": "https://github.com/Unidata/MetPy",
      "Twitter": "https://twitter.com/MetPy"
    },
    "release_url": "https://pypi.org/project/MetPy/1.4.0/",
    "requires_dist": [
      "matplotlib (>=3.3.0)",
      "numpy (>=1.18.0)",
      "pandas (>=1.0.0)",
      "pint (>=0.15)",
      "pooch (>=1.2.0)",
      "pyproj (>=2.6.1)",
      "scipy (>=1.4.0)",
      "traitlets (>=5.0.5)",
      "xarray (>=0.18.0)",
      "importlib-resources (>=1.3.0) ; python_version < \"3.9\"",
      "sphinx ; extra == 'doc'",
      "sphinx-gallery (>=0.4) ; extra == 'doc'",
      "myst-parser ; extra == 'doc'",
      "netCDF4 ; extra == 'doc'",
      "cartopy (>=0.17.0) ; extra == 'examples'",
      "geopandas (>=0.6.0) ; extra == 'examples'",
      "matplotlib (>=3.3.0) ; extra == 'examples'",
      "shapely (>=1.6.0) ; extra == 'examples'",
      "pytest (>=2.4) ; extra == 'test'",
      "pytest-mpl ; extra == 'test'",
      "cartopy (>=0.17.0) ; extra == 'test'",
      "netCDF4 ; extra == 'test'",
      "shapely (>=1.6.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Collection of tools for reading, visualizing and performing calculations with weather data.",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17322208,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c60f718e1abaf761e0da909e96ce19498307303a5bbdc93264101864870ebc28",
        "md5": "cab6ec7a1fb716babef865dd82537986",
        "sha256": "9969febc9b14848f6143932d5e9029153b5fb39ca8f1d77466db5a4814228eb0"
      },
      "downloads": -1,
      "filename": "MetPy-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cab6ec7a1fb716babef865dd82537986",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 387691,
      "upload_time": "2022-12-23T22:12:50",
      "upload_time_iso_8601": "2022-12-23T22:12:50.299671Z",
      "url": "https://files.pythonhosted.org/packages/c6/0f/718e1abaf761e0da909e96ce19498307303a5bbdc93264101864870ebc28/MetPy-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd8ab96fee62fbeb3016ece1ccdc1e8c25a7b37153128a43ab0089b4d8a0fe9c",
        "md5": "f1eb91a9036637502ff7cb6c9442302d",
        "sha256": "e4201a45181cbc9e56bbd50d8132be8d889548baa488554576a68b052de395db"
      },
      "downloads": -1,
      "filename": "MetPy-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1eb91a9036637502ff7cb6c9442302d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9905815,
      "upload_time": "2022-12-23T22:12:52",
      "upload_time_iso_8601": "2022-12-23T22:12:52.408822Z",
      "url": "https://files.pythonhosted.org/packages/fd/8a/b96fee62fbeb3016ece1ccdc1e8c25a7b37153128a43ab0089b4d8a0fe9c/MetPy-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}