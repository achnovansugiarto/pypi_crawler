{
  "info": {
    "author": "Genialis d.o.o.",
    "author_email": "dev-team@genialis.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==============================\nDjango REST Framework Reactive\n==============================\n\n|build|\n\n.. |build| image:: https://travis-ci.org/genialis/django-rest-framework-reactive.svg?branch=master\n    :target: https://travis-ci.org/genialis/django-rest-framework-reactive\n    :alt: Build Status\n\nThis package enables regular Django REST Framework views to become reactive,\nthat is so that client-side applications may get notified of changes to the\nunderlying data as soon as they happen, without the need to poll the API\nagain. While the initial request is done as a regular HTTP request, all the\nupdate notifications come through WebSockets.\n\nInstall\n=======\n\nPrerequisites\n-------------\n\nThe reactive extensions for Django REST Framework require the use of `Django Channels`_\nfor push notifications via WebSockets.\n\n.. _`Django Channels`: https://channels.readthedocs.io\n\nFrom PyPI\n---------\n\n.. code::\n\n    pip install djangorestframework-reactive\n\nFrom source\n-----------\n\n.. code::\n\n   pip install https://github.com/genialis/django-rest-framework-reactive/archive/<git-tree-ish>.tar.gz\n\nwhere ``<git-tree-ish>`` can represent any commit SHA, branch name, tag name,\netc. in `DRF Reactive's GitHub repository`_. For example, to install the latest\nversion from the ``master`` branch, use:\n\n.. code::\n\n   pip install https://github.com/genialis/django-rest-framework-reactive/archive/master.tar.gz\n\n.. _`DRF Reactive's GitHub repository`: https://github.com/genialis/django-rest-framework-reactive/\n\n\nConfigure\n=========\n\nFirst, add ``rest_framework_reactive`` to ``INSTALLED_APPS``.\n\nConfigure your Django Channels ``routing.py`` to include the required paths:\n\n.. code::\n\n    from django.conf.urls import url\n\n    from channels.routing import ChannelNameRouter, ProtocolTypeRouter, URLRouter\n\n    from rest_framework_reactive.consumers import ClientConsumer, PollObserversConsumer, WorkerConsumer\n    from rest_framework_reactive.protocol import CHANNEL_POLL_OBSERVER, CHANNEL_WORKER_NOTIFY\n\n    application = ProtocolTypeRouter({\n        # Client-facing consumers.\n        'websocket': URLRouter([\n            # To change the prefix, you can import ClientConsumer in your custom\n            # Channels routing definitions instead of using these defaults.\n            url(r'^ws/(?P<subscriber_id>.+)$', ClientConsumer),\n        ]),\n\n        # Background worker consumers.\n        'channel': ChannelNameRouter({\n            CHANNEL_POLL_OBSERVER: PollObserversConsumer,\n            CHANNEL_WORKER_NOTIFY: WorkerConsumer,\n        })\n    })\n\nAlso, ``urls.py`` need to be updated to include some additional paths:\n\n.. code::\n\n   urlpatterns = [\n     # ...\n     url(r'^api/queryobserver/', include('rest_framework_reactive.api_urls')),\n     # ...\n   ]\n\nRun\n===\n\nIn addition to running a Django application server instance, you need to also run a\nseparate observer worker process (or multiple of them). You may start it by running:\n\n.. code::\n\n   python manage.py runworker rest_framework_reactive.worker rest_framework_reactive.poll_observer",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/genialis/django-rest-framework-reactive",
    "keywords": "django-rest-framework reactive django",
    "license": "Apache License (2.0)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangorestframework-reactive",
    "package_url": "https://pypi.org/project/djangorestframework-reactive/",
    "platform": "",
    "project_url": "https://pypi.org/project/djangorestframework-reactive/",
    "project_urls": {
      "Homepage": "https://github.com/genialis/django-rest-framework-reactive"
    },
    "release_url": "https://pypi.org/project/djangorestframework-reactive/3.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Making Django REST Framework reactive",
    "version": "3.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13445722,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c8a7b3556ce8cdad2539abc2477609659d29ada8d7ab9e6855a94b7976575ac7",
        "md5": "ac1fe73ac38e756fa7241f45b722e71b",
        "sha256": "a72b18fdce0e30f7597930444459d711c477d0759990105ee1d4612edef7365b"
      },
      "downloads": -1,
      "filename": "djangorestframework-reactive-3.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "ac1fe73ac38e756fa7241f45b722e71b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19182,
      "upload_time": "2018-06-19T11:49:15",
      "upload_time_iso_8601": "2018-06-19T11:49:15.086222Z",
      "url": "https://files.pythonhosted.org/packages/c8/a7/b3556ce8cdad2539abc2477609659d29ada8d7ab9e6855a94b7976575ac7/djangorestframework-reactive-3.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}