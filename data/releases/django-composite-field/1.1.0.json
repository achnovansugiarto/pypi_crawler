{
  "info": {
    "author": "Michael P. Jung",
    "author_email": "michael.jung@terreon.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|Build Status| |PyPI Version| |PyPI License| |Python Versions| |Django Versions| |Read the Docs|\n\nCompositeField for Django Models\n================================\n\nThis is an implementation of a CompositeField for Django. Composite fields\ncan be used to group fields together and reuse their definitions.\n\nExample\n-------\n\n.. code-block:: python\n\n    class CoordField(CompositeField):\n        x = models.FloatField()\n        y = models.FloatField()\n\n    class Place(models.Model):\n        name = models.CharField(max_length=10)\n        coord = CoordField()\n\n    p = Place(name='Foo', coord_x=42, coord_y=0)\n    q = Place(name='Foo', coord=p.coord)\n    q.coord.y = 42\n\n\nHow does it work?\n-----------------\n\nThe content of composite fields are stored inside the model, so they do\nnot have to fiddle with any internals of the Django models. In the example\nabove ``p.coord`` returns a proxy object that maps the fields ``x`` and ``y``\nto the model fields ``coord_x`` and ``coord_y``. The proxy object also\nmakes it possible to assign more than one property at once.\n\nDocumentation can be found at `RTFD <http://django-composite-field.readthedocs.io/>`_.\n\n.. |Build Status| image:: http://img.shields.io/bitbucket/pipelines/bikeshedder/django-composite-field.svg\n   :target: https://bitbucket.org/bikeshedder/django-composite-field/addon/pipelines/home\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |PyPI License| image:: https://img.shields.io/pypi/l/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |Django Versions| image:: https://img.shields.io/pypi/djversions/django-composite-field.svg\n   :target: https://pypi.org/project/django-composite-field/\n.. |Read the Docs| image:: https://img.shields.io/readthedocs/django-composite-field.svg\n   :target: http://django-composite-field.readthedocs.io/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/bikeshedder/django-composite-field",
    "keywords": "django composite field",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-composite-field",
    "package_url": "https://pypi.org/project/django-composite-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-composite-field/",
    "project_urls": {
      "Homepage": "http://bitbucket.org/bikeshedder/django-composite-field"
    },
    "release_url": "https://pypi.org/project/django-composite-field/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "CompositeField implementation for Django",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16072501,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8bd2e85c83e986d994f36f946f739cb7f7e7d277b17bc79da8d9cfea73719d4",
        "md5": "d5b6061c3f58b0c6cc7f63cd1c3cb397",
        "sha256": "afc75c6724a3a55e68d75edc8ab3fc3f3646986fc702a29d94f495571f381448"
      },
      "downloads": -1,
      "filename": "django_composite_field-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d5b6061c3f58b0c6cc7f63cd1c3cb397",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 11659,
      "upload_time": "2020-01-06T17:53:06",
      "upload_time_iso_8601": "2020-01-06T17:53:06.907775Z",
      "url": "https://files.pythonhosted.org/packages/f8/bd/2e85c83e986d994f36f946f739cb7f7e7d277b17bc79da8d9cfea73719d4/django_composite_field-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77188844bee93e82d6615ec7944d5bdb8f9cc77e49210ecd733d76b06ed1b916",
        "md5": "6d69af5ba4d50e192586f619cae62373",
        "sha256": "9b6407742f179e2462ba36cbd3b124e0b1dca948c89a5a00f17747c33140eadd"
      },
      "downloads": -1,
      "filename": "django-composite-field-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6d69af5ba4d50e192586f619cae62373",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16411,
      "upload_time": "2020-01-06T17:53:04",
      "upload_time_iso_8601": "2020-01-06T17:53:04.854866Z",
      "url": "https://files.pythonhosted.org/packages/77/18/8844bee93e82d6615ec7944d5bdb8f9cc77e49210ecd733d76b06ed1b916/django-composite-field-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}