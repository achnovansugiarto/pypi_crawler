{
  "info": {
    "author": "Michael P. Jung",
    "author_email": "michael.jung@terreon.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|Build Status| |PyPI Version| |PyPI License| |Python Versions| |Django Versions| |Read the Docs|\n\nCompositeField for Django Models\n================================\n\nThis is an implementation of a CompositeField for Django. Composite fields\ncan be used to group fields together and reuse their definitions.\n\nExample\n-------\n\n.. code-block:: python\n\n    class CoordField(CompositeField):\n        x = models.FloatField()\n        y = models.FloatField()\n\n    class Place(models.Model):\n        name = models.CharField(max_length=10)\n        coord = CoordField()\n\n    p = Place(name='Foo', coord_x=42, coord_y=0)\n    q = Place(name='Foo', coord=p.coord)\n    q.coord.y = 42\n\n\nHow does it work?\n-----------------\n\nThe content of composite fields are stored inside the model, so they do\nnot have to fiddle with any internals of the Django models. In the example\nabove ``p.coord`` returns a proxy object that maps the fields ``x`` and ``y``\nto the model fields ``coord_x`` and ``coord_y``. The proxy object also\nmakes it possible to assign more than one property at once.\n\nThere are some more examples in the included tests.py.\n\n.. |Build Status| image:: http://img.shields.io/travis/ninemoreminutes/django-crum.svg\n   :target: https://travis-ci.org/ninemoreminutes/django-crum\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |PyPI License| image:: https://img.shields.io/pypi/l/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/django-composite-field.svg\n   :target: https://pypi.python.org/pypi/django-composite-field/\n.. |Django Versions| image:: https://img.shields.io/pypi/djversions/django-composite-field.svg\n   :target: https://pypi.org/project/django-composite-field/\n.. |Read the Docs| image:: https://img.shields.io/readthedocs/django-composite-field.svg\n   :target: http://django-composite-field.readthedocs.io/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/bikeshedder/django-composite-field",
    "keywords": "django composite field",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-composite-field",
    "package_url": "https://pypi.org/project/django-composite-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-composite-field/",
    "project_urls": {
      "Homepage": "http://bitbucket.org/bikeshedder/django-composite-field"
    },
    "release_url": "https://pypi.org/project/django-composite-field/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "CompositeField implementation for Django",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16072501,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c95988ecb315c9358b5582a8a47246d3eb9b47fb5376827e3884764820dbc79a",
        "md5": "01cb2a240991ddacc8254ccd5b9dc83f",
        "sha256": "14eee50bb9f79328659dc9bb55d53eb259549b68f5a05c48eb38f23b825e69b0"
      },
      "downloads": -1,
      "filename": "django_composite_field-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01cb2a240991ddacc8254ccd5b9dc83f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 11454,
      "upload_time": "2020-01-06T17:12:33",
      "upload_time_iso_8601": "2020-01-06T17:12:33.029902Z",
      "url": "https://files.pythonhosted.org/packages/c9/59/88ecb315c9358b5582a8a47246d3eb9b47fb5376827e3884764820dbc79a/django_composite_field-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d011b5edab4e5e5dad9c23c9856b1a9e94a8dc9e4e4842a069cd8d1e8d35afeb",
        "md5": "ee242a3bf6b8578132c77be352ff8bbc",
        "sha256": "4747a3dd2084b1c11b07c69695872ff372bb89c21a667f0f55d4aadf58d3f371"
      },
      "downloads": -1,
      "filename": "django-composite-field-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee242a3bf6b8578132c77be352ff8bbc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16279,
      "upload_time": "2020-01-06T17:12:31",
      "upload_time_iso_8601": "2020-01-06T17:12:31.296197Z",
      "url": "https://files.pythonhosted.org/packages/d0/11/b5edab4e5e5dad9c23c9856b1a9e94a8dc9e4e4842a069cd8d1e8d35afeb/django-composite-field-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}