{
  "info": {
    "author": "DevOps Division, University Information Services, University of Cambridge",
    "author_email": "raven-support@cam.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "# Introduction\n\ndjango-ucamwebauth is a library which provides use of Cambridge University's \n[Raven authentication](http://raven.cam.ac.uk/) for [Django](https://www.djangoproject.com/). It provides a Django \nauthentication backend which can be added to `AUTHENTICATION_BACKENDS` in the Django `settings` module.\n\n## Use\n\nInstall django-ucamwebauth using pip:\n\n```bash\npip install django-ucamwebauth\n```\n\nThen you can enable it within your Django project's settings.py:\n\n```python\nAUTHENTICATION_BACKENDS = (\n    'ucamwebauth.backends.RavenAuthBackend',\n    'django.contrib.auth.backends.ModelBackend'\n)\n```\n\nThis allows both normal Django login and Raven login.\n\nYou should then enable the URLs for ucamwebauth:\n\n````python\n#Django 1.11\nurlpatterns = [\n    ...\n    url(r'', include('ucamwebauth.urls')),\n    ...\n]\n\n#Django >=2.0\nurlpatterns = [\n    ...\n    path(r'', include('ucamwebauth.urls')),\n    ...\n]\n````\n\n## Minimum Config Settings\n\nYou then need to configure the app's settings. Raven has a live and test environments, the URL and certificate details \nare given below.\n\nThere are four minimum config settings:\n\n```\nUCAMWEBAUTH_LOGIN_URL: a string representing the URL for the Raven login redirect.\nUCAMWEBAUTH_LOGOUT_URL: a string representing the logout URL for Raven.\nUCAMWEBAUTH_RETURN_URL: the URL of your app which the Raven service should return the user to after authentication.\n    (Default is generated automatically from the urlconf)\nUCAMWEBAUTH_LOGOUT_REDIRECT: a string representing the URL to where the user is redirected when she logs out of the app\n    (Default to '/').\nUCAMWEBAUTH_NOT_CURRENT: a boolean value representing if raven users that are currently not members of the university\n    should be allowed to log in (Default to False). More info: http://www.ucs.cam.ac.uk/accounts/ravenleaving\nUCAMWEBAUTH_CERTS: a dictionary including key names and their associated certificates which can be downloaded from the\n    Raven project pages.\nUCAMWEBAUTH_TIMEOUT: An integer with the time (in seconds) that has to pass to consider an authentication timed out\n    (Default to 30).\nUCAMWEBAUTH_REDIRECT_AFTER_LOGIN: The url where you want to redirect the user after login (Default to '/').\nUCAMWEBAUTH_CREATE_USER: This defaults to True, allowing the autocreation of users who have been successfully \nauthenticated by Raven, but do not exist in the local database. The user is created with set_unusable_password().\n```\n\nAn example, referencing the Raven test environment is given below:\n\n```python\nUCAMWEBAUTH_LOGIN_URL = 'https://test.legacy.raven.cam.ac.uk/auth/authenticate.html'\nUCAMWEBAUTH_LOGOUT_URL = 'https://test.legacy.raven.cam.ac.uk/auth/logout.html'\nUCAMWEBAUTH_LOGOUT_REDIRECT = 'http://www.cam.ac.uk/'\nUCAMWEBAUTH_CERTS = {901: \"\"\"-----BEGIN CERTIFICATE-----\nMIIDrTCCAxagAwIBAgIBADANBgkqhkiG9w0BAQQFADCBnDELMAkGA1UEBhMCR0Ix\nEDAOBgNVBAgTB0VuZ2xhbmQxEjAQBgNVBAcTCUNhbWJyaWRnZTEgMB4GA1UEChMX\nVW5pdmVyc2l0eSBvZiBDYW1icmlkZ2UxKDAmBgNVBAsTH0NvbXB1dGluZyBTZXJ2\naWNlIFJhdmVuIFNlcnZpY2UxGzAZBgNVBAMTElJhdmVuIHB1YmxpYyBrZXkgMjAe\nFw0wNDA4MTAxMzM1MjNaFw0wNDA5MDkxMzM1MjNaMIGcMQswCQYDVQQGEwJHQjEQ\nMA4GA1UECBMHRW5nbGFuZDESMBAGA1UEBxMJQ2FtYnJpZGdlMSAwHgYDVQQKExdV\nbml2ZXJzaXR5IG9mIENhbWJyaWRnZTEoMCYGA1UECxMfQ29tcHV0aW5nIFNlcnZp\nY2UgUmF2ZW4gU2VydmljZTEbMBkGA1UEAxMSUmF2ZW4gcHVibGljIGtleSAyMIGf\nMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC/9qcAW1XCSk0RfAfiulvTouMZKD4j\nm99rXtMIcO2bn+3ExQpObbwWugiO8DNEffS7bzSxZqGp7U6bPdi4xfX76wgWGQ6q\nWi55OXJV0oSiqrd3aOEspKmJKuupKXONo2efAt6JkdHVH0O6O8k5LVap6w4y1W/T\n/ry4QH7khRxWtQIDAQABo4H8MIH5MB0GA1UdDgQWBBRfhSRqVtJoL0IfzrSh8dv/\nCNl16TCByQYDVR0jBIHBMIG+gBRfhSRqVtJoL0IfzrSh8dv/CNl16aGBoqSBnzCB\nnDELMAkGA1UEBhMCR0IxEDAOBgNVBAgTB0VuZ2xhbmQxEjAQBgNVBAcTCUNhbWJy\naWRnZTEgMB4GA1UEChMXVW5pdmVyc2l0eSBvZiBDYW1icmlkZ2UxKDAmBgNVBAsT\nH0NvbXB1dGluZyBTZXJ2aWNlIFJhdmVuIFNlcnZpY2UxGzAZBgNVBAMTElJhdmVu\nIHB1YmxpYyBrZXkgMoIBADAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4GB\nAFciErbr6zl5i7ClrpXKA2O2lDzvHTFM8A3rumiOeauckbngNqIBiCRemYapZzGc\nW7fgOEEsI4FoLOjQbJgIrgdYR2NIJh6pKKEf+9Ts2q/fuWv2xOLw7w29PIICeFIF\nhAM+a6/30F5fdkWpE1smPyrfASyXRfWE4Ccn1RVgYX9u\n-----END CERTIFICATE-----\n\"\"\",\n900: \"\"\"-----BEGIN CERTIFICATE-----\nMIID1jCCAr4CCQCeVWORbpJWcTANBgkqhkiG9w0BAQsFADCBrDELMAkGA1UEBhMC\nVUsxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYDVQQHDAlDYW1icmlkZ2Ux\nIDAeBgNVBAoMF1VuaXZlcnNpdHkgb2YgQ2FtYnJpZGdlMSgwJgYDVQQLDB9Vbml2\nZXJzaXR5IEluZm9ybWF0aW9uIFNlcnZpY2VzMSQwIgYDVQQDDBt0ZXN0LmxlZ2Fj\neS5yYXZlbi5jYW0uYWMudWswHhcNMjEwNzEzMDc0NzQzWhcNMjEwODEyMDc0NzQz\nWjCBrDELMAkGA1UEBhMCVUsxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMRIwEAYD\nVQQHDAlDYW1icmlkZ2UxIDAeBgNVBAoMF1VuaXZlcnNpdHkgb2YgQ2FtYnJpZGdl\nMSgwJgYDVQQLDB9Vbml2ZXJzaXR5IEluZm9ybWF0aW9uIFNlcnZpY2VzMSQwIgYD\nVQQDDBt0ZXN0LmxlZ2FjeS5yYXZlbi5jYW0uYWMudWswggEiMA0GCSqGSIb3DQEB\nAQUAA4IBDwAwggEKAoIBAQCpHtVwwK0VAcMAKTdKIyG7OgQjha9U1+a+3gpQMolP\ndhjssTh1fs3+EfixZY7wb92+f+vqOV5Hu6n55Y7LXArKoqLshVfyR1uOjB5/UlFi\nFFS0LG7L1O0wMKbzDLJ94G3UNwBXOD+KFL5zcfCAzZNFqCentiHO08LfX/tr7+q6\nDaMuIh8RQpOfowDsIhaiB2YtK1A+B6dJxnHAq+a6sX7ZBwtZoWyBtUalrNMyGGN4\neaEuRUIL9ilCksI7Nb4X91dyryO/L/QI4XQtbaz7j8K8hSJJ4MGb6Boc1Ov69ZEk\nGY322DIS84WfeSem6Ujy4TyZSkmUPOiiT9bFN2MUomKJAgMBAAEwDQYJKoZIhvcN\nAQELBQADggEBAGg+4IDXLtypkoxteb8KQWvt11d4xMljNmJ6k20gBpPEd5nzocQ7\nMeSv9l66NrlsHCJ+BwJjJDgIS4dwkofu+hmkLNE6/d3uHugKazv3ySw+g5oIcLNB\nvjgIhbD4krVSh4LvZxQR+sffQnrkzSSAB6/6QMTtAcor61A+0Xo4OhvPHMWOcS9I\nrT57/9Slr9eEtSUcpKs+cyY9G6t9GxdC627diApsw+mG2X1raFIROXuXMzQQysEI\n6SzxRFof2AutEgcyYRERLbHIqH5K1EgjLWs3s4PujOhTvhUoJZ7OlTjNmzNrFXKj\n9nU4Uo6qClXDVKK7JecERsAfIedKgFGbQqY=\n-----END CERTIFICATE-----\n\"\"\"}\n```\n\n## Errors\n\nThere are five possible exceptions that can be raised using this module: MalformedResponseError, InvalidResponseError,\nPublicKeyNotFoundError, and OtherStatusCode that return HTTP 500, or UserNotAuthorised that returns 403. You can catch \nthese exceptions using process_exception middleware \n(https://docs.djangoproject.com/en/2.2/topics/http/middleware/#process_exception) to customize what the user will \nreceive as a response. The module has a default behaviour for these exceptions with HTTP error codes and using their \ncorresponding templates. To use the default behaviour just add:\n \n```python\nMIDDLEWARE = [\n    ...\n    'ucamwebauth.middleware.DefaultErrorBehaviour',\n    ...\n]\n\nINSTALLED_APPS = [\n    ...\n    'ucamwebauth',\n    ...\n]\n```\n\nYou can also rewrite the ucamwebauth_\\<httpcode\\>.html templates. You only need to add the following lines to your own if \nyou want to show the user the error message:\n\n```python\n{% for message in messages %}\n    {{ message }}<br/>\n{% endfor %}\n```\n\n\n## Authentication request parameters\n\nThis parameters are sent with the authentication request and allows the developer to tune the request to fit their app:\n\n```\nUCAMWEBAUTH_DESC: A text description of the resource requesting authentication which may be displayed to the end-user\n    to further identify the resource to which his/her identity is being disclosed. Can be omitted.\nUCAMWEBAUTH_IACT: The value 'yes' requires that a re-authentication exchange takes place with the user. This could be\n    used prior to a sensitive transaction in an attempt to ensure that a previously authenticated user is still present\n    at the browser. The value 'no' requires that the authentication request will only succeed if the user's identity\n    can be returned without interacting with the user. This could be used as an optimisation to take advantage of any\n    existing authentication but without actively soliciting one. If omitted or empty, then a previously established\n    identity may be returned if the WLS supports doing so, and if not then the user will be prompted as necessary.\nUCAMWEBAUTH_MSG: Text describing why authentication is being requested on this occasion which may be displayed to the\n    end-user. Can be omitted.\nUCAMWEBAUTH_PARAMS: Data that will be returned unaltered to the WAA in any 'authentication response message' issued as\n    a result of this request. This could be used to carry the identity of the resource originally requested or other\n    WAA state, or to associate authentication requests with their eventual replies. When returned, this data will be\n    protected by the digital signature applied to the authentication response message but nothing else is done to\n    ensure the integrity or confidentiality of this data - the WAA MUST take responsibility for this if necessary.\nUCAMWEBAUTH_FAIL: If this parameter is 'yes' and the outcome of the request is anything other than success (i.e. the\n    status code would be anything other than 200) then the WLS MUST return an informative error to the user and MUST\n    not redirect back to the WAA. Setting this makes it easier to implement WAAs at the expense of a loss of\n    flexibility in error handling.\n```\n\nThe details of these can be found in the Raven WLS protocol documentation,\n[here](http://raven.cam.ac.uk/project/waa2wls-protocol.txt).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.developers.cam.ac.uk/uis/devops/django/ucamwebauth",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ucamwebauth",
    "package_url": "https://pypi.org/project/django-ucamwebauth/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-ucamwebauth/",
    "project_urls": {
      "Homepage": "https://gitlab.developers.cam.ac.uk/uis/devops/django/ucamwebauth"
    },
    "release_url": "https://pypi.org/project/django-ucamwebauth/1.5.2/",
    "requires_dist": [
      "django (<2.3,>=1.11)",
      "pyOpenSSL",
      "requests"
    ],
    "requires_python": "",
    "summary": "A Django authentication backend for Ucam-WebAuth a.k.a. Raven",
    "version": "1.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13398283,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18274ca807f967ba458e90fd6f595c49e409c71015ace78dfc6cdbef97a36055",
        "md5": "0f3b5adda25da4f984a76fa5c6ded7de",
        "sha256": "40269f65d48d77ff67a373e4fd974ea758b12758c09daf8811322c077368a1b6"
      },
      "downloads": -1,
      "filename": "django_ucamwebauth-1.5.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f3b5adda25da4f984a76fa5c6ded7de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23742,
      "upload_time": "2022-03-21T11:57:11",
      "upload_time_iso_8601": "2022-03-21T11:57:11.073652Z",
      "url": "https://files.pythonhosted.org/packages/18/27/4ca807f967ba458e90fd6f595c49e409c71015ace78dfc6cdbef97a36055/django_ucamwebauth-1.5.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3759fb8e35fdb02867fb1754f98b34d227646a38819966277f67dad0893c8c65",
        "md5": "09e426aae3dcbbfdcc9b6b46486fa0f4",
        "sha256": "ae0a73a9dbe78042c17e63ea6e1b7026d90da3c86ff421ff878856010242ee00"
      },
      "downloads": -1,
      "filename": "django-ucamwebauth-1.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "09e426aae3dcbbfdcc9b6b46486fa0f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20115,
      "upload_time": "2022-03-21T11:57:12",
      "upload_time_iso_8601": "2022-03-21T11:57:12.990646Z",
      "url": "https://files.pythonhosted.org/packages/37/59/fb8e35fdb02867fb1754f98b34d227646a38819966277f67dad0893c8c65/django-ucamwebauth-1.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}