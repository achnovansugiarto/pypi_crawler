{
  "info": {
    "author": "Jonas Kulhanek",
    "author_email": "jonas.kulhanek@live.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DMHouse \n*DMHouse* is a fork of [DeepMind Lab 3D simulator](https://github.com/deepmind/lab), modified for indoor visual navigation.\n\n<div align=\"center\">\n<img src=\"docs/images/dmhouse1.png\"\n     width=\"240\" height=\"180\" border=\"10\" />\n<img src=\"docs/images/dmhouse2.png\"\n     width=\"240\" height=\"180\" border=\"10\" />\n<img src=\"docs/images/dmhouse3.png\"\n     width=\"240\" height=\"180\" border=\"10\" />\n  <br /><br />\n</div>\n\n## Getting started\nBefore getting started, please ensure you have all required packages installed (SDL2, python3.8, OSMesa, gettext).\nOn ubuntu you can issue the following command:\n```bash\n$ sudo apt install -y libsdl2-dev python3.8-dev python3.8-numpy libosmesa6-dev gettext\n```\nAlternatively, you can use the provided docker image with pre-installed environment.\n\nYou can install this package from the PyPI repository.\n```bash\n$ pip install dmhouse\n```\n\nThe package provides a *gym* interface. Here is an example, which shows how to create a new environment instance.\n```python\nimport dmhouse  # Required to register environments to gym\nimport gym\n\nenv = gym.make('DMHouse-v1', screen_size=(84, 84), renderer='hardware')\n```\n\nNOTE: for better performance, you should use `renderer='hardware'`, other option is `renderer='software'`\n\n## About\nThe primary purpose of 3DHouse is to act as a testbed for research in artificial intelligence,\nespecially deep reinforcement learning visual navigation.\nThis fork modifies DeepMind Lab to be suitable for visual navigation in indoor environments.\nIt adds new scenes and office-like 3D objects and also removes game-like animations and on-screen artifacts.\n\nIf you use *DMHouse* in your research and would like to cite us, you can use the following citation:\n```bibtex\n@article{kulhanek2020visual,\n  title={Visual Navigation in Real-World Indoor Environments Using End-to-End Deep Reinforcement Learning},\n  author={Kulh{\\'a}nek, Jon{\\'a}{\\v{s}} and Derner, Erik and Babu{\\v{s}}ka, Robert},\n  journal={arXiv preprint arXiv:2010.10903},\n  year={2020}\n}\n```\n\nYou can also cite the *DeepMind Lab* environment by citing the [DeepMind Lab paper](https://arxiv.org/abs/1612.03801).\n\nIf you have any questions, you can reach me at [jonas.kulhanek@live.com](mailto:jonas.kulhanek@live.com) \nor the authors of DeepMind Lab at [lab@deepmind.com](mailto:lab@deepmind.com).\n\n## Extending DMHouse simulator\n### Getting started\nFirst, clone this repository by running:\n```shell\n$ git clone https://github.com/jkulhanek/dmlab-vn\n$ cd lab\n```\n\nGet started by installing the required packages. On ubuntu, you can do it using the following command:\n```bash\n$ sudo apt install -y libsdl2-dev python3.8-dev python3.8-numpy libosmesa6-dev\n$ sudo apt install -y curl gnupg\n$ curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg\n$ sudo mv bazel.gpg /etc/apt/trusted.gpg.d/\n$ echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\n$ sudo apt update -y\n$ sudo apt install -y bazel\n```\nAlternatively, you can used the pre-installed docker image.\n\n### Building pip package\nTo build the pip package, run the following commands:\n```bash\n$ bazel build -c opt --define graphics=osmesa_or_egl //python/pip_package:build_pip_package\n$ ./bazel-bin/python/pip_package/build_pip_package /tmp/dmlab_pkg\n```\n\nThe package can be installed using the following command:\n``` \n$ pip install /tmp/dmlab_pkg/dmhouse-*-py3-none-any.whl\n```\n\n\n## Upstream sources\n*DMHouse* is built on top of DeepMind's Lab 3D simulator, which is in turn\n built from the *ioquake3* game engine, and it uses the tools *q3map2* and\n *bspc* for map creation.\n\n* *DeepMind Lab* is taken from [github.com/deepmind/lab](https://github.com/deepmind/lab).\n\n* *bspc* is taken from [github.com/TTimo/bspc](https://github.com/TTimo/bspc),\n  revision d9a372db3fb6163bc49ead41c76c801a3d14cf80. There are virtually no\n  local modifications, although we integrate this code with the main ioq3 code\n  and do not use their copy in the `deps` directory. We expect this code to be\n  stable.\n\n* *q3map2* is taken from\n  [github.com/TTimo/GtkRadiant](https://github.com/TTimo/GtkRadiant),\n  revision d3d00345c542c8d7cc74e2e8a577bdf76f79c701. A few minor local\n  modifications add synchronization. We also expect this code to be stable.\n\n* *ioquake3* is taken from\n  [github.com/ioquake/ioq3](https://github.com/ioquake/ioq3),\n  revision 29db64070aa0bae49953bddbedbed5e317af48ba. The code contains extensive\n  modifications and additions.\n\n* EGL headers are included in this package by DeepMind's Lab (in\n   `//third_party/GL/{`[`EGL`](third_party/GL/EGL)`,`[`KHR`](third_party/GL/KHR)`}`),\n   taken from the Khronos OpenGL/OpenGL ES XML API Registry at\n   [www.khronos.org/registry/EGL](http://www.khronos.org/registry/EGL/). The\n   headers have been modified slightly to remove the dependency of EGL on X.\n\nWe are very grateful to the maintainers of these repositories for all their hard\nwork on maintaining high-quality code bases.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jkulhanek/dmlab-vn",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dmhouse",
    "package_url": "https://pypi.org/project/dmhouse/",
    "platform": null,
    "project_url": "https://pypi.org/project/dmhouse/",
    "project_urls": {
      "Homepage": "https://github.com/jkulhanek/dmlab-vn"
    },
    "release_url": "https://pypi.org/project/dmhouse/1.0.9/",
    "requires_dist": [
      "gym",
      "numpy (==1.19.5)",
      "six (>=1.10.0)"
    ],
    "requires_python": "",
    "summary": "DMHouse 3D environment simulator",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13287264,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce826da8b427e6a4ef35cab12b503f6df1a1a1b857689365ac953c9cf3c3f26b",
        "md5": "1c337aaff308ab58d4e0aad944a0e340",
        "sha256": "62431650f1534c63f39832ffbd15e5f018e30b4932ddf5f4a7ffaa48cf28cace"
      },
      "downloads": -1,
      "filename": "dmhouse-1.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c337aaff308ab58d4e0aad944a0e340",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 67465220,
      "upload_time": "2022-03-24T20:54:35",
      "upload_time_iso_8601": "2022-03-24T20:54:35.746438Z",
      "url": "https://files.pythonhosted.org/packages/ce/82/6da8b427e6a4ef35cab12b503f6df1a1a1b857689365ac953c9cf3c3f26b/dmhouse-1.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efc609c5c52f05302a52b5a9835dae91b4df8e7ab642f11194de1cce16cfce00",
        "md5": "8a9f7a4f7416e25f8a93c0bc96f6587e",
        "sha256": "2b3d5bfd4f32a20d830ccef102bd3a0b580338c2d966641e01fea8485e372963"
      },
      "downloads": -1,
      "filename": "dmhouse-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "8a9f7a4f7416e25f8a93c0bc96f6587e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 67327139,
      "upload_time": "2022-03-24T20:54:40",
      "upload_time_iso_8601": "2022-03-24T20:54:40.753677Z",
      "url": "https://files.pythonhosted.org/packages/ef/c6/09c5c52f05302a52b5a9835dae91b4df8e7ab642f11194de1cce16cfce00/dmhouse-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}