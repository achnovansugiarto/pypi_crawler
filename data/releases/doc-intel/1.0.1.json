{
  "info": {
    "author": "Vishak Arudhra",
    "author_email": "vishakarudhra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# doc_intel\n\n`pip install doc-intel`\n\n\n###### This package is subject to several potential fixes and until then any benefits derived by using this is very much intended. \n\n### doc_intel is your solution to a largely cleansed and intact text extract from a PDF. \n\n\n###### change 0.0.1 (8 / 23 / 2021) :\n   * Line breaks lead to breakage of full words into smaller potentially non dictionary words and changes have been made to fix that. \n   * A dictionary has been used to identify how to reconstruct the broken words. \n###### change 0.0.2 (8 / 28 / 2021) :                         \n   * Updated dictionary, maybe inverse document frequency will later be used instead to fix the line breaks. \n   * Inverse document frequency has been used to precisely split and reconstruct stitched or meaninglessly spaced words. \n###### change 0.0.3 (9 / 10 / 2021) :\n   * added and removed words in word.txt, fixed dot spacing and conserved number word detachment post processing\" \n\n###### change 0.0.4 (9 / 14 / 2021) :\n   * added and removed words in word.txt, maintained the positions of apostrophes.\n\n### Major Version Update 1.0.0 (10 / 19 / 2021) :\n   * A new module has been added to serve requirements of deletion and addition of words in the words text file. \n   * Usage demonstration can be found under the feature instruction section. \n\n###### change 1.0.1 (10 / 21 / 2021) :\n   * fixed issue by which decimal numbers were spaced from the decimal point.\n   * closed the words text file in the main code block to prevent unclosed file issues. \n\n\n## Feature instruction:\n\n#### REMOVE THE HEADER AND FOOTER TERMS FORM YOUR DOCUMENT: \n\n```\nfrom doc_intel import text_laundry\n\nfile_path = / your_path/ your_file.pdf\n\ntexts = text_laundry.head_foot(file_path).remove()\n```\n\n#### SCRUB OFF TEXTUAL NOISE FROM YOUR TEXTS:\n\n###### Arguments : \n\n* **serial numerical noise** [bool]: noise like `(text) + (random numbers, spaced or continous)` will be removed. \n\n* **sentences or words interrupted with special characters** [bool] : All cohesive words and sentences interruptions like  `co -hesive` or `sol **utions` should be removed.\n\n* **lower case** [bool] : toggle between bool values for lower or upper casing. \n\n* `s u b s t r i n g s w h i c h a r e a t t a c h e d w i l l b e s e p a r a t e d` --> ``substrings which are attached will be separated`` (based on the fequency of the constituent words in the document). \n\n```\ntext_object = text_laundry.load_text([input str], remove_serial, sents_or_word_breaks, lower)\ncleaned_text = text_object.launder()\n```\n\n#### **ADD** AND **DELETE** WORDS FROM IN-BUILT DICTIONARY:\n\n* PDF documents are not purposely written to suite document extraction and therefore, a lot of discontinued words in the documents end up broken with ordinary text extraction. \n* doc-intel's in-built dictionary support identification of many 1000s of words which is now **editable**. Add and remove words as you require for your smooth text extraction. \n* `do-cument` --> `document`\n\n```\nfrom doc_intel import manage_diction\n\nword_list = \" your list of words to either add or delete \"\nmanage_diction.register_words(word_list).Add()  #or\nmanage_diction.register_words(word_list).Delete()\n```\n\n\n###### **Authored & Maintained By** : Vishak Arudhra\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VishakArudhra/doc_intel",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doc-intel",
    "package_url": "https://pypi.org/project/doc-intel/",
    "platform": "",
    "project_url": "https://pypi.org/project/doc-intel/",
    "project_urls": {
      "Homepage": "https://github.com/VishakArudhra/doc_intel"
    },
    "release_url": "https://pypi.org/project/doc-intel/1.0.1/",
    "requires_dist": [
      "pandas",
      "Unidecode",
      "unicodedata2",
      "clean-text",
      "Levenshtein",
      "PyMuPDF",
      "regex"
    ],
    "requires_python": "",
    "summary": "Your solution to cleansing PDF documents for preprocessing for NLP",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11789833,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5e5a4ad8ff3d0e9ebe16b2866d7d79990c25966d54ea5ea2175631006377af6",
        "md5": "f9056a04a815cc1f6f0ac3e431062860",
        "sha256": "713cc1cf95f3987947164ff06763089b0c47533ec1ca03873a82203be9298b90"
      },
      "downloads": -1,
      "filename": "doc_intel-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9056a04a815cc1f6f0ac3e431062860",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 880494,
      "upload_time": "2021-10-21T08:39:43",
      "upload_time_iso_8601": "2021-10-21T08:39:43.016885Z",
      "url": "https://files.pythonhosted.org/packages/c5/e5/a4ad8ff3d0e9ebe16b2866d7d79990c25966d54ea5ea2175631006377af6/doc_intel-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55c221705f5f20b1131629547a6b1ceea2ad2a4acdd3b6e8c277d0e027bce2f1",
        "md5": "554669bbfa0d22f7237b927aa9f68c16",
        "sha256": "42085bbe5598d391e16fd0fd9e9fc7d1bd361d86854f9b5e6f7804007b793199"
      },
      "downloads": -1,
      "filename": "doc_intel-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "554669bbfa0d22f7237b927aa9f68c16",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 881629,
      "upload_time": "2021-10-21T08:39:46",
      "upload_time_iso_8601": "2021-10-21T08:39:46.327137Z",
      "url": "https://files.pythonhosted.org/packages/55/c2/21705f5f20b1131629547a6b1ceea2ad2a4acdd3b6e8c277d0e027bce2f1/doc_intel-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}