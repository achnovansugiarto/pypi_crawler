{
  "info": {
    "author": "dragoncommits",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-developmentEmailDashboard\r\n\r\nA django email backend that saves the emails to database instead of sending them\r\nand can view the emails in a web-browser\r\n\r\n> :warning: disclaimer: do not use this in production or on any public server.\r\n> this app hardly has any security protocols inplace since \r\n> this is meant to be used in development and values ease of use over security. \r\n> for example there is no password required to view a users inbox or to create a new one\r\n> or for anything else. \r\n\r\n\r\n\r\n## Installation\r\n1. prerequisites\r\n    * must have static files configured\r\n    * optional to get windows notifications install zroya `pip install zroya`\r\n2. run `pip install django-developmentEmailDashboard`\r\n3. Add 'developmentEmailDashboard' to your INSTALLED_APPS setting.\r\n4. Add urls (only add the urls file that you plan on using)\r\n\r\n      \r\n      from django.conf import settings\r\n      # ...\r\n      if settings.DEBUG:\r\n         urlpatterns.append(path('emails/', include('developmentEmailDashboard.urls')))\r\n\r\n5. set the email backend in settings.py\r\n\r\n\r\n    if DEBUG:\r\n        EMAIL_BACKEND = 'developmentEmailDashboard.emailbackend.developmentEmailBackend'\r\n\r\n6. Run the command `manage.py migrate`.\r\n\r\n\r\nnow every time you send an email it will show up on your website at  http://localhost:8000/emails/\r\n\r\n> there is no validation on the emails that get created in the dashboard.\r\n> for example you can create a inbox `test` or `@@@` and it will work this is done for convenience\r\n> if users want this functionality to be changed that can be done\r\n\r\n## configuration\r\n#### get notified when you receive an email\r\nin settings.py set`DEVELOPMENT_EMAIL_DASHBOARD_SEND_EMAIL_NOTIFICATION = True` to get a windows notification \r\nevery time an email is received\r\n> must have zroya installed | `pip install zroya`\r\n\r\n## changelog\r\n### 2.0.0 \r\nadded windows notifications\r\n\r\nfixed bug where text based emails don't display new lines properly\r\n\r\nfixed bug where deleting inbox creates does not exist error\r\n\r\n### 2.0.1\r\nfixed bug where when zroya init fails to send email notification it raises 500 error now ignores it\r\n\r\n## still left to do\r\n* amazing documentation\r\n* 100% testing coverage\r\n* fix icons displaying centered\r\n* render emails as they will be displayed in a email application not just html \r\n* option to show raw email with headers\r\n* add email attachments\r\n* allow browser to send html emails not just view emails with html sent by websites\r\n* management command to delete database tables, clear tables, create tables again\r\n\r\n> Any contribution is welcome just make a pull request, and I will try to add your feature in the next version as soon as possible.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dragoncommits/django-developmentEmailDashboard",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-developmentEmailDashboard",
    "package_url": "https://pypi.org/project/django-developmentEmailDashboard/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-developmentEmailDashboard/",
    "project_urls": {
      "Homepage": "https://github.com/dragoncommits/django-developmentEmailDashboard"
    },
    "release_url": "https://pypi.org/project/django-developmentEmailDashboard/2.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A django email backend that saves the emails to database instead of sending them, and can view the emails in a web-browser",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12496733,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "815948b315e0c759bab4a544c08406d1c3978822aec5f9c9abea91132625ac17",
        "md5": "9ae7367267bb9d29cbdd49a3789a01f3",
        "sha256": "6300a717114b35be61efcbb845198979deefd56804a35e911cb9f47d969ebd3c"
      },
      "downloads": -1,
      "filename": "django-developmentEmailDashboard-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9ae7367267bb9d29cbdd49a3789a01f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 917838,
      "upload_time": "2022-01-06T18:21:38",
      "upload_time_iso_8601": "2022-01-06T18:21:38.189516Z",
      "url": "https://files.pythonhosted.org/packages/81/59/48b315e0c759bab4a544c08406d1c3978822aec5f9c9abea91132625ac17/django-developmentEmailDashboard-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}