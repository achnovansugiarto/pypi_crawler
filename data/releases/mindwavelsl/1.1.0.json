{
  "info": {
    "author": "Gregory Mierzwinski",
    "author_email": "gmierz1@live.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# mindwave-lsl\n\nThis tool is for Mindwave EEG products and it was tested with Mindwave Mobile 2. You can use it to take data from a ThinkGear Connecter service using telnet and output it in a Lab Streaming Layer (LSL) outlet.\n\nIt can connect to Mindwave headsets using [mindwave-python](https://github.com/BarkleyUS/mindwave-python)/[python-mindwave](https://github.com/faturita/python-mindwave) as a connector too. Furthermore, you can set `--output` to a directory or CSV file to output the data there.\n\nThis package is available through pip\n```\npip install mindwavelsl\nmindwavelsl\n```\n\nIf pip doesn't work, run the following to clone the library and install the tool:\n```\ncd ~\ngit clone https://github.com/gmierz/mindwave-lsl\ncd mindwave-lsl\npy setup.py install \n```\n\nThen, to run it you can call it through the command line:\n```\nmindwavelsl\n```\n\nIt has multiple options available including file output, and a mindwave-python connection option:\n```\nusage: mindwavelsl [-h] [--no-lsl] [--output OUTPUT] [--host HOST]\n                   [--port PORT] [--mindwave-python-connect] [--device DEVICE]\n                   [--headset-id HEADSET_ID] [--no-open-serial]\n\nRun this tool to push Mind Wave Mobile 2 data from the ThinkGear Connector\nsocket, to Lab Streaming Layer (LSL).\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --no-lsl              Set this flag to disable LSL outlet.\n  --output OUTPUT       Path to output data to, can include a CSV filename.\n  --host HOST           The host for the ThinkGear Connector.\n  --port PORT           The port for the ThinkGear Connector.\n  --mindwave-python-connect\n                        Set this to connect to Mindwave headset using\n                        mindwave-python (through the module `mindwave`). It\n                        needs to be installed manually, and instructions can\n                        be found here: https://github.com/BarkleyUS/mindwave-\n                        python. A more up-to-date version exists here as well:\n                        https://github.com/faturita/python-mindwave. Must set\n                        --device and --headset-id to use.\n  --device DEVICE       Set this to the device of the headset to record i.e.\n                        /dev/tty.MindWave2.\n  --headset-id HEADSET_ID\n                        Set this to the headset-id of the headset to record.\n  --no-open-serial      If set, then `open_serial` in mindwave.Headset will be\n                        set to False.\n```\n\nYou can also use it as a module:\n```\nfrom mindwavelsl import MindwaveLSL\n\nmwlsl = MindwaveLSL('localhost', 13854)\n\n# Setup the LSL outlet and the ThinkGear connection\nmwlsl.setup()\n\n# Run the service\nmwlsl.run()\n\n```\n\nSee how the `TelnetConnector` and `MindwavePythonWrapper` connectors are implemented to add other connection options.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gmierz/mindwave-lsl",
    "keywords": "mindwave lab streaming layer lsl",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mindwavelsl",
    "package_url": "https://pypi.org/project/mindwavelsl/",
    "platform": "",
    "project_url": "https://pypi.org/project/mindwavelsl/",
    "project_urls": {
      "Homepage": "https://github.com/gmierz/mindwave-lsl"
    },
    "release_url": "https://pypi.org/project/mindwavelsl/1.1.0/",
    "requires_dist": [
      "numpy",
      "pylsl",
      "pyserial"
    ],
    "requires_python": "",
    "summary": "A package to send Mindwave EEG data over Lab Streaming Layer (LSL).",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6725302,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bab7f89349446c0bfefd97b763ef5190c05bc725de8b017f60a54a53c579713",
        "md5": "6fd14d4937138bf6ecc4b664b9886072",
        "sha256": "a1d6a331bcd9cb28debd1b975ac7e90e5dd4346958bcd2b3ddce330cdb24195a"
      },
      "downloads": -1,
      "filename": "mindwavelsl-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6fd14d4937138bf6ecc4b664b9886072",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13121,
      "upload_time": "2020-02-29T18:05:52",
      "upload_time_iso_8601": "2020-02-29T18:05:52.822804Z",
      "url": "https://files.pythonhosted.org/packages/9b/ab/7f89349446c0bfefd97b763ef5190c05bc725de8b017f60a54a53c579713/mindwavelsl-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab1376a62ba4a359a137f06a61fa3b0f307e85208551dac15298d9327bedd83c",
        "md5": "a8683505d511007ec63c852bd42d5d33",
        "sha256": "d71b7ee0b543e9835f05666db7834c0c3ca97f47018ce31543ac342c9314813c"
      },
      "downloads": -1,
      "filename": "mindwavelsl-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a8683505d511007ec63c852bd42d5d33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10488,
      "upload_time": "2020-02-29T18:05:54",
      "upload_time_iso_8601": "2020-02-29T18:05:54.930795Z",
      "url": "https://files.pythonhosted.org/packages/ab/13/76a62ba4a359a137f06a61fa3b0f307e85208551dac15298d9327bedd83c/mindwavelsl-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}