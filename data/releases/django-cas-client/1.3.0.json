{
  "info": {
    "author": "Derek Stegelman, Garrett Pennington",
    "author_email": "derekst@k-state.edu, garrettp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries",
      "Topic :: Utilities"
    ],
    "description": "# django-cas\n\nCAS client for Django.  This library requires Django 1.5 or above, and Python 2.6, 2.7, 3.4\n\nCurrent version: 1.3.0\n\nThis is [K-State&#39;s fork](https://github.com/kstateome/django-cas) of [the original](https://bitbucket.org/cpcc/django-cas/overview) and includes [several additional features](https://github.com/kstateome/django-cas/#additional-features) as well as features merged from\n\n*  [KTHse&#39;s django-cas2](https://github.com/KTHse/django-cas2).\n*  [Edmund Crewe's proxy ticket patch](http://code.google.com/r/edmundcrewe-proxypatch/source/browse/django-cas-proxy.patch).\n\n\n## Install\n\nThis project is registered on PyPi as django-cas-client.  To install::\n\n    pip install django-cas-client==1.3.0\n\n\n### Add to URLs\n\nAdd the login and logout patterns to your main URLS conf.\n\n    # CAS\n    url(r'^accounts/login/$', 'cas.views.login', name='login'),\n    url(r'^accounts/logout/$', 'cas.views.logout', name='logout'),\n\n### Add middleware and settings\n\nSet your CAS server URL\n\n    CAS_SERVER_URL = \"https://signin.somehwere/cas/\"\n\nAdd cas to middleware classes\n\n    'cas.middleware.CASMiddleware',\n\n\n### Add authentication backends\n\n    AUTHENTICATION_BACKENDS = (\n        'django.contrib.auth.backends.ModelBackend',\n        'cas.backends.CASBackend',\n    )\n\n## How to Contribute\n\nFork and branch off of the ``develop`` branch.  Submit Pull requests back to ``kstateome:develop``.\n\n### Run The Tests\n\nAll PRs must pass unit tests.  To run the tests locally:\n\n    pip install -r requirements-dev.txt\n    python run_tests.py\n\n\n## Settings.py for CAS\n\nAdd the following to middleware if you want to use CAS::\n\n    MIDDLEWARE_CLASSES = (\n    'cas.middleware.CASMiddleware',\n    )\n\n\nAdd these to ``settings.py`` to use the CAS Backend::\n\n\n    CAS_SERVER_URL = \"Your Cas Server\"\n    CAS_LOGOUT_COMPLETELY = True\n    CAS_PROVIDE_URL_TO_LOGOUT = True\n\n# Additional Features\n\nThis fork contains additional features not found in the original:\n*  Proxied Hosts\n*  CAS Response Callbacks\n*  CAS Gateway\n*  Proxy Tickets (From Edmund Crewe)\n\n## Proxied Hosts\n\nYou will need to setup middleware to handle the use of proxies.\n\nAdd a setting ``PROXY_DOMAIN`` of the domain you want the client to use.  Then add\n\n    MIDDLEWARE_CLASSES = (\n    'cas.middleware.ProxyMiddleware',\n    )\n\nThis middleware needs to be added before the django ``common`` middleware.\n\n\n## CAS Response Callbacks\n\nTo store data from CAS, create a callback function that accepts the ElementTree object from the\nproxyValidate response. There can be multiple callbacks, and they can live anywhere. Define the\ncallback(s) in ``settings.py``:\n\n    CAS_RESPONSE_CALLBACKS = (\n        'path.to.module.callbackfunction',\n        'anotherpath.to.module.callbackfunction2',\n    )\n\nand create the functions in ``path/to/module.py``:\n\n    def callbackfunction(tree):\n        username = tree[0][0].text\n\n        user, user_created = User.objects.get_or_create(username=username)\n        profile, created = user.get_profile()\n\n        profile.email = tree[0][1].text\n        profile.position = tree[0][2].text\n        profile.save()\n\n\n## CAS Gateway\n\nTo use the CAS Gateway feature, first enable it in settings. Trying to use it without explicitly\nenabling this setting will raise an ImproperlyConfigured:\n\n    CAS_GATEWAY = True\n\nThen, add the ``gateway`` decorator to a view:\n\n    from cas.decorators import gateway\n\n    @gateway()\n    def foo(request):\n        #stuff\n        return render(request, 'foo/bar.html')\n\n\n## Custom Forbidden Page\n\nTo show a custom forbidden page, set ``CAS_CUSTOM_FORBIDDEN`` to a ``path.to.some_view``.  Otherwise,\na generic ``HttpResponseForbidden`` will be returned.\n\n## Require SSL Login\n\nTo force the service url to always target HTTPS, set ``CAS_FORCE_SSL_SERVICE_URL`` to ``True``.\n\n## Automatically Create Users on First Login\n\nBy default, a stub user record will be created on the first successful CAS authentication\nusing the username in the response. If this behavior is not desired set\n``CAS_AUTO_CREATE_USER`` to ``False``.\n\n## Proxy Tickets\n\nThis fork also includes\n[Edmund Crewe's proxy ticket patch](http://code.google.com/r/edmundcrewe-proxypatch/source/browse/django-cas-proxy.patch).\n\nYou can opt out of the time delay sometimes caused by proxy ticket validation by setting:\n\n    CAS_PGT_FETCH_WAIT = False",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/kstateome/django-cas/",
    "keywords": "django cas",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-cas-client",
    "package_url": "https://pypi.org/project/django-cas-client/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-cas-client/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/kstateome/django-cas/"
    },
    "release_url": "https://pypi.org/project/django-cas-client/1.3.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Cas Client",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6355762,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae25624586e7c03a7a79c398a3f07531d57fddeebc512c4d1babce3a021d4dd1",
        "md5": "a0e74a8cc446148b907d57bb824d9241",
        "sha256": "48add68bf5c7f94cd0c4a43dd8a954696438c7bc707a1f5d84e8c5b397478bc1"
      },
      "downloads": -1,
      "filename": "django_cas_client-1.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0e74a8cc446148b907d57bb824d9241",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 18357,
      "upload_time": "2017-05-01T16:06:26",
      "upload_time_iso_8601": "2017-05-01T16:06:26.395323Z",
      "url": "https://files.pythonhosted.org/packages/ae/25/624586e7c03a7a79c398a3f07531d57fddeebc512c4d1babce3a021d4dd1/django_cas_client-1.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b0faeda1eb7d0cbf31670d5f4282428b642996a9de7a6882bfd6dc03abab1ab",
        "md5": "f397588758b62c803658544b645212f5",
        "sha256": "890536d712d3b3425e2c09e8fe07344fbcfb6e0832ae512b1a37224333d07d5f"
      },
      "downloads": -1,
      "filename": "django-cas-client-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f397588758b62c803658544b645212f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12551,
      "upload_time": "2017-05-01T16:06:24",
      "upload_time_iso_8601": "2017-05-01T16:06:24.504942Z",
      "url": "https://files.pythonhosted.org/packages/7b/0f/aeda1eb7d0cbf31670d5f4282428b642996a9de7a6882bfd6dc03abab1ab/django-cas-client-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}