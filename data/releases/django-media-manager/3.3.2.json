{
  "info": {
    "author": "Patrick Kranzlmueller",
    "author_email": "patrick@vonautomatisch.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta"
    ],
    "description": "# Changelog\r\n\r\n### 02-07-2013\r\n*\tRefactor and resolved an issue on window.opener event.\r\n*\tRefactor FB_Redactor plugin.\r\n\r\n### 28-06-2013\r\n\r\n*\tSupport for django-suit\r\n*\tSupport for django-suit-ckeditor\r\n*\tSupport for django-suit-redactor\r\n*\tSupport for custom user model\r\n*\tMandatory django version higher 1.5\r\n\r\n## Basic Installation\r\n\r\n\tpip install django-media-manager\r\n\tor\r\n\tpip install https://github.com/miguelramos/django-media-manager/archive/master.zip\r\n\r\n*\tAdd filebrowser to INSTALLED_APPS.\r\n*\tAdd the following line _before_ the admin URLS:\r\n*\t\t(r'^admin/filebrowser/', include('filebrowser.urls'))\r\n*\tCollect static files\r\n*\tAdd __uploads/__ folder to media folder or customize this setting\r\n\r\n## Suit support\r\nThe application have support for [django-suit](https://github.com/darklow/django-suit) template. To use it add on your settings files the following config:\r\n\r\n<code>FILEBROWSER_SUIT_TEMPLATE = True</code> \r\n\r\nFilebrowser will now use templates for django suit.\r\n\r\n## Suit CKEditor/Redactor\r\nTo use filebrowser on [django-suit-ckeditor](https://github.com/darklow/django-suit-ckeditor) or [django-suit-redactor](https://github.com/darklow/django-suit-redactor) please follow the example bellow:\r\n\r\n\t#models.py\r\n\t\r\n\tfrom django.db import models\r\n\tfrom filebrowser.fields import FileBrowseField\r\n\t\r\n\tclass MediaPublication(models.Model):\r\n    \tckeditor = models.TextField(help_text='Editor CKEditor')\r\n    \tredactor = models.TextField(help_text='Editor Redactor')\r\n    \timage = FileBrowseField(\"Image\", max_length=200, blank=True, null=True)\r\n    \timage_initialdir = FileBrowseField(\"Image (Initial Directory)\", max_length=200, directory=\"images/\", blank=True, null=True)\r\n    \timage_extensions = FileBrowseField(\"Image (Extensions)\", max_length=200, extensions=['.jpg'],\r\n                                       help_text=\"Only jpg-Images allowed.\", blank=True, null=True)\r\n    \timage_format = FileBrowseField(\"Image (Format)\", max_length=200, format='Image', blank=True, null=True)\r\n    \tpdf = FileBrowseField(\"PDF\", max_length=200, directory=\"documents/\", extensions=['.pdf'], format='Document',\r\n                          blank=True, null=True)\r\n\r\n    \tclass Meta:\r\n        \tordering = ['image',]\r\n        \tverbose_name = 'publication'\r\n        \tverbose_name_plural = 'publications'\r\n\r\nTo use on admin you need to do some litle tweeks:\r\n\r\n\t#admin.py\r\n\tfrom django.contrib import admin\r\n\tfrom django.forms import ModelForm, Media\r\n\tfrom suit_ckeditor.widgets import CKEditorWidget\r\n\tfrom suit_redactor.widgets import RedactorWidget\r\n\r\n\tfrom .models import MediaPublication\r\n\r\n\r\n\tclass Editor(ModelForm):\r\n    \tclass Meta:\r\n        \twidgets = {\r\n            \t'ckeditor': CKEditorWidget(editor_options={'startupFocus': True}),\r\n            \t'redactor': RedactorWidget(editor_options={\r\n                \t'lang': 'en',\r\n                \t'plugins': ['filebrowser']\r\n            \t}),\r\n        \t}\r\n\r\n    \tclass Media:\r\n        \tjs = ('filebrowser/js/FB_CKEditor.js', 'filebrowser/js/FB_Redactor.js')\r\n        \tcss = {\r\n            \t'all': ('filebrowser/css/suit-filebrowser.css',)\r\n        \t}\r\n        \t\r\n    class AdminPublication(admin.ModelAdmin):\r\n    \tform = Editor\r\n\r\n    \tfieldsets = (\r\n        \t(None, {\r\n            \t'classes': ('suit-tab suit-tab-media',),\r\n            \t'fields': ['image', 'image_initialdir', 'image_extensions', 'image_format', 'pdf'],\r\n        \t}),\r\n        \t('CKEditor', {\r\n            \t'classes': ('full-width',),\r\n            \t'fields': ('ckeditor',)\r\n        \t}),\r\n        \t('Redactor', {\r\n            \t'classes': ('full-width',),\r\n            \t'fields': ('redactor',)\r\n        \t}),\r\n    \t)\r\n\r\n    \tlist_display = ('thumbnail', 'image_extensions', 'pdf')\r\n    \tsuit_form_tabs = (('media', 'Media'),)\r\n\r\n    \tdef thumbnail(self, obj):\r\n        \tif obj.image:\r\n            \treturn '<img src=\"%s\" />' % obj.image.url_thumbnail\r\n        \telse:\r\n            \treturn \"\"\r\n    \tthumbnail.allow_tags = True\r\n\r\n\r\n\tadmin.site.register(MediaPublication, AdminPublication)\r\n   \r\nThe most important things are on ModelForm (Media and Widgets). To use browser on CKEditor and have the button to navigate on filebrowser you only need to add the js file to Media\r\n\r\nFor Redactor you will have to add the plugin option on the widget (plugin name is mandatory - _filebrowser_ ) and add the css and js file to media.\r\n\r\nThat's it you are now ready to send all kind of files to ckeditor or redactor.\r\n\r\n### Screenshots\r\n\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/filebrowser.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/filebrowser-versions.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-browser.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-bt-browser.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-image.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-pop-up.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-import.jpeg)\r\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-files-select.jpeg)\r\n\r\n#### TODO\r\n\r\nPlease this is a work in progress. If you have ideas or want to make it better please fel free to pull requests.\r\n\r\n*\tBetter uploader, now using uploadify (some flash elements)\r\n*\tAdd more options on thumbs sizes\r\n\r\n### More Info\r\n\r\nYou can find the original documentation of django-filebrowser and all settings in [Google Code repo](https://code.google.com/p/django-filebrowser/w/list).",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/miguelramos/django-media-manager",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/miguelramos/django-media-manager",
    "keywords": "django, filebrowser, media, manager, suit",
    "license": "Copyright (c) 2010, Patrick Kranzlmueller (vonautomatisch werkstaetten),\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification,\r\nare permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice,\r\nthis list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\nthis list of conditions and the following disclaimer in the documentation and/or\r\nother materials provided with the distribution.\r\n3. Neither the name of FileBrowser nor the names of its contributors may be used\r\nto endorse or promote products derived from this software without specific prior\r\nwritten permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\r\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\r\nTHE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\r\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "maintainer": "Miguel Ramos",
    "maintainer_email": "miguel.marques.ramos@gmail.com",
    "name": "django-media-manager",
    "package_url": "https://pypi.org/project/django-media-manager/",
    "platform": "Independent",
    "project_url": "https://pypi.org/project/django-media-manager/",
    "project_urls": {
      "Download": "https://github.com/miguelramos/django-media-manager",
      "Homepage": "https://github.com/miguelramos/django-media-manager"
    },
    "release_url": "https://pypi.org/project/django-media-manager/3.3.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Media-Management with the Django Admin-Interface.",
    "version": "3.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2695414,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c6a5d57ee7a504a62a019c9b072cf4484c883d2b80fac5e185f9a353b0548f5",
        "md5": "9e5539a7c667388193b455d2fbaca469",
        "sha256": "3377f4392060e7103f9d60ef1673844d39440208e23aa229ce788e404ca072e8"
      },
      "downloads": -1,
      "filename": "django-media-manager-3.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9e5539a7c667388193b455d2fbaca469",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 730599,
      "upload_time": "2016-10-06T13:42:24",
      "upload_time_iso_8601": "2016-10-06T13:42:24.603573Z",
      "url": "https://files.pythonhosted.org/packages/0c/6a/5d57ee7a504a62a019c9b072cf4484c883d2b80fac5e185f9a353b0548f5/django-media-manager-3.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}