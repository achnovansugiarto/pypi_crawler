{
  "info": {
    "author": "biao.xu",
    "author_email": "biao.xu@baodanyun-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# privacy-policy\n\n## 使用说明\n\n### 使用`doubao_crypt`\n\n#### 安装\n\n源码安装\n\n```shell\n# python setup install\npython3 setup install\n```\n\npip安装\n\n```shell\npip3 install doubao-crypt\n```\n\n#### 通过cid(gid,uid)等直接加密(不需要密钥)\n\n调用前先初始化cache\n\n```python\nfrom doubao_crypt import init_cache\n\n# 使用本地缓存（字典cache）\ninit_cache('http://test.api2.17doubao.com', cache_type='LocalCache')\n# 使用 redis来缓存\n# init_cache('http://test.api2.17doubao.com', cache_type='RedisCache', cache_uri='redis://localhost/0')\n```\n\n方法init_cache使用redis来缓存时的可选参数：\n\n* cache_prefix: 前缀，默认值'doubao-keys-'。\n* cache_instance: 缓存实例（redis.Redis）。cache_instance和cache_uri传入任意一个即可\n* cache_uri: 缓存uri，默认`redis://localhost/0`。cache_instance和cache_uri传入任意一个即可\n* pre_cache: 是否预载数据，默认False，为True时会预先加载数据到缓存\n* clean: 是否清空之前的缓存数据，默认True\n\n> 使用`init_cache`方法初始化一次即可\n\n使用完整示例如下：\n\n```python\nfrom doubao_crypt import init_cache, doubao_ecies_encrypt, doubao_privacy_policy, safe_doubao_ecies_encrypt\nimport redis\n\n\npool = redis.ConnectionPool(host='localhost', port=6379, db=0)\nr = redis.Redis(connection_pool=pool)\ninit_cache('http://test.api2.17doubao.com', cache_type='RedisCache', cache_instance=r)\n\ndata = [\n    {\n        \"birthday\": \"1973-03-02\",\n        \"idCardType\": 111,\n        \"idCardNo\": \"110101********5330\",\n        \"sex\": 1,\n        \"mobile\": \"13123456789\",\n        \"name\": \"张三\",\n        \"age\": 29\n    },\n    {\n        \"mobile\": \"13123456788\",\n        \"name\": \"李四\",\n        \"idCardType\": 111,\n        \"idCardNo\": \"513436201801012266\"\n    }\n]\n\n# 直接调用方法\ncrypted_data = doubao_ecies_encrypt(data, fields=['mobile', 'idCardNo'], cid=583, gid=583, agent_id=3692)\n\n# 安全调用加密方法（不抛出异常，错误在返回值中）\nflag, msg, crypted_data = safe_doubao_ecies_encrypt(data, fields=['mobile', 'idCardNo'], cid=583, gid=583, agent_id=3692)\n\n\n# 使用装饰器\n@doubao_privacy_policy(fields=['mobile', 'idCardNo'], cid=583, gid=583, agent_id=3692)\ndef test_doubao_privacy_policy(users):\n    pass\n\ntest_doubao_privacy_policy(data)\n```\n\n> 关于多层结构的内数据的加密，`fields`中字段使用`.`来区分层级，如'data.info.mobile'\n\n#### 通过密钥加解密\n\ndemo\n\n```python\necurity_service = SecurityService(\n    private_key='4ddc101e5fc4e2820c7c5275050fc3dc7f8ca344afb41a3bb804afd3b5b1b8d6',\n    public_key='5a66be441a4dc16b12effed07d6e6e3ee2e8753e0dcaac07be71190f19f43b277e10c174bccbb50286d6a65e11b25d957ef8bed80c192e8a8178a3715c56cf7a')\n\ntext_list = [\n    '123456789987654321',\n    '1234567****7654321',\n    '1234567XXXX7654321',\n    '1234567xxxx7654321',\n    '123',\n]\nfor text in text_list:\n    cipher_text = security_service.ecies_encrypt(text)  # 加密\n    plain_text = security_service.ecies_decrypt(cipher_text)  #  解密\n    print(f'======[ {text} ]=======')\n    print('cipher_text', cipher_text)\n    print('plain_text', plain_text)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doubao-crypt",
    "package_url": "https://pypi.org/project/doubao-crypt/",
    "platform": "",
    "project_url": "https://pypi.org/project/doubao-crypt/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/doubao-crypt/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5.3",
    "summary": "doubao crypt python library",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6826800,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4877136ce6639ca00ba843c58e36eca5cb7c5ea7a23b8347cfb4b29029802b55",
        "md5": "55bdb7b19516f522239af3c6ea787447",
        "sha256": "383ef05b0b0bf0ce4dc670e8615dee470b28fadad58f6258ce22ccbc464d88c1"
      },
      "downloads": -1,
      "filename": "doubao_crypt-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "55bdb7b19516f522239af3c6ea787447",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.3",
      "size": 5461,
      "upload_time": "2020-03-17T07:51:57",
      "upload_time_iso_8601": "2020-03-17T07:51:57.466609Z",
      "url": "https://files.pythonhosted.org/packages/48/77/136ce6639ca00ba843c58e36eca5cb7c5ea7a23b8347cfb4b29029802b55/doubao_crypt-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}