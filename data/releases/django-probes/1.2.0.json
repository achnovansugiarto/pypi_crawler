{
  "info": {
    "author": "VSHN AG",
    "author_email": "tech@vshn.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Django-probes |latest-version|\n==============================\n\n|build-status| |python-support| |license|\n\nProvides a Django management command to check whether the primary database\nis ready to accept connections.\n\nRun this command in a Kubernetes or OpenShift `Init Container`_ to make\nyour Django application wait until the database is available (e.g. to run\ndatabase migrations).\n\nWhy Should I Use This App?\n--------------------------\n\n``wait_for_database`` is a *single* command for *all* database engines\nDjango supports. It automatically checks the database you have configured\nin your Django project settings. No need to code a specific wait command\nfor Postgres, MariaDB, Oracle, etc., no need to pull a database engine\nspecific container just for running the database readiness check.\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/django-probes.svg\n   :alt: Latest version on PyPI\n   :target: https://pypi.org/project/django-probes\n.. |build-status| image:: https://img.shields.io/travis/vshn/django-probes/master.svg\n   :alt: Build status\n   :target: https://travis-ci.org/vshn/django-probes\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/django-probes.svg\n   :alt: Python versions\n   :target: https://pypi.org/project/django-probes\n.. |license| image:: https://img.shields.io/pypi/l/django-probes.svg\n   :alt: Software license\n   :target: https://github.com/vshn/django-probes/blob/master/LICENSE\n\n.. _Init Container: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n\nInstallation\n============\n\nThe easiest way to install django-probes is with pip\n\n.. code:: console\n\n    $ pip install django-probes\n\nBasic Usage\n===========\n\n1. Add django-probes to your Django application:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_probes',\n    ]\n\n2. Add an `Init Container`_ to your Kubernetes/OpenShift deployment\nconfiguration, which calls the ``wait_for_database`` management command:\n\n.. code:: yaml\n\n    - kind: Deployment\n      apiVersion: apps/v1\n      spec:\n        template:\n          spec:\n            initContainers:\n            - name: check-db-ready\n              image: my-django-app:latest\n              envFrom:\n              - secretRef:\n                  name: django\n              command: ['python', 'manage.py', 'wait_for_database']\n\nCommand Line Options\n--------------------\n\nThe management command comes with sane defaults, which you can override\nif needed:\n\n:--timeout, -t:\n    how long to wait for the database before timing out (seconds), default: 180\n:--stable, -s:\n    how long to observe whether connection is stable (seconds), default: 5\n:--wait-when-down, -d:\n    delay between checks when database is down (seconds), default: 2\n:--wait-when-alive, -a:\n    delay between checks when database is up (seconds), default: 1\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vshn/django-probes",
    "keywords": "django,database,probes,docker,kubernetes",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-probes",
    "package_url": "https://pypi.org/project/django-probes/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-probes/",
    "project_urls": {
      "Homepage": "https://github.com/vshn/django-probes"
    },
    "release_url": "https://pypi.org/project/django-probes/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Make Django wait until database is ready. Probes for Docker and Kubernetes.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14733049,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "299ab3ed2971a8ca59b6813cf7c10dd0bf7719cb6ef0edd29ea862849653aa69",
        "md5": "70a1b934e0372f1c00ca0f52780a0120",
        "sha256": "0c0ac794877c53a2268d745c7dc97b83df66edb99fbd37b43ec288f3ba2b913f"
      },
      "downloads": -1,
      "filename": "django_probes-1.2.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "70a1b934e0372f1c00ca0f52780a0120",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 5508,
      "upload_time": "2019-03-06T10:00:23",
      "upload_time_iso_8601": "2019-03-06T10:00:23.800910Z",
      "url": "https://files.pythonhosted.org/packages/29/9a/b3ed2971a8ca59b6813cf7c10dd0bf7719cb6ef0edd29ea862849653aa69/django_probes-1.2.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fac2f41118c770f66dda3c388ecf63db28cf4e5b144197c4d79c4df3a90df958",
        "md5": "a33ce771179f568cbe7e694e67429df0",
        "sha256": "8e16546e4a04eab746beeb855be0b326d5b43da8b9d702e72cc5b92f6005b572"
      },
      "downloads": -1,
      "filename": "django_probes-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a33ce771179f568cbe7e694e67429df0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4782,
      "upload_time": "2019-03-06T10:00:25",
      "upload_time_iso_8601": "2019-03-06T10:00:25.060365Z",
      "url": "https://files.pythonhosted.org/packages/fa/c2/f41118c770f66dda3c388ecf63db28cf4e5b144197c4d79c4df3a90df958/django_probes-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}