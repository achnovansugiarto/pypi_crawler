{
  "info": {
    "author": "LORA Tech",
    "author_email": "asklora@loratechai.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# LORA Technologies' Bot Client\nClient for LORA Tech's bot services.\n\n**Example**  \nA working example script that you can try can be found at https://github.com/asklora/Droid-Client/blob/production/example_usage.py\n\n\n## Usage:  \n### Bot Creation\n```\nClient.create_bot(args, **kwargs)\n\nArgs:\n    ticker (str): cRIC code for which stock to create a bot for\n    spot_date (str): Date for bot creations.\n    investment_amount (float): Amount of cash the bot can use.\n    bot_id (str): The type of bot to use (e.g. CLASSIC_classic_025)\n\nKwargs:\n    margin (int): Amount of margin the bot is allowed to use. Defaults to 1.\n    price (float): Price of the stock (any currency). Defaults to None (current price).\n    fractionals (bool): Whether the bot should use fractional shares. Defaults to False.\n\nReturns:\n    dict: Parsed bot service response.\n        {\n            barrier (float),              # \n            bot_id (str),                 # This bot's bot type\n            classic_vol (float),          # \n            created (str),                # Date of bot creation\n            delta (float),                # \n            entry_price (float),          # Price of stock when this bot was created\n            expiry (str),                 # Date of expiry\n            fractionals (bool),           # Whether this bot is allowed to use fractional shares\n            margin (int),                 # Amount of margin this bot is allowed to use\n            max_loss_amount (float),      # \n            max_loss_pct (float),         # \n            max_loss_price (float),       # \n            option_price (float),         # \n            q (float),                    # \n            r (float),                    # \n            share_num (float),            # Number of shares bought\n            side (str),                   # \n            spot_date (str),              # [For internal use]\n            status (str),                 # Status of this bot (i.e. active)\n            strike (float),               # \n            strike_2 (float),             # \n            t (int),                      # \n            target_profit_amount (float), # \n            target_profit_pct (float),    # \n            target_profit_price (float),  # \n            ticker (str),                 # RIC code\n            total_bot_share_num (int),    # Number of shares held by this bot\n            v1 (float),                   # \n            v2 (float),                   # \n            vol (float),                  # \n        }\n```\n\n### Hedging using an existing bot\n```\nClient.hedge(*args, **kwargs)\n\nArgs:\n    bot_id (str): Type of bot.\n    ticker (str): RIC code.\n    current_price (float): Current price (any currency).\n    entry_price (float): Price when the bot was created.\n    last_share_num (float): Number of shares currently held by the bot.\n    last_hedge_delta (float): Number of shares last sold/bought by the bot.\n    investment_amount (float): Total cash value the bot is allowed to manage.\n    bot_cash_balance (float): Remaining cash the bot has.\n    stop_loss_price (float): Stop loss level of the bot.\n    take_profit_price (float): Take profit level of the bot.\n    expiry (str): Date when the bot expires.\n\nKwargs:\n    strike (Optional[float]): _description_. Defaults to None.\n    strike_2 (Optional[float]): _description_. Defaults to None.\n    margin (Optional[int]): Amount of margin the bot can use. Defaults to 1.\n    fractionals (Optional[bool]): Whether this bot is allowed to use fractional shares. Defaults to False.\n    option_price (Optional[float]): _description_. Defaults to None.\n    barrier (Optional[float]): _description_. Defaults to None.\n    current_low_price (Optional[float]): _description_. Defaults to None.\n    current_high_price (Optional[float]): _description_. Defaults to None.\n    ask_price (Optional[float]): _description_. Defaults to None.\n    bid_price (Optional[float]): _description_. Defaults to None.\n    trading_day (Optional[str]): _description_. Defaults to datetime.strftime(datetime.now().date(), \"%Y-%m-%d  \").\n\nReturns:\n    dict: Parsed bot service response\n        {\n            barrier (float),           # Take profit\n            current_price (float),     # Current price of stock\n            delta (float),             # \n            entry_price (float),       # \n            last_hedge_delta (float),  # \n            option_price (float),      # \n            q (float),                 # \n            r (float),                 # \n            share_change (float),      # \n            share_num (float),         # \n            side (str),                # \n            status (str),              # \n            strike (float),            # Target price\n            strike_2 (float),          # For ucdc we have two strikes\n            t (int),                   # \n            total_bot_share_num (int), # \n            v1 (float),                # \n            v2 (float),                # \n        }\n```\n\n### Stopping a bot\n```\nClient.stop(*args, **kwargs)\n\nArgs:\n    bot_id (str): Type of bot.\n    ticker (str): RIC code.\n    current_price (float): Current price (any currency).\n    entry_price (float): Price when the bot was created.\n    last_share_num (float): Number of shares currently held by the bot.\n    last_hedge_delta (float): Number of shares last sold/bought by the bot.\n    investment_amount (float): Total cash value the bot is allowed to manage.\n    bot_cash_balance (float): Remaining cash the bot has.\n    stop_loss_price (float): Stop loss level of the bot.\n    take_profit_price (float): Take profit level of the bot.\n    expiry (str): Date when the bot expires.\n\nKwargs:\n    strike (Optional[float]): _description_. Defaults to None.\n    strike_2 (Optional[float]): _description_. Defaults to None.\n    margin (Optional[int]): Amount of margin the bot can use. Defaults to 1.\n    fractionals (Optional[bool]): Whether this bot is allowed to use fractional shares. Defaults to False.\n    option_price (Optional[float]): _description_. Defaults to None.\n    barrier (Optional[float]): _description_. Defaults to None.\n    current_low_price (Optional[float]): _description_. Defaults to None.\n    current_high_price (Optional[float]): _description_. Defaults to None.\n    ask_price (Optional[float]): _description_. Defaults to None.\n    bid_price (Optional[float]): _description_. Defaults to None.\n    trading_day (Optional[str]): _description_. Defaults to datetime.strftime(datetime.now().date(), \"%Y-%m-%d  \").\n\nReturns:\n    dict: Parsed bot service response\n        {\n            barrier (float),           # Take profit\n            current_price (float),     # Current price of stock\n            delta (float),             # \n            entry_price (float),       # \n            last_hedge_delta (float),  # \n            option_price (float),      # \n            q (float),                 # \n            r (float),                 # \n            share_change (float),      # \n            share_num (float),         # \n            side (str),                # \n            status (str),              # \n            strike (float),            # Target price\n            strike_2 (float),          # For ucdc we have two strikes\n            t (int),                   # \n            total_bot_share_num (int), # \n            v1 (float),                # \n            v2 (float),                # \n        }\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://asklora.ai",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DroidRpc",
    "package_url": "https://pypi.org/project/DroidRpc/",
    "platform": null,
    "project_url": "https://pypi.org/project/DroidRpc/",
    "project_urls": {
      "Homepage": "https://asklora.ai"
    },
    "release_url": "https://pypi.org/project/DroidRpc/1.4.3/",
    "requires_dist": [
      "grpcio (==1.43.0)",
      "grpcio-tools (==1.43.0)",
      "numpy (==1.22.4)",
      "protobuf (==3.19.4)",
      "setuptools (==58.0.4)",
      "six (==1.16.0)"
    ],
    "requires_python": "",
    "summary": "Python client for connecting to LORA Technologies' bot services.",
    "version": "1.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16708761,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb67afff0b27dd5a2e4e72e088d562829e453758b272608b14624b111ca6a94d",
        "md5": "dbeabff6939c26d5cc8006cac3d01516",
        "sha256": "45b881d58ae33d63933ba9c754b3a82c7650ecf5df42d221314c4ebd0ed3ad19"
      },
      "downloads": -1,
      "filename": "DroidRpc-1.4.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dbeabff6939c26d5cc8006cac3d01516",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19993,
      "upload_time": "2022-11-30T18:31:10",
      "upload_time_iso_8601": "2022-11-30T18:31:10.907149Z",
      "url": "https://files.pythonhosted.org/packages/bb/67/afff0b27dd5a2e4e72e088d562829e453758b272608b14624b111ca6a94d/DroidRpc-1.4.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1e246d5f677169e6f9b4f120b3481ad0530a545b2c242c088ec509e7cd24e95",
        "md5": "f078a5501fb402364573e8dfe26a672f",
        "sha256": "243226dce2ab722518aa257c3452427515dda96295860b42a9f4ae10a58c05a3"
      },
      "downloads": -1,
      "filename": "DroidRpc-1.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f078a5501fb402364573e8dfe26a672f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20205,
      "upload_time": "2022-11-30T18:31:12",
      "upload_time_iso_8601": "2022-11-30T18:31:12.862670Z",
      "url": "https://files.pythonhosted.org/packages/a1/e2/46d5f677169e6f9b4f120b3481ad0530a545b2c242c088ec509e7cd24e95/DroidRpc-1.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}