{
  "info": {
    "author": "Robin Aaberg",
    "author_email": "robin.garen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## goto \nv1.0-alpha\n\nGoto is a magic tool that takes you were you want to be, now. \n\n\nProjects have their own folders, important files, links to good articles or key websites. \nThe problem is that all these are spread out on different locations.\nBy adding shortcuts to goto, so called magic words, you can jump to them.\nThe shortcuts are assciated with a project name. And you can switch the project\nany time.\n\nIn example:\n\n```\n    goto visualstudio  -->  Opens the solutionfile for the vs solutions file of the current project\n    goto jira          -->  Opens a jira board for the current project\n    goto bitbucket     -->  bitbucket repo for the current project\n```\n \n### Setup \n\n#### Mac OS-X / Linux\n```\ngit clone https://github.com/technocake/goto\ncd goto \n./install.sh\n```\nAfter install, close and reopen your terminal.\n\n#### Windows (using gitbash)\nDo the same as above, but **open git bash as Administrator**\n\n\n### Usage\n\n```\nThe basics\n    goto <magicword>                        Go to shortcut\n    goto add    <magicword> <url or path>   Add shortcut      \n    goto update <magicword> <url or path>   Update shortcut\n    goto rm     <magicword>                 Remove shortcut\n    goto show   <magicword>                 Show url of shortcut\n    goto list                               List all shortcuts  \n    goto list -v                            With the urls printed\n\nWorking with folders and files\n    goto <magicword>              Goto will cd to a folder shortcut by default. \n    goto cd   <magicword>         cd in terminal\n    goto open <magicword>         open in finder/file explorer\n    goto -o   <magicword>                                    \n\nIf you add a shortcut to a folder, and name it \"code\"...\n    goto add code <path to folder with code>\n    \n...this command will open folder with Sublime Text\n    goto subl                                \n```\n\n\n\n\n#### How does Goto know which project is the active one?\n\nYou tell goto with this command:  `project <project-name>`\n\nExamples: project django-blog  | project website  |  project goto\n\n\n#### How does Goto know which projects exists?\n\nYou tell Goto with the command:\n\n     `project add <project-name>`\n\n \n#### How does Goto know which shortcuts there are in the project?\n\nDefine them once, and use them a thousand times. By this command:\n\n     `goto add <magic-word> <URI>`\n\nA magic-word is the name of your shortcut. \n\nExamples:\n\n`goto add github https://github.com/technocake/goto`\n`goto add music ~/the/sound/of/music`  \n`goto add jira http://jira.com/project/X`\n\nFirst one adds a url to a repo on github relevant to the project.\nThe second one adds a folder path.\n\nWhen you activate a project, Goto remembers which project you are thinking about right now. \n\nThen it makes sense to call the shortcut visualstudio, because it implicit means the visual studio project associated with this project.\n\nExamples:\n\n    goto add jira http://jira.com/project/X\n\n\n\n## Uninstall (OS-X)\n\n```\nrm -rf /usr/local/opt/goto\n\n# remove symbolic links\nrm /usr/local/bin/goto\nrm /usr/local/bin/project\nrm /usr/local/bin/start_goto\nrm /usr/local/bin/_gotoutils\n\n#lastly, remove the line `source start_goto` from .bash_profile\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gotogoto.ninja",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magicgoto",
    "package_url": "https://pypi.org/project/magicgoto/",
    "platform": "",
    "project_url": "https://pypi.org/project/magicgoto/",
    "project_urls": {
      "Homepage": "https://gotogoto.ninja"
    },
    "release_url": "https://pypi.org/project/magicgoto/1.3.16/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Magic goto - goto where you need to be, right now.",
    "version": "1.3.16",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12005420,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6f4145dd31fc53bc3a1bd85ac78d4cc6bca5dcde03a4987cef0423e95f4dd17",
        "md5": "82fbe104de28f3c375e3bd7531eda8ee",
        "sha256": "bd4dc8bd37dcedaed87f46dc437341e8abd0e4f319162981438324c8dc097fe3"
      },
      "downloads": -1,
      "filename": "magicgoto-1.3.16.tar.gz",
      "has_sig": false,
      "md5_digest": "82fbe104de28f3c375e3bd7531eda8ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10684,
      "upload_time": "2019-05-19T17:19:42",
      "upload_time_iso_8601": "2019-05-19T17:19:42.152011Z",
      "url": "https://files.pythonhosted.org/packages/c6/f4/145dd31fc53bc3a1bd85ac78d4cc6bca5dcde03a4987cef0423e95f4dd17/magicgoto-1.3.16.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}