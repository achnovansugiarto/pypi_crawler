{
  "info": {
    "author": "Petr Razumov",
    "author_email": "petr.razumov@tidalmigrations.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Machine Stats for Unix-like systems\n\n[![PyPI](https://img.shields.io/pypi/v/machine-stats)](https://pypi.org/project/machine-stats/)\n\nA simple and effective way to gather machine statistics (RAM, Storage, CPU)\nfrom a server environment as a first layer of a [Tidal Migrations discovery\nprocess](https://guides.tidalmg.com).\n\nMachine Stats for Linux/Unix leverages [Ansible](https://www.ansible.com/) to\ngather facts in a cross-platform way.\n\n## Interactive tutorial\n\nGet familiar with Machine Stats, Tidal Tools and Tidal Migrations Platform!\n\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Ftidalmigrations%2Fmachine-stats-workshop&cloudshell_image=gcr.io%2Ftidal-1529434400027%2Fmachine-stats-workshop&cloudshell_tutorial=machine-stats.md&shellonly=true)\n\n## Installation\n\nInstall locally in a Python 3 environment:\n\n```\npython3 -m pip install machine-stats\n```\n\n_Need to install in an environment without internet access?_ [Checkout how to do that below](#offline-installation).\n\n<details>\n    <summary>Distribution-specific installation instructions</summary>\n\n### Ubuntu 16.04\n\n1. Make sure `pip` is installed and is one of the latest version available:\n    ```\n    sudo apt update && \\\n      sudo apt install -y python3-pip && \\\n      python3 -m pip install --user pip==18.1 && \\\n      python3 -m pip install --upgrade --user pip\n    ```\n    **Note:** Direct upgrade to the latest available `pip` version results with an unusable `pip` installation. That's why we perform the upgrade through the intermediate version (`18.1`).\n2. Install `machine-stats`:\n    ```\n    python3 -m pip install machine-stats\n    ```\n\n### Debian 9/Ubuntu 18.04\n\n1. Make sure `pip` is installed and is one of the latest version:\n    ```\n    sudo apt update && \\\n      sudo apt install -y python3-pip && \\\n      python3 -m pip install --upgrade pip\n    ```\n2. Install `machine-stats`:\n    ```\n    python3 -m pip install machine-stats\n    ```\n\n### Debian 10/Debian 11/Ubuntu 20.04/Ubuntu 21.04\n\n1. Make sure `pip` is installed:\n    ```\n    sudo apt update && \\\n      sudo apt install -y python3-pip\n    ```\n2. Install `machine-stats`:\n    ```\n    python3 -m pip install machine-stats\n    ```\n\n### CentOS 7/CentOS 8/CentOS Stream/Red Hat Enterprise Linux 7/Red Hat Enterprise Linux 8/Rocky Linux 8\n\n1. Install Python 3:\n    ```\n    sudo yum install -y python3\n    ```\n2. Upgrade `pip` to the latest available version:\n    ```\n    python3 -m pip install --upgrade --user pip\n    ```\n3. Install `machine-stats`:\n    ```\n    python3 -m pip install machine-stats\n    ```\n\n### SUSE Linux Enterprise Server 12\n\n1. Install Python 3.6:\n    ```\n    sudo zypper install -y python36-base\n    ```\n2. Install `machine-stats`:\n    ```\n    pip install machine-stats\n    ```\n\n### SUSE Linux Enterprise Server 15\n\n1. Install `pip`:\n    ```\n    sudo zypper install -y python3-pip\n    ```\n2. Install `machine-stats`:\n    ```\n    pip install machine-stats\n    ```  \n</details>\n\n## Data captured\n\nFor Linux/Unix based systems, by default, the following metrics are captured\nfrom the resources and sent and stored in Tidal Migrations:\n\n- Host Name\n- FQDN\n- IP Addresses\n- RAM Allocated (GB)\n- RAM Used (GB)\n- Storage Allocated (GB)\n- Storage Used (GB)\n- CPU Count\n- Operating System\n- Operating System Version\n- CPU name\n\nYou also can optionally capture metrics about processes running on the server:\n\n- User\n- Process Name\n- Process Path\n- Memory Used (MB)\n- Max Memory Used (MB)\n- Total Alive Time\n\nTo enable capturing process metrics set the `gather_process_stats` key in `ansible.cfg` to `true`\n```\ngather_process_stats = true\n```\n## Minimal example\n\n1. Create a `hosts` file in the current directory. See [below](#Generating-a-hosts-file-from-Tidal-Migrations) on a couple ways\n   you can easily create this.\n\n2. Add connection strings in the form of `ssh-user@ip-address` or\n   `ssh-user@domain` to the `hosts` file one per line If the `ssh-user@` part\n   is omitted, then the current user name is used.\n3. If you need to use a custom SSH identity file for some particular host,\n   provide it as the following:\n\n   ```\n   my-user@example.com ansible_ssh_private_key_file=path/to/key-file.pem\n   ```\n\n4. Make sure that Python 2.6+ is installed on the machines from `hosts` file.\n5. If `python` executable was installed into non-default location (**not** in\n   `/usr/bin/python`), add the `ansible_python_interpreter` parameter to the\n   `hosts` file after the host IP/domain, for example:\n\n   ```\n   freebsd.example.com ansible_python_interpreter=/usr/local/bin/python\n   ```\n\n6. Execute `machine-stats` and pipe its output to Tidal Tools:\n\n   ```\n   $ machine-stats | tidal sync servers\n   ```\n\n### Additional notes\n\nBy default Machine Stats looks for the `hosts` file in current working\ndirectory. If your inventory file has another name or is located on another\npath, then you should specify it explicitly:\n\n```\n$ machine-stats /path/to/myhosts | tidal sync servers\n```\n\nYou can specify multiple inventory files as the following:\n\n```\n$ machine-stats hosts myhosts /path/to/myhosts\n```\n\n### Configuration\n\nMachine Stats uses Ansible under the hood. Most of the [Ansible configuration\noptions](https://docs.ansible.com/ansible/2.9/reference_appendices/config.html#common-options)\ncan be used with Machine Stats too. By default, Machine Stats will look for\nconfiguration files in the following locations:\n\n- `$PWD/machine_stats.cfg`\n- `$PWD/machine-stats.cfg`\n- `$PWD/machinestats.cfg`\n- `$PWD/ansible.cfg`\n- `$HOME/.machine_stats.cfg`\n- `$HOME/.machine-stats.cfg`\n- `$HOME/.machinestats.cfg`\n- `$HOME/.ansible.cfg`\n- `/etc/ansible/ansible.cfg`\n\nAlso, it is possible to specify the custom configuration file location by\nsetting the `ANSIBLE_CONFIG` environment variable, for example:\n\n```\n$ ANSIBLE_CONFIG=/path/to/my/machine_stats.cfg machine_stats /path/to/my/hosts\n```\n\n**Note:** if `ANSIBLE_CONFIG` value points to a directory, then Machine Stats\nwill look for `ansible.cfg` in that directory.\n\n### Getting information about RHEL 5 hosts\n\nRed Hat Enterprise Linux 5 is shipped with Python 2.4 but `machine_stats`\nrequires at least Python 2.6. To install Python 2.6 on your RHEL 5 machine\nfollow these steps. **NOTE:** this doesn't update the existing Python packages,\nbut installs Python 2.6 alongside with system Python packages.\n\n1. Download Python 2.6 package and its dependencies from EPEL repository:\n\n   ```console\n   $ sudo curl -L -OOO -k \\\n       http://download.fedoraproject.org/pub/archive/epel/5/x86_64/{python26-libs-2.6.8-2.el5.x86_64.rpm,libffi-3.0.5-1.el5.x86_64.rpm,python26-2.6.8-2.el5.x86_64.rpm}\n   ```\n\n2. Install the packages:\n\n   ```console\n   $ sudo rpm -ivh python26*.rpm libffi*.rpm\n   ```\n\n3. Use non-standard Python location in your `hosts` file:\n\n   ```\n   my-user@rhel5.example.com ansible_python_interpreter=/usr/bin/python2.6\n   ```\n\n### Offline installation\n\n**NOTE:** Creating the packages archive for offline installation and the actual\noffline installation process must be performed on machines with the same OS and\nPython versions.\n\n1. On the machine with internet connection create the packages archive using\n   the following commands:\n\n   ```console\n   $ python3 -m pip download -d machine-stats-offline machine-stats\n   $ tar czf machine-stats-offline.tar.gz machine-stats-offline\n   ```\n\n2. Transfer the archive to the machine where you need to perform the offline\n   installation (replace `<remote-host>` and `<remote-dir>` with the\n   appropriate values):\n\n   ```console\n   $ scp machine-stats-offline.tar.gz <remote-host>:/<remote-dir>/\n   ```\n\n3. On the remote host, extract the archive and switch to extracted directory:\n\n   ```\n   $ tar xf machine-stats-offline.tar.gz\n   $ cd machine-stats-offline\n   ```\n\n4. Install Machine Stats and its dependencies:\n\n   ```\n   $ python3 -m pip install --no-index --find-links . machine_stats-*.whl\n   ```\n\n## Generating a `hosts` file from Tidal Migrations\n\nYou can easily generate a hosts file directly from your server inventory in\nTidal Migrations. For example you can use this command:\n\n```\ntidal export servers | jq '.[].host_name' > hosts\n```\n\nThis will create a file (`hosts`), in your current directory, that you can\nuse above in Step 1.\n\nAlternatively, if you use Tidal Migrations [Ansible Tower integration\nscript](https://github.com/tidalmigrations/ansible-tower-integration) you can\nuse its output to generate the `hosts` file for `machine_stats`.\n\n### Requirements\n\n- [`jq`](https://stedolan.github.io/jq/)\n\n### Usage\n\n```\ncd ansible-tower-integration\n./tidal_inventory.py | jq -r '.servers.hosts[]' > path/to/hosts\n```\n\n## Troubleshooting\n\n### machine-stats: command not found\n\nIf running Machine Stats as a CLI failed, try running it as the following:\n\n```console\n$ python3 -m machine_stats\n```\n\n### How to permanently enable the Python 3.8 software collection on RHEL 7\n\nYou should always enable the Python software collection before using `pipenv`\nwith the following command:\n\n```\nscl enable rh-python38 bash\n```\n\nTo permanently add Python 3 to your `$PATH`, you can add an `scl_source`\ncommand to the “dot files” for your specific user. The benefit of this approach\nis that the collection is already enabled at every login.\n\nUsing your preferred text editor, add the following line to your `~/.bashrc`:\n\n```\n# Add RHSCL Python 3 to my login environment\nsource scl_source enable rh-python38\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tidalmigrations/machine_stats",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "machine-stats",
    "package_url": "https://pypi.org/project/machine-stats/",
    "platform": "",
    "project_url": "https://pypi.org/project/machine-stats/",
    "project_urls": {
      "Homepage": "https://github.com/tidalmigrations/machine_stats"
    },
    "release_url": "https://pypi.org/project/machine-stats/2.0.0/",
    "requires_dist": [
      "ansible (<2.10)",
      "pluginbase (==1.0.1)"
    ],
    "requires_python": "",
    "summary": "A simple and effective way to gather machine statistics (RAM, Storage, CPU, etc.) from server environment",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16314061,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3c3665bb6a6730b8e790fc7428686f1854eac382ba75118878512f6e9aa6681",
        "md5": "2423c2704b87c443cb63abe0376e5bb6",
        "sha256": "89f1f9fe42a1b33250301cf6a96b32091dd892918e43ee6d092b8ba0d8f5986e"
      },
      "downloads": -1,
      "filename": "machine_stats-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2423c2704b87c443cb63abe0376e5bb6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13929,
      "upload_time": "2021-11-05T15:22:30",
      "upload_time_iso_8601": "2021-11-05T15:22:30.850964Z",
      "url": "https://files.pythonhosted.org/packages/a3/c3/665bb6a6730b8e790fc7428686f1854eac382ba75118878512f6e9aa6681/machine_stats-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55b1a269b170a8087eaee0faab856979078d1b24cb640730cb9ce422de766b6b",
        "md5": "cce98e00bed4343b9c132c8c5803d050",
        "sha256": "53b6a16bcfac60e973eb80a1c8eb7b5df42678a20554c984cb331da8ba409cf3"
      },
      "downloads": -1,
      "filename": "machine_stats-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cce98e00bed4343b9c132c8c5803d050",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15282,
      "upload_time": "2021-11-05T15:22:31",
      "upload_time_iso_8601": "2021-11-05T15:22:31.923837Z",
      "url": "https://files.pythonhosted.org/packages/55/b1/a269b170a8087eaee0faab856979078d1b24cb640730cb9ce422de766b6b/machine_stats-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}