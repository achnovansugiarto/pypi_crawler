{
  "info": {
    "author": "Evan Leis",
    "author_email": "evan.explodes@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "##### v1.0.0\n\nDjango JSON API Made Simple\n===========================\n\nNo more forcing your JSON to be bound to models.\n\nThis is a JSON api framework, the way it should be.\n\n- Simple\n- Flexible / Dynamic\n- Useful\n\nThe API framework uses Django Forms, so no more bull trying to validate input a certain way.\n\n# !!! Get to the code !!!\n\nHow about this?\n\nFirst: `pip install django-jsonapi`, ok now:\n\n\n```language=python\nfrom djsonapi import api, serial\n\n@serial.serializer(User, mode=\"current_user\")\ndef current_user_serializer(obj):\n    return serial.serialize_model(obj, fields=(\"name\", \"email\", \"last_login\", \"date_joined\"))\n    \n@serial.serializer(User, mode=\"public\")\ndef public_user_serializer(obj):\n    return serial.serialize_model(obj, fields=(\"name\", \"date_joined\"))\n\n@csrf_exempt\n@api.login_required\n@api.require_method(\"GET\", \"POST\") # passes post/put down, 405's if method is incorrect\n@api.post_form(forms.UserUpdateForm) # validates post/put data with form\ndef profile(request, form):\n    if form:\n        # form is guaranteed to be valid here\n        user = form.save()\n    else:\n        user = request.user\n    data = serial.serialize(user, mode=\"current_user\")\n    return api.ok(message=\"Hello World!\", user=user)\n```\nThe response could look like:\n```\n{\n  \"message\": \"Hello World!\",\n  \"body\": {\n    \"name\": \"Evan Leis\",\n    \"last_login\": \"2014-04-09T22:48:21.957Z\",\n    \"date_joined\": \"2014-04-09T22:47:08.153Z\",\n    \"email\": \"foo@example.com\",\n  },\n  \"ok\": true\n}\n```\n\nFor more code, see the example app.\n\n**Important: make sure your serializers get loaded.**\n\nEasiest way to do this is put them in a file called serial.py and in your app's `__init__.py`, load via\n```\n## myproj.myapp.__init__.py\nfrom myproj.myapp.serial import *\n```\n\n\n## `djsonapi.serial`\n\nMethods for serializing objects into dicts, and dicts into JSON.\n\n## `djsonapi.api`\n\nMethods for returning HttpResponses with JSON data.\n\nLicense\n----\nThe MIT License (MIT)\n\nCopyright (c) 2014 Evan Leis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/djsonapi/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/explodes/djsonapi",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-jsonapi",
    "package_url": "https://pypi.org/project/django-jsonapi/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-jsonapi/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/djsonapi/",
      "Homepage": "https://github.com/explodes/djsonapi"
    },
    "release_url": "https://pypi.org/project/django-jsonapi/1.0.6/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Non-prohibitive, JSON API library for Django.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1988821,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4df158adabf2b31aa7978db5daf8f44467a4e7af09a9e54df33113f0dbcee10",
        "md5": "1260c81247cf635f1512826a9fbe00e7",
        "sha256": "705cf40e2f69861e07170b76abc09b10e26145fde0d3bc878172240a851027e8"
      },
      "downloads": -1,
      "filename": "django-jsonapi-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "1260c81247cf635f1512826a9fbe00e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6378,
      "upload_time": "2015-11-12T05:47:17",
      "upload_time_iso_8601": "2015-11-12T05:47:17.102396Z",
      "url": "https://files.pythonhosted.org/packages/f4/df/158adabf2b31aa7978db5daf8f44467a4e7af09a9e54df33113f0dbcee10/django-jsonapi-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}