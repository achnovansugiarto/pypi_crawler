{
  "info": {
    "author": "",
    "author_email": "Alex Page <a.t.page@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Description\n\nThis library uses `ffmpeg` to check if a file (such as an mkv video) is corrupt.  Any errors generated by `ffmpeg` when reading the file are assumed to be caused by file corruption.\n\n# Installation\n\n    pip3 install mediachecker\n\nThe `ffmpeg` command must also be available on your system (and `PATH`).\n\n# Usage\n\n    from mediachecker import AVFile\n    \n    f = AVFile('some_file_to_check.mp4')\n    file_is_good = f.is_good()\n\nBy default, we only scan the first audio track of the file.  This should be relatively fast.  Alternatively, you can do:\n\n    file_is_good = f.is_good(method='full')\n\nwhich will probably be slower.\n\nIf you want to see the output that was generated by `ffmpeg`, you can use `write_log`:\n\n    file_is_good = f.is_good(write_log=True)\n    \nThis will save any errors to `some_file_to_check.mp4.log`.\n\n## CLI\n\nInstalling the `mediachecker` package also creates a command-line tool called `check_media`.\n\nRun `check_media -h` for help using it.  Example usage:\n\n    $ check_media -r -l /path/to/my/media/\n\nThat will recursively search for media in `/path/to/my/media/`, scan\neach file (using the default method), and write logs for all of them.\n\n# TODO\n\n* Add more command line options\n\n* Add more tests\n\n* Enable HW acceleration, e.g. `ffmpeg -hwaccel cuda ...`\n\n* Enable debug statements regarding progress, etc.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2022 Alex Page  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mediachecker",
    "package_url": "https://pypi.org/project/mediachecker/",
    "platform": null,
    "project_url": "https://pypi.org/project/mediachecker/",
    "project_urls": {
      "Bug Tracker": "https://github.com/atpage/mediachecker/issues",
      "Homepage": "https://github.com/atpage/mediachecker"
    },
    "release_url": "https://pypi.org/project/mediachecker/2022.9.19/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Check A/V files for corruption using ffmpeg.",
    "version": "2022.9.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15153777,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba5577d40d7d19ca6e846fde5a8055c8a043ea71eb86374838d0c4eb4a4463fa",
        "md5": "87a72b541f6f7d8c6ee62f036dfa26ca",
        "sha256": "2ff450d38711f6bd9040b94ce7ec616f0da427f2393599f800c47a7abc8fcf70"
      },
      "downloads": -1,
      "filename": "mediachecker-2022.9.19-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "87a72b541f6f7d8c6ee62f036dfa26ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5962,
      "upload_time": "2022-09-20T11:42:48",
      "upload_time_iso_8601": "2022-09-20T11:42:48.714036Z",
      "url": "https://files.pythonhosted.org/packages/ba/55/77d40d7d19ca6e846fde5a8055c8a043ea71eb86374838d0c4eb4a4463fa/mediachecker-2022.9.19-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a15acdb112820f1953ac0be39d17f5cddb0bd20ff5a270673241a552f924ec27",
        "md5": "c0f5e5f8cf6648cb8224dd6209b5d854",
        "sha256": "50166f0f4270642eaf64e25733b07d56d24888e65524f91d546c0225da6b0b1e"
      },
      "downloads": -1,
      "filename": "mediachecker-2022.9.19.tar.gz",
      "has_sig": false,
      "md5_digest": "c0f5e5f8cf6648cb8224dd6209b5d854",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 63897517,
      "upload_time": "2022-09-20T11:43:16",
      "upload_time_iso_8601": "2022-09-20T11:43:16.237883Z",
      "url": "https://files.pythonhosted.org/packages/a1/5a/cdb112820f1953ac0be39d17f5cddb0bd20ff5a270673241a552f924ec27/mediachecker-2022.9.19.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}