{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Matrix Registration Bot\n=======================\n\n|Pypi badge| |License| |Docker pulls|\n\nThis bot aims to create and manage registration tokens for a matrix\nserver. It wants to help invitation based servers to maintain usability.\nIt does not create a user itself, but allows registration only with a\nvalid token as defined by Matrix standard\n`MSC3231 <https://github.com/matrix-org/matrix-doc/blob/main/proposals/3231-token-authenticated-registration.md>`__.\nThe benefit is, that an administrator minimizes manual work and does not\nknow a user’s password at any time.\n\nThis means, that a user that registers on your server has to provide a\nregistration token to successfully create an account. The token can be\ncreated by interacting with this bot. So to invite a friend you would\nsend ``create`` to the bot which answers with a token. You send the\ntoken to the friend, and they can use this to create an account.\n\nThe feature was added in Matrix v1.2. More information can be found in\nthe `Synapse\nDocumentation <https://matrix-org.github.io/synapse/latest/usage/administration/admin_api/registration_tokens.html>`__\n.\n\nIf you have any questions, or if you need help setting it up, read the\n`troublshooting guide <./docs/troubleshooting.md>`__ or join\n`#matrix-registration-bot:hyteck.de <https://matrix.to/#/#matrix-registration-bot:hyteck.de>`__.\n\nSupported commands\n==================\n\n**Unrestricted commands**\n\n-  ``help``: Shows this help\n\n**Restricted commands**\n\n-  ``list``: Lists all registration tokens\n-  ``show <token>``: Shows token details in human-readable format\n-  ``create``: Creates a token that that is valid for one registration\n   for seven days\n-  ``delete <token>`` Deletes the specified token(s)\n-  ``delete-all`` Deletes all tokens\n-  ``allow @user:example.com`` Allows the specified user (or a user\n   matching a regex pattern) to use restricted commands\n-  ``disallow @user:example.com`` Stops a specified user (or a user\n   matching a regex pattern) from using restricted commands\n\nPermissions\n===========\n\nBy default, any user on the homeserver of the bot is allowed to use\nrestricted commands. You can change that, by using the ``allow`` command\nto configure one (or multiple) specific user. Read the\n`simple-matrix-bot\ndocumentation <https://simple-matrix-bot-lib.readthedocs.io/en/latest/manual.html#allowlist>`__\nfor more information. If you get locked out for any reason, simply\nmodify the config.toml that is created in the bots working directory.\n\nGetting started\n===============\n\nInstall via `matrix-docker-ansible-deploy <https://github.com/spantaleev/matrix-docker-ansible-deploy>`__\n---------------------------------------------------------------------------------------------------------\n\nIf you already installed your homeserver with this ansible playbook you\ncan make use of a very simple setup. Check out `the setup instructions\nin the project’s\nrepo <https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-registration-bot.md>`__.\n\nPrerequisites for all other installation methods\n------------------------------------------------\n\nServer configuration\n~~~~~~~~~~~~~~~~~~~~\n\nYour server should be configured to a token restricted registration. Add\nthe following to your ``homeserver.yaml``:\n\n.. code:: yaml\n\n   enable_registration: true\n   registration_requires_token: true\n\nCreate a bot account\n--------------------\n\nThen you need to create an account for the bot on the server, like you\nwould do with any other account. A good username is\n``registration-bot``. If you want to use token based login, note the\naccess token of the bot. One way to get the token is to log in as the\nbot and got to ``Settings -> Help & About -> Access Token`` in Element,\nhowever you mustn’t log out or the token will be invalidated. As an\nalternative you can use the command\n\n.. code:: shell\n\n   curl -X POST --header 'Content-Type: application/json' -d '{\n       \"identifier\": { \"type\": \"m.id.user\", \"user\": \"YourBotUsername\" },\n       \"password\": \"YourBotPassword\",\n       \"type\": \"m.login.password\"\n   }' 'https://matrix.YOURDOMAIN/_matrix/client/r0/login'\n\nOnce you are finished you can start the installation of the bot.\n\nManual Installation\n-------------------\n\nThe installation can easily be done via\n`PyPi <https://pypi.org/project/matrix-registration-bot/>`__\n\n.. code:: bash\n\n   $ pip install matrix-registration-bot\n\nConfiguration\n-------------\n\nConfigure the bot with a file named ``config.yml``. It should look like\nthis\n\n.. code:: yaml\n\n   bot:\n     server: \"https://synapse.example.com\"\n     username: \"registration-bot\"\n     access_token: \"verysecret\"\n     # It is also possible to use a password based login by commenting out the access token line and adjusting the line below\n     # password: \"secretpassword\"\n     prefix: \"\"\n   api:\n     # API endpoint of the registration tokens\n     base_url: 'https://synapse.example.com'\n     # Access token of an administrator on the server. If you configured the bot to be an admin on the sever you can use the same token as above.\n     token: \"supersecret\"\n   logging:\n     level: DEBUG/INFO/ERROR\n\nIt is also possible to use environment variables to configure the bot.\nThe variable names are all upper case, concatenated with ``_``\ne.g. ``LOGGING_LEVEL``.\n\nStart the bot\n~~~~~~~~~~~~~\n\nStart the bot with\n\n.. code:: bash\n\n   python -m matrix_registration_bot.bot\n\nand then open a Direct Message to the bot. The type one of the following\ncommands.\n\nAutomatically (re-)start the bot with Systemd\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo have the bot start automatically after reboots create the file\n``/etc/systemd/system/matrix-registration-bot.service`` with the\nfollowing content on your server. This assumes you use that you place\nyour configuration in ``/matrix/matrix-registration-bot/config.yml``.\n\n::\n\n   [Unit]\n   Description=matrix-registration-bot\n\n   [Service]\n   Type=simple\n\n   WorkingDirectory=/matrix/matrix-registration-bot\n   ExecStart=python3 -m matrix_registration_bot.bot\n\n   Restart=always\n   RestartSec=30\n   SyslogIdentifier=matrix-registration-bot\n\n   [Install]\n   WantedBy=multi-user.target\n\nAfter creating the service reload your daemon and start+enable the\nservice.\n\n.. code:: bash\n\n   $ sudo systemctl daemon-reload\n   $ sudo systemctl start matrix-registration-bot\n   $ sudo systemclt enable matrix-registration-bot\n\nInstall using docker-compose\n----------------------------\n\nTo use this container via docker you can create the following\n``docker-compose.yml`` and start the container with\n``docker-compose up -d``. Explanation on how to obtain the correct\nvalues of the configuration can be found in the **Manual installation**\nsection.\n\n.. code:: yaml\n\n   version: \"3.7\"\n\n   services:\n     matrix-registration-bot:\n       image: moanos/matrix-registration-bot:latest\n       environment:\n         LOGGING_LEVEL: DEBUG\n         BOT_SERVER: \"https://synapse.example.com\"\n         BOT_USERNAME: \"registration-bot\"\n         BOT_PASSWORD: \"password\"\n         API_BASE_URL: 'https://synapse.example.com'\n         API_TOKEN: \"syt_xxxxxxxxxxxxxxxxxxxxxxxx\"\n\ngit checkout de # End-to-End Encryption\n\nFrom version 1.2.0 the bot supports E2E encryption. This is a bit safer\nand also allows to create direct messages (which are by default\nencrypted). This will be enabled by default.\n\nContributing\n============\n\nFeel free to contribute or discuss this bot at\n`#matrix-registration-bot:hyteck.de <https://matrix.to/#/#matrix-registration-bot:hyteck.de>`__\nor simply open issues and PRs here.\n\n`Code of\nConduct <https://www.contributor-covenant.org/version/2/1/code_of_conduct/>`__\n\nRelated Projects\n================\n\n-  The project is made possible by\n   `Simple-Matrix-Bot-Lib <https://simple-matrix-bot-lib.readthedocs.io>`__.\n-  An alternative for managing tokens is `Synapse\n   Admin <https://github.com/Awesome-Technologies/synapse-admin>`__\n\n.. |Pypi badge| image:: https://img.shields.io/pypi/v/matrix-registration-bot.svg\n.. |License| image:: https://img.shields.io/pypi/l/matrix-registration-bot?color=%23008000\n.. |Docker pulls| image:: https://img.shields.io/docker/pulls/moanos/matrix-registration-bot\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "matrix,registration,bot,user,registration,API",
    "license": "AGPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-registration-bot",
    "package_url": "https://pypi.org/project/matrix-registration-bot/",
    "platform": null,
    "project_url": "https://pypi.org/project/matrix-registration-bot/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/matrix-registration-bot/1.2.2/",
    "requires_dist": [
      "simplematrixbotlib (<3.0.0,>=2.7.3)",
      "pyyaml",
      "matrix-nio[e2e]",
      "aiohttp[speedups]"
    ],
    "requires_python": "",
    "summary": "A bot to manage user registration tokens on a matrix server.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15444233,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf0d548e5747ae6359d81968bf4255f62e4c5d6265036d0301704a3605eff9ff",
        "md5": "64e658faed561f83b028c2b1bc631991",
        "sha256": "136516eb36610d3b7775a6af03dc468e0e29e221f91f92e92db128262e9d50ce"
      },
      "downloads": -1,
      "filename": "matrix_registration_bot-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "64e658faed561f83b028c2b1bc631991",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35102,
      "upload_time": "2022-10-18T03:39:05",
      "upload_time_iso_8601": "2022-10-18T03:39:05.773338Z",
      "url": "https://files.pythonhosted.org/packages/bf/0d/548e5747ae6359d81968bf4255f62e4c5d6265036d0301704a3605eff9ff/matrix_registration_bot-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1eb77172cebeab7141f287a899cde23202e9b53000645409fe98c94292fa048",
        "md5": "7d7437bbb689f8e6dfca997565bdd99d",
        "sha256": "4047cfc972cdce2765d451a57ca913780364d79175eba085c5c41617058727a3"
      },
      "downloads": -1,
      "filename": "matrix-registration-bot-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7d7437bbb689f8e6dfca997565bdd99d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30823,
      "upload_time": "2022-10-18T03:39:07",
      "upload_time_iso_8601": "2022-10-18T03:39:07.816996Z",
      "url": "https://files.pythonhosted.org/packages/d1/eb/77172cebeab7141f287a899cde23202e9b53000645409fe98c94292fa048/matrix-registration-bot-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}