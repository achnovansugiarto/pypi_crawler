{
  "info": {
    "author": "someone",
    "author_email": "someone@somenet.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# [Mattermost API](https://api.mattermost.com/) bindings\nIn productive use on a 6k+ users E10 instance at https://mattermost.fsinf.at\n+ Used to manage channels, users and everything.\n+ Some api-endpoints are #UNTESTED.\n  + Some are not handled/#NOT_IMPLEMENTED (yet).\n    + Some dont seem to make any sense to ever implement at all. Why do they even exist?\n    + Others may be out of scope (I cannot test E20-stuff)\n+ Beware: I love to rebase git. :)\n\n## If you use this or find this stuff useful, consider paying me a beer/club-mate :)\n+ ``btc: bc1q9vxqzd58683ky9c2yaddaxx3wrxakggfa0dmdt``\n+ ``eth: 0x839326860d74cf61f03719c5c63db3ae5d2b443f``\n+ ``bch: qqxpm8py3flkaqdt4ehatzvx250634fuvgsgvft6z4``\n+ ``doge: DLeQq2u7gdnidaNwEtj9fYrstUaU4banNg``\n+ ``xmr: 47WwuQssrZRHLXYBRoEPmqhyG8e4PxorwWn1Xvyg6QShKAjZ83UHWJmYd9PFkpH6vPQFgNbnKvaRz1EzoQHSeeQvEGQ6ihA``\n\n\n## Setup\n``pip3 install --user --upgrade mattermost``\n\n\n## Usage\n```\nimport mattermost\n\n# login\nmm = mattermost.MMApi(\"https://mattermost.example.com/api\")\nmm.login(\"user@example.com\", \"my-pw\")\n# alternatively use a personal-access-token/bot-token.\n# mm.login(bearer=\"my-personal-access-token\")\n\n\n# do stuff (print info about your user)\nimport pprint\npprint.pprint(mm.get_user())\n\n\n# do other stuff (print info about an not-existing user)\ntry:\n    pprint.pprint(mm.get_user(\"not-existing-user-id\", exc=True))\nexcept mattermost.ApiException as e:\n    print(e)\n\n\n# custom endpoint call (get server config)\ncfg = mm._get(\"/v4/config\")\n\n# do something (enable plugins)\ncfg[\"PluginSettings\"][\"Enable\"] = True\n\n# custom endpoint call (put server config)\nmm._put(\"/v4/config\", data=cfg)\n\n\n# logout\nmm.revoke_user_session()\n```\n\n\n### Websocket usage\n```\nimport mattermost\nimport mattermost.ws\n\n# login\nmm = mattermost.MMApi(\"https://mattermost.example.com/api\")\nmm.login(\"user@example.com\", \"my-pw\")\n\n\n# define a websocket handler\ndef webs_handler(mmws, event_data):\n    import pprint\n    pprint.pprint(mmws)\n    pprint.pprint(event_data)\n\n# connect to websocket and start processing events\nmmws = mattermost.ws.MMws(webs_handler, mm, \"wss://mattermost.example.com/api/v4/websocket\")\n```\n\nTo close the websocket connection - there is no way to restart, create a new instance of MMws:\n+ ``mmws.close_websocket()``\n\n\n### Manually calling the API\nSome endpoints are not handled (yet). You can manually call these endpoints. Available private functions:\n+ ``_get(endpoint, raw=False, exc=False)``\n+ ``_put(endpoint, data=None, exc=False)``\n+ ``_post(endpoint, data=None, multipart_formdata=None, exc=False)``\n+ ``_delete(endpoint, data=None, exc=False)``\n\n\n### stdin2channel\nYou can pipe ``STDIN`` to a channel:\n+ ``echo \"message\" | python3 -m mattermost.stdin2channel https://localhost:8065/api 'user@example.com' 'my-pw' 'channel_id'``\n**This leaks your credentials to everyone on your system!** Only use this in trusted dev-envs.\n\n\n## Endpoints\nOrdered by https://api.mattermost.com/\n<!-- grep -E \"(^#\\+)|(def\\s+[^_])\" mattermost/__init__.py | sed -nEe 's/^#\\+/+/p' -e 's/^\\s+def\\s+([^(]+)\\(self,?\\s*(.*\\)):?(.*$)/  + **``\\1 (\\2\\3``**/p' -e 's/^\\s+#def\\s+(.*NOT_IMPLEMENTED.*$)/  + *``\\1``*/' >> README.md -->\n+ **LOGIN/LOGOUT**\n  + **``login (login_id=None, password=None, token=None, bearer=None)``**\n  + **``logout (**kwargs)``**\n+ **USERS**\n  + *``create_user() #NOT_IMPLEMENTED``*\n  + **``get_users (in_team=None, not_in_team=None, in_channel=None, not_in_channel=None, group_constrained=None, without_team=None, sort=None, **kwargs)``**\n  + **``get_users_by_ids_list (user_ids_list, **kwargs) #UNTESTED``**\n  + **``get_users_by_group_channel_ids_list (group_channel_ids_list, **kwargs) #UNTESTED``**\n  + **``get_users_by_usernames_list (usernames_list, **kwargs)``**\n  + *``search_users() #NOT_IMPLEMENTED``*\n  + *``autocomplete_users() #NOT_IMPLEMENTED``*\n  + *``get_user_ids_of_known_users() #NOT_IMPLEMENTED``*\n  + *``get_total_count_of_users_in_system() #NOT_IMPLEMENTED``*\n  + **``get_user (user_id=None, **kwargs)``**\n  + *``update_user() #NOT_IMPLEMENTED: # use patch_user``*\n  + *``deactivate_user() #NOT_IMPLEMENTED``*\n  + **``patch_user (user_id, props=None, **kwargs)``**\n  + *``update_user_roles() #NOT_IMPLEMENTED``*\n  + *``update_user_active_status() #NOT_IMPLEMENTED``*\n  + *``get_user_profile_image() #NOT_IMPLEMENTED``*\n  + *``set_user_profile_image() #NOT_IMPLEMENTED``*\n  + *``delete_user_profile_image() #NOT_IMPLEMENTED``*\n  + *``get_user_default_profile_image() #NOT_IMPLEMENTED``*\n  + **``get_user_by_username (username, **kwargs)``**\n  + *``reset_user_password() #NOT_IMPLEMENTED``*\n  + *``update_user_mfa() #NOT_IMPLEMENTED``*\n  + *``generate_user_mfa_secret() #NOT_IMPLEMENTED``*\n  + **``demote_a_user (user_id, **kwargs)``**\n  + **``promote_a_guest (user_id, **kwargs)``**\n  + *``check_user_mfa() #NOT_IMPLEMENTED``*\n  + *``update_user_password() #NOT_IMPLEMENTED``*\n  + *``send_user_password_reset_mail() #NOT_IMPLEMENTED``*\n  + *``get_user_by_email() #NOT_IMPLEMENTED``*\n  + **``get_user_sessions (user_id=None, **kwargs)``**\n  + **``revoke_user_session (user_id=None, session_id=None, **kwargs)``**\n  + *``revoke_all_user_sessions() #NOT_IMPLEMENTED``*\n  + *``attach_mobile_device_to_user_session() #NOT_IMPLEMENTED``*\n  + *``get_user_audit() #NOT_IMPLEMENTED``*\n  + *``admin_verify_user_email_() #NOT_IMPLEMENTED``*\n  + *``verify_user_email_() #NOT_IMPLEMENTED``*\n  + *``send_user_email_verification() #NOT_IMPLEMENTED``*\n  + *``switch_user_login_method() #NOT_IMPLEMENTED``*\n  + *``create_user_access_token() #NOT_IMPLEMENTED``*\n  + *``get_user_access_tokens() #NOT_IMPLEMENTED``*\n  + *``revoke_user_access_token() #NOT_IMPLEMENTED``*\n  + *``get_user_access_token() #NOT_IMPLEMENTED``*\n  + *``disable_user_access_token() #NOT_IMPLEMENTED``*\n  + *``enable_user_access_token() #NOT_IMPLEMENTED``*\n  + *``search_user_access_tokens() #NOT_IMPLEMENTED``*\n  + *``update_user_auth_method() #NOT_IMPLEMENTED``*\n  + *``record_user_action_custom_tos() #NOT_IMPLEMENTED``*\n  + *``fetch_user_latest_accepted_custom_tos() #NOT_IMPLEMENTED``*\n  + *``revoke_all_users_all_sessions() #NOT_IMPLEMENTED #MM, ARE YOU INSANE?!``*\n+ **BOTS** #NOT_IMPLEMENTED\n+ **TEAMS**\n  + *``create_team() #NOT_IMPLEMENTED``*\n  + **``get_teams (include_total_count=None, **kwargs)``**\n  + **``get_team (team_id, **kwargs)``**\n  + *``update_team() #NOT_IMPLEMENTED``*\n  + *``delete_team() #NOT_IMPLEMENTED``*\n  + *``patch_team() #NOT_IMPLEMENTED``*\n  + *``update_team_privacy() #NOT_IMPLEMENTED``*\n  + *``restore_team() #NOT_IMPLEMENTED``*\n  + *``get_team_by_name() #NOT_IMPLEMENTED``*\n  + *``search_teams() #NOT_IMPLEMENTED``*\n  + *``exists_team() #NOT_IMPLEMENTED``*\n  + *``get_teams_for_user() #NOT_IMPLEMENTED``*\n  + **``get_team_members (team_id, **kwargs)``**\n  + **``add_user_to_team (team_id, user_id, **kwargs)``**\n  + *``add_user_to_team_from_invite() #NOT_IMPLEMENTED``*\n  + *``add_multiple_users_to_team() #NOT_IMPLEMENTED WHY?!``*\n  + *``get_team_members_for_a_user() #NOT_IMPLEMENTED WHY NOT NAMING STUFF USEFULLY?!``*\n  + **``get_team_member (team_id, user_id, **kwargs)``**\n  + **``remove_user_from_team (team_id, user_id, **kwargs)``**\n  + *``get_team_members_by_id() #NOT_IMPLEMENTED``*\n  + *``get_team_stats() #NOT_IMPLEMENTED``*\n  + *``regenerate_team_invite_id() #NOT_IMPLEMENTED``*\n  + *``get_team_icon() #NOT_IMPLEMENTED``*\n  + *``set_team_icon() #NOT_IMPLEMENTED``*\n  + *``remove_team_icon() #NOT_IMPLEMENTED``*\n  + *``update_team_members_roles() #NOT_IMPLEMENTED``*\n  + **``update_team_members_scheme_roles (team_id, user_id, props, **kwargs)``**\n  + *``get_team_unreads_for_user() #NOT_IMPLEMENTED``*\n  + *``get_team_unreads() #NOT_IMPLEMENTED``*\n  + *``invite_users_to_team_by_email() #NOT_IMPLEMENTED``*\n  + **``invite_guests_to_team_by_email (team_id, guest_email, channels, message, **kwargs)``**\n  + *``invalidate_invites_to_team_by_email() #NOT_IMPLEMENTED``*\n  + *``import_team() #NOT_IMPLEMENTED``*\n  + *``get_team_invite_info() #NOT_IMPLEMENTED``*\n  + *``set_team_scheme() #NOT_IMPLEMENTED``*\n  + *``get_team_members_minus_group_members() #NOT_IMPLEMENTED``*\n  + **``get_team_channels (team_id, **kwargs) #This belongs here, not to channels!``**\n+ **CHANNELS**\n  + *``get_all_channels() #NOT_IMPLEMENTED NOT USEFUL AT ALL!``*\n  + **``create_channel (team_id, name, display_name, purpose=None, header=None, chan_type=\"O\", **kwargs)``**\n  + **``create_dm_channel_with (other_user_id, **kwargs)``**\n  + **``create_group_channel_with (other_user_ids_list, **kwargs) #UNTESTED``**\n  + *``search_all_private_and_public_channels() #NOT_IMPLEMENTED``*\n  + *``search_all_users_group_channels() #NOT_IMPLEMENTED``*\n  + *``get_team_channels_by_id() #NOT_IMPLEMENTED``*\n  + *``get_timezones_of_users_in_channel() #NOT_IMPLEMENTED``*\n  + **``get_channel (channel_id, **kwargs)``**\n  + **``update_channel (channel_id, props, **kwargs)``**\n  + **``patch_channel (channel_id, props, **kwargs)``**\n  + **``get_channel_posts_pinned (channel_id, **kwargs)``**\n  + **``search_channel (team_id, term, **kwargs)``**\n  + **``get_channel_by_name (team_id, channel_name, include_deleted=None, **kwargs)``**\n  + **``get_channel_members (channel_id, **kwargs)``**\n  + **``add_user_to_channel (channel_id, user_id, **kwargs)``**\n  + **``get_channel_member (channel_id, user_id, **kwargs)``**\n  + **``remove_user_from_channel (channel_id, user_id, **kwargs)``**\n  + **``update_channel_members_scheme_roles (channel_id, user_id, props, **kwargs)``**\n  + **``get_channel_memberships_for_user (user_id, team_id, **kwargs)``**\n  + **``get_channels_for_user (user_id, team_id, **kwargs)``**\n+ **POSTS**\n  + **``create_post (channel_id, message, props=None, filepaths=None, root_id=None, **kwargs)``**\n  + **``create_ephemeral_post (channel_id, message, user_id, **kwargs)``**\n  + **``get_post (post_id, **kwargs)``**\n  + **``delete_post (post_id, **kwargs)``**\n  + **``patch_post (post_id, message=None, is_pinned=None, props=None, **kwargs)``**\n  + **``get_posts_for_channel (channel_id, **kwargs)``**\n+ **FILES**\n  + **``upload_file (channel_id, filepath, **kwargs)``**\n  + **``get_file (file_id, **kwargs)``**\n+ **PREFERENCES** #NOT_IMPLEMENTED\n+ **STATUS** #NOT_IMPLEMENTED\n+ **EMOJI** #NOT_IMPLEMENTED\n+ **REACTIONS**\n  + **``create_reaction (user_id, post_id, emoji_name, **kwargs)``**\n+ **WEBHOOKS**\n  + **``create_outgoing_hook (team_id, display_name, trigger_words, callback_urls, channel_id=None, description=None, trigger_when=0, **kwargs)``**\n  + **``list_outgoing_hooks (team_id, channel_id=None, **kwargs)``**\n  + **``delete_outgoing_hook (hook_id, **kwargs)``**\n+ **COMMANDS**\n  + **``create_slash_command (team_id, trigger, url, **kwargs)``**\n  + **``list_custom_slash_commands_for_team (team_id, **kwargs)``**\n  + **``update_slash_command (data, **kwargs)``**\n  + **``delete_slash_command (command_id, **kwargs)``**\n+ **OPENGRAPH** #NOT_IMPLEMENTED\n+ **SYSTEM** #NOT_IMPLEMENTED\n+ **BRAND** #NOT_IMPLEMENTED\n+ **OAUTH** #NOT_IMPLEMENTED\n+ **SAML** #NOT_IMPLEMENTED\n+ **LDAP** #NOT_IMPLEMENTED\n+ **GROUPS** #NOT_IMPLEMENTED\n+ **COMPLIANCE** #NOT_IMPLEMENTED\n+ **CLUSTER** #NOT_IMPLEMENTED\n+ **ELASTICSEARCH** #NOT_IMPLEMENTED\n+ **BLEVE** #NOT_IMPLEMENTED\n+ **DATARETENTION** #NOT_IMPLEMENTED\n+ **JOBS** #NOT_IMPLEMENTED\n+ **PLUGINS** #NOT_IMPLEMENTED\n+ **ROLES** #NOT_IMPLEMENTED\n+ **SCHEMES** #NOT_IMPLEMENTED\n+ **INTEGRATION_ACTIONS**\n  + **``open_dialog (trigger_id, response_url, dialog, **kwargs)``**\n+ **TERMS_OF_SERVICE** #NOT_IMPLEMENTED",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.somenet.org/pub/jan/mattermost-api-python.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mattermost",
    "package_url": "https://pypi.org/project/mattermost/",
    "platform": "",
    "project_url": "https://pypi.org/project/mattermost/",
    "project_urls": {
      "Homepage": "https://git.somenet.org/pub/jan/mattermost-api-python.git"
    },
    "release_url": "https://pypi.org/project/mattermost/5.38.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Mattermost API bindings",
    "version": "5.38.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13221444,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9867c3f0e40660333915a57bf99a3f8f3c7c33454f6295a52555074abefc525",
        "md5": "149adc0ae80747fb15faee77faf9e8d2",
        "sha256": "398d448b6ebcddce56c60a4bdb94980de436cec089dc4df7d86db22f44bb7385"
      },
      "downloads": -1,
      "filename": "mattermost-5.38.0.tar.gz",
      "has_sig": false,
      "md5_digest": "149adc0ae80747fb15faee77faf9e8d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17460,
      "upload_time": "2021-08-18T11:09:00",
      "upload_time_iso_8601": "2021-08-18T11:09:00.486320Z",
      "url": "https://files.pythonhosted.org/packages/b9/86/7c3f0e40660333915a57bf99a3f8f3c7c33454f6295a52555074abefc525/mattermost-5.38.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}