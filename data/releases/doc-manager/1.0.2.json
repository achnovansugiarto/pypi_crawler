{
  "info": {
    "author": "ImpiCode",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\ndoc_manager\n===========\n.. image:: https://img.shields.io/badge/license-MIT-lightgrey\n    :alt: License MIT\n    :target: https://en.wikipedia.org/wiki/MIT_License\n\n.. image:: https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue\n    :alt: PyPI - Python Version\n    :target: https://www.python.org/\n\n.. image:: https://img.shields.io/badge/django%20versions-3.2%20%7C%204.0%20%7C%204.1-blue\n    :alt: PyPI - Django Version\n    :target: https://www.djangoproject.com/\n\n**doc_manager** is a django library for publishing documents in pdf and html format like privacy policy or term of use. It allows you to easily publish new versions of documents while preserving historical documents.\n\n\nInstallation\n------------\n\nYou can install module from pypi with pip: ::\n\n    pip install doc-manager\n\nor install it directly from the repository with pip: ::\n\n    pip install git+ssh://git@github.com/impicode/doc_manager.git\n\nfor a specific branch: ::\n\n    pip install git+ssh://git@github.com/impicode/doc_manager.git@branchname\n\n\nRequirements\n------------\n- django>=3.2.17\n\n\nSetup\n-----\n\nAdd doc-manager to INSTALLED_APPS in settings.py file: ::\n\n    INSTALLED_APPS = [\n        ...\n        'doc_manager',\n        ...\n    ]\n\nDefine the model in  ``our_app/models.py``: ::\n\n    from doc_manager.models import DocumentModel\n\n    class OurModel(DocumentModel):\n        pass\n\nRegister the model in django admin, where the documents are published.\n``our_app/admin.py`` changes: ::\n\n    from doc_manager.admin import DocumentAdmin\n    from .models import OurModel\n\n    @admin.register(OurModel)\n    class OurAdmin(DocumentAdmin):\n        model = OurModel\n\nCreate a view responsible for displaying the pdf or html document and assign a specific url to it.\n\n``our_app/views.py`` changes: ::\n\n    from doc_manager.views import DocumentView\n    from .models import OurModel\n\n\n    class OurView(DocumentView):\n        model = OurModel\n\nAdding path to ``urls.py``: ::\n\n    from our_app.views import OurView\n\n    urlpatterns = [\n        ...\n        path('see_document/', OurView.as_view(), name = 'see_document'),\n    ]\n\nTo add a link to the view of a published document, just: ::\n\n    <a  href=\"{% url 'see_document' %}\" target=\"_blank\">See document</a>\n\n\nDon't forget to migrate after adding a new model: ::\n\n    python manage.py makemigrations\n    python manage.py migrate\n\n\nUsage\n-----\n\n- log in to the admin page\n- head to app_name section\n- add document\n- publish document\n\nPublished document is now visible at the URL you previously specified in urls.py\n\n\nTranslations\n------------\n\nWe provide translations only to Polish. If you need any other language run in doc_manager directory: ::\n\n    django-admin makemessages -l <language code>\n\nthen in created file /locale/<language code>/LC_MESSAGES/django.po enter your translations and run: ::\n\n    django-admin compilemessages\n\nNow you have doc-manager app with your custom transltions ready to use in your project.\n\n\nExample\n-------\n\nIn main directory run: ::\n\n    python manage.py makemigrations\n    python manage.py migrate\n    python manage.py createsuperuser\n    python manage.py runserver\n\nThen:\n\n- Log in to the admin page (http://127.0.0.1:8000/admin/)\n- Add document in OUR_APP/Our models\n- Publish added document\n- Go to http://127.0.0.1:8000/see_document/ to see added document\n\n\npre-commit Installation\n-----------------------\n\nIn case of developing doc_manager itself please install pre-commit before your first commit. You can do it with the following commands: ::\n\n    pip install pre-commit\n\nThen in main directory: ::\n\n    pre-commit install\n\n\nTesting\n-------\n\nTo run tests in main directory run: ::\n\n    python runtests.py\n\nYou can also run tests with tox. In main directory run: ::\n\n    tox\n\nThat command will run tests discribed above, pre-commit style checks against all files and build a test package with poetry.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doc-manager",
    "package_url": "https://pypi.org/project/doc-manager/",
    "platform": null,
    "project_url": "https://pypi.org/project/doc-manager/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/doc-manager/1.0.2/",
    "requires_dist": [
      "Django (>=3.2.17)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "doc_manager is a django library for publishing documents in pdf and html format like privacy policy or term of use.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17303176,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c19971c992bb2fe4b2d53a60c53afc576710e785824de7e5ff802c629aed8b3a",
        "md5": "80556e59e9d2dad0de218f96af9c63a4",
        "sha256": "69ddaf3e4d3fad369749ae12539ee91d7514838e01d56a76ed057020b2087501"
      },
      "downloads": -1,
      "filename": "doc_manager-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80556e59e9d2dad0de218f96af9c63a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 10484,
      "upload_time": "2023-03-15T12:47:06",
      "upload_time_iso_8601": "2023-03-15T12:47:06.452893Z",
      "url": "https://files.pythonhosted.org/packages/c1/99/71c992bb2fe4b2d53a60c53afc576710e785824de7e5ff802c629aed8b3a/doc_manager-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a580a2bf31c9f2b18bb3d3fbdd7c0be6787ff31c2627779940afa862f4447903",
        "md5": "337b90960842d767e1e773cb6707d36f",
        "sha256": "c888ac58257456772c893b56eda5b89d6e3bf816d252bf99f5de6f2d171bd81c"
      },
      "downloads": -1,
      "filename": "doc_manager-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "337b90960842d767e1e773cb6707d36f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 7987,
      "upload_time": "2023-03-15T12:47:07",
      "upload_time_iso_8601": "2023-03-15T12:47:07.702954Z",
      "url": "https://files.pythonhosted.org/packages/a5/80/a2bf31c9f2b18bb3d3fbdd7c0be6787ff31c2627779940afa862f4447903/doc_manager-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}