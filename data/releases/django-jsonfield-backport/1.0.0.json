{
  "info": {
    "author": "sage",
    "author_email": "laymonage@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=========================\ndjango-jsonfield-backport\n=========================\n\n.. image:: https://img.shields.io/pypi/v/django-jsonfield-backport.svg\n   :target: https://pypi.org/project/django-jsonfield-backport/\n\n.. image:: https://img.shields.io/pypi/l/django-jsonfield-backport\n   :target: https://github.com/laymonage/django-jsonfield-backport/blob/master/LICENSE\n\n.. image:: https://github.com/laymonage/django-jsonfield-backport/workflows/Test/badge.svg\n   :target: https://github.com/laymonage/django-jsonfield-backport/actions?workflow=Test\n\n.. image:: https://coveralls.io/repos/laymonage/django-jsonfield-backport/badge.svg\n   :target: https://coveralls.io/r/laymonage/django-jsonfield-backport\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/python/black\n\n|\n\nBackport of the cross-DB `JSONField`__ model and form fields from Django 3.1.\n\n.. __: https://docs.djangoproject.com/en/dev/releases/3.1/#jsonfield-for-all-supported-database-backends\n\n.. code-block:: python\n\n    from django.db import models\n    from django_jsonfield_backport.models import JSONField\n\n    class ContactInfo(models.Model):\n        data = JSONField()\n\n    ContactInfo.objects.create(data={\n        'name': 'John',\n        'cities': ['London', 'Cambridge'],\n        'pets': {'dogs': ['Rufus', 'Meg']},\n    })\n    ContactInfo.objects.filter(\n        data__name='John',\n        data__pets__has_key='dogs',\n        data__cities__contains='London',\n    ).delete()\n\nFeatures\n========\n\nMost features of the JSONField model and form fields from Django 3.1 are\nsupported.\n\n* MariaDB, MySQL, Oracle, PostgreSQL, and SQLite support.\n* JSONField lookups and transforms support.\n* Custom encoder and decoder support.\n\nDue to limited access to Django's APIs, some features are not supported.\n\n* Introspection is not supported.\n* On MariaDB and Oracle, ``Cast``\\ing to JSONField must be done using the\n  included ``JSONCast`` class.\n\nThis package is fully compatible with the JSONField from Django 3.1. That\nmeans you just need to change your imports and edit your migrations when you\nfinally upgrade to Django 3.1. If you leave them as they are, this package\nwill use the built-in JSONField and system warnings will be raised.\n\nRequirements\n============\n\nThis package supports and is tested against the latest patch versions of:\n\n* **Python:** 3.5 (Django 2.2 only), 3.6, 3.7, 3.8, 3.9\n* **Django:** 2.2, 3.0, 3.1\n* **MariaDB:** 10.2, 10.3, 10.4, 10.5\n* **MySQL:** 5.7, 8.0\n* **Oracle:** 12.2+ (only tested against 12.2.0.1 SE)\n* **PostgreSQL:** 9.5, 10, 11, 12\n* **SQLite:** 3.9.0+ with the `JSON1`_ extension\n\nAll database backends are tested with the latest versions of their drivers.\nSQLite is also tested on GitHub Actions' latest macOS and Windows virtual\nenvironments.\n\n.. _JSON1: https://docs.djangoproject.com/en/3.1/ref/databases/#sqlite-json1\n\nInstallation\n============\n\n1. Use **pip** or your preferred dependency management tool to install the package.\n\n   .. code-block:: shell\n\n       $ pip install django-jsonfield-backport\n\n2. Add ``\"django_jsonfield_backport\"`` to ``INSTALLED_APPS`` in your settings.\n\n   .. code-block:: python\n\n       INSTALLED_APPS = [\n           ...\n           \"django_jsonfield_backport\",\n       ]\n\nUsage\n=====\n\nTo use the model and form fields, import ``JSONField`` from\n``django_jsonfield_backport.models`` and ``django_jsonfield_backport.forms``,\nrespectively.\n\nModel field example:\n\n.. code-block:: python\n\n    from django.db import models\n    from django_jsonfield_backport.models import JSONField\n\n    class ContactInfo(models.Model):\n        data = JSONField()\n\nForm field example:\n\n.. code-block:: python\n\n    from django import forms\n    from django_jsonfield_backport.forms import JSONField\n\n    class ContactForm(forms.Form):\n        data = JSONField()\n\n``JSONCast``, ``KeyTransform``, and ``KeyTextTransform`` classes are also\navailable from ``django_jsonfield_backport.models``.\n\nDocumentation\n=============\n\nSince this package is a backport, the official Django 3.1 docs for\n|models.JSONField|_ and |forms.JSONField|_ are mostly compatible with this\npackage.\n\n.. |models.JSONField| replace:: ``models.JSONField``\n.. |forms.JSONField| replace:: ``forms.JSONField``\n\n.. _models.JSONField: https://docs.djangoproject.com/en/3.1/ref/models/fields/#django.db.models.JSONField\n.. _forms.JSONField: https://docs.djangoproject.com/en/3.1/ref/forms/fields/#django.forms.JSONField\n\nRationale\n=========\n\nAs of the creation of this package, JSONField implementations exist in multiple\npackages on PyPI:\n\n* `Django <https://github.com/django/django>`_:\n  Before Django 3.1, PostgreSQL-only JSONField exists in the ``contrib.postgres``\n  module.\n\n* `jsonfield <https://github.com/rpkilby/jsonfield>`_:\n  1.1k stars, cross-DB support with no extended querying capabilities.\n\n* `django-annoying <https://github.com/skorokithakis/django-annoying#jsonfield>`_:\n  787 stars, has a ``TextField``-based JSONField with no extended querying\n  capabilities.\n\n* `Django-MySQL <https://github.com/adamchainz/django-mysql>`_:\n  364 stars, has a MariaDB/MySQL-only JSONField with extended querying\n  capabilities (not entirely the same as in ``contrib.postgres``).\n\n* `django-jsonfallback <https://github.com/raphaelm/django-jsonfallback>`_:\n  26 stars, uses JSONField from ``contrib.postgres`` and Django-MySQL before\n  falling back to ``TextField``\\-based JSONField.\n\n* `django-json-field <https://github.com/derek-schaefer/django-json-field>`_:\n  116 stars, ``TextField``-based JSONField with custom encoder and decoder\n  support with no extended querying capabilities (unmaintained).\n\n* `django-jsonfield <https://github.com/adamchainz/django-jsonfield>`_:\n  21 stars, cross-DB support with no extended querying capabilities.\n\n* `django-jsonfield-compat <https://github.com/kbussell/django-jsonfield-compat>`_:\n  8 stars, compatibility layer for ``contrib.postgres`` JSONField and\n  django-jsonfield.\n\n* `oracle-json-field <https://github.com/Exscientia/oracle-json-field>`_:\n  2 stars, Oracle-only JSONField with extended querying capabilities\n  (not entirely the same as in ``contrib.postgres``).\n\nAlong with other unmaintained packages such as `dj-jsonfield`_,\n`vlk-django-jsonfield`_, `linaro-django-jsonfield`_, `jsonfield2`_,\n`django-jsonfield2`_, `django-softmachine`_, `django-simple-jsonfield`_,\n`easy_jsonfield`_, and `django-jsonbfield`_.\n\n.. _dj-jsonfield: https://github.com/ratson/dj-jsonfield\n.. _vlk-django-jsonfield: https://github.com/vialink/vlk-django-jsonfield\n.. _linaro-django-jsonfield: https://pypi.org/project/linaro-django-jsonfield\n.. _jsonfield2: https://github.com/rpkilby/jsonfield2\n.. _django-jsonfield2: https://github.com/DarioGT/django-jsonfield2\n.. _django-softmachine: https://github.com/certae/django-softmachine\n.. _django-simple-jsonfield: https://github.com/devkral/django-simple-jsonfield\n.. _easy_jsonfield: https://github.com/claydodo/easy_jsonfield\n.. _django-jsonbfield: https://pypi.org/project/django-jsonbfield\n\nWhy create another one?\n-----------------------\n\nUp until the new JSONField in Django 3.1, there had been no implementation of\nJSONField that supports all the database backends supported by Django with more\nor less **the same functionalities** as the ``contrib.postgres`` JSONField\nprovides.\n\n`Django's release process`_ does not backport new features to previous feature\nreleases. However, the current LTS release is 2.2 which is still supported until\nApril 2022. The next LTS release is Django 3.2 in April 2021 that happens to be\nthe end of extended support for Django 3.1.\n\nSome projects only use LTS releases of Django. There are also incompatibilities\nbetween Django 3.0 and 3.1. Therefore, using Django 3.1 may not be an option for\nsome people at the moment.\n\nSince JSONField seems to be in popular demand and that it works well as a\nstandalone package, I decided to create a backport.\n\nBesides, I'm the `co-author of the new JSONField`_. ¯\\\\_(ツ)_/¯\n\n.. _Django's release process: https://docs.djangoproject.com/en/dev/internals/release-process/#supported-versions\n.. _co-author of the new JSONField: https://github.com/django/django/pull/12392\n\nLicense\n=======\n\nThis package is licensed under the `BSD 3-Clause License`_.\n\n.. _BSD 3-Clause License: https://github.com/laymonage/django-jsonfield-backport/blob/master/LICENSE\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/laymonage/django-jsonfield-backport",
    "keywords": "django jsonfield json backport database models forms fields",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jsonfield-backport",
    "package_url": "https://pypi.org/project/django-jsonfield-backport/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-jsonfield-backport/",
    "project_urls": {
      "Homepage": "https://github.com/laymonage/django-jsonfield-backport"
    },
    "release_url": "https://pypi.org/project/django-jsonfield-backport/1.0.0/",
    "requires_dist": [
      "Django (>2.2)"
    ],
    "requires_python": ">=3.5",
    "summary": "Backport of the cross-DB JSONField model and form fields from Django 3.1.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13005149,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3801bddecb9ee2e87c6d0f1786fa12b13fa56af5eaad9bc19debe5f1f0108ba",
        "md5": "85331c2a985001d41e508e80e578efb4",
        "sha256": "0b85eb98e564b14858bbc8ce9abfe4159ebcf4d1351053a600a51ecac561e02c"
      },
      "downloads": -1,
      "filename": "django_jsonfield_backport-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85331c2a985001d41e508e80e578efb4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 13023,
      "upload_time": "2020-08-07T07:24:07",
      "upload_time_iso_8601": "2020-08-07T07:24:07.786957Z",
      "url": "https://files.pythonhosted.org/packages/a3/80/1bddecb9ee2e87c6d0f1786fa12b13fa56af5eaad9bc19debe5f1f0108ba/django_jsonfield_backport-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ad781297e425c50110981433c56ef1f3fa74262197be582af77f04cff7c5ac1",
        "md5": "aca7e010e562f19094ec880854d752b0",
        "sha256": "feca594c0f7b7823b810c52f8fbad8b8a805dd1938bf1fa78b25ba6304280afe"
      },
      "downloads": -1,
      "filename": "django-jsonfield-backport-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "aca7e010e562f19094ec880854d752b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 15165,
      "upload_time": "2020-08-07T07:24:09",
      "upload_time_iso_8601": "2020-08-07T07:24:09.123784Z",
      "url": "https://files.pythonhosted.org/packages/8a/d7/81297e425c50110981433c56ef1f3fa74262197be582af77f04cff7c5ac1/django-jsonfield-backport-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}