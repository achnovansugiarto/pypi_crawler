{
  "info": {
    "author": "John Gardner",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# locache\n[![PyPI](https://img.shields.io/pypi/v/locache?style=for-the-badge)](https://pypi.org/project/locache/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/locache?color=green&label=Downloads&logo=Python&logoColor=white&style=for-the-badge)](https://pypistats.org/packages/locache)\n[![GitHub](https://img.shields.io/github/license/jla-gardner/local-cache?style=for-the-badge)](LICENCE.md)\n\nA small utility library for caching the results of deterministic and pure function calls to disk.\nThis ability is only intended for use on expensive function calls with simple arguments and keyword arguments.\nThe cache can optionally invalidate itself if changes to the function's source code are detetcted.\n\n## Installation\n\n`pip3 install locache`\n\n## Examples\n\nWhen used in normal python scripts, `@persist` is sufficient.\n\n`foo.py`:\n\n```python\nfrom locache import persist\n\n@persist\ndef my_func(x, num=3):\n    print(\"Hi from foo!\")\n    return x * num\n\nmy_func(1)        # prints \"Hi from foo!\", returns 3\nmy_func(2, num=2) # prints \"Hi from foo!\", returns 4\nmy_func(1)        # returns 3\nmy_func(2, num=2) # returns 4\n```\n\nRunning `foo.py` will lead to the creation of a `foo.cache/my_func/` directory, with files `x=1_num=3` and `x=2_num=2`.\n\n### Notebooks\n\nWhen using python notebooks, the `name` keyword is also required:\n\n`bar.ipynb`:\n\n```python\nfrom locache import persist\n\n@persist(name=\"notebook\")\ndef my_func(x, num=3):\n    print(\"Hi from foo!\")\n    return x * num\n\nmy_func(1)        # prints \"Hi from foo!\", returns 3\nmy_func(1)        # returns 3\n```\n\nRunning this cell will lead to the creation of a `notebook.cache/my_func/` directory in the same directory as the notebook.\n\n## Resetting the Cache\n\nBy default, the cache is invalidated and reset if source code changes to the function in question are dedicated.\nThis behaviour can be surpressed: `@persist(auto_invalidate=False)`\n\nResults for specific function calls can be removed from the cache by deleting the appropriate file.\n\nProgrammatic resetting of the cache is also possible:\n\n```python\nfrom locache import persist, reset_cache\n\n@persist\ndef foo(x):\n    print(\"Hi from foo!\")\n    return x ** 2\n\nfoo(1) # prints \"Hi from foo!\", returns 3\nfoo(1) # returns 3\n\nreset_cache(foo)\n\nfoo(1) # prints \"Hi from foo!\", returns 3\n```\n\nIn a notebook setting, the relevant name needs to also be passed:\n\n```python\n@persist(name=\"notebook\")\ndef foo(x):\n    return x**2\n\nfoo(1)\nreset_cache(foo, name=\"notebook\")\n```\n\n## Logging\n\nCache logging can optionally be enabled:\n\n```python\nfrom locache import verbose; verbose(True)\n```\n\n## Anti-Examples\n\nDon't pass large data structures to persisted functions:\n\n```python\nimport numpy as np\nfrom locache import persist\n\n@persist # don't do this!\ndef foo(x):\n    return np.sum(x * x)\n\narr = np.ones(10) + np.randn(10)\nfoo(arr)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jla-gardner/local-cache",
    "keywords": "cache",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "locache",
    "package_url": "https://pypi.org/project/locache/",
    "platform": null,
    "project_url": "https://pypi.org/project/locache/",
    "project_urls": {
      "Homepage": "https://github.com/jla-gardner/local-cache"
    },
    "release_url": "https://pypi.org/project/locache/2.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Cache expensive function calls to disk.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16009099,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec459b326bc8cf7ee15425be792af1a1d099f25a289b6f08b2ca81b37b8c3fe6",
        "md5": "e75cb28345b6c01c03bf20f046f5e966",
        "sha256": "b03617796cca91e86c84c3d5bcec5b6cb165c1dafb1773d999219002d744ddeb"
      },
      "downloads": -1,
      "filename": "locache-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e75cb28345b6c01c03bf20f046f5e966",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 5032,
      "upload_time": "2022-12-06T14:48:39",
      "upload_time_iso_8601": "2022-12-06T14:48:39.384469Z",
      "url": "https://files.pythonhosted.org/packages/ec/45/9b326bc8cf7ee15425be792af1a1d099f25a289b6f08b2ca81b37b8c3fe6/locache-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a8fe9e9d316851dbb8d6adb1b92baa877125d5c6bf26d3930e0c07d03e66340",
        "md5": "afe38381426e13f5eccc62b25494c71d",
        "sha256": "e0ca89769b6c7c873108e9d0c29fbdb4a25b8a358a30d083ae1a377b65800da4"
      },
      "downloads": -1,
      "filename": "locache-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "afe38381426e13f5eccc62b25494c71d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 4408,
      "upload_time": "2022-12-06T14:48:41",
      "upload_time_iso_8601": "2022-12-06T14:48:41.366180Z",
      "url": "https://files.pythonhosted.org/packages/9a/8f/e9e9d316851dbb8d6adb1b92baa877125d5c6bf26d3930e0c07d03e66340/locache-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}