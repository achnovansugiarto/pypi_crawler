{
  "info": {
    "author": "spaceman_spiff",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Dotli\n---\n[![Build Status](https://travis-ci.org/spacemanspiff2007/dotli.svg?branch=master)](https://travis-ci.com/spacemanspiff2007/dotli)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dotli)](https://github.com/spacemanspiff2007/dotli)\n[![PyPI](https://img.shields.io/pypi/v/dotli)](https://github.com/spacemanspiff2007/dotli)\n[![Downloads](https://pepy.tech/badge/dotli/month)](https://pepy.tech/project/dotli/month)\n\nYet another library for flattening structures\n\n## Installation\n```bash\npip install dotli\n```\n\n## Usage\n\n### flatten\n\n```python\nfrom dotli import Dotli\n\ndata = {\n    'a': {\n        'c': 'val1',\n        'd': 'val2',\n    },\n    'b': {\n        'c': 2,\n        'd': {'key3': 'val3', 'key4': 'val4'},\n    }\n}\n\nd = Dotli()                 # create an obj with a default configuration\nflat = d.flatten(data)      # flatten\norig = d.unflatten(flat)    # unflatten\nassert data == orig\nprint(flat)\n```\n\n```python\n{\n  'a.c': 'val1',\n  'a.d': 'val2',\n  'b.c': 2,\n  'b.d.key3': 'val3',\n  'b.d.key4': 'val4',\n}\n```\n\nThe separator can be configured\n```python\ndata = {\n    'a': {'c': 'd'},\n    'b': {'e': 'f'}\n}\n\nd = Dotli(separator='-')\nprint(d.flatten(data))\n```\n\n```python\n{\n  'a-c': 'd',\n  'b-e': 'f',\n}\n```\n\nIt is also possible to flatten lists and a mixture of lists and dicts\n\n```python\ndata = {\n    'a': {\n        'c': [1, 2, 3],\n        'd': ['e1', 'e2', 'e3'],\n    },\n    'b': 'h'\n}\n\nd = Dotli()\nprint(d.flatten(data))\n```\n\n```python\n{\n  'a.c.0': 1,\n  'a.c.1': 2,\n  'a.c.2': 3,\n  'a.d.0': 'e1',\n  'a.d.1': 'e2',\n  'a.d.2': 'e3',\n  'b': 'h',\n}\n```\n\nList indices can be wrapped in square brackets to allow numerical strings in dicts as keys\n\n```python\ndata = {\n    'a': {\n        '1': [1, 2, 3],\n        '2': ['e1', 'e2', 'e3'],\n    },\n    'b': 'h'\n}\n\nd = Dotli(list_brackets=True)\nflat = d.flatten(data)\norig = d.unflatten(flat)\nassert data == orig\nprint(flat)\n```\n\n```python\n{\n  'a.1.[0]': 1,\n  'a.1.[1]': 2,\n  'a.1.[2]': 3,\n  'a.2.[0]': 'e1',\n  'a.2.[1]': 'e2',\n  'a.2.[2]': 'e3',\n  'b': 'h',\n}\n```\n\n\nThere will be a nice error message if the dict can not be flattened including the path to the invalid element.\n\n```python\nfrom dotli.errors import SeparatorInKeyError\n\ndata = {\n    'a': {\n        'b.b': 1,\n    },\n    'b': 'h'\n}\ntry:\n    Dotli().flatten(data)\nexcept SeparatorInKeyError as e:\n    print(e)\n```\n\n```\nSeparator \".\" is in key \"b.b\"! @ root.a\n```\n\n### unflatten\n\nWhen elements are missing in a list Dotli will throw an error\n\n```python\nfrom dotli.errors import IncompleteListError\n\ndata = {\n    'a.0': 0,\n    'a.2': 2,\n}\ntry:\n    d = Dotli()\n    d.unflatten(data)\nexcept IncompleteListError as e:\n    print(e)\n```\n\n```\nNo entry for index \"1\" in list! @ a\n```\n\nHowever it is possible to specify a fill value \nwhich will automatically be inserted into the list for missing entries\n\n```python\ndata = {\n    'a.0': 0,\n    'a.2': 2,\n}\n\nd = Dotli(fill_value_list=None)\nprint(d.unflatten(data))\n```\n\n```python\n{\n  'a': [0, None, 2],\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/spacemanspiff2007/dotli",
    "keywords": "json,flatten,unflatten,unpack",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotli",
    "package_url": "https://pypi.org/project/dotli/",
    "platform": "",
    "project_url": "https://pypi.org/project/dotli/",
    "project_urls": {
      "GitHub": "https://github.com/spacemanspiff2007/dotli",
      "Homepage": "https://github.com/spacemanspiff2007/dotli"
    },
    "release_url": "https://pypi.org/project/dotli/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An easy way to flatten and unflatten dicts and lists",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8567891,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1e6932a8b420ab454c3722af7de98f6704aba9e3236090f9ef36ed05c22d1bf",
        "md5": "85303338d6c6860768e294a000b4c5cd",
        "sha256": "e029fba79d0550916d64ca923a5f83cf52ee96a428ed378a66756b07c6532dfb"
      },
      "downloads": -1,
      "filename": "dotli-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85303338d6c6860768e294a000b4c5cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8235,
      "upload_time": "2020-11-03T05:03:45",
      "upload_time_iso_8601": "2020-11-03T05:03:45.940789Z",
      "url": "https://files.pythonhosted.org/packages/d1/e6/932a8b420ab454c3722af7de98f6704aba9e3236090f9ef36ed05c22d1bf/dotli-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a450a6159e01f605228cb7c649c3af5c7ae3ae8090663a5b587b4d1e5bfcffa5",
        "md5": "9ef8a3fcae56a09cc7dbd728d5bff265",
        "sha256": "0491bac4aa428a8ee611adb9cbf8a3358e21213de1e6231b5048beefdb726113"
      },
      "downloads": -1,
      "filename": "dotli-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9ef8a3fcae56a09cc7dbd728d5bff265",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4954,
      "upload_time": "2020-11-03T05:03:47",
      "upload_time_iso_8601": "2020-11-03T05:03:47.615557Z",
      "url": "https://files.pythonhosted.org/packages/a4/50/a6159e01f605228cb7c649c3af5c7ae3ae8090663a5b587b4d1e5bfcffa5/dotli-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}