{
  "info": {
    "author": "Pedro Tavares",
    "author_email": "web@ptavares.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-inlineedit\n\nInline editing for Django models\n\n\n## Installation\n\n1. Use pip to install the latest stable release\n\n    `pip install django-inlineedit`\n\n   OR\n\n   Run the following command inside the top-level cloned repository:\n\n   'easy_install .'\n2. Add `inlineedit` to `INSTALLED_APPS` in the project settings (see dependencies below)\n\n3. Add `path(<url for form submission>, include('inlineedit.urls'))` to the base URLs\n\n    django-inlineedit will use any URL you specify, make sure it does not conflict with\n    existing URLs in your app!\n\n\n## Quickstart\n\nIn your templates add the django-inlineedit JS in a suitable location (for example at the bottom of the template `<body>`):\n    {% load inlineedit %}\n    {% inlineedit_default_script %}\n\nThen load the template tags with:\n\n    {% load inlineedit %}\n\nto add inline editing to a field, you use the `inlineedit` template tag. For example:\n\n    {% inlineedit \"my_object.my_field\" %}\n\nThis will add the HTML and JS necessary to edit `my_field` in object `my_object`. without any further configuration, the tag will display the field and show the editing link when the mouse hover over the field. A single click will open up an editing element and accept/reject buttons. Click the former to accept any changes and the latter to cancel those.\n\n\n## Custom Adaptors\n\nThe adaptors mediate how django-inlineedit interprets various kinds of fields and template forms or widgets. Users can define their own adaptors to support new types of fields and widgets.\n\nTo create a new adaptor create a class that derives from `inlineedit.adaptors.basic.BasicAdaptor` and re-implement its methods as required. most often you will want to rewrite `form_field` and/or `display_value`. These functions respectively return the form field and HTML reprentation of the editable field. the specialist adaptors provided for markdown inputs and to support the CKEditor WYSIWYG editor are good examples to start with.\n\nOnce your custome adaptor has been created, register it in the project settings file by defining the `INLINEEDIT_ADAPTORS` dictionary. for example:\n\n    INLINEEDIT_ADAPTORS = {\n        \"custom\": \"main.adaptors.ExampleCustomAdaptor\",\n    }\n\nFinally, you refer to the new adaptor by its `INLINEEDIT_ADAPTORS` key. for example:\n\n    {% inlineedit \"my_object.my_custom_field\" \"custom\" %}\n\n\n## Dependencies:\n\nRequired jquery 3.3.1 or higher installed.\n\n\n### Support for integration with other libraries (optional)\n\n1. django-reversions\n\n    No configuration is needed, django-inlineedit will simply use django-reversion as long \n    as your models are decorated with @reversion.register()\n\n2. Django-CKEditor\n\n    Version 5.9.0 or higher is required for the CKEditor adaptor to work. for example:\n\n        {% inlineedit \"my_object.my_field\" \"ckeditor\" %}\n\n    Or\n\n        {% inlineedit \"my_object.my_field\" \"ckeditor\" \"toolbar\" %}\n\n\n2. Markdown\n\n    The Python library Markdown is required for the adaptor to work\n\n        {% inlineedit \"my_object.my_field\" \"markdown\" %}\n\n\n## Running examples\n\n1. cd into the root directory of the example you want to run (under the examples folder)\n2. run `python3 manage.py migrate` to setup a local sqlite3 database.\n3. run `python3 manage.py runserver` to start a local development server for the example.\n\n\n## Open source licenses\n\nThis product depends on the following software and media packages\n\nBootstrap version 4.0 is licensed under the [MIT License](http://opensource.org/licenses/mit-license.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ptav/django-inlineedit",
    "keywords": "django,forms,editing",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-inlineedit",
    "package_url": "https://pypi.org/project/django-inlineedit/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-inlineedit/",
    "project_urls": {
      "Homepage": "https://github.com/ptav/django-inlineedit"
    },
    "release_url": "https://pypi.org/project/django-inlineedit/1.1/",
    "requires_dist": [
      "django"
    ],
    "requires_python": "",
    "summary": "Add inline editble fields to your templates",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12528395,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c972455b0b0eefbae083f2e84003d060a3687fe11deaf91b101c2179492732e2",
        "md5": "54bf65bafba5c9dae75b0fcdac1a080a",
        "sha256": "f5a91e8c54672872db0b6c0ac3d85c376fe30d55d5190c6b8ba2d21510a68709"
      },
      "downloads": -1,
      "filename": "django_inlineedit-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54bf65bafba5c9dae75b0fcdac1a080a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18156,
      "upload_time": "2020-05-01T17:50:47",
      "upload_time_iso_8601": "2020-05-01T17:50:47.234318Z",
      "url": "https://files.pythonhosted.org/packages/c9/72/455b0b0eefbae083f2e84003d060a3687fe11deaf91b101c2179492732e2/django_inlineedit-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9307e0ea7649b6bd9e50f66d79dad74eeb6003515f40358f1ea82bee8ad8b20c",
        "md5": "fc481f1eee45d92c21cbc171b723b356",
        "sha256": "65fee8dffdf806c4be60942878b5328eb636f4de20dbd746865aa01754da2f51"
      },
      "downloads": -1,
      "filename": "django-inlineedit-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fc481f1eee45d92c21cbc171b723b356",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11373,
      "upload_time": "2020-05-01T17:50:48",
      "upload_time_iso_8601": "2020-05-01T17:50:48.701467Z",
      "url": "https://files.pythonhosted.org/packages/93/07/e0ea7649b6bd9e50f66d79dad74eeb6003515f40358f1ea82bee8ad8b20c/django-inlineedit-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}