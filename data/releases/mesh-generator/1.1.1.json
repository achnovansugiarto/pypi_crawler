{
  "info": {
    "author": "Predictive Science Inc",
    "author_email": "oissan@predsci.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "This is a collection of Python subroutines and examples that illustrate how to build a\n1D Mesh with custom mesh spacing. The meshes created in the package can be used for variety of applications, including\nphysical simulation.\n\n## Installation\n\n    pip install mesh-generator\n\n## Dependencies\n    python >= 3.5.0 \n    numpy >= 1.15.2 \n    matplotlib >= 3.0.0 \n    scipy >= 1.1.0\n    h5py >= 2.8.0 \n    tk >= 8.6.0 \n    pyhdf >= 0.9.10\n\n## Usage\nThis an example for creating a 1D theta mesh. Read the comments inside the python scripts for more details.\n\n- **Step 1** : Input mesh requirements. Make sure to specify:\n\n    Mesh:\n\n  - Set `lower_bnd` and `upper_bnd` limits of mesh.\n\n  - Set `periodic`.\n\n  - Set `DEFAULT_BG_REGION_RATIO` - Ratio in areas without ds constraint. (Optional)\n\n  - Set `DEFAULT_FG_REGION_RATIO` - Ratio in areas with ds constraint. (Optional)\n\n   Mesh segment:\n\n  - Set `s0` and `s1` for segment domain limits.\n\n  - Set `ds` to the resolution you want.\n\n  - Set `var_ds_ratio` as segment maximum cell to cell mesh expansion ratio. (Optional)\n\n```python \nfrom mesh_generator import Mesh\nfrom mesh_generator import MeshSegment\nimport numpy \n\n# ratio in regions you do not care about. (Default is 1.06)\nMeshSegment.DEFAULT_BG_REGION_RATIO = 1.06 \n\n# ratio in regions you do care about. (Default is 1.03) \nMeshSegment.DEFAULT_FG_REGION_RATIO = 1.03  \n\n# mesh boundaries and if periodic. \nmesh = Mesh(lower_bnd=0.00, upper_bnd=numpy.pi, periodic=False) \n\n# Mesh segment requirements:\n# s0 - segment begin, s1- segment end, ds- mesh spacing\n# (Optional) var_ds_ratio- the maximum ratio between each point in the mesh segment. \nmesh.insert_mesh_segment(MeshSegment(s0=1.10, s1=1.40, ds=0.01, var_ds_ratio=1.05))\nmesh.insert_mesh_segment(MeshSegment(s0=1.30, s1=1.90, ds=0.02))\nmesh.insert_mesh_segment(MeshSegment(s0=0.40, s1=2.80, ds=0.04, var_ds_ratio=1.02))\n```  \n\n- **Step 2**: Get final mesh and write results.      \n\n```python \nadjusted_mesh = mesh.resolve_mesh_segments().json_dict()\nlegacy_mesh = mesh.build_legacy_mesh().json_dict()\ncreate_psi_mesh(adjusted_mesh, legacy_mesh, mesh_type=\"t\", dir_name=os.getcwd(),\n     output_file_name=\"tmp_mesh_t.dat\", mesh_res_file_name=\"mesh_res_t.dat\",\n     save_plot=True, show_plot=True, save_plot_path=os.getcwd(), plot_file_name=\"t_mesh_spacing.png\")\n```\n\n### Mesh Generator User Interface\n```python\nfrom mesh_generator import MeshGeneratorUI\nMeshGeneratorUI()\n```\n\n## License\n[Apache](http://www.apache.org/licenses/LICENSE-2.0)\n\n\n## Authors\n[Predictive Science Inc.](https://www.predsci.com/portal/home.php)\n\n- Opal Issan (oissan@predsci.com)\n- Cooper Downs (cdowns@predsci.com)\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/predsci/mesh_generator",
    "keywords": "Mesh Generation,Grid",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mesh-generator",
    "package_url": "https://pypi.org/project/mesh-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/mesh-generator/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/predsci/mesh_generator"
    },
    "release_url": "https://pypi.org/project/mesh-generator/1.1.1/",
    "requires_dist": [
      "numpy (>=1.15.2)",
      "matplotlib (>=3.0.0)",
      "scipy (>=1.1.0)",
      "tk (>=8.6.0)",
      "pyhdf (>=0.9.10)",
      "h5py (>=2.8.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Python subroutines to create a 1D mesh in Python.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10122591,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5884f967fd83dff7e1927f8bcd2b132084aa149e781702893a0540c97b8b2cc",
        "md5": "e7cd4c6287e1352aa9520d413b13b044",
        "sha256": "153f435477400334a4d5686817a3c71f4920a5f3abd5d633480e27b400db082a"
      },
      "downloads": -1,
      "filename": "mesh_generator-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7cd4c6287e1352aa9520d413b13b044",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 65187,
      "upload_time": "2020-08-27T16:27:41",
      "upload_time_iso_8601": "2020-08-27T16:27:41.174861Z",
      "url": "https://files.pythonhosted.org/packages/e5/88/4f967fd83dff7e1927f8bcd2b132084aa149e781702893a0540c97b8b2cc/mesh_generator-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "276da62016c375519cb120ef225a0f7ee19af0531bfbc70c8745ffa6c8f9582f",
        "md5": "56e3d0e611e29c83ccca876908e4285e",
        "sha256": "355130e3364b474917d9e9cbcb2249caa6e2ab059a569a72efb35c920e674acc"
      },
      "downloads": -1,
      "filename": "mesh_generator-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "56e3d0e611e29c83ccca876908e4285e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 56328,
      "upload_time": "2020-08-27T16:27:43",
      "upload_time_iso_8601": "2020-08-27T16:27:43.874778Z",
      "url": "https://files.pythonhosted.org/packages/27/6d/a62016c375519cb120ef225a0f7ee19af0531bfbc70c8745ffa6c8f9582f/mesh_generator-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}