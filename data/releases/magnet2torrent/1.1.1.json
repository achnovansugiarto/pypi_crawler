{
  "info": {
    "author": "Anders Jensen",
    "author_email": "johndoee@tridentstream.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Magnet2Torrent\n\nPure python project to turn a magnet link into a .torrent file.\nThe goal is to do it as fast as possible.\n\n## Getting Started\n\n### Installing\n\n```bash\npip install magnet2torrent\n```\n\n### Usage\n\nDownload an ubuntu iso torrent.\n\n```bash\nmagnet2torrent fetch \"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso&tr=https%3A%2F%2Ftorrent.ubuntu.com%2Fannounce&tr=https%3A%2F%2Fipv6.torrent.ubuntu.com%2Fannounce\"\n```\n\nRun it as an HTTP server.\n\n\n```bash\nmagnet2torrent serve\n```\n\nRun it as an HTTP server with lots of features enabled.\n\n```bash\nmagnet2torrent --use-dht --dht-state-file dht.state --torrent-cache-folder torcache serve --apikey secretkey\n```\n\nUse from python\n\n```python\nimport asyncio\n\nfrom magnet2torrent import Magnet2Torrent, FailedToFetchException\n\nasync def fetch_that_torrent():\n    m2t = Magnet2Torrent(\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso&tr=https%3A%2F%2Ftorrent.ubuntu.com%2Fannounce&tr=https%3A%2F%2Fipv6.torrent.ubuntu.com%2Fannounce\")\n    try:\n        filename, torrent_data = await m2t.retrieve_torrent()\n    except FailedToFetchException:\n        print(\"Failed\")\n\nasyncio.run(fetch_that_torrent())\n```\n\nIf you want to use DHT to retrieve, you will have to bootstrap and run it.\n\n```python\n\nimport asyncio\nimport os\n\nfrom magnet2torrent import Magnet2Torrent, FailedToFetchException, settings\n\n\nDHT_STATE_FILE = \"/tmp/dht.state\"\n\nasync def start_dht():\n    if os.path.exists(DHT_STATE_FILE):\n        dht_server = DHTServer.load_state(DHT_STATE_FILE)\n        await dht_server.listen(settings.DHT_PORT)\n    else:\n        dht_server = DHTServer()\n        await dht_server.listen(settings.DHT_PORT)\n        await dht_server.bootstrap(settings.DHT_BOOTSTRAP_NODES)\n    return dht_server\n\nasync def fetch_that_torrent(dht_server):\n    m2t = Magnet2Torrent(\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso\", dht_server=dht_server)\n    try:\n        filename, torrent_data = await m2t.retrieve_torrent()\n    except FailedToFetchException:\n        print(\"Failed\")\n\ndht_server = asyncio.run(start_dht())\nasyncio.run(fetch_that_torrent(dht_server))\ndht_server.save_state(DHT_STATE_FILE)\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\nThe DHT part is forked from [bmueller/kademlia](https://github.com/bmuller/kademlia/) - its license can be\nfound in the dht folder or in the original project.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JohnDoee/magnet2torrent",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magnet2torrent",
    "package_url": "https://pypi.org/project/magnet2torrent/",
    "platform": "",
    "project_url": "https://pypi.org/project/magnet2torrent/",
    "project_urls": {
      "Homepage": "https://github.com/JohnDoee/magnet2torrent"
    },
    "release_url": "https://pypi.org/project/magnet2torrent/1.1.1/",
    "requires_dist": [
      "aiohttp (==3.6.*)",
      "six (>=1.13.0)",
      "expiringdict (>=1.2.0)"
    ],
    "requires_python": "",
    "summary": "Turn a bittorrent magnet links into a .torrent file.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7561317,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa3a0f81ea87b11e3ff7d9d8bb0fb008a5717d91d653e5bd45a3d451cd025b60",
        "md5": "390d126077c5f89101576f5ec9434b14",
        "sha256": "e2bdc96d48308fd13a7fdfa190402cde0eaf8694a0099e4687e960b4a66abe3a"
      },
      "downloads": -1,
      "filename": "magnet2torrent-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "390d126077c5f89101576f5ec9434b14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28145,
      "upload_time": "2020-06-25T15:38:16",
      "upload_time_iso_8601": "2020-06-25T15:38:16.359822Z",
      "url": "https://files.pythonhosted.org/packages/aa/3a/0f81ea87b11e3ff7d9d8bb0fb008a5717d91d653e5bd45a3d451cd025b60/magnet2torrent-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "979f5de676fd0cab3796075f3e3b2051b18f2c9ad6594fe92a3e5f2ca78f8db8",
        "md5": "951197d72735c772e2cf87035257eb5f",
        "sha256": "a483e9225a150403c10f48df8825e1dff45793113e9f6e9cb6864875b8a94c08"
      },
      "downloads": -1,
      "filename": "magnet2torrent-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "951197d72735c772e2cf87035257eb5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21656,
      "upload_time": "2020-06-25T15:38:18",
      "upload_time_iso_8601": "2020-06-25T15:38:18.043062Z",
      "url": "https://files.pythonhosted.org/packages/97/9f/5de676fd0cab3796075f3e3b2051b18f2c9ad6594fe92a3e5f2ca78f8db8/magnet2torrent-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}