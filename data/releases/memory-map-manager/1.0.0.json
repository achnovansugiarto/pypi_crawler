{
  "info": {
    "author": "Kevin Weiss",
    "author_email": "kevin.weiss@haw-hamburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# memory_map_manager\nManages memory map generation in C, python and documentation written in python3.\n\n# Installation\n\n## Install from pip\nStable versions can be installed with:\n```\npip install memory-map-manager\n```\n\n## Install from source\nTo install or update from sources checkout the repo and run:\n```\npython setup.py install --user -f\n```\n\n# Usage\n\nInstalling the package comes with a console command `generate_map`.\n\n```\ngenerate_map --help\nusage: generate_map [-h] [--config-path CONFIG_PATH] [--output-config OUTPUT_CONFIG] [--output-dir OUTPUT_DIR] [--output-csv OUTPUT_CSV]\n                    [--reset-config] [--only-update-config] [--print-date] [--print-config]\n                    [--loglevel {debug,info,warning,error,fatal,critical}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --config-path CONFIG_PATH, -P CONFIG_PATH\n                        The path to the config file or directory\n  --output-config OUTPUT_CONFIG, -c OUTPUT_CONFIG\n                        The path and name of the output config file\n  --output-dir OUTPUT_DIR, -D OUTPUT_DIR\n                        The path for all generated output\n  --output-csv OUTPUT_CSV, -o OUTPUT_CSV\n                        The path for the csv memory map\n  --reset-config, -r    Do not copy previous non-generated mem map values\n  --only-update-config, -u\n                        Only updates config file without generating files\n  --print-date, -d      prints the date in all headers\n  --print-config, -p    Prints the config to stdout\n  --loglevel {debug,info,warning,error,fatal,critical}\n                        Python logger log level, defaults to \"info\"\n```\n\nTypically one would have a config fitting the [schema](memory_map_manager/data/mem_map_schema.json) and generate .c and .h files from it.\n\nAn [example](example_typedef.json) shows how to format and what the memory map will look like.\nNote that only the `metadata`, `typedef`, and `bitfields` must be populated as the `memory_map` can be populated based on that information.\n\n\n# Testing\n\nProcedure for changes to example_typedef.json (please verify first)\n```\npython3 -m memory_map_manager.code_gen -P example_typedef.json -c example_typedef.json -u\n```\n\nTo run the full test suite and linter use:\n```\ntox\n```\n\nTo run just the test\n```\npython setup.py pytest\n```\n\nReset regression test\n```\npython3 setup.py test --addopts --regtest-reset\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/riot-appstore/memory_map_manager",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memory-map-manager",
    "package_url": "https://pypi.org/project/memory-map-manager/",
    "platform": "any",
    "project_url": "https://pypi.org/project/memory-map-manager/",
    "project_urls": {
      "Homepage": "https://github.com/riot-appstore/memory_map_manager"
    },
    "release_url": "https://pypi.org/project/memory-map-manager/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A generator that unifies interfaces for memory maps",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15772393,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "227f41850e4d2457d16ffbc21b91d3541157edaa1f1dc10269421b99d77e8e6f",
        "md5": "a3f6990d16c73b6509ec5dd29f59ea73",
        "sha256": "c6d8b2b1c195b4dab25d47375ea5615cc8310a733561056f4bec128ba78670ff"
      },
      "downloads": -1,
      "filename": "memory_map_manager-1.0.0.zip",
      "has_sig": false,
      "md5_digest": "a3f6990d16c73b6509ec5dd29f59ea73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20850,
      "upload_time": "2021-01-16T21:37:29",
      "upload_time_iso_8601": "2021-01-16T21:37:29.176341Z",
      "url": "https://files.pythonhosted.org/packages/22/7f/41850e4d2457d16ffbc21b91d3541157edaa1f1dc10269421b99d77e8e6f/memory_map_manager-1.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}