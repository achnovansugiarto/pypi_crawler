{
  "info": {
    "author": "Henrique Bastos",
    "author_email": "henrique@bastos.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "Django Decouple: Strict separation of settings from code\n========================================================\n\n*Decouple* helps you to organize your settings so that you can\nchange parameters without having to redeploy your app.\n\nIt also makes easy for you to:\n\n#. store parameters on *ini* or *.env* files;\n#. define comprehensive default values;\n#. properly convert values to the correct data type;\n#. have **only one** ``settings.py`` to rule all your instances.\n\n.. image:: https://travis-ci.org/henriquebastos/django-decouple.png?branch=master\n    :target: https://travis-ci.org/henriquebastos/django-decouple\n\nWhy?\n----\n\nDjango's settings stores many different kinds of parameters:\n\n* Locale and i18n;\n* Middlewares and Installed Apps;\n* Resource handles to the database, Memcached, and other backing services;\n* Credentials to external services such as Amazon S3 or Twitter;\n* Per-deploy values such as the canonical hostname for the instance.\n\nThe first 2 are *project settings* the last 3 are *instance settings*.\n\nYou should be able to change *instance settings* without redeploying your app.\n\nWhat about environment variables?\n---------------------------------\n\n*Envvars* works, but since ``os.environ`` only returns strings, it's tricky.\n\nLet's say you have an *envvar* ``DEBUG=False``. If you run:\n\n.. code-block:: python\n\n    if os.environ['DEBUG']:\n        print True\n    else:\n        print False\n\nIt will print **True**, because ``os.environ['DEBUG']`` returns the **string** ``\"False\"``.\n\n*Decouple* provides a solution that doesn't look like a workaround: ``config('DEBUG', cast=bool)``.\n\nInstall\n-------\n\n.. code-block:: console\n\n    pip install django-decouple\n\nUsage\n-----\n\nOn your ``settings.py``.\n\n#. Import the ``config`` object:\n\n   .. code-block:: python\n\n     from decouple import config\n\n#. Retrieve the configuration parameters:\n\n   .. code-block:: python\n\n     SECRET_KEY = config('SECRET_KEY')\n     DEBUG = config('DEBUG', default=False, cast=bool)\n     EMAIL_HOST = config('EMAIL_HOST', default='localhost')\n     EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)\n\nWhere the settings data are stored?\n-----------------------------------\n\n*Decouple* supports both *.ini* and *.env* files.\n\nIni file\n~~~~~~~~~\n\nSimply create a ``settings.ini`` next to your ``settings.py`` in the form:\n\n.. code-block:: ini\n\n    [settings]\n    DEBUG=True\n    TEMPLATE_DEBUG=%(DEBUG)s\n    SECRET_KEY=ARANDOMSECRETKEY\n    DATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\n    PERCENTILE=90%%\n\n*Note*: Since ``ConfigParser`` supports *string interpolation*, to represent the character ``%`` you need to escape it as ``%%``.\n\nEnv file\n~~~~~~~~~\n\nSimply create a ``.env`` text file on your repository's root directory in the form:\n\n.. code-block:: console\n\n    DEBUG=True\n    TEMPLATE_DEBUG=True\n    SECRET_KEY=ARANDOMSECRETKEY\n    DATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\n    PERCENTILE=90%\n\nHow do I use it?\n----------------\n\nGiven that I have a ``.env`` file at my repository root directory, here is a snippet of my ``settings.py``.\n\nI also recommend using `unipath <https://pypi.python.org/pypi/Unipath>`_\nand `dj-datatabase-url <https://pypi.python.org/pypi/dj-database-url/>`_.\n\n.. code-block:: python\n\n    # coding: utf-8\n    from decouple import config\n    from unipath import Path\n    from dj_database_url import parse as db_url\n\n\n    BASE_DIR = Path(__file__).parent\n\n    DEBUG = config('DEBUG', default=False, cast=bool)\n    TEMPLATE_DEBUG = DEBUG\n\n    DATABASES = {\n        'default': config(\n            'DATABASE_URL',\n            default='sqlite:///' + BASE_DIR.child('db.sqlite3'),\n            cast=db_url\n        )\n    }\n\n    TIME_ZONE = 'America/Sao_Paulo'\n    USE_L10N = True\n    USE_TZ = True\n\n    SECRET_KEY = config('SECRET_KEY')\n\n    EMAIL_HOST = config('EMAIL_HOST', default='localhost')\n    EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)\n    EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\n    EMAIL_HOST_USER = config('EMAIL_HOST_USER')\n    EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)\n\n    # ...\n\nHow it works?\n-------------\n\n*Decouple* is made of 3 classes:\n\n- ``ConfigIni``\n\n    Can read and write ini files.\n\n- ``ConfigEnv``\n\n    Can read ``.env`` files and when a parameter does not exist there,\n    it tries to find it on ``os.environ``.\n\n    This process does **not** change nor add any environment variables.\n\n- ``AutoConfig``\n\n    Recursively searches up your ``settings.py`` path looking for a\n    ``settings.ini`` or a ``.env`` file.\n\nThe **config** object is a default instance of ``AutoConfig`` to improve\n*decouple*'s usage.\n\nIf you prefer or need to explicitly define your storage file, directly use\n``ConfigIni`` or ``ConfigEnv``.\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Henrique Bastos <henrique at bastos dot net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/henriquebastos/django-decouple/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-decouple",
    "package_url": "https://pypi.org/project/django-decouple/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-decouple/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/henriquebastos/django-decouple/"
    },
    "release_url": "https://pypi.org/project/django-decouple/2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Strict separation of settings from code.",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1011167,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b3587681234d6aee16e9baedacbfbdc77ea2ef6cba083838e49790acc9ff59d",
        "md5": "2f98581c5ee6ed8ac0fe32be181eaee9",
        "sha256": "28ab6e44e35beb4006da1679189bf50abc981a22f8040b7397a0807620794f85"
      },
      "downloads": -1,
      "filename": "django-decouple-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2f98581c5ee6ed8ac0fe32be181eaee9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5905,
      "upload_time": "2013-11-25T00:18:17",
      "upload_time_iso_8601": "2013-11-25T00:18:17.101019Z",
      "url": "https://files.pythonhosted.org/packages/9b/35/87681234d6aee16e9baedacbfbdc77ea2ef6cba083838e49790acc9ff59d/django-decouple-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}