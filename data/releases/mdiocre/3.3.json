{
  "info": {
    "author": "Zumi Daxuya",
    "author_email": "daxuya.zumi+mdiocre@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# MDiocre\n\n![MDiocre](logo.svg)\n\nA very simple static website generator tool powered by Python. It primarily converts Markdown files and combines it with an HTML template, but can be extended to other markup.\n\n## Requirements\n\n* Python 3 (`python-markdown` + `py-gfm`)\n\n## Other Requirements\n\n**ReStructuredText** (RST) support requires `docutils` to be installed.\n\nIf you want to build the **documentation**, you will have to install Sphinx as well.\n\n## What sets it apart from other tools?\n\nIt's terrible and it doesn't have a profitable and pragmatic usecase in mind, but it works okay. For my needs, anyway. It's alright for simple blogs with no tagging and very simple static websites.\n\n## How do I make a site with this?\n\n1. Install `mdiocre` by using the command: `python3 -m pip install mdiocre`.\n\n2. Create a work folder. Let's call it `work`.\n\n3. Make a file called `template.html` inside that folder with these contents:\n   \n   ```\n   <html>\n   <head>Welcome to my website!</head>\n   <body><!--:content--></body>\n   </html>\n   ```\n\n4. Create a folder called `src`, and make a file inside of it called `index.md`, and write anything on it.\n\n5. After your content (or before, it doesn't matter), add: `<!--:mdiocre-template=\"../template.html\"-->`\n\n6. Go back a level to your `work` folder. Assuming Python is present in your PATH (environment variable), create a new text document containing:\n   \n   ```\n   python3 -m mdiocre.interface.cli src build\n   ```\n   \n   Save it inside the folder as a .bat if you're on Windows, or as a .sh if you're on Mac, Linux, or other Unix-like systems. Double click or execute it.\n\n7. Check the `build` folder.\n\n## Variables\n\nMDiocre allows setting variables. These variables are per-page, and can be read by the template. Both the template and the markdown page share the same format for templates - which are HTML comments with the first character after the markup being the colon (:)\n\n**Setting a variable to a string**\n\n```\n<!--: hello = \"test message\" -->\n```\n\nSimply sets `hello` to `test message`. When using a comma, make sure to escape it with \\\\!\n\n**Setting a variable to another variable**\n\n```\n<!--: hello = lemons -->\n```\n\nIf `lemons` is `1` then `hello` will also be `1`. If `lemons` is not set, `hello` will contain the string `lemons`.\n\n**Concatenating two or more variables**\n\n```\n<!--: lemons = hello, hello -->\n```\n\nIf `hello` contains `abc` then `lemons` will contain `abcabc`. However, if you also include a space string in between, like this...\n\n```\n<!-- lemons = hello, \" \", hello -->\n```\n\n`lemons` will contain `abc abc`!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zumi.neocities.org/stuff/mdiocre",
    "keywords": "converter,generator,markdown,html,static",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdiocre",
    "package_url": "https://pypi.org/project/mdiocre/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdiocre/",
    "project_urls": {
      "Homepage": "https://zumi.neocities.org/stuff/mdiocre"
    },
    "release_url": "https://pypi.org/project/mdiocre/3.3/",
    "requires_dist": [
      "markdown",
      "py-gfm"
    ],
    "requires_python": "",
    "summary": "Static website generator",
    "version": "3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15448163,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ca7f1b37f57be409c062557d35b94016ef27c89ed46bf0685520086827e437c",
        "md5": "b3dd040498664cfe7957df08d2fd3e95",
        "sha256": "ac64c1c3e8307821de16c9c3b89c323157c70f7287a923806b8ce31054164da8"
      },
      "downloads": -1,
      "filename": "mdiocre-3.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3dd040498664cfe7957df08d2fd3e95",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20647,
      "upload_time": "2021-08-24T16:37:17",
      "upload_time_iso_8601": "2021-08-24T16:37:17.290793Z",
      "url": "https://files.pythonhosted.org/packages/6c/a7/f1b37f57be409c062557d35b94016ef27c89ed46bf0685520086827e437c/mdiocre-3.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f48058b6c6eda0b5450aa7ba725e03fba11a7633d7d99568c5081ffbb0cdb78",
        "md5": "c50eb7d0a2e53c241784b3075a92ed33",
        "sha256": "edeff8aa0aa2bc2278a2d961e6fccdf848ba2a94ffe00593cd14e2f2dd493e33"
      },
      "downloads": -1,
      "filename": "mdiocre-3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c50eb7d0a2e53c241784b3075a92ed33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20024,
      "upload_time": "2021-08-24T16:37:20",
      "upload_time_iso_8601": "2021-08-24T16:37:20.057347Z",
      "url": "https://files.pythonhosted.org/packages/1f/48/058b6c6eda0b5450aa7ba725e03fba11a7633d7d99568c5081ffbb0cdb78/mdiocre-3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}