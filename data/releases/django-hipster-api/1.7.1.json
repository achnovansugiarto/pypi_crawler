{
  "info": {
    "author": "vir-mir",
    "author_email": "virmir49@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# hipster_api\nwrapper django rest framework\n\n## Применение\nДля удобства использования restapi в вашем проекте\n\nПодключение\n```python\nINSTALLED_APPS = (\n...\n'rest_framework',\n'hipster_api',\n)\nTEMPLATE_DIRS = (\n    os.path.join(os.path.dirname(__file__), '..', 'templates').replace('\\\\', '/'),\n)\n```\n\n\n## Пример views\n```python\nfrom hipster_api import fields as hfields\nfrom hipster_api.views import HView\n\n\nclass QuestsView(HView):\n    \"\"\"\n    Работа с постами\n    \"\"\"\n\n    class Fields(object):\n        fields = hfields.FieldsListResponse(verbose_name=u'Список полей через запятую', methods=['get'])\n        offset = hfields.IntegerLarger(default=0, larger=0, glt=True, methods=['get'])\n        limit = hfields.IntegerLarger(default=20, larger=0, methods=['get'])\n        active = hfields.IntegerList(default=u'0,1', methods=['get'])\n        \n        name = hfields.String(verbose_name=u'Название поста', default=u'', methods=['put'])\n        description = hfields.String(verbose_name=u'Название поста', default=u'', methods=['put'])\n\n    def get(self, request, format=None):\n        \"\"\"\n        Получение постов\n        :public:\n        \"\"\"\n        fields = ['id'] + self.objects.fields\n        posts = Post.objects.values(*fields).filter(active__in=self.objects.active)[self.objects.offset:self.objects.limit]\n        \n        return Response(quests)\n        \n    def put(self, request, format=None):\n        \"\"\"\n        Создание поста\n        :private только админа:\n        \"\"\"\n        \n        Post(name=self.objects.name, description=self.objects.description).save()\n        return Response(status=202)\n        \n```\n\n### запросы\n```\nGET /api/v1/posts.json?fields=name\nGET /api/v1/posts.json?fields=name,description\n\nPUT /api/v1/posts.json\nname = 'тест'\ndescription = 'тес тест'\n\n```\n\n## Собираем документацию \n`python manage.py hipster_api_doc`\n\n### вывод в шаблоне \n\n```html\n{% block container %}\n    <div class=\"row\">\n        <div class=\"col-md-9\" role=\"main\">\n            {% if file_name %}\n                {% include file_name %}\n            {% endif %}\n        </div>\n        <div class=\"col-md-3\" role=\"complementary\">\n            <nav class=\"affix\">\n                <ul class=\"nav\">\n                    {% include 'docs/menu2.html' %}\n                </ul>\n\n            </nav>\n        </div>\n    </div>\n{% endblock %}\n```\n\n`file_name` - должен путь к доке `docs/files/...`\n\n# реализованные поля\n\n* [x] String\n* [x] StringList\n* [x] FieldsListResponse\n* [x] Integer\n* [x] IntegerLarger\n* [x] IntegerList\n* [x] IntegerLess\n* [x] Float\n* [x] FloatLess\n* [x] FloatLarger\n* [x] FloatList\n* [x] Boolean\n* [x] DateTime\n* [x] Date\n* [x] JsonField",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RustoriaRu/hipster_api",
    "keywords": "django rest framework",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_hipster_api",
    "package_url": "https://pypi.org/project/django_hipster_api/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_hipster_api/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/RustoriaRu/hipster_api"
    },
    "release_url": "https://pypi.org/project/django_hipster_api/1.7.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "wrapper django rest framework",
    "version": "1.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1873660,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7d3a7fdb58683f00b0432e101c0f298049113137d05f4f480492179e3632d6d",
        "md5": "58f699391306d4d38b142618d01fdaae",
        "sha256": "243bf51273ba0947dfe83f12cc277aaecccbd378e2c98904ecb30f84bd6ec2cd"
      },
      "downloads": -1,
      "filename": "django_hipster_api-1.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "58f699391306d4d38b142618d01fdaae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9046,
      "upload_time": "2015-10-08T12:09:58",
      "upload_time_iso_8601": "2015-10-08T12:09:58.309918Z",
      "url": "https://files.pythonhosted.org/packages/a7/d3/a7fdb58683f00b0432e101c0f298049113137d05f4f480492179e3632d6d/django_hipster_api-1.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}