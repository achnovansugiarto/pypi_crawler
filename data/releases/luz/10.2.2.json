{
  "info": {
    "author": "Ki-Jana Carter",
    "author_email": "kijana@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==========\nLuz Module\n==========\n\n.. image:: https://codecov.io/gh/kijanac/luz/branch/main/graph/badge.svg\n  :target: https://codecov.io/gh/kijanac/luz\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github\n\n**Lightweight framework for structuring arbitrary reproducible neural network learning procedures using PyTorch.**\n\nPyTorch code can easily become complex, unwieldy, and difficult to understand as a project develops. Luz aims to provide a common scaffold for PyTorch code in order to minimize boilerplate, maximize readability, and maintain the flexibility of PyTorch itself.\n\nThe basis of Luz is the Runner, an abstraction representing batch-wise processing of data over multiple epochs. Runner has predefined hooks to which code can be attached and a State which can be manipulated to define essentially arbitrary behavior. These hooks can be used to compose multiple Runners into a single algorithm, enabling dataset preprocessing, model testing, and other common tasks.\n\nTo further reduce boilerplate, the Learner abstraction is introduced as shorthand for the extremely common Preprocess-Train-Validate-Test algorithm. Simply inherit luz.Learner and define a handful of methods to completely customize your learning algorithm.\n\nTwo additional abstractions are provided for convenience: Scorers, which score (i.e. evaluate) a Learner according to some predefined procedure, and Tuners, which tune Learner hyperparameters. These abstractions provide a common interface which makes model selection a two-line process.\n\n---------------\nGetting Started\n---------------\n\nInstalling\n----------\nFrom `pip <https://pypi.org/project/luz/>`_:\n\n``pip install luz``\n\nFrom `conda <https://anaconda.org/kijana/luz>`_:\n\n``conda install -c conda-forge -c pytorch -c kijana luz``\n\nDocumentation\n-------------\nSee documentation `here <https://kijanac.github.io/luz/>`_.\n\nExamples\n--------\nSee example scripts in `Examples <https://github.com/kijanac/luz/tree/main/examples>`_.\n\n-------\nAuthors\n-------\nKi-Jana Carter\n\n-------\nLicense\n-------\nThis project is licensed under the MIT License - see the `LICENSE <https://github.com/kijanac/luz/blob/main/LICENSE>`_ file for details.\n\n------------\nContributing\n------------\nSee `CONTRIBUTING <https://github.com/kijanac/luz/blob/main/CONTRIBUTING.rst>`_.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kijanac/luz",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "luz",
    "package_url": "https://pypi.org/project/luz/",
    "platform": "",
    "project_url": "https://pypi.org/project/luz/",
    "project_urls": {
      "Homepage": "https://github.com/kijanac/luz",
      "Repository": "https://github.com/kijanac/luz"
    },
    "release_url": "https://pypi.org/project/luz/10.2.2/",
    "requires_dist": [
      "matplotlib (>=3.3.2,<4.0.0)",
      "torch (>=1.7.0,<2.0.0)",
      "scipy (>=1.7.2,<2.0.0)",
      "pyee (>=9.0.3,<10.0.0)"
    ],
    "requires_python": ">=3.9,<3.11",
    "summary": "Lightweight framework for structuring arbitrary reproducible neural network learning procedures using PyTorch.",
    "version": "10.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12751304,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "543a8cd9b616fcbe273625961ca3e6c01d81cd87ff7c69b3af357125fc241809",
        "md5": "e2c3c697b47b6f355e173970a92f486e",
        "sha256": "1772f3573e2bddc14b4ffef609be828216290794cb79ddd78134ac864924382b"
      },
      "downloads": -1,
      "filename": "luz-10.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2c3c697b47b6f355e173970a92f486e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<3.11",
      "size": 26042,
      "upload_time": "2022-01-24T22:04:13",
      "upload_time_iso_8601": "2022-01-24T22:04:13.888245Z",
      "url": "https://files.pythonhosted.org/packages/54/3a/8cd9b616fcbe273625961ca3e6c01d81cd87ff7c69b3af357125fc241809/luz-10.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96f0ae2e4429651e6f6f1e16b2b754107deead9610a34ddf772b7e9e05f49c15",
        "md5": "d548ed1a23545e0cfe76d47ffbb123d0",
        "sha256": "d9bc41bf8b24e7a0cdf5da5dabdf86d4e932045685f5e37b733e3d48550e481a"
      },
      "downloads": -1,
      "filename": "luz-10.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d548ed1a23545e0cfe76d47ffbb123d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<3.11",
      "size": 23646,
      "upload_time": "2022-01-24T22:04:15",
      "upload_time_iso_8601": "2022-01-24T22:04:15.506526Z",
      "url": "https://files.pythonhosted.org/packages/96/f0/ae2e4429651e6f6f1e16b2b754107deead9610a34ddf772b7e9e05f49c15/luz-10.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}