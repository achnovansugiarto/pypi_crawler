{
  "info": {
    "author": "Tao Liu",
    "author_email": "vladimir.liu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# MACS: Model-based Analysis for ChIP-Seq\n\n![Status](https://img.shields.io/pypi/status/macs2.svg) [![License](https://img.shields.io/github/license/taoliu/MACS)](https://github.com/taoliu/MACS/blob/master/LICENSE) ![Programming languages](https://img.shields.io/github/languages/top/taoliu/MACS) ![Commit activity](https://img.shields.io/github/commit-activity/m/taoliu/MACS) [![TravisCI Build Status](https://img.shields.io/travis/com/taoliu/MACS/master)](https://travis-ci.com/taoliu/MACS)\n\n[![PyPI download](https://img.shields.io/pypi/dm/macs2?label=pypi%20downloads)](https://pypistats.org/packages/macs2) [![Bioconda download](https://img.shields.io/conda/dn/bioconda/macs2?label=bioconda%20downloads)](https://anaconda.org/bioconda/macs2)\n\nLatest Release:\n* Github: [![Github Release](https://img.shields.io/github/v/release/taoliu/MACS)](https://github.com/taoliu/MACS/releases)\n* PyPI: [![PyPI Release](https://img.shields.io/pypi/v/macs2.svg) ![PyPI Python Version](https://img.shields.io/pypi/pyversions/MACS2) ![PyPI Format](https://img.shields.io/pypi/format/macs2)](https://pypi.org/project/macs2/)\n* Bioconda: [![Bioconda Release](https://img.shields.io/conda/v/bioconda/macs2) ![Bioconda Platform](https://img.shields.io/conda/pn/bioconda/macs2)](https://anaconda.org/bioconda/macs2)\n* Debian Med: [![Debian Stable](https://img.shields.io/debian/v/macs/stable?label=debian%20stable)](https://packages.debian.org/stable/macs) [![Debian Unstable](https://img.shields.io/debian/v/macs/sid?label=debian%20sid)](https://packages.debian.org/sid/macs)\n\n## Introduction\n\nWith the improvement of sequencing techniques, chromatin\nimmunoprecipitation followed by high throughput sequencing (ChIP-Seq)\nis getting popular to study genome-wide protein-DNA interactions. To\naddress the lack of powerful ChIP-Seq analysis method, we presented\nthe **M**odel-based **A**nalysis of **C**hIP-**S**eq (MACS), for\nidentifying transcript factor binding sites. MACS captures the\ninfluence of genome complexity to evaluate the significance of\nenriched ChIP regions and MACS improves the spatial resolution of\nbinding sites through combining the information of both sequencing tag\nposition and orientation. MACS can be easily used for ChIP-Seq data\nalone, or with a control sample with the increase of\nspecificity. Moreover, as a general peak-caller, MACS can also be\napplied to any \"DNA enrichment assays\" if the question to be asked is\nsimply: *where we can find significant reads coverage than the random\nbackground*.\n\n## Recent Changes for MACS (2.2.7)\n\n### 2.2.7\n\t* Bugs fixed\n\n\t1) MACS2 has been tested on multiple architectures to make sure it\n\tcan successfully generate consistent results. Currently the\n\tsupported architectures are: AMD64, ARM64, i386, PPC64LE, and\n\tS390X. Thanks to @mr-c, @junaruga, and @tillea! Related to issue\n\t#340, #349, #351, and #359; to PR #348, #350, #360, #361, #367,\n\tand #370. The lesson is that if the project is built on Cython and\n\tis aimed at memory efficiency, we should specifically define all\n\tint/float types in pyx files such as int8_t or uint32_t using\n\teither libc or numpy (c version) instead of relying on Cython\n\ttypes such as short, long, double.\n\n\t2) MACS2 setup script will check numpy and install numpy if\n\tnecessary. PR #378, issue #364\n\n\t3) `bdgbroadcall` command will correctly add the score column (5th\n\tcolumn). The score (5th) column contains 10 times of the average\n\tscore in the broad region. PR #373, issue #362\n\n\t4) The missing test on `bdgopt` subcommand has been added. PR #363\n\n\t5) The obsolete option `--ratio` from `callpeak` subcommand has\n\tbeen removed. PR #369, issue #366\n\n\t6) Fixed the incorrect description in README on the 'maximum\n\tlength of broad region is 4 times of d' to 'maximum gap for\n\tmerging broad regions is 4 times of tag size by default'. PR #380,\n\tissue #365.\n\n\t* Other\n\n\t1) CODE OF CONDUCT document has been added to MACS2 github\n\trepository. PR #358\n\n### 2.2.6\n\t* New Features \n\n\t1) Speed up MACS2. Some programming tricks and code cleanup. The \n\tfilter_dup function replaces separate_dups. The later one was \n\timplemented for potentially putting back duplicate reads in \n\tcertain downstream analysis. However such analysis hasn't been \n\timplemented. Optimize speed of writing bedGraph files. Optimize \n\tBAM and BAMPE parsing with pointer casting instead of python \n\tunpack. \n\n\t2) The comment lines in the headers of BED or SAM files will be\n\tcorrectly skipped. However, MACS2 won't check comment lines in the\n\tmiddle of the file.\n\n\t* Bugs fixed \n\n\t1) Cutoff-analysis in callpeak command. #341\n\t\n\t2) Issues related to SAMParser and three ELAND Parsers are\n\tfixed. #347\n\t\n\t* Other \n\n\t1) cmdlinetest script in test/ folder has been updated to: 1. test \n\tcutoff-analysis with callpeak cmd; 2. output the 2 lines before \n\tand after the error or warning message during tests; 3. output \n\tonly the first 10 lines if the difference between test result and \n\tstandard result can be found; 4. prockreport monitor CPU time and \n\tmemory usage in 1 sec interval -- a bit more accurate.\n\t\n\t2) Python3.5 support is removed. Now MACS2 requires Python>=3.6.\n\n## Install\n\nPlease check the file 'INSTALL.md' in the distribution.\n\n## Usage\n\n```\nmacs2 [-h] [--version]\n    {callpeak,bdgpeakcall,bdgbroadcall,bdgcmp,bdgopt,cmbreps,bdgdiff,filterdup,predictd,pileup,randsample,refinepeak}\n```\n\nExample for regular peak calling: `macs2 callpeak -t ChIP.bam -c\nControl.bam -f BAM -g hs -n test -B -q 0.01`\n\nExample for broad peak calling: `macs2 callpeak -t ChIP.bam -c\nControl.bam --broad -g hs --broad-cutoff 0.1`\n\nThere are twelve functions available in MAC2S serving as sub-commands.\n\nSubcommand | Description\n-----------|----------\n`callpeak` | Main MACS2 Function to call peaks from alignment results.\n`bdgpeakcall` | Call peaks from bedGraph output.\n`bdgbroadcall` | Call broad peaks from bedGraph output.\n`bdgcmp` | Comparing two signal tracks in bedGraph format.\n`bdgopt` | Operate the score column of bedGraph file.\n`cmbreps` | Combine BEDGraphs of scores from replicates.\n`bdgdiff` | Differential peak detection based on paired four bedGraph files.\n`filterdup` | Remove duplicate reads, then save in BED/BEDPE format.\n`predictd` | Predict d or fragment size from alignment results.\n`pileup` | Pileup aligned reads (single-end) or fragments (paired-end)\n`randsample` | Randomly choose a number/percentage of total reads.\n`refinepeak` | Take raw reads alignment, refine peak summits.\n\nWe only cover `callpeak` subcommand in this document. Please use\n`macs2 COMMAND -h` to see the detail description for each option of\neach subcommand.\n\n### Call peaks\n\nThis is the main function in MACS2. It can be invoked by `macs2\ncallpeak` . If you type this command with `-h`, you will see a full\ndescription of command-line options. Here we only list the essentials.\n\n#### Essential Options\n\n##### `-t`/`--treatment FILENAME`\n\nThis is the only REQUIRED parameter for MACS. The file can be in any\nsupported format -- see detail in the `--format` option. If you have\nmore than one alignment file, you can specify them as `-t A B C`. MACS\nwill pool up all these files together.\n\n##### `-c`/`--control`\n\nThe control, genomic input or mock IP data file. Please follow the\nsame direction as for `-t`/`--treatment`.\n\n##### `-n`/`--name`\n\nThe name string of the experiment. MACS will use this string NAME to\ncreate output files like `NAME_peaks.xls`, `NAME_negative_peaks.xls`,\n`NAME_peaks.bed` , `NAME_summits.bed`, `NAME_model.r` and so on. So\nplease avoid any confliction between these filenames and your existing\nfiles.\n\n##### `--outdir`\n\nMACS2 will save all output files into the specified folder for this\noption. A new folder will be created if necessary.\n\n##### `-f`/`--format FORMAT`\n\nFormat of tag file can be `ELAND`, `BED`, `ELANDMULTI`, `ELANDEXPORT`,\n`SAM`, `BAM`, `BOWTIE`, `BAMPE`, or `BEDPE`. Default is `AUTO` which\nwill allow MACS to decide the format automatically. `AUTO` is also\nuseful when you combine different formats of files. Note that MACS\ncan't detect `BAMPE` or `BEDPE` format with `AUTO`, and you have to\nimplicitly specify the format for `BAMPE` and `BEDPE`.\n\nNowadays, the most common formats are `BED` or `BAM` (including\n`BEDPE` and `BAMPE`). Our recommendation is to convert your data to\n`BED` or `BAM` first.\n\nAlso, MACS2 can detect and read gzipped file. For example, `.bed.gz`\nfile can be directly used without being uncompressed with `--format\nBED`.\n\nHere are detailed explanation of the recommanded formats:\n\n###### `BED`\n\nThe BED format can be found at [UCSC genome browser\nwebsite](http://genome.ucsc.edu/FAQ/FAQformat#format1).\n\nThe essential columns in BED format input are the 1st column\n`chromosome name`, the 2nd `start position`, the 3rd `end position`,\nand the 6th, `strand`.\n\nNote that, for `BED` format, the 6th column of strand information is\nrequired by MACS. And please pay attention that the coordinates in BED\nformat are zero-based and half-open. See more detail at\n[UCSC site](http://genome.ucsc.edu/FAQ/FAQtracks#tracks1).\n\n###### `BAM`/`SAM`\n\nIf the format is `BAM`/`SAM`, please check the definition in\n(http://samtools.sourceforge.net/samtools.shtml).  If the `BAM` file is\ngenerated for paired-end data, MACS will only keep the left mate(5'\nend) tag. However, when format `BAMPE` is specified, MACS will use the\nreal fragments inferred from alignment results for reads pileup.\n\n###### `BEDPE` or `BAMPE`\n\nA special mode will be triggered while the format is specified as\n`BAMPE` or `BEDPE`. In this way, MACS2 will process the `BAM` or `BED`\nfiles as paired-end data. Instead of building a bimodal distribution\nof plus and minus strand reads to predict fragment size, MACS2 will\nuse actual insert sizes of pairs of reads to build fragment pileup.\n\nThe `BAMPE` format is just a `BAM` format containing paired-end alignment\ninformation, such as those from `BWA` or `BOWTIE`.\n\nThe `BEDPE` format is a simplified and more flexible `BED` format,\nwhich only contains the first three columns defining the chromosome\nname, left and right position of the fragment from Paired-end\nsequencing. Please note, this is NOT the same format used by\n`BEDTOOLS`, and the `BEDTOOLS` version of `BEDPE` is actually not in a\nstandard `BED` format. You can use MACS2 subcommand `randsample` to\nconvert a `BAM` file containing paired-end information to a `BEDPE`\nformat file:\n\n```\nmacs2 randsample -i the_BAMPE_file.bam -f BAMPE -p 100 -o the_BEDPE_file.bed\n```\n\n##### `-g`/`--gsize`\n\nPLEASE assign this parameter to fit your needs!\n\nIt's the mappable genome size or effective genome size which is\ndefined as the genome size which can be sequenced. Because of the\nrepetitive features on the chromosomes, the actual mappable genome\nsize will be smaller than the original size, about 90% or 70% of the\ngenome size. The default *hs* -- 2.7e9 is recommended for human\ngenome. Here are all precompiled parameters for effective genome size:\n\n * hs: 2.7e9\n * mm: 1.87e9\n * ce: 9e7\n * dm: 1.2e8\n\nUsers may want to use k-mer tools to simulate mapping of Xbps long\nreads to target genome, and to find the ideal effective genome\nsize. However, usually by taking away the simple repeats and Ns from\nthe total genome, one can get an approximate number of effective\ngenome size. A slight difference in the number won't cause a big\ndifference of peak calls, because this number is used to estimate a\ngenome-wide noise level which is usually the least significant one\ncompared with the *local biases* modeled by MACS.\n\n##### `-s`/`--tsize`\n\nThe size of sequencing tags. If you don't specify it, MACS will try to\nuse the first 10 sequences from your input treatment file to determine\nthe tag size. Specifying it will override the automatically determined\ntag size.\n\n##### `-q`/`--qvalue`\n\nThe q-value (minimum FDR) cutoff to call significant regions. Default\nis 0.05. For broad marks, you can try 0.05 as the cutoff. Q-values are\ncalculated from p-values using the Benjamini-Hochberg procedure.\n\n##### `-p`/`--pvalue`\n\nThe p-value cutoff. If `-p` is specified, MACS2 will use p-value instead\nof q-value.\n\n##### `--min-length`, `--max-gap`\n\nThese two options can be used to fine-tune the peak calling behavior\nby specifying the minimum length of a called peak and the maximum\nallowed a gap between two nearby regions to be merged. In other words,\na called peak has to be longer than `min-length`, and if the distance\nbetween two nearby peaks is smaller than `max-gap` then they will be\nmerged as one. If they are not set, MACS2 will set the DEFAULT value\nfor `min-length` as the predicted fragment size `d`, and the DEFAULT\nvalue for `max-gap` as the detected read length. Note, if you set a\n`min-length` value smaller than the fragment size, it may have NO\neffect on the result. For broad peak calling with `--broad` option\nset, the DEFAULT `max-gap` for merging nearby stronger peaks will be\nthe same as narrow peak calling, and 4 times of the `max-gap` will be\nused to merge nearby weaker (broad) peaks. You can also use\n`--cutoff-analysis` option with the default setting, and check the\ncolumn `avelpeak` under different cutoff values to decide a reasonable\n`min-length` value.\n\n##### `--nolambda`\n\nWith this flag on, MACS will use the background lambda as local\nlambda. This means MACS will not consider the local bias at peak\ncandidate regions.\n\n##### `--slocal`, `--llocal`\n\nThese two parameters control which two levels of regions will be\nchecked around the peak regions to calculate the maximum lambda as\nlocal lambda. By default, MACS considers 1000bp for small local\nregion(`--slocal`), and 10000bps for large local region(`--llocal`)\nwhich captures the bias from a long-range effect like an open\nchromatin domain. You can tweak these according to your\nproject. Remember that if the region is set too small, a sharp spike\nin the input data may kill a significant peak.\n\n##### `--nomodel`\n\nWhile on, MACS will bypass building the shifting model.\n\n##### `--extsize`\n\nWhile `--nomodel` is set, MACS uses this parameter to extend reads in\n5'->3' direction to fix-sized fragments. For example, if the size of\nthe binding region for your transcription factor is 200 bp, and you\nwant to bypass the model building by MACS, this parameter can be set\nas 200. This option is only valid when `--nomodel` is set or when MACS\nfails to build model and `--fix-bimodal` is on.\n\n##### `--shift`\n\nNote, this is NOT the legacy `--shiftsize` option which is replaced by\n`--extsize`! You can set an arbitrary shift in bp here. Please Use\ndiscretion while setting it other than the default value (0). When\n`--nomodel` is set, MACS will use this value to move cutting ends (5')\nthen apply `--extsize` from 5' to 3' direction to extend them to\nfragments. When this value is negative, ends will be moved toward\n3'->5' direction, otherwise 5'->3' direction. Recommended to keep it\nas default 0 for ChIP-Seq datasets, or -1 * half of *EXTSIZE* together\nwith `--extsize` option for detecting enriched cutting loci such as\ncertain DNAseI-Seq datasets. Note, you can't set values other than 0\nif the format is BAMPE or BEDPE for paired-end data. The default is 0.\n\nHere are some examples for combining `--shift` and `--extsize`:\n\n1. To find enriched cutting sites such as some DNAse-Seq datasets. In\nthis case, all 5' ends of sequenced reads should be extended in both\ndirections to smooth the pileup signals. If the wanted smoothing\nwindow is 200bps, then use `--nomodel --shift -100 --extsize 200`.\n\n2. For certain nucleosome-seq data, we need to pile up the centers of\nnucleosomes using a half-nucleosome size for wavelet analysis\n(e.g. NPS algorithm). Since the DNA wrapped on nucleosome is about\n147bps, this option can be used: `--nomodel --shift 37 --extsize 73`.\n\n##### `--keep-dup`\n\nIt controls the MACS behavior towards duplicate tags at the exact same\nlocation -- the same coordination and the same strand. The default\n`auto` option makes MACS calculate the maximum tags at the exact same\nlocation based on binomial distribution using 1e-5 as p-value cutoff;\nand the `all` option keeps every tag.  If an integer is given, at most\nthis number of tags will be kept at the same location. The default is\nto keep one tag at the same location. Default: 1\n\n##### `--broad`\n\nWhen this flag is on, MACS will try to composite broad regions in\nBED12 ( a gene-model-like format ) by putting nearby highly enriched\nregions into a broad region with loose cutoff. The broad region is\ncontrolled by another cutoff through `--broad-cutoff`. Please note\nthat, the `max-gap` value for merging nearby weaker/broad peaks is 4\ntimes of `max-gap` for merging nearby stronger peaks. The later one\ncan be controlled by `--max-gap` option, and by default it is the\naverage fragment/insertion length in the PE data. DEFAULT: False\n\n##### `--broad-cutoff`\n\nCutoff for the broad region. This option is not available unless\n`--broad` is set. If `-p` is set, this is a p-value cutoff, otherwise,\nit's a q-value cutoff.  DEFAULT: 0.1\n\n##### `--scale-to <large|small>`\n\nWhen set to `large`, linearly scale the smaller dataset to the same\ndepth as the larger dataset. By default or being set as `small`, the\nlarger dataset will be scaled towards the smaller dataset. Beware, to\nscale up small data would cause more false positives.\n\n##### `-B`/`--bdg`\n\nIf this flag is on, MACS will store the fragment pileup, control\nlambda in bedGraph files. The bedGraph files will be stored in the\ncurrent directory named `NAME_treat_pileup.bdg` for treatment data,\n`NAME_control_lambda.bdg` for local lambda values from control.\n\n##### `--call-summits`\n\nMACS will now reanalyze the shape of signal profile (p or q-score\ndepending on the cutoff setting) to deconvolve subpeaks within each\npeak called from the general procedure. It's highly recommended to\ndetect adjacent binding events. While used, the output subpeaks of a\nbig peak region will have the same peak boundaries, and different\nscores and peak summit positions.\n\n##### `--buffer-size`\n\nMACS uses a buffer size for incrementally increasing internal array\nsize to store reads alignment information for each chromosome or\ncontig. To increase the buffer size, MACS can run faster but will\nwaste more memory if certain chromosome/contig only has very few\nreads. In most cases, the default value 100000 works fine. However, if\nthere are a large number of chromosomes/contigs in your alignment and\nreads per chromosome/contigs are few, it's recommended to specify a\nsmaller buffer size in order to decrease memory usage (but it will\ntake longer time to read alignment files). Minimum memory requested\nfor reading an alignment file is about # of CHROMOSOME * BUFFER_SIZE *\n8 Bytes. DEFAULT: 100000\n\n#### Output files\n\n1. `NAME_peaks.xls` is a tabular file which contains information about\n   called peaks. You can open it in excel and sort/filter using excel\n   functions. Information include:\n   \n    - chromosome name\n    - start position of peak\n    - end position of peak\n    - length of peak region\n    - absolute peak summit position\n    - pileup height at peak summit\n    - -log10(pvalue) for the peak summit (e.g. pvalue =1e-10, then\n      this value should be 10)\n    - fold enrichment for this peak summit against random Poisson\n      distribution with local lambda,\n    - -log10(qvalue) at peak summit\n   \n   Coordinates in XLS is 1-based which is different from BED\n   format. When `--broad` is enabled for broad peak calling, the\n   pileup, p-value, q-value, and fold change in the XLS file will be\n   the mean value across the entire peak region, since peak summit\n   won't be called in broad peak calling mode.\n\n2. `NAME_peaks.narrowPeak` is BED6+4 format file which contains the\n   peak locations together with peak summit, p-value, and q-value. You\n   can load it to the UCSC genome browser. Definition of some specific\n   columns are:\n   \n   - 5th: integer score for display. It's calculated as\n     `int(-10*log10pvalue)` or `int(-10*log10qvalue)` depending on\n     whether `-p` (pvalue) or `-q` (qvalue) is used as score\n     cutoff. Please note that currently this value might be out of the\n     [0-1000] range defined in [UCSC ENCODE narrowPeak\n     format](https://genome.ucsc.edu/FAQ/FAQformat.html#format12). You\n     can let the value saturated at 1000 (i.e. p/q-value = 10^-100) by\n     using the following 1-liner awk: `awk -v OFS=\"\\t\"\n     '{$5=$5>1000?1000:$5} {print}' NAME_peaks.narrowPeak`\n   - 7th: fold-change at peak summit\n   - 8th: -log10pvalue at peak summit\n   - 9th: -log10qvalue at peak summit\n   - 10th: relative summit position to peak start\n   \n   The file can be loaded directly to the UCSC genome browser. Remove\n   the beginning track line if you want to analyze it by other tools.\n\n3. `NAME_summits.bed` is in BED format, which contains the peak\n   summits locations for every peak. The 5th column in this file is\n   the same as what is in the `narrowPeak` file. If you want to find\n   the motifs at the binding sites, this file is recommended. The file\n   can be loaded directly to the UCSC genome browser. Remove the\n   beginning track line if you want to analyze it by other tools.\n\n4. `NAME_peaks.broadPeak` is in BED6+3 format which is similar to\n   `narrowPeak` file, except for missing the 10th column for\n   annotating peak summits. This file and the `gappedPeak` file will\n   only be available when `--broad` is enabled. Since in the broad\n   peak calling mode, the peak summit won't be called, the values in\n   the 5th, and 7-9th columns are the mean value across all positions\n   in the peak region. Refer to `narrowPeak` if you want to fix the\n   value issue in the 5th column.\n\n5. `NAME_peaks.gappedPeak` is in BED12+3 format which contains both\n   the broad region and narrow peaks. The 5th column is the score for\n   showing grey levels on the UCSC browser as in `narrowPeak`. The 7th\n   is the start of the first narrow peak in the region, and the 8th\n   column is the end. The 9th column should be RGB color key, however,\n   we keep 0 here to use the default color, so change it if you\n   want. The 10th column tells how many blocks including the starting\n   1bp and ending 1bp of broad regions. The 11th column shows the\n   length of each block and 12th for the start of each block. 13th:\n   fold-change, 14th: *-log10pvalue*, 15th: *-log10qvalue*. The file can\n   be loaded directly to the UCSC genome browser. Refer to\n   `narrowPeak` if you want to fix the value issue in the 5th column.\n\n6. `NAME_model.r` is an R script which you can use to produce a PDF\n   image of the model based on your data. Load it to R by:\n\n   `$ Rscript NAME_model.r`\n\n   Then a pdf file `NAME_model.pdf` will be generated in your current\n   directory. Note, R is required to draw this figure.\n\n7. The `NAME_treat_pileup.bdg` and `NAME_control_lambda.bdg` files are\n   in bedGraph format which can be imported to the UCSC genome browser\n   or be converted into even smaller bigWig files. The\n   `NAME_treat_pielup.bdg` contains the pileup signals (normalized\n   according to `--scale-to` option) from ChIP/treatment sample. The\n   `NAME_control_lambda.bdg` contains local biases estimated for each\n   genomic location from the control sample, or from treatment sample\n   when the control sample is absent. The subcommand `bdgcmp` can be\n   used to compare these two files and make a bedGraph file of scores\n   such as p-value, q-value, log-likelihood, and log fold changes.\n\n## Other useful links\n\n * [Cistrome](http://cistrome.org/ap/)\n * [bedTools](http://code.google.com/p/bedtools/)\n * [UCSC toolkits](http://hgdownload.cse.ucsc.edu/admin/exe/)\n\n## Tips of fine-tuning peak calling\n\nThere are several subcommands within MACSv2 package to fine-tune or\ncustomize your analysis:\n\n1. `bdgcmp` can be used on `*_treat_pileup.bdg` and\n   `*_control_lambda.bdg` or bedGraph files from other resources to\n   calculate the score track.\n\n2. `bdgpeakcall` can be used on `*_treat_pvalue.bdg` or the file\n   generated from bdgcmp or bedGraph file from other resources to call\n   peaks with given cutoff, maximum-gap between nearby mergeable peaks\n   and a minimum length of peak. bdgbroadcall works similarly to\n   bdgpeakcall, however, it will output `_broad_peaks.bed` in BED12\n   format.\n\n3. Differential calling tool -- `bdgdiff`, can be used on 4 bedGraph\n   files which are scores between treatment 1 and control 1, treatment\n   2 and control 2, treatment 1 and treatment 2, treatment 2 and\n   treatment 1. It will output consistent and unique sites according\n   to parameter settings for minimum length, the maximum gap and\n   cutoff.\n\n4. You can combine subcommands to do a step-by-step peak calling. Read\n   detail at [MACS2\n   wikipage](https://github.com/taoliu/MACS/wiki/Advanced%3A-Call-peaks-using-MACS2-subcommands)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/taoliu/MACS/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MACS2",
    "package_url": "https://pypi.org/project/MACS2/",
    "platform": "",
    "project_url": "https://pypi.org/project/MACS2/",
    "project_urls": {
      "Homepage": "http://github.com/taoliu/MACS/"
    },
    "release_url": "https://pypi.org/project/MACS2/2.2.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Model Based Analysis for ChIP-Seq data",
    "version": "2.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7002241,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9939bf773ca90536809eddf670062fd113e3155099c4b6f802a501fc0163da9d",
        "md5": "d5cc37589a5714f8f690b4c346bf76e6",
        "sha256": "acb0fff44c620cf9c81c5db3c60c8b3e7ef3f67f230ef5b02ea0d89f00a34556"
      },
      "downloads": -1,
      "filename": "MACS2-2.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "d5cc37589a5714f8f690b4c346bf76e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2057582,
      "upload_time": "2020-04-11T23:20:03",
      "upload_time_iso_8601": "2020-04-11T23:20:03.516756Z",
      "url": "https://files.pythonhosted.org/packages/99/39/bf773ca90536809eddf670062fd113e3155099c4b6f802a501fc0163da9d/MACS2-2.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}