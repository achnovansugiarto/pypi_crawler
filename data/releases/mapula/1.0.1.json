{
  "info": {
    "author": "epi2melabs",
    "author_email": "epi2melabs@nanoporetech.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![Oxford Nanopore Technologies logo](https://github.com/epi2me-labs/mapula/raw/master/images/ONT_logo_590x106.png)\n\n\n# Mapula\n\nThis package provides a command line tool that is able to parse alignments in `SAM` format and produce a range of useful stats.\n\nMapula provides several subcommands, use `--help` with each\none to find detailed usage instructions.\n\n## Installation\nCount mapula can be installed following the usual Python tradition:\n```\npip install mapula\n```\n## Usage: count\n```\n$ mapula count -h\nusage: mapula [-h] [-s SAM] [-r [REFS [REFS ...]]] [-c [COUNTS [COUNTS ...]]] [-o SAM_OUT] [-j JSON_PATH]\n\nCount mapping stats from a SAM/BAM file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SAM, --sam SAM     Alignments in SAM format. By default, this script reads alignments from stdin. However, using this flag it is possible to pass in a file path.\n  -r [REFS [REFS ...]], --refs [REFS [REFS ...]]\n                        Provide reference .fasta files using the syntax: name=path_to_ref.\n  -c [COUNTS [COUNTS ...]], --counts [COUNTS [COUNTS ...]]\n                        Provide expected counts in csv format using the syntax: name=path_to_counts, where name should be equal to a name given to --refs.\n  -o SAM_OUT, --sam_out SAM_OUT\n                        Outputs a sam file from the parsed alignments. Use - for piping out. (default: None)\n  -j JSON_PATH, --json_path JSON_PATH\n                        Name of the output json (default: stats.mapula.json)\n```\n\nAn example invocation is as follows:\n\n```\nmapula gather -s aligned.sam -r host=reference_1.fasta spikein=reference_2.fasta -c spikein=counts.csv\n```\n\n### Expected counts\nThe expected counts CSVs should have the following column headings: \n\n`reference`, `expected_count` \n\nThe reference column should contain the ID of a sequence in the corresponding reference file. The expected_count column should equal the expected number of observations for that sequence.\n\n---\n### **Stats & Terminology**\nFor each alignment processed, `mapula count` updates various measurements.\n\n#### Simple metrics\n- alignment_count\n- read_count\n- primary_count\n- secondary_count\n- supplementary_count\n- total_base_pairs\n\n#### Distributions\n- avg. alignment accuracy\n- avg. read quality\n- avg. read length\n- reference coverage\n\n#### Derived\n- read n50\n- median accuracy\n- median quality\n- cov80_count\n- cov80_percent\n\nEach of these stats are tracked at two levels:\n\n2) **Group**: stats binned by group, i.e. run_id, barcode and reference file name\n3) **Reference**: stats for every reference observed within a group\n\nIn addition, at the **group** levels, we also track correlations and their p_values:\n\n- spearmans\n- spearmans_p\n- pearsons\n- pearsons_p\n\nBy default these correlations will be 0, unless a `.csv` containing expected counts is provided using `-e`.\n\n---\n### **Outputs**\nMapula gather writes out several outputs by default.\n\n#### JSON\nBy default, a `.json` file is produced, which has a nested structure, as per the levels described above:\n```\n# Top level\n{\n    [group_name]: {\n      ...group_stats,\n      references {\n        [reference_name]: {\n          ...reference_stats\n        },\n        ...other_references\n      }\n    },\n    ...other_groups\n}\n\n```\nThe default filename of the `.json` file is `stats.mapula.json`.\n\nThe `.json` file is designed to support detailed downstream analysis. It is possible to disable creating it, however, if it is uneeded.\n\n### CSV\nAlso by default, a set of `.csv` files are created which provide a more minimal representation of the stats collected at the 2 different levels.\n\nBy default, they are named:\n\n1) `groups.mapula.csv`\n2) `refs.mapula.csv`\n\nThey contain the same overall stats as the `.json` file, but without the inclusion of the frequency distributions for accuracy, coverage, read length and read quality. However, the stats derived from these distributions, i.e. read n50, median accuracy, median quality and cov80 are retained.\n\n---\n\nHelp\n----\n\n**Licence and Copyright**\n\nÂ© 2021- Oxford Nanopore Technologies Ltd.\n\n`mapula` is distributed under the terms of the Mozilla Public License 2.0.\n\n**Research Release**\n\nResearch releases are provided as technology demonstrators to provide early\naccess to features or stimulate Community development of tools. Support for\nthis software will be minimal and is only provided directly by the developers.\nFeature requests, improvements, and discussions are welcome and can be\nimplemented by forking and pull requests. However much as we would\nlike to rectify every issue and piece of feedback users may have, the\ndevelopers may have limited resource for support of this software. Research\nreleases may be unstable and subject to rapid iteration by Oxford Nanopore\nTechnologies.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/epi2me-labs/mapula",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapula",
    "package_url": "https://pypi.org/project/mapula/",
    "platform": "",
    "project_url": "https://pypi.org/project/mapula/",
    "project_urls": {
      "Homepage": "https://github.com/epi2me-labs/mapula"
    },
    "release_url": "https://pypi.org/project/mapula/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Calculation of alignment statistics",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10072353,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e37e6d284c506e2d060feec7915b538f683faa7dbd5a7e95a581299b6c247c20",
        "md5": "6c44e162ffa20e5167a4e5a9eff0f066",
        "sha256": "50f13ce1671b7e4c6c311d0b22536c0acb544b7392317b011bb0d43bbb4d5427"
      },
      "downloads": -1,
      "filename": "mapula-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c44e162ffa20e5167a4e5a9eff0f066",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20186,
      "upload_time": "2021-02-11T13:54:14",
      "upload_time_iso_8601": "2021-02-11T13:54:14.652159Z",
      "url": "https://files.pythonhosted.org/packages/e3/7e/6d284c506e2d060feec7915b538f683faa7dbd5a7e95a581299b6c247c20/mapula-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}