{
  "info": {
    "author": "epi2melabs",
    "author_email": "epi2melabs@nanoporetech.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![Oxford Nanopore Technologies logo](https://github.com/epi2me-labs/mapula/raw/master/images/ONT_logo_590x106.png)\n\n# Mapula\nThis package provides a command line tool that is able to parse alignments in `SAM` format and produce a range of useful stats.\n\nMapula provides several subcommands, use `--help` with each\none to find detailed usage instructions.\n\n[![install with bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat)](http://bioconda.github.io/recipes/mapula/README.html)\n\n## Installation\nCount mapula can be installed following the usual Python tradition:\n```\npip install mapula\n```\nOr via conda:\n```\nconda install mapula\n```\n\n## Usage\n\n```\n$ mapula -h\nusage: mapping-stats <command> [<args>]\"\n\nAvailable subcommands are:\n    count        Count mapping stats from a SAM/BAM file\n    merge        Combine mapula count's json outputs\n\nCollects stats from SAM/BAM files\n\npositional arguments:\n  command     Subcommand to run\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\nThe main subcommand command is `mapula count`. This command can accept one or several input `SAM` or `BAM` files and outputs mapping statistics.\n\nAlignments are grouped by user-specifiable criteria, `-s`. These aggregations can then be output in two formats using `-f`. The default `.csv` format is the most easily iterpretable for a quick glance, or for onward programmatic analysis the `.json` output contains a more in-depth view of the data.\n\n### Examples\n\n*Output some stats in `.csv` format containing mapping stats:*\n```\nmapula count <paths_to_sam_or_bam> -r <path_to_a_reference_fasta>\n```\n\n*Split stats only by `read_group` and `barcode`:*\n```\nmapula count <paths_to_sam_or_bam> -r <path_to_a_reference_fasta> -s barcode read_group\n```\n\n*Output some stats in both `.csv` and `.json` format:*\n```\nmapula count\n  <paths_to_sam_or_bam> -f all -r <path_to_a_reference_fasta> <path_to_a_reference_fasta>\n```\n\n*Accept multiple alignment and reference inputs*\n```\nmapula count\n  <paths_to_sam_or_bam> <paths_to_sam_or_bam> -r <path_to_a_reference_fasta> <path_to_a_reference_fasta>\n```\n\n*Receive some `SAM` or `BAM` from stdin, output stats in `.csv`, and pipe the `SAM` records onwards:*\n```\nminimap2 -y -ax map-ont <path_to_a_reference_fasta> *_reads.fastq \\\n  | mapula -r <path_to_a_reference_fasta> -f csv -p \\\n  | samtools sort -o sorted.aligned.bam\n```\n\n### Important: tags\n\nAt present, for access to `barcode`, `run_id`, `read_group`, mapula depends on tags being available within the input `SAM` records, as follows:\n- `barcode` = `bc`\n- `run_id` = `rd`\n- `read_group` = `rg`\n\nIf these are not available, Mapula will just provide a placeholder of `Unknown`. The minimap2 flag `-y` can carry information from the `.fastq`\nheader into the records it creates to faciliate this transfer of information.\n\n---\n\nHelp\n----\n\n**Licence and Copyright**\n\nÂ© 2021- Oxford Nanopore Technologies Ltd.\n\n`mapula` is distributed under the terms of the Mozilla Public License 2.0.\n\n**Research Release**\n\nResearch releases are provided as technology demonstrators to provide early\naccess to features or stimulate Community development of tools. Support for\nthis software will be minimal and is only provided directly by the developers.\nFeature requests, improvements, and discussions are welcome and can be\nimplemented by forking and pull requests. However much as we would\nlike to rectify every issue and piece of feedback users may have, the\ndevelopers may have limited resource for support of this software. Research\nreleases may be unstable and subject to rapid iteration by Oxford Nanopore\nTechnologies.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/epi2me-labs/mapula",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapula",
    "package_url": "https://pypi.org/project/mapula/",
    "platform": "",
    "project_url": "https://pypi.org/project/mapula/",
    "project_urls": {
      "Homepage": "https://github.com/epi2me-labs/mapula"
    },
    "release_url": "https://pypi.org/project/mapula/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Calculation of alignment statistics",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10072353,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33a9f195ae8e932df2c4622ab923a4b866b1c61d4c038b4df57e848052362e77",
        "md5": "55eed30d21a58b83d00385aa15e1d3b3",
        "sha256": "d64b5f7a3c94b3ba84b70d0aa14c54808c29add910c5b8582c1458ea36bd7250"
      },
      "downloads": -1,
      "filename": "mapula-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "55eed30d21a58b83d00385aa15e1d3b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17314,
      "upload_time": "2021-03-09T16:20:00",
      "upload_time_iso_8601": "2021-03-09T16:20:00.005305Z",
      "url": "https://files.pythonhosted.org/packages/33/a9/f195ae8e932df2c4622ab923a4b866b1c61d4c038b4df57e848052362e77/mapula-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}