{
  "info": {
    "author": "David Soh",
    "author_email": "ln@trth.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# dtTimeFrame\n\ndtTimeFrame is a module that pack **time track functions** and **subprocess call functions** into one single class.\n\n- Homepage: <https://github.com/SotongDJ/dtTimeFrame>\n\n## Install dtTimeFrame\n\n```bash\npip install dttimeframe\n```\n\n## Example codes\n\n### tag()\n\n```python\nfrom dtTimeFrame.timeFrame import tag # type: ignore\n\n# Initiation\nTool = tag()\nTool.log.name = \"log.txt\" # filename of the log file, store stdout info\nTool.error.name = \"err.txt\" # filename of the err file, store stderr info\nTool.extra.name = \"log.json\" # filename of the extra command record, store time stamp, commands and others info\n\n# start logging and write header into log/err files\nTool.start()\n\n# > your code insert here < \n\n# print time stamp with personalized msg\nTool.timeStamp(\"PREVIEW: show something you want to info\")\n\n# command runner, base on subprocess.call()\nphrase_str = F\"echo this command line\"\nTool.runCommand(phrase_str)\n\n# command runner with specific output file\nphrase_str = F\"echo this command line into specific output file: test.txt\"\nTool.runCommand(phrase_str,export_file=\"test.txt\")\n\n# > your code insert here < \n\n# end logging and write footer into log/err files \nTool.stop()\n```\n\n### detector()\n\n```python\nfrom dtTimeFrame.timeFrame import detector # type: ignore\n\nfile_be_process_handle = detector(print_func=print,call_func=print)\n# \"file_be_process_handle = detector(print_func=Tool.timeStamp,call_func=Tool.runCommand)\"\n# combine use with tag() \nfile_be_process_handle.do(target_str=\"target.txt\")\nif file_be_process_handle.missing(): # if target.txt missing?\n    with open(file_be_process_handle.doing_str,\"w\") as target_handle: # doing-target.txt\n        target_handle.write(\"Hello world\\n\")\n    file_be_process_handle.done() # rename doing-target.txt as target.txt\n\nprint(open(file_be_process_handle.target_str).read())\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SotongDJ/dtTimeFrame",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dttimeframe",
    "package_url": "https://pypi.org/project/dttimeframe/",
    "platform": null,
    "project_url": "https://pypi.org/project/dttimeframe/",
    "project_urls": {
      "Homepage": "https://github.com/SotongDJ/dtTimeFrame"
    },
    "release_url": "https://pypi.org/project/dttimeframe/3.6.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "dtTimeFrame is a module that pack time track functions and subprocess call functions into one single class.",
    "version": "3.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17504862,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cac217165eb289a7f7d68bc7fac92f15c7282db3e5288c88952862ed861b0af",
        "md5": "fff437466a8eed74a0d50dbe3822f0ea",
        "sha256": "c484226433daf46e5fdbc87ca085b20cb0d7a474c2f67b5b9bb129701f216cb8"
      },
      "downloads": -1,
      "filename": "dttimeframe-3.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fff437466a8eed74a0d50dbe3822f0ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17223,
      "upload_time": "2023-03-30T04:24:31",
      "upload_time_iso_8601": "2023-03-30T04:24:31.911463Z",
      "url": "https://files.pythonhosted.org/packages/5c/ac/217165eb289a7f7d68bc7fac92f15c7282db3e5288c88952862ed861b0af/dttimeframe-3.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "211d0dcd420c205d153d170e00e6eb051b23b45fcd27fb4a3ed79b7b904fa719",
        "md5": "13b51e644d1a7bb751d717853d877da2",
        "sha256": "2df6901924d224773eec3046f01835f0bb75095732139d73ad7e78a02aa71289"
      },
      "downloads": -1,
      "filename": "dttimeframe-3.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "13b51e644d1a7bb751d717853d877da2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16912,
      "upload_time": "2023-03-30T04:24:35",
      "upload_time_iso_8601": "2023-03-30T04:24:35.827406Z",
      "url": "https://files.pythonhosted.org/packages/21/1d/0dcd420c205d153d170e00e6eb051b23b45fcd27fb4a3ed79b7b904fa719/dttimeframe-3.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}