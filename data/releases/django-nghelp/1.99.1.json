{
  "info": {
    "author": "Hiroaki Yamamoto",
    "author_email": "hiroaki@hysoftware.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Angular and Angular Material Helper for Django\n==============================================\n\n`|Travis| <https://travis-ci.org/hiroaki-yamamoto/django-nghelp>`_\n`|Code\nClimate| <https://codeclimate.com/github/hiroaki-yamamoto/django-nghelp>`_\n`|Landscape| <https://landscape.io/github/hiroaki-yamamoto/django-nghelp/master>`_\n`|Coveralls| <https://coveralls.io/github/hiroaki-yamamoto/django-nghelp?branch=master>`_\n\nWhat This?\n==========\n\nThis repo contains code that help your AngularJS coding with Django.\n\nWhy I invented?\n===============\n\nWhen I started coding with Django and AngularJS, I needed to code the\nform to embed model like this:\n\n::\n\n    from django import forms\n    from .models import UserInfo\n\n    class UserInfoForm(forms.ModelForm):\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # They are already implemented because UserInfoForm inherit ModelForm\n        # and the target model has the fields.\n        widgets = {\n          \"age\": forms.NumberInput(attrs={\"data-ng-model\": \"model.age\"}),\n          \"phone\": forms.TextInput(attrs={\"data-ng-model\": \"model.phone\"}),\n          \"street\": forms.TextInput(attrs={\"data-ng-model\": \"model.street\"}),\n          \"city\": forms.TextInput(attrs={\"data-ng-model\": \"model.city\"}),\n          \"state\": forms.TextInput(attrs={\"data-ng-model\": \"model.state\"})\n        }\n\nAs you can see above, if you'd like to use AngularJS with django\nbuilt-in form, it needs to re-implement the fields that is already\nimplemented. If the forms to be implemented are few, it wouldn't be the\nproblem, if you need to implement many forms, you need to repeat above\nwidget re-implementation many times. This repo's code help to build\nAngularJS form like this:\n\n::\n\n    from django import forms\n    from django_nghelp.forms import AngularForm\n\n    class UserInfoForm(AngularForm, forms.ModelForm):\n      ng_model_prefix = \"model\" # Change this if you want to use other than \"model\"\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # Automatically generates AngularJS forms.\n\nFeatures\n========\n\nThis repo has 2 features of forms, and 4 widgets. For forms, they are\nimplemented for building AngularJS form, but the widgets are used for\n`Angular Material <https://material.angularjs.org>`_. `Angular\nMaterial <https://material.angularjs.org>`_:\nhttps://github.com/angular/material\n\nFeature 1: Angular form\n-----------------------\n\nAs you can see above sections, you'll need to implement redundant code:\n\n::\n\n    from django import forms\n    from .models import UserInfo\n\n    class UserInfoForm(forms.ModelForm):\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # They are already implemented because UserInfoForm inherit ModelForm\n        # and the target model has the fields.\n        widgets = {\n          \"age\": forms.NumberInput(attrs={\"data-ng-model\": \"model.age\"}),\n          \"phone\": forms.TextInput(attrs={\"data-ng-model\": \"model.phone\"}),\n          \"street\": forms.TextInput(attrs={\"data-ng-model\": \"model.street\"}),\n          \"city\": forms.TextInput(attrs={\"data-ng-model\": \"model.city\"}),\n          \"state\": forms.TextInput(attrs={\"data-ng-model\": \"model.state\"})\n        }\n\nHowever, you can implement simpler code by using ``AngularForm``:\n\n::\n\n    from django import forms\n    from django_nghelp.forms import AngularForm\n\n    class UserInfoForm(AngularForm, forms.ModelForm):\n      ng_model_prefix = \"model\" # Change this if you want to use other than \"model\"\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # Automatically generates AngularJS forms.\n\nFeature 2: All required forms\n-----------------------------\n\nIf you'd like to make all fields required on ModelForm, you will\nre-implement entire fields like this:\n\n::\n\n    from django import forms\n    from .models import UserInfo\n\n    class UserInfoForm(forms.ModelForm):\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n\n      # Assume that all fields are optional.\n      age = forms.IntegerField(\n        required=True,\n        widget=forms.NumberInput(attrs={\"data-ng-model\": \"model.age\"})\n      )\n      phone = forms.CharField(\n        required=True,\n        widget=forms.TextInput(attrs={\"data-ng-model\": \"model.phone\"})\n      )\n      street = forms.CharField(\n        required=True,\n        widget=forms.TextInput(attrs={\"data-ng-model\": \"model.street\"})\n      )\n      city = forms.CharField(\n        required=True,\n        widget=forms.TextInput(attrs={\"data-ng-model\": \"model.city\"})\n      )\n      state = forms.CharField(\n        required=True,\n        widget=forms.TextInput(attrs={\"data-ng-model\": \"model.state\"})\n      )\n\nMoreover, you will not be able to check if the field is proper unless\nyou refer Django's code. To reduce this time consumption, I implemented\n``AllReqiuredForm``:\n\n::\n\n    from django import forms\n    from django_nghelp.forms import AllRequiredForm\n    from .models import UserInfo\n\n    class UserInfoForm(AllRequiredForm, forms.ModelForm):\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # Assume that all fields are optional.\n\nBy using ``AllRequiredForm``, you can reduce your LOC like above. Of\ncourse, you can put optional field as exceptions like this:\n\n::\n\n    from django import forms\n    from django_nghelp.forms import AllRequiredForm\n    from .models import UserInfo\n\n    class UserInfoForm(AllRequiredForm, forms.ModelForm):\n      class Meta(object):\n        model = UserInfo\n        exclude = (\"2fa_secret\", )\n        # Assume that all fields are optional.\n        # By specifying optional, the specified fields won't\n        # become a required field.\n        optional = (\"phone\", )\n\nFeatures 3: Widgets for Angular Materials\n-----------------------------------------\n\nIf you like `Material Design <https://material.google.com/>`_, you'd\nalso like to use `Angular Material <https://material.angularjs.org>`_,\nbut as you can see the doc. the components are using special tags. For\nexample, ``select`` and ``option`` input controllers should be replaced\nwith ``mdSelect`` and ``mdOption`` and they are not provided by built-in\nwidgets.\n\nThis widget provides the widgets:\n\n::\n\n    from django import forms\n    from django_nghelp.forms import AngularForm\n    from django_nghelp.widgets import (\n      MDSelect, MDMultiSelect, MDDatePicker, MDDateSelect, MDCheckBox\n    )\n\n    from .models import ExampleModel\n\n    class ExampleForm(AngularForm, forms.ModelForm):\n      class Meta(object):\n        model = ExampleModel\n        exclude = (\"secret_field\", )\n        widgets = {\n          \"start_since\": MDDateSelect(),\n          \"available_date\": MDDatePicker(),\n          \"shape\": MDSelect(choices=(\n            (\"F\", \"Fat\"), (\"N\": \"Normal\"), (\"T\", \"Thin\")\n          )),\n          \"needs_fill\": MDCheckBox(\"Fill with border color?\")\n        }\n\nContribution\n============\n\nIf you found bugs, feel free to send issues. However, sending a pull\nrequest is more appreciated.\n\n.. |Travis| image:: https://travis-ci.org/hiroaki-yamamoto/django-nghelp.svg?branch=master\n.. |Code\nClimate| image:: https://codeclimate.com/github/hiroaki-yamamoto/django-nghelp/badges/gpa.svg\n.. |Landscape| image:: https://landscape.io/github/hiroaki-yamamoto/django-nghelp/master/landscape.svg?style=flat\n.. |Coveralls| image:: https://coveralls.io/repos/github/hiroaki-yamamoto/django-nghelp/badge.svg?branch=master",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hiroaki-yamamoto/django-nghelp.git",
    "keywords": "django AngularJS",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-nghelp",
    "package_url": "https://pypi.org/project/django-nghelp/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-nghelp/",
    "project_urls": {
      "Homepage": "https://github.com/hiroaki-yamamoto/django-nghelp.git"
    },
    "release_url": "https://pypi.org/project/django-nghelp/1.99.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "AngularJS Frontend Helper for Django",
    "version": "1.99.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3489996,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4cb442773624dd627a627e5b1c8b244e4175812f8c507fade8223d982f687a4",
        "md5": "04f1c276e0bd4bd8d1478fec24ba254e",
        "sha256": "324e57798a1907bb91486e7cd5cd128deb7e640313b9ed25a449de91df699a47"
      },
      "downloads": -1,
      "filename": "django-nghelp-1.99.1.tar.gz",
      "has_sig": false,
      "md5_digest": "04f1c276e0bd4bd8d1478fec24ba254e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7053,
      "upload_time": "2017-04-10T07:16:54",
      "upload_time_iso_8601": "2017-04-10T07:16:54.906845Z",
      "url": "https://files.pythonhosted.org/packages/b4/cb/442773624dd627a627e5b1c8b244e4175812f8c507fade8223d982f687a4/django-nghelp-1.99.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}