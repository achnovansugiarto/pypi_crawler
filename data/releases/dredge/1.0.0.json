{
  "info": {
    "author": "Ben Moews",
    "author_email": "ben.moews@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# DREDGE\n\n### User-friendly thresholded subspace-constrained mean shift for geospatial data\n\nDREDGE, short for _Density Ridge Estimation Describing Geospatial Evidence_, arguably an unnecessarily forced acronym, offers a new tool to find density ridges in latitude-longitude coordinates based on the subspace-constrained mean shift (SCMS) algorithm introduced by [Ozertem and Erdogmus (2011)](http://www.jmlr.org/papers/v12/ozertem11a.html). The tool approximates principal curves for a given set of coordinates, featuring various improvements over the initial algorithm and alterations to facilitate the application to geospatial data: Thresholding, as described in cosmological research by [Chen et al. (2015)](https://academic.oup.com/mnras/article/454/1/1140/1138949) and [Chen et al. (2015)](https://academic.oup.com/mnras/article-abstract/461/4/3896/2608626), avoids dominant density ridges in sparsely populated areas of the dataset. In addition, the [haversine formula](https://en.wikipedia.org/wiki/Haversine_formula) is used as a distance metric to calculate the great circle distance, which makes the tool applicable not only to city-scale data, but also to datasets spanning  multiple countries by taking the Earth's curvature into consideration.\n\nIn essence, DREDGE provides density-based line points which optimize the distance to a dataset of coordinates along those lines, with larger bandwidths leading to a decrease in summed line length and an increase in the average distance to the nearest line. Since DREDGE was initially developed to be applied to crime incident data, the default bandwidth calculation follows a best-practice approach that is well-accepted within quantitative criminology, using the mean distance to a given number of nearest neighbors ([Williamson et al., 1999](http://www.esri.com/news/arcuser/0199/crimedata.html)). Since practitioners in that area of study are often interested in the highest-density regions of a dataset, the tool also features the possibility to specify a top-percentage level for a [kernel density estimate](https://en.wikipedia.org/wiki/Kernel_density_estimation) that the ridge points should fall within.\n\n### Installation\n\nDREDGE can be installed via [PyPI](https://pypi.org), with a single command in the terminal:\n\n```\npip install dredge\n```\n\nAlternatively, the file `dredge.py` can be downloaded from the folder `dredge` in this repository and used locally by placing the file into the working directory for a given project. An installation via the terminal is, however, highly recommended, as the installation process will check for the package requirements and automatically update or install any missing dependencies, thus sparing the user the effort of troubleshooting and installing them themselves.\n\n### Quickstart guide\n\nDREDGE only requires a two-column NumPy array as its primary input (`coordinates`), with one data point per row, and latitude and longitude values in the columns. Four additional optional parameters can, however, be set: The number of nearest neighbors (`neighbors`) used to automatically calculate an optimal bandwidth can be manually changed, the bandwidth (`bandwidth`) itself can be forced to a certain value, and the threshold used to check for convergence between iterations can be set (`threshold`). The fourth parameter (`percentage`) unlocks an additional functionality of DREDGE, as the interest of practitioners is often constrained to high-density areas. For a user-provided percentage value _p_, the kernel density estimation in the tool's inner workings is used to only retain ridge points above the (100 - _p_)th percentile of the provided dataset's density landscape. This allows, for example, route matching to be focused on these areas.\n\n<br></br>\n\n| Variables                    | Explanations                                        | Default               |\n|:-----------------------------|:----------------------------------------------------|:----------------------|\n| coordinates                  | The spatial data as latitude-longitude coordinates  |                       |\n| neighbors (optional)         | The number of nearest neighbors to get a bandwidth  | 10                    |\n| bandwidth (optional)         | The bandwidth used for kernel density estimates     | None                  |\n| convergence (optional)       | The threshold used for inter-iteration convergence  | 0.01                  |\n| percentage (optional)        | The aimed-for percentage of highest-density ridges  | None                  |\n\n<br></br>\n\nAfter the installation via [PyPI](https://pypi.org), or using the `dredge.py` file locally, the usage looks like this:\n\n```python\nfrom dredge import filaments\n\nfilaments(coordinates = your_coordinates,\n                        percentage = 5) \n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/moews/dredge",
    "keywords": "density ridges,spatial analysis,principal curves,route optimization,hot spot analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dredge",
    "package_url": "https://pypi.org/project/dredge/",
    "platform": "",
    "project_url": "https://pypi.org/project/dredge/",
    "project_urls": {
      "Homepage": "https://github.com/moews/dredge"
    },
    "release_url": "https://pypi.org/project/dredge/1.0.0/",
    "requires_dist": [
      "numpy",
      "scipy (>=0.18.1)",
      "schwimmbad (>=0.3.0)",
      "scikit-learn (>=0.19.1)"
    ],
    "requires_python": "",
    "summary": "User-friendly thresholded subspace-constrained mean shift for geospatial data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5479077,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a022c12a68cecd1a88b2bef3d75b9f343699841f0be71c7cbe0d0c1ead80c205",
        "md5": "882cf431f1a81630d4d7e7dd2bab8d26",
        "sha256": "6d421dcb255fea0ba08b9e0a549bbe0d021fbb0d85cc5cc140b0c0249bb28c28"
      },
      "downloads": -1,
      "filename": "dredge-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "882cf431f1a81630d4d7e7dd2bab8d26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11356,
      "upload_time": "2019-07-03T01:19:21",
      "upload_time_iso_8601": "2019-07-03T01:19:21.014461Z",
      "url": "https://files.pythonhosted.org/packages/a0/22/c12a68cecd1a88b2bef3d75b9f343699841f0be71c7cbe0d0c1ead80c205/dredge-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1513d5b2d000961ca09498dca5a58aebeb735c324de2c25c6ace9240754a449b",
        "md5": "9fec5b37438cb9e47462390e0b8e8b36",
        "sha256": "d1dc9c199b681f81915730fa47bef78b8ab519781bbc109c19e94848ebe2c620"
      },
      "downloads": -1,
      "filename": "dredge-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9fec5b37438cb9e47462390e0b8e8b36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9571,
      "upload_time": "2019-07-03T01:19:23",
      "upload_time_iso_8601": "2019-07-03T01:19:23.465255Z",
      "url": "https://files.pythonhosted.org/packages/15/13/d5b2d000961ca09498dca5a58aebeb735c324de2c25c6ace9240754a449b/dredge-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}