{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Systems Administration"
    ],
    "description": "# django-sanitized-dump\nSanitize sensitive information from your database dumps ðŸ’©\n\nSupports:\n- PostgreSQL\n- MySQL\n\n# Getting started\n\n1. `pip install django-sanitized-dump` or `pip install django-sanitized-dump[MySQL]` if you use MySQL\n2. Add `sanitized_dump` to `INSTALLED_APPS`\n3. Initialize config file: `./manage.py init_sanitizer`\n4. Check your newly created `.sanitizerconfig` file and modify the sanitation strategy to fit your requirements.\n5. Run `./manage.py check_sanitizerconfig` to verify that your `.sanitizerconfig` includes all models and fields\n6. Get sanitized database dump: `./manage.py create_sanitized_dump > dump.sql`\n\n# DB Sanitation\n\nHeavy lifting of the DB sanitation is done by: https://github.com/andersinno/python-database-sanitizer\n\n### Configuration\n\nConfiguration file is used to define a strategy on how to sanitize your data. Strategy defines a sanitation function for each model field.\n\n#### Example config\n```yaml\nconfig:\n addons:\n   - \"ai-sanitizers\"\n   - \"some-other-lib\"\nstrategy:\n user:\n   first_name: \"name.first_name\"\n   last_name: \"name.last_name\"\n education:\n   created: null\n   modified: null\n   id: null\n   field: \"education.field\"\n   school: \"education.school\"\n   started: \"datetime.datetime\"\n   credits: null\n   information: \"string.loremipsum_preserved\"\n file_file: null\n```\n\n#### Example custom sanitizers\n```python\n# /sanitizers/name.py\ndef sanitize_first_name(value):\n    return faker.first_name()\n\ndef sanitize_last_name(value):\n    return faker.last_name()\n\n# /sanitizers/education.py\ndef sanitize_field(value):\n    return \"Some field\"\n\ndef sanitize_schoo(value):\n    return \"My school\"\n```\n\n#### Validating sanitizer return value\n\n> Note: This should not be done in the initial implementation of the sanitizer but is up to the sanitizer functions. This is just a nice to have but not of a high priority.\n\nCheck that the returned value is of the same type as the argument value passed to the sanitizer.\nFor instance, if a MySQL DATETIME value is passed to the sanitizer, a MySQL DATETIME value shoud be returned as well.\n\n\n#### Configuration method resolution order\n\n1. Custom sanitizers inside ./sanitizers\n2. Addon sanitizers (`config.addons`)\n3. Core sanitizers\n\n### Django Management Commands\n\n#### Sanitized Dump\n\n`./manage.py create_sanitized_dump > dump.sql`\n\n1. Warn about unhandled fields\n2. Creates a database dump (`mysqldump`/`pgdump`)\n3. Run sanitizer\n\n\n#### Check Sanitized Dump\n\n`./manage.py check_sanitizerconfig`\n\n1. Returns an error code if there are unhandled database fields\n\nCheck can be used in CI environments for detecting changes in models, that are not present in\nsanitizer configuration.\n\n\n#### Init Sanitizer\n\n`./manage.py init_sanitizer`\n\n1. Create configuration from current database state\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andersinno/django-sanitized-dump",
    "keywords": "django,database,sanitization,anonymization",
    "license": "MIT",
    "maintainer": "Anders Innovations",
    "maintainer_email": "support@anders.fi",
    "name": "django-sanitized-dump",
    "package_url": "https://pypi.org/project/django-sanitized-dump/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-sanitized-dump/",
    "project_urls": {
      "Homepage": "https://github.com/andersinno/django-sanitized-dump"
    },
    "release_url": "https://pypi.org/project/django-sanitized-dump/1.2.1/",
    "requires_dist": [
      "pyyaml",
      "six",
      "database-sanitizer",
      "PyMySQL ; extra == 'mysql'"
    ],
    "requires_python": "",
    "summary": "Sanitized sensitive information from your database dumps",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7676252,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f72591131e5970d65c6193f34913cfb046a6da6f164cd0a3e7e75c914a43c24e",
        "md5": "eb11f5f96b25851eda517e39c6e02c74",
        "sha256": "8a588b6ce1a6157c9fa3ebd4fe4bcb967f1d39a3dceab97f0c366b9ffe5449e0"
      },
      "downloads": -1,
      "filename": "django_sanitized_dump-1.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb11f5f96b25851eda517e39c6e02c74",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10389,
      "upload_time": "2020-07-10T17:14:29",
      "upload_time_iso_8601": "2020-07-10T17:14:29.241199Z",
      "url": "https://files.pythonhosted.org/packages/f7/25/91131e5970d65c6193f34913cfb046a6da6f164cd0a3e7e75c914a43c24e/django_sanitized_dump-1.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "595d4722acaab67d69dd7da4f36f9d2a4c0be7049b6886db268dd6ac15f42263",
        "md5": "b3b829ece873159339b2ede6d60e0f3f",
        "sha256": "a5ceb1f4205c2e0813cc1ca9b86b412d15bde465cece92d06e3553d9e82e1543"
      },
      "downloads": -1,
      "filename": "django-sanitized-dump-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b3b829ece873159339b2ede6d60e0f3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9386,
      "upload_time": "2020-07-10T17:14:30",
      "upload_time_iso_8601": "2020-07-10T17:14:30.658784Z",
      "url": "https://files.pythonhosted.org/packages/59/5d/4722acaab67d69dd7da4f36f9d2a4c0be7049b6886db268dd6ac15f42263/django-sanitized-dump-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}