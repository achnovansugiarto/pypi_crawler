{
  "info": {
    "author": "Managed by Q, Inc.",
    "author_email": "open-source@managedbyq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "mbq.metrics: metrics for the masses\n===================================\n\n.. image:: https://img.shields.io/pypi/v/mbq.metrics.svg\n    :target: https://pypi.python.org/pypi/mbq.metrics\n\n.. image:: https://img.shields.io/pypi/l/mbq.metrics.svg\n    :target: https://pypi.python.org/pypi/mbq.metrics\n\n.. image:: https://img.shields.io/pypi/pyversions/mbq.metrics.svg\n    :target: https://pypi.python.org/pypi/mbq.metrics\n\n.. image:: https://img.shields.io/travis/managedbyq/mbq.metrics/master.svg\n    :target: https://travis-ci.org/managedbyq/mbq.metrics\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install mbq.metrics\n    🚀✨\n\nGuaranteed fresh.\n\n\nGetting started\n---------------\n\n.. code-block:: python\n\n    from mbq import metrics\n\n    metrics.init(namespace='my-service', constant_tags={'env': ENV_NAME})\n\n    metrics.increment('metric.name', 5, tags={'something': 'awesome'})\n\n    # show the rest\n\nHTTP Metrics with Django Middleware\n-----------------------------------\nThis library also contains a piece of Django middleware you can use to create an awesome `HTTP Datadog dashboard <https://app.datadoghq.com/dash/893352>`_ for your service! The middleware reports the following metrics to Datadog:\n\n* Request duration in milliseconds\n* Status codes (200, 404, 503 etc)\n* Status ranges (2xx, 4xx, 5xx, etc)\n* Response content length\n* Request path\n\nAdding the middleware to your Django project and configuring the Datadog dashboard is quick and easy:\n\n1. Install ``mbq.metrics >= 0.2.1`` in your service (If you are already using the mbq.metrics middleware, upgrading to 0.2.1 will change the metric names being sent to datadog)\n2. Include ``mbq.metrics.contrib.django.middleware.timing.TimingMiddleware`` in the ``MIDDLEWARE`` constant in your ``settings.py`` file.\n3. Go to the `Invoicing HTTP Datadog dashboard <https://app.datadoghq.com/dash/893352>`_. Click the gear in the top right and then “Clone Dashboard”.\n4. Name the new dashboard ``Yourservicename: HTTP``\n5. For each graph in your new dashboard, click edit, and change the metric from ``invoicing.response`` to ``Yourservicename.response``\n\nTada!\n\nHTTP Metrics with WSGI Middleware (Flask)\n-----------------------------------------\n\nMiddleware is also included that can be easily plugged into a Flask app to generate the same sort of metrics referenced in the Django section above. Requires mbq.metrics >= 0.3.0.\n\nSee `the implementation in Isengard <https://github.com/managedbyq/isengard/pull/51/files>`_ for an example.\n\nTesting\n-------\n\nTests are automatically in `Travis CI https://travis-ci.org/managedbyq/mbq.metrics`_ but you can also run tests locally using `docker-compose`.\nWe now use `tox` for local testing across multiple python environments. Before this use `pyenv` to install the following python interpreters: cpython{2.7, 3.5, 3.6} and pypy3\n\ninstall and run tox:\n\n.. code-block:: bash\n\n    $ docker-compose build py36\n    Building py36\n    Step 1/5 : ARG IMAGE\n    Step 2/5 : FROM $IMAGE\n     ---> 60cd00be8967\n    Step 3/5 : WORKDIR /tox\n     ---> Running in f55aee265e33\n    Removing intermediate container f55aee265e33\n     ---> 2b31757df863\n    Step 4/5 : WORKDIR /app\n     ---> Running in a1bc5e661ca3\n    Removing intermediate container a1bc5e661ca3\n     ---> 6f1f17a29a8e\n    Step 5/5 : COPY . .\n     ---> 55eef13da5e6\n    Successfully built 55eef13da5e6\n    Successfully tagged mbqmetrics_py36:latest\n    $ docker-compose up py36\n    Recreating mbqmetrics_py36_1 ... done\n    Attaching to mbqmetrics_py36_1\n    py36_1   | Requirement already up-to-date: pip in /usr/local/lib/python3.6/site-packages (18.0)\n    py36_1   | Collecting tox\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/df/53/13660f04ef09ece4aefcce6b8f79c1586fc34dee1cbedd7c153e02f93489/tox-3.2.1-py2.py3-none-any.whl (62kB)\n    py36_1   | Collecting tox-venv\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/bd/bd/f981a5bcd5b90b65fbfd3e6d6d93d592721e2e946eaa08e9ea5d325a4077/tox_venv-0.3.1-py2.py3-none-any.whl\n    py36_1   | Collecting tox-travis\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/a0/f0/55a0d561161ceac9da512d221547cd0405f0cbf5dfba7352cd36d7bfdace/tox_travis-0.10-py2.py3-none-any.whl\n    py36_1   | Collecting py<2,>=1.4.17 (from tox)\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/c8/47/d179b80ab1dc1bfd46a0c87e391be47e6c7ef5831a9c138c5c49d1756288/py-1.6.0-py2.py3-none-any.whl (83kB)\n    py36_1   | Collecting six<2,>=1.0.0 (from tox)\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\n    py36_1   | Requirement already satisfied, skipping upgrade: setuptools>=30.0.0 in /usr/local/lib/python3.6/site-packages (from tox) (40.0.0)\n    py36_1   | Collecting pluggy<1,>=0.3.0 (from tox)\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/f5/f1/5a93c118663896d83f7bcbfb7f657ce1d0c0d617e6b4a443a53abcc658ca/pluggy-0.7.1-py2.py3-none-any.whl\n    py36_1   | Collecting virtualenv>=1.11.2 (from tox)\n    py36_1   |   Downloading https://files.pythonhosted.org/packages/b6/30/96a02b2287098b23b875bc8c2f58071c35d2efe84f747b64d523721dc2b5/virtualenv-16.0.0-py2.py3-none-any.whl (1.9MB)\n    py36_1   | Installing collected packages: py, six, pluggy, virtualenv, tox, tox-venv, tox-travis\n    py36_1   | Successfully installed pluggy-0.7.1 py-1.6.0 six-1.11.0 tox-3.2.1 tox-travis-0.10 tox-venv-0.3.1 virtualenv-16.0.0\n    py36_1   | GLOB sdist-make: /app/setup.py\n    py36_1   | py36-django111 create: /tox/py36-django111\n    py36_1   | py36-django111 installdeps: ., Django>=1.11,<2.0\n    py36_1   | py36-django111 inst: /tox/dist/mbq.metrics-0.4.0.zip\n    py36_1   | py36-django111 installed: You are using pip version 10.0.1, however version 18.0 is available.,You should consider upgrading via the 'pip install --upgrade pip' command.,certifi==2018.8.24,chardet==3.0.4,datadog==0.22.0,decorator==4.3.0,Django==1.11.15,idna==2.7,mbq.metrics==0.4.0,pytz==2018.5,requests==2.19.1,simplejson==3.16.0,urllib3==1.23\n    py36_1   | py36-django111 runtests: PYTHONHASHSEED='2612051782'\n    py36_1   | py36-django111 runtests: commands[0] | python -Wall -m unittest discover tests\n    py36_1   | /tox/py36-django111/lib/python3.6/site-packages/datadog/dogstatsd/base.py:306: DeprecationWarning: invalid escape sequence \\:\n    py36_1   |   return string.replace('\\n', '\\\\n').replace('m:', 'm\\:')\n    py36_1   | ................\n    py36_1   | ----------------------------------------------------------------------\n    py36_1   | Ran 16 tests in 0.094s\n    py36_1   |\n    py36_1   | OK\n    # ...snip...\n\n\nShipping a New Release\n----------------------\n\n1. Bump the version in `setup.py`\n2. Go to `Releases` in GitHub and \"Draft a New Release\"\n3. After creating a new release, Travis CI will pick up the new release and ship it to PyPi\n\nFAQs\n----\n\n**Where do I put the DogStatsd agent configuration?**\n\nYou don't! ``mbq.metrics`` is pre-baked with assumptions about how Q runs it's services. Specifically, we assume that each service runs in a Docker container and that that container is running on a VM that's running the DogStatsD agent. In that way we can automatically configure our client to reach outside of the container and easily push metrics to the agent.\nRead more in the `datadogpy documentation <http://datadogpy.readthedocs.io/en/latest/index.html#datadog.initialize>`_ or `in the source <https://github.com/DataDog/datadogpy/blob/fd6646a6e8cde1d7a8c2f6e324d04e8d7f8a6f8c/datadog/dogstatsd/route.py#L15>`_.\n\nAPI Reference\n-------------\n\n\nContributing\n------------",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/managedbyq/mbq.metrics",
    "keywords": "metrics monitoring statsd",
    "license": "Apache 2.0",
    "maintainer": "Managed by Q, Inc.",
    "maintainer_email": "open-source@managedbyq.com",
    "name": "mbq.metrics",
    "package_url": "https://pypi.org/project/mbq.metrics/",
    "platform": "",
    "project_url": "https://pypi.org/project/mbq.metrics/",
    "project_urls": {
      "Homepage": "https://github.com/managedbyq/mbq.metrics"
    },
    "release_url": "https://pypi.org/project/mbq.metrics/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MBQ Metrics",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5512609,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5dd3e94487c7818708853ea30ec77a17a83db5515dcd348ceda9d6d140acbf8",
        "md5": "554aff89e1b9e3688451b6e0d05eefe5",
        "sha256": "977e70992d8f47ba6198e83f7208d057d365986b1b2dcf4bec88a4dd64c8aeee"
      },
      "downloads": -1,
      "filename": "mbq.metrics-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "554aff89e1b9e3688451b6e0d05eefe5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14335,
      "upload_time": "2019-01-18T18:47:52",
      "upload_time_iso_8601": "2019-01-18T18:47:52.075141Z",
      "url": "https://files.pythonhosted.org/packages/c5/dd/3e94487c7818708853ea30ec77a17a83db5515dcd348ceda9d6d140acbf8/mbq.metrics-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}