{
  "info": {
    "author": "glyphack",
    "author_email": "sh.hooshyari@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# django-zarinpal\n\nIntegrate django payments with [zarinpal](https://www.zarinpal.com)\n\n\nFeatures\n--------\n\n- sending signal on verifying transaction to let other apps know about it\n\nQuickstart\n----------\n\nInstall django-zarinpal::\n\n    pip install django-zarinpal\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'zarinpal',\n        ...\n    )\n\nAdd django-zarinpal's URL patterns:\n\n.. code-block:: python\n\n    import zarrinpal\n\n\n    urlpatterns = [\n        ...\n        path('zarinpal/', include(zarinpal_urls)),\n        ...\n    ]\n\n\n\n### How to Use\n\nset these variables in your settings file:\n\n```python\n\nZARINPAL_CALLBACK_URL: bool # the url user redirects to after transaction\n\nZARINPAL_SIMULATION: bool # is transactions for test?\n\nZARINPAL_MERCHANT_ID: str # merchant id from zarinpal (you may leave it blank if you set the simulation to True)\n```\n\nyou can use function `start_transaction` with a dictionary containing your transaction data like this:\n\n```python\nfrom django.shortcuts import redirect\nfrom django_zarinpal.services import start_transaction\n\n\ndef start_payment(request):\n    result = start_transaction(\n        {\n            \"user\": request.user,\n            \"amount\": 10000,\n            \"description\": \"transaction description\",\n            \"mobile\": \"09123456789\",\n            \"email\": \"string\",\n        }\n    )\n    return redirect(result) # result is the url for starting transaction\n```\n\nIf you specify a callback_url in transaction data after completing transaction zarinpal will redirect user to the page you specified with two get arguments:\n\n1.order_number: str\n\n2.success: boolean\n\n### Custom verification\n\nIf you want to handle verifying transaction your self you can define your view and \naddress it in settings with ZARINPAL_VERIFY_TRANSACTION_VIEW. you can use function\n`verify_transaction` to verify a transaction.\n\nIf you don't specify this view, package will use default view for verifying transactions.\n\nTests\n--------\nRunning tests: ::\n\n    python manage.py runtests.py\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-zarinpal",
    "package_url": "https://pypi.org/project/django-zarinpal/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-zarinpal/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-zarinpal/1.0.1/",
    "requires_dist": [
      "zeep (>=3.4.0,<4.0.0)",
      "django-hashid-field (>=3.1.1,<4.0.0)"
    ],
    "requires_python": ">=3.5,<4.0",
    "summary": "integrate django payments with zarrinpal",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7353350,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f2e467069326baefe977a3b0a8c1bdbad1c67e18090913eca912d19661532fb",
        "md5": "55c12c7f256cf38bfc209714404f8a08",
        "sha256": "d48551e7a69841a7ea0084a7912845ff6f0458a18ca33d787f62d8679dfc8eac"
      },
      "downloads": -1,
      "filename": "django_zarinpal-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55c12c7f256cf38bfc209714404f8a08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5,<4.0",
      "size": 8432,
      "upload_time": "2020-05-29T14:39:27",
      "upload_time_iso_8601": "2020-05-29T14:39:27.592059Z",
      "url": "https://files.pythonhosted.org/packages/2f/2e/467069326baefe977a3b0a8c1bdbad1c67e18090913eca912d19661532fb/django_zarinpal-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1dea09a3a11491b4d1b0e8027633e9f7078745504f534045e2d9b57733f06ed",
        "md5": "8181c388b3c91ed00f78ea0c730d9cc5",
        "sha256": "b6e269c46ab9ed11df4c98d36bf379b37e72ceac432ce8e6df23bd5d5411d4c7"
      },
      "downloads": -1,
      "filename": "django-zarinpal-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8181c388b3c91ed00f78ea0c730d9cc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5,<4.0",
      "size": 6553,
      "upload_time": "2020-05-29T14:39:25",
      "upload_time_iso_8601": "2020-05-29T14:39:25.879171Z",
      "url": "https://files.pythonhosted.org/packages/b1/de/a09a3a11491b4d1b0e8027633e9f7078745504f534045e2d9b57733f06ed/django-zarinpal-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}