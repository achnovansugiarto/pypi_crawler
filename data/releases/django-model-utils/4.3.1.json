{
  "info": {
    "author": "Carl Meyer",
    "author_email": "carl@oddbird.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==================\ndjango-model-utils\n==================\n\n.. image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: Jazzband\n.. image:: https://github.com/jazzband/django-model-utils/workflows/Test/badge.svg\n   :target: https://github.com/jazzband/django-model-utils/actions\n.. image:: https://codecov.io/gh/jazzband/django-model-utils/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/jazzband/django-model-utils\n.. image:: https://img.shields.io/pypi/v/django-model-utils.svg\n   :target: https://pypi.python.org/pypi/django-model-utils\n.. image:: https://img.shields.io/pypi/pyversions/django-model-utils.svg\n   :target: https://pypi.python.org/pypi/django-model-utils\n   :alt: Supported Python versions\n.. image:: https://img.shields.io/pypi/djversions/django-model-utils.svg\n   :target: https://pypi.org/project/django-model-utils/\n   :alt: Supported Django versions\n\nDjango model mixins and utilities.\n\n``django-model-utils`` supports `Django`_ 3.2+.\n\n.. _Django: https://www.djangoproject.com/\n\nThis app is available on `PyPI`_.\n\n.. _PyPI: https://pypi.python.org/pypi/django-model-utils/\n\nGetting Help\n============\n\nDocumentation for django-model-utils is available\nhttps://django-model-utils.readthedocs.io/\n\n\nRun tests\n---------\n\n.. code-block\n\n    pip install -e .\n    py.test\n\nContributing\n============\n\nPlease file bugs and send pull requests to the `GitHub repository`_ and `issue\ntracker`_. See `CONTRIBUTING.rst`_ for details.\n\n.. _GitHub repository: https://github.com/jazzband/django-model-utils/\n.. _issue tracker: https://github.com/jazzband/django-model-utils/issues\n.. _CONTRIBUTING.rst: https://github.com/jazzband/django-model-utils/blob/master/CONTRIBUTING.rst\n\n\nChangelog\n=========\n\n4.3.1 (2022-11-15)\n------------------\n\n- Confirm support for `Django 4.0`\n- Add Spanish translation\n- Add French translation\n- Drop Django 1.7 workaround from `select_subclasses()`\n- Drop support for `Django < 3.2`\n- Drop support for `Python 3.6`\n- Confirm support for `Django 4.1`\n\n4.3.0\n-----\n\n- Never released due to packaging issues.\n\n4.2.0 (2021-10-11)\n------------------\n\n- Add support for `Django 3.2`\n- Drop support for `Django 3.0`\n- Add support for `Python 3.10`\n- Added urlsafe token field.\n- Introduce context manager for FieldTracker state reset (GH-#491)\n- Fix performance regression of FieldTracker on FileField subclasses on Django 3.1+\n  (GH-#498)\n\n4.1.1 (2020-12-01)\n------------------\n\n- Applied `isort` to codebase (Refs GH-#402)\n- Fix `TypeError` in save when model inherits from both TimeStampModel\n  and StatusModel. (Fixes GH-465)\n\n4.1.0 (2020-11-29)\n------------------\n\n**Breaking changes:**\n\n- `FieldTracker` now marks fields as not changed after `refresh_from_db`\n  respecting `fields` argument (GH-#404)\n- `FieldTracker` now respects `update_fields` changed in overridden `save()`\n  method (GH-#404)\n- `FieldTracker` now resets states after `pre_save()` and not anymore `save()`\n  signals, possibly altering the behaviour of overridden `save()`\n  methods (GH-#404)\n\n**Other changes:**\n\n- Update InheritanceQuerySetMixin to avoid querying too much tables\n- TimeStampedModel now automatically adds 'modified' field as an update_fields\n  parameter even if it is forgotten while using save()\n- Replace ugettext_lazy with gettext_lazy to satisfy Django deprecation warning\n- Add available_objects manager to SoftDeletableModel and add deprecation\n  warning to objects manager.\n- StatusModel now automatically adds 'status_changed' field during save as an\n  update_fieldsparameter when 'status' is present in it to make sure it is not\n  forgotten.\n- Update test requirements\n- Move tests to GitHub Actions: https://github.com/jazzband/django-model-utils/actions\n- Drop support for `Django 2.1`\n- Add support for `Python 3.9`\n- Add support for `Django 3.1`\n\n4.0.0 (2019-12-11)\n------------------\n- Added `Choices.subset`.\n- Remove hacks for previously supported Django versions. (Fixes GH-390)\n- Dropped support for Python 2.7. (Fixes GH-393)\n- Dropped usage of `six`\n- Drop support for `Django 1.11`\n- Add support for `Python 3.8`\n- Add support for `Django 3.0`\n\n3.2.0 (2019.06.21)\n-------------------\n- Catch `AttributeError` for deferred abstract fields, fixes GH-331.\n- Update documentation to explain usage of `timeframed` model manager, fixes GH-118\n- Honor `OneToOneField.parent_link=False`.\n- Fix handling of deferred attributes on Django 1.10+, fixes GH-278\n- Fix `FieldTracker.has_changed()` and `FieldTracker.previous()` to return\n  correct responses for deferred fields.\n- Add Simplified Chinese translations.\n- Update AutoLastModifiedField so that at instance creation it will\n  always be set equal to created to make querying easier. Fixes GH-254\n- Support `reversed` for all kinds of `Choices` objects, fixes GH-309\n- Fix Model instance non picklable GH-330\n- Fix patched `save` in FieldTracker\n- Upgrades test requirements (pytest, pytest-django, pytest-cov) and\n  skips tox test with Python 3.5 and Django (trunk)\n- Add UUIDModel and UUIDField support.\n\n3.1.2 (2018.05.09)\n------------------\n- Update InheritanceIterable to inherit from\n  ModelIterable instead of BaseIterable, fixes GH-277.\n\n- Add all_objects Manager for 'SoftDeletableModel' to include soft\n  deleted objects on queries as per issue GH-255\n\n3.1.1 (2017.12.17)\n------------------\n\n- Update classifiers and README via GH-306, fixes GH-305\n\n3.1.0 (2017.12.11)\n------------------\n\n- Support for Django 2.0 via GH-298, fixes GH-297\n- Remove old travis script via GH-300\n- Fix codecov and switch to py.test #301\n\n3.0.0 (2017.04.13)\n------------------\n\n- Drop support for Python 2.6.\n- Drop support for Django 1.4, 1.5, 1.6, 1.7.\n- Exclude tests from the distribution, fixes GH-258.\n- Add support for Django 1.11 GH-269\n- Add a new model to disable pre_save/post_save signals\n\n\n2.6.1 (2017.01.11)\n------------------\n\n- Fix infinite recursion with multiple `MonitorField` and `defer()` or `only()`\n  on Django 1.10+. Thanks Romain Garrigues. Merge of GH-242, fixes GH-241.\n\n- Fix `InheritanceManager` and `SoftDeletableManager` to respect\n  `self._queryset_class` instead of hardcoding the queryset class. Merge of\n  GH-250, fixes GH-249.\n\n- Add mixins for `SoftDeletableQuerySet` and `SoftDeletableManager`, as stated\n  in the the documentation.\n\n- Fix `SoftDeletableModel.delete()` to use the correct database connection.\n  Merge of GH-239.\n\n- Added boolean keyword argument `soft` to `SoftDeletableModel.delete()` that\n  revert to default behavior when set to `False`. Merge of GH-240.\n\n- Enforced default manager in `StatusModel` to avoid manager order issues when\n  using abstract models that redefine `objects` manager. Merge of GH-253, fixes\n  GH-251.\n\n\n2.6 (2016.09.19)\n----------------\n\n- Added `SoftDeletableModel` abstract class, its manageer\n  `SoftDeletableManager` and queryset `SoftDeletableQuerySet`.\n\n- Fix issue with field tracker and deferred FileField for Django 1.10.\n\n\n2.5.2 (2016.08.09)\n------------------\n\n- Include `runtests.py` in sdist.\n\n\n2.5.1 (2016.08.03)\n------------------\n\n- Fix `InheritanceQuerySet` raising an `AttributeError` exception\n  under Django 1.9.\n\n- Django 1.10 support regressed with changes between pre-alpha and final\n  release; 1.10 currently not supported.\n\n\n2.5 (2016.04.18)\n----------------\n\n- Drop support for Python 3.2.\n\n- Add support for Django 1.10 pre-alpha.\n\n- Track foreign keys on parent models properly when a tracker\n  is defined on a child model. Fixes GH-214.\n\n\n2.4 (2015.12.03)\n----------------\n\n- Remove `PassThroughManager`. Use Django's built-in `QuerySet.as_manager()`\n  and/or `Manager.from_queryset()` utilities instead.\n\n- Add support for Django 1.9.\n\n\n2.3.1 (2015-07-20)\n------------------\n\n- Remove all translation-related automation in `setup.py`. Fixes GH-178 and\n  GH-179. Thanks Joe Weiss, Matt Molyneaux, and others for the reports.\n\n\n2.3 (2015.07.17)\n----------------\n\n- Keep track of deferred fields on model instance instead of on\n  FieldInstanceTracker instance. Fixes accessing deferred fields for multiple\n  instances of a model from the same queryset. Thanks Bram Boogaard. Merge of\n  GH-151.\n\n- Fix Django 1.7 migrations compatibility for SplitField. Thanks ad-m. Merge of\n  GH-157; fixes GH-156.\n\n- Add German translations.\n\n- Django 1.8 compatibility.\n\n\n2.2 (2014.07.31)\n----------------\n\n- Revert GH-130, restoring ability to access ``FieldTracker`` changes in\n  overridden ``save`` methods or ``post_save`` handlers. This reopens GH-83\n  (inability to pickle models with ``FieldTracker``) until a solution can be\n  found that doesn't break behavior otherwise. Thanks Brian May for the\n  report. Fixes GH-143.\n\n\n2.1.1 (2014.07.28)\n------------------\n\n- ASCII-fold all non-ASCII characters in changelog; again. Argh. Apologies to\n  those whose names are mangled by this change. It seems that distutils makes\n  it impossible to handle non-ASCII content reliably under Python 3 in a\n  setup.py long_description, when the system encoding may be ASCII. Thanks\n  Brian May for the report. Fixes GH-141.\n\n\n2.1.0 (2014.07.25)\n------------------\n\n- Add support for Django's built-in migrations to ``MonitorField`` and\n  ``StatusField``.\n\n- ``PassThroughManager`` now has support for seeing exposed methods via\n  ``dir``, allowing `IPython`_ tab completion to be useful. Merge of GH-104,\n  fixes GH-55.\n\n- Add pickle support for models using ``FieldTracker``.  Thanks Ondrej Slintak\n  for the report.  Thanks Matthew Schinckel for the fix.  Merge of GH-130,\n  fixes GH-83.\n\n.. _IPython: http://ipython.org/\n\n\n2.0.3 (2014.03.19)\n-------------------\n\n- Fix ``get_query_set`` vs ``get_queryset`` in ``PassThroughManager`` for\n  Django <1.6. Fixes issues with related managers not filtering by relation\n  properly. Thanks whop, Bojan Mihelac, Daniel Shapiro, and Matthew Schinckel\n  for the report; Matthew for the fix. Merge of GH-121.\n\n- Fix ``FieldTracker`` with deferred model attributes. Thanks Michael van\n  Tellingen. Merge of GH-115.\n\n- Fix ``InheritanceManager`` with self-referential FK; avoid infinite\n  recursion. Thanks rsenkbeil. Merge of GH-114.\n\n2.0.2 (2014.02.19)\n-------------------\n\n- ASCII-fold all non-ASCII characters in changelog. Apologies to those whose\n  names are mangled by this change. It seems that distutils makes it impossible\n  to handle non-ASCII content reliably under Python 3 in a setup.py\n  long_description, when the system encoding may be ASCII. Thanks Simone Dalla\n  for the report. Fixes GH-113.\n\n\n2.0.1 (2014.02.11)\n-------------------\n\n- Fix dependency to be on \"Django\" rather than \"django\", which plays better\n  with static PyPI mirrors. Thanks Travis Swicegood.\n\n- Fix issue with attempt to access ``__slots__`` when copying\n  ``PassThroughManager``. Thanks Patryk Zawadzki. Merge of GH-105.\n\n- Improve ``InheritanceManager`` so any attributes added by using extra(select)\n  will be propagated onto children. Thanks Curtis Maloney. Merge of GH-101,\n  fixes GH-34.\n\n- Added ``InheritanceManagerMixin``, ``InheritanceQuerySetMixin``,\n  ``PassThroughManagerMixin``, and ``QueryManagerMixin`` to allow composing\n  their functionality with other custom manager/queryset subclasses (e.g. those\n  in GeoDjango). Thanks Douglas Meehan!\n\n\n2.0 (2014.01.06)\n----------------\n\n- BACKWARDS-INCOMPATIBLE: Indexing into a ``Choices`` instance now translates\n  database representations to human-readable choice names, rather than simply\n  indexing into an array of choice tuples. (Indexing into ``Choices`` was\n  previously not documented.) If you have code that is relying on indexing or\n  slicing ``Choices``, the simplest workaround is to change e.g. ``STATUS[1:]``\n  to ``list(STATUS)[1:]``.\n\n- Fixed bug with checking for field name conflicts for added query managers on\n  `StatusModel`.\n\n- Can pass `choices_name` to `StatusField` to use a different name for\n  choices class attribute. ``STATUS`` is used by default.\n\n- Can pass model subclasses, rather than strings, into\n  `select_subclasses()`. Thanks Keryn Knight. Merge of GH-79.\n\n- Deepcopying a `Choices` instance no longer fails with infinite recursion in\n  `getattr`. Thanks Leden. Merge of GH-75.\n\n- `get_subclass()` method is now available on both managers and\n  querysets. Thanks Travis Swicegood. Merge of GH-82.\n\n- Fix bug in `InheritanceManager` with grandchild classes on Django 1.6+;\n  `select_subclasses('child', 'child__grandchild')` would only ever get to the\n  child class. Thanks Keryn Knight for report and proposed fix.\n\n- MonitorField now accepts a 'when' parameter. It will update only when the field\n  changes to one of the values specified.\n\n\n1.5.0 (2013.08.29)\n------------------\n\n- `Choices` now accepts option-groupings. Fixes GH-14.\n\n- `Choices` can now be added to other `Choices` or to any iterable, and can be\n  compared for equality with itself. Thanks Tony Aldridge. (Merge of GH-76.)\n\n- `Choices` now `__contains__` its Python identifier values. Thanks Keryn\n  Knight. (Merge of GH-69).\n\n- Fixed a bug causing ``KeyError`` when saving with the parameter\n  ``update_fields`` in which there are untracked fields. Thanks Mikhail\n  Silonov. (Merge of GH-70, fixes GH-71).\n\n- Fixed ``FieldTracker`` usage on inherited models.  Fixes GH-57.\n\n- Added mutable field support to ``FieldTracker`` (Merge of GH-73, fixes GH-74)\n\n\n1.4.0 (2013.06.03)\n------------------\n\n- Introduced ``FieldTracker`` as replacement for ``ModelTracker``, which is now\n  deprecated.\n\n- ``PassThroughManager.for_queryset_class()`` no longer ignores superclass\n  ``get_query_set``. Thanks Andy Freeland.\n\n- Fixed ``InheritanceManager`` bug with grandchildren in Django 1.6. Thanks\n  CrazyCasta.\n\n- Fixed lack of ``get_FOO_display`` method for ``StatusField``. Fixes GH-41.\n\n\n1.3.1 (2013.04.11)\n------------------\n\n- Added explicit default to ``BooleanField`` in tests, for Django trunk\n  compatibility.\n\n- Fixed intermittent ``StatusField`` bug.  Fixes GH-29.\n\n- Added Python 3 support.\n\n- Dropped support for Django 1.2 and 1.3.  Django 1.4.2+ required.\n\n\n1.3.0 (2013.03.27)\n------------------\n\n- Allow specifying default value for a ``StatusField``. Thanks Felipe\n  Prenholato.\n\n- Fix calling ``create()`` on a ``RelatedManager`` that subclasses a dynamic\n  ``PassThroughManager``. Thanks SeiryuZ for the report. Fixes GH-24.\n\n- Add workaround for https://code.djangoproject.com/ticket/16855 in\n  InheritanceQuerySet to avoid overriding prior calls to\n  ``select_related()``. Thanks ivirabyan.\n\n- Added support for arbitrary levels of model inheritance in\n  InheritanceManager. Thanks ivirabyan. (This feature only works in Django\n  1.6+ due to https://code.djangoproject.com/ticket/16572).\n\n- Added ``ModelTracker`` for tracking field changes between model saves. Thanks\n  Trey Hunner.\n\n\n1.2.0 (2013.01.27)\n------------------\n\n- Moved primary development from `Bitbucket`_ to `GitHub`_. Bitbucket mirror\n  will continue to receive updates; Bitbucket issue tracker will be closed once\n  all issues tracked in it are resolved.\n\n.. _BitBucket: https://bitbucket.org/carljm/django-model-utils/overview\n.. _GitHub: https://github.com/carljm/django-model-utils/\n\n- Removed deprecated ``ChoiceEnum``, ``InheritanceCastModel``,\n  ``InheritanceCastManager``, and ``manager_from``.\n\n- Fixed pickling of ``PassThroughManager``. Thanks Rinat Shigapov.\n\n- Set ``use_for_related_fields = True`` on ``QueryManager``.\n\n- Added ``__len__`` method to ``Choices``. Thanks Ryan Kaskel and James Oakley.\n\n- Fixed ``InheritanceQuerySet`` on Django 1.5. Thanks Javier Garcia Sogo.\n\n1.1.0 (2012.04.13)\n------------------\n\n- Updated AutoCreatedField, AutoLastModifiedField, MonitorField, and\n  TimeFramedModel to use ``django.utils.timezone.now`` on Django 1.4.\n  Thanks Donald Stufft.\n\n- Fixed annotation of InheritanceQuerysets. Thanks Jeff Elmore and Facundo\n  Gaich.\n\n- Dropped support for Python 2.5 and Django 1.1. Both are no longer supported\n  even for security fixes, and should not be used.\n\n- Added ``PassThroughManager.for_queryset_class()``, which fixes use of\n  ``PassThroughManager`` with related fields. Thanks Ryan Kaskel for report and\n  fix.\n\n- Added ``InheritanceManager.get_subclass()``. Thanks smacker.\n\n1.0.0 (2011.06.16)\n------------------\n\n- Fixed using SplitField on an abstract base model.\n\n- Fixed issue #8, adding ``use_for_related_fields = True`` to\n  ``InheritanceManager``.\n\n- Added ``PassThroughManager``. Thanks Paul McLanahan.\n\n- Added pending-deprecation warnings for ``InheritanceCastModel``,\n  ``manager_from``, and Django 1.1 support. Removed documentation for the\n  deprecated utilities. Bumped ``ChoiceEnum`` from pending-deprecation to\n  deprecation.\n\n- Fixed issue #6, bug with InheritanceManager and descriptor fields (e.g.\n  FileField).  Thanks zyegfryed for the fix and sayane for tests.\n\n0.6.0 (2011.02.18)\n------------------\n\n- updated SplitField to define get_prep_value rather than get_db_prep_value.\n  This avoids deprecation warnings on Django trunk/1.3, but makes SplitField\n  incompatible with Django versions prior to 1.2.\n\n- added InheritanceManager, a better approach to selecting subclass instances\n  for Django 1.2+. Thanks Jeff Elmore.\n\n- added InheritanceCastManager and InheritanceCastQuerySet, to allow bulk\n  casting of a queryset to child types.  Thanks Gregor Muellegger.\n\n0.5.0 (2010.09.24)\n------------------\n\n- added manager_from (thanks George Sakkis)\n- added StatusField, MonitorField, TimeFramedModel, and StatusModel\n  (thanks Jannis Leidel)\n- deprecated ChoiceEnum and replaced with Choices\n\n0.4.0 (2010.03.16)\n------------------\n\n- added SplitField\n- added ChoiceEnum\n- added South support for custom model fields\n\n0.3.0\n-----\n\n- Added ``QueryManager``\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jazzband/django-model-utils",
    "keywords": "",
    "license": "BSD",
    "maintainer": "JazzBand",
    "maintainer_email": "",
    "name": "django-model-utils",
    "package_url": "https://pypi.org/project/django-model-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-model-utils/",
    "project_urls": {
      "Homepage": "https://github.com/jazzband/django-model-utils"
    },
    "release_url": "https://pypi.org/project/django-model-utils/4.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Django model mixins and utilities",
    "version": "4.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15782405,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17385381cfbee475ddf6c109e434516ac969163124dcaad2cfc258586c571515",
        "md5": "ca501eed5541f9f814012dee043aa444",
        "sha256": "8c0b0177bab909a8635b602d960daa67e80607aa5469217857271a60726d7a4b"
      },
      "downloads": -1,
      "filename": "django_model_utils-4.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ca501eed5541f9f814012dee043aa444",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 36658,
      "upload_time": "2022-11-16T00:14:36",
      "upload_time_iso_8601": "2022-11-16T00:14:36.625466Z",
      "url": "https://files.pythonhosted.org/packages/17/38/5381cfbee475ddf6c109e434516ac969163124dcaad2cfc258586c571515/django_model_utils-4.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f142969e79648ac83a552629323d9d6fde172dbf420c14e7dc7c800a9293f4cd",
        "md5": "5a6a917341095af69adf6cd70f9123d3",
        "sha256": "2e2e4f13e4f14613134a9777db7ad4265f59a1d8f1384107bcaa3028fe3c87c1"
      },
      "downloads": -1,
      "filename": "django-model-utils-4.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5a6a917341095af69adf6cd70f9123d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 73913,
      "upload_time": "2022-11-16T00:14:21",
      "upload_time_iso_8601": "2022-11-16T00:14:21.170693Z",
      "url": "https://files.pythonhosted.org/packages/f1/42/969e79648ac83a552629323d9d6fde172dbf420c14e7dc7c800a9293f4cd/django-model-utils-4.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}