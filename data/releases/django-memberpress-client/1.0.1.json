{
  "info": {
    "author": "Lawrence McDaniel",
    "author_email": "Lawrence McDaniel <lpm0073@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Plugin For memberpress REST API Client\n\n[![pypi django-memberpress-client](https://img.shields.io/static/v1?label=pypi&style=flat-square&color=0475b6&message=django-memberpress-client)](https://pypi.org/project/django-memberpress-client/) [![memberpress](https://img.shields.io/static/v1?label=memberpress&style=flat-square&color=04d4e4&message=REST%20API)](https://memberpress.com/addons/developer-tools/) [![hack.d Lawrence McDaniel](https://img.shields.io/badge/hack.d-Lawrence%20McDaniel-orange.svg)](https://lawrencemcdaniel.com)\n\n![memberpress](https://memberpress.com/wp-content/uploads/2022/01/memberpress-logo-color.svg)\n\nA lightweight, performant Django plugin that implements REST api and Webhook integrations for the [Wordpress](https://wordpress.org/) [memberpress](https://memberpress.com/blog/memberpress-developer-tools/) Pro plugin.\n\n## Installation\n\n```bash\npip install django-memberpress-client\n```\n\n```python\nfrom django.conf import settings\n\n# required settings\nsettings.MEMBERPRESS_API_KEY = 'set-me-please'\nsettings.MEMBERPRESS_API_BASE_URL = 'https://set-me-please.com/'\n\n# optional settings\nsettings.MEMBERPRESS_API_KEY_NAME = \"MEMBERPRESS-API-KEY\"\nsettings.MEMBERPRESS_CACHE_EXPIRATION = 60*60*24\nsettings.MEMBERPRESS_SENSITIVE_KEYS = [\n    \"password\",\n    \"token\",\n    \"client_id\",\n    \"client_secret\",\n    \"Authorization\",\n    \"secret\",\n]\n```\n\nAlternatively, you can rename .env-sample, located in the same folder location\nas this README.md, to .env:\n\n```shell\n# required settings\nMEMBERPRESS_API_KEY=set-me-please\nMEMBERPRESS_API_BASE_URL=https://set-me-please.com\n\n# optional settings\nMEMBERPRESS_CACHE_EXPIRATION=3600\nMEMBERPRESS_API_KEY_NAME=MEMBERPRESS-API-KEY\nMEMBERPRESS_SENSITIVE_KEYS=password,token,client_id,client_secret,Authorization,secret\n```\n\n\nYou'll find the memberpress API Key in the Wordpress admin site.\n![memberpress API Key](https://raw.githubusercontent.com/lpm0073/django-memberpress-client/main/doc/memberpress-api-key.png \"memberpress API Key\")\n\n## Usage\n\n### REST API\n\n```python\n# from a Python module inside your existing Django project.\nfrom memberpress_client.member import Member\n\nmember = Member(username=\"jsmith\")\n\nif member.should_raise_paywall:\n    # not a member, free trial has expired, subscription expired,\n    # subscription renewal payment transaction declined, etc.\n    your_custom_paywall_code()\n\n# and, there is lots more detailed information about the member,\n# their subscription status, their recent transactions history,\n# and so on...\nprint(member.is_active_subscription)\nprint(member.is_trial_subscription)\nprint(member.latest_transaction.amount)\nprint(member.recent_subscriptions[0].created_at)\nprint(member.active_memberships[0].pricing_title)\n```\n\n### Webhooks\n\nThis plugin listens for events from memberpress' webhooks framework, a Pro 'developer tools' premium option of memberpress. Add a url of the form https://yourdomain.com/mp/api/v1/webhook to the Developer \"Webhooks\" page.\n![memberpress webhooks](https://raw.githubusercontent.com/lpm0073/django-memberpress-client/main/doc/memberpress-api-webhook.png \"memberpress webhooks\")\n\nurls:\n\n- receive http POST requests: https://your-django-project.com/mp/api/v1/events/\n- view the event log: https://your-django-project.com/admin/memberpress_client/memberpressevents/\n\n![Django admin console](https://raw.githubusercontent.com/lpm0073/django-memberpress-client/main/doc/memberpress-django-admin2.png \"Django admin console\")\n\n## Developers\n\n### quick start\n\nKeep in mind that this code package is intended to install as an add-on to your existing Django project. Therefore,\nthe 'production' settings and requirements intentionally ommit all Django and Django support packages\nother than those that are unique to this repo. The 'local' settings and requirements compensate for this by including all of the settings and requirements that you'd typically find in 'common' and/or 'production'.\n\nYou should be able to follow the normal workflow for setting up a Django project for local development. This substantially\nconsists of the following:\n\n- rename ./memberpress_client/settings/.env-sample to ./memberpress_client/settings/.env\n- install all service-level dependencies on your local dev machine. This includes MySQL and Redis.\n- clone this repo\n- create and activate a Python virtual environment\n- run make quickstart\n\nOther common dev chores are automated in the Makefile, noting however that some syntax is specific to macOS environments (my sincerest apologies), plus, it assumes that you've installed mysql and redis using homebrew.\n\n\n### class hierarchy\n\nUse these class objects rather than working directly with the memberpress\njson dicts returned by the api. These class objects include structural and type-checking validations,\nplus they handle dict value data type conversations for you.\n\n\n\n```python\nclass Memberpress:\n\n    class MemberpressEvent(Memberpress):\n\n    class MemberpressAPIClient(Memberpress):\n        class Member(MemberpressAPIClient):\n        class Membership(MemberpressAPIClient):\n        class Subscriber(MemberpressAPIClient):\n        class Transaction(MemberpressAPIClient):\n```\n\n### constants\n\nUse these built-in constants rather than working directly with memberpress' dict key string values:\n\n- MemberpressEvents: discrete list of memberpress event types. The str value exactly matches the event dict key \"event\".\n- MemberpressEventTypes: discrete list of memberpress event_types\n\n```python\nfrom memberpress_client.constants import MemberpressEvents\n\nprint(MemberpressEvents.AFTER_CC_EXPIRES_REMINDER)\nafter-cc-expires-reminder\n\nprint(MemberpressEvents.AFTER_MEMBER_SIGNUP_REMINDER)\nafter-member-signup-reminder\n\nprint(MemberpressEvents.LOGIN)\nlogin\n\nprint(MemberpressEvents.MEMBER_ACCOUNT_UPDATED)\nmember-account-updated\n\nprint(MemberpressEvents.SUBSCRIPTION_EXPIRED)\nsubscription-expired\n# ...\n# ectetera, etcetera, etcetera ...\n# ...\nprint(MemberpressEvents.TRANSACTION_COMPLETED)\ntransaction-completed\n```\n\nAdditionally, note that many of the constants include helper functions.\n![memberpress_client constants](https://raw.githubusercontent.com/lpm0073/django-memberpress-client/main/doc/memberpress-constants.png \"memberpress_client constants\")\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lpm0073/django-memberpress-client",
    "keywords": "Python,Django,Wordpress,MemberPress,REST API",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-memberpress-client",
    "package_url": "https://pypi.org/project/django-memberpress-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-memberpress-client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lpm0073/django-memberpress-client/issues",
      "Homepage": "https://github.com/lpm0073/django-memberpress-client",
      "Repository": "https://github.com/lpm0073/django-memberpress-client"
    },
    "release_url": "https://pypi.org/project/django-memberpress-client/1.0.1/",
    "requires_dist": [
      "Django (<=3.3,>=3.2)",
      "validators",
      "django-environ",
      "pre-commit ; extra == 'local'",
      "black ; extra == 'local'",
      "flake8 ; extra == 'local'",
      "ipython ; extra == 'local'"
    ],
    "requires_python": ">=3.8",
    "summary": "A Django plugin to add Memberpress REST API and Webhook integrations.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17497904,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe64c2709e719a6712eba83e06558fd48f6860e06b1a1939c37a31ae1d518148",
        "md5": "1d33db4d3ce1363fe438f3551ec82156",
        "sha256": "2392072e8f7b2dea80e284408b7a1e7e8c61b7bd5f841aac1cf5d0e3e74b9dd9"
      },
      "downloads": -1,
      "filename": "django_memberpress_client-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d33db4d3ce1363fe438f3551ec82156",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 45178,
      "upload_time": "2022-12-20T21:27:53",
      "upload_time_iso_8601": "2022-12-20T21:27:53.613129Z",
      "url": "https://files.pythonhosted.org/packages/fe/64/c2709e719a6712eba83e06558fd48f6860e06b1a1939c37a31ae1d518148/django_memberpress_client-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60dc97641e75b51e5dfdddd9e0b34d0e7153adca89efcd41dc700ec6523dcc57",
        "md5": "e51d4b1e7cdc6862123b18a7f8061947",
        "sha256": "7f7ce0d36276b173b01444f10fe6e94d7806a91ea2f0ecb141e8e6af4e9ab85b"
      },
      "downloads": -1,
      "filename": "django-memberpress-client-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e51d4b1e7cdc6862123b18a7f8061947",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 34909,
      "upload_time": "2022-12-20T21:27:55",
      "upload_time_iso_8601": "2022-12-20T21:27:55.189340Z",
      "url": "https://files.pythonhosted.org/packages/60/dc/97641e75b51e5dfdddd9e0b34d0e7153adca89efcd41dc700ec6523dcc57/django-memberpress-client-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}