{
  "info": {
    "author": "Jannis Leidel",
    "author_email": "jannis@leidel.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "=======================================\nRobots exclusion application for Django\n=======================================\n\nThis is a basic Django application to manage robots.txt files following the\n`robots exclusion protocol`_, complementing the Django_ `Sitemap contrib app`_.\n\nThe robots exclusion application consists of two database models which are\ntied together with a m2m relationship:\n\n* Rules_\n* URLs_\n\n.. _Django: http://www.djangoproject.com/\n\nInstallation\n============\n\nUse your favorite Python installer to install it from PyPI::\n\n    pip install django-robots\n\nOr get the source from the application site at::\n\n    http://github.com/jezdez/django-robots/\n\nTo install the sitemap app, then follow these steps:\n\n1. Add ``'robots'`` to your INSTALLED_APPS_ setting.\n2. Make sure ``'django.template.loaders.app_directories.Loader'``\n   is in your TEMPLATE_LOADERS_ setting. It's in there by default, so\n   you'll only need to change this if you've changed that setting.\n3. Make sure you've installed the `sites framework`_.\n4. Run the ``syncdb`` or ``migrate`` management command (depening if you're\n   using South or not)\n\n.. _INSTALLED_APPS: http://docs.djangoproject.com/en/dev/ref/settings/#installed-apps\n.. _TEMPLATE_LOADERS: http://docs.djangoproject.com/en/dev/ref/settings/#template-loaders\n.. _sites framework: http://docs.djangoproject.com/en/dev/ref/contrib/sites/\n\nSitemaps\n--------\n\nBy default a ``Sitemap`` statement is automatically added to the resulting\nrobots.txt by reverse matching the URL of the installed `Sitemap contrib app`_.\nThis is especially useful if you allow every robot to access your whole site,\nsince it then gets URLs explicitly instead of searching every link.\n\nTo change the default behaviour to omit the inclusion of a sitemap link,\nchange the ``ROBOTS_USE_SITEMAP`` setting in your Django settings file to::\n\n    ROBOTS_USE_SITEMAP = False\n\nIn case you want to use specific sitemap URLs instead of the one that is\nautomatically discovered, change the ``ROBOTS_SITEMAP_URLS`` setting to::\n\n    ROBOTS_SITEMAP_URLS = [\n        http://www.example.com/sitemap.xml,\n    ]\n\n.. _Sitemap contrib app: http://docs.djangoproject.com/en/dev/ref/contrib/sitemaps/\n\nInitialization\n==============\n\nTo activate robots.txt generation on your Django site, add this line to your\nURLconf_::\n\n    (r'^robots\\.txt$', include('robots.urls')),\n\nThis tells Django to build a robots.txt when a robot accesses ``/robots.txt``.\nThen, please sync your database to create the necessary tables and create\n``Rule`` objects in the admin interface or via the shell.\n\n.. _URLconf: http://docs.djangoproject.com/en/dev/topics/http/urls/\n.. _sync your database: http://docs.djangoproject.com/en/dev/ref/django-admin/#syncdb\n\nRules\n=====\n\n``Rule`` - defines an abstract rule which is used to respond to crawling web\nrobots, using the `robots exclusion protocol`_, a.k.a. robots.txt.\n\nYou can link multiple URL pattern to allows or disallows the robot identified\nby its user agent to access the given URLs.\n\nThe crawl delay field is supported by some search engines and defines the\ndelay between successive crawler accesses in seconds. If the crawler rate is a\nproblem for your server, you can set the delay up to 5 or 10 or a comfortable\nvalue for your server, but it's suggested to start with small values (0.5-1),\nand increase as needed to an acceptable value for your server. Larger delay\nvalues add more delay between successive crawl accesses and decrease the\nmaximum crawl rate to your web server.\n\nThe `sites framework`_ is used to enable multiple robots.txt per Django instance.\nIf no rule exists it automatically allows every web robot access to every URL.\n\nPlease have a look at the `database of web robots`_ for a full list of\nexisting web robots user agent strings.\n\n.. _robots exclusion protocol: http://en.wikipedia.org/wiki/Robots_exclusion_standard\n.. _'sites' framework: http://www.djangoproject.com/documentation/sites/\n.. _database of web robots: http://www.robotstxt.org/db.html\n\nURLs\n====\n\n``Url`` - defines a case-sensitive and exact URL pattern which is used to\nallow or disallow the access for web robots. Case-sensitive.\n\nA missing trailing slash does also match files which start with the name of\nthe given pattern, e.g., ``'/admin'`` matches ``/admin.html`` too.\n\nSome major search engines allow an asterisk (``*``) as a wildcard to match any\nsequence of characters and a dollar sign (``$``) to match the end of the URL,\ne.g., ``'/*.jpg$'`` can be used to match all jpeg files.\n\nCaching\n=======\n\nYou can optionally cache the generation of the ``robots.txt``. Add or change\nthe ``ROBOTS_CACHE_TIMEOUT`` setting with a value in seconds in your Django\nsettings file::\n\n    ROBOTS_CACHE_TIMEOUT = 60*60*24\n\nThis tells Django to cache the ``robots.txt`` for 24 hours (86400 seconds).\nThe default value is ``None`` (no caching).\n\nChangelog\n=========\n\n1.0 (01/16/2014)\n----------------\n\n- *BACKWARDS-INCOMPATIBLE* change: The default behaviour of this app has\n  changed to **allow all bots** from the previous opposite behavior.\n\n- Fixed some backward compatibility issues.\n\n- Updated existing translations (Danish, German, French,\n  Portugese (Brasil), Russian).\n\n- Added Greek, Spanish (Spain), Japanese, Dutch, Slovak and Ukrainian\n  translations.\n\n0.9.2 (03/24/2013)\n------------------\n\n- Fixed compatibility with Django 1.5. Thanks, Russell Keith-Magee.\n\n0.9.1 (11/23/2012)\n------------------\n\n- Fixed argument signature in new class based view. Thanks, mkai.\n\n0.9 (11/21/2012)\n----------------\n\n- Deprecated ``ROBOTS_SITEMAP_URL`` setting. Use ``ROBOTS_SITEMAP_URLS``\n  instead.\n\n- Refactored ``rule_list`` view to be class based. django-robots now\n  requires Django >= 1.3.\n\n- Stop returning 404 pages if there are no Rules setup on the site. Instead\n  dissallow access for all robots.\n\n- Added an initial South migration. If you're using South you have to \"fake\"\n  the initial database migration::\n\n     python manage.py migrate --fake robots 0001\n\n- Added initial Sphinx docs.\n\nBugs and feature requests\n=========================\n\nAs always your mileage may vary, so please don't hesitate to send feature\nrequests and bug reports:\n\n    https://github.com/jezdez/django-robots/issues\n\nThanks! Feel free to leave a tip, too:\n\n    https://www.gittip.com/jezdez/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jezdez/django-robots/",
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-robots",
    "package_url": "https://pypi.org/project/django-robots/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-robots/",
    "project_urls": {
      "Homepage": "https://github.com/jezdez/django-robots/"
    },
    "release_url": "https://pypi.org/project/django-robots/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Robots exclusion application for Django, complementing Sitemaps.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15421801,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62901af95f0bfdd04fa0e6b1e98b416009f3be3716f410ecc31e73ba5c1c2d3c",
        "md5": "c100070eb44d31ab94f215c0470f060f",
        "sha256": "0ccb2ef0f168c87464609fdea3256f3b8a5641c1eef28c5ad48482c86eb7e8be"
      },
      "downloads": -1,
      "filename": "django-robots-1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "c100070eb44d31ab94f215c0470f060f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27488,
      "upload_time": "2014-01-16T11:45:12",
      "upload_time_iso_8601": "2014-01-16T11:45:12.642624Z",
      "url": "https://files.pythonhosted.org/packages/62/90/1af95f0bfdd04fa0e6b1e98b416009f3be3716f410ecc31e73ba5c1c2d3c/django-robots-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}