{
  "info": {
    "author": "Google LLC",
    "author_email": "googleapis-packages@google.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "Cloud Spanner support for Django\n================================\n\n|GA| |pypi| |versions|\n\n`Cloud Spanner`_ is the world's first fully managed relational database service\nto offer both strong consistency and horizontal scalability for\nmission-critical online transaction processing (OLTP) applications. With Cloud\nSpanner you enjoy all the traditional benefits of a relational database; but\nunlike any other relational database service, Cloud Spanner scales horizontally\nto hundreds or thousands of servers to handle the biggest transactional\nworkloads.\n\n\n- `Client Library Documentation`_\n- `Product Documentation`_\n\n.. |GA| image:: https://img.shields.io/badge/support-GA-gold.svg\n   :target: https://github.com/googleapis/google-cloud-python/blob/main/README.rst#general-availability\n.. |pypi| image:: https://img.shields.io/pypi/v/django-google-spanner.svg\n   :target: https://pypi.org/project/django-google-spanner/\n.. |versions| image:: https://img.shields.io/pypi/pyversions/django-google-spanner.svg\n   :target: https://pypi.org/project/django-google-spanner/\n.. _Cloud Spanner: https://cloud.google.com/spanner/\n.. _Client Library Documentation: https://googleapis.dev/python/django-google-spanner/latest/index.html\n.. _Product Documentation:  https://cloud.google.com/spanner/docs\n\nQuick Start\n-----------\n\nIn order to use this library, you first need to go through the following steps:\n\n1. `Select or create a Cloud Platform project.`_\n2. `Enable billing for your project.`_\n3. `Enable the Google Cloud Spanner API.`_\n4. `Setup Authentication.`_\n\n.. _Select or create a Cloud Platform project.: https://console.cloud.google.com/project\n.. _Enable billing for your project.: https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project\n.. _Enable the Google Cloud Spanner API.:  https://cloud.google.com/spanner\n.. _Setup Authentication.: https://googleapis.dev/python/google-api-core/latest/auth.html\n\nThis package provides a `3rd-party database backend\n<https://docs.djangoproject.com/en/2.2/ref/databases/#using-a-3rd-party-database-backend>`__\nfor using `Cloud Spanner <https://cloud.google.com/spanner>`__ with the `Django\nORM <https://docs.djangoproject.com/en/2.2/topics/db/>`__. It uses the `Cloud\nSpanner Python client library <https://github.com/googleapis/python-spanner>`__\nunder the hood.\n\nInstallation\n------------\n\nInstall this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool to\ncreate isolated Python and Django environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith `virtualenv`_, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n.. _`virtualenv`: https://virtualenv.pypa.io/en/latest/\n\n\nSupported versions\n~~~~~~~~~~~~~~~~~~\n\nThe library supports `Django 2.2\n<https://docs.djangoproject.com/en/2.2/>`_, and `Django 3.2\n<https://docs.djangoproject.com/en/3.2/>`_.\nBoth versions are long-term support (LTS) releases for the\n`Django project<https://www.djangoproject.com/download/#supported-versions>_`.\nThe minimum required Python version is 3.6.\n\n.. code:: shell\n\n    pip3 install django==3.2\n\n\nInstalling the package\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo install from PyPI:\n\n.. code:: shell\n\n    pip3 install django-google-spanner\n\n\nTo install from source:\n\n.. code:: shell\n\n    git clone git@github.com:googleapis/python-spanner-django.git\n    cd python-spanner-django\n    pip3 install -e .\n\n\nCreating a Cloud Spanner instance and database\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you don't already have a Cloud Spanner database, or want to start from\nscratch for a new Django application, you can `create a new instance\n<https://cloud.google.com/spanner/docs/getting-started/python#create_an_instance>`__\nand `database\n<https://cloud.google.com/spanner/docs/getting-started/python#create_a_database>`__\nusing the Google Cloud SDK:\n\n.. code:: shell\n\n    gcloud spanner instances create $INSTANCE --config=regional-us-central1 --description=\"New Django Instance\" --nodes=1\n    gcloud spanner databases create $DB --instance $INSTANCE\n\n\nConfiguring ``settings.py``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis package provides a Django application named ``django_spanner``. To use the\nCloud Spanner database backend, the application needs to installed and\nconfigured:\n\n-  Add ``django_spanner`` as the first entry in ``INSTALLED_APPS``:\n\n   .. code:: python\n\n       INSTALLED_APPS = [\n           'django_spanner',\n           ...\n       ]\n\n-  Edit the ``DATABASES`` setting to point to an existing Cloud Spanner database:\n\n   .. code:: python\n\n       DATABASES = {\n           'default': {\n               'ENGINE': 'django_spanner',\n               'PROJECT': '$PROJECT',\n               'INSTANCE': '$INSTANCE',\n               'NAME': '$DATABASE',\n           }\n       }\n\n\nSet credentials and project environment variables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou'll need to download a service account JSON key file and point to it using an environment variable:\n\n.. code:: shell\n\n    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/keyfile.json\n    export GOOGLE_CLOUD_PROJECT=gcloud_project\n\n\nApply the migrations\n~~~~~~~~~~~~~~~~~~~~\n\nPlease run:\n\n.. code:: shell\n\n    $ python3 manage.py migrate\n\nThat'll take a while to run. After this you should be able to see the tables and indexes created in your Cloud Spanner console.\n\n\nCreate a Django admin user\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFirst you’ll need to create a user who can login to the admin site. Run the following command:\n\n.. code:: shell\n\n    $ python3 manage.py createsuperuser\n\nwhich will then produce a prompt which will allow you to create your super user\n\n.. code:: shell\n\n    Username: admin\n    Email address: admin@example.com\n    Password: **********\n    Password (again): **********\n    Superuser created successfully.\n\n\nLogin as admin\n~~~~~~~~~~~~~~\nNow, run the server\n\n.. code:: shell\n\n    python3 manage.py runserver\n\nThen visit http://127.0.0.1:8000/admin/\n\nCreate and register your first model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPlease follow the guides in https://docs.djangoproject.com/en/2.2/intro/tutorial02/#creating-models\nto create and register the model to the Django’s automatically-generated admin site.\n\nHow it works\n------------\n\nOverall design\n~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/googleapis/python-spanner-django/main/assets/overview.png\n   :alt: \"Overall Design\"\n\nInternals\n~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/googleapis/python-spanner-django/main/assets/internals.png\n   :alt: \"Internals\"\n\n\nExecuting a query\n~~~~~~~~~~~~~~~~~\n\nHere is an example of how to add a row for Model Author, save it and later query it using Django\n\n.. code:: shell\n\n    >>> author_kent = Author( first_name=\"Arthur\", last_name=\"Kent\", rating=Decimal(\"4.1\"),)\n    >>> author_kent.save()\n    >>> qs1 = Author.objects.all().values(\"first_name\", \"last_name\")\n\n\nHow to contribute\n~~~~~~~~~~~~~~~~~\n\nContributions to this library are always welcome and highly encouraged.\n\nSee `CONTRIBUTING <https://github.com/googleapis/python-spanner-django/blob/main/CONTRIBUTING.md>`_ for more information on how to get started.\n\nPlease note that this project is released with a Contributor Code of Conduct.\nBy participating in this project you agree to abide by its terms. See the `Code \nof Conduct <https://github.com/googleapis/python-spanner-django/blob/main/CODE_OF_CONDUCT.md>`_ for more information.\n\n\nLimitations\n~~~~~~~~~~~\n\nSpanner has certain limitations of its own. The full set of limitations is documented\n`here <https://cloud.google.com/spanner/quotas#schema_limits>`__.\nIt is recommended that you go through that list.\n\nDjango spanner has a set of limitations as well, which you can find\n`here <https://github.com/googleapis/python-spanner-django/blob/main/docs/limitations.rst>`__.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/googleapis/python-spanner-django",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-google-spanner",
    "package_url": "https://pypi.org/project/django-google-spanner/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-google-spanner/",
    "project_urls": {
      "Homepage": "https://github.com/googleapis/python-spanner-django"
    },
    "release_url": "https://pypi.org/project/django-google-spanner/3.0.0/",
    "requires_dist": [
      "sqlparse (>=0.3.0)",
      "google-cloud-spanner (>=3.11.1)",
      "opentelemetry-api (>=1.1.0) ; extra == 'tracing'",
      "opentelemetry-sdk (>=1.1.0) ; extra == 'tracing'",
      "opentelemetry-instrumentation (>=0.20b0) ; extra == 'tracing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Bridge to enable using Django with Spanner.",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14875325,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7eefbc8b4c9653409be3b1b0ae6eb17bff23960da46a81dff87cf9790ffb0acd",
        "md5": "d9b5c51c3ec792b4c23f097f1f0dfc5f",
        "sha256": "22702e6c4cd1d1bb64d75658685ed0cd1da69d34d90afbc8be42fd99108fe82b"
      },
      "downloads": -1,
      "filename": "django_google_spanner-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9b5c51c3ec792b4c23f097f1f0dfc5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 84962,
      "upload_time": "2021-10-29T03:51:07",
      "upload_time_iso_8601": "2021-10-29T03:51:07.054317Z",
      "url": "https://files.pythonhosted.org/packages/7e/ef/bc8b4c9653409be3b1b0ae6eb17bff23960da46a81dff87cf9790ffb0acd/django_google_spanner-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9eea7ccbf9292c6df3a15cd4d5fac7c0e55bdf21091a76ee2e4958bd200d70ab",
        "md5": "fd5a6a80835eda20c5f57a67c2068b95",
        "sha256": "cd1ff51745c240c388f472e660f0b3db4c3444567b2f22daa9564dea03cdce41"
      },
      "downloads": -1,
      "filename": "django-google-spanner-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fd5a6a80835eda20c5f57a67c2068b95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 67799,
      "upload_time": "2021-10-29T03:51:08",
      "upload_time_iso_8601": "2021-10-29T03:51:08.271983Z",
      "url": "https://files.pythonhosted.org/packages/9e/ea/7ccbf9292c6df3a15cd4d5fac7c0e55bdf21091a76ee2e4958bd200d70ab/django-google-spanner-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}