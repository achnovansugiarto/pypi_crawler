{
  "info": {
    "author": "Aki MÃ¤kinen",
    "author_email": "nenshou.sora@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development"
    ],
    "description": "# MetaDocuments\n\n## Installation\n\n`pip install metadocuments`\n\n## Usage\n\nDecorate the document with `@Metadocument` to specify that it (and all its children) should be treated\nas a metadocument. This adds functions `to_dict`, `to_json`  and `to_yaml` to the class instance which\nthen can be called to create a corresponding structure. Classes can contain methods, but those are ignored\nunless they are decorated with `@property`. Inheritance and multiple inheritance do work, the `@Metadocument`\ndecorator is only required for the parent class.\n\n### Example\n\n```python\n@MetaDocument\nclass SubObject:\n    a = 2\n    b = \"c\"\n\n@Metadocument\nclass MyClass:\n    a = 1\n    b = SubObject()\n\nprint(MyClass().to_json(indent=4))\n# {\n#     \"a\": 1,\n#     \"b\": {\n#         \"a\": 2,\n#         \"b\": \"c\"\n#     }\n# }\n```  \n\n### Example 2\n\n```python\n@Metadocument\nclass MyClass:\n    a = 1\n\nclass Child(MyClass):\n    b = 2\n    c = \"c\"\n\nprint(Child().to_json(indent=4))\n# {\n#     \"a\": 1,\n#     \"b\": 2,\n#     \"c\": \"c\"\n# }\n```  \n\n### Example 3\n\nUsing `FromKeywords` helper class. This can be helpful when there are structures that one does not want\nto define as class. All the keywords are mapped 1:1 to a attribute / key.\n\n```python\nif __name__ == \"__main__\":\n    @Metadocument\n    class Foobar():\n        a = 1\n        b = 2\n        c = FromKeywords(\n            d=\"a\",\n            e=\"b\",\n            f=FromKeywords(\n                g=1,\n                asd=FromKeywords(\n                    a = \"b\"\n                )\n            )\n        )\n    print(Foobar().to_json(indent=4))\n```\n\n## Limitations\n\nBecause of Python syntax abuse, there is no support for numeric keys unfortunately. If those are necessity, then\nold-school dicts are best option (for now).\n\n`FromKeywords` does inherit `dict` so it is possible to use it inside a dictionary which then can be serialized to JSON.\n\n```python\nif __name__ == \"__main__\":\n    @Metadocument\n    class Foobar:\n        a = 1\n        b = 2\n        c = FromKeywords(\n            d=\"a\",\n            e=\"b\",\n            f=FromKeywords(\n                g=1,\n                asd=FromKeywords(\n                    a = \"b\"\n                )\n            )\n        )\n\n    some_dict = {\n        \"foo\": \"bar\",\n        1: \"asd\",\n        \"afgg\": FromKeywords(\n            a=1, b=2\n        ),\n        \"ccc\": Foobar().to_dict()\n    }\n    print(Foobar().to_json(indent=4))\n    print(json.dumps(some_dict))\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/blissfulreboot/python/metadocuments",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metadocuments",
    "package_url": "https://pypi.org/project/metadocuments/",
    "platform": "",
    "project_url": "https://pypi.org/project/metadocuments/",
    "project_urls": {
      "Homepage": "https://gitlab.com/blissfulreboot/python/metadocuments"
    },
    "release_url": "https://pypi.org/project/metadocuments/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for defining structured documents (JSON, YAML) as classes. Created as a metaprogramming exercise",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8530697,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af3dc96e86b2199a5768b35ad0ae612ea8c3c5bdbab18ac0a19e7163a604bda7",
        "md5": "1e7dcb3e84572308d349d081826a76ff",
        "sha256": "2ffce3ddcec980785cacd76598bd871fc1437b9e7074836383d160e5210c479e"
      },
      "downloads": -1,
      "filename": "metadocuments-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1e7dcb3e84572308d349d081826a76ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4036,
      "upload_time": "2020-09-21T18:26:47",
      "upload_time_iso_8601": "2020-09-21T18:26:47.877030Z",
      "url": "https://files.pythonhosted.org/packages/af/3d/c96e86b2199a5768b35ad0ae612ea8c3c5bdbab18ac0a19e7163a604bda7/metadocuments-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}