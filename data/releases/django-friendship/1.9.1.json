{
  "info": {
    "author": "Frank Wiles",
    "author_email": "frank@revsys.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# django-friendship\n\n<a href=\"http://travis-ci.org/revsys/django-friendship\"><img src=\"https://secure.travis-ci.org/revsys/django-friendship.svg\" /></a>\n\nThis application enables you to create and manage follows, blocks and bi-directional friendships between users. It features:\n\n- Friendship request objects that can be accepted, rejected, canceled, or marked as viewed.\n- Hooks to easily list all friend requests sent or received by a given user, filtered by the status of the request.\n- A blocklist for each user of users they've blocked.\n- Tags to include information about friendships, blocks and follows in your templates.\n- Integration with `AUTH_USER_MODEL`.\n- Validation to prevent common mistakes.\n- Faster server response time through caching\n\n## Requirements\n\n**Django 1.11+** since v1.7.0 (latest release supporting **Django 1.10** is v1.6.0)\n\n## Installation\n\n1. `pip install django-friendship`\n2. add `\"friendship\"` to `INSTALLED_APPS` and run `python manage.py migrate`.\n3. Use the friendship manager in your own views, or wire up the URLconf to include the builtin views:\n\n```python\nurlpatterns = [\n    ...\n    url(r'^friendship/', include('friendship.urls'))\n    ...\n]\n```\n\nNote: If you are migrating from django-friendship `v1.6.x`, you'll need to rollback your migrations and fake\nmigration `0002`\n\n```shell\n$ ./manage.py migrate friendship 0001\n$ ./manage.py migrate friendship 0002 --fake\n```\n\nIf you're migrating from `v1.7.x`, you'll likely have to fake `0003` as well:\n\n```shell\n$ ./manage.py migrate friendship 0003 --fake\n```\n\n## Usage\n\n`django-friendship` provides a free API that gives you several ways to create and manage friendship requests or follows in your views. Add the following at the top of your `views.py`:\n\n```python\nfrom django.contrib.auth.models import User\nfrom friendship.models import Friend, Follow, Block\n```\n\n### Getting Data about Friendships\n\n- List all of a user's friends: `Friend.objects.friends(request.user)`\n- List all unread friendship requests: `Friend.objects.unread_requests(user=request.user)`\n- List all unrejected friendship requests: `Friend.objects.unrejected_requests(user=request.user)`\n- Count of all unrejected friendship requests: `Friend.objects.unrejected_request_count(user=request.user)`\n- List all rejected friendship requests: `Friend.objects.rejected_requests(user=request.user)`\n- Count of all rejected friendship requests: `Friend.objects.rejected_request_count(user=request.user)`\n- List of all sent friendship requests: `Friend.objects.sent_requests(user=request.user)`\n- Test if two users are friends: `Friend.objects.are_friends(request.user, other_user) == True`\n\n### Getting Data about Follows\n\n- List of a user's followers: `Follow.objects.followers(request.user)`\n- List of who a user is following: `Follow.objects.following(request.user)`\n\n### Getting Data about Blocks\n\n- List of a user's blockers: `Block.objects.blockers(request.user)`\n- List of who a user is blocking: `Block.objects.blocking(request.user)`\n- Test if a user is blocked: `Block.objects.is_blocked(request.user, other_user) == True`\n\n### Managing Friendships and Follows\n\n#### Create a friendship request:\n\n```python\nother_user = User.objects.get(pk=1)\nFriend.objects.add_friend(\n    request.user,                               # The sender\n    other_user,                                 # The recipient\n    message='Hi! I would like to add you')      # This message is optional\n```\n\n#### Let the user who received the request respond:\n\n```python\nfrom friendship.models import FriendshipRequest\n\nfriend_request = FriendshipRequest.objects.get(to_user=1)\nfriend_request.accept()\n# or friend_request.reject()\n```\n\n#### To remove the friendship relationship between `request.user` and `other_user`, do the following:\n\n```python\nFriend.objects.remove_friend(request.user, other_user)\n```\n\n#### Make request.user a follower of other_user:\n\n```python\nFollow.objects.add_follower(request.user, other_user)\n```\n\n\n#### Make request.user block other_user:\n\n```python\nBlock.objects.add_block(request.user, other_user)\n```\n\n#### Make request.user unblock other_user:\n\n```python\nBlock.objects.remove_block(request.user, other_user)\n```\n\n### Templates\n\nYou can use `django-friendship` tags in your templates. First enter:\n\n```django\n{% load friendshiptags %}\n```\n\nThen use any of the following:\n\n```django\n{% friends request.user %}\n{% followers request.user %}\n{% following request.user %}\n{% friend_requests request.user %}\n{% blockers request.user %}\n{% blocking request.user %}\n```\n\n### Signals\n\n`django-friendship` emits the following signals:\n\n- friendship_request_created\n- friendship_request_rejected\n- friendship_request_canceled\n- friendship_request_accepted\n- friendship_removed\n- follower_created\n- following_created\n- follower_removed\n- following_removed\n- block_created\n- block_removed\n\n\n### Contributing\n\nDevelopment [takes place on GitHub](https://github.com/revsys/django-friendship). Bug reports, patches, and fixes are always welcome!\n\n# Need help?\n\n[REVSYS](http://www.revsys.com?utm_medium=github&utm_source=django-test-plus) can help with your Python, Django, and infrastructure projects. If you have a question about this project, please open a GitHub issue. If you love us and want to keep track of our goings-on, here's where you can find us online:\n\n<a href=\"https://revsys.com?utm_medium=github&utm_source=django-friendship\"><img src=\"https://pbs.twimg.com/profile_images/915928618840285185/sUdRGIn1_400x400.jpg\" height=\"50\" /></a>\n<a href=\"https://twitter.com/revsys\"><img src=\"https://cdn1.iconfinder.com/data/icons/new_twitter_icon/256/bird_twitter_new_simple.png\" height=\"43\" /></a>\n<a href=\"https://www.facebook.com/revsysllc/\"><img src=\"https://cdn3.iconfinder.com/data/icons/picons-social/57/06-facebook-512.png\" height=\"50\" /></a>\n<a href=\"https://github.com/revsys/\"><img src=\"https://assets-cdn.github.com/images/modules/logos_page/GitHub-Mark.png\" height=\"53\" /></a>\n<a href=\"https://gitlab.com/revsys\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/GitLab_Logo.svg/2000px-GitLab_Logo.svg.png\" height=\"44\" /></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/revsys/django-friendship/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-friendship",
    "package_url": "https://pypi.org/project/django-friendship/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-friendship/",
    "project_urls": {
      "Homepage": "https://github.com/revsys/django-friendship/"
    },
    "release_url": "https://pypi.org/project/django-friendship/1.9.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "django-friendship provides an easy extensible interface for following and friendship",
    "version": "1.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13164468,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03d211067a21f6d78228d5f72f3e177e350e8de842a05fbac97b3c03386fd4fa",
        "md5": "a65ed63850c30d6edb655b5b2e9d264a",
        "sha256": "f6181620c57c0d9ae1758f48d1c78660a222a96706c1a2c041e9f7b219eb1a12"
      },
      "downloads": -1,
      "filename": "django_friendship-1.9.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a65ed63850c30d6edb655b5b2e9d264a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 36374,
      "upload_time": "2020-04-09T14:14:33",
      "upload_time_iso_8601": "2020-04-09T14:14:33.979317Z",
      "url": "https://files.pythonhosted.org/packages/03/d2/11067a21f6d78228d5f72f3e177e350e8de842a05fbac97b3c03386fd4fa/django_friendship-1.9.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f7992fa2fda734ec6fbacd673039891288e46cc6af605d4287b788a001841cb",
        "md5": "72042c337120c9138a6645cbfaac58f7",
        "sha256": "5b57911ed1645328eb08bdc5eb72a81d1e38fbcb2b1b2ffbed1f9496d576621b"
      },
      "downloads": -1,
      "filename": "django-friendship-1.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "72042c337120c9138a6645cbfaac58f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20086,
      "upload_time": "2020-04-09T14:14:38",
      "upload_time_iso_8601": "2020-04-09T14:14:38.925166Z",
      "url": "https://files.pythonhosted.org/packages/5f/79/92fa2fda734ec6fbacd673039891288e46cc6af605d4287b788a001841cb/django-friendship-1.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}