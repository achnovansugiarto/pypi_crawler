{
  "info": {
    "author": "Frank Wiles",
    "author_email": "frank@revsys.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Django-Friendship\n=================\n\n.. image:: https://secure.travis-ci.org/revsys/django-friendship.png\n    :alt: Build Status\n    :target: http://travis-ci.org/revsys/django-friendship\n\nThis application enables you to create and manage follows and bi-d\nThis application enables you to create and manage follows and bi-directional friendships between users. It features:\n\n* Friendship request objects that can be accepted, rejected, canceled, or marked as viewed.\n* Hooks to easily list all friend requests sent or received by a given user, filtered by the status of the request.\n* Tags to include information about friendships and follows in your templates.\n* Integration with ``AUTH_USER_MODEL``.\n* Validation to prevent common mistakes.\n* Faster server response time through caching\n\nRequirements\n============\n\n**Django 1.4** since v0.9.0 (latest release supporting **Django 1.3** is v0.8.3)\n\nInstallation\n============\n\n1. ``pip install django-friendship``\n2. add ``\"friendship\"`` to ``INSTALLED_APPS`` and run ``python manage.py migrate``.\n3. Use the friendship manager in your own views, or wire up the URLconf to include the builtin views: ::\n\n    urlpatterns = [\n        ...\n        url(r'^friendship/', include('friendship.urls'))\n        ...\n    ]\n\nUsage\n=====\n\n``django-friendship`` provides a free API that gives you several ways to create and manage friendship requests or follows in your views. Add the following at the top of your ``views.py``::\n\n    from django.contrib.auth.models import User\n    from friendship.models import Friend, Follow\n\nGetting Data about Friendships\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* List all of a user's friends: ``Friend.objects.friends(request.user)``\n* List all unread friendship requests: ``Friend.objects.unread_requests(user=request.user)``\n* List all unrejected friendship requests: ``Friend.objects.unrejected_requests(user=request.user)``\n* Count of all unrejected friendship requests: ``Friend.objects.unrejected_request_count(user=request.user)``\n* List all rejected friendship requests: ``Friend.objects.rejected_requests(user=request.user)``\n* Count of all rejected friendship requests: ``Friend.objects.rejected_request_count(user=request.user)``\n* List of all sent friendship requests: ``Friend.objects.sent_requests(user=request.user)``\n* Test if two users are friends: ``Friend.objects.are_friends(request.user, other_user) == True``\n\nGetting Data about Follows\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n* List of a user's followers: ``Follow.objects.followers(request.user)``\n* List of who a user is following: ``Follow.objects.following(request.user)``\n\nManaging Friendships and Follows\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Create a friendship request: ::\n\n    other_user = User.objects.get(pk=1)\n    Friend.objects.add_friend(\n        request.user,                               # The sender\n        other_user,                                 # The recipient\n        message='Hi! I would like to add you')      # This message is optional\n\n* Let the user who received the request respond: ::\n\n    from friendship.models import FriendshipRequest\n\n    friend_request = FriendshipRequest.objects.get(pk=1)\n    friend_request.accept()\n    # or friend_request.reject()\n\n* To remove the friendship relationship between ``request.user`` and ``other_user``, do the following: ::\n\n    Friend.objects.remove_friend(request.user, other_user)\n\n* Make request.user a follower of other_user: ::\n\n    Follow.objects.add_follower(request.user, other_user)\n\nTemplates\n=========\n\nYou can use ``django-friendship`` tags in your templates. First enter: ::\n\n    {% load friendshiptags %}\n\nThen use any of the following: ::\n\n    {% friends request.user %}\n    {% followers request.user %}\n    {% following request.user %}\n    {% friend_requests request.user %}\n\nSignals\n=======\n\n``django-friendship`` emits the following signals:\n\n* friendship_request_created\n* friendship_request_rejected\n* friendship_request_canceled\n* friendship_request_accepted\n* friendship_removed\n* follower_created\n* following_created\n* follower_removed\n* following_removed\n\n\nContributing\n============\n\nDevelopment `takes place on GitHub`__. Bug reports, patches, and fixes are always welcome!\n\n__ https://github.com/revsys/django-friendship",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/revsys/django-friendship/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-friendship",
    "package_url": "https://pypi.org/project/django-friendship/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-friendship/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/revsys/django-friendship/"
    },
    "release_url": "https://pypi.org/project/django-friendship/1.5.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "django-friendship provides an easy extensible interface for following and friendship",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13164468,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa72079f428dcc91616ac96977bd693186aa328f670504c6a86020b9cf8624d6",
        "md5": "0e94babded597e4e0c5c6d597995ff6f",
        "sha256": "414f367802f033d90f443b596d07d82776a58fc910a9d53276f1d808aabf4bdf"
      },
      "downloads": -1,
      "filename": "django-friendship-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0e94babded597e4e0c5c6d597995ff6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17675,
      "upload_time": "2016-08-21T20:37:17",
      "upload_time_iso_8601": "2016-08-21T20:37:17.943777Z",
      "url": "https://files.pythonhosted.org/packages/fa/72/079f428dcc91616ac96977bd693186aa328f670504c6a86020b9cf8624d6/django-friendship-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}