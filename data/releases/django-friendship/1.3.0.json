{
  "info": {
    "author": "Frank Wiles",
    "author_email": "frank@revsys.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "django-friendship\n=================\n\n.. image:: https://secure.travis-ci.org/revsys/django-friendship.png\n    :alt: Build Status\n    :target: http://travis-ci.org/revsys/django-friendship\n\nUsage\n=====\n\nAdd ``friendship`` to ``INSTALLED_APPS`` and run ``syncdb``.\n\nTo use ``django-friendship`` in your views::\n\n    from django.contrib.auth.models import User\n    from friendship.models import Friend, Follow\n\n    def my_view(request):\n        # List of this user's friends\n        all_friends = Friend.objects.friends(request.user)\n\n        # List all unread friendship requests\n        requests = Friend.objects.unread_requests(user=request.user)\n\n        # List all rejected friendship requests\n        rejects = Friend.objects.rejected_requests(user=request.user)\n\n        # Count of all rejected friendship requests\n        reject_count = Friend.objects.rejected_request_count(user=request.user)\n\n        # List all unrejected friendship requests\n        unrejects = Friend.objects.unrejected_requests(user=request.user)\n\n        # Count of all unrejected friendship requests\n        unreject_count = Friend.objects.unrejected_request_count(user=request.user)\n\n        # List all sent friendship requests\n        sent = Friend.objects.sent_requests(user=request.user)\n\n        # List of this user's followers\n        all_followers = Follow.objects.followers(request.user)\n\n        # List of who this user is following\n        following = Follow.objects.following(request.user)\n\n        ### Managing friendship relationships\n\n        # Create a friendship request\n        other_user = User.objects.get(pk=1)\n        new_relationship = Friend.objects.add_friend(request.user, other_user)\n\n        # Can optionally save a message when creating friend requests\n        message_relationship = Friend.objects.add_friend(\n            from_user=request.user,\n            to_user=some_other_user,\n            message='Hi, I would like to be your friend',\n        )\n\n        # And immediately accept it, normally you would give this option to the user\n        new_relationship.accept()\n\n        # Now the users are friends\n        Friend.objects.are_friends(request.user, other_user) == True\n\n        # Remove the friendship\n        Friend.objects.remove_friend(other_user, request.user)\n\n        # Create request.user follows other_user relationship\n        following_created = Follow.objects.add_follower(request.user, other_user)\n\nTo use ``django-friendship`` in your templates::\n\n   {% load friendshiptags %}\n\n   {% friends request.user %}\n   {% followers request.user %}\n   {% following request.user %}\n   {% friend_requests request.user %}\n\nSignals\n=======\n\n``django-friendship`` emits the following signals:\n\n* friendship_request_created\n* friendship_request_rejected\n* friendship_request_canceled\n* friendship_request_accepted\n* friendship_removed\n* follower_created\n* following_created\n* follower_removed\n* following_removed\n\nCompatibility\n=============\n\nThis package requires Django 1.4 and above since v0.9.0. It is currently tested by Travis-CI against 1.4.12, 1.5.7, 1.6.4, and 1.7b1.\n\nThe last release supporting Django 1.3 is v0.8.3.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/revsys/django-friendship/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-friendship",
    "package_url": "https://pypi.org/project/django-friendship/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-friendship/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/revsys/django-friendship/"
    },
    "release_url": "https://pypi.org/project/django-friendship/1.3.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "django-friendship provides an easy extensible interface for following and friendship",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13164468,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "989380e02b080fff01ad3aecaf2c2395694ddca3b152d909ef4114d19d15ecf3",
        "md5": "0d735a5ace42e1dbf0b4120725c1bc97",
        "sha256": "5a6d6574d7f9a1273b4c95947a7efbf9a7987ef72400f7b44222f86fc21a9afd"
      },
      "downloads": -1,
      "filename": "django-friendship-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0d735a5ace42e1dbf0b4120725c1bc97",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16379,
      "upload_time": "2015-07-12T16:20:03",
      "upload_time_iso_8601": "2015-07-12T16:20:03.497873Z",
      "url": "https://files.pythonhosted.org/packages/98/93/80e02b080fff01ad3aecaf2c2395694ddca3b152d909ef4114d19d15ecf3/django-friendship-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}