{
  "info": {
    "author": "Hunter McGushion",
    "author_email": "hunter@mcgushion.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Documentation",
      "Topic :: Documentation :: Sphinx",
      "Topic :: Software Development",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Utilities"
    ],
    "description": "Docstr-Coverage\n===============\n\nIf the health of your documentation is in dire straits, `docstr-coverage` will see you now.\n\n`docstr-coverage` is a simple tool that lets you measure your Python source code's\n[docstring](http://www.python.org/dev/peps/pep-0257/#what-is-a-docstring) coverage. It can show you which of your functions,\nclasses, methods, and modules don't have docstrings. It also provide statistics about overall docstring coverage for individual\nfiles, and for your entire project.\n\n* **Source:** https://github.com/HunterMcGushion/docstr_coverage\n* **Documentation:** [https://docstr-coverage.readthedocs.io](https://docstr-coverage.readthedocs.io/en/latest/api_essentials.html)\n\nExample\n-------\n\n```\n>>> HunterMcGushion$ docstr-coverage /docstr_coverage/\n\nFile: \"docstr_coverage/setup.py\"\n - No module docstring\n - No docstring for `readme`\n Needed: 2; Found: 0; Missing: 2; Coverage: 0.0%\n\nFile: \"docstr_coverage/docstr_coverage/__init__.py\"\n - No module docstring\n Needed: 1; Found: 0; Missing: 1; Coverage: 0.0%\n\nFile: \"docstr_coverage/docstr_coverage/coverage.py\"\n - No docstring for `DocStringCoverageVisitor.__init__`\n Needed: 11; Found: 10; Missing: 1; Coverage: 90.9%\n\n\nOverall statistics for 3 files:\nDocstrings needed: 14; Docstrings found: 10; Docstrings missing: 4\nTotal docstring coverage: 71.4%;  Grade: Very good\n```\n\nHow Do I Use It?\n----------------\n\n#### Command-line Tool\nGeneral usage is: `docstr-coverage <path to dir or module> [options]`\n\nTo test a single module, named `some_module.py`, run:\n\n```\n$ docstr-coverage some_module.py\n```\n\nTo test a directory (recursively), just supply the directory `some_project/src` instead:\n\n```\n$ docstr-coverage some_project/src\n```\n\n##### Options:\n* *--skipmagic, -m* - Ignore all magic methods (like `__init__`, and `__str__`)\n* *--skipfiledoc, -f* - Ignore module docstrings (at the top of files)\n* *--exclude=\\<regex\\>, -e \\<regex\\>* - Filepath pattern to exclude from analysis\n\t* To exclude the contents of a virtual environment `env` and your `tests` directory, run:\n\t<br>```$ docstr-coverage some_project/ -e \"env/*|tests/*\"```\n* *--verbose=\\<level\\>, -v \\<level\\>* - Set verbosity level (0-3)\n\t* 0 - Silence\n\t* 1 - Print overall statistics\n\t* 2 - Also print individual statistics for each file\n\t* 3 - Also print missing docstrings (function names, class names, etc.)\n\n#### Package in Your Project\nYou can also use `docstr-coverage` as a part of your project by importing it thusly:\n\n```python\nfrom docstr_coverage import get_docstring_coverage\nmy_coverage = get_docstring_coverage(['some_dir/file_0.py', 'some_dir/file_1.py'])\n```\n\n##### Arguments:\n* Required arg: `filenames` \\<list of string filenames\\>\n* Optional kwargs: `skip_magic` \\<bool\\>, `skip_file_docstring` \\<bool\\>, `verbose` \\<int (0-3)\\>\n\t* For more info on `get_docstring_coverage` and its parameters, please see its [documentation](https://docstr-coverage.readthedocs.io/en/latest/api_essentials.html#get-docstring-coverage)\n\n##### Results:\n```get_docstring_coverage``` returns two dicts: 1) stats for each file, and 2) total stats.\nFor more info, please see the `get_docstring_coverage` [documentation](https://docstr-coverage.readthedocs.io/en/latest/api_essentials.html#get-docstring-coverage)\n\nWhy Should I Use It?\n--------------------\n* Thorough documentation is important to help others (and even yourself) understand your code\n* As a developer, improve your code's maintainability for when you need to make updates and fix bugs\n* As a user, instantly know how easy it's going to be to understand a new library\n\t* If its documentation coverage is low, you may need to figure a lot out for yourself\n\nInstallation\n------------\n\n```\npip install docstr-coverage\n```\n\nIf you like being on the cutting-edge, and you want all the latest developments, run:\n\n```\npip install git+https://github.com/HunterMcGushion/docstr_coverage.git\n```\n\nSpecial Thanks\n--------------\nThank you to Alexey \"DataGreed\" Strelkov, and James Harlow for doing all the hard work.\n`docstr-coverage` simply revives and brings their efforts to Python 3. See 'THANKS.txt' for more information.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HunterMcGushion/docstr_coverage",
    "keywords": "docstring coverage documentation audit source code statistics report",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docstr-coverage",
    "package_url": "https://pypi.org/project/docstr-coverage/",
    "platform": "",
    "project_url": "https://pypi.org/project/docstr-coverage/",
    "project_urls": {
      "Homepage": "https://github.com/HunterMcGushion/docstr_coverage"
    },
    "release_url": "https://pypi.org/project/docstr-coverage/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Utility for examining python source files to ensure proper documentation. Lists missing docstrings, and calculates overall docstring coverage percentage rating",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13209842,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4254339a87b11a31051483ace49f3605c6ed6c08d49a246b932af72196f25aea",
        "md5": "780e928f6c4388067eaa25227cd57bd7",
        "sha256": "c80189b54d3957c9d140e01ef1f634e3a8ddd638e415d1d805d947ddd5c3a751"
      },
      "downloads": -1,
      "filename": "docstr_coverage-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "780e928f6c4388067eaa25227cd57bd7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7976,
      "upload_time": "2019-01-25T19:51:40",
      "upload_time_iso_8601": "2019-01-25T19:51:40.478943Z",
      "url": "https://files.pythonhosted.org/packages/42/54/339a87b11a31051483ace49f3605c6ed6c08d49a246b932af72196f25aea/docstr_coverage-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa2b61b78044bd8dc8a19b349b2c7af71de98dd445afaa745fda978b97a18873",
        "md5": "20e2483afac279c55af7e7e0c2c622f3",
        "sha256": "01aee9ae8b1326fc6c4d8d56246142ae9507d4a945d9cf14fb9ff77764d2413f"
      },
      "downloads": -1,
      "filename": "docstr_coverage-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "20e2483afac279c55af7e7e0c2c622f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7664,
      "upload_time": "2019-01-25T19:51:41",
      "upload_time_iso_8601": "2019-01-25T19:51:41.781584Z",
      "url": "https://files.pythonhosted.org/packages/aa/2b/61b78044bd8dc8a19b349b2c7af71de98dd445afaa745fda978b97a18873/docstr_coverage-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}