{
  "info": {
    "author": "Michael Rohan",
    "author_email": "mrohan@vmware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\ndjango-yamlconf\n===============\n\n``django_yamlconf`` is part of VMware's support of open source\ndevelopment and community.\n\nHandle YAML based Django settings: load Django settings from YAML files\nbased on a Django project name. The YAML files loaded start with a YAML\nfile in the directory containing the Django settings file and then loads\nany other YAMLCONF files up the directory tree from the initial file.\nValues from files higher up the directory tree over-ride lower in the\ntree. The contents of the YAML file simply defines values that over-ride\n(or add to) attributes of the standard Django settings file, e.g., for\nthe project \"buildaudit\", the settings.py file could contain:\n\n.. code:: python\n\n        DEBUG = True\n\ni.e., the value for development. This can be redefined via a\n``buildaudit.yaml`` file using the definition:\n\n.. code:: python\n\n        DEBUG: false\n\nIf the environment variable ``YAMLCONF_CONFFILE`` is defined, it uses as\nthe final YAML file loaded (in this case, the file name does not need to\nmatch the project name and it can be located anywhere in the file\nsystem).\n\nQuick Start\n-----------\n\nThe YAMLCONF definitions are added to the Django settings file by\nincluding a call to the ``load`` function in the settings file. This\nwould normally be towards the end of the settings file. The simplest,\nand likely normal usage is to call without arguments. YAMLCONF will\ninfer the project information from the call stack. For a standard Django\napplication structure, the settings file::\n\n        myproject/myproject/settings.py\n\nwould contain the development oriented definitions, e.g., database\ndefinitions for user and password for a development database. The\nsettings file would then end with a call the the ``load`` function.\nAdditional definitions could be defined after the ``load`` function to\nupdate conditional definitions, e.g., if ``DEBUG`` is enabled.\n\n.. code:: python\n\n    import django_yamlconf\n\n    ...\n\n    DATABASES = {\n        'default': {\n            'NAME': 'example',\n            'USER': 'example',\n            'PASSWORD': 'example',\n            'HOST': 'localhost',\n            ...\n        }\n    }\n    ...\n\n    django_yamlconf.load()\n\nOn a production server, for this example, a ``myproject.yaml`` would be\nput in place containing the host name for the production database and\nthe password for the example user (assuming production is using the same\ndatabase name and username). In this example, a random ``pwgen``\npassword is used:\n\n.. code:: yaml\n\n    DATABASES.default.PASSWORD: 'zibiemohjuD6foh0'\n    DATABASES.default.HOST: 'myproject-db.eng.vmware.com'\n\nSee the ``load`` function for more information on other optional\narguments.\n\nLicense\n-------\n\n``django-yamlconf`` is release under the BSD-2 license, see the LICENSE\nfile.\n\nSPDX-License-Identifier: BSD-2-Clause\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vmware/django-yamlconf",
    "keywords": "django",
    "license": "BSD-2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-yamlconf",
    "package_url": "https://pypi.org/project/django-yamlconf/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/django-yamlconf/",
    "project_urls": {
      "Homepage": "https://github.com/vmware/django-yamlconf"
    },
    "release_url": "https://pypi.org/project/django-yamlconf/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Define Django settings in local YAML (or JSON) files",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9628779,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41b42a2b0c6f84d4464b25001b853fbd996028754daa86537d76b4c95a7f616a",
        "md5": "4d72366c84e523b90044b14ee4fce38f",
        "sha256": "dcdc6599632b22ae46bafe86513dee7cce551742ad6d9710e4c680fad60b762a"
      },
      "downloads": -1,
      "filename": "django-yamlconf-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4d72366c84e523b90044b14ee4fce38f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21660,
      "upload_time": "2020-07-28T22:55:11",
      "upload_time_iso_8601": "2020-07-28T22:55:11.240936Z",
      "url": "https://files.pythonhosted.org/packages/41/b4/2a2b0c6f84d4464b25001b853fbd996028754daa86537d76b4c95a7f616a/django-yamlconf-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}