{
  "info": {
    "author": "sanchezcarlosjr",
    "author_email": "24639141+sanchezcarlosjr@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://readthedocs.org/projects/pyscaffold-demo/badge/?version=latest\n    :alt: ReadTheDocs\n    :target: https://pyscaffold-demo.readthedocs.io/\n\n.. These are examples of badges you might want to add to your README:\n   please update the URLs accordingly\n\n    .. image:: https://api.cirrus-ci.com/github/<USER>/demo-project.svg?branch=main\n        :alt: Built Status\n        :target: https://cirrus-ci.com/github/<USER>/demo-project\n    .. image:: https://readthedocs.org/projects/demo-project/badge/?version=latest\n        :alt: ReadTheDocs\n        :target: https://demo-project.readthedocs.io/en/stable/\n    .. image:: https://img.shields.io/coveralls/github/<USER>/demo-project/main.svg\n        :alt: Coveralls\n        :target: https://coveralls.io/r/<USER>/demo-project\n    .. image:: https://img.shields.io/pypi/v/demo-project.svg\n        :alt: PyPI-Server\n        :target: https://pypi.org/project/demo-project/\n    .. image:: https://img.shields.io/conda/vn/conda-forge/demo-project.svg\n        :alt: Conda-Forge\n        :target: https://anaconda.org/conda-forge/demo-project\n    .. image:: https://pepy.tech/badge/demo-project/month\n        :alt: Monthly Downloads\n        :target: https://pepy.tech/project/demo-project\n    .. image:: https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Twitter\n        :alt: Twitter\n        :target: https://twitter.com/demo-project\n\n.. image:: https://img.shields.io/badge/-PyScaffold-005CA0?logo=pyscaffold\n    :alt: Project generated with PyScaffold\n    :target: https://pyscaffold.org/\n\n|\n\n============\nljpeg\n============\n\n\n     Read and transform LJPEG images into modern formats.\n\nWarning: You must have installed flex on your operating system.\n\nConvert to TIFF (requires the .ics file in the same directory as LJPEG)::\n\n     ljpeg $(pwd)/C_0029_1.LEFT_CC.LJPEG $(pwd)/output.tiff\n\n\nConvert to TIFF and verify that no information has been lost::\n\n      ljpeg $(pwd)/C_0029_1.LEFT_CC.LJPEG $(pwd)/output.tiff --verify\n\nConvert to jpeg for visualization with down-sizing scale=0.3 (16-bit TIFF is not good for direct visualization)::\n\n      ljpeg $(pwd)/C_0029_1.LEFT_CC.LJPEG $(pwd)/output.jpg --visual --scale 0.3\n\nNote that output file can be any format that's supported by OpenCV (which includes all common types). Most file formats only support 8-bit images, so directly saving into such file formats will cause problems. Add \"--visual\" to normalize color into 8-bit before saving to such file formats.\n\nThe Stanford ljpeg code is in public domain and is therefore OK to be included here. I did minor modification to make the code compile under modern Linux.\n\nGetting started\n=================\nDownload a set of mammograms with::\n\n     wget -q ftp://figment.csee.usf.edu:21/pub/DDSM/cases/normals/normal_08/case4606/ && cat index.html | grep -oP '\"ftp.*\"' | sed s/\\\"//g | parallel wget\n\nTransform a lot of mammograms parallely::\n\n     find \"$(pwd)\" -type f -name '*.LJPEG' | parallel -j+0 \"ljpeg {} $(pwd)/{/.}.tiff --verify\"\n\nMaking Changes & Contributing\n=============================\n\nThis project uses `pre-commit`_, please make sure to install it before making any\nchanges::\n\n    pip install pre-commit\n    cd demo-project\n    pre-commit install\n\nIt is a good idea to update the hooks to the latest version::\n\n    pre-commit autoupdate\n\nDon't forget to tell your contributors to also install and use pre-commit.\n\n.. _pre-commit: https://pre-commit.com/\n\nNote\n====\n\nThis project has been set up using PyScaffold 4.2.2.post1.dev3+g01e6e81. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sanchezcarlosjr/ljpeg",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ljpeg",
    "package_url": "https://pypi.org/project/ljpeg/",
    "platform": "Mac",
    "project_url": "https://pypi.org/project/ljpeg/",
    "project_urls": {
      "Documentation": "https://github.com/sanchezcarlosjr/ljpeg",
      "Homepage": "https://github.com/sanchezcarlosjr/ljpeg"
    },
    "release_url": "https://pypi.org/project/ljpeg/3.6.11/",
    "requires_dist": [
      "numpy (<1.25,>=1.24)",
      "opencv-python (<4.8,>=4.7)",
      "importlib-metadata ; python_version < \"3.8\"",
      "setuptools ; extra == 'testing'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Read and transform LJPEG images",
    "version": "3.6.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17044831,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32279b4ea68b3d1a2161cfa2034219042148797e322f60967ffa00e669ca350c",
        "md5": "fd236f4c2623bb16269f14b93eff67d1",
        "sha256": "9508fc2f09cca978c66c0f0ec3b652d53f7c4dc864fd5a2232e7c1c25f16a156"
      },
      "downloads": -1,
      "filename": "ljpeg-3.6.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fd236f4c2623bb16269f14b93eff67d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 626474,
      "upload_time": "2023-02-26T00:28:43",
      "upload_time_iso_8601": "2023-02-26T00:28:43.695518Z",
      "url": "https://files.pythonhosted.org/packages/32/27/9b4ea68b3d1a2161cfa2034219042148797e322f60967ffa00e669ca350c/ljpeg-3.6.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "595648298c1fea75038d739c4a8a2191b1f60b3cd0db509018832f899ba03053",
        "md5": "4ffc81c1a9c82d5695bb746197dfd683",
        "sha256": "a60c9d36a6289241101ebbd3643b2d5f485b911898610e3bbc2996d2a7cf8172"
      },
      "downloads": -1,
      "filename": "ljpeg-3.6.11.tar.gz",
      "has_sig": false,
      "md5_digest": "4ffc81c1a9c82d5695bb746197dfd683",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 628098,
      "upload_time": "2023-02-26T00:28:57",
      "upload_time_iso_8601": "2023-02-26T00:28:57.916266Z",
      "url": "https://files.pythonhosted.org/packages/59/56/48298c1fea75038d739c4a8a2191b1f60b3cd0db509018832f899ba03053/ljpeg-3.6.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}