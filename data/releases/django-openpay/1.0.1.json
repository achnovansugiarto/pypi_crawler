{
  "info": {
    "author": "GRVTYlabs",
    "author_email": "daniel.ortiz@grvtylabs.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "**django-openpay**\n==================\n\nDjango app for online transactions\n----------------------------------\n\n[Openpay][openpay-page] is an online gateway to execute online\npayments using debit/credit cards or bank transferences. Openpay allows to\ncreate Plans for system memberships, with an autocharge system.\n\nDjango-Openpay is a django application created to wrap the current library of\n[Openpay for Python][openpay-git]. Django-Openpay integrates two Openpay\nlibraries:\n\n*   The Python library to manage Plans, Charges, Subscriptions, Customers and\nCards (partially) directly through django models.\n\n*   The JavaScript library to manage payouts, transfers and cards without\nsaving sensitive information in your django application. (Giving us the relief\nof not having to make our Django system [PCI Compliant][pci-wiki-page])\n\nFeatures\n--------\n\n1.  Create directly from Django into Openpay:\n    *   Customers\n    *   Plans\n    *   Subscriptions\n    *   Charges\n\n2.  Delete directly from Django into Openpay:\n    *   Customers\n    *   Plans\n    *   Subscriptions\n    *   Cards\n\n3.  Create from JSX into Openpay:\n    *   Cards\n\n4.  Reflect updates through webhooks from Openpay into Django:\n    *   Charges\n\n5.  Refund or Capture Charges.\n\n\nInstallation\n------------\n\nTo install this package from pip it is required to execute:\n\n`pip install django-openpay`\n\nThis package includes JSX and JS files to be able to use the JavaScript library\nwithout further delay.\n\nTo use the JSX files, you should have Webpack or Gulp installed to compile the\nJSX to ES5 or ES6. But due to my inexperience for including NPM dependencies\nin pip packages, you will require to install `react` and `react-dom` by\nhand. Although we could have used the Node package of Openpay and prevent some\nmanual configuration, we have no idea of how the security is managed inside\nthe Node package to be used directly from front-end.\n\nTo use the JSX file, be sure to include in your HTML head:\n\n    <script type='text/javascript' src='https://code.jquery.com/jquery-3.1.0.min.js'></script>\n    <script type='text/javascript' src='https://openpay.s3.amazonaws.com/openpay.v1.min.js'></script>\n    <script type='text/javascript' src='https://openpay.s3.amazonaws.com/openpay-data.v1.min.js'></script>\n\nThis package requires to have knowledge of your Openpay's public, private and\nmerchant keys. To do this you just have to put your keys inside the\n`settings.py` file of your Django project using the following variables:\n\n```python\nOPENPAY_PRIVATE_API_KEY='string'\nOPENPAY_PUBLIC_API_KEY='string'\nOPENPAY_MERCHANT_ID='string'\nOPENPAY_VERIFY_SSL=True  # or False\nOPENPAY_DEVICE_ID='string'\nOPENPAY_CUSTOMER_MODEL='string'\n```\n\nThe `AbstractCustomer` model is a model which can be inherited from. This was\ndone because you may want to make your `User` model the customer, or manage a\nteam of users as one customer. It is up to you, just remember to use all the\nfields described in the abstract, or (in case you want to rename the fields)\nset them to `None` and overwrite the `pull` and `push` methods.\n\nThen you will have to run the `python manage.py makemigrations` command. This\nis necessary due to the problem that there is no default `Customer` model,\nuntil you inherit from the `AbstractCustomer` and declare it inside the\nsettings.py variable `OPENPAY_CUSTOMER_MODEL`.\n\nIn order to be able to use the Webhooks feature, you need to link your Openpay\nproject to a specific url of your project (which calls the\n`'django_openpay.views.webhook'` view), inside the Openpay system. Remember\nthat this package tries to make everything as secure as possible and, for that\nsame reason, you need to activate the BasicAuth option in the Openpay system\nwhen you are creating the webhook, using a username and a password (it must NOT\nbe a Django user). That same username and password will be added directly in\nyour django settings file inside the the variable `OPENPAY_BASICAUTH_USERS`.\nThis variable should be used like:\n\n```python\nOPENPAY_BASICAUTH_USERS = {\n  \"username\": \"password\"\n}\n```\n\n\nTesting\n-------\n\n[![Run in Postman][postman-svg]][postman-pkg]\n\n\n\nOther docs\n----------\n\n*   [Changelog][changelog]\n*   [Milestones][milestones]\n*   [Webhook log][webhook-log]\n*   [LICENSE][license]\n\n\n\nDisclaimer\n---------\n\n**django-openpay** doesn't save critical information in its django models.\nAll the information that can be saved inside the models without needing to be\nPCI Compliant is being saved. The most sensitive information is being accessed\nfrom the Openpay servers by using access tokens.\n\n**django-openpay** has not been tested for security vulnerabilities yet and does\nnot have an SSL certificate preconfiguration, this is the reason behind our\ndecision to be able to create cards only in the front-end.\n\n\n\nOwned and developed by\n--------\n\n[![StackShare][stack-shield]][stack-tech]\n\n\n[![GRVTYlabs][logo]](www.grvtylabs.com)\n\n[logo]: https://github.com/grvty-labs/django-openpay/blob/master/logo.png?raw=true \"GRVTYlabs\"\n[stack-shield]: http://img.shields.io/badge/tech-stack-0690fa.svg?style=flat\n[stack-tech]: http://stackshare.io/letops/grvtylabs\n\n[openpay-git]: https://github.com/open-pay/openpay-python/\n[openpay-page]: http://www.openpay.mx/en/\n[pci-wiki-page]: https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard\n[postman-svg]: https://run.pstmn.io/button.svg\n[postman-pkg]: https://app.getpostman.com/run-collection/929685fa23a4a51f1a2f\n\n[changelog]: https://github.com/grvty-labs/django-openpay/blob/master/docs/Changelog.md\n[milestones]: https://github.com/grvty-labs/django-openpay/blob/master/docs/Milestones.md\n[webhook-log]: https://github.com/grvty-labs/django-openpay/blob/master/docs/log/webhook.md\n[license]: https://github.com/grvty-labs/django-openpay/blob/master/LICENSE",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/grvty-labs/django-openpay",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-openpay",
    "package_url": "https://pypi.org/project/django-openpay/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-openpay/",
    "project_urls": {
      "Homepage": "https://github.com/grvty-labs/django-openpay"
    },
    "release_url": "https://pypi.org/project/django-openpay/1.0.1/",
    "requires_dist": [
      "jsonfield",
      "OpenpayGrvty (>=0.4.7)"
    ],
    "requires_python": "",
    "summary": "Django application which integrates the OpenPay libraries for online transactions",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2608140,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c07ec2966609ed394797e94fc100ebdb8dfa5ed454a87953729fd57cf506ac4",
        "md5": "9979e741c4730421fc6e13e0cc27f702",
        "sha256": "a4f3b2db73c3e4ff7f4e5791e1aeb79e127a40f54f74fd3b5eb5400b66be3308"
      },
      "downloads": -1,
      "filename": "django_openpay-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9979e741c4730421fc6e13e0cc27f702",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29004,
      "upload_time": "2016-12-21T00:07:58",
      "upload_time_iso_8601": "2016-12-21T00:07:58.498864Z",
      "url": "https://files.pythonhosted.org/packages/8c/07/ec2966609ed394797e94fc100ebdb8dfa5ed454a87953729fd57cf506ac4/django_openpay-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f43c211ce0dce81a416e826ddccce149dc87c6c70309d140e9df09f22702bb8d",
        "md5": "e26f70efc559448f385452eed77f1ab5",
        "sha256": "6fcac4ef061064ddc26f93b4094cfde97f65bc48300ab923e40096c8e3ea5baf"
      },
      "downloads": -1,
      "filename": "django-openpay-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e26f70efc559448f385452eed77f1ab5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19382,
      "upload_time": "2016-12-21T00:08:00",
      "upload_time_iso_8601": "2016-12-21T00:08:00.392703Z",
      "url": "https://files.pythonhosted.org/packages/f4/3c/211ce0dce81a416e826ddccce149dc87c6c70309d140e9df09f22702bb8d/django-openpay-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}