{
  "info": {
    "author": "Emil Madsen",
    "author_email": "emil@magenta.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django Queryset Constraint\n==========================\n\n[![Build Status](https://travis-ci.com/magenta-aps/django_queryset_constraint.svg?branch=master)](https://travis-ci.com/magenta-aps/django_queryset_constraint)\n[![Release Status](https://img.shields.io/pypi/v/django_queryset_constraint)](https://pypi.org/project/django-queryset-constraint/)\n[![License](https://img.shields.io/pypi/l/django_queryset_constraint)](https://github.com/magenta-aps/django_queryset_constraint/blob/master/LICENSE)\n[![Python Versions](https://img.shields.io/pypi/pyversions/django_queryset_constraint)](https://www.python.org/downloads/)\n[![Django Versions](https://img.shields.io/pypi/djversions/django_queryset_constraint)](https://www.djangoproject.com/download/)\n\n\n\nThis library enables one to write reliable data invariants, by compiling Django\nQuerysets to database insert/update triggers, via. the migration system.\n\nMotivation\n==========\nDjango has a built-in signal system, which emits signals on various events, for\ninstance model creations, updates and deletions. However these signals are not\nemmited for queryset operations, and as such cannot be used to maintain data\ninvariants.\n\nAn attempt to ratify this was made with the [Django Queryset Signals](https://github.com/magenta-aps/django-queryset-signals) library.\nWhile this library comes closer to a reliable solution, it does not succeed,\nas it is stil possible to break the data invariants by accessing the database\ndirectly.\n\nDatabase Constraint Triggers will effectively protect against all scenarios.\n\nInstallation\n============\n```\npip install django_queryset_constraint\n```\n\nUsage\n=====\n\n- Add the `django_queryset_constraint` app to `INSTALLED_APPS`:\n\n```\n# settings.py\nINSTALLED_APPS = {\n    'django_queryset_constraint',\n    ...\n}\n```\n\n*Note: This should be done **before** any apps that will be checked*\n\n- Add `QuerysetConstraint` to `constraints` to the Meta class of the models to checked:\n\n```\n# models.py\nfrom django.db import models\nfrom django.db.models import Count\nfrom django_queryset_constraint import M, QuerysetConstraint\n\n\nclass Topping(models.Model):\n    name = models.CharField(max_length=30)\n\n\nclass PizzaTopping(models.Model):\n    class Meta:\n        unique_together = (\"pizza\", \"topping\")\n        constraints = [\n            # A pizza with more than 5 toppings gets soggy\n            QuerysetConstraint(\n                name='At most 5 toppings',\n                queryset=M().objects.values(\n                    'pizza'\n                ).annotate(\n                    num_toppings=Count('topping')\n                ).filter(\n                    num_toppings__gt=5\n                ),\n            ),\n            # This constraint should be self-explanatory for civilized people\n            QuerysetConstraint(\n                name='No pineapple',\n                queryset=M().objects.filter(\n                    topping__name=\"Pineapple\"\n                )\n            ),\n        ]\n\n    pizza = models.ForeignKey('Pizza', on_delete=models.CASCADE)\n    topping = models.ForeignKey(Topping, on_delete=models.CASCADE)\n\nclass Pizza(models.Model):\n    name = models.CharField(max_length=30)\n    toppings = models.ManyToManyField(Topping, through=PizzaTopping)\n```\n\n- Make migrations: `python manage.py makemigrations`\n- Run migrations: `python manage.py migrate`\n\n*Note: Complex triggers introduce performance overhead.*\n\nSupport Matrix\n==============\nThis app supports the following combinations of Django and Python:\n\n| Django | Python   |\n| ------ | -------- |\n| 2.2    | 3.6, 3.7 |",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/magenta-aps/django_queryset_constraint/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/magenta-aps/django_queryset_constraint",
    "keywords": "django",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-queryset-constraint",
    "package_url": "https://pypi.org/project/django-queryset-constraint/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-queryset-constraint/",
    "project_urls": {
      "Download": "https://github.com/magenta-aps/django_queryset_constraint/archive/master.zip",
      "Homepage": "https://github.com/magenta-aps/django_queryset_constraint",
      "Source": "https://github.com/magenta-aps/django_queryset_constraint"
    },
    "release_url": "https://pypi.org/project/django-queryset-constraint/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A library for writing reliable data invariants in Django.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13333210,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc9f56b1cc28a687b3f416b1c10c669fa8e859385a93de5b9dcebe94c403e8a2",
        "md5": "df573f69d3d170b333a07e93bdd9fec6",
        "sha256": "3f21a6892890f25396941043096b1bb1a8b0d592aa36789587fb5df1613336a7"
      },
      "downloads": -1,
      "filename": "django_queryset_constraint-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "df573f69d3d170b333a07e93bdd9fec6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14279,
      "upload_time": "2020-03-19T18:53:46",
      "upload_time_iso_8601": "2020-03-19T18:53:46.116776Z",
      "url": "https://files.pythonhosted.org/packages/fc/9f/56b1cc28a687b3f416b1c10c669fa8e859385a93de5b9dcebe94c403e8a2/django_queryset_constraint-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}