{
  "info": {
    "author": "BARS Group",
    "author_email": "bars@bars.group",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Russian",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Приложение для работы с базой данных ГАР в Django\n\nОсновные возможности\n====================\n\n* Импорт базы ГАР из:\n    * архива XML\n    * каталога с XML\n    * напрямую с сайта http://fias.nalog.ru в формате XML\n* Импорт всех существующих справочников и классификаторов ГАР (с возможностью выборочного импорта)\n* Возможность хранить данные в отдельной БД\n\nСовместимость\n=============\n\n* Гарантируется работа на Django 3.2 и Python 3.9\n\nОписание ключей командной строки (./manage.py gar_load_data)\n============================================================\n\n\n--src <path|filename|url|auto>\n    Путь до архива с БД ГАР, каталога, в который предварительно был распакован архив или URL-адрес, с которого требуется скачать импортируемый архив\n    Значение `auto` означает автоматическое получение данных с сайта http://fias.nalog.ru\n\n--truncate\n    Указывает полностью удалять все данные из таблицы перед импортом в неё\n\n--update\n    Обновляет БД ГАР до актуальной версии (после импорта)\n\n--limit\n    Устанавливает размер пачки записей, единовременно загружаемой в БД\n    Чем больше размер, тем быстрее импорт (в теории), но дольше обработка ошибок, если таковые возникнут\n    По-умолчанию: 10000\n\n--tables\n    Задаёт список таблиц для импорта через запятую\n\n--update-version-info, --no-update-version-info\n    Указывает, обновлять ли список версий БД ГАР\n    По-умолчанию: True\n\n--tempdir TEMPDIR\n    Путь к каталогу, где будут размещены временные файлы в процессе импорта\n    Каталог должен существовать и быть доступен для записи\n\n\nУстановка\n=========\n\n1. Установите `m3-gar`::\n\n        pip install m3-gar\n\n2. Добавьте `m3_gar` в `INSTALLED_APPS`.\n\n5. Если вы желаете использовать отдельную БД под данные ГАР, выполните следующее\n\n* Создайте БД и подключите её в `DATABASES`\n* Добавьте параметр::\n\n        GAR_DATABASE_ALIAS = 'gar'\n\nгде `gar` - алиас БД в `DATABASES`\n\n* Добавьте в список `DATABASE_ROUTERS`::\n\n        m3_gar.routers.GARRouter\n\n* Выполните::\n\n\n        python manage.py migrate --database=gar\n\nгде `gar` - алиас БД в `DATABASES`\n\n5. Выполните::\n\n        python manage.py migrate\n\n\nИмпорт данных\n=============\n\nРасшифровка сокращений\n----------------------\n* T: Table (Таблица) - импортируемая в данный момент таблица\n* L: Loaded (Загружено) - количество уже загруженных в таблицу строк\n* U: Updated (Обновлено) - количество обновлённых записей\n* FN: Filename (Имя файла) - имя файла импортируемой таблицы\n\nПервоначальная загрузка данных\n------------------------------\nСуществует несколько способов импортировать данные в БД ГАР\n\nПолностью автоматический импорт с сайта ФИАС::\n\n        python manage.py gar_load_data --src auto\n\nТакой способ не всегда целесообразен по разным причинам, поэтому лучше самостоятельно скачать полный архив и импортировать уже его::\n\n        # Архив с XML-файлами\n        python manage.py gar_load_data --src /path/to/gar_xml.zip\n        # Каталог с распакованным содержимым архива\n        python manage.py gar_load_data --src /path/to/gar_data/\n\n**Но!**\nВ случае, если в БД уже есть какие-то данные, скрипт выдаст соответствующее сообщение и прекратит работу.\nТакое поведение связано с тем, что при импорте из файла, если версия файла не совпадает с версией данных в какой-то таблице в БД ГАР,\nданные в этой таблице могут быть удалены полностью и заменены новыми, при этом\nORM Django при наличии связанных таблиц удалит данные так же и оттуда.\nПоэтому, если по этой или какой-то иной причине нужно импортировать всю БД ГАР заново, добавьте флаг *--truncate*::\n\n        python manage.py gar_load_data --src /path/to/gar_xml.zip --truncate\n\nЕсли скачанный файл не актуален, можно добавить к указанной выше команде флаг *--update* - скрипт сразу после импорта обновит БД до актуальной версии.::\n\n        python manage.py gar_load_data --src /path/to/gar_xml.zip --update\n\n\nОбновление существующей БД\n--------------------------\nДля обновления БД выполните::\n\n        python manage.py gar_load_data --update\n\nОбновление выполняется только с сайта ФИАС. Обновить базу из файла нельзя.\n\n\nОбновление схемы данных\n=======================\n\nДля обновления схемы данных ГАР предоставлена команда `gar_update_schema`\n\n--url\n    URL-адрес, с которого требуется скачать архив со схемами в формате XSD\n\n--path\n    Путь до уже скачанного архива\n\n--testmode\n    Указывает полностью удалять все данные из таблицы перед импортом в неё\n\n\nНастройка settings.py\n=====================\n`GAR_DATABASE_ALIAS` - алиас БД в `DATABASES` для данных ГАР\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m3-gar",
    "package_url": "https://pypi.org/project/m3-gar/",
    "platform": "",
    "project_url": "https://pypi.org/project/m3-gar/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/m3-gar/1.0.1/",
    "requires_dist": [
      "Django (>=3.2)",
      "requests",
      "lxml",
      "progress",
      "gitpython",
      "twine"
    ],
    "requires_python": "",
    "summary": "GAR Django integration for m3",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15543191,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a9ba607145fd4ac6e1bc1cba662b55bb24e2232d60ce4d3e96998574497d072",
        "md5": "670ef5fe0978ad40f7f0ddbc3cd0f597",
        "sha256": "0e68b7a35e7bb8724eefdaddc1377a1466e44ad2bfaea3a48e48ca693b4c089d"
      },
      "downloads": -1,
      "filename": "m3_gar-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "670ef5fe0978ad40f7f0ddbc3cd0f597",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 48892,
      "upload_time": "2021-10-04T12:41:47",
      "upload_time_iso_8601": "2021-10-04T12:41:47.092863Z",
      "url": "https://files.pythonhosted.org/packages/0a/9b/a607145fd4ac6e1bc1cba662b55bb24e2232d60ce4d3e96998574497d072/m3_gar-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9c7824281b581abbb596d7e73e14284ca232827cfe92bbf39153a96b378811a",
        "md5": "a8f6c3e86700a12c617657ad6a715e38",
        "sha256": "11e5e58a754f7797f53bc6c5f87f0c48538588eff2a2571dbd843120d83563d0"
      },
      "downloads": -1,
      "filename": "m3-gar-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a8f6c3e86700a12c617657ad6a715e38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35677,
      "upload_time": "2021-10-04T12:41:49",
      "upload_time_iso_8601": "2021-10-04T12:41:49.017419Z",
      "url": "https://files.pythonhosted.org/packages/b9/c7/824281b581abbb596d7e73e14284ca232827cfe92bbf39153a96b378811a/m3-gar-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}