{
  "info": {
    "author": "Upsight",
    "author_email": "dev@upsight.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "doctor\n======\n|docs| |build| |pypi|\n\nThis module uses python types to validate request and response data in\nFlask Python APIs.  It uses `python 3 type hints <https://docs.python.org/3/library/typing.html>`_\nto validate request paramters and generate API documentation. It also supports\ngeneric schema validation for plain dictionaries. An example of the generated\nAPI documentation can\nbe `found in the docs <http://doctor.readthedocs.io/en/latest/flask.html#example-api-documentation>`_.\n\nInstall\n-------\n\ndoctor can easily be installed using pip:\n\n    $ pip install doctor\n   \nQuick Start\n-----------\n\nDefine some types that will be used to validate your request parameters.\n\n.. code-block:: python\n\n    # mytypes.py\n    from doctor import types\n\n    # doctor provides helper functions to easily define simple types.\n    FooId = types.integer('The foo ID.')\n    FetchBars = types.boolean('A flag that indicates if we should fetch bars')\n\n    # You can also inherit from type classes to create more complex types.\n    class Foo(types.Object):\n        description = 'A Foo object'\n        example = {'foo_id': 1}\n        properties = {'foo_id': FooId}\n        required = ['foo_id']\n        additional_properties = False\n\nDefine the logic function that our endpoint will route to:\n\n.. code-block:: python\n\n    # foo.py\n    from mytypes import Foo, FooId, FetchBars\n\n    # Note the type annotations on this function definition. This tells Doctor how\n    # to parse and validate parameters for routes attached to this logic function.\n    # The return type annotation will validate the response conforms to an\n    # expected definition in development environments.  In non-development\n    # environments a warning will be logged.\n    def get_foo(foo_id: FooId, fetch_bars: FetchBars=False) -> Foo:\n        \"\"\"Fetches the Foo object and optionally related bars.\"\"\"\n        return Foo.get_by_id(foo_id, fetch_bars=fetch_bars)\n        \nNow tie the endpoint to the logic function with a route:\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_restful import Api\n    from doctor.routing import create_routes, get, Route\n\n    from foo import get_foo\n   \n    routes = (\n        Route('/foo/<int:foo_id>/', methods=(\n            get(get_foo),)\n        ),\n    )\n    \n    app = Flask(__name__)\n    api = Api(app)\n    for route, resource in create_routes(routes):\n        api.add_resource(resource, route)\n    \nThat's it, you now have a functioning API endpoint you can curl and the request is automatically validated for you based on your\nschema.  Positional arguments in your logic function are considered required request parameters and keyword arguments are considered\noptional.  As a bonus, using the `autoflask <http://doctor.readthedocs.io/en/latest/docs.html>`_ sphinx directive, you will also get\nautomatically generated API documentation.\n\n.. image:: example_api_docs.png\n    :alt: Generated API documentation\n    :align: left\n    :target: http://doctor.readthedocs.io/en/latest/docs.html\n   \nDocumentation\n-------------\n\nDocumentation and a full example is available at readthedocs_.\n   \nRunning Tests\n-------------\n\nTests can be run with tox_. It will handle installing dependencies into a\nvirtualenv, running tests, and rebuilding documentation.\n\nThen run Tox:\n\n.. code-block:: bash\n\n    cd doctor\n    tox\n\n\nYou can pass arguments to pytest directly:\n\n.. code-block:: bash\n\n    tox -- test/test_flask.py\n\n\n.. _readthedocs: http://doctor.readthedocs.io/en/latest/index.html\n.. _tox: https://testrun.org/tox/latest/\n\n.. |docs| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: http://doctor.readthedocs.io/en/latest/index.html\n    \n.. |build| image:: https://api.travis-ci.org/upsight/doctor.svg?branch=master\n    :alt: Build Status\n    :scale: 100%\n    :target: https://travis-ci.org/upsight/doctor\n    \n.. |pypi| image:: https://img.shields.io/pypi/v/doctor.svg\n    :alt: Pypi\n    :scale: 100%\n    :target: https://pypi.python.org/pypi/doctor/\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/upsight/doctor",
    "keywords": "python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doctor",
    "package_url": "https://pypi.org/project/doctor/",
    "platform": "",
    "project_url": "https://pypi.org/project/doctor/",
    "project_urls": {
      "Homepage": "https://github.com/upsight/doctor"
    },
    "release_url": "https://pypi.org/project/doctor/3.8.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This module uses python 3 type hints to validate request and response data in Flask Python APIs and generate API documentation.",
    "version": "3.8.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6922476,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8822b98b46f3af055c15f4c6c6934d7e04a019e4c226c66b1da039b71967e1c",
        "md5": "1ea0990229df791fd420ec80cbbc49b0",
        "sha256": "b7efe98643858ee74c75e684513e4db9408892049adc41855a9703ce93565c06"
      },
      "downloads": -1,
      "filename": "doctor-3.8.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1ea0990229df791fd420ec80cbbc49b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 52632,
      "upload_time": "2018-07-02T17:54:15",
      "upload_time_iso_8601": "2018-07-02T17:54:15.471752Z",
      "url": "https://files.pythonhosted.org/packages/e8/82/2b98b46f3af055c15f4c6c6934d7e04a019e4c226c66b1da039b71967e1c/doctor-3.8.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}