{
  "info": {
    "author": "Lotrèk",
    "author_email": "dimmitutto@lotrek.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "========================================\ndjango-hvad |package| |coverage| |build|\n========================================\n\n**Model translations made easy.**\n\nThis project adds support for model translations in Django. It is designed to be\nunobtrusive, efficient and reliable. On the technical side, it uses an automatically\ncreated `Translations Model` to store translatable fields in arbitrary\nlanguages with a foreign key to the main model, enabling fast queries.\n\nStarted in 2011, hvad has grown mature and is now used on large scale applications.\n\nQuick links:\n\n- `Documentation`_.\n- `Release notes`_.\n- `Issue tracker`_.\n\nFeatures\n--------\n\n* **Simple** - only 3 new queryset methods.\n* **Natural** - use Django ORM as usual, it just became language aware.\n* **Fast** - no additional queries for reads, just an inner join to an indexed key.\n* **Complete** - relationships, custom managers and querysets, proxy models, and abstract models.\n* **Batteries included** - translation-enabled forms and admin are provided.\n* **Reliable** - more than 300 test cases and counting. |coverage| |build|\n* **Compatible** - follows Django compatibility matrix.\n\nDjango-hvad also features support for `Django REST framework`_ 3.1 or newer, including\ntranslation-aware serializers.\n\nExample Uses\n------------\n\nDeclaring a translatable ``Book`` model::\n\n    class Book(TranslatableModel):\n        author = models.ForeignKey(Author)\n        release = models.Date()\n\n        translations = TranslatedFields(\n            title = models.CharField(max_length=250)\n        )\n\nThus, only the title will vary based on the language. Release date and\nauthor are shared among all languages. Let's now create a ``Book`` instance::\n\n    # The recommended way:\n    book = Book.objects.language('en').create(\n        author = Author.objects.get(name='Antoine de Saint Exupéry'),\n        release = datetime.date(1943, 4, 6),\n        title = \"The Little Prince\",\n    )\n\n    # Also works\n    book = Book(language_code='en')\n    book.author = Author.objects.get(name='Antoine de Saint Exupéry')\n    book.release = datetime.date(1943, 4, 6)\n    book.title = \"The Little Prince\"\n    book.save()\n\nProviding some translations::\n\n    book.translate('fr')\n    book.title = \"Le Petit Prince\"\n    book.save()\n    book.translate('de')\n    book.title = \"Der kleine Prinz\"\n    book.save()\n\nEvery call to ``translate()`` creates a new translation from scratch and switches\nto that translation; ``save()`` only saves the latest translation. Let's now perform\nsome language-aware queries::\n\n    Book.objects.all()\n\nCompatible by default: returns all objects, without any translated fields attached.\nStarting from v1.0, default behavior can be overriden to work like next query::\n\n    Book.objects.language().all()\n\nReturns all objects as translated instances, but only the ones that are translated\ninto the currect language. You can also specify which language to get, using e.g.::\n\n    Book.objects.language(\"en\").all()\n\nUsual queryset methods work like they always did: let's get all books as translated instances,\nfiltering on the ``title`` attribute, returning those that have\n``Petit Prince`` in their French title, ordered by publication date (in their\nFrench edition)::\n\n    Book.objects.language(\"fr\").filter(title__contains='Petit Prince').order_by('release')\n\nOther random examples::\n\n    # last German book published in year 1948\n    Book.objects.language(\"de\").filter(release__year=1948).latest()\n\n    # other books from the same author as mybook. Cache author as well.\n    Book.objects.language().select_related('author').filter(author__books=mybook)\n\n    # books that have \"Django\" in their title, regardless of the language\n    Book.objects.language('all').filter(title__icontains='Django')\n\n\nMore examples in the `quickstart guide`_.\n\nReleases\n--------\n\nDjango-hvad uses the same release pattern as Django. The following versions\nare thus available:\n\n* Legacy branch 1.8, available through `PyPI`_ and git branch ``releases/1.8.x``.\n* Stable branch 2.0, available through `PyPI`_ and git branch ``releases/2.0.x``.\n* Development branch 2.1, available through git branch ``master``.\n\nStable branches have minor bugfix releases as needed, with guaranteed compatibility.\nSee the `installation guide`_ for details, or have a look at the `release notes`_.\n\nThanks to\n---------\n\nJonas Obrist (https://github.com/ojii) for making django-nani and for helping me with this project.\n\nKristian Øllegaard (https://github.com/KristianOellegaard/) for django-hvad and trusting me\nto continue the development.\n\n.. |package| image:: https://img.shields.io/pypi/v/lotrek-django-hvad?style=flat-square\n                     :target: https://pypi.org/project/lotrek-django-hvad\n.. |build| image:: https://img.shields.io/github/workflow/status/lotrekagency/django-hvad/Test,%20Coverage%20and%20Release?style=flat-square\n.. |coverage| image:: https://img.shields.io/codecov/c/github/lotrekagency/django-hvad?style=flat-square\n\n.. _documentation: http://django-hvad.readthedocs.org/\n.. _release notes: https://django-hvad.readthedocs.org/en/latest/public/release_notes.html\n.. _issue tracker: https://github.com/KristianOellegaard/django-hvad/issues\n.. _PyPI: https://pypi.python.org/pypi/django-hvad\n.. _Django REST framework: http://www.django-rest-framework.org/\n.. _installation guide: http://django-hvad.readthedocs.org/en/latest/public/installation.html\n.. _quickstart guide: http://django-hvad.readthedocs.org/en/latest/public/quickstart.html\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lotrekagency/django-hvad",
    "keywords": "cms,django,api cms",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lotrek-django-hvad",
    "package_url": "https://pypi.org/project/lotrek-django-hvad/",
    "platform": null,
    "project_url": "https://pypi.org/project/lotrek-django-hvad/",
    "project_urls": {
      "Homepage": "https://github.com/lotrekagency/django-hvad"
    },
    "release_url": "https://pypi.org/project/lotrek-django-hvad/2.0.4/",
    "requires_dist": [
      "Django (>=1.8)"
    ],
    "requires_python": ">=3.0.*",
    "summary": "A content translation framework for django integrated automatically in the normal ORM. Removes the pain of having to think about translations in a django project.",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16176056,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f1db99e9644169ae4d503ea51a08b1d5dcc68727e838c718fc3710872d2ed1c",
        "md5": "8e90f5920d7bec8b9ace723ca8a6537c",
        "sha256": "57bc9cdc57e1734a026e2a2c1435e4106f696971a62b07b83a94a90ed7936207"
      },
      "downloads": -1,
      "filename": "lotrek_django_hvad-2.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e90f5920d7bec8b9ace723ca8a6537c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.0.*",
      "size": 106692,
      "upload_time": "2022-10-17T15:08:49",
      "upload_time_iso_8601": "2022-10-17T15:08:49.590139Z",
      "url": "https://files.pythonhosted.org/packages/3f/1d/b99e9644169ae4d503ea51a08b1d5dcc68727e838c718fc3710872d2ed1c/lotrek_django_hvad-2.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39d947e073730c7d3a5525db66cb9b0986e3f03bcaa70aa9470191c0e1db5530",
        "md5": "c0983216e12a1cd24c566c1ae4cfc894",
        "sha256": "bac8696edaca71dd2e1a9e00bb0bc49438ba90d3f1a992ad3f30a82364b56dec"
      },
      "downloads": -1,
      "filename": "lotrek-django-hvad-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c0983216e12a1cd24c566c1ae4cfc894",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0.*",
      "size": 108749,
      "upload_time": "2022-10-17T15:08:50",
      "upload_time_iso_8601": "2022-10-17T15:08:50.933027Z",
      "url": "https://files.pythonhosted.org/packages/39/d9/47e073730c7d3a5525db66cb9b0986e3f03bcaa70aa9470191c0e1db5530/lotrek-django-hvad-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}