{
  "info": {
    "author": "Nicholas H.Tollervey",
    "author_email": "ntoll@ntoll.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Education",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "MicroFS\n-------\n\nA simple command line tool and module for interacting with the limited\nfile system provided by MicroPython on the BBC micro:bit.\n\nInstallation\n++++++++++++\n\nTo install simply type::\n\n    $ pip install microfs\n\n...and the package will download from PyPI. If you wish to upgrade to the\nlatest version, use the following command::\n\n    $ pip install --no-cache --upgrade microfs\n\nUsage\n+++++\n\nThere are two ways to use microfs - as a module in your Python code or as a\nstand-alone command to use from your shell (``ufs``).\n\nIn Code\n=======\n\nIn your Python script import the required functions like this::\n\n    from microfs import ls, rm, put, get, get_serial\n\nRead the API documentation below to learn how each of the functions works.\n\nCommand Line\n============\n\nFrom the command line (but not the Python shell) use the \"ufs\" (\"u\" = micro)\ncommand.\n\nTo read the built-in help::\n\n    $ ufs --help\n\nList the files on the device::\n\n    $ ufs ls\n\nDelete a file on the device::\n\n    $ ufs rm foo.txt\n\nCopy a file onto the device::\n\n    $ ufs put path/to/local.txt\n\nGet a file from the device::\n\n    $ ufs get remote.txt\n\nThe ``put`` and ``get`` commands optionally take a further argument to specify\nthe name of the target file::\n\n    $ ufs put /path/to/local.txt remote.txt\n    $ ufs get remote.txt local.txt\n\nDevelopment\n+++++++++++\n\nThe source code is hosted in GitHub. Please feel free to fork the repository.\nAssuming you have Git installed you can download the code from the canonical\nrepository with the following command::\n\n    $ git clone https://github.com/ntoll/microfs.git\n\nEnsure you have the correct dependencies for development installed by creating\na virtualenv and running::\n\n    $ pip install -r requirements.txt\n\nTo locally install your development version of the module into a virtualenv,\nrun the following command::\n\n    $ python setup.py develop\n\nThere is a Makefile that helps with most of the common workflows associated\nwith development. Typing \"make\" on its own will list the options thus::\n\n    $make\n\n    There is no default Makefile target right now. Try:\n\n    make clean - reset the project and remove auto-generated assets.\n    make pyflakes - run the PyFlakes code checker.\n    make pep8 - run the PEP8 style checker.\n    make test - run the test suite.\n    make coverage - view a report on test coverage.\n    make check - run all the checkers and tests.\n    make package - create a deployable package for the project.\n    make publish - publish the project to PyPI.\n    make docs - run sphinx to create project documentation.\n\n\n\nRelease History\n===============\n\n1.4.1\n-----\n\n* Clamp PySerial version to use with microfs to a version known to work.\n\n1.4.0\n-----\n\n* Updated and changed the ``get`` functionality to work on a wider range of\n  supported boards. Many thanks to Carlos Pereira Atencio for putting in the\n  effort to make this happen.\n\n1.3.1\n-----\n\n* Fix bug in version parsing that was mangling the ``machine`` attribute.\n\n1.3.0\n-----\n\n* Added a new function (not available via the command line) to get the version\n  of MicroPython on the device.\n* **API CHANGE** The find_microbit function now returns a tuple with position 0\n  as the port and position 1 as the serial number of the connected device.\n\n1.2.3\n-----\n\n* Extensive debugging and a fix by Carlos Pereira Atencio to ensure that serial\n  connections are opened, closed and made ready for microfs related commands in\n  a robust manner.\n\n1.2.2\n-----\n\n* The get and put commands optionally take a further argument to specify the\n  name of the target file.\n\n1.2.1\n-----\n\n* Made implicit string concatenation explicit.\n\n1.2.0\n-----\n\n* **API CHANGE** the serial object passed into command functions is optional.\n* **API CHANGE** call signature changes on command functions.\n\n1.1.2\n-----\n\n* Allow external modules to use built-in device detection and connection.\n\n1.1.1\n-----\n\n* Unlink command logic from device detection and serial connection.\n\n1.1.0\n-----\n\n* Fix broken 'put' and 'get' commands to work with arbitrary file sizes.\n* Fix error when working with binary data.\n* Update execute function to work with lists of multiple commands.\n* Minor refactor to extract raw mode related code.\n* Updated tests to keep coverage at 100% on both Python 2 and Python 3.\n\n1.0.2\n-----\n\n* Remove spare print call.\n\n1.0.1\n-----\n\n* Fix broken setup.\n\n1.0.0\n-----\n\n* Full implementation of all the expected features.\n* 100% test coverage.\n* Comprehensive documentation.\n\n0.0.1\n-----\n\n* Initial release. Basic functionality.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ntoll/microfs",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microfs",
    "package_url": "https://pypi.org/project/microfs/",
    "platform": "",
    "project_url": "https://pypi.org/project/microfs/",
    "project_urls": {
      "Homepage": "https://github.com/ntoll/microfs"
    },
    "release_url": "https://pypi.org/project/microfs/1.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A module and utility to work with the simple filesystem on the BBC micro:bit",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11935564,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e6a92b161ec0d1f438becde63036fa8ed5318f0488a476126e977fc62c398ae",
        "md5": "1b052ec07a24d02ce2c56440750b4d42",
        "sha256": "121d0195eaf54dda41997d7ae65cd5fcd7abbb60cd7ced02796c5d5b229da077"
      },
      "downloads": -1,
      "filename": "microfs-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1b052ec07a24d02ce2c56440750b4d42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8009,
      "upload_time": "2019-04-18T11:04:26",
      "upload_time_iso_8601": "2019-04-18T11:04:26.245657Z",
      "url": "https://files.pythonhosted.org/packages/9e/6a/92b161ec0d1f438becde63036fa8ed5318f0488a476126e977fc62c398ae/microfs-1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}