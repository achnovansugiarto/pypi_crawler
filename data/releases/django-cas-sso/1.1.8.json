{
  "info": {
    "author": "di-dip-unistra",
    "author_email": "di-dip@unistra.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries",
      "Topic :: Utilities"
    ],
    "description": "# django-cas-sso\n\n[![Code Health](https://landscape.io/github/unistra/django-cas/master/landscape.svg?style=flat)](https://landscape.io/github/unistra/django-cas/master)\n\nCAS client for Django.  This is K-State&#39;s fork of the original, which lives at\nhttps://bitbucket.org/cpcc/django-cas/overview.  This fork is actively maintaned and \nincludes several new features.\n\nCurrent version: 0.8.5\n\nhttps://github.com/kstateome/django-cas\n\n\n## Install\n\n\nSee the document at Bitbucket\n\nhttps://bitbucket.org/cpcc/django-cas/overview\n\n## Settings.py for CAS\n\nAdd the following to middleware if you want to use CAS::\n\n    MIDDLEWARE = (\n    'django_cas.middleware.CASMiddleware',\n    )\n\n\nAdd these to ``settings.py`` to use the CAS Backend::\n\n\n    CAS_SERVER_URL = \"Your Cas Server\"\n    CAS_LOGOUT_COMPLETELY = True\n\nTo disable CAS authentication for the entire django admin app, you should use the ``CAS_ADMIN_AUTH`` parameter::\n\n    CAS_ADMIN_AUTH = False\n\n## Url namespace\n\nInclude `django_cas` urls :\n\n* if your django version is 1.8 or older (defining the namespace \"django_cas\" is required) :\n\n\t\turl(r'your-base_uri/', include('django_cas.urls', namespace='django_cas'))\n\n* for version >= 1.9 (a default namespace \"django_cas\" will be set but you can set yours if you want) :\n\n\t\turl(r'your-base_uri/', include('django_cas.urls'))\n\n\n# Additional Features\n\nThis fork contains additional features not found in the original:\n*  Proxied Hosts\n*  CAS Response Callbacks\n*  CAS Gateway\n*  Proxy Tickets (From Edmund Crewe) \n\n## Proxied Hosts\n\nYou will need to setup middleware to handle the use of proxies.\n\nAdd a setting ``PROXY_DOMAIN`` of the domain you want the client to use.  Then add\n\n    MIDDLEWARE = (\n    'django_cas.middleware.ProxyMiddleware',\n    )\n\nThis middleware needs to be added before the django ``common`` middleware.\n\n\n## CAS Response Callbacks\n\nTo store data from CAS, create a callback function that accepts the ElementTree object from the\nproxyValidate response. There can be multiple callbacks, and they can live anywhere. Define the \ncallback(s) in ``settings.py``:\n\n    CAS_RESPONSE_CALLBACKS = (\n        'path.to.module.callbackfunction',\n        'anotherpath.to.module.callbackfunction2',\n    )\n\nand create the functions in ``path/to/module.py``:\n\n    def callbackfunction(tree):\n        username = tree[0][0].text\n\n        user, user_created = User.objects.get_or_create(username=username)\n        profile, created = user.get_profile()\n\n        profile.email = tree[0][1].text\n        profile.position = tree[0][2].text\n        profile.save()\n\n\n## CAS Gateway\n\nTo use the CAS Gateway feature, first enable it in settings. Trying to use it without explicitly\nenabling this setting will raise an ImproperlyConfigured:\n\n    CAS_GATEWAY = True\n\nThen, add the ``gateway`` decorator to a view:\n\n    from django_cas.decorators import gateway\n\n    @gateway()\n    def foo(request):\n        #stuff\n        return render(request, 'foo/bar.html')\n\n\n## Custom Forbidden Page\n\nTo show a custom forbidden page, set ``CAS_CUSTOM_FORBIDDEN`` to a ``path.to.some_view``.  Otherwise,\na generic ``HttpResponseForbidden`` will be returned.\n\n\n## Proxy Tickets\n\nThis fork also includes Edmund Crewe's proxy ticket patch:\nhttp://code.google.com/r/edmundcrewe-proxypatch/source/browse/django-cas-proxy.patch\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/django-cas-sso",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/unistra/django-cas/",
    "keywords": "django,cas,sso",
    "license": "MIT",
    "maintainer": "di-dip-unistra",
    "maintainer_email": "di-dip@unistra.fr",
    "name": "django-cas-sso",
    "package_url": "https://pypi.org/project/django-cas-sso/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cas-sso/",
    "project_urls": {
      "Download": "http://pypi.python.org/pypi/django-cas-sso",
      "Homepage": "http://github.com/unistra/django-cas/"
    },
    "release_url": "https://pypi.org/project/django-cas-sso/1.1.8/",
    "requires_dist": [
      "six"
    ],
    "requires_python": "",
    "summary": "Django Cas SSO Client (inherited from django-cas)",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12326660,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1be2a34b84fe91ca49e40d9c897e571411b121000c86cf097981a88b8ccec56",
        "md5": "1866085c3e6fdf7cf62516c337424710",
        "sha256": "20040e39e59901cf63a87da2e944743685ef9db17c66fe59fc8a9acb6c58f422"
      },
      "downloads": -1,
      "filename": "django_cas_sso-1.1.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1866085c3e6fdf7cf62516c337424710",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 22030,
      "upload_time": "2019-11-13T14:55:27",
      "upload_time_iso_8601": "2019-11-13T14:55:27.623154Z",
      "url": "https://files.pythonhosted.org/packages/d1/be/2a34b84fe91ca49e40d9c897e571411b121000c86cf097981a88b8ccec56/django_cas_sso-1.1.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80d2b928460e8f007801c7761426061be726ddb6909875121aae94354e4e5f50",
        "md5": "0f4ba92d1de9625783cd109e7cf5a292",
        "sha256": "dfccc11118cff32abe1e1605f62e88170beecfd2c647b9f1ea6f80e9a314663e"
      },
      "downloads": -1,
      "filename": "django-cas-sso-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "0f4ba92d1de9625783cd109e7cf5a292",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14007,
      "upload_time": "2019-11-13T14:55:28",
      "upload_time_iso_8601": "2019-11-13T14:55:28.947256Z",
      "url": "https://files.pythonhosted.org/packages/80/d2/b928460e8f007801c7761426061be726ddb6909875121aae94354e4e5f50/django-cas-sso-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}