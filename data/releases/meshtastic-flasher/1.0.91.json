{
  "info": {
    "author": "Kevin Hester",
    "author_email": "kevinh@geeksville.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Meshtastic-gui-installer\n\n[![Pylint](https://github.com/meshtastic/Meshtastic-gui-installer/actions/workflows/pylint.yml/badge.svg)](https://github.com/meshtastic/Meshtastic-gui-installer/actions/workflows/pylint.yml) \n[![codecov](https://codecov.io/gh/meshtastic/Meshtastic-gui-installer/branch/master/graph/badge.svg?token=CEnDhjIJFU)](https://codecov.io/gh/meshtastic/Meshtastic-gui-installer)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/meshtastic-flasher)\n\nCross Platform GUI for installing [Meshtastic](https://meshtastic.org/) [Firmware](https://github.com/meshtastic/Meshtastic-device). It also checks and updates the [RAK 4631](https://docs.rakwireless.com/Product-Categories/WisBlock/RAK4631/Overview/) and [LilyGo T-Echo](https://github.com/Xinyuan-LilyGO/LilyGO-T-Echo) bootloaders.\n\n\n# Example showing esp32 device:\n<img width=\"806\" alt=\"Screen Shot 2022-02-24 at 12 39 59 PM\" src=\"https://user-images.githubusercontent.com/2219838/155604278-4d56bf40-11b3-45a7-86b7-bff93b514c8b.png\">\n\n\n# Example showing a RAK WisBlock Core RAK4631:\n<img width=\"806\" alt=\"Screen Shot 2022-02-24 at 12 41 05 PM\" src=\"https://user-images.githubusercontent.com/2219838/155604298-c45ff068-c63b-4e96-af1c-820f396f036c.png\">\n\n# Advanced Options\n<img width=\"485\" alt=\"Screen Shot 2022-02-24 at 12 41 12 PM\" src=\"https://user-images.githubusercontent.com/2219838/155604337-3d0632e5-941e-4a3e-832c-71e1e80adff4.png\">\n\n# Settings\n<img width=\"1072\" alt=\"Screen Shot 2022-02-24 at 12 41 51 PM\" src=\"https://user-images.githubusercontent.com/2219838/155604372-64c087e9-104e-4397-94f0-7992391bca49.png\">\n\n\n# Installation\n\n* For the single file executable see [Releases](https://github.com/meshtastic/Meshtastic-gui-installer/releases). There is a readme.txt that shows the steps to get started.\n\n* Steps to install from [PyPi](https://pypi.org/project/meshtastic-flasher/) (if you do not want the single executable method described above):\n\nLinux/Mac:\n\n```\npython3 -m venv venv\nsource venv/bin/activate\npip install --upgrade pip\npip install meshtastic-flasher\n```\n\nWindows command prompt: (assuming Python3 was installed from https://www.python.org/downloads/ and `python --version` reports 3.6+):\n\n```\npython -m venv venv\nvenv\\Scripts\\activate\npython -m pip install --upgrade pip\npip install meshtastic-flasher\n```\n\n\nTo run, type in \"meshtastic-flasher\" from a command prompt.\n\n\nHere is are two screen shots showing an installation on windows after starting a \"command prompt\":\n\n\n<img width=\"1010\" alt=\"Screen Shot 2022-02-22 at 11 11 22 AM\" src=\"https://user-images.githubusercontent.com/2219838/155202401-07cedfb4-21bf-46c7-a5fc-a204bac4747d.png\">\n\n<img width=\"1134\" alt=\"Screen Shot 2022-02-22 at 11 11 03 AM\" src=\"https://user-images.githubusercontent.com/2219838/155202427-2ac72d08-f4dd-461b-a4c3-614751eeb818.png\">\n\nAnd the same session (but showing the text):\n\n```\nc:\\>mkdir some_dir\n\nc:\\>cd some_dir\n\nc:\\some_dir>python --version\nPython 3.9.9\n\nc:\\some_dir>python -m venv venv\n\nc:\\some_dir>venv\\Scripts\\activate\n\n(venv) c:\\some_dir>python -m pip install --upgrade pip\nRequirement already satisfied: pip in .\\venv\\lib\\site-packages (21.2.4)\nCollecting pip\n  Using cached pip-22.0.3-py3-none-any.whl (2.1 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 21.2.4\n    Uninstalling pip-21.2.4:\n      Successfully uninstalled pip-21.2.4\nSuccessfully installed pip-22.0.3\n\n(venv) c:\\some_dir>pip install meshtastic-flasher\nCollecting meshtastic-flasher\n  Downloading meshtastic_flasher-1.0.75-py3-none-any.whl (81 kB)\n     ---------------------------------------- 81.5/81.5 KB 2.3 MB/s eta 0:00:00\nCollecting pyside6\n  Using cached PySide6-6.2.3-6.2.3-cp36.cp37.cp38.cp39.cp310-none-win_amd64.whl (156.6 MB)\nCollecting PyGithub\n  Using cached PyGithub-1.55-py3-none-any.whl (291 kB)\nCollecting psutil\n  Using cached psutil-5.9.0-cp39-cp39-win_amd64.whl (245 kB)\nCollecting meshtastic>=1.2.85\n  Using cached meshtastic-1.2.85-py3-none-any.whl (70 kB)\nCollecting adafruit-nrfutil\n  Using cached adafruit-nrfutil-0.5.3.post16.tar.gz (49 kB)\n  Preparing metadata (setup.py) ... done\nCollecting pyserial\n  Using cached pyserial-3.5-py2.py3-none-any.whl (90 kB)\nCollecting qt-material\n  Using cached qt_material-2.8.19-py3-none-any.whl (1.7 MB)\nCollecting esptool\n  Using cached esptool-3.2.tar.gz (206 kB)\n  Preparing metadata (setup.py) ... done\nCollecting protobuf>=3.13.0\n  Using cached protobuf-3.19.4-cp39-cp39-win_amd64.whl (895 kB)\nCollecting pyqrcode>=1.2.1\n  Using cached PyQRCode-1.2.1.zip (41 kB)\n  Preparing metadata (setup.py) ... done\nCollecting dotmap>=1.3.14\n  Using cached dotmap-1.3.26-py3-none-any.whl (11 kB)\nCollecting pypubsub>=4.0.3\n  Using cached Pypubsub-4.0.3-py3-none-any.whl (61 kB)\nCollecting tabulate>=0.8.9\n  Using cached tabulate-0.8.9-py3-none-any.whl (25 kB)\nCollecting timeago>=1.0.15\n  Using cached timeago-1.0.15.tar.gz (26 kB)\n  Preparing metadata (setup.py) ... done\nCollecting pyyaml\n  Using cached PyYAML-6.0-cp39-cp39-win_amd64.whl (151 kB)\nCollecting pexpect>=4.6.0\n  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\nCollecting click>=5.1\n  Using cached click-8.0.4-py3-none-any.whl (97 kB)\nCollecting ecdsa>=0.13\n  Using cached ecdsa-0.17.0-py2.py3-none-any.whl (119 kB)\nCollecting bitstring>=3.1.6\n  Using cached bitstring-3.1.9-py3-none-any.whl (38 kB)\nCollecting cryptography>=2.1.4\n  Using cached cryptography-36.0.1-cp36-abi3-win_amd64.whl (2.2 MB)\nCollecting reedsolo<=1.5.4,>=1.5.3\n  Using cached reedsolo-1.5.4.tar.gz (271 kB)\n  Preparing metadata (setup.py) ... done\nCollecting requests>=2.14.0\n  Using cached requests-2.27.1-py2.py3-none-any.whl (63 kB)\nCollecting pynacl>=1.4.0\n  Using cached PyNaCl-1.5.0-cp36-abi3-win_amd64.whl (212 kB)\nCollecting deprecated\n  Using cached Deprecated-1.2.13-py2.py3-none-any.whl (9.6 kB)\nCollecting pyjwt>=2.0\n  Using cached PyJWT-2.3.0-py3-none-any.whl (16 kB)\nCollecting shiboken6==6.2.3\n  Using cached shiboken6-6.2.3-6.2.3-cp36.cp37.cp38.cp39.cp310-none-win_amd64.whl (2.3 MB)\nCollecting Jinja2\n  Using cached Jinja2-3.0.3-py3-none-any.whl (133 kB)\nCollecting colorama\n  Using cached colorama-0.4.4-py2.py3-none-any.whl (16 kB)\nCollecting cffi>=1.12\n  Using cached cffi-1.15.0-cp39-cp39-win_amd64.whl (180 kB)\nCollecting six>=1.9.0\n  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\nCollecting ptyprocess>=0.5\n  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\nCollecting charset-normalizer~=2.0.0\n  Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\nCollecting urllib3<1.27,>=1.21.1\n  Using cached urllib3-1.26.8-py2.py3-none-any.whl (138 kB)\nCollecting certifi>=2017.4.17\n  Using cached certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\nCollecting idna<4,>=2.5\n  Using cached idna-3.3-py3-none-any.whl (61 kB)\nCollecting wrapt<2,>=1.10\n  Using cached wrapt-1.13.3-cp39-cp39-win_amd64.whl (34 kB)\nCollecting MarkupSafe>=2.0\n  Downloading MarkupSafe-2.1.0-cp39-cp39-win_amd64.whl (16 kB)\nCollecting pycparser\n  Using cached pycparser-2.21-py2.py3-none-any.whl (118 kB)\nUsing legacy 'setup.py install' for adafruit-nrfutil, since package 'wheel' is not installed.\nUsing legacy 'setup.py install' for esptool, since package 'wheel' is not installed.\nUsing legacy 'setup.py install' for pyqrcode, since package 'wheel' is not installed.\nUsing legacy 'setup.py install' for reedsolo, since package 'wheel' is not installed.\nUsing legacy 'setup.py install' for timeago, since package 'wheel' is not installed.\nInstalling collected packages: timeago, tabulate, reedsolo, pyserial, pyqrcode, ptyprocess, dotmap, certifi, bitstring, wrapt, urllib3, six, shiboken6, pyyaml, pypubsub, pyjwt, pycparser, psutil, protobuf, pexpect, MarkupSafe, idna, colorama, charset-normalizer, requests, pyside6, meshtastic, Jinja2, ecdsa, deprecated, click, cffi, qt-material, pynacl, cryptography, adafruit-nrfutil, PyGithub, esptool, meshtastic-flasher\n  Running setup.py install for timeago ... done\n  Running setup.py install for reedsolo ... done\n  Running setup.py install for pyqrcode ... done\n  Running setup.py install for adafruit-nrfutil ... done\n  Running setup.py install for esptool ... done\nSuccessfully installed Jinja2-3.0.3 MarkupSafe-2.1.0 PyGithub-1.55 adafruit-nrfutil-0.5.3.post16 bitstring-3.1.9 certifi-2021.10.8 cffi-1.15.0 charset-normalizer-2.0.12 click-8.0.4 colorama-0.4.4 cryptography-36.0.1 deprecated-1.2.13 dotmap-1.3.26 ecdsa-0.17.0 esptool-3.2 idna-3.3 meshtastic-1.2.85 meshtastic-flasher-1.0.75 pexpect-4.8.0 protobuf-3.19.4 psutil-5.9.0 ptyprocess-0.7.0 pycparser-2.21 pyjwt-2.3.0 pynacl-1.5.0 pypubsub-4.0.3 pyqrcode-1.2.1 pyserial-3.5 pyside6-6.2.3 pyyaml-6.0 qt-material-2.8.19 reedsolo-1.5.4 requests-2.27.1 shiboken6-6.2.3 six-1.16.0 tabulate-0.8.9 timeago-1.0.15 urllib3-1.26.8 wrapt-1.13.3\n\n(venv) c:\\some_dir>meshtastic-flasher\n```\n\nIf you close that command prompt, but want to run `meshtastic-flasher` again:\n\n<img width=\"1052\" alt=\"Screen Shot 2022-02-22 at 11 16 51 AM\" src=\"https://user-images.githubusercontent.com/2219838/155203288-19744db6-6718-4b52-b18a-0659f8863cda.png\">\n\n\n```\nMicrosoft Windows [Version 10.0.19041.1415]\n(c) Microsoft Corporation. All rights reserved.\n\nC:\\Users\\YOURUSERNAME>cd c:\\\n\nc:\\>cd some_dir\n\nc:\\some_dir>venv\\Scripts\\activate\n\n(venv) c:\\some_dir>meshtastic-flasher\n```\n\n\n# Updating\n\nTo update a pip-installed installation, run the following commands:\n\nLinux/Mac:\n\n```\nsource venv/bin/activate\npip install --upgrade meshtastic-flasher\n```\n\nWindows command prompt:\n\n```\nvenv\\Scripts\\Activate\npip install --upgrade meshtastic-flasher\n```\n\n\n# Advanced options\n\nTo go into the Advanced options page, press the \"A\" key. \n\nThe options are:\n\n* Update mode for esp32 devices\n* RAK Bootloader update (for RAK4631 nrf52)\n\n# Other options\n\n* The ability to change Device Settings has been added.\n* The ability to do a \"factory reset\" is an options in the Settings page (Admin tab).\n* \"Hotkeys\" and \"Tips\" are also options\n* Advanced options has several capabilities: view the equivalent of `meshtastic --info`, backup Device configuration to yaml file, restore Device configuration from yaml file, and send a simple text message\n\n# Installation for Development\n\n* Setup virtual environment and install required packages\n\n```\npython3 -m venv venv\nsource venv/bin/activate\n# or if on windows: venv\\scripts\\activate\npip install --upgrade pip\npip install -r requirements.txt\npip install .\n```\n\n# To lint\n\n```\npylint *.py\n```\n\nor\n\n```\nmake lint\n```\n\n# To test\n\n```\npytest\n```\n\n\n# for more info\n\nhttps://wiki.qt.io/Qt_for_Python\n\nhttps://pygithub.readthedocs.io/en/latest/introduction.html\n\nhttps://meshtastic.org/\n\nhttps://github.com/meshtastic/Meshtastic-device\n\n# Tested on\n\n* Ubuntu 20.04, 21.04, and 22.04 (x86_64)\n\nIf you get this error:\n\n```\nqt.qpa.plugin: Could not load the Qt platform \"xcb\" in \"\" even though it was found.\nThis application failed to start because not Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\nAvailable platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vkkrrdisplay, vnc, wayland-egl, wayland, xcb.\nAborted.\n```\n\nThen this might solve the issue:\n\n```\nsudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev\n```\n\n* Fedora 33 (x86_64)\n* Manjaro 21.2.3 (x86_64)\n* Linux Mint 20.3 (x86_64)\n* MacOS (arm and x86)\n* Windows 7, 8.1, 10, and 11 (may work on other versions)\n* ArchlinuxArm with the following commands:\n\n```\npacman -S qt6 pyside6\npip install meshtastic-flasher\n```\n\n# Known limitations\n\nThe following are known limitations:\n\n* Raspberry Pi is not available, since it is arm-based and there are no pre-built libraries for PySide. There is an interesting link here: https://github.com/piwheels/packages/issues/4#issuecomment-772058821 . \n\n* Ubuntu 20.04 is the version used for testing, it may work with other versions (Known issue with Wayland https://github.com/meshtastic/Meshtastic-gui-installer/issues/8 )\n\n* Ubuntu 18.04 will not work as PySide6/Qt6 libraries are not available.\n\n* Many linux arm variations will work as Qt does not support arm. See https://doc.qt.io/qt-6/supported-platforms.html \n\n* If you just run the `pip install meshtastic-flasher` outside of a fresh python virtual environment (like say on a mac that has used `brew` to install things) you may get this error:\n\n```\n    from meshtastic_flasher.installer import main\n  File \"/usr/local/lib/python3.9/site-packages/meshtastic_flasher/installer.py\", line 20, in <module>\n    from meshtastic.util import detect_supported_devices, findPorts, detect_windows_needs_driver\n```\n\nIf you get this error, then install in a python virtual environment as described in the Installation step above.\n\n* Windows 11 works with CP210x Universal Windows Driver, and you must start the command prompt as Administrator\n\n* Windows 10 will not work with python v3.8.0 due to issue https://stackoverflow.com/questions/56757044/pyside2-dll-load-failed-the-specified-procedure-could-not-be-found/70533728#70533728 . It has been tested on python 3.10 on Windows 10.\n\n# Note to Devs\n\nPlease keep code as simple as possible. PyQT has a tendency to get complicated.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meshtastic/Meshtastic-gui-installer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshtastic-flasher",
    "package_url": "https://pypi.org/project/meshtastic-flasher/",
    "platform": null,
    "project_url": "https://pypi.org/project/meshtastic-flasher/",
    "project_urls": {
      "Homepage": "https://github.com/meshtastic/Meshtastic-gui-installer"
    },
    "release_url": "https://pypi.org/project/meshtastic-flasher/1.0.91/",
    "requires_dist": [
      "pyside6",
      "PyGithub",
      "esptool",
      "meshtastic (>=1.2.85)",
      "qt-material",
      "psutil",
      "adafruit-nrfutil",
      "pyserial",
      "geocoder"
    ],
    "requires_python": ">=3.6",
    "summary": "Graphical user interface to flash Meshtastic firmware to devices",
    "version": "1.0.91",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16342571,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfa07be0b0fb3f2f6ca8a2e97131acb45f74e882666ff7524bcfdc9e59137e55",
        "md5": "ee037a665028b3bb80339cc51a99dbc9",
        "sha256": "58c93249a6e8afbb84b89e4fd98b39a68a254502c5c43613081b2d4ccdfc0e93"
      },
      "downloads": -1,
      "filename": "meshtastic_flasher-1.0.91-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee037a665028b3bb80339cc51a99dbc9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 89154,
      "upload_time": "2022-03-07T22:56:36",
      "upload_time_iso_8601": "2022-03-07T22:56:36.634909Z",
      "url": "https://files.pythonhosted.org/packages/df/a0/7be0b0fb3f2f6ca8a2e97131acb45f74e882666ff7524bcfdc9e59137e55/meshtastic_flasher-1.0.91-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7be55de86cb0215b044a6cfe5b3c6deb9382de5fed30dbdd3dc10c2e1608f9ac",
        "md5": "6e4ad5849bd238db1706cee4f014247d",
        "sha256": "f5a729a546e794d8a5f9c276beb2dce06898a8103c797846329741f4bbae460a"
      },
      "downloads": -1,
      "filename": "meshtastic_flasher-1.0.91.tar.gz",
      "has_sig": false,
      "md5_digest": "6e4ad5849bd238db1706cee4f014247d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 76910,
      "upload_time": "2022-03-07T22:56:38",
      "upload_time_iso_8601": "2022-03-07T22:56:38.474661Z",
      "url": "https://files.pythonhosted.org/packages/7b/e5/5de86cb0215b044a6cfe5b3c6deb9382de5fed30dbdd3dc10c2e1608f9ac/meshtastic_flasher-1.0.91.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}