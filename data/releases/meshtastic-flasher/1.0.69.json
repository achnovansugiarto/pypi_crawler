{
  "info": {
    "author": "Kevin Hester",
    "author_email": "kevinh@geeksville.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Meshtastic-gui-installer\n\n[![Pylint](https://github.com/meshtastic/Meshtastic-gui-installer/actions/workflows/pylint.yml/badge.svg)](https://github.com/meshtastic/Meshtastic-gui-installer/actions/workflows/pylint.yml) \n[![codecov](https://codecov.io/gh/meshtastic/Meshtastic-gui-installer/branch/master/graph/badge.svg?token=CEnDhjIJFU)](https://codecov.io/gh/meshtastic/Meshtastic-gui-installer)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/meshtastic-flasher)\n\nCross Platform GUI for installing [Meshtastic](https://meshtastic.org/) [Firmware](https://github.com/meshtastic/Meshtastic-device). It also checks and updates the [RAK 4631](https://docs.rakwireless.com/Product-Categories/WisBlock/RAK4631/Overview/) bootloader. The [LilyGo T-Echo](https://github.com/Xinyuan-LilyGO/LilyGO-T-Echo) bootloader is also checked.\n\n\n# Example showing a [Heltec](https://meshtastic.org/docs/hardware/supported/heltec) (esp32) device:\n<img width=\"766\" alt=\"Screen Shot 2022-02-17 at 5 13 17 PM\" src=\"https://user-images.githubusercontent.com/2219838/154621453-60efe7b4-2ecf-4cfc-a6d3-bc212bad3f5a.png\">\n\n\n# Example showing a RAK WisBlock Core RAK4631:\n<img width=\"766\" alt=\"Screen Shot 2022-02-01 at 9 57 24 PM\" src=\"https://user-images.githubusercontent.com/2219838/152100859-cb59d0cd-2ffa-49a1-9c8f-6ce75c625468.png\">\n\n\n# Installation\n\n* For the single file executable see [Releases](https://github.com/meshtastic/Meshtastic-gui-installer/releases). There is a readme.txt that shows the steps to get started.\n\n* Steps to install from [PyPi](https://pypi.org/project/meshtastic-flasher/) (if you do not want the single executable method described above):\n\nLinux/Mac:\n\n```\npython3 -m venv venv\nsource venv/bin/activate\npip install --upgrade pip\npip install meshtastic-flasher\n```\n\nWindows command prompt: (assuming Python3 was installed from https://www.python.org/downloads/ and `python --version` reports 3.6+):\n\n```\npython -m venv venv\nvenv\\Scripts\\Activate\npip install --upgrade pip\npip install meshtastic-flasher\n```\n\n\nTo run, type in \"meshtastic-flasher\" from a command prompt.\n\n\n# Updating\n\nTo update a pip-installed installation, run the following commands:\n\nLinux/Mac:\n\n```\nsource venv/bin/activate\npip install --upgrade meshtastic-flasher\n```\n\nWindows command prompt:\n\n```\nvenv\\Scripts\\Activate\npip install --upgrade meshtastic-flasher\n```\n\n\n# Advanced options\n\nTo go into the Advanced options page, press the \"A\" key. \n\nThe options are:\n\n* Update mode for esp32 devices\n* RAK Bootloader update (for RAK4631 nrf52)\n\n# Other options\n\n* The ability to change some settings (more to settings will be added). To access the Settings page, detect a device then either press the \"S\" for Settings (or click on the \"cog\" wheel)\n* The ability to do a \"factory reset\" is an options in the Settings page, Admin tab\n* The \"H\" will show the \"Hotkeys\" that are available\n* The \"T\" hotkey will show tips\n\n# Installation for Development\n\n* Setup virtual environment and install required packages\n\n```\npython3 -m venv venv\nsource venv/bin/activate\n# or if on windows: venv\\scripts\\activate\npip install --upgrade pip\npip install -r requirements.txt\npip install .\n```\n\n# To lint\n\n```\npylint *.py\n```\n\nor\n\n```\nmake lint\n```\n\n# To test\n\n```\npytest\n```\n\n\n# for more info\n\nhttps://wiki.qt.io/Qt_for_Python\n\nhttps://pygithub.readthedocs.io/en/latest/introduction.html\n\nhttps://meshtastic.org/\n\nhttps://github.com/meshtastic/Meshtastic-device\n\n# Tested on\n\n* Ubuntu 20.04, 21.04, and 22.04 (x86_64)\n\nIf you get this error:\n\n```\nqt.qpa.plugin: Could not load the Qt platform \"xcb\" in \"\" even though it was found.\nThis application failed to start because not Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\nAvailable platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vkkrrdisplay, vnc, wayland-egl, wayland, xcb.\nAborted.\n```\n\nThen this might solve the issue:\n\n```\nsudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev\n```\n\n* Fedora 33 (x86_64)\n* Manjaro 21.2.3 (x86_64)\n* Linux Mint 20.3 (x86_64)\n* MacOS (arm and x86)\n* Windows 7, 8.1, 10, and 11 (may work on other versions)\n* ArchlinuxArm with the following commands:\n\n```\npacman -S qt6 pyside6\npip install meshtastic-flasher\n```\n\n# Known limitations\n\nThe following are known limitations:\n\n* Raspberry Pi is not available, since it is arm-based and there are no pre-built libraries for PySide. There is an interesting link here: https://github.com/piwheels/packages/issues/4#issuecomment-772058821 . \n\n* Ubuntu 20.04 is the version used for testing, it may work with other versions (Known issue with Wayland https://github.com/meshtastic/Meshtastic-gui-installer/issues/8 )\n\n* Ubuntu 18.04 will not work as PySide6/Qt6 libraries are not available.\n\n* Many linux arm variations will work as Qt does not support arm. See https://doc.qt.io/qt-6/supported-platforms.html \n\n* If you just run the `pip install meshtastic-flasher` outside of a fresh python virtual environment (like say on a mac that has used `brew` to install things) you may get this error:\n\n```\n    from meshtastic_flasher.installer import main\n  File \"/usr/local/lib/python3.9/site-packages/meshtastic_flasher/installer.py\", line 20, in <module>\n    from meshtastic.util import detect_supported_devices, findPorts, detect_windows_needs_driver\n```\n\nIf you get this error, then install in a python virtual environment as described in the Installation step above.\n\n* Windows 11 works with CP210x Universal Windows Driver, and you must start the command prompt as Administrator\n\n# Note to Devs\n\nPlease keep code as simple as possible. PyQT has a tendency to get complicated.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meshtastic/Meshtastic-gui-installer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshtastic-flasher",
    "package_url": "https://pypi.org/project/meshtastic-flasher/",
    "platform": "",
    "project_url": "https://pypi.org/project/meshtastic-flasher/",
    "project_urls": {
      "Homepage": "https://github.com/meshtastic/Meshtastic-gui-installer"
    },
    "release_url": "https://pypi.org/project/meshtastic-flasher/1.0.69/",
    "requires_dist": [
      "pyside6",
      "PyGithub",
      "esptool",
      "meshtastic (>=1.2.85)",
      "qt-material",
      "psutil",
      "adafruit-nrfutil",
      "pyserial"
    ],
    "requires_python": ">=3.6",
    "summary": "Graphical user interface to flash Meshtastic firmware to devices",
    "version": "1.0.69",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16342571,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25d171eee4565f824e0fedbe85e97f64a2f358612fff89200c345c50b54f0a21",
        "md5": "126970d31755cdec9165709a7c462876",
        "sha256": "6ebd947e7d8e01852c4a2bba87812adf8e92dcba8cbbe7450ad456c67a3eae5b"
      },
      "downloads": -1,
      "filename": "meshtastic_flasher-1.0.69-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "126970d31755cdec9165709a7c462876",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 59616,
      "upload_time": "2022-02-18T19:49:03",
      "upload_time_iso_8601": "2022-02-18T19:49:03.390140Z",
      "url": "https://files.pythonhosted.org/packages/25/d1/71eee4565f824e0fedbe85e97f64a2f358612fff89200c345c50b54f0a21/meshtastic_flasher-1.0.69-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10e62bb451a78735e8dcf1282e822ae74b045ebbdd82d5734afd095dcac3140b",
        "md5": "b81f2ecaf42cedb08b70ccebacc343f3",
        "sha256": "14e936654e5b748f2b6fce028e282d0c69877ce597f5a64f55ea9eb073a06a7b"
      },
      "downloads": -1,
      "filename": "meshtastic_flasher-1.0.69.tar.gz",
      "has_sig": false,
      "md5_digest": "b81f2ecaf42cedb08b70ccebacc343f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 54734,
      "upload_time": "2022-02-18T19:49:05",
      "upload_time_iso_8601": "2022-02-18T19:49:05.146212Z",
      "url": "https://files.pythonhosted.org/packages/10/e6/2bb451a78735e8dcf1282e822ae74b045ebbdd82d5734afd095dcac3140b/meshtastic_flasher-1.0.69.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}