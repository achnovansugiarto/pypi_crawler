{
  "info": {
    "author": "Andrew Cordery",
    "author_email": "cordery@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=============================\nDjango Countries Plus\n=============================\n\n.. image:: https://badge.fury.io/py/django-countries-plus.svg\n    :target: https://badge.fury.io/py/django-countries-plus\n\n.. image:: https://travis-ci.org/cordery/django-countries-plus.svg\n    :target: https://travis-ci.org/cordery/django-countries-plus\n\n.. image:: https://codecov.io/github/cordery/django-countries-plus/coverage.svg\n    :target: https://codecov.io/github/cordery/django-countries-plus\n\n.. image:: https://requires.io/github/cordery/django-countries-plus/requirements.svg?branch=master\n    :target: https://requires.io/github/cordery/django-countries-plus/requirements/?branch=master\n\n.. image:: https://www.codacy.com/project/badge/c74f1b1041f44940b58e0e1587b10453?style=flat-square\n    :target: https://www.codacy.com/app/cordery/django-countries-plus\n\ndjango-countries-plus provides a model and fixture containing all top level country data from Geonames.org (http://download.geonames.org/export/dump/countryInfo.txt)\n\nThis package also provides a convenience middleware that will look up a country in the database using a defined meta header, ex:  the Cloudflare provided geoip META header HTTP_CF_IPCOUNTRY.  This country object will be\nattached to the request object at request.country.\n\n\n\nCountry Model\n-------------\n\nThe model provides the following fields (original geonames.org column name in parentheses).\n\n* iso (ISO)\n* iso3 (ISO3)\n* iso_numeric (ISO-Numeric)\n* fips (fips)\n* name (Country)\n* capital\n* area (Area(in sq km))\n* population (population)\n* continent (continent)\n* tld (tld)\n* currency_code (CurrencyCode)\n* currency_name (CurrencyName)\n* currency_symbol (Not part of the original table)\n* phone (Phone)\n* postal_code_format (Postal Code Format)\n* postal_code_regex (Postal Code Regex)\n* languages (Languages)\n* geonameid (geonameid)\n* neighbors (neighbours)\n* equivalent_fips_code (EquivalentFipsCode)\n\n\n\nInstallation\n------------\n\nStep 1: Install From PyPi\n\n``pip install django-countries-plus``\n\nStep 2: Add ``countries_plus`` to your settings INSTALLED_APPS\n\nStep 3: Run ``python manage.py migrate``\n\nStep 4: Load the Countries Data\n    a. Load the countries data into your database with the update_countries_plus management command.\n        ``python manage.py update_countries_plus``\n    b. (alternative) Load the provided fixture from the fixtures directory.\n        ``python manage.py loaddata PATH_TO_COUNTRIES_PLUS/countries_plus/countries_data.json.gz``\n\n\n\nUsage\n-----\n\n**Retrieve a Country**::\n\n    from countries_plus.models import Country\n    usa = Country.objects.get(iso3='USA')\n\n**Update the countries data with the latest geonames.org data**::\n\n    python manage.py update_countries_plus\n\nThis management command will download the latest geonames.org countries data and convert it into Country objects.  Existing Country objects will be updated if necessary.  No Country objects will be deleted, even if that country has ceased to exist.\n\n\nAdd the Request Country to each Request\n---------------------------------------\n\n1.  Add ``countries_plus.middleware.AddRequestCountryMiddleware`` to your MIDDLEWARE setting.\n\n2.  add the following two settings to your settings.py:\n\n    ``COUNTRIES_PLUS_COUNTRY_HEADER``   -   A string defining the name of the meta header that provides the country code.  Ex: 'HTTP_CF_COUNTRY' (from https://support.cloudflare.com/hc/en-us/articles/200168236-What-does-CloudFlare-IP-Geolocation-do-)\n\n    ``COUNTRIES_PLUS_DEFAULT_ISO``  -   A string containing an iso code for the country you want to use as a fallback in the case of a missing or malformed geoip header.  Ex:  'US' or 'DE' or 'BR'\n\n    Example::\n\n        COUNTRIES_PLUS_COUNTRY_HEADER = 'HTTP_CF_COUNTRY'\n        COUNTRIES_PLUS_DEFAULT_ISO = 'US'\n\n\nAdd the Request Country to the Request Context\n----------------------------------------------\n1. Enable the optional middleware as described above\n\n2. Add ``countries_plus.context_processors.add_request_country`` to your 'context_processors' option in the OPTIONS of a DjangoTemplates backend instead (Django 1.8)\n\n\n---------------------------------------\nRequirements\n---------------------------------------\nPython: 3.7+\nDjango:  Tested against the LTS or latest versions of 2.2, 3, and 4.\n\n\nIntegrating with django-languages-plus\n--------------------------------------\nIf you also have django-languages-plus(https://pypi.python.org/pypi/django-languages-plus) installed then you can run the following command once to associate the two datasets and generate a list of culture codes (pt_BR for example)::\n\n        from languages_plus.utils import associate_countries_and_languages\n        associate_countries_and_languages()\n\n\nNotes on 1.0.1\n--------------\n* Two countries (Dominican Republic and Puerto Rico) have two phone number prefixes instead of 1.  These prefixes are now comma separated.\n* The Country model has had all fields with undefined lengths (ex: name) expanded to max_length=255.  Defined length fields (ex: Iso, Iso3) are unchanged.\n* The Country model will no validate on save and reject values of the wrong length.  The test suite has been expanded to test this.\n\nNotes on 1.0.0\n--------------\n* The data migration has been removed in favour of the new management command and manually loading the fixture.\n* The fixture is no longer named initial_data and so must be loaded manually, if desired.\n* In order to provide better compatibility with the way Django loads apps the Country model is no longer importable directly from countries_plus.\n* The get_country_by_request utility function has been moved into the Country model, and is available as Country.get_by_request(request)\n* Test coverage has been substantially improved.\n* If you have been running an earlier version you should run python manage.py update_countries_plus to update your data tables as they may contain incorrect data.\n\n\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    $ poetry install\n    $ poetry run pytest\n\nOr for the full tox suite:\n\n::\n\n    $ poetry install\n    $ pip install tox\n    $ tox\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cordery/django-countries-plus",
    "keywords": "django-countries-plus",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-countries-plus",
    "package_url": "https://pypi.org/project/django-countries-plus/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-countries-plus/",
    "project_urls": {
      "Homepage": "https://github.com/cordery/django-countries-plus",
      "Repository": "https://github.com/cordery/django-countries-plus"
    },
    "release_url": "https://pypi.org/project/django-countries-plus/2.0.0/",
    "requires_dist": [
      "django (>=2.2)",
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A django model & fixture containing all data from the countries table of Geonames.org",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13283360,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51875bdf71d43bb1e35f5d499e7cdd4a19c0a480c04329fa85185d0d93835b53",
        "md5": "915f90a9e8ad8afe2e7f906fa63c2630",
        "sha256": "bee7965570618e3166b1abef5178d39f97eab2a19883106415aba88f680a3b25"
      },
      "downloads": -1,
      "filename": "django_countries_plus-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "915f90a9e8ad8afe2e7f906fa63c2630",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 42746,
      "upload_time": "2022-01-21T14:13:13",
      "upload_time_iso_8601": "2022-01-21T14:13:13.848644Z",
      "url": "https://files.pythonhosted.org/packages/51/87/5bdf71d43bb1e35f5d499e7cdd4a19c0a480c04329fa85185d0d93835b53/django_countries_plus-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c1fd94149773753a90f2b019b5c3091e8d012ab7e49c5835c10c2a496fb8e31",
        "md5": "f568138f7b94646b5530b4144ac27ad7",
        "sha256": "75939f613f3876cbe5a3fb3cefc3f0d9a38fa39250feb62e74624a6b32f7ef3b"
      },
      "downloads": -1,
      "filename": "django-countries-plus-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f568138f7b94646b5530b4144ac27ad7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 38590,
      "upload_time": "2022-01-21T14:13:12",
      "upload_time_iso_8601": "2022-01-21T14:13:12.718497Z",
      "url": "https://files.pythonhosted.org/packages/3c/1f/d94149773753a90f2b019b5c3091e8d012ab7e49c5835c10c2a496fb8e31/django-countries-plus-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}