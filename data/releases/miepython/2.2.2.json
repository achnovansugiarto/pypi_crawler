{
  "info": {
    "author": "Scott Prahl",
    "author_email": "scott.prahl@oit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "miepython\n=========\n\nby Scott Prahl\n\n.. image:: https://img.shields.io/pypi/v/miepython.svg\n   :target: https://pypi.org/project/miepython/\n\n.. image:: https://colab.research.google.com/assets/colab-badge.svg\n   :target: https://colab.research.google.com/github/scottprahl/miepython/blob/master\n\n.. image:: https://img.shields.io/badge/readthedocs-latest-blue.svg\n   :target: https://miepython.readthedocs.io\n\n.. image:: https://img.shields.io/badge/github-code-green.svg\n   :target: https://github.com/scottprahl/miepython\n\n.. image:: https://img.shields.io/badge/MIT-license-yellow.svg\n   :target: https://github.com/scottprahl/miepython/blob/master/LICENSE.txt\n\n.. image:: https://github.com/scottprahl/miepython/actions/workflows/test.yml/badge.svg\n   :target: https://github.com/scottprahl/miepython/actions/workflows/test.yml\n\n__________\n\n``miepython`` is a pure Python module to calculate light scattering for\nnon-absorbing, partially-absorbing, or perfectly-conducting spheres. Mie\ntheory is used, following `the procedure described by Wiscombe\n<http://opensky.ucar.edu/islandora/object/technotes:232>`_. This code has\nbeen validated against his results. \n\nThis code provides functions for calculating the extinction efficiency, scattering efficiency, backscattering, and scattering asymmetry. Moreover, a set of angles can be given to calculate the scattering for a sphere at each of those\nangles.\n\nFull documentation at <https://miepython.readthedocs.io>\n\nPay Attention!\n--------------\n\nWhen comparing different Mie scattering codes, make sure that you're aware of the conventions used by each code.  ``miepython`` makes the following assumptions\n\n#. the imaginary part of the complex index of refraction for absorbing spheres is *negative*.  \n\n#. the scattering phase function is normalized so it equals the *single scattering albedo* when integrated over 4Ï€ steradians.\n\nUsing miepython\n---------------\n\n1. You can install locally using pip::\n    \n    pip install --user miepython\n\n2. or `run this code in the cloud using Google Collaboratory <https://colab.research.google.com/github/scottprahl/miepython/blob/master>`_ by selecting the Jupyter notebook that interests you.\n\nAn example\n----------\n\nThe following code::\n\n    import miepython\n    \n    m = 1.5-1j\n    x = 1\n    qext, qsca, qback, g = miepython.mie(m,x)\n\n    print(\"The extinction efficiency  is %.3f\" % qext)\n    print(\"The scattering efficiency  is %.3f\" % qsca)\n    print(\"The backscatter efficiency is %.3f\" % qback)\n    print(\"The scattering anisotropy  is %.3f\" % g)\n\nshould produce::\n\n    The extinction efficiency  is 2.336\n    The scattering efficiency  is 0.663\n    The backscatter efficiency is 0.573\n    The scattering anisotropy  is 0.192\n\nHere are a few short scripts in the github repository.\n\n* `Extinction Efficiency of Absorbing and Non-Absorbing Spheres <https://github.com/scottprahl/miepython/blob/master/miepython/examples/01_dielectric.py>`_ \n* `Four Micron Glass Spheres <https://github.com/scottprahl/miepython/blob/master/miepython/examples/02_glass.py>`_ \n* `One Micron Water Droplets <https://github.com/scottprahl/miepython/blob/master/miepython/examples/03_droplets.py>`_ \n* `Gold Nanospheres <https://github.com/scottprahl/miepython/blob/master/miepython/examples/04_gold.py>`_ \n\nDetailed documentation is available at <https://miepython.readthedocs.io>\n\n\nLicense\n-------\n\n``miepython`` is licensed under the terms of the MIT license.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scottprahl/miepython.git",
    "keywords": "mie,scattering,rainbow,droplet,backscatter,sphere,nanoparticle,sphere,cloud,phase function,efficiency,rayleigh,backscattering",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miepython",
    "package_url": "https://pypi.org/project/miepython/",
    "platform": "",
    "project_url": "https://pypi.org/project/miepython/",
    "project_urls": {
      "Homepage": "https://github.com/scottprahl/miepython.git"
    },
    "release_url": "https://pypi.org/project/miepython/2.2.2/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "numba"
    ],
    "requires_python": "",
    "summary": "Mie scattering of a plane wave by a sphere",
    "version": "2.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14569407,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dc610875b3ea1c74d069724900e41fe79b156bae09f34200602540077005af7",
        "md5": "f79359d02b4e4634aee2ece8289e9451",
        "sha256": "c52904e74489d0cefe00e5c359f7c5d37a17d6c1bb78d1a520ad173e51370607"
      },
      "downloads": -1,
      "filename": "miepython-2.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f79359d02b4e4634aee2ece8289e9451",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15174,
      "upload_time": "2022-01-25T19:59:21",
      "upload_time_iso_8601": "2022-01-25T19:59:21.417369Z",
      "url": "https://files.pythonhosted.org/packages/6d/c6/10875b3ea1c74d069724900e41fe79b156bae09f34200602540077005af7/miepython-2.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "965775e4395b2932624ec55c52ce797e6e7d1832e674ceaf67ddae425467e582",
        "md5": "9bce5b5f8e8079f2ea94da1db5d96542",
        "sha256": "3faeebcbde7bfd91dae25808cfb704bec7ec0f8c17450a5d17d24a195e0f01ba"
      },
      "downloads": -1,
      "filename": "miepython-2.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9bce5b5f8e8079f2ea94da1db5d96542",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15261,
      "upload_time": "2022-01-25T19:59:23",
      "upload_time_iso_8601": "2022-01-25T19:59:23.049620Z",
      "url": "https://files.pythonhosted.org/packages/96/57/75e4395b2932624ec55c52ce797e6e7d1832e674ceaf67ddae425467e582/miepython-2.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}