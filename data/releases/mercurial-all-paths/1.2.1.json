{
  "info": {
    "author": "Marcin Kasperski",
    "author_email": "Marcin.Kasperski@mekk.waw.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Version Control"
    ],
    "description": ".. -*- mode: rst; compile-command: \"rst2html README.rst README.html\" -*-\n\n================================================\nMercurial All Paths extension\n================================================\n\nPush or pull to many (or all) paths at once. \n\n.. contents::\n   :local:\n   :depth: 2\n\n.. sectnum::\n\nBasic usage\n================================================\n\nExecute::\n\n    hg pushall\n\nto push to all remotes which are defined for the repository. Or::\n\n    hg pullall\n\nto pull from all remotes in order.\n\nThere are also::\n\n    hg incomingall\n\n    hg outgoingall\n\nStandard push/pull options can be given, for example::\n\n    hg pushall -f -B issue-13724\n\n    hg pullall -r stable --insecure\n\nThose commands iterate over all paths returned by ``hg paths``.  This\nusually means iterating over paths defined in ``[paths]`` section of\n``.hg/hgrc``, but `Path Pattern`_ paths are also handled. You can\nimpact this behaviour by configuration, see below.\n\n\nDefining path groups\n================================================\n\nInstead of pushing/pulling everywhere, you can define and use *groups*::\n\n    hg pushall -g publish\n\npushes to all paths from the ``publish`` group (where ``publish`` is\nsymbolic name of your choosing). Or::\n\n    hg pullall -g shared\n\npulls from all paths in ``shared`` group.\n\nThere are two ways to define such a group:\n\n1. Define appropriate entry in ``[all_paths]`` section (either in ``.hg/hgrc``\n   or in your global ``~/.hgrc``). For example::\n\n     [all_paths]\n     group.publish = bitbucket github backup\n\n   (path aliases ``bitbucket``, ``github`` and ``backup`` must\n   be somehow defined).\n\n2. (Legacy method) Put the section of the same name in ``.hg/hgrc``,\n   and define all paths there. For example::\n\n    [publish]\n    bitbucket = ssh://hg@bitbucket.org/ludovicchabant/piecrust\n    github = git+ssh://git@github.com:ludovicchabant/PieCrust.git\n    backup = ssh://ludo@backup.local/piecrust\n\n   The syntax is the same as in standard ``[paths]`` section, just\n   name the section with the name of your group.\n\n   .. note::\n\n      Be careful to avoid conflicts with names which mean something\n      to Mercurial. For example ``web`` would be a bad name as ``[web]``\n      section configures ``hg serve`` behaviour, and ``ui`` would be\n      fatal as ``[ui]`` configures various basic Mercurial settings.\n\nI recommend the former method as it avoids the risk of conflicts,\nmakes it easy to define groups globally instead of defining them for\nevery repository (especially handy if you use `Path Pattern`_), and is\nmore compact.\n\nGroups are also handled for ``incomingall`` and ``outgoingall``, but\nlong ``--group`` option must be used (``-g`` is already taken by\nstandard Mercurial, means reporting in ``--git`` diff format)::\n\n     hg outgoingall --group publish\n\nConfiguration\n=======================================================\n\nThe extension can be configured using ``[all_paths]`` section of your\nglobal (``~/.hgrc``) or repository-level (``.hg/hgrc``) config file::\n\n  [all_paths]\n  prioritize = platon department\n  ignore = bitbucket production\n  group.publish = github bitbucket\n  group.backup = homebackup awsbackup\n\n``prioritize`` impacts the order, defines paths which are to be\nhandled first (if present). This is mostly useful for ``pullall``\nwhere pulling from local fast computer before pulling from remote\nserver means saving some time and traffic. So::\n\n  prioritize = platon department\n\nmeans: if path named ``platon`` is present, handle it first, then\npath named ``department``, only then follow to the other paths.\n\n``ignore`` lists paths which should be ignored, those remotes will\nbe skipped. So::\n\n  ignore = bitbucket production\n\nmeans that ``hg pullall`` or ``hg pushall`` should not use\n``bitbucket`` path (in my case because this is HTTP remote, and I have\nalso preferable ``bitssh``configured), and ``production`` path (as\nthere I prefer to pull and push only on specific demand).\n\nBoth those settings impact only *default* commands (those run\nwithout ``-g GROUP`` option). In case of groups items are processed\nin the order they are specified in group definition.\n\n``group.«NAME»`` define group for ``-g «NAME»`` as described earlier. \n\n\nInstallation\n=======================================================\n\nFrom PyPi\n--------------------\n\nIf you have working ``pip`` or ``easy_install``::\n\n    pip install --user mercurial_all_paths\n\nor maybe::\n\n    sudo pip install mercurial_all_paths\n\nThen activate by::\n\n    [extensions]\n    mercurial_all_paths =\n\nTo upgrade, repeat the same command with ``--upgrade`` option, for\nexample::\n\n    pip install --user --upgrade mercurial_all_paths\n\nFrom source\n-------------------------------------------------------\n\nIf you don't have ``pip``, or wish to follow development more closely:\n\n- clone both this repository and `mercurial_extension_utils`_ and put\n  them in the same directory, for example::\n\n    cd ~/sources\n    hg clone https://foss.heptapod.net/mercurial/mercurial-extension_utils/\n    hg clone https://foss.heptapod.net/mercurial/mercurial-all_paths/\n\n- update to newest tags,\n\n- activate by::\n\n    [extensions]\n    mercurial_all_paths = ~/sources/mercurial-all_paths/mercurial_all_paths.py\n\nTo upgrade, pull and update.\n\nNote that directory names matter. See `mercurial_extension_utils`_ for\nlonger description of this kind of installation.\n\nHistory\n=======================================================\n\nSee `HISTORY.rst`_\n\nRepository, bug reports, enhancements suggestions\n=======================================================\n\nDevelopment is tracked on HeptaPod, see\n\n    https://foss.heptapod.net/mercurial/mercurial-all_paths/\n\nUse issue tracker there for bug reports and enhancement\nsuggestions.\n\nThanks to Octobus_ and `Clever Cloud`_ for hosting this service.\n\nOriginal repository, maintained by Ludovic Chabant:\n\n    https://bitbucket.org/ludovicchabant/allpaths\n\n\nAdditional notes\n=======================================================\n\nInformation about this extension is also available\non Mercurial Wiki: http://mercurial.selenic.com/wiki/AllPathsExtension\n\n\n\n.. _Octobus: https://octobus.net/\n.. _Clever Cloud: https://www.clever-cloud.com/\n\n.. _Path Pattern: https://foss.heptapod.net/mercurial/mercurial-path_pattern/\n.. _HISTORY.rst: https://foss.heptapod.net/mercurial/mercurial-all_paths/src/tip/HISTORY.rst\n.. _mercurial_extension_utils: https://foss.heptapod.net/mercurial/mercurial-extension_utils/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://foss.heptapod.net/mercurial/mercurial-all_paths",
    "keywords": "mercurial paths multi extension",
    "license": "GNU General Public License v2 (GPLv2)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mercurial_all_paths",
    "package_url": "https://pypi.org/project/mercurial_all_paths/",
    "platform": "",
    "project_url": "https://pypi.org/project/mercurial_all_paths/",
    "project_urls": {
      "Homepage": "https://foss.heptapod.net/mercurial/mercurial-all_paths"
    },
    "release_url": "https://pypi.org/project/mercurial_all_paths/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mercurial allpaths extension",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7578039,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d729afbe5d2aea422b9db1f8326f4cb1138e526d0427f0561c015fcbd8eddb48",
        "md5": "f23b73165cec29fd6603bed813859f66",
        "sha256": "7df095fb5f8cc1a9afea3ee0b0b2e60219aac3c9899f74c77ac5fab8267a5589"
      },
      "downloads": -1,
      "filename": "mercurial_all_paths-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f23b73165cec29fd6603bed813859f66",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21842,
      "upload_time": "2020-06-27T22:41:35",
      "upload_time_iso_8601": "2020-06-27T22:41:35.600825Z",
      "url": "https://files.pythonhosted.org/packages/d7/29/afbe5d2aea422b9db1f8326f4cb1138e526d0427f0561c015fcbd8eddb48/mercurial_all_paths-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}