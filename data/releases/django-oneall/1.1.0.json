{
  "info": {
    "author": "Ekevoo",
    "author_email": "ekevoo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django :: 1.8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: System :: Systems Administration :: Authentication/Directory"
    ],
    "description": "django-oneall - Django Authentication support for OneAll\n========================================================\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/leandigo/django-oneall\n   :target: https://gitter.im/leandigo/django-oneall?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n**OneAll** (|oneall|_) provides web-applications with a unified API for **30+ social networks**.\n\n**django-oneall** is a Django app providing allowing user authentication and management through OneAll\n\nRequirements\n------------\n\n#. ``django>=1.8`` (Wasn't tested on earlier versions, but might work)\n#. ``pyoneall>=0.2.3``\n\nImplementation Overview\n-----------------------\nOneAll API documentation is available at |onealldoc|_. However, in order to use pyoneall with your application, it's\nenough to read the docs for the Connection API: `Connection API Documentation`_.\n\nFor more information on ``pyoneall`` the OneAll API wrapper that this package relies on, check out\n`<https://github.com/leandigo/pyoneall>`_. It has more goodies you could use.\n\nThis package provides user authentication capabilities based on ``django.contrib.auth``. It provides the following\ncomponents:\n\n#. Authentication Backend\n#. An identity model which stores a cached copy of the user's identity\n#. A callback view for the authentication process\n\nSetup\n-----\n\nInstallation\n````````````\nAdd this app to your project directory, or install via::\n\n    pip install django_oneall\n\nConfiguration\n`````````````\n\n``settings.py``\n^^^^^^^^^^^^^^^\n\nAdd ``django_oneall`` to ``INSTALLED_APPS``, make sure you have ``django.contrib.auth`` enabled::\n\n    INSTALLED_APPS = (\n        'django.contrib.auth',\n        # . . .\n        'django_oneall',\n    )\n\nAdd the Django authentication backends::\n\n    AUTHENTICATION_BACKENDS = (\n        'django_oneall.auth.OneAllAuthBackend',\n        'django_oneall.auth.EmailTokenAuthBackend',  # Optional\n    )\n\nConfigure OneAll, for example::\n\n    ONEALL = {\n        'credentials': {\n            'site_name': 'mysite',\n            'public_key': '2d27cffd-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n            'private_key': '84d94998-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n        },\n        'login_widget': {\n            'providers': ['amazon', 'blogger', 'disqus', 'draugiem', 'facebook',\n                          'foursquare', 'github', 'google', 'instagram', 'linkedin',\n                          'livejournal', 'mailru', 'odnoklassniki', 'openid',\n                          'paypal', 'reddit', 'skyrock', 'stackexchange', 'steam',\n                          'twitch', 'twitter', 'vimeo', 'vkontakte', 'windowslive',\n                          'wordpress', 'yahoo', 'youtube'],\n            'grid_sizes': [7, 5],\n            # Any setting allowed in the login widget assistant can be put here.\n        },\n        'store_user_info': True,\n        'email_token_expiration_hours': 3,\n    }\n\nCredentials are mandatory. All other settings are optional.\n\nIf you plan to use E-mail Token authentication, you must also `configure your e-mail backend`_.\nHere's a good setting for development::\n\n    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n\n``urls.py``\n^^^^^^^^^^^\nAdd the following URL pattern to your ``urlpatterns`` in your global ``urls.py``::\n\n    url(r'^accounts/', include('django_oneall.urls')),\n\nUsing this Django App in ``/accounts/`` will work as a drop-in replacement to ``django.contrib.auth``.\n\nHowever, if you're using ``django.contrib.admin``, it implements its own login screen, which conflicts with OneAll's.\nYou then need to override its login screen like so::\n\n    url(r'^admin/login', 'django_oneall.views.oa_login'),\n    url(r'^admin/', include(admin.site.urls)),\n\nSuper User\n^^^^^^^^^^\n\n* You can promote an existing user to super user (OneAll Token, integer Django user ID, or user e-mail).\n* You can create a new user that's super right from the start, with their e-mail.\n\nJust run::\n\n    python manage.py setsuperuser [user]\n\nWhereas ``[user]`` can be either of the three.\n\nBeware that this command **will never send any e-mail**;\nit merely displays the e-mail login link to be manually pasted in your web browser.\nShould your end user be unavailable to complete login, don't worry, they have already been made super-user.\n\nTemplate\n^^^^^^^^\nPages that implement OneAll widgets must include in their ``<head>``::\n\n    {% load oneall %}\n    {% oneall_header %}\n\nThe login Widget can be included manually as instructed through the OneAll assistant, or, if you're feeling lazy::\n\n    {% oneall_social_login %}\n\nYou can also pass an optional argument (it must be the Django ``User`` object) if you want social linking instead::\n\n    {% oneall_social_login current_user %}\n\nNotes and Stuff\n---------------\nAfter configuring, ``python manage.py migrate`` is **required**.\n\nIf you're upgrading from ``django-oneall<1.0``, you must also run ``python manage.py legacyimport`` afterwards.\n\nNow users can authenticate and attain user privileges using their social accounts, without the need for you app to\nhandle the registration.\n\nInside your views or any other Python code, you can access the user's identity information like this::\n\n    user = User.objects.get(username='<user_token>')\n    identity = user.identity\n\n``identity`` is an instance of the ``OneAllUserIdentity`` model, which allows you access to cached user identity\ninformation, provided by the social network the user used to authenticate. The data provided varies between different\nsocial networks. ``vars(identity)`` will show you the user's information.\n\nYou can create your own authentication views. ``django.contrib.auth.authenticate`` and ``django.contrib.auth.login``\nwill work seamlessly with OneAll if you've added ``django_oneall.auth.OneAllAuthBackend`` to your\n``AUTHENTICATION_BACKENDS``. You can find docs on that at `Connection API Documentation`_, or take a look at the\ncode in ``views.py`` provided in this package.\n\nRoadmap\n-------\n\n- Internationalization.\n- Implement `OneAll Social Link`_.\n\nLicense\n-------\nCopyright (c) 2013-2015, Leandigo (|leandigo|_) and Ekevoo_.\n\nReleased under the MIT License. See the LICENSE file for details.\n\n.. |oneall| replace:: http://www.oneall.com\n.. _oneall: http://www.oneall.com\n.. |onealldoc| replace:: http://docs.oneall.com\n.. _onealldoc: http://docs.oneall.com\n.. _Connection API Documentation: http://docs.oneall.com/api/resources/connections/\n.. _configure your e-mail backend: https://docs.djangoproject.com/en/1.8/ref/settings/#email-backend\n.. _OneAll Social Link: https://www.oneall.com/services/social-link/\n.. |leandigo| replace:: www.leandigo.com\n.. _leandigo: http://www.leandigo.com\n.. _Ekevoo: http://ekevoo.com",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.leandigo.com/",
    "keywords": null,
    "license": "MIT License, see LICENSE file",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-oneall",
    "package_url": "https://pypi.org/project/django-oneall/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-oneall/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.leandigo.com/"
    },
    "release_url": "https://pypi.org/project/django-oneall/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Authentication support for OneAll. Provides unified authentication for 30+ social networks",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3091481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aabacb8d6ac699ea31a0ac261f0f08d6a24425feb460e8988a2702a3cfb89a40",
        "md5": "a7c7b477777acd332b8db3a7109b21d2",
        "sha256": "2d0b9de5175db62c816c646327a49ebc2eb69a76f7adab0c1e6c82476c309155"
      },
      "downloads": -1,
      "filename": "django-oneall-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a7c7b477777acd332b8db3a7109b21d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13859,
      "upload_time": "2015-10-07T12:40:01",
      "upload_time_iso_8601": "2015-10-07T12:40:01.541270Z",
      "url": "https://files.pythonhosted.org/packages/aa/ba/cb8d6ac699ea31a0ac261f0f08d6a24425feb460e8988a2702a3cfb89a40/django-oneall-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}