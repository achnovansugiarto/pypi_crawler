{
  "info": {
    "author": "blueking",
    "author_email": "blueking@tencent.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# django-versionlog\n\n![](docs/img/icons/django-versionlog.png)\n\n[![license](https://img.shields.io/badge/license-mit-brightgreen.svg?style=flat)](https://github.com/TencentBlueKing/django-versionlog/blob/master/LICENSE) [![Release Version](https://img.shields.io/badge/release-1.6.0-brightgreen.svg)](https://github.com/TencentBlueKing/django-versionlog/releases) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/TencentBlueKing/django-versionlog/pulls) \n\n> **重要提示**: `master` 分支是开发分支，可能处于 *不稳定或者不可用状态* 。请通过[releases](https://github.com/TencentBlueKing/django-versionlog/releases) 而非 `master` 去获取稳定的软件包\n\ndjango-versionlog是为网站开发者提供版本日志快速接入的功能模块，支持django框架，兼容python2和python3。开发者只需在项目中进行简单的配置和维护版本日志目录中的md文件，即可在项目中向用户展示网站版本的更新迭代内容。\n\n## Overview\n\n- [最新特性](docs/feature.md)\n- [代码目录](docs/structure.md)\n- [进阶使用](docs/usage.md)\n\n## Quick Start\n\n本节以单页面对话框版本日志为例，展示使用本功能模块最简单的流程：\n1. 安装版本日志功能模块(内部仓库)：\n    ``` shell\n    pip install django-versionlog \n    ```\n\n2. 在项目配置文件中的INSTALLED_APPS内添加version_log：\n    ``` python\n    INSTALLED_APPS += (\n        'version_log'\n    )\n    ```\n\n3. 在项目的urls.py中配置路由：\n    ```python\n    import version_log.config as config\n    urlpatterns = [\n        ...,\n        url(r'^{}'.format(config.ENTRANCE_URL), include('version_log.urls', namespace='version_log')),\n    ]\n    ```\n\n4. 创建和初始化对应表：\n    ```shell\n    python manage.py makemigrations version_log\n    python manage.py migrate\n    ```\n\n5. 收集静态文件&启动项目：\n    ```shell\n    python manage.py collectstatic\n    python manage.py runserver\n    ```\n\n    项目运行后，会在项目根目录下创建版本日志文件目录version_logs_md，该目录用于存放开发者网站版本日志文件。\n\n    __注意__： 这里假设项目配置变量中BASE_DIR指向工程根目录。\n\n6. 添加版本日志文件：\n\n    每个版本的日志对应于一个md文件，同时md文件命名需与版本号对应。\n    命名格式可为 `版本号_版本日期.md` 或 `版本号.md`。前者会以文件名中的日期作为版本日期，后者会以文件最新修改日期作为版本日期。\n    \n    建议版本号的规则满足正则：```[vV](\\d+\\.){2,4}md```， 如：v1.1.md, V1.2.3.md等，命名风格最好统一。\n    版本文件命名中的日期格式可通过FILE_TIME_FORMAT进行配置，默认为`%Y%m%d`，如20201104等。\n\n    开发者需将准备好的版本日志文件都放到version_logs_md文件夹中，1.3.0之后版本模块不再对文件名进行强制校验，所以开发者需保证放入文件夹中的文件都是符合命名规范且可解析的版本日志文件。\n\n7. 重启项目：\n\n    ```shell\n    python manage.py runserver\n    ```\n\n8. 查看效果：打开链接 `{SITE_URL}/version_log/` 即可查看效果，其中{SITE_URL}为开发者网站地址。\n\n\n## Support\n\n- [蓝鲸论坛](https://bk.tencent.com/s-mart/community)\n\n- 联系我们，技术交流QQ群：\n\n  社区版QQ交流群：495299374\n  \n  蓝鲸运维开发交流群：878501914\n  ![](docs/img/icons/qr_code.png)\n  \n## BlueKing Community\n\n- [BK-CMDB](https://github.com/Tencent/bk-cmdb): 蓝鲸配置平台（蓝鲸 CMDB）是一个面向资产及应用的企业级配置管理平台。\n- [BK-CI](https://github.com/Tencent/bk-ci): 蓝鲸持续集成平台是一个开源的持续集成和持续交付系统，可以轻松将你的研发流程呈现到你面前。\n- [BK-BCS](https://github.com/Tencent/bk-bcs): 蓝鲸容器管理平台是以容器技术为基础，为微服务业务提供编排管理的基础服务平台。\n- [BK-PaaS](https://github.com/Tencent/bk-PaaS): 蓝鲸 PaaS 平台是一个开放式的开发平台，让开发者可以方便快捷地创建、开发、部署和管理 SaaS 应用。\n- [BK-SOPS](https://github.com/Tencent/bk-sops): 标准运维（SOPS）是通过可视化的图形界面进行任务流程编排和执行的系统，是蓝鲸体系中一款轻量级的调度编排类 SaaS 产品。\n- [BK-JOB](https://github.com/Tencent/bk-job): 蓝鲸作业平台(Job)是一套运维脚本管理系统，具备海量任务并发处理能力。\n\n## Contributing\n\n对于项目感兴趣，想一起贡献并完善项目请参阅[Contributing Guide](docs/contributing.md)。\n\n[腾讯开源激励计划](https://opensource.tencent.com/contribution) 鼓励开发者的参与和贡献，期待你的加入。\n\n## License\n\n基于 MIT 协议， 详细请参考[LICENSE](LICENSE)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TencentBlueKing/django-versionlog",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-versionlog",
    "package_url": "https://pypi.org/project/django-versionlog/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-versionlog/",
    "project_urls": {
      "Homepage": "https://github.com/TencentBlueKing/django-versionlog"
    },
    "release_url": "https://pypi.org/project/django-versionlog/1.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "version log module",
    "version": "1.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17472383,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "087b78d86b7149e5659d0e361fd3dc651d829678fbb3d2981214b04066ae662e",
        "md5": "cd4d7bf1948037f6be969ded2f68fcd4",
        "sha256": "0c4c31705f6e679f115568549f690e84c11fe5d572459933e923786218567487"
      },
      "downloads": -1,
      "filename": "django-versionlog-1.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cd4d7bf1948037f6be969ded2f68fcd4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2835000,
      "upload_time": "2023-03-28T02:16:48",
      "upload_time_iso_8601": "2023-03-28T02:16:48.295072Z",
      "url": "https://files.pythonhosted.org/packages/08/7b/78d86b7149e5659d0e361fd3dc651d829678fbb3d2981214b04066ae662e/django-versionlog-1.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}