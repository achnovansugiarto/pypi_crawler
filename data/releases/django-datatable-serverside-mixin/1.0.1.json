{
  "info": {
    "author": "Matt Henry",
    "author_email": "matt.henry8411@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Serverside Datatable\n\nThis is a fork of Umesh Krishna's django-serverside-datable which was written for an older version of datatables. This updated version has been rewritten. Thanks to Umesh for the foundation to start from.\n\nThis is a  package that let you use views with DataTables.net server-side processing in your Django Project.\n\nSupports datatable features such as Pagination, Search, filtering, etc...\n\n## Install\n\n```\npip install django-datatable-serverside-mixin\n```\n\n\n## How to use\n\nCreate a django View that inherits from  **ServerSideDatatableMixin**.\nExample (backend):\n\n```python\n# views.py\n\nfrom django_serverside_datatable_mixin.views import ServerSideDatatableView\n\n\nclass ItemListView(ServerSideDatatableView):\n\tqueryset = models.Item.objects.all()\n\tcolumns = ['name', 'code', 'description']\n\n\n# urls.py\n# add the following line to urlpatterns\n\npath('data/', views.ItemListView.as_view()), \n\n```\n\nExample (frontend):\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css\"/>\n \n\t<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<h1>Items</h1>\n\t\t<hr>\n\t\t<table id=\"items-table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Code</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody></tbody>\n\t\t</table>\n\n\t\t<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\n\t\t<script src=\"https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js\"></script>\n\t\t<script language=\"javascript\">\n\t\t\t$(document).ready(function () {\n\t\t\t\t$('#items-table').dataTable({\n\t\t\t\t\tserverSide: true,\n\t\t\t\t\tsAjaxSource: \"http://127.0.0.1:8000/data/\",  // new url\n                                        columns: [\n                                            {name: \"name\", data: 0},\n                                            {name: \"code\", data: 1},\n                                            {name: \"description\", data: 2},\n                                        ],\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\nThe dataTables `columns` option must be set in the dataTable initialization. Each column is `required` to have a name coresponding to the views `columns` array. Data can optionally be set to the same field values to add readable keys to the json responses.\n\nFor further customization of Datatable, you may refer the Datatable official documentation.\n\n#\n## To Do:\n- Implement global REGEX filtering\n- Implement per column filtering\n- Implement per column regex filtering\n- Write tests\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/matthttam/django_datatable_serverside_mixin",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-datatable-serverside-mixin",
    "package_url": "https://pypi.org/project/django-datatable-serverside-mixin/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-datatable-serverside-mixin/",
    "project_urls": {
      "Homepage": "https://github.com/matthttam/django_datatable_serverside_mixin"
    },
    "release_url": "https://pypi.org/project/django-datatable-serverside-mixin/1.0.1/",
    "requires_dist": [
      "Django (>=1.8)",
      "querystring-parser (>=1.2.4)"
    ],
    "requires_python": ">=3.10",
    "summary": "Server-side Datatable processing view mixin for Django",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15490737,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6436545ddbeff84cda49337916fd0971b7b80aa1a0b33601c65f94ab3320ee46",
        "md5": "89f00a56fc347d5d9e35b39a4a919ce7",
        "sha256": "a3f5b32c8db9b70be67b48ea676bde5e927d34f310d59c25aa0cd458b75cf9ae"
      },
      "downloads": -1,
      "filename": "django_datatable_serverside_mixin-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "89f00a56fc347d5d9e35b39a4a919ce7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 6250,
      "upload_time": "2022-07-20T02:00:34",
      "upload_time_iso_8601": "2022-07-20T02:00:34.562979Z",
      "url": "https://files.pythonhosted.org/packages/64/36/545ddbeff84cda49337916fd0971b7b80aa1a0b33601c65f94ab3320ee46/django_datatable_serverside_mixin-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "807d015eb462e87b1d63719f2e678c23cd0b461aa78b03bac9b5671922118905",
        "md5": "2af53fd19b1467128b3ef8c8c53ebcd9",
        "sha256": "612300b04f04e8582e5e7d7027ffb179067d80059b3338edacf54130685f6d40"
      },
      "downloads": -1,
      "filename": "django_datatable_serverside_mixin-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2af53fd19b1467128b3ef8c8c53ebcd9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 5312,
      "upload_time": "2022-07-20T02:00:38",
      "upload_time_iso_8601": "2022-07-20T02:00:38.894622Z",
      "url": "https://files.pythonhosted.org/packages/80/7d/015eb462e87b1d63719f2e678c23cd0b461aa78b03bac9b5671922118905/django_datatable_serverside_mixin-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}