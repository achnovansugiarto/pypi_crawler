{
  "info": {
    "author": "Alexandre Borges",
    "author_email": "alexandreborges@blackstormsecurity.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Malwoverview\n\n\n      Copyright (C)  2018-2020 Alexandre Borges <alexandreborges at blackstormsecurity dot com>\n\n      This program is free software: you can redistribute it and/or modify\n      it under the terms of the GNU General Public License as published by\n      the Free Software Foundation, either version 3 of the License, or\n      (at your option) any later version.\n\n      This program is distributed in the hope that it will be useful,\n      but WITHOUT ANY WARRANTY; without even the implied warranty of\n      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n      GNU General Public License for more details.\n\n      See GNU Public License on <http://www.gnu.org/licenses/>.\n\n\n# Current Version: 4.0.2 \n\n     Important note:  Malwoverview does NOT submit samples to Virus Total or Hybrid Analysis by \n     default. It submits only hashes, so respecting Non-Disclosure Agreements (NDAs). Nonetheless, \n     if you use the \"-V\" (uppercase), \"-A\" (uppercase) or \"-P\" (uppercase), so Malwoverview SUBMITS your \n     malware sample to Virus Total, Hybrid Analysis and Polyswarm, respectively. Additionally, options \n     \"-Y\" and \"-T\" also sent the Android package from Android device to Hybrid-Analysis and Virus \n     Total, respectively.  \n\n\n# ABOUT\n\nMalwoverview.py is a simple tool to perform an initial and quick triage of malware samples, URLs and hashes. \nAdditionally, Malwoverview is able to show some threat intelligence information.   \n\nThis tool aims to : \n\n1. Determine similar executable malware samples (PE/PE+) according to the import table (imphash) and group \n   them by different colors (pay attention to the second column from output). Thus, colors matter!\n2. Show hash information on Virus Total, Hybrid Analysis, Malshare, Polyswarm, URLhaus, Alien Vault, i\n   Malpedia and ThreatCrowd engines. \n3. Determining whether the malware samples contain overlay and, if you want, extract it. \n4. Check suspect files on Virus Total, Hybrid Analysis and Polyswarm.\n5. Check URLs on Virus Total, Malshare, Polyswarm, URLhaus engines and Alien Vault. \n6. Download malware samples from Hybrid Analysis, Malshare, HausURL, Polyswarm and Malpedia engines.\n7. Submit malware samples to VirusTotal, Hybrid Analysis and Polyswarm.\n8. List last suspected URLs from URLHaus.\n9. List last payloads from URLHaus. \n10. Search for specific payloads on the Malshare.\n11. Search for similar payloads (PE32/PE32+) on Polyswarm engine.\n12. Classify all files in a directory searching information on Virus Total and Hybrid Analysis. \n13. Make reports about a suspect domain using different engines such as VirusTotal, Malpedia and \n    ThreatCrowd. \n14. Check APK packages directly from Android devices against Hybrid Analysis and Virus Total. \n15. Submit APK packages directly from Android devices to Hybrid Analysis and Virus Total. \n16. Show URLs related to an user provided tag from URLHaus.\n17. Show payloads related to a tag (signature) from URLHaus.\n18. Show information about an IP address from Virus Total, Alien Vault, Malpedia and ThreatCrowd.\n19. Show IP address, domain and URL information from Polyswarm. \n21. Perform meta-search on Polyswarm Network using several criteria: imphash, IPv4, domain, URL and\n    malware family. \n22. Gather threat hunting information from AlienVault using different criteria. \n23. Gather threat hunting information from Malpedia using different criteria. \n24. Gather threat hunting information from ThreatCrowd using different criteria. \n\n# CONTRIBUTORS:\n\n      Alexandre Borges (project owner)\n      Corey Forman (https://github.com/digitalsleuth)\n\n# INSTALLATION \n\nThis tool has been tested on Ubuntu, Kali Linux 2020, REMnux, Windows 8.1 and 10. Malwoverview \ncan be installed by executing the following command:\n\n      pip3.8 install git+https://github.com/alexandreborges/malwoverview (preferred method) \n      or...\n      python -m pip install -U malwoverview\n      or...\n      git clone https://github.com/alexandreborges/malwoverview\n\n\nTo use Malwoverview you should insert VirusTotal, Hybrid Analysis, URLHaus, Malshare, Polyswarm,\nAlien Vault and Malpedia APIs into the .malwapi.conf configuration file (the default one at the \nhome directory -- if the file doesn't exist, so you should create it) or you could create a \ncustom configuration file and indicate it by using the -c option. \n\nA special note about the Alien Vault: it is necessary to subscribe to pulses on Alien Vault \nwebsite before using -n 1 option.  \n\nThe .malwapi.conf configuration file (from the the home directory) has the following format: \n\n      [VIRUSTOTAL]\n      VTAPI = \n\n      [HYBRID-ANALYSIS]\n      HAAPI = \n\n      [MALSHARE]\n      MALSHAREAPI = \n\n      [HAUSSUBMIT]\n      HAUSSUBMITAPI = \n\n      [POLYSWARM]\n      POLYAPI = \n\n      [ALIENVAULT]\n      ALIENAPI = \n\n      [MALPEDIA]\n      MALPEDIAAPI =\n\nIn Windows systems, when the package is installed using pip, the suggestion is to create the \n.malwapi.conf in either C:\\Users\\<username> directory.  Additionally, you don't need to specify \n\"-w 1\" option while using malwoverview.py on Windows anymore. \n\nTo check the installation, execute:\n\n       malwoverview.py --help\n\nFurther information is available on: \n\n       (PYPI.org repository) https://pypi.org/project/malwoverview/\n       (Github) https://github.com/alexandreborges/malwoverview\n\nIf you want to perform the manual steps (usually, it is not necessary), so few steps will be necessary:\n\n## Kali Linux (manual steps)\n\n1. Python version 3.8 or later (Only Python 3.x !!! It does NOT work using Python 2.7) \n\n       $ apt-get install python3.8  (for example)\n\n2. Python-magic.  \n\n      To install python-magic package you can execute the following command:\n\n       $ pip3.8 install python-magic\n\n      Or compiling it from the github repository:\n\n       $ git clone https://github.com/ahupp/python-magic\n       $ cd python-magic/\n       $ python3.8 setup.py build\n       $ python3.8 setup.py install\n\n      As there are serious problems about existing two versions of python-magic package, my \n      recommendation is to install it from github (second procedure above) and copy the magic.py \n      file to the SAME directory of malwoverview tool. \n\n3. Install several Python packages: \n\n       $ pip3.8 install -r requirements.txt\n\n       OR\n\n       $ pip3.8 install -U pefile\n       $ pip3.8 install -U colorama\n       $ pip3.8 install -U simplejson\n       $ pip3.8 install -U python-magic\n       $ pip3.8 install -U requests\n       $ pip3.8 install -U validators\n       $ pip3.8 install -U geocoder\n       $ pip3.8 install -U polyswarm-api\n       $ pip3.8 install -U pathlib\n       $ pip3.8 install -U configparser\n\n4. To check an Android mobile you need to install the \"adb\" program by executing the following command:\n\n       # apt get install adb\n\n   PS: before trying Android's options, check:\n\n       * If the adb program is listed in the PATH environment variable.\n       * If the system has authorized access to the device by using \"adb devices -l\"\n\n5. Finally, you can install Malwoverview using one of the following methods:\n\n         pip3.8 install git+https://github.com/alexandreborges/malwoverview (preferred method) \n\n         or...\n\n         python -m pip install -U malwoverview\n\n         or...\n\n         git clone https://github.com/alexandreborges/malwoverview\n\n\n## Windows (manual steps)\n\n1. Install the Python version 3.8.x or later from https://www.python.org/downloads/windows/ \n\n2. Python-magic. \n\n      To install python-magic package you can execute the following command:\n\n       C:\\> python.exe -m pip install python-magic\n\n      Or compiling it from the github repository:\n\n       C:\\> git clone https://github.com/ahupp/python-magic\n       C:\\> cd python-magic/\n       C:\\> python.exe setup.py build\n       C:\\> python.exe setup.py install\n\n3. Install several Python packages: \n\n       C:\\> python.exe -m pip install -r requirements.txt\n\n       OR: \n\n       C:\\> python.exe -m pip install -U pefile\n       C:\\> python.exe -m pip install -U colorama\n       C:\\> python.exe -m pip install -U simplejson\n       C:\\> python.exe -m pip install -U python-magic\n       C:\\> python.exe -m pip install -U requests\n       C:\\> python.exe -m pip install -U validators\n       C:\\> python.exe -m pip install -U geocoder\n       C:\\> python.exe -m pip install -U polyswarm-api\n       C:\\> python.exe -m pip install -U pathlib\n       C:\\> python.exe -m pip install -U configparser\n       C:\\> python.exe -m pip install -U python-magic-bin\n\n4. To check an Android mobile you need to install the \"adb\" program by:\n\n       * Downloading and installing the Android Studio from: https://developer.android.com/\n         studio#downloads (Recommended)\n       * Downloading it from https://dl.google.com/android/repository/platform-tools-latest-windows.zip\n\n   PS: before trying Android's options, check:\n\n       * If the adb program is listed in the PATH environment variable.\n       * If the system has authorized access to the device by using \"adb devices -l\"\n\n5. Finally, you can install Malwoverview using one of the following methods:\n\n         pip3.8 install git+https://github.com/alexandreborges/malwoverview (preferred method)\n\n         or...\n\n         python -m pip install -U malwoverview\n\n         or...\n\n         git clone https://github.com/alexandreborges/malwoverview\n\n\n# USAGE\n\nTo use the malwoverview, execute the command as shown below:\n\n      root@ubuntu19:~/malwoverview# python3.8 malwoverview.py  | more\n\n      usage: python malwoverview.py -c <API configuration file> -d <directory> -f <fullpath> \n      -b <0|1> -v <0|1|2|3> -a <0|1|2|3|4|5> -x <0|1> -w <0|1> -u <url> -H <hash file> -V <filename>\n      -D <0|1> -e<0|1|2|3|4> -A <filename> -g <job_id> -r <domain> -t <0|1> -l <1-14> -L <hash> \n      -U <url> -S <url> -z <tags> -K <0|1|2> -j <hash> -J <hash> -P <filename> -R <PE file, IP address, \n      domain or URL> -G <0|1|2|3|4> -y <0|1|2|3> -Y <file name> -Y <file name> -T <file name> -W <tag> \n      -k <signature> -I <ip address> -n <1|2|3|4|5> -N <argument> -M <1-8> -m <argument> -Q <1-5> \n      -q <argument>\n\nMalwoverview is a malware triage tool written by Alexandre Borges.\n\noptional arguments:\n\n      -h, --help        Show this help message and exit\n      -c CONFIG FILE, --config CONFIG FILE\n                        Use a custom config file to specify API's\n      -d DIRECTORY, --directory DIRECTORY\n                        Specifies the directory containing malware samples.\n      -f FILENAME, --filename FILENAME\n                        Specifies a full path to a malware sample. It returns general information \n                        about the file (any filetype)\n      -b BACKGROUND, --background BACKGROUND\n                        Adapts the output colors to a white terminal. The default is black terminal\n      -x OVERLAY, --overlay OVERLAY\n                        Extracts the overlay (it is used with -f option).\n      -v VIRUSTOTAL, --virustotal VIRUSTOTAL\n                        If using \"-v 1\", so it queries the Virus Total database for positives and \n                        totals. If \"v 2\" (which can be used only together with -f option), so it \n                        shows antivirus reports from the main players. If \"v 3\", so the binary's IAT \n                        and EAT are also shown. Remember: you need to edit the .malwapi.conf and insert \n                        your VT API.\n      -a HYBRID_ANALYSIS, --hybrid HYBRID_ANALYSIS\n                        Queries the Hybrid Analysis database for getting a general report. Possible \n                        values are: 1: Windows 7 32-bit; 2: Windows 7 32-bit (HWP Support); 3: \n                        Windows 64-bit; 4: Android; 5: Linux 64-bit. Remember: you need to edit the\n                        .malwapi.conf and insert your HA API and secret.\n      -u URL_VT, --vturl URL_VT\n                        SUBMITS a URL to the Virus Total scanning.\n      -I IP_VT, --ipaddrvt IP_VT\n                        This option checks an IP address on Virus Total.\n      -r URL_DOMAIN, --urldomain URL_DOMAIN\n                        This option gets a domain's report from Virus Total.\n      -H FILE_HASH, --hash FILE_HASH\n                        This option specifies the hash to be checked on Virus Total and Hybrid Analysis. \n                        For the Hybrid Analysis report you must use it with the -e option.\n      -V FILENAME_VT, --vtsubmit FILENAME_VT\n                        Submits a file(up to 32MB) for Virus Total scanning and gets the report. Attention: \n                        use forward slash to specify the target file even on Windows systems. Furthermore, \n                        the minimum waiting time is set up in 90 seconds because the Virus Total waiting \n                        queue. If an error occurs, so wait few minutes and try to access the report by \n                        using -f option.\n      -A SUBMIT_HA, --submitha SUBMIT_HA\n                        Submits a file(up to 32MB) to be scanned by the Hybrid Analysis engine. Use the \n                        -e option to specify the best environment to run the suspicious file.\n      -g HA_STATUS, --hastatus HA_STATUS\n                        Checks the report's status of submitted samples to Hybrid Analysis engine by \n                        providing the job ID. Possible returned status values are: IN_QUEUE, SUCCESS,\n                        ERROR, IN_PROGRESS and PARTIAL_SUCCESS.\n      -D DOWNLOAD, --download DOWNLOAD\n                        Downloads the sample from Hybrid Analysis, Malshare and Polyswarm. Options i\n                        -H or -L (Hybrid Analysis and Malshare, respectively) must be specified as well \n                        -O option for Polyswarm engine.\n      -e HA_ENVIRONMENT, --haenv HA_ENVIRONMENT\n                        This option specifies the used environment to be used to test the samlple on \n                        Hybrid Analysis: <0> Windows 7 32-bits; <1> Windows 7 32-bits (with HWP Support); \n                        <2> Windows 7 64-bits; <3> Android; <4> Linux 64-bits environment. This option \n                        is used together either -H option or the -A option.\n      -t MULTITHREAD, --thread MULTITHREAD\n                        (optional) This option has several different meanings according to chosen the \n                        value. Possible values: <1>: This value is used to force multithreads on Linux \n                        whether: the -d option is specified AND you have a PAID Virus Total API or you\n                        are NOT checking the VT while using the -d option. PS1: using this option causes \n                        Imphashes not to be grouped anymore; PS2: it also works on Windows, but there is \n                        not gain in performance; <2>: This value should be used with -d option in\n                        two scenarios: 1) either including the \"-v 1\" option (Virus Total -- you'll see \n                        a complete VT response whether you have the private API) for a multithread searching\n                        and reduced output; 2) or including the -a option (Hybrid Analysis) for a multithread \n                        searching to get a complete and amazing output. If you are using the -a option, so \n                        you should pickup the right number represening the testing environment to adjust the \n                        output to your sample types. PS1: certainly, if you have a directory holding \n                        many malware samples, so you will want to test this option with -a option; PS2: it \n                        also works on Windows, but there is not gain in performance; <3>: You should use \n                        this value with -v option if you have a public Virus Total API. It forces a one \n                        minute wait every 4 malware samples, but allows obtaining a complete evaluation of \n                        the malware repository.\n      -l MALSHARE_HASHES, --malsharelist MALSHARE_HASHES\n                        This option shows hashes of a specific type from the last 24 hours from Malshare \n                        repository. Possible values are: 1: PE32 (default) ; 2: Dalvik ; 3: ELF ; 4: HTML ;\n                        5: ASCII ; 6: PHP ; 7: Java ; 8: RAR ; 9: Zip ; 10: UTF-8 ; 11: MS-DOS ; 12: data ; \n                        13: PDF ; 14: Composite(OLE). You need to insert your Malshare API into the \n                        .malwapi.conf file.\n      -L MALSHARE_HASH_SEARCH, --malsharehash MALSHARE_HASH_SEARCH\n                        Searches for the provided hash on the Malshare repository. You need to insert your \n                        Malshare API into the .malwapi.conf file. PS: sometimes the Malshare website is \n                        unavailable, so should check the website availability if you get some error message.\n      -K HAUS_PAYLOAD_URL, --haus_payloadbatch HAUS_PAYLOAD_URL\n                        THis option has few possible values: <1> Retrieves a list of downloadable links of \n                        recent PAYLOADS (last 3 days, limited to 1000 entries) from URLHaus website; <2>: \n                        Retrieves a list of recent URLs (last 3 days, limited to 1000 entries) from URLHaus\n                        website. Take care: each link take you to download a passworless zip file containing \n                        a malware, so your AV can generate alerts!\n      -U URL_HAUS_QUERY, --haus_query URL_HAUS_QUERY\n                        Queries a URL on the URLHaus website.\n      -j HAUS_HASH, --haus_hash HAUS_HASH\n                        Queries information about a provided payload's hash (md5 or sha256) on the URLHaus \n                        website.\n      -S URL_HAUS_SUB, --haus_submission URL_HAUS_SUB\n                        Submits a URL used to distribute malware (executable, script, document) to the \n                        URLHaus website. Pay attention: Any other submission will be ignored/deleted from \n                        URLhaus. You have to register your URLHaus API into the .malwapi.conf file.\n      -z [HAUSTAG [HAUSTAG ...]], --haustag [HAUSTAG [HAUSTAG ...]]\n                        Associates tags (separated by spaces) to the specified URL. Please, only upper case, \n                        lower case, '-' and '.' are allowed. This parameter is optional, which could be used \n                        with the -S option.\n      -W [HAUSTAGSEARCH [HAUSTAGSEARCH ...]], --haustagsearch [HAUSTAGSEARCH [HAUSTAGSEARCH ...]]\n                        This option is for searching malicious URLs by tag on URLhaus. Tags are case-senstive \n                        and only upper case, lower case, '-' and '.' are allowed.\n      -k [HAUSSIGSEARCH [HAUSSIGSEARCH ...]], --haussigsearch [HAUSSIGSEARCH [HAUSSIGSEARCH ...]]\n                        This option is for searching malicious payload by tag on URLhaus. Tags are \n                        case-sensitive and only upper case, lower case, '-' and '.' are allowed.\n      -J HAUS_DOWNLOAD, --haus_download HAUS_DOWNLOAD\n                        Downloads a malware sample (if it is available) from the URLHaus repository. It is \n                        necessary to provide the SHA256 hash.\n      -P POLYSWARMFILE, --polyswarm_scan POLYSWARMFILE\n                        (Only for Linux) Submits a sample to Polyswarm engine and performs a file scan.\n      -O POLYSWARMHASH, --polyswarm_hash POLYSWARMHASH\n                        (Only for Linux) Performs a hash scanning using the Polyswarm engine. Optionally, \n                        you can specify -D option to download the sample. Take care: Polyswarm enforces a \n                        restriction to number of downloaded samples in 20/month.\n      -R POLYSWARMMETA, --polyswarm_meta POLYSWARMMETA\n                        (Only for Linux) Provides the argument value for searches on Polyswarm engine through \n                        imphash (the PE file must be provided), ipv4, domain, URL and family. This argument \n                        must be used with -G option, so check it, please. Pay attention: you should check your \n                        metadata search limit on your Polyswarm account because once you have got the limit,\n                        so you will got an error.\n      -G METATYPE, --metatype METATYPE\n                        (Only for Linux) This parameter specifies search type for arguments provided by\n                        -R option (above) while searching on Polyswarm engine. Thus, the following values are \n                        valid -- 0: PE Executable (look for samples with the same ImpHash); 1: IP Address ; \n                        2: Domain ; 3. URL; 4. Family\n      -y ANDROID_HA, --androidha ANDROID_HA\n                        This option has multiple options: <1>: Check all third-party APK packages from the \n                        USB-connected Android device against Hybrid Analysis using multithreads. The Android \n                        device does not need to be rooted and the system does need to\n                        have the adb tool in the PATH environment variable; <2>: Check all third-party APK \n                        packages from the USB-connected\n                        Android device against VirusTotal using Public API (slower because of 60 seconds delay \n                        for each 4 hashes). The Android device does not need to be rooted and the system does \n                        need to have adb tool in the PATH environment variable; <3>: Check all third-party \n                        APK packages from the USB-connected Android device against VirusTotal using \n                        multithreads (only for Private Virus API). The Android device does not need to be \n                        rooted and the system needs to have adb tool in the PATH environment variable.\n      -Y ANDROID_SEND_HA, --androidsendha ANDROID_SEND_HA\n                        Sends an third-party APK package from your USB-connected Android device to Hybrid \n                        Analysis. The Android device does not need to be rooted and the system needs to have \n                        adb tool in the PATH environment variable.\n      -T ANDROID_SEND_VT, --androidsendvt ANDROID_SEND_VT\n                        Sends an third-party APK package from your USB-connected Android device to Virus \n                        Total. The Android device does not need be rooted and the system needis to have the \n                        adb tool in the PATH environment variable.\n      -n ALIENVAULT, --alienvault ALIENVAULT\n                        Checks multiple information from AlienVault. The possible values are: 1: Get the \n                        subscribed pulses ; 2: Get information about an IP address; 3: Get information about \n                        a domain; 4: Get information about a hash; 5: Get information about a URL\n      -N ALIENVAULT_ARGS, --alienvaultargs ALIENVAULT_ARGS\n                        Provides argument to AlienVault -n option.The allowed values are: 1, 2, 3, 4, 5.\n      -M MALPEDIA, --malpedia MALPEDIA\n                        This option is related to MALPEDIA and presents different meanings depending on the \n                        chosen value. Thus, 1: List meta information for all families ; 2: List all actors \n                        ID ; 3: List all available payloads organized by family from Malpedia; 4: Get meta \n                        information from an specific actor, so it is necessary to use the -m option. \n                        Additionally, try to confirm the correct actor ID by executing malwoverview with \n                        option -M 3; 5: List all families IDs; 6: Get meta information from an specific \n                        family, so it is necessary to use the -m option. Additionally, try to confirm the \n                        correct family ID by executing malwoverview with option -M 5; 7: Get a malware \n                        sample from malpedia (zip format -- password: infected). It is necessary to specify \n                        the requested hash by using -m option; 8: Get a zip file containing Yara rules for \n                        a specific family (get the possible families using -M 5), which must be specified \n                        by using -m option.\n      -m MALPEDIAARG, --malpediarg MALPEDIAARG\n                        This option provides an argument to the -M option, which is related to MALPEDIA.\n      -Q THREATCROWD, --threatcrowd THREATCROWD\n                        Checks multiple information from ThreatCrowd. The possible values are: 1: Get \n                        information about the provided e-mail ;\n                        2: Get information about an IP address; 3: Get information about a domain; 4: Get \n                        information about a provided MD5 hash; 5: Get information about a specific malware \n                        family.\n      -q THREATCROWDARG, --threatcrowdarg THREATCROWDARG\n                        This option provides an argument to the -Q option, which is related to THREATCROWD.\n\n      Remember that public VT API only allows 4 searches per second (as shown at the image above). Therefore,\n      if you are willing to wait some minutes, so you can use the -p option, which forces a one minute wait \n      every 4 malware samples, but allows obtaining a complete evaluation of the repository.\n\n\n      * ATTENTION 1: if the directory contains many malware samples while using -d option, so malwoverview.py\n                     could take some time. Nonetheless, you can use the new -t option (multithreading) to\n                     speed-up things. :)\n\n      ** ATTENTION 2: All engines enforces quota of submission and/or verification per day and/or month. \n                      Take care!\n\n      *** ATTENTION 3: Some options searching on Hybrid Analysis strongly depend of the \"-e\" option, which \n                       specifies the environment. Therefore, to check an Android sample (for example) it is \n                       necessary to use the right environment (-e 3 for Android).\n\n\n## Examples:\n\n      python3.8 malwoverview.py -d /root/malware/misc/\n      python3.8 malwoverview.py -d /root/malware/misc -t 1\n      python3.8 malwoverview.py -d /root/malware/misc -v 1 -t 3\n      python3.8 malwoverview.py -d /root/malware/misc -v 1 -t 1\n      python3.8 malwoverview.py -d /root/malware/misc -a 1 -t 2\n      python3.8 malwoverview.py -f /root/malware/misc/8a87a1261603af4d976faa57e49ebdd8fd8317e9dd13bd36ff25\n                                   99d1031f53ce -v 2\n      python3.8 malwoverview.py -f /root/malware/misc/806fc33650b7ec35dd01a06be3037674ae3cc0db6ba1e3f690ee\n                                   9ba9403c0627 -a 1 -v 1\n      python3.8 malwoverview.py -f /root/malware/misc/8a87a1261603af4d976faa57e49ebdd8fd8317e9dd13bd36ff25\n                                   99d1031f53ce -v 3\n      python3.8 malwoverview.py -f /root/malware/misc/blackstorm.php -v 2 -x \n      python3.8 malwoverview.py -u http://mobiletech.net/images/138907/8g7c645373370255099hf4at12buy2lgrdeqo/\n      python3.8 malwoverview.py -r xurl.es\n      python3.8 malwoverview.py -H 9ce861b93e7ddeebec8ed052450fc136162fb3239c502aab8fa9bc8962572457\n      python3.8 malwoverview.py -H 893339624602c7b3a6f481aed9509b53e4e995d6771c72d726ba5a6b319608a7 -e 1\n      python3.8 malwoverview.py -d /root/malware/linux/ -a 5\n      python3.8 malwoverview.py -d /root/malware/android/ -a 4\n      python3.8 malwoverview.py -d /root/malware/android/ -v 1 -t 3\n      python3.8 malwoverview.py -d /root/malware/android/ -a 4 -t 2\n      python3.8 malwoverview.py -V /root/malware/misc/malware999\n      python3.8 malwoverview.py -A /root/malware/android/NubankConvidado.apk -e 3\n      python3.8 malwoverview.py -g 5f2e727f70fa896603576725\n      python3.8 malwoverview.py -A /root/malware/windows/806fc33650b7ec35dd01a06be3037674ae3cc0db6ba1e3f690\n                                   ee9ba9403c0627\n      python3.8 malwoverview.py -l 1\n      python3.8 malwoverview.py -l 6\n      python3.8 malwoverview.py -l 4\n      python3.8 malwoverview.py -L bc9d356f8d08396d620d249b8f34a664c9397467b1a6033013c788df734f8bda\n      python3.8 malwoverview.py -K 1\n      python3.8 malwoverview.py -K 2\n      python3.8 malwoverview.py -U http://pusatppm.poltekkesbandung.com/wp-admin/report/b17892056589733xcz\n                                   cjkjvqctpr9v9sm/ \n      python3.8 malwoverview.py -J 9e7d263c3c9f155229a7d6fb29dfa4b62bfec31ed0d3bf4cc2dc60ffd9fd6d0e\n      python3.8 malwoverview.py -S http://jamogames.com/templates/JLHk/\n      python3.8 malwoverview.py -S http://pusatppm.poltekkesbandung.com/wp-admin/report/b17892056589733xc\n                                   zcjkjvqctpr9v9sm/\n      python3.8 malwoverview.py -P 9e7d263c3c9f155229a7d6fb29dfa4b62bfec31ed0d3bf4cc2dc60ffd9fd6d0e\n      python malwoverview.py -O f3ebeeeba13c82daef9731a5f3e8dbe535e963f83e531918ba1a8904b094d3b8\n      python malwoverview.py -R /root/malware/windows/Scarab_Ransomware -G 0\n      python./malwoverview.py -R 164.132.92.180 -G 1\n      python3.8 malwoverview.py -R sndoffo79.ddns.net -G 2\n      python3.8 malwoverview.py -R http://0uso87.com/bolb/jaent.php?l=liut1.cab -G 3\n      python3.8 malwoverview.py -R *Trickbot* -G 4\n      python3.8 malwoverview.py -R *Trojan* -G 4\n      python3.8 malwoverview.py -R *Ransomware* -G 4\n      python3.8 malwoverview.py -y 1\n      python3.8 malwoverview.py -y 2\n      python3.8 malwoverview.py -y 3\n      python3.8 malwoverview.py -T icompass\n      python3.8 malwoverview.py -Y icompass\n      python3.8 malwoverview.py -k Trickbot | more\n      python3.8 malwoverview.py -W Quakbot\n      python3.8 malwoverview.py -I 149.56.79.215\n      python3.8 malwoverview.py -n 1 -N 12\n      python3.8 malwoverview.py -n 2 -N 79.124.8.24\n      python3.8 malwoverview.py -n 3 -N covid19tracer.ca\n      python3.8 malwoverview.py -n 4 -N ba42665872ea41e3d2edd8978bc38c24\n      python3.8 malwoverview.py -n 5 -N http://ksahosting.net/wp-includes/utf8.php\n      python3.8 malwoverview.py -M 1\n      python3.8 malwoverview.py -M 2 | more\n      python3.8 malwoverview.py -M 3 | more\n      python3.8 malwoverview.py -M 4 -m apt41 | more\n      python3.8 malwoverview.py -M 5 | more\n      python3.8 malwoverview.py -M 6 -m win.locky\n      python3.8 malwoverview.py -M 7 -m efbdb14f38c20c55e32cd98e4b2fdf197709581581d31fac683aabbf361df5f3\n      python3.8 malwoverview.py -M 8 -m win.trickbot\n      python3.8 malwoverview.py -Q 1 -q potrafamin44as@gmail.com\n      python3.8 malwoverview.py -Q 2 -q 188.40.75.132\n      python3.8 malwoverview.py -Q 3 -q aoldaily.com\n      python3.8 malwoverview.py -Q 4 -q fa6fbd1dd2d58885772bd0b37633d5d7\n      python3.8 malwoverview.py -Q 5 -q plugx\n\n# HISTORY\n\nVersion 4.0.2:\n\n      This version:\n\n            * Two small bugs (typos) in the functions for Polywarm downloading and Android package \n              checking have been fixed. \n            * An unnecessary and dead code has been removed.\n            * Several typos in the README.md and in the help have been corrected. \n            * All fixes for this version have been suggested by Christian Clauss (https://github.com/cclauss)\n\nVersion 4.0.1:\n\n      This version:\n\n            * Fixes small typos and the README. \n\n\nVersion 4.0.0:\n\n      This version:\n\n            * Introduces new engines such as Alien Vault, Malpedia and ThreatCrowd. \n            * The -s option has been removed. Use -v 2 option for antivirus report.\n            * The -n option is not longer associated to Malshare. Use -l option with \n              values between 1 and 14.\n            * To specify the hash in Malshare use the L option instead of -m option. \n            * The -i option has been removed. Use the -v 3 option for IAT/EAT. \n            * The -a option has been changed to include the system environments in Hybrid \n              Analysis. However, the -e option has been kept to be used with other options. \n            * The -M option is not longer responsible for downloading samples in Malshare. Use\n              -D option for this task. \n            * The -B option for list URLs from URLHaus has been replaced by -K 2 option. \n            * The -Z and -X options (related to Android) have been replaced for -y 2 and -y 3, \n              respectively. \n            * The -D option (download a malware sample) has been extended to Polyswarm. \n            * The malware sample's DLL list has been introduced. \n            * The -R and -G options from Polyswarm have been completely fixed. Additionally, both\n              ones also include the polyscore in the output. \n            * The -N option is not longer associated to Polyswarm . \n            * The -G 4 option has been introduced and it makes possible to search samples by \n              families and types such as \"*Trickbot*\", \"*Ransomware\", \"*Trojan*\" and so on. \n            * Colors from -I option have been fixed. \n            * The -w option has been removed. \n            * Several issues in the help have been fixed. \n\n\nVersion 3.1.2:\n\n      This version:\n\n            * Introduces the -c option that allows the user to specify a custom API configuration file. \n            * The API configuration file has been changed to .malwapi.conf file.\n            * The project structure has been changed to make easier to install it in different operating \n              systems.\n            * Updates for this version are a contribution from Corey Forman (https://github.com/digitalsleuth).\n\nVersion 3.0.0:\n\n      This version:\n\n            * Includes fixes in the URL reporting (-u option) from Virus Total.  \n            * New players have have been included in the URL reporting (-u option) from Virus Total.\n            * Fixes have been included in payload listing (-K option) from URLhaus.\n            * Yara information has been include in the hash report (-m option) from Malshare.\n            * Fixes have been included in the -l option. \n            * New file types have been included in the -n option: Java, Zip, data, RAR, PDF, Composite (OLE),\n              MS_DOS and UTF-8.\n            * New -W option, which is used to show URLs related to an user provided tags from URLHaus.\n            * New -k option, which is used to show payloads related to a tag from URLHaus\n            * New -I option, which is used to show information related to an IP address from Virus Total.\n            * The -R option was refactored and now it supports searching for file, IPv4, domain or URL on \n              Polyswarm. \n\nVersion 2.5.0:\n\n      This version:\n\n            * Introduces the following options:\n                  * -y to check all third-party APKs from an Android device against \n                       the Hybrid Analysis. \n                  * -Y to send a third-party APKs from an Android device to the Hybrid\n                       Analysis. \n                  * -Z to check all third-party APKs from an Android device against \n                       the Virus Total. \n                  * -X to check all third-party APKs from an Android device against the\n                       Virus Total (it is necessary private API). \n                  * -T to send a third-party APK from an Android device to Virus Total. \n            * Fixes several issues related to color in command outputs.  \n            * Adds the filename identification in the report while sending a sample to Virus Total.\n\nVersion 2.1.9.1:\n\n      This version:\n\n            * Fixes several issues about colors in outputs. \n            * Removes the -L option from Malshare (unfortunately, Malshare doesn't provide an \n              URL list anymore). \n            * Removes the -c option.\n            * Introduces some verification lines in the URLHaus command. \n\nVersion 2.1:\n\n      This version:\n\n            * Fixes formatting issues related to Hybrid Analysis output (-Q 1 -a 1). \n            * Fixes color issues. \n            * Fixes small issues related to Polyswarm. \n\nVersion 2.0.8.1:\n\n      This version:\n\n            * Introduces installation using: pip3.8 install malwoverview (Linux) or \n              python -m pip install malwoverviewwin (Windows). \n            * Fixes small problems related to Polyswarm usage. \n            * Changes the help to verify whether the APIs were inserted into configmalw.py file. \n\nVersion 2.0.1:\n\n      This version:\n\n            * Fixes a problem related to searching by hash on Malshare (-m option). \n            * Fixes a problem related to searching by hash on Polyswarm (-O option). \n\nVersion 2.0.0:\n\n      This version:\n\n            * Introduces a completely ported version of Malwoverview to Python 3.x (it does not work in \n              Python 2.7.x anymore!)\n            * Fixes several bugs related to IAT/EAT listing. \n            * Fixes several bugs related to colors. \n            * Introduces multi-threading to some options. \n            * Introduces several options related to Malshare. \n            * Introduces several options related to URLHaus.\n            * Introduces several options related to Polyswarm engine. \n            * Changes the place of the API key configuration. Now you should edit the configmalw.py file. \n            * Changes the help libraries and functions, so making the Malwoverview's help more complete. \n            * Introduces geolocation feature by using the package named Geocoder written by Dennis Carrierre.\n            * Fixes problems related to Hybrid Analysis engine. \n            * Fixes several mistaked related to a mix between spaces and Tab.\n            * Extends the -d option to include Hybrid Analysis. \n\nVersion 1.7.5:\n\n      This version: \n\n            * It has been fixed a problem related to sample submission to Hybrid Analysis on Windows operating \n              system. Additionally, file name handling has been also fixed. \n\nVersion 1.7.3:\n\n      This version: \n\n            * Malwoverview has been adapted to API version 2.6.0 of Hybrid Analysis.\n            * -A option has been fixed according to new version (2.6.0) of Hybrid Analysis.\n            * -a option has been modified to work together with  -e option.\n            * help information has been modified. \n\nVersion 1.7.2:\n\n      This version: \n\n            * A small fix related to -g option has been included. \n\nVersion 1.7.1:\n\n      This version: \n\n            * Relevant fix of a problem related to options -A and -H options.\n            * Includes a new Hybrid Analysis environment to the -e option (Windows 7 32-bits with HWP support).\n            * Updates the Malwoverview to support Hybrid Analysis API version 2.5.0.\n\nVersion 1.7.0:\n\n      This version: \n\n            * Includes -A option for submitting a sample to Hybrid Analysis.\n            * Includes -g option for checking the status a submission of a sample to Hybrid Analysis.\n            * Includes -e option for specifying the testing environment on the Hybrid Analysis.\n            * Includes -r option for getting a complete domain report from Virus Total.\n            * Modifies the -H options for working together the -e option.\n            * Modifies several functions of the tool to prepare it for version 1.8.0\n\nVersion 1.6.3:\n\n      This version: \n\n            * Includes creation of new functions aiming 1.7.0 version.\n            * Includes new exception handling blocks.\n\nVersion 1.6.2:\n\n      This version: \n\n            * Includes small fixes.\n            * For the Hybrid Analysis API version 2.40 is not longer necessary to include the API Secret.  \n\nVersion 1.6.1:\n\n      This version: \n\n            * Includes small format fixes.\n\nVersion 1.6.0:\n\n      This version: \n\n            * It is using the Hybrid Analysis API version 2.4.0.\n            * Includes certificate information in the Hybrid Analysis report. \n            * Includes MITRE information in the Hybrid Analysis report. \n            * Includes an option to download samples from Hybrid Analysis. \n\nVersion 1.5.1:\n\n      This version: \n\n            * Small change to fix format issue in -d option. \n\nVersion 1.5.0:\n\n      This version: \n\n            * Includes the -u option to check URLs against Virus Total and associated engines. \n            * Includes the -H option to find existing reports on Virus Total and Hybrid Analysis through the \n              hash.\n            * Includes the -V option to submit a file to Virus Total. Additionally, the report is shown after \n              few minutes.\n            * Includes two small fixes. \n\nVersion 1.4.5.2:\n\n      This version:\n\n            * Includes two small fixes.\n\nVersion 1.4.5.1:\n\n      This version:\n\n            * Includes one small fix. \n\nVersion 1.4.5:\n\n      This version:\n\n            * Adds the -w option to use malwoverview in Windows systems.\n            * Improves and fixes colors when using -b option with black window.  \n\nVersion 1.4: \n\n      This version:\n\n            * Adds the -a option for getting the Hybrid Analysis summary report.\n            * Adds the -i option for listing imported and exported functions. Therefore, imported/exported\n              function report was decoupled for a separated option.  \n\nVersion 1.3: \n\n      This version:\n\n            * Adds the -p option for public Virus Total API.\n\nVersion 1.2: \n\n      This version includes:\n\n            * evaluates a single file (any filetype)\n            * shows PE sessions.\n            * shows imported functions.\n            * shows exported function.\n            * extracts overlay.\n            * shows AV report from the main players. (any filetype)\n\nVersion 1.1: \n\n      This version:\n\n            * Adds the VT checking feature.\n\n\nVersion 1.0:\n\n      Malwoverview is a tool to perform a first triage of malware samples in a directory and group them \n      according to their import functions (imphash) using colors. This version:\n\n            * Shows the imphash information classified by color. \n            * Checks whether malware samples are packed.  \n            * Checks whether malware samples have overlay. \n            * Shows the entropy of the malware samples. \n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexandreborges/malwoverview",
    "keywords": "",
    "license": "GNU GPL v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "malwoverview",
    "package_url": "https://pypi.org/project/malwoverview/",
    "platform": "",
    "project_url": "https://pypi.org/project/malwoverview/",
    "project_urls": {
      "Homepage": "https://github.com/alexandreborges/malwoverview"
    },
    "release_url": "https://pypi.org/project/malwoverview/4.0.2/",
    "requires_dist": [
      "pefile",
      "colorama",
      "python-magic",
      "simplejson",
      "requests",
      "validators",
      "geocoder",
      "polyswarm-api",
      "pathlib",
      "configparser",
      "python-magic-bin ; platform_system == \"Windows\""
    ],
    "requires_python": "",
    "summary": "Malwoverview is a first response tool for profiling malware samples, URLs, submitting and downloading malware samples.",
    "version": "4.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15645916,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35fa3f5d659ca52374c8400161bfeba4bfe2d445f059b28536efb84d3eba4ce7",
        "md5": "890070d779abb9d4714b5b61ae93fa47",
        "sha256": "1ae258edac00e5b29a10215e2b233fe26eaf14a6aec608293d6c5da895d9a9e6"
      },
      "downloads": -1,
      "filename": "malwoverview-4.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "890070d779abb9d4714b5b61ae93fa47",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 93580,
      "upload_time": "2020-08-12T00:03:05",
      "upload_time_iso_8601": "2020-08-12T00:03:05.087367Z",
      "url": "https://files.pythonhosted.org/packages/35/fa/3f5d659ca52374c8400161bfeba4bfe2d445f059b28536efb84d3eba4ce7/malwoverview-4.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce3e8f592bdb53475f23f7b66b7f67d06c2f39085ec12abd93a732ba4d149a36",
        "md5": "8e9bf258e3c755d4c1a5c5b9050b6f34",
        "sha256": "bea0b00a5033c017d597a0f65b6c0c35c6e1b1e051ad7fbe13e4326841b76ba0"
      },
      "downloads": -1,
      "filename": "malwoverview-4.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8e9bf258e3c755d4c1a5c5b9050b6f34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 69444,
      "upload_time": "2020-08-12T00:03:07",
      "upload_time_iso_8601": "2020-08-12T00:03:07.249419Z",
      "url": "https://files.pythonhosted.org/packages/ce/3e/8f592bdb53475f23f7b66b7f67d06c2f39085ec12abd93a732ba4d149a36/malwoverview-4.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}