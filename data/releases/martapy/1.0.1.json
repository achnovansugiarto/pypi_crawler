{
  "info": {
    "author": "Edward Wells",
    "author_email": "git@edward.sh",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=======\nMARTApy\n=======\n\nA Python-based library for accessing the MARTA API.\n\nMore: http://www.itsmarta.com/app-developer-resources.aspx\n\n============\nInstallation\n============\nTo install via *pip*, just:\n\n.. code-block:: bash\n\n    $ pip install martapy\n\nOr, locally from the same directory as ``setup.py``:\n\n.. code-block:: bash\n\n    $ python setup.py install\n\n===========\nExample use\n===========\n\nTo get a list of train arrivals:\n\n.. code-block:: python\n\n    from martapy.rail import RailClient\n\n    rail_client = RailClient(api_key=\"your_api_key\")\n    arrivals = rail_client.arrivals()\n\nThis returns an instance of ``martapy.rail.Arrivals(list)`` which\nhas a few handy methods to filter results further.\n\nFor example, to print the destination and waiting time for upcoming\narrivals at *Peachtree Center Station*:\n\n.. code-block:: python\n\n    from martapy.rail import RailClient\n\n    rail_client = RailClient(api_key=\"your_api_key\")\n    peachtree_station = rail_client.arrivals().by_station('peachtree')\n\n    for arrival in peachtree_station:\n        print(\"To: {}, When: {}\".format(arrival.destination, arrival.waiting_time))\n\nWith output that would look something like::\n    To: Airport, When: Arriving\n    To: Lindbergh, When: 16 min\n    To: Doraville, When: 19 min\n\n=======\nFilters\n=======\n\nTo narrow results, ``martapy.rail.Arrivals(list)`` has\na number of properties/methods:\n\n-  Arrivals by **line**:\n-  ``red_line``\n-  ``blue_line``\n-  ``green_line``\n-  ``gold_line``\n-  Arrivals by **direction**:\n-  ``northbound``\n-  ``eastbound``\n-  ``westbound``\n-  ``southbound``\n-  Arrivals by **waiting time**:\n-  ``boarding``\n-  ``arriving``\n-  ``arrived``\n-  ``Arrivals.by_station('station name')`` returns all arrivals for a\n   specific station\n-  ``Arrivals.trains`` Returns each train and its associated arrivals:\n   (as an *OrderedDict* with train IDs as keys, and that train's list of\n   arrivals as its value)\n-  ``Arrivals.stations`` returns each station and its associated\n   arrivals (as an\n   *OrderedDict* with station names as keys, list of arrivals as its\n   value)\n\nThese can be chained as well for more specific results. For example, to\nget all arrivals for the red line which are heading southbound:\n\n.. code-block:: python\n\n    from martapy.rail import RailClient\n\n    rail_client = RailClient(api_key=\"your_api_key\")\n    arrivals = rail_client.arrivals().red_line.southbound\n\n================\nOther properties\n================\nEach ``Arrivals`` instance returned is just a list of\n``martapy.rail.Arrival`` objects, with properties similar to the filters\nabove (*station, direction, event\\_time, line...*). To get the original\nJSON string back, use ``Arrival.json``.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arcward/fbparser",
    "keywords": "MARTA API rail train Atlanta Georgia GA ATL itsmarta",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "martapy",
    "package_url": "https://pypi.org/project/martapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/martapy/",
    "project_urls": {
      "Homepage": "https://github.com/arcward/fbparser"
    },
    "release_url": "https://pypi.org/project/martapy/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client library for the MARTA API",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2812489,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c90aee55f43e82cbe5502d1ff98fb3292da147945b028519ba8507d8a7298e6",
        "md5": "9e868ae0b38880534abc87f9a89d8c66",
        "sha256": "4c3ce093c47d5b2f5adfe02ca439880696ddac0a1c09b5851f28cca633765979"
      },
      "downloads": -1,
      "filename": "martapy-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e868ae0b38880534abc87f9a89d8c66",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7747,
      "upload_time": "2017-04-10T00:56:31",
      "upload_time_iso_8601": "2017-04-10T00:56:31.139842Z",
      "url": "https://files.pythonhosted.org/packages/5c/90/aee55f43e82cbe5502d1ff98fb3292da147945b028519ba8507d8a7298e6/martapy-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f925eaa6ae46da1c1bb80c9f4d2fa10a6c3aac175bcf38859d4e433528ee9fa",
        "md5": "a2f27d29990c4b3037c7967be4a11d3b",
        "sha256": "1997dfec2be8e8965c9f8f3445449e5d269022d7717dbd826eeb314c1f109198"
      },
      "downloads": -1,
      "filename": "martapy-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a2f27d29990c4b3037c7967be4a11d3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5794,
      "upload_time": "2017-04-10T00:46:21",
      "upload_time_iso_8601": "2017-04-10T00:46:21.389924Z",
      "url": "https://files.pythonhosted.org/packages/2f/92/5eaa6ae46da1c1bb80c9f4d2fa10a6c3aac175bcf38859d4e433528ee9fa/martapy-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}