{
  "info": {
    "author": "evgeny.zuev",
    "author_email": "zueves@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Django rest captcha\n\nLightweight version of `django-simple-captcha` for work with `django-rest-framework`.\n\n\n## Features\n\n- Speed: use `cache` instead of database\n- Safety: union methods for generate key and image. (You can't generate many images for one key)\n- Easy: only one rest api (for generate, refresh image).\n\n\n## Usage\nAdd `RestCaptchaSerializer` to your protected request validator:\n```\nfrom dr_captcha serializer import RestCaptchaSerializer\nclass HumanOnlyDataSerializer(RestCaptchaSerializer):\n    pass\n```\nThis code add to your serializer two required fields (captcha_key, captcha_value)\n\n\nFor provide this fields client(js code) should generate key:\n```\n> curl -X POST http:localhost:8000/api/captcha/ | python -m json.tool\n{\n    'image_type': 'image/png',\n    'image_decode': 'base64',\n    'captcha_key': 'de67e7f3-72d9-42d8-9677-ea381610363d',\n    'captcha_value': '... image encoded in base64'\n}\n```\n`captcha_value` - is base64 encoded PNG image, client should decode and show this image to human for validation and send letters from captcha to protected api.\nIf human have mistake - client should re generate your image.\n\n**Note:** See also [trottling](https://www.django-rest-framework.org/api-guide/throttling/) for protect public api\n\n\n## Install\n```\n> pip install django-rest-captcha\n```\n\n### Add to your settings.py\nAdd to installed apps:\n```\nINSTALLED_APPS = (\n    ...\n    'dr_captcha',\n)\n```\n\nSet dr_captcha settings (if you want), see defaults:\n```\ndr_captcha = {\n    'CAPTCHA_CACHE': 'default',\n    'CAPTCHA_TIMEOUT': 300,  # 5 minutes\n    'CAPTCHA_LENGTH': 4,\n    'CAPTCHA_FONT_SIZE': 22,\n    'CAPTCHA_IMAGE_SIZE': (90, 40),\n    'CAPTCHA_LETTER_ROTATION': (-35, 35),\n    'CAPTCHA_FOREGROUND_COLOR': '#001100',\n    'CAPTCHA_BACKGROUND_COLOR': '#ffffff',\n    'CAPTCHA_FONT_PATH': FONT_PATH,\n    'CAPTCHA_CACHE_KEY': 'dr_captcha_{key}.{version}',\n    'FILTER_FUNCTION': 'dr_captcha.captcha.filter_default',\n    'NOISE_FUNCTION': 'dr_captcha.captcha.noise_default'\n}\n```\n\nWe recommend using redis or local memory as cache with set parameter, with bigger value of MAX_ENTRIES:\n```\nCACHES={\n    'default': {\n        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n        'LOCATION': 'rest-captcha',\n        'MAX_ENTRIES': 10000,\n    }\n}\n```\n\n### Add hooks to your app router (urls.py):\n```\nurlpatterns = [\n    ...\n    url(r'api/captcha/', include('dr_captcha.urls')),\n]\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dr-captcha",
    "package_url": "https://pypi.org/project/dr-captcha/",
    "platform": null,
    "project_url": "https://pypi.org/project/dr-captcha/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dr-captcha/1.0.0/",
    "requires_dist": [
      "djangorestframework (>=3.5,<4.0)",
      "django",
      "Pillow (>=4.3.0)"
    ],
    "requires_python": "",
    "summary": "fork from django-rest-captcha for work with django-rest-framework and support for new django versions",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17262839,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a295dd47e5d7be73e107d974691bf390bad2e32cb684c4bce686099921fb725e",
        "md5": "11a1e332213848b111ad5aa8be0ded97",
        "sha256": "ac1a1fdffc550b7eb4e53a5874007afe8048fb9faad4cb45e3a2e7f76f9e03ce"
      },
      "downloads": -1,
      "filename": "dr_captcha-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11a1e332213848b111ad5aa8be0ded97",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 54574,
      "upload_time": "2023-03-12T19:30:26",
      "upload_time_iso_8601": "2023-03-12T19:30:26.930607Z",
      "url": "https://files.pythonhosted.org/packages/a2/95/dd47e5d7be73e107d974691bf390bad2e32cb684c4bce686099921fb725e/dr_captcha-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3e58c9bd76d98681836121c2f63ec7371b8b81f43ed28883cfb5df91f66b0e1",
        "md5": "6b224bb48d024a4a5b9cf6c594af06be",
        "sha256": "8b73a6686d3eca83ed4b1fcee9f34d4c8fd7cc3c91f216dee9bce2391ee6a121"
      },
      "downloads": -1,
      "filename": "dr_captcha-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6b224bb48d024a4a5b9cf6c594af06be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51961,
      "upload_time": "2023-03-12T19:30:29",
      "upload_time_iso_8601": "2023-03-12T19:30:29.972234Z",
      "url": "https://files.pythonhosted.org/packages/b3/e5/8c9bd76d98681836121c2f63ec7371b8b81f43ed28883cfb5df91f66b0e1/dr_captcha-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}