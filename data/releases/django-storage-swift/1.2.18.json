{
  "info": {
    "author": "Dennis Vermeulen",
    "author_email": "blacktorn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/django-storage-swift.svg\n    :target: https://pypi.python.org/pypi/django-storage-swift\n\n.. image:: https://travis-ci.org/dennisv/django-storage-swift.svg?branch=master\n    :target: https://travis-ci.org/dennisv/django-storage-swift\n\n.. image:: https://codecov.io/gh/dennisv/django-storage-swift/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/dennisv/django-storage-swift\n\ndjango-storage-swift: a storage layer for OpenStack Swift\n=========================================================\n\ndjango-storage-swift allows Django applications to use OpenStack Swift\nas a file storage layer.\n\nFeatures\n--------\n\n-  Reads/writes files into/out of Swift.\n-  Automatically derives the correct URL to allow files to be accessed\n   through a web browser based on information returned from the\n   authorisation server.\n\n   -  Allows you to override the host, port and path as necessary.\n   -  Supports the generation of temporary URLs to restrict access to\n      files.\n\nUsage\n-----\n\nYou can install django-storage-swift through pip. To store your media\nfiles on swift, add the following line to your settings.py or\nlocal\\_settings.py:\n\n.. code:: python\n\n    DEFAULT_FILE_STORAGE = 'swift.storage.SwiftStorage'\n\nTo store your static files on swift, add the following line:\n\n.. code:: python\n\n    STATICFILES_STORAGE = 'swift.storage.StaticSwiftStorage'\n\nThis will use another container.\n\nConfiguring\n-----------\n\ndjango-storage-swift recognises the following options.\n\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| Option                                       | Default        | Description                                                                                                                                        |\n+==============================================+================+====================================================================================================================================================+\n| ``SWIFT_AUTH_URL``                           | *Required*     | The URL for the auth server, e.g. ``http://127.0.0.1:5000/v2.0``                                                                                   |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_USERNAME``                           | *Required*     | The username to use to authenticate.                                                                                                               |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_KEY``/``SWIFT_PASSWORD``             | *Required*     | The key (password) to use to authenticate.                                                                                                         |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTH_VERSION``                       | None           | The version of the authentication protocol to use. If no auth version is defined, a version will be guessed based on auth parameters.              |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_TENANT_NAME``/``SWIFT_PROJECT_NAME`` | None           | (v2 and v3 auth) The tenant/project name to use when authenticating.                                                                               |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_TENANT_ID``/``SWIFT_PROJECT_ID``     | None           | (v2 and v3 auth) The tenant/project id to use when authenticating.                                                                                 |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_USER_DOMAIN_NAME``                   | None           | (v3 auth only) The domain name we authenticate to                                                                                                  |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_USER_DOMAIN_ID``                     | None           | (v3 auth only) The domain id we authenticate to                                                                                                    |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_PROJECT_DOMAIN_NAME``                | None           | (v3 auth only) The domain name our project is located in                                                                                           |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_PROJECT_DOMAIN_ID``                  | None           | (v3 auth only) The domain id our project is located in                                                                                             |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_REGION_NAME``                        | None           | OpenStack region if needed. Check with your provider.                                                                                              |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_CONTAINER_NAME``                     | None           | The container in which to store the files. (``DEFAULT_FILE_STORAGE``)                                                                              |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_STATIC_CONTAINER_NAME``              | None           | Alternate container for storing staticfiles. (``STATICFILES_STORAGE``)                                                                             |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTO_CREATE_CONTAINER``              | False          | Should the container be created if it does not exist?                                                                                              |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTO_CREATE_CONTAINER_PUBLIC``       | False          | Set the auto created container as public on creation                                                                                               |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTO_CREATE_CONTAINER_ALLOW_ORIGIN`` | None           | Set the container's X-Container-Meta-Access-Control-Allow-Origin value, to support CORS requests.                                                  |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTO_BASE_URL``                      | True           | Query the authentication server for the base URL.                                                                                                  |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_BASE_URL``                           | None           | The base URL from which the files can be retrieved, e.g. ``http://127.0.0.1:8080/``.                                                               |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_NAME_PREFIX``                        | None           | Prefix that gets added to all filenames.                                                                                                           |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_USE_TEMP_URLS``                      | False          | Generate temporary URLs for file access (allows files to be accessed without a permissive ACL).                                                    |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_TEMP_URL_KEY``                       | None           | Temporary URL key --- see `the OpenStack documentation <http://docs.openstack.org/trunk/config-reference/content//object-storage-tempurl.html>`__. |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_TEMP_URL_DURATION``                  | ``30*60``      | How long a temporary URL remains valid, in seconds.                                                                                                |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_EXTRA_OPTIONS``                      | ``{}``         | Extra options, eg. { \"endpoint\\_type\": \"adminURL\" }, which will return adminURL instead publicURL.                                                 |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_STATIC_BASE_URL``                    | None           | The base URL from which the static files can be retrieved, e.g. ``http://127.0.0.1:8080/``.                                                        |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_STATIC_NAME_PREFIX``                 | None           | Prefix that gets added to all static filenames.                                                                                                    |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_CONTENT_TYPE_FROM_FD``               | False          | Determine the files mimetypes from the actual content rather than from their filename (default).                                                   |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_FULL_LISTING``                       | True           | Ensures to get whole directory contents (by default swiftclient limits it to 10000 entries)                                                        |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``SWIFT_AUTH_TOKEN_DURATION``                | ``60*60*23``   | How long a token is expected to be valid in seconds.                                                                                               |\n+----------------------------------------------+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\n\n\nSWIFT\\_BASE\\_URL\n~~~~~~~~~~~~~~~~\n\ndjango-swift-storage will automatically query the authentication server\nfor the URL where your files can be accessed, which takes the form\n``http://server:port/v1/AUTH_token/``.\n\nSometimes you want to override the server and port (for example if\nyou're developing using `devstack <http://devstack.org/>`__ inside\nVagrant). This can be accomplished with ``SWIFT_BASE_URL``.\n\nThe provided value is parsed, and:\n\n-  host and port override any automatically derived values\n-  any path component is put before derived path components.\n\nSo if your auth server returns\n``http://10.0.2.2:8080/v1/AUTH_012345abcd/`` and you have\n``SWIFT_BASE_URL=\"http://127.0.0.1:8888/foo\"``, the ``url`` function\nwill a path based on ``http://127.0.0.1:8888/foo/v1/AUTH_012345abcd/``.\n\nTemporary URLs\n~~~~~~~~~~~~~~\n\nTemporary URLs provide a means to grant a user permission to access a\nfile for a limited time only and without making the entire container\npublic.\n\nTemporary URLs work as described in the Swift documentation. (The code\nto generate the signatures is heavily based on their implementation.)\nThey require setup of a key for signing: the process is described in\n`the OpenStack\ndocumentation <http://docs.openstack.org/trunk/config-reference/content//object-storage-tempurl.html>`__.\n\nUse\n---\n\nOnce installed and configured, use of django-storage-swift should be\nautomatic and seamless.\n\nYou can verify that swift is indeed being used by running, inside\n``python manage.py shell``:\n\n.. code:: python\n\n    from django.core.files.storage import default_storage\n    default_storage.http_conn\n\nThe result should be ``<<swiftclient.client.Connection object ...>>``\n\nOpenstack Keystone/Identity v3\n------------------------------\n\nTo authenticate with a swift installation using Keystone AUTH and the Identity v3 API, you must also specify either the domain ID or name that your user and project (tenant) belongs to.\n\n.. code:: python\n\n    SWIFT_AUTH_URL='https://keystoneserver/v3'\n    SWIFT_AUTH_VERSION='3'\n    SWIFT_USERNAME='<<USERNAME>>'\n    SWIFT_KEY='<<PASSWORD>>'\n    SWIFT_TENANT_NAME='<<TENANT_NAME>>'\n    SWIFT_USER_DOMAIN_NAME='<<DOMAIN_NAME>>'\n    SWIFT_PROJECT_DOMAIN_NAME='<<DOMAIN_NAME>>'\n\nTroubleshooting\n---------------\n\n-  **I'm getting permission errors accessing my files**: If you are not\n   using temporary URLs, you may need to make the container publically\n   readable. See `this helpful\n   discussion <http://support.rc.nectar.org.au/forum/viewtopic.php?f=6&t=272>`__.\n   If you are using temporary URLs, verify that your key is set\n   correctly.\n\nQuickstart\n----------\n\n.. code:: python\n\n    # This was executed on a VM running a SAIO, for example with\n    # https://github.com/swiftstack/vagrant-swift-all-in-one\n\n    # Create two world-readable containers\n    swift post -r \".r:*\" django\n    swift post -r \".r:*\" django-static\n\n    # A virtualenv to keep installation separated\n    virtualenv sampleenv\n    source sampleenv/bin/activate\n    pip install django-storage-swift\n    pip install django\n\n    # Create a sample project\n    django-admin startproject sampleproj\n    export DJANGO_SETTINGS_MODULE=sampleproj.settings\n    cd sampleproj/\n\n    # A few required settings, using SAIO defaults\n    cat <<EOF >> sampleproj/settings.py\n    DEFAULT_FILE_STORAGE='swift.storage.SwiftStorage'\n    STATICFILES_STORAGE ='swift.storage.StaticSwiftStorage'\n    SWIFT_AUTH_URL='http://127.0.0.1:8080/auth/v1.0'\n    SWIFT_USERNAME='test:tester'\n    SWIFT_KEY='testing'\n    SWIFT_CONTAINER_NAME='django'\n    SWIFT_STATIC_CONTAINER_NAME='django-static'\n    EOF\n\n    # Create the initial DB data\n    python manage.py migrate\n\n    # This uploads static files to Swift\n    python manage.py collectstatic --noinput\n\n    # Now open http://127.0.0.1:8000/admin/ in your browser\n    # Static files like CSS are served by Swift\n    python manage.py runserver\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dennisv/django-storage-swift",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-storage-swift",
    "package_url": "https://pypi.org/project/django-storage-swift/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-storage-swift/",
    "project_urls": {
      "Homepage": "https://github.com/dennisv/django-storage-swift"
    },
    "release_url": "https://pypi.org/project/django-storage-swift/1.2.18/",
    "requires_dist": [
      "python-swiftclient (>=2.2.0)",
      "python-keystoneclient (>=0.2.3)",
      "six",
      "python-magic (>=0.4.10)"
    ],
    "requires_python": "",
    "summary": "OpenStack Swift storage backend for Django",
    "version": "1.2.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6095551,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ce53e9fd17f5c1cc78251e6c0566f1f4d8159e34217752c967a9aebd539ce3b",
        "md5": "14dc3fa29f41c32dd2950df69edab737",
        "sha256": "c7e830ed26350e03b6a652fe186f632f208d0815aa956a90f38748f0b14cefbc"
      },
      "downloads": -1,
      "filename": "django_storage_swift-1.2.18-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "14dc3fa29f41c32dd2950df69edab737",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13930,
      "upload_time": "2018-02-15T10:03:55",
      "upload_time_iso_8601": "2018-02-15T10:03:55.008575Z",
      "url": "https://files.pythonhosted.org/packages/0c/e5/3e9fd17f5c1cc78251e6c0566f1f4d8159e34217752c967a9aebd539ce3b/django_storage_swift-1.2.18-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff36c730f199b6723187d82ef9cd88d149d3f59ce39b66d42fc936f71cf3d027",
        "md5": "7a12af69b31fd43b8012376fa6e22b83",
        "sha256": "7daf970fb9b0e988075f6c8d235c8ebad3d513097da89cdd586bff2eff8e4dc4"
      },
      "downloads": -1,
      "filename": "django-storage-swift-1.2.18.tar.gz",
      "has_sig": true,
      "md5_digest": "7a12af69b31fd43b8012376fa6e22b83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9729,
      "upload_time": "2018-02-15T10:03:56",
      "upload_time_iso_8601": "2018-02-15T10:03:56.683367Z",
      "url": "https://files.pythonhosted.org/packages/ff/36/c730f199b6723187d82ef9cd88d149d3f59ce39b66d42fc936f71cf3d027/django-storage-swift-1.2.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}