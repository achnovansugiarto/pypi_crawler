{
  "info": {
    "author": "Abram",
    "author_email": "israelvictory87@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Django SOTP 🔐\n\n![CI](https://github.com/israelabraham/django-sotp/actions/workflows/django.yml/badge.svg)\n[![PyPI version](https://badge.fury.io/py/django-sotp.svg)](https://badge.fury.io/py/django-sotp)\n\nGenerate a secured base32 one time password to authenticate your user!\n\n## Abstract 📑\n\nDjango SOTP does just two things, and does them really well.\n\n- One - it is stupidly secured and simple to integrate\n- Two - it clears out OTPs at the elapsed time\n\n## Installation ⏳\n\nInstalling django-sotp is very easy, you'll be using (I'd recommend you use a virtual environment, so you don't break your system) the command pip.\n\nHere's how to go about it:\n\n```bash\npip install django-sotp\n```\n\nNext is, adding the installed packages to your project:\n\n```python\nINSTALLED_APPS = [\n    ...\n    'sotp',\n]\n```\n\nSince `django-sotp` depends on a particular package to clear out the OTPs at the elapsed time. We'd have to include another package to our installed apps.\n\n```python\nINSTALLED_APPS = [\n    ...\n    'sotp',\n    'django_apscheduler', # added package ;-)\n]\n```\n\nNow you've done it, all you need to do is add the time which you want the generated OTPs to expire:\n\n```python\nSOTP_TIME_EXPIRATION = 5 # in minutes\n```\n\nYesss. Next is to make migrations and migrate to your database and you're good to go!\n\n```python\npython manage.py makemigrations && python manage.py migrate\n```\n\nCongratulations! You're all set! Let's jump right into how to start using it.\n\n## How-To Use 📝\n\nYou've got ```django-sotp``` installed and ready to use, here's how to start using it!\n\n- Step 1: Import the library to the file `(.py)` you want to use:\n\n ```python\n from sotp.services import GenerateSOTP\n ```\n\n- Step 2: Instantiate the class:\n\n```python\notp = GenerateSOTP()\n```\n\n- Step 3: Call the `generate_otp` logic (method) directly in the file, and pass the user's email; since generate_otp requires the user email address to generate the otp code.\n\n```python\n# Generates otp code for the user\notp.generate_otp(user_email=user.email) \n```\n\n- Step 4: A base32 secured token and code has been generated, and saved to the secured_otps table. Oh, let's not forget about the scheduler that has been called to remove the user otp and token after the ```SOTP_TIME_EXPIRATION``` has elapsed! 🤝\n\n- Last Step (maybe?): You can call the function anywhere, anytime.\n\nIf you are still finding it difficult to use this package, kindly check the [example app](https://github.com/israelabraham/django-sotp/tree/main/example) I made for reference, or [create an issue](https://github.com/israelabraham/django-sotp/issues) and state the problem you are experiencing!\n\n## Shell Example 🥁\n\nIf you'd like to test out the package on your django shell..\n\n- Step 1: Run the command:\n\n```python\npython manage.py shell\n```\n\n- Step 2: Import the libray directly on the shell:\n\n```python\nfrom sotp.services import GenerateSOTP\n```\n\n- Step 3: Call the generate_otp method, don't forget to add a user email address:\n\n```python\nsecured_otp = otp.generate_otp(user_email=\"test@email.com\") # email should exist :-)\n```\n\n- Step 4: A Token and OTP is generated, and saved to secured_otps database.\n\n```python\n{'totp': '5ZCLA7UQVXFP2B5WL5OZG4QDFDJ4GL65', 'OTP': '957092'}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/israelabraham/django-sopt",
    "keywords": "sotp,otp,totps,one time password,passwords",
    "license": "CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sotp",
    "package_url": "https://pypi.org/project/django-sotp/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-sotp/",
    "project_urls": {
      "Homepage": "https://github.com/israelabraham/django-sopt"
    },
    "release_url": "https://pypi.org/project/django-sotp/1.0.4/",
    "requires_dist": [
      "django (>=2.2)",
      "django-apscheduler",
      "pyotp"
    ],
    "requires_python": ">=3.6",
    "summary": "Generate a secured base32 one time password to authenticate your user! 🔐",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15278223,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccc7172a45c8d1c30bf89dc3c602ec861e5d1591b490c27256e1ab055e241b7f",
        "md5": "9825c570eea3aa26f5c6929f73a74440",
        "sha256": "6f367645b20bd563d4d1e35282e4a4ae1f03b3497da42f6bda92bcf556f90efe"
      },
      "downloads": -1,
      "filename": "django_sotp-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9825c570eea3aa26f5c6929f73a74440",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17542,
      "upload_time": "2022-10-01T23:31:55",
      "upload_time_iso_8601": "2022-10-01T23:31:55.021920Z",
      "url": "https://files.pythonhosted.org/packages/cc/c7/172a45c8d1c30bf89dc3c602ec861e5d1591b490c27256e1ab055e241b7f/django_sotp-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c10699a1fcd51c0b2084006ac1c8be417629482576ef296842f896668943e50d",
        "md5": "70d6e21d0427a899bb605a03acf41123",
        "sha256": "394b6b965150f2e88d21b50b0135050442842b03ae01eec3ee80924f03a2cafa"
      },
      "downloads": -1,
      "filename": "django_sotp-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "70d6e21d0427a899bb605a03acf41123",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13100,
      "upload_time": "2022-10-01T23:31:56",
      "upload_time_iso_8601": "2022-10-01T23:31:56.661716Z",
      "url": "https://files.pythonhosted.org/packages/c1/06/99a1fcd51c0b2084006ac1c8be417629482576ef296842f896668943e50d/django_sotp-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}