{
  "info": {
    "author": "Blas Fernandez",
    "author_email": "blasferna@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-calculation\n\n[![Release](https://github.com/blasferna/django-calculation/actions/workflows/release.yml/badge.svg)](https://github.com/blasferna/django-calculation/actions/workflows/release.yml)\n[![PyPI version](https://img.shields.io/pypi/v/django-calculation.svg?color=success)](https://pypi.python.org/pypi/django-calculation)\n![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-calculation) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-calculation)\n\nMake simple calculations in your django forms using `django-calculation`. This app provide a **[Django Widget](https://docs.djangoproject.com/en/3.2/ref/forms/widgets/)** that derives its value from a expression defined in the widget instance. \n\nThe field is updated when any of the source fields change.\n\n![calculation](https://user-images.githubusercontent.com/8385910/142947517-49a5d6a0-6a6c-41d6-8f14-a140ad44fa1e.gif)\n\n\n\n## Installation\n\n```bash\npip install django-calculation\n```\n\n### Add `calculation` to your INSTALLED_APPS\n\n```python\nINSTALLED_APPS = [\n    ...\n    'calculation',\n]\n````\n\n\n## Usage\n\nImport `calculation` and complete the definition. \n\n### Example\n\nUsing `FormulaInput` widget\n\n```python\nfrom django import forms\n\nimport calculation\n\n\nclass TestForm(forms.Form):\n    quantity = forms.DecimalField()\n    price = forms.DecimalField()\n    amount = forms.DecimalField(\n        widget=calculation.FormulaInput('quantity*price') # <- using single math expression\n    )\n    apply_taxes = forms.BooleanField(initial=True)\n    tax = forms.DecimalField(\n        # using math expression and javascript functions.\n        widget=calculation.FormulaInput('apply_taxes ? parseFloat(amount/11).toFixed(2) : 0.0') \n    )\n\n```\n\n`django-calculation` works with static files and therefore it is necessary to include the media of the form in the template file.\n\n```html\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form }}\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n{{ form.media }}\n```\n\n### Modes\n\nCurrently the app support two modes of calculation `FORMULA` and `SUMMARY`.\n\n***`FORMULA`*** \n\nThe field value derive from a formula expression. In the expression you can refer to the form field using its name.\n\n```python\namount = forms.DecimalField(\n    widget=calculation.FormulaInput('quantity*price')\n)\n```\n\n***`SUMMARY`*** \n\nThe field value derive from a summary definition, it is useful when you need to get the sum of a django formset field.\n\n```python\ntotal = forms.DecimalField(\n    widget=calculation.SummaryInput(\n            function=calculation.SUM,\n            field='amount' \n    )\n```\n\n#### Summary example\n\nSummary definition in `OrderForm`\n\n```python\nclass OrderForm(forms.ModelForm):\n    total = forms.DecimalField(\n        # using SumInput a SummaryInput abstraction\n        widget=calculation.SumInput('subtotal')\n    )\n    class Meta:\n        model = Order\n        fields = ['date', 'customer']\n```\n\n`OrderDetForm` also contain a calculated field `subtotal`.\n```python\nclass OrderDetForm(forms.ModelForm):\n    subtotal = forms.DecimalField(\n        widget=calculation.FormulaInput('quantity*price')\n    )\n    class Meta:\n        model = OrderDet\n        fields = ['product', 'price', 'quantity', 'subtotal']\n\n# formset definition\nOrderDetFormSet = forms.inlineformset_factory(Order, OrderDet, OrderDetForm)\n```\n\n![chrome-capture](https://user-images.githubusercontent.com/8385910/129214716-e3876719-1912-49b0-989f-125e724dfb92.gif)\n\n\n## Roadmap\n\n- Create demo project.\n- Create documentation.\n- <del> Add changelog. </del>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/blasferna/django-calculation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-calculation",
    "package_url": "https://pypi.org/project/django-calculation/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-calculation/",
    "project_urls": {
      "Homepage": "https://github.com/blasferna/django-calculation"
    },
    "release_url": "https://pypi.org/project/django-calculation/1.0.0/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Django app to make simple calculations in your django forms",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14060444,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b00dc55b77288fac344162da7ac15a233d2c01bced0e538f808c1191e7bc91a",
        "md5": "8501efcfec81db7cc2af0b884b29b78b",
        "sha256": "7d6144aae369c49b8e3e7011a491948d906df383ad7dedf5b0d1d0b5ff0cb0fa"
      },
      "downloads": -1,
      "filename": "django_calculation-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8501efcfec81db7cc2af0b884b29b78b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8127,
      "upload_time": "2022-06-07T17:26:24",
      "upload_time_iso_8601": "2022-06-07T17:26:24.561051Z",
      "url": "https://files.pythonhosted.org/packages/6b/00/dc55b77288fac344162da7ac15a233d2c01bced0e538f808c1191e7bc91a/django_calculation-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0036b5b04e13fa7386cbc3ba64af53a5030a22d771fca51c506c5a3e0c260d5",
        "md5": "0d483c23e3bb815f5a3befcd834784ce",
        "sha256": "125136fdb06ca6ed118843f1fdf354ffd4554dfa0d67f684a6c86a8e5c07016d"
      },
      "downloads": -1,
      "filename": "django-calculation-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0d483c23e3bb815f5a3befcd834784ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9154,
      "upload_time": "2022-06-07T17:26:25",
      "upload_time_iso_8601": "2022-06-07T17:26:25.621132Z",
      "url": "https://files.pythonhosted.org/packages/a0/03/6b5b04e13fa7386cbc3ba64af53a5030a22d771fca51c506c5a3e0c260d5/django-calculation-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}