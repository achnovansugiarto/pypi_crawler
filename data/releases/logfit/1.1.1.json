{
  "info": {
    "author": "Albert Wang",
    "author_email": "daemon@log.fit",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: Log Analysis",
      "Topic :: System :: Logging",
      "Topic :: System :: Monitoring"
    ],
    "description": "LogFit Daemon\n=============\n\n|PyPI| |Python Versions|\n\n|Drone|\n\nThe LogFit daemon watches log files and sends data to the LogFit app\nfor analysis.\n\nInstallation\n------------\n\nTODO\n\nUsage\n-----\n\n.. code:: bash\n\n    # Start in foreground mode\n    python3 logfit/client.py [run|foreground]\n\n    # Start in daemon mode\n    python3 logfit/client.py start\n\n    # Stop daemon\n    python3 logfit/client.py stop\n\n    # Restart the daemon\n    python3 logfit/client.py restart\n\n    # Get the daemon status\n    python3 logfit/client.py status\n\n\nConfiguration\n-------------\n\nThe daemon can read from a ``logfit_config.yaml`` config file of the format:\n\n.. code:: yaml\n\n    # Required: Get this from your log.fit account\n    source: \"64a4b9bd88f14511926e0de86f23e2d8\"\n\n    # Optional: The directory the daemon will watch\n    watch_directory: \"/var/log/\"\n\n    # Optional: Minimum log level.  Possible options are\n    # critical, error, warning, info, and debug\n    log_level: \"warning\"\n\n    # Optional: File to write daemon logs to\n    log_file: \"logfit.log\"\n\n    # Optional: limit watching log files to given mime types\n    allowed_mime_types:\n    - text/plain\n    - inode/x-empty\n\n    # Optional: List of file globs to not watch, should be the\n    # full absolute path\n    ignore_paths: []\n\n\nDevelopment\n-----------\n\n.. code:: bash\n\n    python setup.py develop\n    pip install -r requirements-test.txt\n    flake8\n    coverage run -m unittest\n    coverage report -m\n\n\nPublishing\n----------\n\n.. code:: bash\n\n    # Publish to PyPI\n    python setup.py sdist bdist_wheel\n    twine upload dist/*\n\n    # Generate binaries for multiple operating systems\n    pyinstaller logfit/main.py -F -p logfit --hidden-import queue -n logfit_linux_x86_64\n    pyinstaller logfit/main.py -F -p logfit --hidden-import queue -n logfit_macos_x86_64\n    pyinstaller logfit/main.py -F -p logfit --hidden-import queue -n logfit_windows_x86_64\n\n    # Copy binaries into logfit-daemon-binary\n\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/logfit.svg\n   :target: https://pypi.python.org/pypi/logfit/\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/logfit.svg\n   :target: https://github.com/albertyw/logfit-daemon\n.. |Drone| image:: https://drone.albertyw.com/api/badges/albertyw/logfit-daemon/status.svg\n   :target: https://drone.albertyw.com/albertyw/logfit-daemon\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/albertyw/logfit-daemon",
    "keywords": "logfit log.fit logging monitoring alerting",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logfit",
    "package_url": "https://pypi.org/project/logfit/",
    "platform": "",
    "project_url": "https://pypi.org/project/logfit/",
    "project_urls": {
      "Homepage": "https://github.com/albertyw/logfit-daemon"
    },
    "release_url": "https://pypi.org/project/logfit/1.1.1/",
    "requires_dist": [
      "requests",
      "rollbar",
      "python-magic",
      "pyyaml",
      "PyInstaller (==3.2.1) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Watch and upload log files to log.fit",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12159981,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ee4e3889a6bf117645ec40163316fb75aecb94dc4deac7d86362a0827b8480e",
        "md5": "e7e2a48e9042e0d2d172f6e9053119e5",
        "sha256": "39b73f1a1cd2390afb352d8d7a4984ce73d95ef378f54c2c742a27bf60beb50f"
      },
      "downloads": -1,
      "filename": "logfit-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7e2a48e9042e0d2d172f6e9053119e5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8921,
      "upload_time": "2021-11-29T23:01:20",
      "upload_time_iso_8601": "2021-11-29T23:01:20.240503Z",
      "url": "https://files.pythonhosted.org/packages/0e/e4/e3889a6bf117645ec40163316fb75aecb94dc4deac7d86362a0827b8480e/logfit-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "859cdea375ae025eeee37d1ee366f611bc001ff3d33a6b4ab30d8a13d162556c",
        "md5": "8b66bbdf485f7ee924a9f1b8aca53829",
        "sha256": "b64c7b42ef184ed84f254bd4df4541cf0c1c51f718df71f67ad999860373e157"
      },
      "downloads": -1,
      "filename": "logfit-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8b66bbdf485f7ee924a9f1b8aca53829",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8858,
      "upload_time": "2021-11-29T23:01:21",
      "upload_time_iso_8601": "2021-11-29T23:01:21.886131Z",
      "url": "https://files.pythonhosted.org/packages/85/9c/dea375ae025eeee37d1ee366f611bc001ff3d33a6b4ab30d8a13d162556c/logfit-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}