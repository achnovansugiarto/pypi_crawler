{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Yet Another Implementation of OTP for Django\n\n[![Test]][Test Link] [![Deploy]][Deploy Link]  [![Climate Ment]][Climate Ment Link] [![Cov]][CovLink]\n\n[Test]: https://github.com/hiroaki-yamamoto/django-good-otp/actions/workflows/test.yml/badge.svg\n[Test Link]: https://github.com/hiroaki-yamamoto/django-good-otp/actions/workflows/test.yml\n[Deploy]: https://github.com/hiroaki-yamamoto/django-good-otp/actions/workflows/deploy.yml/badge.svg\n[Deploy Link]: https://github.com/hiroaki-yamamoto/django-good-otp/actions/workflows/deploy.yml\n[Cov]: https://api.codeclimate.com/v1/badges/a7fd8fd626e3477e28e9/test_coverage\n[CovLink]: https://codeclimate.com/github/hiroaki-yamamoto/django-good-otp/test_coverage\n[Climate Ment]: https://api.codeclimate.com/v1/badges/a7fd8fd626e3477e28e9/maintainability\n[Climate Ment Link]: https://codeclimate.com/github/hiroaki-yamamoto/django-good-otp/maintainability\n\n## What This?\n\nThis script is \"Yet Another Implementation\" of 2 factor authentication.\n\n## Why I re-invent?\n\nFirst, I tried [Django OTP], but 2 FA code is required though it should be\noptional. Moreover, Admin Panel to edit/fix secret key is not provided.\n\nThen, I tried [django-two-factor-auth], but I found it is the wrapper of\n[Django OTP] that requires 2FA code to the user who doesn't have 2FA enabled.\n\n[Django OTP]: https://bitbucket.org/psagers/django-otp\n[django-two-factor-auth]: https://github.com/Bouke/django-two-factor-auth\n\n## How to use\n\n1. Install this script. There's [pip package] and you can install it by\n   `pip install django_good_otp`.\n2. Create a Django project as usual.\n3. Edit settings.py. You will need to edit INSTALLED_APPS and\n   AUTHENTICATION_BACKENDS. For detail, refer **Edit Settings** section.\n4. Run migration as usual.\n5. Edit `url.py` of your root URL config to enable QR Code.\n   For details, Check out **URL Routing** section.\n6. To enable admin panel, you will need to write very small code.\n   For details, Check out **Enable Admin Panel** section.\n7. To use 2FA on Admin panel login, you will also need to write very simple\n   code. For details, Check out **Enable Admin Panel** section.\n\n[pip package]: https://pypi.python.org/pypi/django_good_otp\n\n## Edit settings\n\nYou will need to edit configuration such settings.py. The variable to edit\nis `INSTALLED_APPS` and `AUTHENTICATION_BACKENDS`.\n\n### INSTALLED_APPS\n\nYou will just need to add `'django_otp.DjangoOTP'`\nafter `'django.contrib.auth'` i.e. it should be like this:\n\n`settings.py`\n```python\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"django_otp.DjangoOTP\"\n]\n```\n\nNote that this depends on the case. i.e. If you have more apps\ninstalled/uninstalled, your `INSTALLED_APPS` list might be longer/shorter than\nthis.\n\n### AUTHENTICATION_BACKENDS\n\nTo use 2 FA, you will need to replace authentication backend with the backend\nthis module provides. i.e. just set `AUTHENTICATION_BACKENDS` in `settings.py`\nto `(\"django_otp.backends.OTPAuthBackend\", )`. i.e. like this:\n\n`settings.py`\n```python\nAUTHENTICATION_BACKENDS = (\"django_otp.backends.OTPAuthBackend\", )\n```\n\n## URL Routing\n\nThis module supports QRCode to transfer Secret Key to your device. To\nuse it, you will need to add `django_otp.urls` with `include` function\nlike this:\n\n`urls.py`\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^qr/', include(\"django_otp.urls\"))\n]\n```\n\n## Enable Admin Panel\n\n### Admin Panel\n\nBy default, Admin Panel of the model that stores secret key is **disabled**.\nTo enable Admin Panel, you will need to call `OTPAdmin.enable()` method like\nthis:\n\n`urls.py`\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\nfrom django_otp.admin import OTPAdmin\n\nOTPAdmin.enable()\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^qr/', include(\"django_otp.urls\"))\n]\n```\n\n### Using 2FA form on adminsite\n\nUnfortunately, login template of administration site doesn't handle custom\nlogin form. Therefore, to use 2FA-ready admin form, you will need to replace\n`admin.site` with `django_otp.admin.AdminSite`. i.e. like this:\n\n`urls.py`\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\n\nfrom django_otp.admin import AdminSite\n\nOTPAdmin.enable()\nadmin.site = AdminSite()\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^qr/', include(\"django_otp.urls\"))\n]\n```\n\n## Other stuff\nFor other stuff that is not documented here, please refer the [source code].\n\n[source code]: https://github.com/hiroaki-yamamoto/django-good-otp\n\n## Contribution\nThe code is on [Github] and you can create issues/PRs. Making issues is\nappreciated, however, **making PRs is more appreciated**.\n\n[Github]: https://github.com/hiroaki-yamamoto/django-good-otp\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hiroaki-yamamoto/django-good-otp",
    "keywords": "python,OTP,Django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-good-otp",
    "package_url": "https://pypi.org/project/django-good-otp/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-good-otp/",
    "project_urls": {
      "Homepage": "https://github.com/hiroaki-yamamoto/django-good-otp"
    },
    "release_url": "https://pypi.org/project/django-good-otp/2.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Yet Another Implementation of One-Time-Password-Authentication for Django",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12683700,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7542f8b8610b4a22b02dc74e541de13a85ebe74b988c3b098d2cfd8ef396dc9f",
        "md5": "50e5670bd2aa6f8c95fb1d1e6150241c",
        "sha256": "a020b7b9ddcefb56e9d857c1d902a9af9fa02697d045c7107d8d397b4b7ec1ca"
      },
      "downloads": -1,
      "filename": "django_good_otp-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "50e5670bd2aa6f8c95fb1d1e6150241c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11715,
      "upload_time": "2022-01-25T04:18:29",
      "upload_time_iso_8601": "2022-01-25T04:18:29.391020Z",
      "url": "https://files.pythonhosted.org/packages/75/42/f8b8610b4a22b02dc74e541de13a85ebe74b988c3b098d2cfd8ef396dc9f/django_good_otp-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}