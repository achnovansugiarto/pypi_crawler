{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Yet Another Implementation of OTP for Django\n============================================\n\n|CI| |CovSt| |GPA|\n\nWhat This?\n----------\n\nThis script is \"Yet Another Implementation\" of 2 factor authentication.\n\nWhy I re-invent?\n----------------\n\nFirst, I tried `Django\nOTP <https://bitbucket.org/psagers/django-otp>`__, but 2 FA code is\nrequired though it should be optional. Moreover, Admin Panel to edit/fix\nsecret key is not provided.\n\nThen, I tried\n`django-two-factor-auth <https://github.com/Bouke/django-two-factor-auth>`__,\nbut I found it is the wrapper of `Django\nOTP <https://bitbucket.org/psagers/django-otp>`__ that requires 2FA code\nto the user who doesn't have 2FA enabled.\n\nHow to use\n----------\n\n1. Install this script. There's `pip\n   package <https://pypi.python.org/pypi/django_good_otp>`__ and you can\n   install it by ``pip install django_good_otp``.\n2. Create a Django project as usual.\n3. Edit settings.py. You will need to edit INSTALLED\\_APPS and\n   AUTHENTICATION\\_BACKENDS. For detail, refer **Edit Settings**\n   section.\n4. Run migration as usual.\n5. Edit ``url.py`` of your root URL config to enable QR Code. For\n   details, Check out **URL Routing** section.\n6. To enable admin panel, you will need to write very small code. For\n   details, Check out **Enable Admin Panel** section.\n7. To use 2FA on Admin panel login, you will also need to write very\n   simple code. For details, Check out **Enable Admin Panel** section.\n\nEdit settings\n-------------\n\nYou will need to edit configuration such settings.py. The variable to\nedit is ``INSTALLED_APPS`` and ``AUTHENTICATION_BACKENDS``.\n\nINSTALLED\\_APPS\n~~~~~~~~~~~~~~~\n\nYou will just need to add ``'django_otp.DjangoOTP'`` after\n``'django.contrib.auth'`` i.e. it should be like this:\n\n``settings.py``\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        \"django_otp.DjangoOTP\"\n    ]\n\nNote that this depends on the case. i.e. If you have more apps\ninstalled/uninstalled, your ``INSTALLED_APPS`` list might be\nlonger/shorter than this.\n\nAUTHENTICATION\\_BACKENDS\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo use 2 FA, you will need to replace authentication backend with the\nbackend this module provides. i.e. just set ``AUTHENTICATION_BACKENDS``\nin ``settings.py`` to ``(\"django_otp.backends.OTPAuthBackend\", )``. i.e.\nlike this:\n\n``settings.py``\n\n.. code:: python\n\n    AUTHENTICATION_BACKENDS = (\"django_otp.backends.OTPAuthBackend\", )\n\nURL Routing\n-----------\n\nThis module supports QRCode to transfer Secret Key to your device. To\nuse it, you will need to add ``django_otp.urls`` with ``include``\nfunction like this:\n\n``urls.py``\n\n.. code:: python\n\n    from django.conf.urls import url, include\n    from django.contrib import admin\n\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n        url(r'^qr/', include(\"django_otp.urls\"))\n    ]\n\nEnable Admin Panel\n------------------\n\nAdmin Panel\n~~~~~~~~~~~\n\nBy default, Admin Panel of the model that stores secret key is\n**disabled**. To enable Admin Panel, you will need to call\n``OTPAdmin.enable()`` method like this:\n\n``urls.py``\n\n.. code:: python\n\n    from django.conf.urls import url, include\n    from django.contrib import admin\n    from django_otp.admin import OTPAdmin\n\n    OTPAdmin.enable()\n\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n        url(r'^qr/', include(\"django_otp.urls\"))\n    ]\n\nUsing 2FA form on adminsite\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUnfortunately, login template of administration site doesn't handle\ncustom login form. Therefore, to use 2FA-ready admin form, you will need\nto replace ``admin.site`` with ``django_otp.admin.AdminSite``. i.e. like\nthis:\n\n``urls.py``\n\n.. code:: python\n\n    from django.conf.urls import url, include\n    from django.contrib import admin\n\n    from django_otp.admin import AdminSite\n\n    OTPAdmin.enable()\n\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n        url(r'^qr/', include(\"django_otp.urls\"))\n    ]\n\nOther stuff\n-----------\n\nFor other stuff that is not documented here, please refer the `source\ncode <https://github.com/hiroaki-yamamoto/django-good-otp>`__.\n\nContribution\n------------\n\nThe code is on\n`Github <https://github.com/hiroaki-yamamoto/django-good-otp>`__ and you\ncan create issues/PRs. Making issues is appreciated, however, **making\nPRs is more appreciated**.\n\n.. |CI| image:: https://travis-ci.org/hiroaki-yamamoto/django-good-otp.svg?branch=master\n   :target: https://travis-ci.org/hiroaki-yamamoto/django-good-otp\n.. |CovSt| image:: https://coveralls.io/repos/github/hiroaki-yamamoto/django-good-otp/badge.svg?branch=master\n   :target: https://coveralls.io/github/hiroaki-yamamoto/django-good-otp?branch=master\n.. |GPA| image:: https://codeclimate.com/github/hiroaki-yamamoto/django-good-otp/badges/gpa.svg\n   :target: https://codeclimate.com/github/hiroaki-yamamoto/django-good-otp",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hiroaki-yamamoto/django-good-otp",
    "keywords": "python,OTP,Django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-good-otp",
    "package_url": "https://pypi.org/project/django-good-otp/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-good-otp/",
    "project_urls": {
      "Homepage": "https://github.com/hiroaki-yamamoto/django-good-otp"
    },
    "release_url": "https://pypi.org/project/django-good-otp/1.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Yet Another Implementation of One-Time-Password-Authentication for Django",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12683700,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b84a97b4436989f7416eb488672745d20977bb9b7e3e6bd84c996717c8e3da98",
        "md5": "72d3fdc1adb1a3ed0b8bc120bb727885",
        "sha256": "f5728058c85aa4437302ef681988dc29500eae68ea24364a409149fa57658f84"
      },
      "downloads": -1,
      "filename": "django_good_otp-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "72d3fdc1adb1a3ed0b8bc120bb727885",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13093,
      "upload_time": "2018-10-07T09:54:10",
      "upload_time_iso_8601": "2018-10-07T09:54:10.564405Z",
      "url": "https://files.pythonhosted.org/packages/b8/4a/97b4436989f7416eb488672745d20977bb9b7e3e6bd84c996717c8e3da98/django_good_otp-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}