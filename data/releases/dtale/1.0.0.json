{
  "info": {
    "author": "MAN Alpha Technology",
    "author_email": "ManAlphaTech@man.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "|D-Tale|\n========\n\n|CircleCI| |PyPI| |ReadTheDocs| |Coverage Status|\n\nGetting Started\n---------------\n\nSetup/Activate your environment and install the egg\n\n.. code:: bash\n\n    # create a vritualenv (if you haven't already created one) \n    $ python3 -m venv ~/pyenvs/dtale\n    $ source ~/pyenvs/dtale/bin/activate\n    # install dtale egg (important to use the \"-U\" every time you install so it will grab the latest version)\n    $ pip install --upgrade dtale\n\nNow you will have to ability to use D-Tale from the command-line or\nwithin a python-enabled terminal\n\nCommand-line\n~~~~~~~~~~~~\n\nLoading data from **arctic**\n\n.. code:: bash\n\n    dtale --arctic-host mongodb://localhost:27027 --arctic-library jdoe.my_lib --arctic-node my_node --arctic-start 20130101 --arctic-end 20161231\n\nLoading data from **CSV**\n\n.. code:: bash\n\n    dtale --csv-path /home/jdoe/my_csv.csv --csv-parse_dates date\n\nPython Terminal\n~~~~~~~~~~~~~~~\n\nThis comes courtesy of PyCharm |Python Terminal| Feel free to invoke\n``python`` or ``ipython`` directly and use the commands in the\nscreenshot above and it should work\n\nUI\n--\n\nOnce you have kicked off your D-Tale session please copy & paste the\nlink on the last line of output in your browser |Chrome #1|\n\nThe information in the upper right-hand corner is similar to saslook\n|Info| - lower-left => row count - upper-right => column count -\nclicking the triangle displays the menu of standard functions (click\noutside menu to close it) |Menu|\n\nSelecting/Deselecting Columns - to select a column, simply click on the\ncolumn header (to deselect, click the column header again) - You'll\nnotice that the columns you've selected will display in the top of your\nbrowser |Column Select|\n\nMenu functions w/ no columns selected\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Info_menu.png\n   :alt: Menu\n\n   Menu\n\n-  **Filter**: apply a simple pandas ``query`` to your data (link to\n   pandas documentation included in popup)\n\n+------------------+--------------------+\n| Editing          | Result             |\n+==================+====================+\n| |Filter Apply|   | |Filter Applied|   |\n+------------------+--------------------+\n\n-  **Coverage**: check for coverage gaps on column(s) by way of other\n   column(s) as group(s)\n-  Select column(s) in \"Group(s)\" & \"Col(s)\"\n\n   -  date-type columns you can also specify a frequency of D, W, M, Q,\n      Y\n   -  Select multiple values in \"Cols(s)\" and/or \"Groups(s)\" by holdings\n      the SHIFT key as you click\n\n-  Click \"Load\"\n-  The output will be the counts of non-nan records in \"Col(s)\" grouped\n   by your selections in \"Group(s)\"\n\n+--------------------+----------------------------+\n| Daily              | Daily Regional             |\n+====================+============================+\n| |Coverage Daily|   | |Coverage Daily Regions|   |\n+--------------------+----------------------------+\n\n-  **Correlations**: shows a pearson correlation matrix of all numeric\n   columns against all other numeric columns\n-  By deafult, it will show a grid of pearson correlations\n-  If you have a date-type column, you can click an individual cell and\n   see a timeseries of pearson correlations for that column combination\n\n   -  Currently if you have multiple date-type columns you will have the\n      ability to toggle between them by way of a drop-down\n\n-  Furthermore, you can click on individual points in the timeseries to\n   view the scatter plot of the points going into that correlation\n\n+------------------+----------------+-------------+\n| Matrix           | Timeseries     | Scatter     |\n+==================+================+=============+\n| |Correlations|   | |Timeseries|   | |Scatter|   |\n+------------------+----------------+-------------+\n\n-  Resize: mostly a fail-safe in the event that your columns are no\n   longer lining up. Click this and should fix that\n-  Shutdown: pretty self-explanatory, kills your D-Tale session (there\n   is also an auto-kill process that will kill your D-Tale after an hour\n   of inactivity)\n\nMenu functions w/ one column is selected\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Menu_one_col.png\n   :alt: Menu Single-Column\n\n   Menu Single-Column\n\n-  **Move To Front**: moves your column to the front of the \"unlocked\"\n   columns\n-  **Lock**: adds your column to \"locked\" columns\n-  \"locked\" means that if you scroll horizontally these columns will\n   stay pinned to the right-hand side\n-  this is handy when you want to keep track of which date or\n   security\\_id you're looking at\n-  by default, any index columns on the data passed to D-Tale will be\n   locked\n-  **Unlock**: removed column from \"locked\" columns\n-  **Sorting** (Ascending/Descending/Clear): applies/removes sorting to\n   the column selected\n-  Important: as you add sorts they sort added will be added to the end\n   of the multi-sort. For example:\n\n+----------------+--------------------+\n| Action         | Sort               |\n+================+====================+\n| select \"a\"     |                    |\n+----------------+--------------------+\n| sort asc       | a (asc)            |\n+----------------+--------------------+\n| deselect \"a\"   | a (asc)            |\n+----------------+--------------------+\n| select \"b\"     | a (asc)            |\n+----------------+--------------------+\n| sort desc      | a (asc), b(desc)   |\n+----------------+--------------------+\n| select \"a\"     | a (asc), b(desc)   |\n+----------------+--------------------+\n| clear sort     | b(desc)            |\n+----------------+--------------------+\n| sort desc      | b(desc), a(desc)   |\n+----------------+--------------------+\n| select \"b\"     | b(desc), a(desc)   |\n+----------------+--------------------+\n| clear sort     |                    |\n+----------------+--------------------+\n| sort asc       | a (asc), b(asc)    |\n+----------------+--------------------+\n\n-  **Formats**: apply simple formats to numeric values in your grid\n\n\\|Editing\\|Result\\| \\|--------\\|:------:\\| \\|\\ |Formatting\nApply|\\ \\|\\ |Formatting Applied|\\ \\| - Here's a grid of all the formats\navailable with -123456.789 as input:\n\n+-----------------+------------------+\n| Format          | Output           |\n+=================+==================+\n| Precision (6)   | -123456.789000   |\n+-----------------+------------------+\n| Thousands Sep   | -123,456.789     |\n+-----------------+------------------+\n| Abbreviate      | -123k            |\n+-----------------+------------------+\n| Exponent        | -1e+5            |\n+-----------------+------------------+\n| BPS             | -1234567890BPS   |\n+-----------------+------------------+\n| Red Negatives   | -123457          |\n+-----------------+------------------+\n\n-  **Histogram**: display histograms in bins of 5, 10, 20 or 50 for any\n   numeric column |Histogram|\n\nFor Developers\n--------------\n\nGetting Started\n~~~~~~~~~~~~~~~\n\nClone the code (git clone ssh://git@github.com:manahl/dtale.git), then\nstart the backend server:\n\n.. code:: bash\n\n    $ git clone ssh://git@github.com:manahl/dtale.git\n    # install the dependencies\n    $ python setup.py develop\n    # start the server\n    $ python dtale --csv-path /home/jdoe/my_csv.csv --csv-parse_dates date\n\nYou can also run dtale from PyDev directly.\n\nYou will also want to import javascript dependencies and build the\nsource:\n\n.. code:: bash\n\n    $ npm install\n    # 1) a persistent server that serves the latest JS:\n    $ npm run watch\n    # 2) or one-off build:\n    $ npm run build\n\nRunning tests\n~~~~~~~~~~~~~\n\nThe usual npm test command works:\n\n::\n\n    $ npm test\n\nYou can run individual test files:\n\n::\n\n    $ TEST=static/__tests__/dtale/DataViewer-base-test.jsx npm run test-file\n\nLinting\n~~~~~~~\n\nYou can lint all the JS and CSS to confirm there's nothing obviously\nwrong with it:\n\n.. code:: bash\n\n    $ npm run lint -s\n\nYou can also lint individual JS files:\n\n.. code:: bash\n\n    $ npm run lint-js-file -s -- static/dtale/DataViewer.jsx\n\nFormatting JS\n~~~~~~~~~~~~~\n\nYou can auto-format code as follows:\n\n.. code:: bash\n\n    $ npm run format\n\nDocker development\n~~~~~~~~~~~~~~~~~~\n\nYou can build python 27-3 & run D-Tale as follows:\n\n.. code:: bash\n\n    $ yarn run build\n    $ docker-compose build dtale_2_7\n    $ docker run -it --network host dtale_2_7:latest\n    $ python\n    >>> import pandas as pd\n    >>> df = pd.DataFrame([dict(a=1,b=2,c=3)])\n    >>> import dtale\n    >>> dtale.show(df)\n\nThen view your D-Tale instance in your browser using the link that gets\nprinted\n\nYou can build python 36-1 & run D-Tale as follows:\n\n.. code:: bash\n\n    $ yarn run build\n    $ docker-compose build dtale_3_6\n    $ docker run -it --network host dtale_3_6:latest\n    $ python\n    >>> import pandas as pd\n    >>> df = pd.DataFrame([dict(a=1,b=2,c=3)])\n    >>> import dtale\n    >>> dtale.show(df)\n\nThen view your D-Tale instance in your browser using the link that gets\nprinted\n\nDocumentation\n-------------\n\nHave a look at the `detailed\ndocumentation <https://dtale.readthedocs.io>`__.\n\nRequirements\n------------\n\nD-Tale works with:\n\n-  Back-end\n\n   -  Flask\n   -  Flask-Caching\n   -  Flask-Compress\n   -  flasgger\n   -  Pandas\n   -  scipy\n   -  six\n\n-  Front-end\n\n   -  react-virtualized\n   -  chart.js\n\nAcknowledgements\n----------------\n\nD-Tale has been under active development at `Man\nNumeric <http://www.numeric.com/>`__ since 2019.\n\nOriginal concept and implementation: `Andrew\nSchonfeld <https://github.com/aschonfeld>`__\n\nContributors:\n\n-  `Wilfred Hughes <https://github.com/Wilfred>`__\n-  `Dominik Christ <https://github.com/DominikMChrist>`__\n-  ... and many others ...\n\nContributions welcome!\n\nLicense\n-------\n\nD-Tale is licensed under the GNU LGPL v2.1. A copy of which is included\nin `LICENSE <LICENSE>`__\n\n.. |D-Tale| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Title.png\n   :target: https://github.com/manahl/dtale\n.. |CircleCI| image:: https://circleci.com/gh/manahl/dtale.svg?style=shield&circle-token=4b67588a87157cc03b484fb96be438f70b5cd151\n   :target: https://circleci.com/gh/manahl/dtale\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/dtale.svg\n   :target: https://pypi.python.org/pypi/dtale/\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/dtale/badge\n   :target: https://dtale.readthedocs.io\n.. |Coverage Status| image:: https://coveralls.io/repos/github/manahl/dtale/badge.svg?branch=master\n   :target: https://coveralls.io/github/manahl/dtale?branch=master\n.. |Python Terminal| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Python_Terminal.png\n.. |Chrome #1| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Browser1.png\n.. |Info| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Info_cell.png\n.. |Menu| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Info_menu_small.png\n.. |Column Select| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Col_select.png\n.. |Filter Apply| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Filter_apply.png\n.. |Filter Applied| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Post_filter.png\n.. |Coverage Daily| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Coverage_daily.png\n.. |Coverage Daily Regions| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Coverage_daily_regions.png\n.. |Correlations| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Correlations.png\n.. |Timeseries| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Correlations_ts.png\n.. |Scatter| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Correlations_scatter.png\n.. |Formatting Apply| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Formatting_apply.png\n.. |Formatting Applied| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Post_formatting.png\n.. |Histogram| image:: https://raw.githubusercontent.com/manahl/dtale/master/docs/images/Histogram.png\n\nChangelog\n\n1.0.0 (2019-09-06)\n~~~~~~~~~~~~~~~~~~\n\n-  Initial public release\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/manahl/dtale",
    "keywords": "numeric,pandas,visualization,flask",
    "license": "LGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtale",
    "package_url": "https://pypi.org/project/dtale/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtale/",
    "project_urls": {
      "Homepage": "https://github.com/manahl/dtale"
    },
    "release_url": "https://pypi.org/project/dtale/1.0.0/",
    "requires_dist": [
      "jsonschema (<3.0.0)",
      "flasgger (==0.9.3)",
      "Flask",
      "Flask-Caching",
      "Flask-Compress",
      "future",
      "itsdangerous",
      "pandas",
      "scipy",
      "six"
    ],
    "requires_python": "",
    "summary": "Web Client for Visualizing Pandas Objects",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17146159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a63c81c864ba248924277f55ca20d0e3a0bdcc4d9896ad655432c8d10c55d04",
        "md5": "01c95140289594747a0d6f2c9c829fd9",
        "sha256": "77ce98347f376fa5078330cd1a0a8b2886ef2dbdca1e5dbb01813e7c7495864f"
      },
      "downloads": -1,
      "filename": "dtale-1.0.0-py2.7.egg",
      "has_sig": false,
      "md5_digest": "01c95140289594747a0d6f2c9c829fd9",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 2998324,
      "upload_time": "2019-09-07T18:37:10",
      "upload_time_iso_8601": "2019-09-07T18:37:10.480998Z",
      "url": "https://files.pythonhosted.org/packages/8a/63/c81c864ba248924277f55ca20d0e3a0bdcc4d9896ad655432c8d10c55d04/dtale-1.0.0-py2.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91794c5926bef188936e0e87b2d9f941fbb7452f9b31c10508a33b919833a71a",
        "md5": "928335806db79b2fb8231e34e62da5bb",
        "sha256": "78cd4cc00db3042138be7d8b8c99ea788228dce9e015319a13ff1569a8ed0d45"
      },
      "downloads": -1,
      "filename": "dtale-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "928335806db79b2fb8231e34e62da5bb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 2983633,
      "upload_time": "2019-09-07T18:35:21",
      "upload_time_iso_8601": "2019-09-07T18:35:21.554048Z",
      "url": "https://files.pythonhosted.org/packages/91/79/4c5926bef188936e0e87b2d9f941fbb7452f9b31c10508a33b919833a71a/dtale-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9623420250e54fc9eb91cdad88286bdc16c5daeb874ea3086cf598d7884e4ae",
        "md5": "bbea80d894d49b2217646717272e50ce",
        "sha256": "c6a0d15c66a3d555925e5ad30be906a61e14641575437e253015964ee7e54d88"
      },
      "downloads": -1,
      "filename": "dtale-1.0.0-py3.6.egg",
      "has_sig": false,
      "md5_digest": "bbea80d894d49b2217646717272e50ce",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": null,
      "size": 2998465,
      "upload_time": "2019-09-07T18:35:29",
      "upload_time_iso_8601": "2019-09-07T18:35:29.087310Z",
      "url": "https://files.pythonhosted.org/packages/c9/62/3420250e54fc9eb91cdad88286bdc16c5daeb874ea3086cf598d7884e4ae/dtale-1.0.0-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4786816a6c2717a9f5008462b63969ec46f6699c79876658dec4da33917b1a0e",
        "md5": "9b703acd3f6bb2025f10c099934f0a91",
        "sha256": "799bba09e45f91ed3a4f4f2a7149cfce731a83a4959de120d6bd8ba62e0d94f2"
      },
      "downloads": -1,
      "filename": "dtale-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9b703acd3f6bb2025f10c099934f0a91",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2961085,
      "upload_time": "2019-09-07T18:35:35",
      "upload_time_iso_8601": "2019-09-07T18:35:35.858934Z",
      "url": "https://files.pythonhosted.org/packages/47/86/816a6c2717a9f5008462b63969ec46f6699c79876658dec4da33917b1a0e/dtale-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}