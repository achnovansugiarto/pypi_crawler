{
  "info": {
    "author": "Joakim Myrvoll Johansen",
    "author_email": "joakimmyrvoll@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "[![app-badge]][PyPI-md-tangle] ![Version] ![License] ![Format] ![PyVer] ![Downloads]\n\n# [md-tangle][PyPI-md-tangle]\nThis project is a result of wanting config and setup files to be part of a document \nexplaining my setup. I originally used [Org-mode][1] and [org-babel-tangle][2] in \n[Emacs][3] to achieve this. I really like Org-mode and Emacs, but I'm not fond of\nbeing dependent on one editor. This is the reason I wanted a [CLI][4], and a more \nwidely used document [markup language][5].\n\nThis way of programming is called [literate programming][6]. This programming paradigm \nwas introduced by Donald Knuth. The idea is to write a program as an explanation of the\nprogram logic in a natural language interspersed with snippets of traditional source code.\nThe source code can then be generated (\"tangled\") by using some tool.\n\nAs [Markdown][7] is used by most programmers, I saw that language fit for the task.\nMarkdown is a plaintext-ish format popular with programmers. It's simple, easy and \nalready has support for embedding code blocks using ``` or ~~~~, mostly \nfor the purposes of syntax highlighting in documentation.\n\n## Installing\nThis CLI tool can easily be utilized by adding `md-tangle` to your `PATH`, or by installing the package with `pip`.\n\nSee the package on [pypi.org][PyPI-md-tangle], or just install with `pip install md-tangle`.\n\n## Command\nBy adding the keyword `tangle:<path/filename>`, this tool will tangle tagged code\nblocks to given file. Supports `~` for home directory.\n\nOne can tangle the code block to multiple files by separating the files with chosen separator (default: `,`).\n\nIf the file already exists, the user will be prompted with the option to overwrite,\nunless the `-f`/`--force` flag is added.\n\n### Flags\n\n* `-h`/`--help`: Show help message and exit\n* `--version`: Show installed version\n* `-f`/`--force`: Force overwrite of files if the already exists\n* `-v`/`--verbose`: Show output\n* `-d`/`--destination`: Overwrite output destination\n* `-s`/`--separator`: Separator for tangle destinations (default=',')\n\n## Usage\n\nTake the following example:\n\n`HelloWorld.md`\n```markdown\n# Some title\nDescribing the following code... bla bla.\n\n~~~~javascript tangle:helloWorld.js\nconsole.log(\"Hello, \");\nconsole.log(\"world\");\n~~~~\n\n## Styling\nAdding header for my css files:\n\n~~~~css tangle:styles/button.css,styles/input.css\n/* Styling for mye awesome app */\n~~~~\n\nBy adding some css ... \n\n~~~~css tangle:styles/button.css\n#button1 {\n    border: none;\n}\n~~~~\n\n~~~~css tangle:styles/input.css\n#button1 {\n    border: none;\n}\n~~~~\n```\n\nBy installing `md-tangle` with `pip`, one could simply produce files from this file by executing:\n\n```bash\n$ md-tangle -v HelloWorld.md \nhelloWorld.js                                      2 lines\nstyles/button.css                                  4 lines\nstyles/input.css                                   4 lines\n$ ls \nhelloWorld.js HelloWorld.md styles\n```\n\n## Documentation\n\nThe [documentation][8] for `md-tangle` is of course written in Markdown, and tangles to the source\ncode.\n\n\n[1]: https://en.wikipedia.org/wiki/Org-mode\n[2]: https://orgmode.org/manual/Extracting-source-code.html\n[3]: https://www.gnu.org/software/emacs/\n[4]: https://en.wikipedia.org/wiki/Command-line_interface\n[5]: https://en.wikipedia.org/wiki/Markup_language\n[6]: https://en.wikipedia.org/wiki/Literate_programming\n[7]: https://en.wikipedia.org/wiki/Markdown\n[8]: https://github.com/joakimmj/md-tangle/blob/master/DOCS.md\n\n[app-badge]: https://img.shields.io/badge/md--tangle-PyPI-orange.svg\n[PyPI-md-tangle]: https://pypi.org/project/md-tangle\n[Version]: https://img.shields.io/github/tag/joakimmj/md-tangle.svg?label=version\n[License]: https://img.shields.io/github/license/joakimmj/md-tangle.svg\n[Format]: https://img.shields.io/pypi/format/md_tangle.svg\n[PyVer]: https://img.shields.io/pypi/pyversions/md-tangle.svg\n[Downloads]: https://img.shields.io/pypi/dm/md-tangle.svg\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joakimmj/md-tangle",
    "keywords": "markdown,tangle,literate programming",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "md-tangle",
    "package_url": "https://pypi.org/project/md-tangle/",
    "platform": "any",
    "project_url": "https://pypi.org/project/md-tangle/",
    "project_urls": {
      "Homepage": "https://github.com/joakimmj/md-tangle"
    },
    "release_url": "https://pypi.org/project/md-tangle/1.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generates ('tangles') source code from Markdown documents",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11267362,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09ad09f3d8fe954eb44db170220e07f1d495404b5e246bcda359df547d688e4c",
        "md5": "22ed381550d104421b83c9336356ae55",
        "sha256": "758af1f214689398a3cbb4cf38c3d17e0929a86bd64e14e5f5bd3f24dd417105"
      },
      "downloads": -1,
      "filename": "md_tangle-1.3.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "22ed381550d104421b83c9336356ae55",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 6403,
      "upload_time": "2021-08-24T21:22:16",
      "upload_time_iso_8601": "2021-08-24T21:22:16.466792Z",
      "url": "https://files.pythonhosted.org/packages/09/ad/09f3d8fe954eb44db170220e07f1d495404b5e246bcda359df547d688e4c/md_tangle-1.3.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3601285181f9bf6e6d056d4c636d7075d8ae034a701285992bee3f2068820a17",
        "md5": "0a7b40443ed77a4619eabe59c7508d9a",
        "sha256": "9039fad0888d7a331d41fb11d0c648d7aa005ba82eb31663d8aab2824ba802d6"
      },
      "downloads": -1,
      "filename": "md_tangle-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a7b40443ed77a4619eabe59c7508d9a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6401,
      "upload_time": "2021-08-24T21:22:18",
      "upload_time_iso_8601": "2021-08-24T21:22:18.986784Z",
      "url": "https://files.pythonhosted.org/packages/36/01/285181f9bf6e6d056d4c636d7075d8ae034a701285992bee3f2068820a17/md_tangle-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}