{
  "info": {
    "author": "Michele Cappellari",
    "author_email": "michele.cappellari@physics.ox.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "The LtsFit Package\r\n==================\r\n\r\n**Robust Linear Regression with Scatter in One or Two Dimensions**\r\n\r\n.. image:: https://img.shields.io/pypi/v/ltsfit.svg\r\n    :target: https://pypi.org/project/ltsfit/\r\n.. image:: https://img.shields.io/badge/arXiv-1208.3522-orange.svg\r\n    :target: https://arxiv.org/abs/1208.3522\r\n.. image:: https://img.shields.io/badge/DOI-10.1093/mnras/stt562-green.svg\r\n    :target: https://doi.org/10.1093/mnras/stt562\r\n\r\nLtsFit is a Python implementation of the method described in Section 3.2 of\r\n`Cappellari et al. (2013a) <https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_\r\nto perform **very robust** fits of lines or planes to data with errors in all\r\ncoordinates, while allowing for possible intrinsic scatter.\r\nOutliers are iteratively clipped using the robust Least Trimmed Squares (LTS)\r\ntechnique by `Rousseeuw & van Driessen (2006) <http://doi.org/10.1007/s10618-005-0024-4>`_.\r\n\r\n.. contents:: :depth: 2\r\n\r\nAttribution\r\n-----------\r\n\r\nIf you use this software for your research, please also cite\r\n`Cappellari et al. (2013a) <https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_\r\nwhere the implementation was described. The BibTeX entry for the paper is::\r\n\r\n    @ARTICLE{Cappellari2013a,\r\n        author = {{Cappellari}, M. and {Scott}, N. and {Alatalo}, K. and\r\n            {Blitz}, L. and {Bois}, M. and {Bournaud}, F. and {Bureau}, M. and\r\n            {Crocker}, A.~F. and {Davies}, R.~L. and {Davis}, T.~A. and {de Zeeuw},\r\n            P.~T. and {Duc}, P.-A. and {Emsellem}, E. and {Khochfar}, S. and\r\n            {Krajnovi{\\'c}}, D. and {Kuntschner}, H. and {McDermid}, R.~M. and\r\n            {Morganti}, R. and {Naab}, T. and {Oosterloo}, T. and {Sarzi}, M. and\r\n            {Serra}, P. and {Weijmans}, A.-M. and {Young}, L.~M.},\r\n        title = \"{The ATLAS$^{3D}$ project - XV. Benchmark for early-type\r\n            galaxies scaling relations from 260 dynamical models: mass-to-light\r\n            ratio, dark matter, Fundamental Plane and Mass Plane}\",\r\n        journal = {MNRAS},\r\n        eprint = {1208.3522},\r\n        year = 2013,\r\n        volume = 432,\r\n        pages = {1709-1741},\r\n        doi = {10.1093/mnras/stt562}\r\n    }\r\n\r\nInstallation\r\n------------\r\n\r\ninstall with::\r\n\r\n    pip install ltsfit\r\n\r\nWithout writing access to the global ``site-packages`` directory, use::\r\n\r\n    pip install --user ltsfit\r\n\r\nDocumentation\r\n-------------\r\n\r\nSee ``ltsfit/examples`` and the files docstrings.\r\nThey are copied by ``pip`` within the global folder\r\n`site-packages <https://stackoverflow.com/a/46071447>`_.\r\n\r\n###########################################################################\r\n\r\nlts_linefit\r\n===========\r\n\r\nPurpose\r\n-------\r\n\r\nBest straight-line *robust* fit to data with errors in\r\nboth coordinates while fitting for the intrinsic scatter.\r\nSee `Cappellari et al. (2013a, Sec.3.2)\r\n<https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_\r\n\r\nExplanation\r\n-----------\r\n\r\nLinear Least-squares approximation in one-dimension (y = a + b*x),\r\nwhen both x and y data have errors and allowing for intrinsic\r\nscatter in the relation.\r\n\r\nOutliers are iteratively clipped using the extremely robust\r\nFAST-LTS technique by\r\n`Rousseeuw & van Driessen (2006) <http://doi.org/10.1007/s10618-005-0024-4>`_\r\nSee also `Rousseeuw (1987) <http://books.google.co.uk/books?id=woaH_73s-MwC&pg=PA15>`_\r\n\r\nCalling Sequence\r\n----------------\r\n\r\n.. code-block:: python\r\n\r\n    p = lts_linefit(x, y, sigx, sigy, clip=2.6, epsy=True, corr=True,\r\n                  frac=None, pivot=None, plot=True, text=True)\r\n\r\nThe output values are stored as attributes of \"p\".\r\nSee usage example at the bottom of this file.\r\n\r\nInput Parameters\r\n----------------\r\n\r\nx, y:\r\n    vectors of size N with the measured values.\r\nsigx, sigy:\r\n    vectors of size N with the 1sigma errors in x and y.\r\nclip:\r\n    values deviating more than clip*sigma from the best fit are\r\n    considered outliers and are excluded from the linear fit.\r\nepsy:\r\n    if True, the intrinsic scatter is printed on the plot.\r\ncorr:\r\n    if True, the correlation coefficients are printed on the plot.\r\nfrac:\r\n    fractions of values to include in the LTS stage.\r\n    Up to a fraction \"frac\" of the values can be outliers.\r\n    One must have 0.5 < frac < 1  (default frac=0.5).\r\n\r\n    NOTE: Set frac=1, to turn off outliers detection.\r\nlabel:\r\n    optional string label to create a legend outside the procedure.\r\npivot:\r\n    if this is not None, then lts_linefit fits the relation::\r\n\r\n        y = a + b*(x - pivot)\r\n\r\n    pivot is called x_0 in eq.(6) of Cappellari et al. (2013)\r\n    Use of this keyword is *strongly* recommended and a suggested\r\n    value is pivot ~ np.mean(x). This keyword is important to\r\n    reduce the covariance between a and b.\r\nplot:\r\n    if True a plot of the fit is produced.\r\ntext:\r\n    if True, the best fitting parameters are printed on the plot.\r\n\r\nOutput Parameters\r\n-----------------\r\n\r\nThe output values are stored as attributed of the lts_linefit class.\r\n\r\np.ab:\r\n    best fitting parameters [a, b]\r\np.ab_err:\r\n    1*sigma formal errors [a_err, b_err] on a and b.\r\np.mask:\r\n    boolean vector with the same size of x and y.\r\n    It contains True  for the elements of (x, y) which were included in\r\n    the fit and False for the outliers which were automatically clipped.\r\np.rms:\r\n    rms = np.std(fit - y) beteween the data and the fitted relation.\r\np.sig_int:\r\n    intrinsic scatter around the linear relation.\r\n    sig_int is called epsilon_y in eq.(6) of Cappellari et al. (2013).\r\np.sig_int_err:\r\n    1*sigma formal error on sig_int.\r\n\r\n###########################################################################\r\n\r\n\r\nlts_planefit\r\n============\r\n\r\nPurpose\r\n-------\r\n\r\nBest plane *robust* fit to data with errors in all\r\nthree coordinates and fitting for the intrinsic scatter.\r\nSee `Cappellari et al. (2013a, Sec.3.2)\r\n<https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_\r\n\r\nExplanation\r\n-----------\r\n\r\nLinear Least-squares approximation in two-dimension (z = a + b*x + c*y),\r\nwhen x, y and z data have errors, and allowing for intrinsic\r\nscatter in the relation.\r\n\r\nOutliers are iteratively clipped using the extremely robust\r\nFAST-LTS technique by\r\n`Rousseeuw & van Driessen (2006) <http://doi.org/10.1007/s10618-005-0024-4>`_\r\nSee also `Rousseeuw (1987) <http://books.google.co.uk/books?id=woaH_73s-MwC&pg=PA15>`_\r\n\r\nCalling Sequence\r\n----------------\r\n\r\n.. code-block:: python\r\n\r\n    p = lts_planefit(x, y, z, sigx, sigy, sigz, clip=2.6, epsz=True,\r\n                    frac=None, pivotx=None, pivoty=None, plot=True, text=True)\r\n\r\nThe output values are stored as attributes of \"p\".\r\nSee usage example at the bottom of this file.\r\n\r\nInput Parameters\r\n----------------\r\n\r\nx, y, z:\r\n    vectors of size N with the measured values.\r\nsigx, sigy, sigz:\r\n    vectors of size N with the 1sigma errors in x , y and z.\r\nclip:\r\n    values deviating more than clip*sigma from the best fit are\r\n    considered outliers and are excluded from the plane fit.\r\nepsz:\r\n    if True, the intrinsic scatter is printed on the plot.\r\nfrac:\r\n    fractions of values to include in the LTS stage.\r\n    Up to a fraction \"frac\" of the values can be outliers.\r\n    One must have 0.5 <= frac <= 1  (default frac=0.5).\r\n\r\n    NOTE: Set frac=1, to turn off outliers detection.\r\npivotx, pivoty:\r\n    if these are not None, then lts_planefit fits the plane::\r\n\r\n        z = a + b*(x - pivotx) + c*(y - pivoty)\r\n\r\n    pivotx, pivoty are called x_0, y_0 in eq.(7) of Cappellari et al. (2013)\r\n    Use of these keywords is *strongly* recommended, and suggested\r\n    values are ``pivotx=np.median(x), pivoty=np.median(y)``.\r\n    This keyword is important to reduce the covariance between a, b and c.\r\nplot:\r\n    if True a plot of the fit is produced.\r\ntext:\r\n    if True, the best fitting parameters are printed on the plot.\r\n\r\nOutput Parameters\r\n-----------------\r\n\r\nThe output values are stored as attributed of the lts_linefit class.\r\n\r\np.abc:\r\n    best fitting parameters [a, b, c]\r\np.abc_err:\r\n    1*sigma formal errors [a_err, b_err, c_err] on a, b and c.\r\np.mask:\r\n    boolean vector with the same size of x, y and z.\r\n    It contains True for the elements of (x, y, z) which were included in\r\n    the fit and False for the outliers which were automatically clipped.\r\np.rms:\r\n    rms = np.std(fit - z) beteween the data and the fitted relation.\r\np.sig_int:\r\n    intrinsic scatter in the z direction around the plane.\r\n    sig_int is called epsilon_z in eq.(7) of Cappellari et al. (2013).\r\np.sig_int_err:\r\n    1*sigma formal error on sig_int.\r\n\r\n###########################################################################\r\n\r\n\r\n\r\nLicense\r\n=======\r\n\r\nOther/Proprietary License\r\n\r\nCopyright (c) 2012-2022 Michele Cappellari\r\n\r\nThis software is provided as is without any warranty whatsoever.\r\nPermission to use, for non-commercial purposes is granted.\r\nPermission to modify for personal or internal use is granted,\r\nprovided this copyright and disclaimer are included in all \r\ncopies of the software. All other rights are reserved.\r\nIn particular, redistribution of the code is not allowed.\r\n\r\nChangelog\r\n=========\r\n\r\nV2.0.20: MC, Oxford, 3 October 2022\r\n  - Fixed program stop due to Matplotlib change.\r\n    Thanks to Hitesh Lala (Heidelberg) for the report.\r\n  - Extract documentation from docstrings and show it on PyPi.\r\n\r\nV2.0.19: MC, Oxford, 22 January 2021\r\n  - Fixed incorrect plot ranges due to a Matplotlib change.\r\n    Thanks to Davide Bevacqua (unibo.it) for the report.\r\n\r\nV2.0.18: MC, Oxford, 17 February 2020\r\n  - Properly print significant trailing zeros in results.\r\n\r\nV2.0.17: MC, Oxford, 22 January 2020\r\n  - Formatted documentation as docstring.\r\n  - Included p.rms output.\r\n\r\n\r\nV2.0.16: MC, Oxford, 27 September 2018\r\n  - Fixed clock DeprecationWarning in Python 3.7.\r\n\r\nV2.0.15: MC, Oxford, 12 May 2018\r\n  - Dropped Python 2.7 support.\r\n\r\nV2.0.14: MC, Oxford, 13 April 2018\r\n  - Fixed FutureWarning in Numpy 1.14.\r\n\r\nV2.0.13: Michele Cappellari, Oxford, 26 July 2017\r\n  - Increased upper limit of intrinsic scatter accounting for\r\n    uncertainty of standard deviation with small samples.\r\n\r\nV2.0.12: MC, Oxford, 5 September 2016\r\n  - Fixed: store ab errors in p.ab_err as documented.\r\n    Thanks to Alison Crocker for the correction.\r\n\r\nV2.0.11: MC, Oxford, 4 July 2016\r\n  - Added capsize=0 in plt.errorbar to prevent error bar caps\r\n    from showing up in PDF.\r\n\r\nV2.0.10: MC, Oxford, 23 January 2016\r\n  - Check for non finite values in input.\r\n\r\nV2.0.9: MC, Oxford, 8 January 2016\r\n  - Use LimeGreen for outliers.\r\n\r\nV2.0.8: MC, Oxford, 9 December 2015\r\n  - Fixed potential program stop without outliers in Matplotlib 1.5.\r\n  - Increased maximum intrinsic scatter for brentq, to avoid possible\r\n    stops in extreme situations.\r\n\r\nV2.0.7: MC, Oxford, 1 October 2015\r\n  - Fixed potential program stop without outliers.\r\n\r\nV2.0.6: MC, Oxford, 5 September 2015\r\n  - Optionally pass a legend label.\r\n\r\nV2.0.5: MC, Oxford, 6 July 2015\r\n  - Fixed potential program stop without outliers.\r\n    Thanks to Masato Onodera for a clear report of the problem.\r\n  - Output boolean mask instead of good/bad indices.\r\n  - Removed lts_linefit_example from this file.\r\n  - Print verbose output during calculation.\r\n\r\nV2.0.4: MC, Baltimore, 9 June 2015\r\n  - Updated documentation.\r\n\r\nV2.0.3: MC, Oxford, 10 December 2014\r\n  - Uses np.std rather than biweight to estimate scatter upper limit.\r\n\r\nV2.0.2: MC, 6 November 2014\r\n  - Included _linefit function to avoid np.polyfit bug with weights.\r\n\r\nV2.0.1: MC, Oxford, 23 October 2014\r\n  - Fixed program stop with zero scatter.\r\n\r\nV2.0.0: MC, Portsmouth, 23 June 2014\r\n  - Converted from IDL into Python.\r\n\r\nV1.0.6: MC, Baltimore, 8 June 2014\r\n  - Check that all input vectors have the same size.\r\n\r\nV1.0.5: MC, Oxford, 19 September 2013\r\n  - Scale line spacing with character size in text output.\r\n\r\nV1.0.4: MC, Turku, 10 July 2013\r\n  - Fixed program stop affecting earlier versions of IDL.\r\n    Thanks to Xue-Guang Zhang for reporting the problem\r\n    and the solution.\r\n\r\nV1.0.3: MC, Oxford, 13 March 2013\r\n  - Added CLIP keyword.\r\n\r\nV1.0.2: MC, Oxford, 1 August 2011\r\n  - Added PIVOT keyword.\r\n\r\nV1.0.1: MC, Oxford, 28 July 2011\r\n  - Included _EXTRA and OVEPLOT, keywords.\r\n\r\nV1.0.0: Michele Cappellari, Oxford, 21 March 2011\r\n  - Created and tested.\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://purl.org/cappellari/software",
    "keywords": "",
    "license": "Other/Proprietary License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ltsfit",
    "package_url": "https://pypi.org/project/ltsfit/",
    "platform": null,
    "project_url": "https://pypi.org/project/ltsfit/",
    "project_urls": {
      "Homepage": "https://purl.org/cappellari/software"
    },
    "release_url": "https://pypi.org/project/ltsfit/5.0.20/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "LtsFit: Least Trimmed Squares Fitting",
    "version": "5.0.20",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15292274,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b53d3c5ae12efef0180071313c9a53b150b757a74758e0233b11b9da92991541",
        "md5": "8c8339a6e8e9e6e036e05896a431c54a",
        "sha256": "76d64ebc1033a9f577e7bbb6dbac49175b20a4db83aa3a96d36b906289c5e9de"
      },
      "downloads": -1,
      "filename": "ltsfit-5.0.20.tar.gz",
      "has_sig": false,
      "md5_digest": "8c8339a6e8e9e6e036e05896a431c54a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17135,
      "upload_time": "2022-10-03T16:57:41",
      "upload_time_iso_8601": "2022-10-03T16:57:41.798685Z",
      "url": "https://files.pythonhosted.org/packages/b5/3d/3c5ae12efef0180071313c9a53b150b757a74758e0233b11b9da92991541/ltsfit-5.0.20.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}