{
  "info": {
    "author": "Nicholas Royer",
    "author_email": "nick.w.royer@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Utilities"
    ],
    "description": "# Python military symbols\n\nThis is a lightweight Python module, including a command-line script, to generate NATO APP-6(D) compliant military symbol icons in SVG format. These SVGs can be generated from inputs formatted as NATO SIDCs (Symbol identification codes) or as natural-language names for symbols, i.e. \"friendly infantry platoon\" or \"enemy mortar section.\" Features supported include:\n\n- Headquarters, task force, mobility, and echelon indicators\n- Automatic checking of modifier and entity types for congruence\n- Symbol sets to indicate land units and installations, air, space, sea surface, subsurface, signals intelligence, and cyber units, tracks, and activities\n- Status indicators in both standard and alternate forms\n- Construction of SVGs in light, medium, dark, and unfilled styles\n\nControl measure graphics are not yet implemented.\n\nAvailable as a [Python package](https://pypi.org/project/military-symbol/1.0.0/). \n\n### Usage\n\nCommand line usage examples:\n\n```bash\n# Create a set of symbols by name, using variant symbols if available, in the current directory\nmilitary_symbol --use-variants --by-name -o . \"Friendly artillery company\" \"Destroyed Enemy PSYOP section\"\n\n# Create a single symbol at the designated path by name\nmilitary_symbol -o platoon.svg -n \"Friendly infantry platoon\"\n\n# Print a set of symbols by name, in unfilled style, to STDOUT\nmilitary_symbol -s unfilled -n \"Friendly infantry platoon\" \"Enemy anti-air battery\"\n\n# Create the same set of symbols as above, but by SIDC\nmilitary_symbol -o .  -n 10031000141211000000 10041000141211000000\n```\n\nPython module usage:\n\n```Python\nimport os\n\nimport military_symbol\n\nif __name__ == '__main__':\n    # Print symbol generated from a name to STDOUT\n    print(military_symbol.get_symbol_svg_string_from_name(\"enemy infantry platoon\"))\n\n    # Add a symbol template and write it to a file adjacent to this script\n    example_template_directory = os.path.dirname(__file__)\n    military_symbol.add_symbol_template_set(os.path.join(example_template_directory, 'example_template.json'))\n    military_symbol.write_symbol_svg_string_from_name(\"T-82\", out_filepath=os.path.join(example_template_directory,\n                                                                                        'T-82.svg'), auto_name=False)\n\n    shapes = [\n        'friendly infantry',\n        'friendly cavalry',\n        'friendly artillery'\n    ]\n    for shape in shapes:\n        military_symbol.write_symbol_svg_string_from_name(shape, out_filepath=example_template_directory)\n\n    # Generate a list of symbols from names and write them as SVG files in specific\n    # styles, named according to a user-defined pattern and using variant symbols where available\n    examples = [\n        ('Enemy armor company', 'light'),\n        (\"Dummy damaged neutral hospital\", 'medium'),\n        (\"Friendly fighter\", 'dark'),\n        (\"Destroyed neutral artillery task force headquarters\", 'unfilled'),\n        (\"Suspected CBRN section\", 'light')\n    ]\n\n    for example_name, example_style in examples:\n        example_symbol: src.military_symbol.individual_symbol.MilitarySymbol = military_symbol.get_symbol_class_from_name(example_name)\n        print('Exporting symbol \"{}\"'.format(example_symbol.get_name()))\n\n        output_filename = '{} ({}).svg'.format(example_symbol.get_sidc(), example_style)\n        with open(output_filename, 'w') as output_file:\n            output_file.write(example_symbol.get_svg(style=example_style, pixel_padding=4, use_variants=True))\n```\n\n## License\n\nThis project is licensed under the MIT license. \n \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nwroyer/Python-Military-Symbols",
    "keywords": "military,NATO,symbol,APP-6D,MIL-STD-2525D,map",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "military-symbol",
    "package_url": "https://pypi.org/project/military-symbol/",
    "platform": "",
    "project_url": "https://pypi.org/project/military-symbol/",
    "project_urls": {
      "Homepage": "https://github.com/nwroyer/Python-Military-Symbols",
      "PyPI": "https://pypi.org/project/military-symbol/1.0.0/"
    },
    "release_url": "https://pypi.org/project/military-symbol/1.0.6/",
    "requires_dist": [
      "lxml",
      "svgpathtools"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Lightweight library for producing SVGs of NATO standard military symbols from NATO sidcs or natural-language descriptions",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12185135,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db4a4acbbe2d8f259b5981d4e6cdfafa3014118eb047c7774eb46c41e9e57652",
        "md5": "90a66244201d793acb7fde5dad28e2f4",
        "sha256": "285a998334a9c496d7e011c2b832634652130e4818fce39ce5881cf79849df0a"
      },
      "downloads": -1,
      "filename": "military_symbol-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90a66244201d793acb7fde5dad28e2f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 595885,
      "upload_time": "2021-11-29T20:21:22",
      "upload_time_iso_8601": "2021-11-29T20:21:22.332437Z",
      "url": "https://files.pythonhosted.org/packages/db/4a/4acbbe2d8f259b5981d4e6cdfafa3014118eb047c7774eb46c41e9e57652/military_symbol-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23c1d515e61686cb8a95e324fe01981fdf6b3a1166f1f69b3331f14245552868",
        "md5": "03d69d4064c08eb1b80fbcea525cfb09",
        "sha256": "da2504484c0bd93ce15d5cade4b621960b9a2a2023a332af13b477acc54c4a86"
      },
      "downloads": -1,
      "filename": "military_symbol-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "03d69d4064c08eb1b80fbcea525cfb09",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 588896,
      "upload_time": "2021-11-29T20:21:23",
      "upload_time_iso_8601": "2021-11-29T20:21:23.787705Z",
      "url": "https://files.pythonhosted.org/packages/23/c1/d515e61686cb8a95e324fe01981fdf6b3a1166f1f69b3331f14245552868/military_symbol-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}