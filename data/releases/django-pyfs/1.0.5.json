{
  "info": {
    "author": "Piotr Mitros",
    "author_email": "pmitros@edx.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-pyfs\n===========\n\nA Django module which extends pyfilesystem with several methods to\nmake it convenient for web use. Specifically, it extends pyfilesystem\nwith two methods:\n\n    fs.get_url(filename, timeout=0)\n\nThis will return a externally-usable URL to the resource. If\ntimeout>0, the URL may stop working after that period (in\nseconds). Details are implementation-dependent. On Amazon S3, this is\na secure URL, which is only available for that period. For a static\nfilesystem, the URLs are unsecure and permanent. \n\n    fs.expire(filename, seconds, days, expires=True)\n\nThis allows us to create temporary objects. Our use-case was that we\nwanted to generate visualizations to users which were .png images. The\nlifetime of those images was a single web request, so we set them to\nexpire after a few minutes. Another use case was memoization.\n\nNote that expired files are not automatically removed. To remove them,\ncall `expire_objects()`. In our system, we had a cron job do\nthis for a while. Celery, manual removals, etc. are all options. \n\nTo configure a django-pyfs to use static files, set a parameter in\nDjango settings: \n\n    DJFS = {'type' : 'osfs',\n                     'directory_root' : 'djpyfs/static/djpyfs', \n                     'url_root' : '/static/djpyfs'}\n\nHere, `directory_root` is where the files go. `url_root` is the URL\nbase of where your web server is configured to serve them from.\n\nTo use files on S3, you need `boto` installed. Then, \n\n    DJFS = {'type' : 's3fs',\n            'bucket' : 'my-bucket', \n            'prefix' : '/pyfs/' } \n\n`bucket` is your S3 bucket. `prefix` is optional, and gives a base\nwithin that bucket.\n\nTo get your filesystem, call: \n\n    def get_filesystem(namespace)\n\nEach module should pass a unique namespace. These will typically\ncorrespond to subdirectories within the filesystem. \n\nThe django-pyfs interface is designed as a generic (non-Django\nspecific) extension to pyfilesystem. However, the specific\nimplementation is very Django-specific. \n\nGood next steps would be to:\n\n* Allow Django storages to act as a back-end for pyfilesystem\n* Allow django-pyfs to act as a back-end for Django storages\n* Support more types of pyfilesystems (esp. in-memory would be nice)\n\nState: This code is tested and has worked well in a range of settings,\nand is currently deployed on edx.org. However, it doesn't have test\ncases and similar, so can't be considered truly production-ready. The\nexpiration functionality, in particular, we are not using right now.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edx/django-pyfs",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pyfs",
    "package_url": "https://pypi.org/project/django-pyfs/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pyfs/",
    "project_urls": {
      "Homepage": "https://github.com/edx/django-pyfs"
    },
    "release_url": "https://pypi.org/project/django-pyfs/1.0.5/",
    "requires_dist": [
      "fs",
      "six",
      "boto"
    ],
    "requires_python": "",
    "summary": "Django pyfilesystem integration",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12631507,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff08075b932a112b604c301a088adb38641b14d1b79ccbbe6a5e19b26fdbd9d5",
        "md5": "b854a64149521855c69e88a8c0fba674",
        "sha256": "c9761931ef042d7593036393d0bb3fce3939a4cb943e06bdb916d2933ddcfb10"
      },
      "downloads": -1,
      "filename": "django_pyfs-1.0.5-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b854a64149521855c69e88a8c0fba674",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 11343,
      "upload_time": "2017-01-18T21:10:48",
      "upload_time_iso_8601": "2017-01-18T21:10:48.121371Z",
      "url": "https://files.pythonhosted.org/packages/ff/08/075b932a112b604c301a088adb38641b14d1b79ccbbe6a5e19b26fdbd9d5/django_pyfs-1.0.5-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a034dcca499101f065cd277da9a387896f45319aa53b9e3ea232dc14e7f742f6",
        "md5": "dcbe74d322f664381bb0cd84b72eb337",
        "sha256": "85cdb8436c2a469cf855a1169ae318fe6cab42189668d562cb60167863b433d5"
      },
      "downloads": -1,
      "filename": "django_pyfs-1.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dcbe74d322f664381bb0cd84b72eb337",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11357,
      "upload_time": "2017-01-19T00:05:53",
      "upload_time_iso_8601": "2017-01-19T00:05:53.775278Z",
      "url": "https://files.pythonhosted.org/packages/a0/34/dcca499101f065cd277da9a387896f45319aa53b9e3ea232dc14e7f742f6/django_pyfs-1.0.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa59df03a9024c48bef715288032b5c7e0437b47d725020ff03a2181a2152958",
        "md5": "9127193afb334a904e526c80ec06ed6b",
        "sha256": "cfa05369efd6c1e72d17617d5546df7ca986a82b0cc0edff224096e976f1c0e7"
      },
      "downloads": -1,
      "filename": "django-pyfs-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9127193afb334a904e526c80ec06ed6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13078,
      "upload_time": "2017-01-18T21:10:50",
      "upload_time_iso_8601": "2017-01-18T21:10:50.335976Z",
      "url": "https://files.pythonhosted.org/packages/fa/59/df03a9024c48bef715288032b5c7e0437b47d725020ff03a2181a2152958/django-pyfs-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}