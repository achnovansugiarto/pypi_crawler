{
  "info": {
    "author": "Piotr Mitros",
    "author_email": "pmitros@edx.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===========\ndjango-pyfs\n===========\n\n|pypi-badge| |ci-badge| |codecov-badge| |pyversions-badge|\n|license-badge|\n\nA Django module which extends pyfilesystem2 with several methods to\nmake it convenient for web use. Specifically, it extends pyfilesystem2\nwith two methods:\n\n.. code-block::\n\n    fs.get_url(filename, timeout=0)\n\nThis will return a externally-usable URL to the resource. If\ntimeout>0, the URL may stop working after that period (in\nseconds). Details are implementation-dependent. On Amazon S3, this is\na secure URL, which is only available for that period. For a static\nfilesystem, the URLs are unsecure and permanent.\n\n.. code-block::\n\n    fs.expire(filename, seconds, days, expires=True)\n\nThis allows us to create temporary objects. Our use-case was that we\nwanted to generate visualizations to users which were .png images. The\nlifetime of those images was a single web request, so we set them to\nexpire after a few minutes. Another use case was memoization.\n\nNote that expired files are not automatically removed. To remove them,\ncall ``expire_objects()``. In our system, we had a cron job do\nthis for a while. Celery, manual removals, etc. are all options.\n\nTo configure a django-pyfs to use static files, set a parameter in\nDjango settings:\n\n.. code-block::\n\n    DJFS = {'type' : 'osfs',\n            'directory_root' : 'djpyfs/static/djpyfs',\n            'url_root' : '/static/djpyfs'}\n\nHere, ``directory_root`` is where the files go. ``url_root`` is the URL\nbase of where your web server is configured to serve them from.\n\nTo use files on S3, you need ``boto`` installed. Then,\n\n.. code-block::\n\n    DJFS = {'type' : 's3fs',\n            'bucket' : 'my-bucket',\n            'prefix' : '/pyfs/' }\n\n``bucket`` is your S3 bucket. ``prefix`` is optional, and gives a base\nwithin that bucket.\n\nTo get your filesystem, call:\n\n.. code-block::\n\n    def get_filesystem(namespace)\n\nEach module should pass a unique namespace. These will typically\ncorrespond to subdirectories within the filesystem.\n\nThe django-pyfs interface is designed as a generic (non-Django\nspecific) extension to pyfilesystem2. However, the specific\nimplementation is very Django-specific.\n\nGood next steps would be to:\n\n* Allow Django storages to act as a back-end for pyfilesystem\n* Allow django-pyfs to act as a back-end for Django storages\n* Support more types of pyfilesystems (esp. in-memory would be nice)\n\nState: This code is tested and has worked well in a range of settings,\nand is currently deployed on edx.org.\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/django-pyfs.svg\n    :target: https://pypi.python.org/pypi/django-pyfs/\n    :alt: PyPI\n\n.. |ci-badge| image:: https://github.com/edx/django-pyfs/workflows/Python%20CI/badge.svg?branch=master\n    :target: https://github.com/edx/django-pyfs/actions?query=workflow%3A%22Python+CI%22\n    :alt: Github CI\n\n.. |codecov-badge| image:: http://codecov.io/github/edx/django-pyfs/coverage.svg?branch=master\n    :target: http://codecov.io/github/edx/django-pyfs?branch=master\n    :alt: Codecov\n\n.. |pyversions-badge| image:: https://img.shields.io/pypi/pyversions/django-pyfs.svg\n    :target: https://pypi.python.org/pypi/django-pyfs\n    :alt: Supported Python versions\n\n.. |license-badge| image:: https://img.shields.io/github/license/edx/django-pyfs.svg\n    :target: https://github.com/edx/django-pyfs/blob/master/LICENSE.txt\n    :alt: License\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edx/django-pyfs",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pyfs",
    "package_url": "https://pypi.org/project/django-pyfs/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-pyfs/",
    "project_urls": {
      "Homepage": "https://github.com/edx/django-pyfs"
    },
    "release_url": "https://pypi.org/project/django-pyfs/3.2.0/",
    "requires_dist": [
      "django",
      "fs (>=2.0.1)",
      "fs-s3fs"
    ],
    "requires_python": "",
    "summary": "Django pyfilesystem integration",
    "version": "3.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12631507,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a98f4ddc31133e1c14fccb81f7f19b10d6555d3750f737a8a390a5526d13f1f",
        "md5": "ce679f4c039e986fdc747215130478b4",
        "sha256": "8495013cb6f291812df9241debc14937531da7ed2f3bf6519cf0a5fe109b77cf"
      },
      "downloads": -1,
      "filename": "django_pyfs-3.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce679f4c039e986fdc747215130478b4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13275,
      "upload_time": "2022-01-20T10:32:53",
      "upload_time_iso_8601": "2022-01-20T10:32:53.041479Z",
      "url": "https://files.pythonhosted.org/packages/9a/98/f4ddc31133e1c14fccb81f7f19b10d6555d3750f737a8a390a5526d13f1f/django_pyfs-3.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c60b5bbda5c0fd56040c444dc8212e7c155c838f9930c6ed756763223ea647a",
        "md5": "9d70e9a251ffcafd486b86ddf96bc7d7",
        "sha256": "190f550f56c34ca561bff690aeeb3a7de92acb0bbf78a10d49c7c4d4dda32424"
      },
      "downloads": -1,
      "filename": "django-pyfs-3.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9d70e9a251ffcafd486b86ddf96bc7d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17979,
      "upload_time": "2022-01-20T10:32:54",
      "upload_time_iso_8601": "2022-01-20T10:32:54.329842Z",
      "url": "https://files.pythonhosted.org/packages/9c/60/b5bbda5c0fd56040c444dc8212e7c155c838f9930c6ed756763223ea647a/django-pyfs-3.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}