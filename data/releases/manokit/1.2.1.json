{
  "info": {
    "author": "Nickolai Beloguzov",
    "author_email": "nickolai.beloguzov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Communications :: Email",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Networking",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "### Table of contents\n\n-   [Introduction](#introduction)\n-   [Installation](#installation)\n-   [Package overview](#package-overview)\n-   [Simple Emails](#simple-emails)\n    -   [SimpleEmail code examples](#simpleemail-code-examples)\n-   [Emails with HTML](#emails-with-html)\n    -   [HTMLEmail code examples](#htmlemail-code-examples)\n-   [Similarity is key](#similarity-is-key)\n-   [Changelog](https://github.com/NickolaiBeloguzov/manokit/blob/master/CHANGELOG.md)\n\n### Introduction\n\n**Manokit** is an easy-to-use native email sender for Python. That's right! _There is no dependencies!_\n\nWith just a few lines of code you will be able to send fancy emails with no headache in sight!\n\n### Installation\n\nYou can install this package directly from [PyPI](https://pypi.org/project/manokit) or using pip:\n\n```\npip install manokit\n```\n\nAlso you can download installation-ready archives and project's source code from the [Releases](https://github.com/NickolaiBeloguzov/manokit/releases) page.\n\n### Package overview\n\nManokit consists of **2** modules: _manokit.email_ provides all the functionality needed to send emails fast and simple and _manokit.exceptions_ contains all custom exceptions that can be raised by this package in case something goes wrong.\n\nHere's a each module's struncture\n\n-   **_*manokit.email*_ module**:\n\n    -   _SimpleEmail_ class for sending plain-text emails\n    -   _HTMLEmail_ class for sending emails containing HTML\n    -   _BaseEmail_ class for development and expansion purposes\n\n-   **_manokit.exceptions_ module**:\n    -   _NotAValidEmailAddressError_ - sender's or recepient's email address is not valid (it may be a typo, missing domain, etc)\n    -   _AttachmentError_ - there's an error with email's attachment file. It may point that file does not exist, is not a file or cannot be accessed.\n    -   _BodyError_ - there's a problem with email's body. It may contain 'bad' characters, etc.\n    -   _ParameterError_ - one or more of function's parameters are invalid. They can be of wrong type, have 'bad' values, etc\n    -   _AuthError_ - there's a problem during authentication. It may indicate bad credentials or that mail server is restricting connections from an unverified source (like GMail does)\n    -   _SMTPError_ - there sre some problems with SMTP connection. It may indicate faulty SMTP server, unsupported type of connection, etc.\n    -   _EmailError_ - email cannot be sent. It is caused by missing metadata (subject, recepients, body, ...)\n\n### Simple Emails\n\nTo send a very simple plain-text email you need to import _SimpleEmail_ class from _manokit.email_ module.\n\nTo initialize it, you need to pass 4 things: an SMTP server address, its port, your credentials and enable SSL (optional).\n\nIt looks like this (e.g. send an email via GMail):\n\n```python\nfrom manokit.email import SimpleEmail\n\nop = SimpleEmail('smtp.gmail.com', 465, ('sender_email@gmail.com', 'TotallySecure1'), True)\n```\n\nIt'll automatically authenticate you.\n\nNote that this class does not support email with HTML in any way and will raise an exception if it detects it. The reason is that _HTMLEmail_ class is designed to work with HTML and therefore is more optimized. Simply put, _SimpleEmail_ is just not designed for HTML.\n\nA bit of clarification. Near class' properties you can see two different specifiers: '(property)' means that you cannot change this property after instance creation; '(property + setter)' means that you can change this property's value by this expression:\n\n```python\nop.property_name = <your_value>\n```\n\nHere's a complete list of class' methods and properties:\n\n-   **SimpleEmail**\n\n    -   **_subject (property + setter)_**\n        Email's subject line. By default it is None.\n    -   **_timestamp (property)_**\n        Email's time of birth, basically. It indicates exact time when class' instance was created and is used as email's time metadata\n    -   **_filesize_limit (property)_**\n        Maximum attachment's filesize. It is equal to 20 Mb because this is the most common limit. If file is larger, an _AttachmentError_ exception is raised. This limit cannot be disabled.\n    -   **_body (property + setter)_**\n        Email's body. By default it is None.\n        _Note: if there are any HTML tags, a BodyError exception will be raised_\n    -   **_recepients (property + setter)_**\n        Addressed who will receive this email. This can take form of a single string or a list of strings. All emails are checked for validity and a _NotAValidEmailAddressError_ exception is raised if one of emails is not valid.\n    -   **_attachments (property + setter)_**\n        Email's attachments. You can specify an unlimited number of files to attach in form of a list of their path. They can be relative because manokit automatically converts them to absolute.\n    -   **_sender_email (property)_**\n        Sender's Email address.\n    -   **_send() -> None (method)_**\n        Sends an email. Simple as that. It takes all the parameters from properties specified above and does all the dirty work, like setting headers, behind the scenes.\n    -   **_body_from_file(file: str) -> None (static method)_**\n        Reads file's contents and uses it as email's body.\n        File: str - path to file\n        If HTML tags are detected in file's contents, an exception will be raised.\n\n#### SimpleEmail code examples\n\nSendind a very basic email:\n\n```python\nfrom manokit.email import SimpleEmail\n\n# Initializing\nop = SimpleEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the important parts\n# By the way, you can change any of these parameters at any time\nop.subject = 'A very basic email with Manokit'\nop.body = \"This is a very basic letter sent to you via Manokit\"\nop.recepients = ['your_coworker@gmail.com', 'your_pm@hotmail.com']\n\n# Sending email\nop.send()\n```\n\nSending a basic email with attachments:\n\n```python\nfrom manokit.email import SimpleEmail\n\n# Initializing\nop = SimpleEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the necessary parameters\nop.subject = 'Quaterly Report'\nop.body = \"Here's the quaterly report for Q1 2021. Sending in PDF and DOCX formats\"\nop.recepients = 'cfo@bigcorp.com'\n\n# Adding attachments\nop.attachments = ['./report.pdf', './report.docx']\n\n# Sending email\nop.send()\n```\n\nReading email's body from file\n\n```python\nfrom manokit.email import SimpleEmail\n\n# Initializing\nop = SimpleEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the necessary parameters\nop.subject = 'A Screenplay Draft'\nop.body = SimpleEmail.body_from_file('./screenplay/draft.txt')\nop.recepients = 'publisher@publish.org'\n\n# Sending email\nop.send()\n```\n\n### Emails with HTML\n\nTo send fancy emails you'll need to use _HTMLEmail_ class from _manokit.email_ module.\n\nThis class lets you use HTML and inline styling to make boring text very engaging.\n\nTo initialize it, you need to pass 4 things: an SMTP server address, its port, your credentials and enable SSL (optional).\n\nIt is very similar to _SimpleEmail_.\n\n```\nfrom manokit.email import HTMLEmail\n\nop = HTMLEmail('smtp.gmail.com', 465, ('sender_email@gmail.com', 'TotallySecure1'), True)\n```\n\nHere's a complete list of class' methods and properties:\n\n-   **HTMLEmail**\n\n    -   **_subject (property + setter)_**\n        Email's subject line. By default it is None.\n    -   **_timestamp (property)_**\n        Email's time of birth, basically. It indicates exact time when class' instance was created and is used as email's time metadata\n    -   **_filesize_limit (property)_**\n        Maximum attachment's filesize. It is equal to 20 Mb because this is the most common limit. If file is larger, an _AttachmentError_ exception is raised. This limit cannot be disabled.\n    -   **_body (property + setter)_**\n        Email's body. By default it is None.\n        _Note: if there are no HTML tags present in the body, default styling is applied. It changes font family to Verdana and text color to #262626_\n    -   **_recepients (property + setter)_**\n        Addressed who will receive this email. This can take form of a single string or a list of strings. All emails are checked for validity and a _NotAValidEmailAddressError_ exception is raised if one of emails is not valid.\n    -   **_attachments (property + setter)_**\n        Email's attachments. You can specify an unlimited number of files to attach in form of a list of their path. They can be relative because manokit automatically converts them to absolute.\n    -   **_sender_email (property)_**\n        Sender's Email address.\n    -   **_send() -> None (method)_**\n        Sends an email. Simple as that. It takes all the parameters from properties specified above and does all the dirty work, like setting headers, behind the scenes.\n    -   **_body_from_file(file: str) -> None (static method)_**\n        Reads file's contents and uses it as email's body.\n        File: str - path to file\n        If no HTML tags are found, default styling is applied.\n\n#### HTMLEmail code examples\n\nSendind a simple HTML email:\n\n```python\nfrom manokit.email import HTMLEmail\n\n# Initializing\nop = HTMLEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the important parts\nop.subject = 'A HTML Email with Manokit'\n# HTML can be partial (without <html> and <body> tags)\nop.body = \"\"\"\\\n    <div>\n        <span style=\"color: pink;\">Here you can put basically anything</span>\n    </div>\n    <a href='https://github.com/NickolaiBeloguzov/manokit'>Manokit is awesome</a>\n\"\"\"\nop.recepients = ['mom@gmail.com', 'dad@hotmail.com']\n\n# Sending email\nop.send()\n```\n\nSending a HTML email with attachments:\n\n```python\nfrom manokit.email import HTMLEmail\n\n# Initializing\nop = HTMLEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the necessary parameters\nop.subject = 'Website patch (final)'\nop.body = \"\"\"\\\n    <div id=\"files\">\n        Here are all my files I'm sending you:\n        <ul>\n            <li>template.html - A site template</li>\n            <li>template.css - Styles for the template</li>\n            <li>main.js - Main template script</li>\n        </ul>\n\n        <span style=\"color: red; font-weight: bold;\">\n            These files must be in the same folder\n        </span>\n    </div>\n    \"\"\"\nop.recepients = 'cfo@bigcorp.com'\n\n# Adding attachments\nop.attachments = ['./site/template.html', './site/template.css', './site/main.js']\n\n# Sending email\nop.send()\n```\n\nReading email's body from file\n\n```python\nfrom manokit.email import HTMLEmail\n\n# Initializing\nop = HTMLEmail('smtp.gmail.com', 465, ('my_email@gmail.com', 'MyPasswd1'), True)\n\n# Setting all the necessary parameters\nop.subject = 'Your subscription has ended!'\nop.body = HTMLEmail.body_from_file('./email-templates/sub-end.html')\nop.recepients = 'user184720@musicforlife.com'\n\n# Sending email\nop.send()\n```\n\n### Similarity is key\n\nYou might've noticed that _SimpleEmail_ and _HTMLEmail_ are very similar in terms of used methods and their general implication. This similarity exists because all these classes are based on top of one main _BaseEmail_ class that actually contains all the functionality.\n\nThat opens up new doors for **YOU!** Yes! With Manokit you can build your own better email sending libraries. Simply inherit the _BaseEmail_ class and go beyond anyone's expectations\n\nHere's how it works:\n\n```python\nfrom manokit.email import BaseEmail\n\nclass BetterEmail(BaseEmail):\n    def __init__(self, host, port, creds, ssl, **kwargs) -> None:\n        # do your own super cool stuff\n        super().__init__(host, port, creds, ssl)\n\n    # Override superclass methods to be better\n    def send() -> None:\n        print('Sending emails to {recs}..'.format(recs=', '.join(self._recepients))\n\n        # Even more super cool stuff\n\n        super().send()\n```\n\n### Got questions or ideas?\n\nThat's great. This means that this project is alive.\n\nYou can start by opening a [Pull Request](https://github.com/NickolaiBeloguzov/manokit/pulls) and describe your problem/suggestion/idea there.\n\nFor now that's all! But not for long...\n\n### Changelog\n\nTo see our changelog [click here](https://github.com/NickolaiBeloguzov/manokit/blob/master/CHANGELOG.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NickolaiBeloguzov/manokit",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manokit",
    "package_url": "https://pypi.org/project/manokit/",
    "platform": "",
    "project_url": "https://pypi.org/project/manokit/",
    "project_urls": {
      "Homepage": "https://github.com/NickolaiBeloguzov/manokit"
    },
    "release_url": "https://pypi.org/project/manokit/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "An easy-to-use, purely native email sender",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9946512,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a0a0cf62451360a7fa81a75e90d6d5392c8c45d6cbdfc0d3eb880f0d4da4d56",
        "md5": "ffda225e32875e399475352d6823deb2",
        "sha256": "c357e752f43ff5f8752db86da5e540ede7adf6b3eec0f137ec7d393680f7cdec"
      },
      "downloads": -1,
      "filename": "manokit-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffda225e32875e399475352d6823deb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 23725,
      "upload_time": "2021-04-01T12:51:18",
      "upload_time_iso_8601": "2021-04-01T12:51:18.248747Z",
      "url": "https://files.pythonhosted.org/packages/2a/0a/0cf62451360a7fa81a75e90d6d5392c8c45d6cbdfc0d3eb880f0d4da4d56/manokit-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c199c14a4f1d963e440ccee7df1a1ebfb3b9e93eab0e7c2d8a3ca69b1926b1c",
        "md5": "5b436fffc5a881c0a227280f3c218862",
        "sha256": "0a4c64916fbbcf2e54d668b37eee9756ec94ddb09a96b2125ad45c0fdc662685"
      },
      "downloads": -1,
      "filename": "manokit-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5b436fffc5a881c0a227280f3c218862",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15568,
      "upload_time": "2021-04-01T12:51:19",
      "upload_time_iso_8601": "2021-04-01T12:51:19.571353Z",
      "url": "https://files.pythonhosted.org/packages/2c/19/9c14a4f1d963e440ccee7df1a1ebfb3b9e93eab0e7c2d8a3ca69b1926b1c/manokit-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}