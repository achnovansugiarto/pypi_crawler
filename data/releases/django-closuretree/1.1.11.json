{
  "info": {
    "author": "Mike Bryant",
    "author_email": "mike.bryant@ocado.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "******************\ndjango-closuretree\n******************\n\n\n.. image:: https://travis-ci.org/ocadotechnology/django-closuretree.svg\n   :target: https://travis-ci.org/ocadotechnology/django-closuretree\n   :alt: Build Status\n.. image:: https://landscape.io/github/ocadotechnology/django-closuretree/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/ocadotechnology/django-closuretree/master\n   :alt: Code Health Badge\n.. image:: https://readthedocs.org/projects/django-closuretree/badge/?version=latest\n   :target: http://django-closuretree.readthedocs.org/en/latest/\n   :alt: Documentation Status\n.. image:: https://coveralls.io/repos/ocadotechnology/django-closuretree/badge.svg\n   :target: https://coveralls.io/r/ocadotechnology/django-closuretree\n   :alt: Test Coverage\n.. image:: https://pypip.in/v/django-closuretree/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/django-closuretree/\n   :alt: Version Badge\n.. image:: https://pypip.in/license/django-closuretree/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/django-closuretree/\n   :alt: License Badge\n\n\n``django-closuretree`` is an implementation of the `closure tree <http://homepages.inf.ed.ac.uk/libkin/papers/tc-sql.pdf>`_ technique for `Django <https://djangoproject.com>`_ applications designed to provide efficient querying of `tree-based structures <http://en.wikipedia.org/wiki/Tree_%28data_structure%29>`_ in a relational database. Its goal is to reduce the number of queries required when querying the children or parents of a given object.\n\nGiven the following model:\n\n.. code-block:: python\n\n    class Node(models.Model):\n        name = models.CharField(max_length=24)\n        parent = models.ForeignKey('self', related_name='children')\n\nThe children of each model can be queried with:\n\n.. code-block:: python\n\n    Node.objects.get(name='A').children.all()\n\nHowever, for recursive lookups, this results in a large number of queries. Instead, ``django-closuretree`` allows you to extract them all in one go:\n\n.. code-block:: python\n\n    from closuretree.models import ClosureModel\n\n    class Node(ClosureModel):\n        name = models.CharField(max_length=24)\n        parent = models.ForeignKey('self', related_name='children', null=True)\n\n    a = Node.objects.create(name='A')\n    Node.objects.create(name='B', parent=a)\n\n    Node.objects.get(name='A').get_descendants()\n\nA single query will obtain all the descendants.\n\n===========\nQuick Start\n===========\n\n* Install ``django-closuretree`` with ``pip install django-closuretree``.\n* Inherit your models from ``closuretree.models.ClosureModel`` instead of ``django.db.models.Model``.\n\nThat's it. You can now use ``get_descendants()`` and ``get_ancestors()`` on a model instance.\n\nIf you're adding this to an existing application that already has data in the database, you'll need to run the ``rebuildtable()`` method of each model before the closure tree will be populated with the existing data:\n\n.. code-block:: python\n\n    Node.rebuildtable()\n\n============\nContributing\n============\n\nTo contribute, fork the repo, do your work, and issue a pull request. We ask that contributors adhere to `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_ standards, and include full tests for all their code.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ocadotechnology/django-closuretree/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-closuretree",
    "package_url": "https://pypi.org/project/django-closuretree/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-closuretree/",
    "project_urls": {
      "Homepage": "https://github.com/ocadotechnology/django-closuretree/"
    },
    "release_url": "https://pypi.org/project/django-closuretree/1.1.11/",
    "requires_dist": [
      "django (<1.12,>=1.4)",
      "django-autoconfig"
    ],
    "requires_python": "",
    "summary": "Efficient tree-based datastructure for Django",
    "version": "1.1.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3309799,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49330fcaacd82e204dcf3081fce31d73e2a83dd7507e1963df2965d7c70e7273",
        "md5": "ba3bd5097c85d5dd4f84052347b4c7a9",
        "sha256": "8040026bb4719edfe1f6218a25a15ca2df08e3085e07526cacee947fa4617e32"
      },
      "downloads": -1,
      "filename": "django_closuretree-1.1.11-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba3bd5097c85d5dd4f84052347b4c7a9",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 11891,
      "upload_time": "2017-09-08T13:21:16",
      "upload_time_iso_8601": "2017-09-08T13:21:16.879063Z",
      "url": "https://files.pythonhosted.org/packages/49/33/0fcaacd82e204dcf3081fce31d73e2a83dd7507e1963df2965d7c70e7273/django_closuretree-1.1.11-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "062df7a89e75e8a13dc0d787264d4e211230c75059369f636c214e64856e0fc3",
        "md5": "d8ec79bd7fb7a8d51250f9749887507e",
        "sha256": "466e1b2ab21da9677eb7d958ced5783b43391bd1b4ab49c3c8862d570a9faf55"
      },
      "downloads": -1,
      "filename": "django_closuretree-1.1.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8ec79bd7fb7a8d51250f9749887507e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11893,
      "upload_time": "2017-09-08T13:22:15",
      "upload_time_iso_8601": "2017-09-08T13:22:15.012410Z",
      "url": "https://files.pythonhosted.org/packages/06/2d/f7a89e75e8a13dc0d787264d4e211230c75059369f636c214e64856e0fc3/django_closuretree-1.1.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d10a9d27b2eada1ac488bda3fc4a7d34ae64b3e5fda7fc0da27ab489b990fa4",
        "md5": "fce237b4ff07079bee8280e837b2d0ef",
        "sha256": "2b5d6ffc5d9610b59ea609687717cdc3225a40b2f807305251d67486e9ef1f30"
      },
      "downloads": -1,
      "filename": "django-closuretree-1.1.11.tar.gz",
      "has_sig": false,
      "md5_digest": "fce237b4ff07079bee8280e837b2d0ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12465,
      "upload_time": "2017-09-08T13:21:20",
      "upload_time_iso_8601": "2017-09-08T13:21:20.251242Z",
      "url": "https://files.pythonhosted.org/packages/7d/10/a9d27b2eada1ac488bda3fc4a7d34ae64b3e5fda7fc0da27ab489b990fa4/django-closuretree-1.1.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}