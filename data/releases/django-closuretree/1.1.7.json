{
  "info": {
    "author": "Mike Bryant",
    "author_email": "mike.bryant@ocado.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "******************\ndjango-closuretree\n******************\n\n\n.. image:: https://travis-ci.org/ocadotechnology/django-closuretree.svg\n   :target: https://travis-ci.org/ocadotechnology/django-closuretree\n   :alt: Build Status\n.. image:: https://landscape.io/github/ocadotechnology/django-closuretree/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/ocadotechnology/django-closuretree/master\n   :alt: Code Health Badge\n.. image:: https://readthedocs.org/projects/django-closuretree/badge/?version=latest\n   :target: http://django-closuretree.readthedocs.org/en/latest/\n   :alt: Documentation Status\n.. image:: https://coveralls.io/repos/ocadotechnology/django-closuretree/badge.svg\n   :target: https://coveralls.io/r/ocadotechnology/django-closuretree\n   :alt: Test Coverage\n.. image:: https://pypip.in/v/django-closuretree/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/django-closuretree/\n   :alt: Version Badge\n.. image:: https://pypip.in/license/django-closuretree/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/django-closuretree/\n   :alt: License Badge\n\n\n``django-closuretree`` is an implementation of the `closure tree <http://homepages.inf.ed.ac.uk/libkin/papers/tc-sql.pdf>`_ technique for `Django <https://djangoproject.com>`_ applications designed to provide efficient querying of `tree-based structures <http://en.wikipedia.org/wiki/Tree_%28data_structure%29>`_ in a relational database. Its goal is to reduce the number of queries required when querying the children or parents of a given object.\n\nGiven the following model:\n\n.. code-block:: python\n\n    class Node(models.Model):\n        name = models.CharField(max_length=24)\n        parent = models.ForeignKey('self', related_name='children')\n\nThe children of each model can be queried with:\n\n.. code-block:: python\n\n    Node.objects.get(name='A').children.all()\n\nHowever, for recursive lookups, this results in a large number of queries. Instead, ``django-closuretree`` allows you to extract them all in one go:\n\n.. code-block:: python\n\n    from closuretree.models import ClosureModel\n\n    class Node(ClosureModel):\n        name = models.CharField(max_length=24)\n        parent = models.ForeignKey('self', related_name='children')\n\n    Node.objects.get(name='A').get_descendants()\n\nA single query will obtain all the descendants.\n\n===========\nQuick Start\n===========\n\n* Install ``django-closuretree`` with ``pip install django-closuretree``.\n* Inherit your models from ``closuretree.models.ClosureModel`` instead of ``django.db.models.Model``.\n\nThat's it. You can now use ``get_descendants()`` and ``get_ancestors()`` on a model instance.\n\nIf you're adding this to an existing application that already has data in the database, you'll need to run the ``rebuildtable()`` method of each model before the closure tree will be populated with the existing data:\n\n.. code-block:: python\n\n    Node.rebuildtable()\n\n============\nContributing\n============\n\nTo contribute, fork the repo, do your work, and issue a pull request. We ask that contributors adhere to `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_ standards, and include full tests for all their code.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ocadotechnology/django-closuretree/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-closuretree",
    "package_url": "https://pypi.org/project/django-closuretree/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-closuretree/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/ocadotechnology/django-closuretree/"
    },
    "release_url": "https://pypi.org/project/django-closuretree/1.1.7/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Efficient tree-based datastructure for Django",
    "version": "1.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3309799,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "caa2c4fe26e5538587c80582f31919a5722ffe79cc37465f5f9df7ff6a5bb9e6",
        "md5": "eef21c762b73495dceea01ec8ed54520",
        "sha256": "738292f18932947140183e4de3c13875f5306af539bb56d9486c58dd048a392a"
      },
      "downloads": -1,
      "filename": "django_closuretree-1.1.7-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "eef21c762b73495dceea01ec8ed54520",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 11157,
      "upload_time": "2015-07-02T08:47:26",
      "upload_time_iso_8601": "2015-07-02T08:47:26.632896Z",
      "url": "https://files.pythonhosted.org/packages/ca/a2/c4fe26e5538587c80582f31919a5722ffe79cc37465f5f9df7ff6a5bb9e6/django_closuretree-1.1.7-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c504a631ecc4e88e8f810f8111bcb074ba1afacc1f51c72cac793ee93b25dee",
        "md5": "4086ad29766defd4b018eafb9effe59b",
        "sha256": "11e619a308a8fecd1de7131bef3d2e0708b6c5bdc2f669e11909743017ac0406"
      },
      "downloads": -1,
      "filename": "django_closuretree-1.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4086ad29766defd4b018eafb9effe59b",
      "packagetype": "bdist_wheel",
      "python_version": "3.2",
      "requires_python": null,
      "size": 11155,
      "upload_time": "2015-07-02T08:47:45",
      "upload_time_iso_8601": "2015-07-02T08:47:45.226426Z",
      "url": "https://files.pythonhosted.org/packages/0c/50/4a631ecc4e88e8f810f8111bcb074ba1afacc1f51c72cac793ee93b25dee/django_closuretree-1.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1171deb528d1cd71b9c19289ef324ab35d709c71b752f74d20690f0890607e32",
        "md5": "0ee493e250ce483bd7faa7c426ed0daa",
        "sha256": "e73f305d937fda68a3952ed407c2bdc7ea0cd331251ccf773c4f4cf317a6363a"
      },
      "downloads": -1,
      "filename": "django-closuretree-1.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "0ee493e250ce483bd7faa7c426ed0daa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11839,
      "upload_time": "2015-07-02T08:47:30",
      "upload_time_iso_8601": "2015-07-02T08:47:30.022435Z",
      "url": "https://files.pythonhosted.org/packages/11/71/deb528d1cd71b9c19289ef324ab35d709c71b752f74d20690f0890607e32/django-closuretree-1.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}