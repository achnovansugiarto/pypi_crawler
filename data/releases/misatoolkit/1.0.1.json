{
  "info": {
    "author": "ZHIHE ZHAO",
    "author_email": "zhaozhihe98@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Medical Image Subregion Analysis Toolkit (MISAToolkit) \n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/17007301/219617294-a5f38b07-4599-4834-aa7c-96d01299a531.png\" width=\"600\" height=\"300\">\n</p>\n\n|Build/Test Status|Code Status|Documentation|\n| :---------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------: |\n| [![](https://travis-ci.org/modelhub-ai/modelhub-engine.svg?branch=master)](https://travis-ci.org/modelhub-ai/modelhub-engine) | [![Coverage Status](https://coveralls.io/repos/github/modelhub-ai/modelhub-engine/badge.svg?branch=master&service=github)](https://coveralls.io/github/modelhub-ai/modelhub-engine?branch=master) | [![Documentation Status](https://readthedocs.org/projects/modelhub/badge/?version=latest)](https://modelhub.readthedocs.io/en/latest/?badge=latest) |\n\n### Welcome to Medical Image Subregion Analysis Toolkit (MISAToolkit) package.\n\nMISAToolkit is a Python package, which aims for tumor subregion and surrounding microenvironment analysis in cancer domain by medical imaging data, such as CT, PET, MRI and US. Note that, MISAToolkit is not only developed for 3D medical data, but also for 2D medical data (e.g., US or single 2D slice). \n\nMISAToolkit is designed and developed by Zhenwei Shi, Zhihe Zhao and other AI/CS scientists from Media Lab. Also, the work is supported and guided by well-known radiologists MD Zaiyi Liu and MD Changhong Liang from the radiolgoy department of Guangdong Provincial People's Hospital.\n\nThe workflow of MISAToolkit includes five major functionalities:\n- Data pre-processing\n- Subregion pre-segmentation\n- Clustering in population-level\n- Intra-tumoral heterogeneity assessment\n- Tumor delineation contour perturbation\n\n### Installation\n\n```\npip install MISAToolkit\n```\n### Features\n\n- Medical image data pre-processing, including data load, crop, normalization and so on.\n- Automatic generation of multiple regions of interest surrounding tumor, such as peritumor and tumor ring\n- Subregion pre-segmentation by image properties\n- Quantitative imaging feature (e.g., Radiomics) extraction\n- Unsupervised clustering algorithms for untimate medical image subregion partition\n- Visualiation of multi-partitions\n- Intra-tumoral heterogeneity assessment by anlyzing intra-tumor and surronding microenviourment regions\n- Tumor delineation contour perturbation\n\n\n### Tutorial\n\n#### 1. Package Loading\n\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os \nfrom MISAToolkit.function import makedirs, extract_main, feature_extract_main, cluster_main, cluster_main_predict\n```\n\n#### 2. Parameter Setting\nSome local directories are set before processing, including main workding directory, image and mask directory, output directory, and also parameter setting directory for quantitative imaging feature extraction. Note that, MISAToolkit uses an open-source software [PyRadiomics](https://pyradiomics.readthedocs.io/en/latest/) to extract radiomic features as default, while the clients are allowed to use any other kinds of features. For radiomics extraction, the clients can download the parameter setting file (.ymal) for simulation from [MISAToolkit](https://github.com/zhenweishi/MISA).\n\n```sh\n# set local paths\ndataset_path = 'dataset'\nimage_path = dataset_path+'/image'\nmask_path = dataset_path+'/mask'\nout_path = 'subregion_SLIC_output/SuperVoxel'\nyaml_path = 'radiomics_features.yaml'\nsv_path = os.path.join(out_path,'supervoxel')\ncsv_path = os.path.join(out_path,'csv')\nconcat_path = os.path.join(out_path, 'concat_mask')\n\n# make local paths\nmakedirs(sv_path)\nmakedirs(csv_path)\nmakedirs(concat_path)\n\n```\n\nMISAToolkit provides a functionality to automatically generate multiple regions of interest (ROI) surrounding tumor, whcih are able to describe tumor microenvironment, such as peritumor and tumor ring. The clients can change the size of the peritumor or tumor ring area by modifying the kernel_size parameter, and select the subregion processing mode: 'initial (default as original tumor)', 'peritumor', 'tumor ring'.\n\n```sh\nmode = 'peritumor' # 'initial','peritumor','tumor_ring'\nkernel_size = 3\n```\n#### 3. Pre-segmentation of subregions\n\nMISAToolkit follows a two-step subregion segmentation strategy, that is, pre-segmentation and fine subregion partition. In the pre-segmentation step, it splits the whole ROI in pieces by taking into account image properties itself, of which the number depends on the surface/volume of the ROI. To preserve enough information for feature extraction later, MISAToolkit suggests not to split the individual pre-segments too small. Some examples with pre-segmented subregion  maps are shown as follows.\n\n```sh\nextract_main(image_path, mask_path, sv_path, out_path, mode, kernel)\n```\n\n![pre-segmentation](https://user-images.githubusercontent.com/17007301/219617436-37cf7a37-de46-4574-bcd2-0c070c7dfecd.png)\n\n\n#### 4. Quantitative imaging feature extraction\n\nMISAToolkit uses radiomic feature as the default quantiative imaging feature. In this step, MISAToolkit is able to extract radiomics from the small regions aquired above. Also, the clients are allowed to use other kinds of features, such as deep learning and handcraft features.\n\n```sh\nfeature_extract_main(sv_path, csv_path,yaml_path)\n```\n\n#### 5. Generation of subregion partition map\n\nMISAToolkit provides a function to cluster the small pre-segmented regions by analyzing the imaging features, which can gether the small regions with similar properties. Some examples with final subregion partition maps are shown as follows.\n\n\n```sh\ncluster_main(image_path, csv_path, sv_path, concat_path, out_path)\n```\n\n![Concat_subregionmap](https://user-images.githubusercontent.com/17007301/219617647-edd8599e-2299-47e1-bd4f-21028f1136e6.png)\n\n### License\n\nMISAToolkit package is freely available to browse, download, and use for scientific and educational purposes as outlined in the [Creative Commons Attribution 3.0 Unported License](https://creativecommons.org/licenses/by/3.0/).\n\n### Disclaimer\n\nMISAToolkit is still under development. Although we have tested and evaluated the workflow under many different situations, it may have errors and bugs unfortunately. Please use it cautiously. If you find any, please contact us and we would fix them ASAP.\n\n### Main Developers\n - [Dr. Zhenwei Shi](https://github.com/zhenweishi) <sup/>1, 2\n - MSc. Zhihe Zhao <sup/>2, 3\n - MSc. Zihan Cao <sup/>2, 4\n - MD. Xiaomei Huang <sup/>2, 5\n - [Dr. Chu Han](https://chuhan89.com) <sup/>1, 2\n - MD. Changhong Liang <sup/>1, 2\n - MD. Zaiyi Liu <sup/>1, 2\n \n\n<sup>1</sup> Department of Radiology, Guangdong Provincial People's Hospital (Guangdong Academy of Medical Sciences), Southern Medical University, China <br/>\n<sup>2</sup> Guangdong Provincial Key Laboratory of Artificial Intelligence in Medical Image Analysis and Application, China <br/>\n<sup>3</sup> School of Medicine, South China University of Technology, China <br/>\n<sup>4</sup> Institute of Computing Science and Technology, Guangzhou University, China <br/>\n<sup>5</sup> Department of Medical Imaging, Nanfang Hospital, Southern Medical University, China \n\n### Contact\nWe are happy to help you with any questions. Please contact Zhenwei Shi.\nEmail: shizhenwei@gdph.org.cn\n\nWe welcome contributions to MISAToolkit.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MISAToolkit",
    "package_url": "https://pypi.org/project/MISAToolkit/",
    "platform": null,
    "project_url": "https://pypi.org/project/MISAToolkit/",
    "project_urls": {
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/MISAToolkit/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A test package",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17010223,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36167d10867f61470a69a9a449acc197ed7701f91c5b854c7515a16b806d392a",
        "md5": "055bc4c6d6b88e7797e07d3a934c9697",
        "sha256": "a616fead72200b26622d6b58aebfd30cf72dfd5d8d30e775721fb93139b99d38"
      },
      "downloads": -1,
      "filename": "MISAToolkit-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "055bc4c6d6b88e7797e07d3a934c9697",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8402,
      "upload_time": "2023-02-20T06:41:12",
      "upload_time_iso_8601": "2023-02-20T06:41:12.562177Z",
      "url": "https://files.pythonhosted.org/packages/36/16/7d10867f61470a69a9a449acc197ed7701f91c5b854c7515a16b806d392a/MISAToolkit-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}