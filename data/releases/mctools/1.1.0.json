{
  "info": {
    "author": "Owen Cochell",
    "author_email": "owencochell@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Minecraft Connection Tools\nA python implementation for interacting with Minecraft servers.\n\n[![Documentation Status](https://readthedocs.org/projects/mctools/badge/?version=latest)](https://mctools.readthedocs.io/en/latest/?badge=latest)\n\n# Introduction\n\nmctools allows you to interact with Minecraft servers via [rcon](https://wiki.vg/RCON), \n[query](https://wiki.vg/Query), and [server list ping protocol](https://wiki.vg/Server_List_Ping).\n\nThis allows you to do the following:\n\n - Send and receive Minecraft server commands\n - Get player count(max and currently playing)\n - Get server version\n - Get the message of the day\n - Get currently installed plugins\n - And much more!\n\nAll of this can be achieved using simple, intuitive calls to mctools. mctools does all the heavy lifting for you!\nAlso, mctools has no external dependencies(Unless you are a windows user and need color support),\nand only uses the python standard library. Just download and go!\n\n# Example\n\nSend a command to the Minecraft server via rcon:\n```python\nfrom mctools import RCONClient  # Import the RCONClient\n\nHOST = 'mc.server.net'  # Hostname of the Minecraft server\nPORT = 1234  # Port number of the RCON server\n\n# Create the RCONClient:\n\nrcon = RCONClient(HOST, port=PORT)\n\n# Login to RCON:\n\nif rcon.login(\"password\"):\n\n    # Send command to RCON - broadcast message to all players:\n\n    resp = rcon.command(\"broadcast Hello RCON!\")\n```\n # Installation \n\n You can install mctools via pip:\n\n    $ pip install mctools\n\n If you are a windows user and want color support, then install mctools like so:\n\n    $ pip install mctools[color]\n\n For more information on installing mctools, check out the instillation section in our \n [documentation](https://mctools.readthedocs.io/en/latest/install.html).\n\n # Formatting\n\n mctools has support for handling Minecraft formatting codes. \n You can decide weather mctools replaces formatting characters with intended values, removes them, or leaves them be.\n\n For example, lets say you received the following content during a rcon session:\n\n    §e--------- §fHelp: Index (1/40) §e--------------------\n    §7Use /help [n] to get page n of help.\n    §6Aliases: §fLists command aliases\n    §6Bukkit: §fAll commands for Bukkit\n    §6ClearLag: §fAll commands for ClearLag\n    §6Essentials: §fAll commands for Essentials\n    §6LuckPerms: §fAll commands for LuckPerms\n    §6Minecraft: §fAll commands for Minecraft\n    §6Vault: §fAll commands for Vault\n    §6WorldEdit: §fAll commands for WorldEdit\n\n As you can see, this text is somewhat hard to read. If you told mctools to remove the formatting characters, \n then the output will look like this:\n\n    --------- Help: Index (1/40) --------------------\n    Use /help [n] to get page n of help.\n    Aliases: Lists command aliases\n    Bukkit: All commands for Bukkit\n    ClearLag: All commands for ClearLag\n    Essentials: All commands for Essentials\n    LuckPerms: All commands for LuckPerms\n    Minecraft: All commands for Minecraft\n    Vault: All commands for Vault\n    WorldEdit: All commands for WorldEdit\n\n Much easier to read and process. mctools handles this operation automatically, so you don't have to.\n mctools also handles situations where content is sent in ChatObject notation, and can extract messages from the \n player sample list.\n\n To learn more about formatters, and how to create your own, \n then please check out the [formatting documentation](https://mctools.readthedocs.io/en/latest/format.html).\n\n # MCLI - mctools Command Line Interface\n\n mctools is shipped with a CLI front end called mcli, which you can use to start rcon sessions, get stats\n via query/ping, check if a Minecraft server is up, ect. \n\n After installing mctools(through pip or setuptools), you can invoke mcli like so:\n\n    $ mcli --help\n\n You can also run mcli.py(which is located in the parent directory) if you downloaded the source code and did not\n install via pip/setuptools.\n\n The above command will generate the help menu for mcli. To learn more about mcli, please check out the \n [mcli documentation](https://mctools.readthedocs.io/en/latest/mcli.html).\n\n # Documentation\n\n mctools has an extensive documentation. It contains tutorials, the API reference, and best practice recommendations.\n You can find the [documentation here](https://mctools.readthedocs.io/).\n\n Be sure to also check out the [mctools PyPi page](https://pypi.org/project/mctools/) for more information.\n\n # Contributing\n\n Pull requests are welcome and encouraged :) ! If you want to see a feature in mctools, a PR will be the quickest \n way to get it included. Feel free to email me or open an issue if you have any problems.\n\n If you are interested in helping in the development of mctools, then send me an email, and we can get talking!\n Believe me, there is plenty of work that needs to be done. More help would be greatly appreciated!\n\n # Changelog\n\n ## 1.1.0\n\n This update adds some minor features and fixes some major bugs:\n\n  ### Bug Fixes:\n\n - Fixed RCON packet fragmentation issue, mctools should now properly detect and handle RCON packet fragmentation\n - Fixed bug where PINGFormatter was looking for 'dark_grey' instead of 'dark_gray'\n - Fixed bug where ChatObjectFormatter did not properly parse ChatObjects\n - We now raise an exception if the RCON write data is too big, instead of leaving the connection in a unstable state\n\n  ### Features Added:\n\n - Users can now specify the format method on a per-call basis\n - Users can change the timeout value after the object is instantiated\n - The RCON login check feature can be disabled, meaning that you can attempt to send packets\n even if you are not authenticated\n - Clients can now return raw packets\n - RCON now has custom exceptions\n\n This update is a prelude to another update I have working on.\n The next update will add numerous features, such as:\n\n - RCON Mixins for easing the process of getting/editing the following info:\n   - Players connected\n   - World Seed\n   - Game Rules\n   - Target Selectors\n   - Many more...\n - Custom exceptions for Ping and Query\n - Even Better error handling\n - mcli RCON command/argument autocompletion\n - Custom datatypes for all operations\n - RCON SSH Forwarding support\n (You can technically do this as of now, but I want the library to invoke and handle this process) for a more\n secure RCON experience\n - Unit tests for mctools\n\n I have some of these complete as of now, but I wanted to push out the big bug fixes and minor stuff before \n I finish creating and refining the features, as they may take me some time to implement.\n\n All of these features will be completely optional, and they will all be backwards compatible.\n So if you like the library as it is now, then you can completely ignore these new features.\n\n The documentation has been updated to reflect these changes.\n\n # Conclusion\n\n mctools offers a pythonic, reliable way to interact with Minecraft servers, without being too complicated.\n Please check the documentation for more information. More features (hopefully) coming soon!\n\n Thank you for reading!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Owen-Cochell/mctools",
    "keywords": "minecraft,rcon,query,ping,server list ping",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mctools",
    "package_url": "https://pypi.org/project/mctools/",
    "platform": "",
    "project_url": "https://pypi.org/project/mctools/",
    "project_urls": {
      "Bug Reports": "https://github.com/Owen-Cochell/mctools/issues",
      "Documentation": "https://mctools.readthedocs.io/",
      "Homepage": "https://github.com/Owen-Cochell/mctools",
      "Source": "https://github.com/Owen-Cochell/mctools"
    },
    "release_url": "https://pypi.org/project/mctools/1.1.0/",
    "requires_dist": [
      "colorama ; extra == 'color'"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Python implementations of common Minecraft protocols.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14770779,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31d14bf6143ecc8025c8405c40f04e9e7d5e03d43972be28d902e35d25b56d59",
        "md5": "c828e1963e9dc9e15db03ced8e7b7fad",
        "sha256": "5962092c17190589459d5be3bf1ec506bdb6261d2da1bd9795d3b592938c8612"
      },
      "downloads": -1,
      "filename": "mctools-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c828e1963e9dc9e15db03ced8e7b7fad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 30153,
      "upload_time": "2020-09-09T15:29:46",
      "upload_time_iso_8601": "2020-09-09T15:29:46.697287Z",
      "url": "https://files.pythonhosted.org/packages/31/d1/4bf6143ecc8025c8405c40f04e9e7d5e03d43972be28d902e35d25b56d59/mctools-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06366a39472d15f8f37ae7d0522c6f7c8b2d17e24fce854fc8cb375a773e53a5",
        "md5": "d720d505f6ce123e1a2d5ba3f7f127d6",
        "sha256": "a929e30fd08f2a79a9abda6abc25ca6fbf7ca4e6789bf52fcd55c6c0a430f401"
      },
      "downloads": -1,
      "filename": "mctools-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d720d505f6ce123e1a2d5ba3f7f127d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 32936,
      "upload_time": "2020-09-09T15:29:47",
      "upload_time_iso_8601": "2020-09-09T15:29:47.949817Z",
      "url": "https://files.pythonhosted.org/packages/06/36/6a39472d15f8f37ae7d0522c6f7c8b2d17e24fce854fc8cb375a773e53a5/mctools-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}