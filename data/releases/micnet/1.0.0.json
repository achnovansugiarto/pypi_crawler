{
  "info": {
    "author": "Natalia Favila, David Madrigal-Trejo, Daniel Legorreta",
    "author_email": "natalia.favila.v@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Education",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![GitHub license](https://img.shields.io/github/license/hamelsmu/code_search.svg)]()\n[![Python 3.9.6](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-396/)\n\n# *MicNet Toolbox: visualizing and deconstructing a microbial network* \n\n## Introduction\n\nThis project contains a set of tools to detect, analyze and visualize microbial interaction networks from compositional data. The main objective was to implement different tools of the different algorithms to reconstruct, analyze and visualize a co-ocurrence network with microbial interactions. For that, we use standard algorithms for compositional data processing (SparCC), Network or Graphics Algorithms and Umap Algorithms.\n\n tini change\n\nThis project is part of the collaborative research between Ixulabs and the Laboratory of Experimental and Molecular Evolution, Institute of Ecology, UNAM.\n\n* [Laboratory of Experimental and Molecular Evolution, Instituto de EcologÃ­a, UNAM](http://web2.ecologia.unam.mx/perfiles/perfil.php?ID=1237852985093)\n\n* [Ixulabs](https://ixulabs.com/)\n\n\n## Project Overview\n---\n\nThe project is divided into three parts:\n* Visualization\n* SparCC\n* Network Algorithms\n\n**Note:** Each package has a REAME.md file with a specific description of how the code works. \n\n### [Visualization](https://umap-learn.readthedocs.io/en/latest/clustering.html)\n\nCompositional data cannot be processed or worked like normal data, it has particular geometric and statistical properties. Using different transformations (Dirichlet transformation, Normalization or CLR) and the original data we estimate a mapping through the UMAP algorithm to the Hyperbolic Space. This to have a visualization of the data and its possible interactions. Furthermore, through the HDBSCAN algorithm we detect clusters based on density and which points are possible outliers and noise.\n\n### [SparCC](sparcc/README.md)\n \n This algorithm is standard for estimating correlation values from compositional data, in order to infer the network's connections. We made several modifications to the \n [original version of the algorithm\n ](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002687) to improve the ability to process large samples of data. Part of the stages were parallelized and the execution of the algorithm and its statistical tests were better controlled. To run this on your local please refer to the README.md in the sparcc folder.\n\n### [Network Algorithms](network_alg/README.md)\n\nNetwork analyses were used to characterise both the overall structure and the local interactions of the microbial network, in which each OTU was represented as a node and the correlations found by SparCC as undirected weighted edges, such that an edge between two nodes implies a relationship between the two corresponding OTUs. Given that most network analyses can only handle positive interactions, we normalized the SparCC correlation matrix from -1 to 1 to a range from 0 to 1, except for the structural balance analysis which directly uses the positive and negative correlation values. The dashboard includes the calculation of large scale metrics of the network, structural balance analysis and community/HDBSCAN subnetwork analysis. To run percolation analysis and topology comparison please refer to the README.md in the network_alg folder.\n\n\n## Local use\nIf you do not wish to use the web app of MicNet which has limited capacity, and you would prefer using **your own computer disk and RAM resources**, all you have to do is follow these steps. To do this, you must first have the *conda* package manager installed. If you do not have it installed, we recommend that you install the miniconda or anaconda packages. You can find the instructions to install it at this link:\n\n[Miniconda](https://docs.conda.io/en/latest/miniconda.html)\n\n[Anaconda](https://www.anaconda.com/products/individual)\n\nOnce you have conda working on your computer the process is the following:\n\n1. First be sure to be situated in the MicNet repository folder that you have clone into your computer. Then, the first step to run the dashboard is to create the environment, thus, first you must run the following code in the command line or terminal:\n\n    ~~~bash\n    conda env create -f environment.yml \n    ~~~\n\n    Be sure to check if the environment was created by typing in your command line the following:\n\n    ~~~bash\n    conda env list \n    ~~~\n\n    You should see MicNet-env listed among your environments.\n\n2. If the MicNet-env environment is in the list, you then need to activate it using the following code:\n\n    ~~~bash\n    conda activate  MicNet-env\n    ~~~\n\n3. Finally, you just need to run the following code to get started with micnet:\n\n    ~~~bash\n    pip install micnet\n    ~~~\n\n## Data Details\n\nAs validation data, we use the Kombucha data set described in [Arikan et al., (2020)](https://onlinelibrary.wiley.com/doi/full/10.1111/1750-3841.14992). .All data can be find in the folder named \"Data\". The \"Kombucha_abundance_table.txt\" can be used as input to run the UMAP/HDBSCAN and SparCC modules. We have also included the co-occurence matrix (\"Kombucha_Sparcc_matrix.csv\") and the HDBSCAN output file (\"Kombucha_HDBSCAN.csv\") which can be used as input to test the network module. The kombucha example can be easily inspected using the web dashboard at [MicNet dashboard](http://micnetapplb-1212130533.us-east-1.elb.amazonaws.com).\n\nYou can load this data with function **micnet.load_kombucha()** and follow the notebook available at our (github repository)[https://github.com/Labevo/MicNetToolbox/blob/master/notebooks/Kombucha_demo.ipynb]\n\n## Licenses\n[MIT License](LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micnet",
    "package_url": "https://pypi.org/project/micnet/",
    "platform": "",
    "project_url": "https://pypi.org/project/micnet/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/micnet/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Toolbox for the visualization and analysis of microbial datasets",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12805172,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c9fc801adc8dda4119a72a641ae08a0fac55aa7268f54fdebe856785f3c2eae",
        "md5": "116713ecc4c84ab061c50d2cf731546a",
        "sha256": "9ed36b303bbb1aaadd73239a2461120259553024f9bd461d2ea04abe9ea2a017"
      },
      "downloads": -1,
      "filename": "micnet-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "116713ecc4c84ab061c50d2cf731546a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 49144,
      "upload_time": "2022-02-06T20:28:15",
      "upload_time_iso_8601": "2022-02-06T20:28:15.408286Z",
      "url": "https://files.pythonhosted.org/packages/6c/9f/c801adc8dda4119a72a641ae08a0fac55aa7268f54fdebe856785f3c2eae/micnet-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa91f3102c96e8c834179cbf33514e9055139568615316ce0e1a661fe8d84bab",
        "md5": "13e230ae6f9743231dc74105d495870d",
        "sha256": "8af444f5dec4017e28e38baa85bf5c3a53cb208f6adc120e7b8d323ea5b961a4"
      },
      "downloads": -1,
      "filename": "micnet-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "13e230ae6f9743231dc74105d495870d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42465,
      "upload_time": "2022-02-06T20:28:16",
      "upload_time_iso_8601": "2022-02-06T20:28:16.909002Z",
      "url": "https://files.pythonhosted.org/packages/aa/91/f3102c96e8c834179cbf33514e9055139568615316ce0e1a661fe8d84bab/micnet-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}