{
  "info": {
    "author": "DigitalStoreMesh Co.,Ltd",
    "author_email": "contact@storemesh.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# DSM Library\n\n## DataNode\n0. init DataNode\n```python\nfrom dsmlibrary.datanode import DataNode \n\ndata = DataNode(token)\n```\n1. upload file\n```python\ndata.upload_file(directory_id=<directory_id>, file_path='<file_path>', description=\"<description(optional)>\")\n```\n\n2. download file\n```python\ndata.download_file(file_id=<file_id>, download_path=\"<place download file save> (default ./dsm.tmp)\")\n```\n3. get file\n```python\nmeta, file = get_file(file_id=\"<file_id>\")\n# meta -> dict\n# file -> io bytes\n```\n```python\n# example read csv pandas\n \nmeta, file = get_file(file_id=\"<file_id>\")\ndf = pd.read_csv(file)\n...\n``` \n\n4. write parquet file\n```python\ndf = ... # pandas dataframe or dask dataframe\n\ndata.write(df=df, directory=<directory_id>, name=<save_file_name>, profiling=<True or False default False>)\n```\n\n## Clickhouse\n1. imoprt data to clickhouse\n\n```python\nfrom dsmlibrary.clickhouse import ClickHouse\n\nddf = ... # pandas dataframe or dask dataframe\n\n## to warehouse\ntable_name = <your_table_name>\ntable_key = <your_table_key>\n\nconnection = { \n  'host': '', \n  'port': , \n  'database': '', \n  'user': '', \n  'password': '', \n  'settings':{ \n     'use_numpy': True \n  }, \n  'secure': False \n}\n\nwarehouse = ClickHouse(connection=connection)\n\ntableName = warehouse.get_or_createTable(ddf=ddf, tableName=table_name, key=table_key)\nwarehouse.write(ddf=ddf, tableName=tableName, key=table_key)\n```\n\n2. query data from clickhouse\n```python\nquery = f\"\"\" \n    SELECT * FROM {tableName} LIMIT 10 \n\"\"\" \nwarehouse.read(sqlQuery=query)\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/public-project2/dsm-library",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dsmlibrary",
    "package_url": "https://pypi.org/project/dsmlibrary/",
    "platform": null,
    "project_url": "https://pypi.org/project/dsmlibrary/",
    "project_urls": {
      "Homepage": "https://gitlab.com/public-project2/dsm-library"
    },
    "release_url": "https://pypi.org/project/dsmlibrary/1.0.12/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple way to use Dataset. for dsm",
    "version": "1.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17413320,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9be5588d244b960e5a0e336273a9f234771e66b54e5e9d343448017ca439190a",
        "md5": "c272b8b8cb08cf940ace0d38fea67cba",
        "sha256": "bd528a4e86fa833722fd728d272258c7a2510c89c3c0ed799c52a71dff1ee894"
      },
      "downloads": -1,
      "filename": "dsmlibrary-1.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "c272b8b8cb08cf940ace0d38fea67cba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9478,
      "upload_time": "2022-09-05T05:13:14",
      "upload_time_iso_8601": "2022-09-05T05:13:14.016191Z",
      "url": "https://files.pythonhosted.org/packages/9b/e5/588d244b960e5a0e336273a9f234771e66b54e5e9d343448017ca439190a/dsmlibrary-1.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}