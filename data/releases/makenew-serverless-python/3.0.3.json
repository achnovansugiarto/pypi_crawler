{
  "info": {
    "author": "Evan Sosenko",
    "author_email": "razorx@evansosenko.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "Serverless Python Project Skeleton\n==================================\n\n|PyPI| |GitHub Actions|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/makenew-serverless-python.svg\n   :target: https://pypi.python.org/pypi/makenew-serverless-python\n   :alt: PyPI\n.. |GitHub Actions| image:: https://github.com/makenew/serverless-python/workflows/main/badge.svg\n   :target: https://github.com/makenew/serverless-python/actions\n   :alt: GitHub Actions\n\nPackage skeleton for a Python Serverless project on AWS Lambda.\n\nDescription\n-----------\n\nBootstrap a new Python_ Serverless project in five minutes or less.\n\n.. _Python: https://www.python.org/\n\nFeatures\n~~~~~~~~\n\n- Deploy to `AWS Lambda`_ under a `custom domain`_ with Serverless_.\n- Publishing to PyPI_.\n- Secure dependency management with Poetry_.\n- Linting with Pylint_.\n- Uncompromising code formatting with Black_.\n- pytest_ helps you write better programs.\n- Code coverage reporting with Codecov_.\n- Continuous testing and deployment with `GitHub Actions`_.\n- `Keep a CHANGELOG`_.\n- Consistent coding with EditorConfig_.\n- Badges from Shields.io_.\n\n.. _AWS Lambda: https://aws.amazon.com/lambda/\n.. _Black: https://black.readthedocs.io/en/stable/\n.. _Codecov: https://codecov.io/\n.. _EditorConfig: https://editorconfig.org/\n.. _GitHub Actions: https://github.com/features/actions\n.. _Keep a CHANGELOG: https://keepachangelog.com/\n.. _PyPI: https://pypi.python.org/pypi\n.. _Pylint: https://www.pylint.org/\n.. _Serverless: https://serverless.com/\n.. _Shields.io: https://shields.io/\n.. _custom domain: https://github.com/amplify-education/serverless-domain-manager\n.. _pytest: https://docs.pytest.org/\n\nBootstrapping a New Project\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Create an empty (**non-initialized**) repository on GitHub.\n2. Clone the master branch of this repository with\n\n   ::\n\n       $ git clone --single-branch https://github.com/makenew/serverless-python.git new-serverless-python\n       $ cd new-serverless-python\n\n   Optionally, reset to the latest\n   `release <https://github.com/makenew/serverless-python/releases>`__ with\n\n   ::\n\n       $ git reset --hard v1.2.0\n\n3. Run\n\n   ::\n\n       $ ./makenew.sh\n\n   This will replace the boilerplate, delete itself,\n   remove the git remote, remove upstream tags,\n   and stage changes for commit.\n\n4. Create the required GitHub repository secrets\n5. Review, commit, and push the changes to GitHub with\n\n   ::\n\n     $ git diff --cached\n     $ git commit -m \"Replace makenew boilerplate\"\n     $ git remote add origin git@github.com:<user>/<new-serverless-python>.git\n     $ git push -u origin master\n\n6. Ensure the GitHub action passes,\n   then publish the initial version of the package with\n\n   ::\n\n     $ poetry install\n     $ poetry run bump2version patch\n     $ git push\n     $ git push --tags\n\n7. Ensure a valid certificate exists in `AWS Certificate Manager`_\n   that matches the custom deployment domains,\n   e.g., this project uses a wildcard certificate for\n   ``*.serverless-python.makenew.razorx.app``.\n   Then trigger a deploy to the test stage with\n\n   ::\n\n     $ npm install\n     $ npm run release:test\n\n.. _AWS Certificate Manager: https://aws.amazon.com/certificate-manager/\n\nUpdating\n~~~~~~~~\n\nIf you want to pull in future updates from this skeleton,\nyou can fetch and merge in changes from this repository.\n\nAdd this as a new remote with\n\n::\n\n    $ git remote rename origin upstream\n\nand then configure your ``origin`` branch as normal.\n\nOtherwise, add this as a new remote with\n\n::\n\n    $ git remote add upstream git@github.com:makenew/serverless-python.git\n\nYou can then fetch and merge changes with\n\n::\n\n    $ git fetch --no-tags upstream\n    $ git merge upstream/master\n\nChangelog\n^^^^^^^^^\n\nNote that ``CHANGELOG.md`` is just a template for this skeleton. The\nactual changes for this project are documented in the commit history and\nsummarized under\n`Releases <https://github.com/makenew/serverless-python/releases>`__.\n\nInstallation\n------------\n\nThis package is registered on the `Python Package Index (PyPI)`_\nas makenew_serverless_python_.\n\nInstall it with\n\n::\n\n    $ poetry add makenew_serverless_python\n\n.. _makenew_serverless_python: https://pypi.python.org/pypi/makenew-serverless-python\n.. _Python Package Index (PyPI): https://pypi.python.org/\n\nDevelopment and Testing\n-----------------------\n\nQuickstart\n~~~~~~~~~~\n\n::\n\n    $ git clone https://github.com/makenew/serverless-python.git\n    $ cd serverless-python\n    $ poetry install\n\nRun each command below in a separate terminal window:\n\n::\n\n    $ make watch\n\nPrimary development tasks are defined in the `Makefile`.\n\nSource Code\n~~~~~~~~~~~\n\nThe `source code`_ is hosted on GitHub.\nClone the project with\n\n::\n\n    $ git clone https://github.com/makenew/serverless-python.git\n\n.. _source code: https://github.com/makenew/serverless-python\n\nRequirements\n~~~~~~~~~~~~\n\nYou will need `Python 3`_ and Poetry_ and Node.js_ with npm_.\nTo run some Serverless commands you will need Docker_.\n\nInstall the development dependencies with\n\n::\n\n    $ poetry install\n    $ npm install\n\n.. _Docker: https://www.docker.com/\n.. _Node.js: https://nodejs.org/\n.. _npm: https://www.npmjs.com/\n.. _Poetry: https://poetry.eustace.io/\n.. _Python 3: https://www.python.org/\n\nTests\n~~~~~\n\nLint code with\n\n::\n\n    $ make lint\n\n\nRun tests with\n\n::\n\n    $ make test\n\nRun tests on chages with\n\n::\n\n    $ make watch\n\nPublishing\n~~~~~~~~~~\n\nUse the bump2version_ command to release a new version.\nPush the created git tag which will trigger a GitHub action.\n\n.. _bump2version: https://github.com/c4urself/bump2version\n\nPublishing may be triggered using on the web\nusing a `workflow_dispatch on GitHub Actions`_.\n\n.. _workflow_dispatch on GitHub Actions: https://github.com/makenew/serverless-python/actions?query=workflow%3Aversion\n\nGitHub Actions\n--------------\n\n*GitHub Actions should already be configured: this section is for reference only.*\n\nThe following repository secrets must be set on GitHub Actions.\n\n- ``PYPI_API_TOKEN``: API token for publishing on PyPI.\n- ``AWS_DEFAULT_REGION``: The AWS region Serverless will deploy to.\n- ``AWS_ACCESS_KEY_ID``: AWS access key ID.\n- ``AWS_SECRET_ACCESS_KEY``: AWS secret access key.\n- ``GH_TOKEN``: A personal access token that can trigger workflows.\n\nThese must be set manually.\n\nSecrets for Optional GitHub Actions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe version and format GitHub actions\nrequire a user with write access to the repository.\nincluding access to trigger workflows.\nSet these additional secrets to enable the action:\n\n- ``GH_USER``: The GitHub user's username.\n- ``GH_TOKEN``: A personal access token for the user.\n- ``GIT_USER_NAME``: The name to set for Git commits.\n- ``GIT_USER_EMAIL``: The email to set for Git commits.\n- ``GPG_PRIVATE_KEY``: The `GPG private key`_.\n- ``GPG_PASSPHRASE``: The GPG key passphrase.\n\n.. _GPG private key: https://github.com/marketplace/actions/import-gpg#prerequisites\n\nContributing\n------------\n\nPlease submit and comment on bug reports and feature requests.\n\nTo submit a patch:\n\n1. Fork it (https://github.com/makenew/serverless-python/fork).\n2. Create your feature branch (`git checkout -b my-new-feature`).\n3. Make changes.\n4. Commit your changes (`git commit -am 'Add some feature'`).\n5. Push to the branch (`git push origin my-new-feature`).\n6. Create a new Pull Request.\n\nLicense\n-------\n\nThis Serverless project is licensed under the MIT license.\n\nWarranty\n--------\n\nThis software is provided by the copyright holders and contributors \"as is\" and\nany express or implied warranties, including, but not limited to, the implied\nwarranties of merchantability and fitness for a particular purpose are\ndisclaimed. In no event shall the copyright holder or contributors be liable for\nany direct, indirect, incidental, special, exemplary, or consequential damages\n(including, but not limited to, procurement of substitute goods or services;\nloss of use, data, or profits; or business interruption) however caused and on\nany theory of liability, whether in contract, strict liability, or tort\n(including negligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makenew/serverless-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "makenew-serverless-python",
    "package_url": "https://pypi.org/project/makenew-serverless-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/makenew-serverless-python/",
    "project_urls": {
      "Homepage": "https://github.com/makenew/serverless-python",
      "Repository": "https://github.com/makenew/serverless-python"
    },
    "release_url": "https://pypi.org/project/makenew-serverless-python/3.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.8.6,<3.9.0",
    "summary": "Package skeleton for a Python Serverless project on AWS Lambda.",
    "version": "3.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15923135,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a07c8f7b89508a51a8e6c1cd32e765fbc0541b9bb8259fe543b036fe6ebf481",
        "md5": "74721d06ad1ea4d5db161b0e982d99f1",
        "sha256": "361243e7ad4e9985a735184cc145f7bdbfb1b5b782671f4e5531679dfc10434b"
      },
      "downloads": -1,
      "filename": "makenew_serverless_python-3.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74721d06ad1ea4d5db161b0e982d99f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.6,<3.9.0",
      "size": 25045,
      "upload_time": "2021-01-26T05:34:41",
      "upload_time_iso_8601": "2021-01-26T05:34:41.276523Z",
      "url": "https://files.pythonhosted.org/packages/5a/07/c8f7b89508a51a8e6c1cd32e765fbc0541b9bb8259fe543b036fe6ebf481/makenew_serverless_python-3.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994ebc8a13f15a1788d93ffe43522d4ec3d1f8059d1eff733a74c1ca631d0def",
        "md5": "8c2c01f73abed08fe0366a28be0fb59c",
        "sha256": "57c3271d549ae78055b715045030b02bb640aa235fcc9e0730077e9b7aff098e"
      },
      "downloads": -1,
      "filename": "makenew-serverless-python-3.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8c2c01f73abed08fe0366a28be0fb59c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.6,<3.9.0",
      "size": 28433,
      "upload_time": "2021-01-26T05:34:42",
      "upload_time_iso_8601": "2021-01-26T05:34:42.543822Z",
      "url": "https://files.pythonhosted.org/packages/99/4e/bc8a13f15a1788d93ffe43522d4ec3d1f8059d1eff733a74c1ca631d0def/makenew-serverless-python-3.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}