{
  "info": {
    "author": "Renato Alves, Christian PlÃ¼mer",
    "author_email": "bio-it@embl.de, github@kuuku.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n.. image:: https://img.shields.io/pypi/v/mattermostautodriver.svg\n    :target: https://pypi.python.org/pypi/mattermostautodriver\n\n.. image:: https://img.shields.io/pypi/l/mattermostautodriver.svg\n    :target: https://pypi.python.org/pypi/mattermostautodriver\n\n.. image:: https://img.shields.io/pypi/pyversions/mattermostautodriver.svg\n    :target: https://pypi.python.org/pypi/mattermostautodriver\n\nPython Mattermost Auto Driver (APIv4)\n=====================================\n\nInfo\n----\n\nThe repository will try to keep up with the master of https://github.com/mattermost/mattermost-api-reference\n\nIf something changes, it is most likely to change because the official mattermost api changed.\n\nThis project is forked from https://github.com/Vaelor/python-mattermost-driver but uses an automatic approach to generate all Python endpoint files from the mattermost OpenAPI specification.\n\nPython 3.6 or later is required.\n\nInstallation\n------------\n\n.. inclusion-marker-start-install\n\n``pip install mattermostautodriver``\n\n.. inclusion-marker-end-install\n\nDocumentation\n-------------\nDocumentation can be found at https://embl-bio-it.github.io/python-mattermost-autodriver/ .\n\nUsage\n-----\n\n.. inclusion-marker-start-usage\n\n.. code:: python\n\n    from mattermostautodriver import Driver\n\n    foo = Driver({\n        \"\"\"\n        Required options\n\n        Instead of the login/password, you can also use a personal access token.\n        If you have a token, you don't need to pass login/pass.\n        It is also possible to use 'auth' to pass a auth header in directly,\n        for an example, see:\n        https://embl-bio-it.github.io/python-mattermost-autodriver/#authentication\n        \"\"\"\n        'url': 'mattermost.server.com',\n        'login_id': 'user.name',\n        'password': 'verySecret',\n        'token': 'YourPersonalAccessToken',\n\n        \"\"\"\n        Optional options\n\n        These options already have useful defaults or are just not needed in every case.\n        In most cases, you won't need to modify these, especially the basepath.\n        If you can only use a self signed/insecure certificate, you should set\n        verify to your CA file or to False. Please double check this if you have any errors while\n        using a self signed certificate!\n        \"\"\"\n        'scheme': 'https',\n        'port': 8065,\n        'basepath': '/api/v4',\n        'verify': True,  # Or /path/to/file.pem\n        'mfa_token': 'YourMFAToken',\n        \"\"\"\n        Setting this will pass the your auth header directly to\n        the request libraries 'auth' parameter.\n        You probably only want that, if token or login/password is not set or\n        you want to set a custom auth header.\n        \"\"\"\n        'auth': None,\n        \"\"\"\n        If for some reasons you get regular timeouts after a while, try to decrease\n        this value. The websocket will ping the server in this interval to keep the connection\n        alive.\n        If you have access to your server configuration, you can of course increase the timeout\n        there.\n        \"\"\"\n        'timeout': 30,\n\n        \"\"\"\n        This value controls the request timeout.\n        See https://python-requests.org/en/master/user/advanced/#timeouts\n        for more information.\n        The default value is None here, because it is the default in the\n        request library, too.\n        \"\"\"\n        'request_timeout': None,\n\n        \"\"\"\n        To keep the websocket connection alive even if it gets disconnected for some reason you\n        can set the  keepalive option to True. The keepalive_delay defines how long to wait in seconds\n        before attempting to reconnect the websocket.\n        \"\"\"\n        'keepalive': False,\n        'keepalive_delay': 5,\n\n        \"\"\"\n        This option allows you to provide additional keyword arguments when calling websockets.connect()\n        By default it is None, meaning we will not add any additional arguments. An example of an\n        additional argument you can pass is one used to  disable the client side pings:\n        'websocket_kw_args': {\"ping_interval\": None},\n        \"\"\"\n        'websocket_kw_args': None,\n\n        \"\"\"\n        Setting debug to True, will activate a very verbose logging.\n        This also activates the logging for the requests package,\n        so you can see every request you send.\n\n        Be careful. This SHOULD NOT be active in production, because this logs a lot!\n        Even the password for your account when doing driver.login()!\n        \"\"\"\n        'debug': False\n    })\n\n    \"\"\"\n    Most of the requests need you to be logged in, so calling login()\n    should be the first thing you do after you created your Driver instance.\n    login() returns the raw response.\n    If using a personal access token, you still need to run login().\n    In this case, does not make a login request, but a `get_user('me')`\n    and sets everything up in the client.\n    \"\"\"\n    foo.login()\n\n    \"\"\"\n    You can make api calls by using calling `Driver.endpointofchoice`.\n    Using api[''] is deprecated for 5.0.0!\n\n    So, for example, if you used `Driver.api['users'].get_user('me')` before,\n    you now just do `Driver.users.get_user('me')`.\n    The names of the endpoints and requests are almost identical to\n    the names on the api.mattermost.com/v4 page.\n    API calls always return the json the server send as a response.\n    \"\"\"\n    foo.users.get_user_by_username('another.name')\n\n    \"\"\"\n    If the api request needs additional parameters\n    you can pass them to the function in the following way:\n    - Path parameters are always simple parameters you pass to the function\n    \"\"\"\n    foo.users.get_user(user_id='me')\n\n    # - Query parameters are always passed by passing a `params` dict to the function\n    foo.teams.get_teams(params={...})\n\n    # - Request Bodies are always passed by passing an `options` dict or array to the function\n    foo.channels.create_channel(options={...})\n\n    # See the mattermost api documentation to see which parameters you need to pass.\n    foo.channels.create_channel(options={\n        'team_id': 'some_team_id',\n        'name': 'awesome-channel',\n        'display_name': 'awesome channel',\n        'type': 'O'\n    })\n\n    \"\"\"\n    If you want to make a websocket connection to the mattermost server\n    you can call the init_websocket method, passing an event_handler.\n    Every Websocket event send by mattermost will be send to that event_handler.\n    See the API documentation for which events are available.\n    \"\"\"\n    foo.init_websocket(event_handler)\n\n    # Use `disconnect()` to disconnect the websocket\n    foo.disconnect()\n\n    # To upload a file you will need to pass a `files` dictionary\n    channel_id = foo.channels.get_channel_by_name_and_team_name('team', 'channel')['id']\n    file_id = foo.files.upload_file(\n        channel_id=channel_id,\n        files={'files': (filename, open(filename, 'rb'))}\n    )['file_infos'][0]['id']\n\n\n    # track the file id and pass it in `create_post` options, to attach the file\n    foo.posts.create_post(options={\n        'channel_id': channel_id,\n        'message': 'This is the important file',\n        'file_ids': [file_id]})\n\n    # If needed, you can make custom requests by calling `make_request`\n    foo.client.make_request('post', '/endpoint', options=None, params=None, data=None, files=None, basepath=None)\n\n    # If you want to call a webhook/execute it use the `call_webhook` method.\n    # This method does not exist on the mattermost api AFAIK, I added it for ease of use.\n    foo.webhooks.call_webhook('myHookId', options) # Options are optional\n\n\n.. inclusion-marker-end-usage\n\nUpdating OpenAPI specification\n------------------------------\n\nFirst we need to obtain Mattermost's API in an OpenAPI JSON.\n\n.. code:: shell\n\n    git clone https://github.com/mattermost/mattermost-api-reference\n    cd mattermost-api-reference\n    make build\n    ./node_modules/.bin/swagger2openapi v4/html/static/mattermost-openapi-v4.yaml > openapi.json\n    cd ..\n\nWith the above commands you will have cloned and created an ``openapi.json`` file that will be used by the conversion script.\n\nFirst install all required dependencies in a virtual environment.\n\n.. code:: shell\n\n    python3 -m venv .venv\n    source .venv/bin/activate\n    pip install -r requirements.txt\n\nFinally, with the virtual environment still loaded execute\n\n.. code:: shell\n\n    ./generate_endpoints.sh\n\nto generate the updated endpoint definition.\n\nThe current API conversion code was designed for Python 3.9.\nAs it uses Python's AST parser and generator, alongside with `Black <https://github.com/psf/black>`_ different versions of Python may result in some differences in the generated code. Double check with a ``git diff`` once complete.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/embl-bio-it/python-mattermost-autodriver",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mattermostautodriver",
    "package_url": "https://pypi.org/project/mattermostautodriver/",
    "platform": null,
    "project_url": "https://pypi.org/project/mattermostautodriver/",
    "project_urls": {
      "Homepage": "https://github.com/embl-bio-it/python-mattermost-autodriver"
    },
    "release_url": "https://pypi.org/project/mattermostautodriver/1.1.5/",
    "requires_dist": [
      "aiohttp (>=3.8.1<4.0.0)",
      "httpx (>=0.20.0<1.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python Mattermost Auto Driver",
    "version": "1.1.5",
    "yanked": true,
    "yanked_reason": "Outdated"
  },
  "last_serial": 16548777,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c203e892c7c6a9fb8ccb0c415e5648b6f150cbc584e51888a2113bb17642dbf3",
        "md5": "3485b2860e5b8f333cec0fc7bf40b8d2",
        "sha256": "07758dc4bb42423cdf13929af6b95e5a64314c7458c4ced100981b00439a22b9"
      },
      "downloads": -1,
      "filename": "mattermostautodriver-1.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3485b2860e5b8f333cec0fc7bf40b8d2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 51761,
      "upload_time": "2022-08-24T19:24:53",
      "upload_time_iso_8601": "2022-08-24T19:24:53.951719Z",
      "url": "https://files.pythonhosted.org/packages/c2/03/e892c7c6a9fb8ccb0c415e5648b6f150cbc584e51888a2113bb17642dbf3/mattermostautodriver-1.1.5-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "Outdated"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da2ba909ffb170b331c2586b8d292a3024d807bb17ad8e2a301757708d8774f6",
        "md5": "7e634ca763d7191550caa54491d94856",
        "sha256": "cd2959444116c22377a127dfa29ed9d59b77107e2339bdc0098fed9c4b95a602"
      },
      "downloads": -1,
      "filename": "mattermostautodriver-1.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "7e634ca763d7191550caa54491d94856",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 41463,
      "upload_time": "2022-08-24T19:24:56",
      "upload_time_iso_8601": "2022-08-24T19:24:56.412884Z",
      "url": "https://files.pythonhosted.org/packages/da/2b/a909ffb170b331c2586b8d292a3024d807bb17ad8e2a301757708d8774f6/mattermostautodriver-1.1.5.tar.gz",
      "yanked": true,
      "yanked_reason": "Outdated"
    }
  ],
  "vulnerabilities": []
}