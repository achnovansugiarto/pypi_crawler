{
  "info": {
    "author": "Jarry Shaw",
    "author_email": "jarryshaw@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apple Public Source License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": ":Platform:\n    OS X Yosemite, OS X El Capitan, macOS Sierra\n    macOS High Sierra, macOS Mojave\n:Language: Python (version ‚â• 3.4)\n:Environment: Console | Terminal\n\n==========================================\nMacDaily - macOS Automated Package Manager\n==========================================\n\n|download| |version| |status| |format|\n\n|python| |implementation|\n\n- `About <#about>`__\n- `Installation <#installation>`__\n- `Configuration <#configuration>`__\n- `Usage Manual <#usage-manual>`__\n\n  - `Start-Up <#start-up>`__\n  - `Commands <#commands>`__\n  - `Generals <#generals>`__\n\n- `Troubleshooting <#troubleshooting>`__\n- `TODO <#todo>`__\n\n--------------\n\nAbout\n-----\n\n    Package day-care manager on macOS.\n\n**MacDaily** is an all-in-one collection of console utility written in Python\nwith support of `PTY <https://en.wikipedia.org/wiki/Pseudo_terminal>`__.\nOriginally works as an automated housekeeper for Mac to update all packages\noutdated, **MacDaily** is now fully functioned and end-user oriented.\n\n**MacDaily** can manage packages of various distributions of\n`Atom <https://atom.io>`__, `RubyGems <https://rubygems.org>`__,\n`Homebrew <https://brew.sh>`__, `Python <https://pypy.org>`__,\n`Node.js <https://nodejs.org>`__, and even macOS software updates (c.f.\n``softwareupdate(8)``). Without being aware of everything about your Mac, one\ncan easily work around and manage packages out of no pain using **MacDaily**.\n\nInstallation\n------------\n\nNB\n    MacDaily runs only with support of Python from version **3.4**\n    or higher. And it shall only work ideally on **macOS**.\n\n.. raw:: html\n\n    <h4>\n      <a name=\"brew\">\n        MacDaily is now <code>brew</code>able üç∫\n      </a>\n    </h4>\n\nThough not introduced to\n`Homebrew core <https://github.com/Homebrew/homebrew-core>`__ database yet,\n**MacDaily** is still available for ``brew``. Use the following commands to\nadd the `Tap <https://github.com/JarryShaw/homebrew-tap>`__ to your local\nHomebrew installation (``$(BREW_PREFIX)/Homebrew/Library/Taps/``) and install\n**MacDaily** through Homebrew.\n\n.. code:: shell\n\n    $ brew tap jarryshaw/tap\n    $ brew install macdaily\n    # or simply, a one-liner\n    $ brew install jarryshaw/tap/macdaily\n\n.. raw:: html\n\n    <h4>\n      <a name=\"pip\">\n        Legacy approach through <code>pip</code> üêç\n      </a>\n    </h4>\n\nJust as many Python packages, MacDaily can be installed through\n``pip`` using the following command, which will get you the latest\nversion from `PyPI <https://pypi.org>`__.\n\n.. code:: shell\n\n    $ pip install macdaily\n\nOr if you prefer the hard-core real-latest version and fetch from this GitHub\nrepository, then the script below should be used.\n\n.. code:: shell\n\n    $ git clone https://github.com/JarryShaw/MacDaily.git\n    $ cd MacDaily\n    $ pip install -e .\n    # and to update at any time\n    $ git pull\n\nAlso, for best performance of MacDaily, the notable automation tool\n|expect|_ is expected to be installed on your Mac. Recommended installation\napproach is from `Homebrew <https://brew.sh>`__, as shown below.\n\n.. code:: shell\n\n    $ brew install expect\n\n.. |expect| replace:: ``expect``\n.. _expect: https://core.tcl.tk/expect\n\nOr if you prefer not to install |expect|_, MacDaily will use\n|UNIX script utility|_ instead. Make sure that ``/usr/bin/script``\nexists and ``/usr/bin`` is in your ``PATH`` environment variable.\n\n.. |UNIX script utility| replace:: UNIX ``script`` utility\n.. _UNIX script utility: https://en.wikipedia.org/wiki/Script_(Unix)\n\nFor the worst case, MacDaily adopts |ptyng|_ as an alternative. It is\na revised version of |Python pty module|_, intended to support\npseudo-terminal (PTY) on macOS with no further issue. To install ``ptyng``,\nyou may use the script below.\n\n.. |ptyng| replace:: ``ptyng``\n.. _ptyng: https://github.com/JarryShaw/ptyng\n.. |Python pty module| replace:: Python ``pty`` module\n.. _Python pty module: https://docs.python.org/3/library/pty.html\n\n.. code:: shell\n\n    $ pip install macdaily[ptyng]\n    # or explicitly...\n    $ pip install macdaily ptyng\n\nFor **tree** format support in ``dependency`` command, you will need\n|dictdumper|_, then implicitly you can use the following script to do so.\n\n.. |dictdumper| replace:: ``DictDumper``\n.. _dictdumper: https://github.com/JarryShaw/DictDumper\n\n.. code:: shell\n\n    $ pip install macdaily[tree]\n    # or explicitly...\n    $ pip install macdaily dictdumper\n\nAnd |configupdater|_ is required to support modification of the configuration\nfile in ``config`` command, since MacDaily intends to maintain the original\nlayout and information of original configuration file after modification. To\ninstall, the sample script is as below.\n\n.. |configupdater| replace:: ``ConfigUpdater``\n.. _configupdater: https://configupdater.readthedocs.io\n\n.. code:: shell\n\n    $ pip install macdaily[config]\n    # or explicitly...\n    $ pip install macdaily configupdater\n\nTo install all requirements for full support of MacDaily, you may simply run\nthe following script when installation.\n\n.. code:: shell\n\n    $ pip install macdaily[all]\n    # or explicitly...\n    $ pip install macdaily configupdater dictdumper ptyng\n\nConfiguration\n-------------\n\n    This part might be kind of garrulous, for some may not know what's\n    going on here. üòâ\n\nSince robust enough, MacDaily now supports configuration upon\nuser's own wish. One may set up log path, hard disk path, archive path\nand many other things, other than the default settings.\n\nNB\n    MacDaily now supports configuration commands,\n    see manual of |config|_ command for more information.\n\nThe configuration file should lie under ``~/.dailyrc``, which is hidden\nfrom Finder by macOS. To review or edit it, you may use text editors\nlike ``vim`` and/or ``nano``, or other graphic editors, such as Sublime\nText and/or Visual Studio Code, or whatever you find favourable.\n\n.. code:: ini\n\n    [Path]\n    # In this section, paths for log files are specified.\n    # Please, under any circumstances, make sure they are valid.\n    logdir = ~/Library/Logs/MacDaily                            ; path where logs will be stored\n    dskdir = /Volumes/Your Disk                                 ; path where your hard disk lies\n    arcdir = ${dskdir}/Developers                               ; path where ancient logs archive\n\n    [Mode]\n    # In this section, flags for modes are configured.\n    # If you would like to disable the mode, set it to \"false\".\n    apm     = true                                              ; Atom plug-ins\n    app     = true                                              ; macOS Applications\n    brew    = true                                              ; Homebrew Formulae\n    cask    = true                                              ; Homebrew Casks\n    cleanup = true                                              ; cleanup caches\n    gem     = true                                              ; Ruby gems\n    mas     = true                                              ; Mac App Store applications\n    npm     = true                                              ; Node.js modules\n    pip     = true                                              ; Python packages\n    system  = true                                              ; macOS software\n    tap     = true                                              ; Homebrew Taps\n\n    [Daemon]\n    # In this section, scheduled tasks are set up.\n    # You may append and/or remove the time intervals.\n    archive     = false                                         ; archive logs\n    bundle      = false                                         ; bundle packages\n    cleanup     = false                                         ; cleanup caches\n    config      = false                                         ; config MacDaily\n    dependency  = false                                         ; show dependencies\n    install     = false                                         ; install packages\n    launch      = false                                         ; launch daemons\n    logging     = true                                          ; log installed packages\n    postinstall = false                                         ; postinstall packages\n    reinstall   = false                                         ; reinstall packages\n    uninstall   = false                                         ; uninstall packages\n    update      = true                                          ; update packages\n    schedule    =                                               ; scheduled timing (in 24 hours)\n        8:00                                                    ; update & logging at 8:00\n        22:30-update                                            ; update at 22:30\n        23:00-logging                                           ; logging at 23:00\n\n    [Command]\n    # In this section, command options are picked.\n    # Do make sure these options are available for commands.\n    update  = --all --quiet --show-log\n    logging = --all --quiet --show-log\n\n    [Miscellaneous]\n    # In this section, miscellaneous specifications are assigned.\n    # Please, under any circumstances, make sure all fields are valid.\n    askpass = ...                                               ; SUDO_ASKPASS utility for Homebrew Casks\n    confirm = ...                                               ; confirm utility for MacDaily\n    timeout = 1000                                              ; timeout limit for shell commands in seconds\n\nAbove is the default content of ``.dailyrc``, following the grammar of\n``INI`` files. Lines and words after number sign (``#``) and semicolon\n(``;``) are comments, whose main purpose is to help understanding the\ncontents of this file.\n\nIn section ``Path``, there are path names where logs and some other\nthings to be stored. In section ``Mode``, there are ten different\nmodes to indicate if they are *enabled* or *disabled*.\n\nYou may wish to set the ``dskdir`` -- *path where your hard disk lies*,\nwhich allows MacDaily to archive your ancient logs and caches into\nsomewhere never bothers.\n\nPlease **NOTE** that, under all circumstances, of section ``Path``,\nall values would better be a **valid path name**, possibly with ``~``\nuser-home expansion.\n\nBesides, in section ``Daemon``, you can decide which command is\nscheduled and when to run such command, with the format of\n``HH:MM[-CMD]``. The ``CMD`` is optional, which will be ``any`` if\nomits. And you may set up which command(s) will be registered as daemons\nand run with schedule through booleans above. These boolean values\nhelp MacDaily indicate which is to be launched when commands in\nschedule omit. That is to say, when ``CMD`` omits in schedule, MacDaily\nwill register all commands that set ``true`` in the above boolean values.\n\nAlso, in section ``Option``, you may set up optional arguments for\nthe daemons above. Do please make sure these commands are **valid**. And\nif omit, the help command ``--help`` will be given.\n\nLast but no least, in section ``Miscellaneous``, you should **NEVER**\nmodify any contents under this section in order to keep MacDaily\nworking. However, you may set up this part with |config|_ command.\n\nUsage Manual\n------------\n\nStart-Up\n~~~~~~~~\n\nBefore we dive into the detailed usage of MacDaily, let's firstly\nget our hands dirty with some simple commands.\n\n    **NOTE** -- all acronyms and aliases are left out for a quick and\n    clear view of MacDaily\n\n1. How to use MacDaily?\n\n.. code:: shell\n\n    # call from PATH\n    $ macdaily <command> [option ...]\n    # or call as Python module\n    $ python -m macdaily <command> [option ...]\n    # or call a certain command\n    $ md-${command} [option ...]\n\n2. How to set up my disks and daemons interactively?\n\n.. code:: shell\n\n    $ macdaily config --interactive\n\n3.  How to relaunch daemons after I manually modified ``~/.dailyrc``?\n\n.. code:: shell\n\n    $ macdaily launch daemons\n\n4.  How to archive all ancient logs without running any commands?\n\n.. code:: shell\n\n    $ macdaily archive --all\n\n5.  How to update all outdated packages?\n\n.. code:: shell\n\n   $ macdaily update --all\n\n6.  How to update a certain package (eg: ``hello`` from Homebrew)?\n\n.. code:: shell\n\n    $ macdaily update brew --package=hello\n\n7. How to update without a certain package (eg: update all packages\n   except Python package ``ptyng``)?\n\n.. code:: shell\n\n    $ macdaily update --all --pip='!ptyng'\n\n8.  How to uninstall a certain package along with its dependencies (eg:\n    ``pytest`` from brewed CPython version 3.6)?\n\n.. code:: shell\n\n    $ macdaily uninstall pip --brew --cpython --python=3.6 --package=pytest\n\n9.  How to reinstall all packages but do not cleanup caches?\n\n.. code:: shell\n\n    $ macdaily reinstall --all --no-cleanup\n\n10.  How to postinstall packages whose name ranges between \"start\" and\n     \"stop\" alphabetically?\n\n.. code:: shell\n\n    $ macdaily postinstall --all --start=start --end=stop\n\n11. How to show dependency of a certain package as a tree (eg: ``gnupg``\n    from Homebrew) ?\n\n.. code:: shell\n\n   $ macdaily dependency brew  --tree --package=gnupg\n\n12. How to log all applications on my Mac, a.k.a. ``*.app`` files?\n\n.. code:: shell\n\n    $ macdaily logging app\n\n13. How to dump a ``Macfile`` to keep track of all packages?\n\n.. code:: shell\n\n   $ macdaily bundle dump\n\nCommands\n~~~~~~~~\n\nMacDaily supports several different commands. Of all commands,\nthere are corresponding **aliases** for which to be reckoned as\nvalid.\n\n+----------------+-----------------------------------------------+\n|    Command     |                  Aliases                      |\n+================+===============================================+\n| |archive|_     |                                               |\n+----------------+-----------------------------------------------+\n| |bundle|_      |                                               |\n+----------------+-----------------------------------------------+\n| |cleanup|_     | ``clean``                                     |\n+----------------+-----------------------------------------------+\n| ``commands``   |                                               |\n+----------------+-----------------------------------------------+\n| |config|_      | ``cfg``                                       |\n+----------------+-----------------------------------------------+\n| |dependency|_  | ``deps``, ``dp``                              |\n+----------------+-----------------------------------------------+\n| |help|_        | ``doc``, ``man``                              |\n+----------------+-----------------------------------------------+\n| |install|_     | ``i``                                         |\n+----------------+-----------------------------------------------+\n| |launch|_      | ``init``                                      |\n+----------------+-----------------------------------------------+\n| |logging|_     | ``log``                                       |\n+----------------+-----------------------------------------------+\n| |postinstall|_ | ``post``, ``ps``,                             |\n+----------------+-----------------------------------------------+\n| |reinstall|_   | ``re``                                        |\n+----------------+-----------------------------------------------+\n| |uninstall|_   | ``un``, ``unlink``, ``remove``, ``rm``, ``r`` |\n+----------------+-----------------------------------------------+\n| |update|_      | ``up``, ``upgrade``                           |\n+----------------+-----------------------------------------------+\n\nFor more information, MacDaily provides ``commands`` to help you find out the\nexpecting command.\n\n.. code:: shell\n\n    $ macdaily commands\n    MacDaily available commands & corresponding subsidiaries:\n        archive\n        bundle          dump, load\n        cleanup         brew, cask, npm, pip\n        config\n        dependency      brew, pip\n        install         apm, brew ,cask, gem, mas, npm, pip, system\n        launch          askpass, confirm, daemons\n        logging         apm, app, brew, cask, gem, mas, npm, pip, tap\n        postinstall\n        reinstall       brew, cask\n        uninstall       brew, cask, pip\n        update          apm, brew, cask, gem, mas, npm, pip, system\n\nGenerals\n~~~~~~~~\n\n.. code:: man\n\n    usage: macdaily [options] <command> ...\n\n    macOS Automated Package Manager\n\n    optional arguments:\n      -h, --help     show this help message and exit\n      -V, --version  show program's version number and exit\n\n    command selection:\n      MacDaily provides a friendly CLI workflow for the administrator of macOS\n      to manage and manipulate packages, see 'macdaily commands' for more\n      information\n\nCommands for ``macdaily`` is shown as above and they are mandatory. For\nmore detailed usage information, please refer to manuals of corresponding\ncommands. For developers, internal details can be found in |miscellaneous|_\nmanual. And here is a brief catalogue for the manuals.\n\n- `Archive Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/archive.rst>`__\n- `Bundle Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/bundle.rst>`__\n\n  - `Dump Macfile <https://github.com/JarryShaw/MacDaily/tree/master/doc/bundle.rst#dump>`__\n  - `Load Macfile <https://github.com/JarryShaw/MacDaily/tree/master/doc/bundle.rst#load>`__\n\n- `Cleanup Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst>`__\n\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst#brew>`__\n  - `Node.js Modules <https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst#npm>`__\n  - `Python Packages <https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst#pip>`__\n\n- `Config Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/config.rst>`__\n- `Dependency Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/dependency.rst>`__\n\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/dependency.rst#brew>`__\n  - `Python Packages <https://github.com/JarryShaw/MacDaily/tree/master/doc/dependency.rst#pip>`__\n\n- `Help Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/help.rst>`__\n- `Install Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst>`__\n\n  - `Atom Plug-Ins <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#apm>`__\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#cask>`__\n  - `Ruby Gems <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#gem>`__\n  - `macOS Applications <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#mas>`__\n  - `Node.js Modules <https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst#npm>`__\n  - `Python Package <https://github.com/JarryShaw/MacDaily/tree/master/src/install.rst#pip>`__\n  - `System Software <https://github.com/JarryShaw/MacDaily/tree/master/src/install.rst#system>`__\n\n- `Launch Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/launch.rst>`__\n\n  - `Askpass Helper Program <https://github.com/JarryShaw/MacDaily/tree/master/doc/launch.rst#askpass>`__\n  - `Confirm Helper Program <https://github.com/JarryShaw/MacDaily/tree/master/doc/launch.rst#confirm>`__\n  - `Daemons Helper Program <https://github.com/JarryShaw/MacDaily/tree/master/doc/launch.rst#daemons>`__\n\n- `Logging Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst>`__\n\n  - `Atom Plug-Ins <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#apm>`__\n  - `Mac Applications <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#app>`__\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#cask>`__\n  - `Ruby Gem <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#gem>`__\n  - `macOS Applications <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#mas>`__\n  - `Node.js Modules <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#npm>`__\n  - `Python Packages <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#pip>`__\n  - `Third-party Repositories <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#tap>`__\n\n- `Postinstall Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/postinstall.rst>`__\n- `Reinstall Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/reinstall.rst>`__\n\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst#cask>`__\n\n- `Uninstall Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/uninstall.rst>`__\n\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/uninstall.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/uninstall.rst#cask>`__\n  - `Python Package <https://github.com/JarryShaw/MacDaily/tree/master/src/uninstall.rst#pip>`__\n\n- `Update Command <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst>`__\n\n  - `Atom Plug-Ins <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#apm>`__\n  - `Homebrew Formulae <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#brew>`__\n  - `Caskroom Binaries <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#cask>`__\n  - `Ruby Gems <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#gem>`__\n  - `macOS Applications <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#mas>`__\n  - `Node.js Modules <https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst#npm>`__\n  - `Python Package <https://github.com/JarryShaw/MacDaily/tree/master/src/update.rst#pip>`__\n  - `System Software <https://github.com/JarryShaw/MacDaily/tree/master/src/update.rst#system>`__\n\n- `Developer Manual <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst>`__\n\n  - `Project Structure <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#repo>`__\n  - `Command Classes <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#cmd>`__\n  - `Miscellaneous Utilities <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#util>`__\n\n    - `ANSI Sequences <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#color>`__\n    - `Print Utilities <https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#print>`__\n    - |script|_\n\n.. |script| replace:: UNIX ``script``\n.. _script: https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst#script\n\nTroubleshooting\n---------------\n\n1. Where can I find the log files?\n    It depends. Since the path where logs go can be modified through\n    ``~/.dailyrc``, it may vary as your settings. In default, you may\n    find them under ``~/Library/Logs/Scripts``. And with every command,\n    logs can be found in its corresponding folder. Logs are named after\n    its running time, in the fold with corresponding date as its name.\n\n    Note that, normally, you can only find today's logs in the folder,\n    since ``macdaily`` automatically archive ancient logs into\n    ``${logdir}/arcfile`` folder. And every week, ``${logdir}/arcfile``\n    folder will be tape-archived into ``${logdir}/tarfile``. Then after a\n    month, and your hard disk available, they will be moved into\n    ``/Volumes/Your Disk/Developers/archive.zip``.\n\n2. What if my hard disk ain't plugged-in when running the scripts?\n    Then the archiving and removing procedure will **NOT** perform. In\n    case there might be some useful resources of yours.\n\n3. Which directory should I set in the configuration file?\n    First and foremost, I highly recommend you **NOT** to modify the\n    paths in ``~/.dailyrc`` manually, **EXCEPT** your disk path\n    ``dskdir``.\n\n    But if you insist to do so, then make sure they are **VALID**, possibly\n    with ``~`` user-home expansion and most importantly, they must be\n    **available** with permission granted.\n\nTODO\n----\n\n- ‚úîÔ∏è support configuration\n- ‚úîÔ∏è support command aliases\n- ‚úîÔ∏è reconstruct archiving procedure\n- ‚ùå support ``gem`` and ``npm`` in all commands\n- ‚úîÔ∏è considering support more versions of Python\n- ‚úîÔ∏è optimise ``KeyboardInterrupt`` handling procedure\n- ‚ùå implement further specifications for package indication mini-language\n- ‚úîÔ∏è review ``pip`` implementation and version indication\n- ‚úîÔ∏è add ``--user`` for ``pip`` commands\n- ‚ùå implement ``bundle`` and ``help`` commands\n\n.. |archive| replace:: ``archive``\n.. _archive: https://github.com/JarryShaw/MacDaily/tree/master/doc/archive.rst\n.. |bundle| replace:: ``bundle``\n.. _bundle: https://github.com/JarryShaw/MacDaily/tree/master/doc/bundle.rst\n.. |cleanup| replace:: ``cleanup``\n.. _cleanup: https://github.com/JarryShaw/MacDaily/tree/master/doc/cleanup.rst\n.. |config| replace:: ``config``\n.. _config: https://github.com/JarryShaw/MacDaily/tree/master/doc/config.rst\n.. |dependency| replace:: ``dependency``\n.. _dependency: https://github.com/JarryShaw/MacDaily/tree/master/doc/dependency.rst\n.. |help| replace:: ``help``\n.. _help: https://github.com/JarryShaw/MacDaily/tree/master/doc/help.rst\n.. |install| replace:: ``install``\n.. _install: https://github.com/JarryShaw/MacDaily/tree/master/doc/install.rst\n.. |launch| replace:: ``launch``\n.. _launch: https://github.com/JarryShaw/MacDaily/tree/master/doc/launch.rst\n.. |logging| replace:: ``logging``\n.. _logging: https://github.com/JarryShaw/MacDaily/tree/master/doc/logging.rst\n.. |miscellaneous| replace:: ``miscellaneous``\n.. _miscellaneous: https://github.com/JarryShaw/MacDaily/tree/master/doc/miscellaneous.rst\n.. |postinstall| replace:: ``postinstall``\n.. _postinstall: https://github.com/JarryShaw/MacDaily/tree/master/doc/postinstall.rst\n.. |reinstall| replace:: ``reinstall``\n.. _reinstall: https://github.com/JarryShaw/MacDaily/tree/master/doc/reinstall.rst\n.. |uninstall| replace:: ``uninstall``\n.. _uninstall: https://github.com/JarryShaw/MacDaily/tree/master/doc/uninstall.rst\n.. |update| replace:: ``update``\n.. _update: https://github.com/JarryShaw/MacDaily/tree/master/doc/update.rst\n\n.. |download| image:: http://pepy.tech/badge/macdaily\n   :target: http://pepy.tech/count/macdaily\n.. |version| image:: https://img.shields.io/pypi/v/macdaily.svg\n   :target: https://pypi.org/project/macdaily\n.. |format| image:: https://img.shields.io/pypi/format/macdaily.svg\n   :target: https://pypi.org/project/macdaily\n.. |status| image:: https://img.shields.io/pypi/status/macdaily.svg\n   :target: https://pypi.org/project/macdaily\n.. |python| image:: https://img.shields.io/pypi/pyversions/macdaily.svg\n   :target: https://python.org\n.. |implementation| image:: https://img.shields.io/pypi/implementation/macdaily.svg\n   :target: http://pypy.org\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JarryShaw/MacDaily#macdaily",
    "keywords": "daily utility script",
    "license": "Apple Public Source License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "macdaily",
    "package_url": "https://pypi.org/project/macdaily/",
    "platform": "",
    "project_url": "https://pypi.org/project/macdaily/",
    "project_urls": {
      "Homepage": "https://github.com/JarryShaw/MacDaily#macdaily"
    },
    "release_url": "https://pypi.org/project/macdaily/2019.1.22/",
    "requires_dist": [
      "pathlib2 (>=2.3.2) ; python_version <= \"3.4\"",
      "subprocess32 (>=3.5.3) ; python_version <= \"3.4\"",
      "ptyng (>=0.3.3) ; extra == 'all'",
      "dictdumper (>=0.6.3) ; extra == 'all'",
      "configupdater ; extra == 'all'",
      "configupdater ; extra == 'config'",
      "ptyng (>=0.3.3) ; extra == 'ptyng'",
      "dictdumper (>=0.6.3) ; extra == 'tree'"
    ],
    "requires_python": ">=3.4",
    "summary": "macOS Automated Package Manager",
    "version": "2019.1.22",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5631951,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6993876de7de68fbdd408d88e7007bb482dd1593bcf8bcd6ab4dc2b6c3420d8b",
        "md5": "e2b69a78576771c03245e715d7919eb3",
        "sha256": "9ea22a65c122185208c4cd4d3381aec7fe60d5c07e69fbccd012fc3f12b81959"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-cp34-none-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e2b69a78576771c03245e715d7919eb3",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": ">=3.4",
      "size": 816842,
      "upload_time": "2019-01-22T10:11:31",
      "upload_time_iso_8601": "2019-01-22T10:11:31.001603Z",
      "url": "https://files.pythonhosted.org/packages/69/93/876de7de68fbdd408d88e7007bb482dd1593bcf8bcd6ab4dc2b6c3420d8b/macdaily-2019.1.22-cp34-none-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65189c8be8edcce7975afdcd18a7ec0d67c06ec9644acc985e122a1d80a1891c",
        "md5": "40342a4e050595cfb322301841037e7b",
        "sha256": "51939a6a5864abe0a9a6467d223ec39a1065f9547d7e6d1aaeae99a0c4ae030c"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-cp35-none-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "40342a4e050595cfb322301841037e7b",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.4",
      "size": 816842,
      "upload_time": "2019-01-22T10:11:34",
      "upload_time_iso_8601": "2019-01-22T10:11:34.338534Z",
      "url": "https://files.pythonhosted.org/packages/65/18/9c8be8edcce7975afdcd18a7ec0d67c06ec9644acc985e122a1d80a1891c/macdaily-2019.1.22-cp35-none-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "112eacff183022ea54355ac73ce817b76e34b415cc0c7f323d1f362f714c6624",
        "md5": "138497791f698eb75db9037a561e7332",
        "sha256": "da58337fec45087a387c022dbca78f8ce2bb9587fc2c1974734ba02f0d5e1545"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-cp36-none-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "138497791f698eb75db9037a561e7332",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.4",
      "size": 816055,
      "upload_time": "2019-01-22T10:11:37",
      "upload_time_iso_8601": "2019-01-22T10:11:37.140813Z",
      "url": "https://files.pythonhosted.org/packages/11/2e/acff183022ea54355ac73ce817b76e34b415cc0c7f323d1f362f714c6624/macdaily-2019.1.22-cp36-none-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b572b0d2483a7ce5cd413eae3c4be6f5efc14650fbd4b4d4be28624c7271340",
        "md5": "9e8666d21fbfe6643540a2ec9d7bc600",
        "sha256": "a89c35882675a06c4d68cbfdb0d39cd0cb2776653042d8e3b455de22ece5aee4"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-cp37-none-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "9e8666d21fbfe6643540a2ec9d7bc600",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.4",
      "size": 816056,
      "upload_time": "2019-01-22T10:11:40",
      "upload_time_iso_8601": "2019-01-22T10:11:40.741126Z",
      "url": "https://files.pythonhosted.org/packages/5b/57/2b0d2483a7ce5cd413eae3c4be6f5efc14650fbd4b4d4be28624c7271340/macdaily-2019.1.22-cp37-none-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "480da43ff9455231a7ed7c7837d1f9b605af7d7381875767370b8d98425fd2db",
        "md5": "48608e7f26f425808dd0357224f33249",
        "sha256": "a8ea2aadecf9d3ff9f891d4625ad2459839beb46a14776337f2080dcaff64b99"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-pp35-none-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "48608e7f26f425808dd0357224f33249",
      "packagetype": "bdist_wheel",
      "python_version": "pp35",
      "requires_python": ">=3.4",
      "size": 816843,
      "upload_time": "2019-01-22T10:11:43",
      "upload_time_iso_8601": "2019-01-22T10:11:43.799431Z",
      "url": "https://files.pythonhosted.org/packages/48/0d/a43ff9455231a7ed7c7837d1f9b605af7d7381875767370b8d98425fd2db/macdaily-2019.1.22-pp35-none-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6cc36b235ebe45eae4f69999a6a98e0135c51f061a6e286b26bcc29ade172e30",
        "md5": "0e9926ea443c6cb2e129fa1a973e422e",
        "sha256": "1268044708275c8d657e9640ca4c27120f4de36b1b4db5ab0889dc2d1d30ac54"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-py3.4.egg",
      "has_sig": false,
      "md5_digest": "0e9926ea443c6cb2e129fa1a973e422e",
      "packagetype": "bdist_egg",
      "python_version": "3.4",
      "requires_python": ">=3.4",
      "size": 1002363,
      "upload_time": "2019-01-22T10:11:46",
      "upload_time_iso_8601": "2019-01-22T10:11:46.946944Z",
      "url": "https://files.pythonhosted.org/packages/6c/c3/6b235ebe45eae4f69999a6a98e0135c51f061a6e286b26bcc29ade172e30/macdaily-2019.1.22-py3.4.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0f744937eb6cfee2e52fcb51c7c74fe5766aacb44b9d9808fcb8e75bc0b0b9a",
        "md5": "3d6b7121e9364a2d9c4917b46263ca20",
        "sha256": "1df9e9f17c1c620b9c86b1014b45658b7a6d53531b0d0182f3f92f02c48d79d6"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-py3.5.egg",
      "has_sig": false,
      "md5_digest": "3d6b7121e9364a2d9c4917b46263ca20",
      "packagetype": "bdist_egg",
      "python_version": "3.5",
      "requires_python": ">=3.4",
      "size": 1001852,
      "upload_time": "2019-01-22T10:11:50",
      "upload_time_iso_8601": "2019-01-22T10:11:50.546802Z",
      "url": "https://files.pythonhosted.org/packages/f0/f7/44937eb6cfee2e52fcb51c7c74fe5766aacb44b9d9808fcb8e75bc0b0b9a/macdaily-2019.1.22-py3.5.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6165e44d3fe65ff62c84790dc3dffb731aff9a23f9b721e5884e8c698170d4fa",
        "md5": "ef25d518f04c6457fc9e29e01cb4111f",
        "sha256": "c8d52435e1624906353e54cd1dfb23f313d3697c3a5b99bd01b0449a057a9d50"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-py3.6.egg",
      "has_sig": false,
      "md5_digest": "ef25d518f04c6457fc9e29e01cb4111f",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": ">=3.4",
      "size": 995058,
      "upload_time": "2019-01-22T10:11:53",
      "upload_time_iso_8601": "2019-01-22T10:11:53.246156Z",
      "url": "https://files.pythonhosted.org/packages/61/65/e44d3fe65ff62c84790dc3dffb731aff9a23f9b721e5884e8c698170d4fa/macdaily-2019.1.22-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22f8fb2cba0500e4362481873a0161a09b6633282437ab913a0f8f43fe99a4ba",
        "md5": "f0491f3d4b690d14b69d86c94b0fb789",
        "sha256": "65f2a2f7a508f7aa5eabb5d376ab860ea791a3e45f90fcbb358e524528b7dfda"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22-py3.7.egg",
      "has_sig": false,
      "md5_digest": "f0491f3d4b690d14b69d86c94b0fb789",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": ">=3.4",
      "size": 995533,
      "upload_time": "2019-01-22T10:11:55",
      "upload_time_iso_8601": "2019-01-22T10:11:55.998785Z",
      "url": "https://files.pythonhosted.org/packages/22/f8/fb2cba0500e4362481873a0161a09b6633282437ab913a0f8f43fe99a4ba/macdaily-2019.1.22-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9fcc3a3f66ff08c31bf141c484dc075f7717c4f34856e1bbe8d1f6caf505447",
        "md5": "9dd1c7a0a2ecc67bed005d34a8226ab1",
        "sha256": "7e498f9e5c87bfafef838179258234b8cec8716322e839e0a82b1dc7bde859f0"
      },
      "downloads": -1,
      "filename": "macdaily-2019.1.22.tar.gz",
      "has_sig": false,
      "md5_digest": "9dd1c7a0a2ecc67bed005d34a8226ab1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 698095,
      "upload_time": "2019-01-22T10:11:59",
      "upload_time_iso_8601": "2019-01-22T10:11:59.637107Z",
      "url": "https://files.pythonhosted.org/packages/d9/fc/c3a3f66ff08c31bf141c484dc075f7717c4f34856e1bbe8d1f6caf505447/macdaily-2019.1.22.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}