{
  "info": {
    "author": "Arkadiusz DziÄ™giel",
    "author_email": "arkadiusz.dziegiel@glorpen.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "==============\nDocker HostDNS\n==============\n\nUpdate BIND nameserver zone with Docker hosts via DNS Updates.\n\nUsage\n=====\n\n*Docker HostDNS* can be run by ``docker-hostdns`` wrapper script or directly with ``python -m docker_hostdns``.\n\n.. sourcecode::\n\n   usage: docker-entrypoint [-h] [--zone ZONE] [--dns-server DNS_SERVER]\n                            [--dns-key-secret DNS_KEY_SECRET]\n                            [--dns-key-name DNS_KEY_NAME] [--name NAME]\n                            [--network NETWORK] [--verbose] [--syslog [SYSLOG]]\n                            [--clear-on-exit]\n\n   Update BIND nameserver zone with Docker hosts via DNS Updates.\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     --zone ZONE           dns zone to update, defaults to \"docker\"\n     --dns-server DNS_SERVER\n                           address of DNS server which will be updated, defaults\n                           to 127.0.0.1\n     --dns-key-secret DNS_KEY_SECRET\n                           DNS Server key secret for use when updating zone, use\n                           '-' to read from stdin\n     --dns-key-name DNS_KEY_NAME\n                           DNS Server key name for use when updating zone\n     --name NAME           name to differentiate between multiple instances\n                           inside same dns zone, defaults to current hostname\n     --network NETWORK     network to fetch container names from, defaults to\n                           docker default bridge, can be used multiple times\n     --daemonize PIDFILE, -d PIDFILE\n                           daemonize after start and store PID at given path\n     --verbose, -v         give more output - option is additive, and can be used\n                           up to 3 times\n     --syslog [SYSLOG]     enable logging to syslog, defaults to \"/dev/log\", you\n                           can provide path to unix socket or uri:\n                           <tcp|udp|unix>://<path_or_host>[:<port>]\n     --clear-on-exit       clear zone on exit\n\n\nThe ``--daemonize`` options is only available when you have installed ``python-daemon3`` package.\n\nExample ``named.conf`` zone configuration with key auth:\n\n.. sourcecode::\n\n   include \"/etc/bind/docker.key\";\n\n   zone \"docker\" in {\n       type master;\n       file \"/var/bind/dyn/docker.zone\";\n       allow-update {\n         key \"docker-key\";\n       };\n   };\n\n``docker.key`` can be generated by:\n\n.. sourcecode:: sh\n\n   rndc-confgen -a -c docker.key -k docker-key\n\nAnd then:\n\n.. sourcecode:: sh\n\n   echo 'my base64 key secret' | docker-hostdns --dns-key-name docker-key --dns-key-secret -\n\nHost names\n==========\n\nHost name is created by using container name and slugifying & trimming it. So ``/example2::docker`` will result with ``example2-docker``.\nIn case of name duplication a \"-<number>\" will be appended, resulting with eg. ``example2-docker-1``\n\nFollowing dns records are created for each container, given ``example`` hostname and ``docker`` zone:\n\n- IPv4: ``example.docker``\n- IPv4: ``*.example.docker``\n- IPv6: ``example.docker``\n- IPv6: ``*.example.docker``\n- TXT: ``_container_<name>.docker`` with container name as value and instance name as ``<name>``\n\nTXT record is used for keeping track of added hosts so when app is stopped or resumed it keeps its state.\n\nCustom host names\n*****************\n\nYou can set custom host name by using container label ``pl.glorpen.hostname``, its content will be used as container name.\n\nDocker Image\n============\n\nDocker image is available at ``glorpen/hostdns``.\nFor help try ``docker run --rm -it glorpen/hostdns:latest --help``.\n\nRemember to mount ``/run/docker.sock`` inside container.\n\nBuild image from GitHub\n***********************\n\n- ``git clone <repo>``\n- ``cd docker-hostdns/``\n- ``docker build -t \"<image name>\" .``\n\nDocker environment variables\n****************************\n\n- ``DNS_SERVER``:            IP address of DNS server which will be updated, defaults to ``127.0.0.1``\n- ``DNS_ZONE``:              DNS zone to update, defaults to ``docker``\n- ``DNS_KEY_NAME``:          DNS Server key name for use when updating zone\n- ``DNS_KEY_SECRET``:        DNS Server key secret for use when updating zone\n- ``DNS_KEY_SECRET_FILE``:   path of file with secret as its content\n- ``NAME``:                  name to differentiate between multiple instances inside same dns zone, defaults to current hostname\n- ``NETWORK``:               network to fetch container names from, defaults to docker default bridge, accepts multiple networks as comma delimited list (e.g. ``network1,network2,network3,..``)\n- ``VERBOSITY``:             give more output, accepts ``0`` to ``3``, defaults to ``0`` (equivalent to ``-v``, ``-vv``, ``-vvv`` arguments on the command line)\n- ``SYSLOG``:                enable logging to syslog, if set ``true`` or ``yes`` defaults to \"/dev/log\", or you can provide path to unix socket or uri: ``<tcp|udp|unix>://<path_or_host>[:<port>]``\n- ``CLEAR_ON_EXIT``:         clear zone on exit, defaults to ``false`` (accepts ``true`` or ``yes``)\n\nSecuring DNS secret key\n***********************\n\nTo secure secret key (the ``dns-key-secret`` option) you can:\n\n- passing its contents to env var ``DNS_KEY_SECRET``\n- setting env var ``DNS_KEY_SECRET_FILE`` to path of file with secret as its content\n\nOption ``--dns-key-secret -`` will be then automatically prepended and secret key piped to docker-hostdns process.\n\nWorking with docker-compose\n===========================\n\nWhen using *docker-compose* for development you can create custom docker network and use it as\ndomain names source.\n\nTo do this, create docker network with ``docker network create example-dns`` and then run *Docker HostDNS* with ``--network example-dns`` argument.\n\nNext, with example ``docker-compose.yml``:\n\n.. sourcecode:: yaml\n\n   version: '2.2'\n   services:\n     app:\n       image: example\n       labels:\n         pl.glorpen.hostname: example\n       networks:\n         default: ~\n         dns: ~\n\n   networks:\n     dns:\n       external: true\n       name: example-dns\n\nyou can start container that would be accessible by host as ``example.docker`` domain.\n\n\n2.1.0\n=====\n\n- fixed docker entrypoint exit signal handling\n- added clean-on-exit option to clear used dns zone\n\n2.0.0\n=====\n\n- added Docker image\n- watched network interfaces can be now specified by user\n- container name deduplication now only drops duplicate names\n- single container can have multiple aliases\n- short id and other container aliases are now available as dns names\n\n1.1.1\n=====\n\n- it is now possible to run multiple instances in single dns zone\n  `#2 <https://github.com/glorpen/docker-hostdns/pull/2>`__ (`dvenza <https://github.com/dvenza>`__)\n- added option to override default instance name for use in txt records\n\n1.1.0\n=====\n\n- possible breaking change: changed `dnspython3` package to just `dnspython` as Py3 is now supported\n\n1.0.4\n=====\n\n- host names are now allowed to have dots in them\n\n1.0.3\n=====\n\n- added tests\n- added proper domain names coversion\n- added a way to keep track of hosts when adding & removing containers\n\n1.0.2\n=====\n\n- fixed error when handling disconnection event without earlier connect one\n- added app exception logging\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/glorpen/docker-hostdns",
    "keywords": "docker dns bind named",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-hostdns",
    "package_url": "https://pypi.org/project/docker-hostdns/",
    "platform": "",
    "project_url": "https://pypi.org/project/docker-hostdns/",
    "project_urls": {
      "Homepage": "https://github.com/glorpen/docker-hostdns"
    },
    "release_url": "https://pypi.org/project/docker-hostdns/2.3.0/",
    "requires_dist": [
      "docker (>=2.0.0)",
      "dnspython (>=1.13.0)",
      "unittest ; extra == 'development'",
      "python-daemon ; extra == 'development'",
      "python-daemon ; extra == 'suggested'",
      "unittest ; extra == 'testing'",
      "python-daemon ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Update BIND nameserver zone with Docker hosts via DNS Updates.",
    "version": "2.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5533789,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a00e29a54bd24c840ddddb842b63ed0450ef50ff2d8ecd25283be8f41306cf22",
        "md5": "24288ad3f18f8791ab0bbfffb5bcf714",
        "sha256": "bdc08690a29a3213c3b363c0e70d76aad68f10fd1fa48b4412556c0964ebf569"
      },
      "downloads": -1,
      "filename": "docker_hostdns-2.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24288ad3f18f8791ab0bbfffb5bcf714",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10305,
      "upload_time": "2019-03-19T10:52:46",
      "upload_time_iso_8601": "2019-03-19T10:52:46.538574Z",
      "url": "https://files.pythonhosted.org/packages/a0/0e/29a54bd24c840ddddb842b63ed0450ef50ff2d8ecd25283be8f41306cf22/docker_hostdns-2.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97fc35c38b3ca2412c4212963e70edce323bbe0ac62027e14315afeadb4765d3",
        "md5": "b3afdd2edd4f916ea767f0b1d60941f1",
        "sha256": "76da9240eec000dff3034fdea47dbfcc4a5824f0e1e71e48b5a6dc65b29e6e76"
      },
      "downloads": -1,
      "filename": "docker-hostdns-2.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b3afdd2edd4f916ea767f0b1d60941f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9052,
      "upload_time": "2019-03-19T10:52:47",
      "upload_time_iso_8601": "2019-03-19T10:52:47.956751Z",
      "url": "https://files.pythonhosted.org/packages/97/fc/35c38b3ca2412c4212963e70edce323bbe0ac62027e14315afeadb4765d3/docker-hostdns-2.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}