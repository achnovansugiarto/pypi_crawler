{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# mlrun_connect\n\nA collection of tools to simplify integration between MLRun and services from cloud providers.\n\n\n# Quickstart\n\nThe package can be installed using:\n`pip install mlrun_connect`\n\nMLRun is an open-source MLOps orchestration framework.  It enables end-to-end development of\nmachine learning models, from exploratory data analysis to prototyping to operationalization.\n\nA common use case would be to install MLRun on-premise or with a cloud provider, and connect\nto data sources for exploratory analysis.  While the Nuclio library offers a HTTP-based approach\nto integration with external services, there are a variety of other approaches that may be prefered\n(i.e. messaging systems).\n\nmlrun_connect will provide tools to ease integration with these services.\n\n# Azure Service Bus Queue\n\nThe AzureSBTMLRun class can be in conjunction with a Nuclio function to initiate the execution of a mlrun pipeline\nbased on an incoming message.  The AzureSBToMLRun object becomes the parent to a new class that is instantiated\nwithin the Nuclio init_context function, as follows:\n\n```\nfrom mlrun_connect.azure import AzureSBToMlrun\n\ndef init_context(context):\n    pipeline = load_project(<PATH_TO_MLRUN_PROJECT>)\n    class SBHandler(AzureSBToMLRun):\n        def run_pipeline(self, event):\n            arguments = {\"incoming_data\": event[\"key\"]}\n            workflow_id = pipeline.run(arguments = arguments)\n            return workflow_id\n            \n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hayesgb/mlrun_connect/",
    "keywords": "mlrun,iguazio,nuclio,azure",
    "license": "Apache 2.0",
    "maintainer": "Greg Hayes",
    "maintainer_email": "",
    "name": "mlrun-connect",
    "package_url": "https://pypi.org/project/mlrun-connect/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlrun-connect/",
    "project_urls": {
      "Homepage": "https://github.com/hayesgb/mlrun_connect/"
    },
    "release_url": "https://pypi.org/project/mlrun-connect/2021.9.0/",
    "requires_dist": null,
    "requires_python": ">3.6",
    "summary": "Utilities for connection mlrun to cloud services",
    "version": "2021.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11417975,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f9c84ced18e8e349a07094bfd8a44e9dbc7eba5c701d6e47738eb2380609915",
        "md5": "4d3671ea452bf8fdd27951a4b52056ce",
        "sha256": "b8770cb25532c75e9c30142679bfbdd228226c94c4fff36ddb0139bc6340b6bc"
      },
      "downloads": -1,
      "filename": "mlrun_connect-2021.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4d3671ea452bf8fdd27951a4b52056ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 24312,
      "upload_time": "2021-09-10T16:26:55",
      "upload_time_iso_8601": "2021-09-10T16:26:55.190783Z",
      "url": "https://files.pythonhosted.org/packages/3f/9c/84ced18e8e349a07094bfd8a44e9dbc7eba5c701d6e47738eb2380609915/mlrun_connect-2021.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}