{
  "info": {
    "author": "Einar Forselv",
    "author_email": "eforselv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Games/Entertainment",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Graphics :: 3D Rendering",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "[![pypi](https://badge.fury.io/py/moderngl-window.svg)](https://pypi.python.org/pypi/moderngl-window) [![rtd](https://readthedocs.org/projects/moderngl-window/badge/?version=latest)](https://moderngl-window.readthedocs.io)\n\n# moderngl_window\n\nA support library for [ModernGL](https://github.com/moderngl/moderngl)\nmaking programmers more efficent and ensuring cross platform support.\n\n* [moderngl_window documentation](https://moderngl-window.readthedocs.io)\n* [moderngl_window on PyPI](https://pypi.org/project/moderngl-window)\n* [moderngl_window on Github](https://github.com/moderngl/moderngl_window)\n* [ModernGL](https://github.com/moderngl/moderngl)\n\n## Features\n\n* Cross platform support. Tested on Windows 10, Linux and Mac OS X.\n  This can save users a lot of time and is often more difficult than most people imagine it to be.\n* Easily create a window for ModernGL using Pyglet, PySide2, GLFW, SDL2 or PyQt5 supporing basic keyboard and mouse controls. These events are unified into a single system so we can switch to any window at any point in time.\n* Load 2D textures and texture arrays\n* Load shaders as single or multiple `glsl` files\n* Load objects/scenes from wavefront/obj, GLTF 2.0 or STL\n* Resource finder system supporting multiple resource directories\n* A highly pluggable library supporting custom loaders,\n  resource finders and windows.\n* Type hints everywhere making code completion and linting a breeze\n\nWe are not trying to force the user into using every aspect of this\nlibrary. If you have an exiting project and just need texture loading\nyou will be able to do this without unnecessary hurdles as long as\nyou provide us your `moderngl.Context`.\n\n## Install\n\n```bash\npip install moderngl-window\n```\n\n## Supported Platforms\n\n* [x] Windows\n* [x] Linux\n* [x] Mac OS X\n\n## Sample Usage\n\nSimple example opening a window clearing every frame using red (color).\n\n```py\nimport moderngl_window as mglw\n\nclass Test(mglw.WindowConfig):\n    gl_version = (3, 3)\n\n    def render(self, time, frametime):\n        self.ctx.clear(1.0, 0.0, 0.0, 0.0)\n\nmglw.run_window_config(Test)\n```\n\n`WindowConfig` classes are the simplest way to get started without knowing\na lot about this library. For more advanced usage see documenation\nor examples.\n\n## Setup from source\n\nWe assume the user knows how to handle vitrualenvs.\n\n```bash\n# Install the package in editable mode\n$ pip install -e .\n\n# Set up and dev requirements\npip install -r requirements.txt\npip install -r tests/requirements.txt\n```\n\n## Running Tests\n\nTests are set up with `tox` running pytest with coverage and flake8.\n\n```bash\npip install -r tests/requirements.txt\ntox -e py35\ntox -e py36\ntox -e py37\ntox -e pep8\n```\n\n## Building Docs\n\n```bash\npython setup.py build_sphinx\n```\n\n## Contributing\n\nContributions are welcome regardless of experience level.\nDon't hesitate submitting issues, opening partial or completed\npull requests.\n\n### Plugins\n\nWe are interested in contributions providing new loaders, windows etc.\nFor these to be included in this library we require them\nto work cross platforms (win10/linux/osx) and be fairly easy to set up.\n\nIf it requires more than manually downloading a precompiled dll\n(like SDL2, GLEW etc.) it would most likely not be included,\nbut you are welcome to present your case if you still think it should\nbe included.\n\nIf you create your own repo/package containing plugins for\nthis library, please make an issue and we'll link back to it.\nBe sure to include what platforms are suppored, install\ninstructions, how you configure it in `moderngl_window` and\nof course a clear and concise description of what exactly\nyour package provides. \n\n## Attributions\n\nWe can't build everything from scratch. We rely on certain packages\nand resources to make this project possible.\n\n### Windows\n\n* Pyglet (https://github.com/pyglet/pyglet)\n* pyGLFW (https://github.com/FlorianRhiem/pyGLFW)\n* PySDL2 (https://github.com/marcusva/py-sdl2)\n* PySide2 (https://wiki.qt.io/Qt_for_Python)\n* PyQt5 (https://www.riverbankcomputing.com/software/pyqt/intro)\n\n### Loaders\n\n* Pillow (https://python-pillow.org/)\n* pywavefront (https://github.com/pywavefront/PyWavefront)\n* trimesh (https://github.com/mikedh/trimesh)\n\n### Testing & Utility\n\n* Pyrr (https://github.com/adamlwgriffiths/Pyrr)\n* numpy (https://github.com/numpy/numpy)\n* pytest (https://docs.pytest.org/en/latest/)\n* flake8 (https://gitlab.com/pycqa/flake8)\n* coverage (https://github.com/nedbat/coveragepy)\n* tox (https://tox.readthedocs.io/en/latest/)\n\n## Resources\n\n* NASA 3D Resources (https://github.com/nasa/NASA-3D-Resources)\n* glTF Sample Models (https://github.com/KhronosGroup/glTF-Sample-Models)\n\n## Some History\n\nThe majority of the code in this library comes from [demosys-py](https://github.com/Contraz/demosys-py) (somewhat modified).\nBecause `demosys-py` is a framework we decided to split out a lot useful funtionality into this\nlibrary. Frameworks are a lot less appealing to users and it would be a shame to not make this\nmore avaialble to the ModernGL user base.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/moderngl/moderngl_window",
    "keywords": "moderngl,window,context",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "moderngl-window",
    "package_url": "https://pypi.org/project/moderngl-window/",
    "platform": "any",
    "project_url": "https://pypi.org/project/moderngl-window/",
    "project_urls": {
      "Homepage": "https://github.com/moderngl/moderngl_window",
      "ModernGL": "https://github.com/moderngl/moderngl"
    },
    "release_url": "https://pypi.org/project/moderngl-window/1.3.0/",
    "requires_dist": [
      "moderngl (<6)",
      "pyglet (>=1.4.2<2)",
      "numpy (>=1.16)",
      "pyrr (>=0.10.3)",
      "Pillow (>=5)",
      "PySDL2 (>=0.9.6) ; extra == 'pysdl2'",
      "PySide2 (>=5.13) ; extra == 'pyside2'",
      "glfw (>=1.8.3) ; extra == 'glfw'",
      "PyQt5 (>=5.12) ; extra == 'pyqt5'"
    ],
    "requires_python": ">=3.5",
    "summary": "A cross platform helper library for ModernGL making window creation and resource loading simple",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17143352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21af42fa9e7f462e1f0e00e1492c21d1ec6d878f514f3093251be69448af1c37",
        "md5": "618c479570427f9a98f9f4b19ec65f0c",
        "sha256": "d1530f227839c648555a0b48a6d9c22207e0183067f6fe8be46eb12443345d45"
      },
      "downloads": -1,
      "filename": "moderngl_window-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "618c479570427f9a98f9f4b19ec65f0c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 101440,
      "upload_time": "2019-09-02T20:01:29",
      "upload_time_iso_8601": "2019-09-02T20:01:29.513557Z",
      "url": "https://files.pythonhosted.org/packages/21/af/42fa9e7f462e1f0e00e1492c21d1ec6d878f514f3093251be69448af1c37/moderngl_window-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}