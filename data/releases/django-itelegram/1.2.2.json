{
  "info": {
    "author": "Yazdan Ranjbar",
    "author_email": "yazdan_ra@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. image:: https://github.com/YazdanRa/django-itelegram/blob/master/itelegram/static/img/iTelegram.png?raw=true\n\n.. image:: https://img.shields.io/pypi/pyversions/django-itelegram.svg\n   :target: https://pypi.python.org/pypi/django-itelegram/\n\n.. image:: https://img.shields.io/pypi/v/django-itelegram.svg\n   :target: https://pypi.python.org/pypi/django-itelegram/\n\n.. image:: https://img.shields.io/github/license/YazdanRa/django-itelegram.svg\n   :target: https://github.com/YazdanRa/django-itelegram/blob/master/LICENSE\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n-------\n\n\nDjango iTelegram\n=================\nIt's a library for building Telegram bot on Django with extra built-in options.\ncreated from `django-telegrambot`_ with a lot of extra features\n\n\nCompatibility\n=============\n- Python: **3.5**, **3.6**, **3.7**, **3.8**\n- Django: **3.0**, **3.1**, **3.2**\n\n\nInstallation\n============\nYou can install this package by the PyPI with the following command line:\n\n.. code-block:: sh\n\n    pip install django-itelegram\n\n\nConfiguration\n==============\nAdd ``itelegram`` and your bot app to ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # Other apps\n        \"itelegram\",\n        \"YOUR_BOT_APP\",\n    ]\n\nThen Add The ``DJANGO_TELEGRAMBOT`` to the settings just like the following structure:\n\n.. code-block:: python\n\n    DJANGO_TELEGRAMBOT = {\n        \"DISABLE_SETUP\": False,\n        #\n        # TODO: Explain more about this key\n\n        \"MODE\": \"POLLING\",  # (Optional [str])\n        #\n        # The default value is WEBHOOK, otherwise you may use \"POLLING\"\n        # NB: if use polling mode you must provide to run a management command that starts a worker\n\n        \"WEBHOOK_SITE\": \"https://mywebsite.com\",  # Required on WEBHOOK mode\n        #\n        # TODO: Explain more\n\n        \"WEBHOOK_PREFIX\": \"/prefix\",  # (Optional[str])\n        #\n        # If this value is specified, a prefix is added to webhook url\n        # \"WEBHOOK_CERTIFICATE\" : \"cert.pem\",\n        # If your site use self-signed certificate, must be set with location of your public key\n        # certificate.(More info at https://core.telegram.org/bots/self-signed )\n\n        \"STRICT_INIT\": True,  # Optional[bool]\n        #\n        # TODO: Explain more about this key\n\n        \"BOTS\": [\n            {\n                \"ID\": \"MyBot\",  # (Optional[str])\n                #\n                # You can use this ID to get your bot in all the installed apps\n\n                \"TOKEN\": \"1062412615:AAHLZ974OBY3goSSoX6HePTapjgdJMYFnEY\",  # (Required[str])\n                #\n                # Your bot token.\n                # you can get it from ( https://t.me/BotFather )\n\n                \"CONTEXT\": True,\n                #\n                # TODO: Explain more about this key\n\n                # \"ALLOWED_UPDATES\": [],  # (Optional[list[str]])\n                #\n                # List the types of updates you want your bot to receive.\n                # For example, specify ``[\"message\", \"edited_channel_post\", \"callback_query\"]``\n                # to only receive updates of these types.\n                # See ``telegram.Update`` for a complete list of available update types.\n                # Specify an empty list to receive all updates regardless of type (default).\n                # If not specified, the previous setting will be used.\n                # Please note that this parameter doesn't affect updates created before the call to the setWebhook,\n                # so unwanted updates may be received for a short period of time.\n\n                # \"TIMEOUT\": 60,  # (Optional[int|float])\n                #\n                # If this value is specified, use it as the read timeout from the server\n\n                # \"WEBHOOK_MAX_CONNECTIONS\": 40,  # (Optional[int])\n                #\n                # Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery, 1-100.\n                # Defaults to 40. Use lower values to limit the load on your bot's server,\n                # and higher values to increase your bot's throughput.\n\n                # \"POLL_INTERVAL\": 0.0,  # (Optional[float])\n                #\n                # Time to wait between polling updates from Telegram in seconds.\n                # Default is 0.0\n\n                # \"POLL_CLEAN\": False,  # (Optional[bool])\n                #\n                # Whether to clean any pending updates on Telegram servers before actually starting to poll.\n                # Default is False.\n\n                # \"POLL_BOOTSTRAP_RETRIES\": 0,  # (Optional[int])\n                #\n                # Whether the bootstrapping phase of the `Updater`\n                # will retry on failures on the Telegram server.\n                # |   < 0 - retry indefinitely\n                # |     0 - no retries (default)\n                # |   > 0 - retry up to X times\n\n                # \"POLL_READ_LATENCY\": 2,  # (Optional[float|int])\n                #\n                # Grace time in seconds for receiving the reply from server.\n                # Will be added to the `timeout` value and used as the read timeout from server.\n                # Default is 2\n\n                # \"PROXY\": {}, # (Optional[dict]),\n                #\n                # Use proxy to communicate with Telegram API server. Example:\n                #    {\n                #        \"proxy_url\": \"socks5://ip:port\",\n                #        \"urllib3_proxy_kwargs\": {\n                #             \"username\": \"username\",\n                #             \"password\": \"password\"\n                #        }\n                #    }\n                # Default is not to use any proxy.\n            },\n            # Other bots here with same structure.\n        ],\n    }\n\n\nAdd the following line to the url to configure the urls.\n\n.. code-block:: python\n\n    urlpatterns = [\n        # Other urls patterns\n        path(\"itelegram/\", include(\"itelegram.urls\")),\n    ]\n\n\nUsage\n=====\nTODO :D\n\n\nLicense\n=======\n`MIT`_\n\nNote\n====\n(1) This is a fork from `django-telegrambot`_!\n(2) Thanks to **Negar Nadian** for designing the Django iTelegram Logo.\n\n.. _`django-telegrambot`: https://pypi.org/project/django-telegrambot/\n.. _`MIT`: https://github.com/YazdanRa/django-itelegram/blob/master/LICENSE\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/YazdanRa/django-itelegram",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-itelegram",
    "package_url": "https://pypi.org/project/django-itelegram/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-itelegram/",
    "project_urls": {
      "Homepage": "https://github.com/YazdanRa/django-itelegram"
    },
    "release_url": "https://pypi.org/project/django-itelegram/1.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "It's a library for building Telegram bot on Django with extra built-in features",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8917719,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3062071368e1a4c0db6630c5bdfab04bc56c85132e065eff12e45707020d5840",
        "md5": "78df47723d7ef5e8c77a248351455e1e",
        "sha256": "339fb1c9a594844600e30e29dca42e20456c4378a2c5c7aafe8095909968af59"
      },
      "downloads": -1,
      "filename": "django_itelegram-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "78df47723d7ef5e8c77a248351455e1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 200645,
      "upload_time": "2020-10-25T19:36:39",
      "upload_time_iso_8601": "2020-10-25T19:36:39.535581Z",
      "url": "https://files.pythonhosted.org/packages/30/62/071368e1a4c0db6630c5bdfab04bc56c85132e065eff12e45707020d5840/django_itelegram-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a28954d49e2a85491caab57caf7f7c76334d0b77abb296dee4fea6a4a8c7ea10",
        "md5": "1ef8d35cfafab4abaddd1db7f7dc12e8",
        "sha256": "69f052d50707bbab182aebc002bd4b5b4c3f24ce25a6748ffc463c3c8c8c07be"
      },
      "downloads": -1,
      "filename": "django-itelegram-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1ef8d35cfafab4abaddd1db7f7dc12e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 199570,
      "upload_time": "2020-10-25T19:36:41",
      "upload_time_iso_8601": "2020-10-25T19:36:41.058783Z",
      "url": "https://files.pythonhosted.org/packages/a2/89/54d49e2a85491caab57caf7f7c76334d0b77abb296dee4fea6a4a8c7ea10/django-itelegram-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}