{
  "info": {
    "author": "Petr Dlouh√Ω",
    "author_email": "petr.dlouhy@email.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=============================\nDjango payments payu\n=============================\n\n.. image:: https://badge.fury.io/py/django-payments-payu.svg\n    :target: https://badge.fury.io/py/django-payments-payu\n\n.. image:: https://travis-ci.org/PetrDlouhy/django-payments-payu.svg?branch=master\n    :target: https://travis-ci.org/PetrDlouhy/django-payments-payu\n\n.. image:: https://codecov.io/gh/PetrDlouhy/django-payments-payu/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/PetrDlouhy/django-payments-payu\n\n\nNOTE: This project is still in development, so use with extreme caution.\n\nPayU payments provider for django-payments. Uses the new PayU REST API. Supports normal, express and recurring payments.\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-payments-payu.readthedocs.io.\n\nQuickstart\n----------\n\nInstall `django-payments <https://github.com/mirumee/django-payments>`_ and set up PayU payment provider backend according to `django-payments documentation <https://django-payments.readthedocs.io/en/latest/modules.html>`_:\n\n.. class:: payments_payu.provider.PayuProvider(client_secret, second_key, pos_id, [sandbox=False, endpoint=\"https://secure.payu.com/\", recurring_payments=False, express_payments=False, widget_branding=False])\n\n   This backend implements payments using `PayU.com <https://payu.com>`_.\n   \n\nSet up the payment provider:\n\nExample::\n\n      # use sandbox\n      PAYMENT_VARIANTS = {\n          'payu': ('payments_payu.provider.PayuProvider', {\n              'pos_id': '123456',\n              'second_key': 'iseedeadpeople',\n              'client_secret': 'peopleiseedead',\n              'sandbox': True,\n              'capture': False,\n          }),\n      }\n\n\nHere are valid parameters for the provider:\n\n   :param client_secret: PayU OAuth protocol client secret\n   :param pos_id: PayU POS ID\n   :param second_key: PayU second key (MD5)\n   :param sandbox: if ``True``, set the endpoint to sandbox\n   :param endpoint: endpoint URL, if not set, the will be automatically set based on `sandbox` settings\n   :param recurring_payments: enable recurring payments, only valid with ``express_payments=True``, see bellow for additional setup, that is needed\n   :param express_payments: use PayU express form\n   :param widget_branding: tell express form to show PayU branding\n   :param store_card: (default: False) whether PayU should store the card\n\n\nAdditional settings:\n\n   PayU requires users first name, last name and email. Override ether ``get_user`` or ``get_user_email``, ``get_user_first_name`` and ``get_user_last_name`` methods from ``BasePayment``.\n\n   NOTE: notifications about the payment status from PayU are requested to be sent to `django-payments` `process_payment` url. The request from PayU can fail for several reasons (i.e. it can be blocked by proxy). Use \"Show reports\" page in PayU administration to get more information about the requests.\n\n\n**Recurring payments**:\n\n   If recurring payments are enabled, the PayU card token needs to be stored in your application for usage in next payments. The next payments can be either initiated by user through (user will be prompted only for payment confirmation by the express form) or by server.\n   To enable recurring payments, you will need to set additional things:\n\n   NOTE: Recurring payments are not enabled by default even in Sandbox, you sould consult their helpdesk to enable this.\n\n   * In order to make payments recurring, the card token needs to be stored for the ``Payment``'s user (not just the payment itself). Implement the ``Payment.set_renew_token()`` and ``Payment.get_renew_token()``.\n   * Implement ``Payment.get_payment_url()``.\n   * For the server initiated recurring payments you will need to create the new payment and then call ``payment.auto_complete_recurring()``.\n      * The method returns either string 'success' or url where the user can provide his CVV2 or 3D secure information.\n      * The ``'success'`` string means, that the payment is waiting for notification from PayU, but no further user action is required.\n\n\nExample of triggering recurring payment::\n\n       payment = Payment.objects.create(...)\n       redirect_url = payment.auto_complete_recurring()\n       if redirect_url != 'success':\n           send_mail(\n               'Recurring payment - action required',\n               'Please renew your CVV2/3DS at %s' % redirect_url,\n               'noreply@test.com',\n               [user.email],\n               fail_silently=False,\n           )\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n1.1.0 (2021-10-05)\n++++++++++++++++++\n* redirect to payment.get_failure_url() after API error, log the error\n\n1.0.0 (2020-10-21)\n++++++++++++++++++\n* first major release\n* many fixes\n* recurring payments working\n* proved by production environment\n\n0.3.0 (2020-05-30)\n++++++++++++++++++\n* fix amount quantization\n* add store_card parameter\n* fix base url parameter for express form\n\n0.2.0 (2020-04-13)\n++++++++++++++++++\n* Second release\n* Fixed testing matrix\n\n0.1.0 (2020-04-06)\n++++++++++++++++++\n\n* First release on PyPI.\n* Still in development.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PetrDlouhy/django-payments-payu",
    "keywords": "django-payments-payu",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-payments-payu",
    "package_url": "https://pypi.org/project/django-payments-payu/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-payments-payu/",
    "project_urls": {
      "Homepage": "https://github.com/PetrDlouhy/django-payments-payu"
    },
    "release_url": "https://pypi.org/project/django-payments-payu/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "PayU payments provider for django-payments",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13207388,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bae4c57ecbc3236e3a4ae1dee94c205ec2d1c1bbb7cf4b071910000d595192c1",
        "md5": "0d87f7b5f18a8c2ce9ce9eca870cc19d",
        "sha256": "1f868250aecf3a94552c3a15b671d8e537a3e8971932395ff4bb7e6d10bdcacf"
      },
      "downloads": -1,
      "filename": "django-payments-payu-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0d87f7b5f18a8c2ce9ce9eca870cc19d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27350,
      "upload_time": "2021-10-05T15:03:02",
      "upload_time_iso_8601": "2021-10-05T15:03:02.557920Z",
      "url": "https://files.pythonhosted.org/packages/ba/e4/c57ecbc3236e3a4ae1dee94c205ec2d1c1bbb7cf4b071910000d595192c1/django-payments-payu-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}