{
  "info": {
    "author": "Jacob Bieker",
    "author_email": "jacob@openclimatefix.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# MetNet and MetNet-2\n\nPyTorch Implementation of Google Research's MetNet for short term weather forecasting (https://arxiv.org/abs/2003.12140), inspired from https://github.com/tcapelle/metnet_pytorch/tree/master/metnet_pytorch\n\nMetNet-2 (https://arxiv.org/pdf/2111.07470.pdf) is a further extension of MetNet that takes in a larger context image to predict up to 12 hours ahead, and is also implemented in PyTorch here.\n\n## Installation\n\nClone the repository, then run\n```shell\npip install -r requirements.txt\npip install -e .\n````\n\nAlternatively, you can also install a usually older version through ```pip install metnet```\n\nPlease ensure that you're using Python version 3.9 or above.\n\n## Data\n\nWhile the exact training data used for both MetNet and MetNet-2 haven't been released, the papers do go into some detail as to the inputs, which were GOES-16 and MRMS precipitation data, as well as the time period covered. We will be making those splits available, as well as a larger dataset that covers a longer time period, with [HuggingFace Datasets](https://huggingface.co/datasets/openclimatefix/goes-mrms)!\n\n```python\nfrom datasets import load_dataset\n\ndataset = load_dataset(\"openclimatefix/goes-mrms\")\n```\n\nThis uses the publicly avaiilable GOES-16 data and the MRMS archive to create a similar set of data to train and test on, with various other splits available as well.\n\n## Pretrained Weights\nPretrained model weights for MetNet and MetNet-2 have not been publicly released, and there is some difficulty in reproducing their training. We release weights for both MetNet and MetNet-2 trained on cloud mask and satellite imagery data with the same parameters as detailed in the papers on HuggingFace Hub for [MetNet](https://huggingface.co/openclimatefix/metnet) and [MetNet-2](https://huggingface.co/openclimatefix/metnet-2). These weights can be downloaded and used using:\n\n```python\nfrom metnet import MetNet, MetNet2\nmodel = MetNet().from_pretrained(\"openclimatefix/metnet\")\nmodel = MetNet2().from_pretrained(\"openclimatefix/metnet-2\")\n```\n\n## Example Usage\n\nMetNet can be used with:\n\n```python\nfrom metnet import MetNet\nimport torch\nimport torch.nn.functional as F\n\nmodel = MetNet(\n        hidden_dim=32,\n        forecast_steps=24,\n        input_channels=16,\n        output_channels=12,\n        sat_channels=12,\n        input_size=32,\n        )\n# MetNet expects original HxW to be 4x the input size\nx = torch.randn((2, 12, 16, 128, 128))\nout = model(x)\n# MetNet creates predictions for the center 1/4th\ny = torch.randn((2, 24, 12, 8, 8))\nF.mse_loss(out, y).backward()\n```\n\nAnd MetNet-2 with:\n\n```python\nfrom metnet import MetNet2\nimport torch\nimport torch.nn.functional as F\n\nmodel = MetNet2(\n        forecast_steps=8,\n        input_size=64,\n        num_input_timesteps=6,\n        upsampler_channels=128,\n        lstm_channels=32,\n        encoder_channels=64,\n        center_crop_size=16,\n        )\n# MetNet expects original HxW to be 4x the input size\nx = torch.randn((2, 6, 12, 256, 256))\nout = model(x)\ny = torch.rand((2,8,12,64,64))\nF.mse_loss(out, y).backward()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openclimatefix/metnet",
    "keywords": "artificial intelligence,deep learning,transformer,attention mechanism,metnet,forecasting,remote-sensing",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metnet",
    "package_url": "https://pypi.org/project/metnet/",
    "platform": "",
    "project_url": "https://pypi.org/project/metnet/",
    "project_urls": {
      "Homepage": "https://github.com/openclimatefix/metnet"
    },
    "release_url": "https://pypi.org/project/metnet/2.0.5/",
    "requires_dist": [
      "einops (>=0.3.0)",
      "numpy (>=1.19.5)",
      "torchvision (>=0.10.0)",
      "antialiased-cnns",
      "axial-attention",
      "pytorch-msssim",
      "huggingface-hub"
    ],
    "requires_python": "",
    "summary": "PyTorch MetNet Implementation",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17177694,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6f0430bca29c2c57f13117adc1f2fd91ca4ed0a1517fc8b6c9d96d278edab9b",
        "md5": "2a2e47f55d4bdc3a6884ddbacf94a2b8",
        "sha256": "c8a89e611da3d6da47e894da5b9224cb612fdd3af43496745a487751288986e4"
      },
      "downloads": -1,
      "filename": "metnet-2.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a2e47f55d4bdc3a6884ddbacf94a2b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18789,
      "upload_time": "2022-02-23T15:33:57",
      "upload_time_iso_8601": "2022-02-23T15:33:57.556694Z",
      "url": "https://files.pythonhosted.org/packages/c6/f0/430bca29c2c57f13117adc1f2fd91ca4ed0a1517fc8b6c9d96d278edab9b/metnet-2.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6604bf1b0260ec556001677f43f68f55c002ecf414a8082729035172dccc517",
        "md5": "859511aa07d683803583c1dda224d710",
        "sha256": "b86eb9838e1d2298556e98d9fdb499a124155b4b3826f26addb108b3440f1956"
      },
      "downloads": -1,
      "filename": "metnet-2.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "859511aa07d683803583c1dda224d710",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15265,
      "upload_time": "2022-02-23T15:33:58",
      "upload_time_iso_8601": "2022-02-23T15:33:58.555969Z",
      "url": "https://files.pythonhosted.org/packages/c6/60/4bf1b0260ec556001677f43f68f55c002ecf414a8082729035172dccc517/metnet-2.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}