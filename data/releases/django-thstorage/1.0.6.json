{
  "info": {
    "author": "Lichangsong&Tianyang",
    "author_email": "lics@nscc-tj.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=========\nthStorage\n=========\n\nthStorage is a simple app to connect to th clusters' storage system\n\ndetail documentation is in the \"docs\" directory\n\nQuick start\n\n1.Install based pubgins [django restframework;requests] like this::\n\n    'pip install djangorestframework==3.11.0' 'pip install requests'\n\n2.Add \"rest_framework\" and \"thStorage\" to your INSTALLED_APPS setting like this::\n\n    INSTALL_APPS = [ ... 'thStorage', 'rest_framework', ]\n\n3.Include the thStorage URLconf in your project urls.py like this::\n\n    from thStorage import urls as thStorageUrls urlpatterns = [ path('admin/', admin.site.urls), path('login/', main.login), ] + thStorageUrls.urlpatterns\n\n4.Run python manage.py migrate to create thStorage models\n\n5.Run python manage.py collectstatic to migrate thStorage statics\n\n6.Set django project settings like::\n\n    REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'rest_framework.authentication.TokenAuthentication', ) } # restful api csrftoken!!!!!!\n\n    X_FRAME_OPTIONS = 'ALLOWALL' # (or your host name) STATIC_URL = '/static/' STATIC_ROOT = os.path.join(BASE_DIR,\"static\").replace(\"\\\",\"/\") TH_STORAGE_CONFIG = { 'TOKEN_UPDATE_IMTERVAL': 36000000, 'STORAGE_BACKEND_HOST':'thstorage backend server', 'STORAGE_BACKEND_APPID':'your thstorage appid', 'STORAGE_BACKEND_APPKEY':'your thstorage appkey', }\n\n7.Login thstorage when your project's user login like this::\n\n    from thStorage.models import THStorageUser ... systemUsername = user.username # systemUsername is tianhe system (in nscc-tj) username, and username is your project username cluster = \"TH-HPC1\" # cluster is tianhe system cluster name thStorageUser = THStorageUser(username,cluster,systemUsername) thStorageUser.Login()\n\n8.Set LocalStorage in login redirect page like this::\n\n    from thStorage.thstorage import THStorageUser ... username = request.user.username systemUsername = request.session.get(\"systemUsername\",\"\") cluster = request.session.get(\"cluster\",\"\") thStorageUser = THStorageUser(username, cluster, systemUsername) t, u, c, s = thStorageUser.Login() thst = {\"token\": t, \"username\": s, \"cluster\": c,\"platform\":\"default\"} return render(request, 'index.html', {\"thst\":thst})\n\n    edit index.html\n\n    <script> var platform = \"{{thst.platform}}\"; var username = \"{{thst.username}}\"; var cluster = \"{{thst.cluster}}\"; var token = \"{{thst.token}}\"; localStorage.setItem(\"platform\", platform); localStorage.setItem(\"username\", username); localStorage.setItem(\"cluster\", cluster); localStorage.setItem(\"token\", token); </script>\n\n9.Add url \"/thStorage\" to your storage page by iframe::\n\n    <body>\n    your html elements\n    <iframe id=\"myiframe\" src=\"/thstorage\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>\n    </body> <script> var ifm= document.getElementById(\"myiframe\"); //or set as your div element's height ifm.height=document.documentElement.clientHeight; </script>\n\n10.Add thStorage's NetDiskUser to admin::\n\n    from thStorage.models import NetDiskUser\n\n11. Register your models here.\n    admin.site.register(NetDiskUser)\n\n12.Test thStorage:: Run python manage.py createsuperuser add a admin user add a test user to thStorage's NetDiskUser by admin (user must map to real th systemuser)\n\n13.Start the development server and visit http://127.0.0.1:8000/yourLoginUrl then login and enjoy it!",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.nscc-tj.cn",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-thStorage",
    "package_url": "https://pypi.org/project/django-thStorage/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-thStorage/",
    "project_urls": {
      "Homepage": "https://www.nscc-tj.cn"
    },
    "release_url": "https://pypi.org/project/django-thStorage/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple django app to use thuri web visual apps",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7375286,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1115ad41c13329eb75ba58c6a0a80a736c127649aa7202a080a1d44ecde79fcb",
        "md5": "8c8dec8adb6bfdf7f4e66ee3463ee4f4",
        "sha256": "2de2ec9c3a268044d4bf2787d4a4eef56bc408fdb0ae55754172c6a54cf3f10f"
      },
      "downloads": -1,
      "filename": "django-thStorage-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "8c8dec8adb6bfdf7f4e66ee3463ee4f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1012802,
      "upload_time": "2020-06-01T07:15:22",
      "upload_time_iso_8601": "2020-06-01T07:15:22.884084Z",
      "url": "https://files.pythonhosted.org/packages/11/15/ad41c13329eb75ba58c6a0a80a736c127649aa7202a080a1d44ecde79fcb/django-thStorage-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}