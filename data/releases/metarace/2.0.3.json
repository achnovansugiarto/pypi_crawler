{
  "info": {
    "author": "",
    "author_email": "Nathan Fraser <ndf-zz@6-v.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Other/Nonlisted Topic"
    ],
    "description": "# metarace\n\nA collection of Python modules to assist with cycle race timekeeping\nand official result preparation. Version 2 of Metarace is a\nre-write for Python 3, which removes static pyGTK/glib dependencies.\n\nThis package includes common shared elements that a metarace\napplication might require eg report, tod, decoder.\nUnlike version 1, application-level modules are not contained in\nthe library, they are available separately as standalone projects.\n\n## TODO\n\n### riderdb: CSV Rider and Category list\n\n\n## Module Overview\n\nFor details on module contents, methods and properties, use\npydoc:\n\n\t$ pydoc metarace.tod\n\n### metarace: Base Library\n\nShared initialisation and resource management for applications.\nIncludes a tempfile context manager for updating files that\nmay be read while being updated.\n\n\n### jsonconfig: Configuration File Wrapper\n\nA thin wrapper on a dictionary-based configuration\nwith JSON export and import. The structure for a configuration\nis a dictionary of sections, each of which contains a dictionary\nof key/value pairs, where the key is a unicode string and the\nvalue may be any base type supported by python & JSON. For example:\n\n\t\"modulename\": {\n\t\t\"simpleoption\": \"string value\",\n\t\t\"complexoption\": {\n\t\t\t\"ordering\": [\"a\",\"b\",\"c\"],\n\t\t\t\"counter\": 1023\n\t\t}\n\t}\n\n\n### tod: Time of Day Object\n\nRepresent timing measurements and calculations for short intervals \n(<24 hours) and aggregates.\n\n\n### timy: Alge Timy Chronometer\n\nRead time of day measurements from an attached Alge Timy.\n\n\n### decoder: Transponder Decoders\n\nStandardised interfaces for transponder readers from Race Result\nand Chronelec:\n\n   - rrs : Race Result System Decoder (passive and active)\n   - rru : Race Result USB Timing Box (active)\n   - thbc : Chronelec (Tag Heuer) Protime/Elite RC and LS\n\n\n### strops: Common String Manipulations\n\nCommonly used functions for formatting competitor names,\nrankings and user inputs. Example:\n\n\t>>> strops.lapstring(3)\n\t'3 Laps'\n\t>>> strops.riderlist_split('1+2  6-10, 22')\n\t['1', '2', '6', '7', '8', '9', '10', '22']\n\n\n### telegraph: Interprocess Communication\n\nMQTT backed message exchange service. \n\n\n### unt4: Legacy Timing Protocol\n\nSwiss Timing UNT4 protocol wrapper, for legacy devices and DHI\ncommunications.\n\n\n### sender: Legacy DHI Scoreboard Interface\n\nThread object for drawing text on a\n[Caprica](https://github.com/ndf-zz/caprica)\nor Galactica DHI scoreboard over TCP, UDP and serial connections.\n\n\n### gemini: Numeric LED Scoreboard Interface\n\nThread object for writing to a pair of Swiss Timing Gemini\nnumeric LED boards, and lap count displays.\n\n\n### countback: Accumulate and Compare Count of Places\n\nRepresent a countback of places and allow for simple comparisons:\n\n\t>>> from metarace import countback\n\t>>> a=countback.countback('-,2')\n\t>>> b=countback.countback('-,1,1')\n\t>>> a>b\n\tTrue\n\t>>> a[3]+=1\n\t>>> b[1]+=1\n\t>>> a>b\n\tFalse\n\t>>> str(a)\n\t'-,2,-,1'\n\t>>> str(b)\n\t'-,2,1'\n\t>>> str(a+b)\n\t'-,4,1,1'\n\n\n### htlib: HTML Generation\n\nFunctional primitives for HTML generation.\n\n\t>>> htlib.div(htlib.p(('Check the',\n\t...                    htlib.a('website', {'href':'#website'}),\n\t...                    'for more.')))\n\t'<div><p>Check the\\n<a href=\"#website\">website</a>\\nfor more.</p></div>'\n\n\n### report: Report Generation\n\nCreate sectioned reports and save to PDF, HTML, XLS and JSON.\n\n\n### export: Result Export and Mirroring\n\nProvides a means to execute a process on the host system, to\nmirror result files to a remote server, or to run a script.\n\n\n### eventdb: CSV Event List\n\nMainly for trackmeet, a CSV event listing object.\n\n\n## Requirements\n\nSystem requirements:\n\n   - Cairo\n   - Pango\n   - PangoCairo\n   - Rsvg\n   - Python gi\n   - Python gi cairo\n   - tex-gyre fonts\n   - mosquitto (optional)\n\nPython packages:\n\n   - pyserial: Serial port interface\n   - python-dateutil: Generic date/time string parser\n   - xlwt: XLS file writer\n   - libscrc: 16 bit CRC for thbc\n   - paho-mqtt: MQTT interface\n   - importlib-resources: Package data files() interface (transitional)\n\n\n## Installation\n\nFor a Debian-ish system, install the system requirements first:\n\n\t# apt-get install gir1.2-rsvg-2.0 gir1.2-pango-1.0 tex-gyre python3-cairo python3-gi python3-gi-cairo python3-pip\n\nThen use pip3 to install metarace:\n\n\t$ pip3 install metarace\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "cyclesport,results,timing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metarace",
    "package_url": "https://pypi.org/project/metarace/",
    "platform": null,
    "project_url": "https://pypi.org/project/metarace/",
    "project_urls": {
      "homepage": "https://github.com/ndf-zz/metarace"
    },
    "release_url": "https://pypi.org/project/metarace/2.0.3/",
    "requires_dist": [
      "importlib-resources",
      "pyserial",
      "python-dateutil",
      "pycairo",
      "PyGObject",
      "libscrc",
      "paho-mqtt",
      "xlwt",
      "grapheme"
    ],
    "requires_python": ">=3.6",
    "summary": "Cyclesport results and timing toolkit",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15866229,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3faf4eefcfec4f046b5a018f2f84bc7427e15646cfc822f5718c0e5d79a0422c",
        "md5": "2630d6fa0e20518b4c022511f0ddebe7",
        "sha256": "76ef5a91b6c38ed2cec375b9ab45a322a885cd64e6c8ad4057c253d36dbd8d06"
      },
      "downloads": -1,
      "filename": "metarace-2.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2630d6fa0e20518b4c022511f0ddebe7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 101529,
      "upload_time": "2022-11-23T12:00:33",
      "upload_time_iso_8601": "2022-11-23T12:00:33.007741Z",
      "url": "https://files.pythonhosted.org/packages/3f/af/4eefcfec4f046b5a018f2f84bc7427e15646cfc822f5718c0e5d79a0422c/metarace-2.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbadc78d2794eeafe7250f0bfbe09731519e06656754699c8bfd1789ebded043",
        "md5": "b5aa454bd5fd69c29829ffd304529a48",
        "sha256": "53c65c17b0632c76f1e20161454dfb68ba4c61d801ce29fa6d9b51f3fd9a384d"
      },
      "downloads": -1,
      "filename": "metarace-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b5aa454bd5fd69c29829ffd304529a48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 88692,
      "upload_time": "2022-11-23T12:00:35",
      "upload_time_iso_8601": "2022-11-23T12:00:35.878331Z",
      "url": "https://files.pythonhosted.org/packages/fb/ad/c78d2794eeafe7250f0bfbe09731519e06656754699c8bfd1789ebded043/metarace-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}