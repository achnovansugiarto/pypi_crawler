{
  "info": {
    "author": "Blaine McCarthy",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Python Software Foundation License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "mobypy |build| |issues| |coverage| |codesize| |reposize| |license|\n======\n.. |build| image:: https://img.shields.io/badge/build-passing-success\n.. |issues| image:: https://img.shields.io/github/issues/blainemccarthy/mobypy\n.. |license| image:: https://img.shields.io/github/license/blainemccarthy/mobypy\n.. |coverage| image:: https://img.shields.io/badge/coverage-100%25-success\n.. |codesize| image:: https://img.shields.io/github/languages/code-size/blainemccarthy/mobypy\n.. |reposize| image:: https://img.shields.io/github/repo-size/blainemccarthy/mobypy\n\nPython module for searching the Moby Thesaurus created by Grady Ward\n\nTo Install mobypy:\n------------------\n\n>>> pip install mobypy\n\nTo Use mobypy:\n--------------\n\n>>> import mobypy\n\n>>> synonyms = mobypy.synonyms(\"abbreviated\")\n>>> print(synonyms)\n['Spartan', 'abridged', 'abstracted', 'aposiopestic', 'bobbed', 'brief', 'brusque', 'capsule', 'capsulized', 'clipped', 'close', 'compact', 'compendious', 'compressed', 'concise', 'condensed', 'contracted', 'crisp', 'cropped', 'curt', 'curtailed', 'cut', 'cut short', 'digested', 'docked', 'elided', 'elliptic', 'epigrammatic', 'gnomic', 'laconic', 'mowed', 'mown', 'nipped', 'pithy', 'pointed', 'pollard', 'polled', 'pruned', 'reaped', 'reserved', 'sententious', 'shaved', 'sheared', 'short', 'short and sweet', 'short-cut', 'shortened', 'snub', 'snubbed', 'succinct', 'summary', 'synopsized', 'taciturn', 'terse', 'tight', 'to the point', 'trimmed', 'truncated']\n\n>>> short_synonyms = mobypy.short_synonyms(\"abbreviated\")\n>>> print(short_synonyms)\n['brief', 'close', 'crisp', 'curt', 'cut', 'mowed', 'mown', 'pithy', 'short', 'snub', 'terse', 'tight']\n\n>>> long_synonyms = mobypy.long_synonyms(\"abbreviated\")\n>>> print(long_synonyms)\n['Spartan', 'abridged', 'abstracted', 'aposiopestic', 'bobbed', 'brusque', 'capsule', 'capsulized', 'clipped', 'compact', 'compendious', 'compressed', 'concise', 'condensed', 'contracted', 'cropped', 'curtailed', 'cut short', 'digested', 'docked', 'elided', 'elliptic', 'epigrammatic', 'gnomic', 'laconic', 'nipped', 'pointed', 'pollard', 'polled', 'pruned', 'reaped', 'reserved', 'sententious', 'shaved', 'sheared', 'short and sweet', 'short-cut', 'shortened', 'snubbed', 'succinct', 'summary', 'synopsized', 'taciturn', 'to the point', 'trimmed', 'truncated']\n\n>>> rev_search = mobypy.reverse_search(\"abbreviate\")\n>>> print(rev_search)\n['compact', 'cut short', 'cut', 'short', 'snub']\n\nIf no results are found, an empty list is returned\n\n>>> bad_search = mobypy.synonyms(\"asdasdasdasd\")\n>>> bad_search = mobypy.long_synonyms(\"asdasdasdasd\")\n>>> bad_search = mobypy.short_synonyms(\"asdasdasdasd\")\n>>> bad_search = mobypy.reverse_search(\"asdasdasdasd\")\n>>> print(bad_search)\n[]\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/blainemccarthy/mobypy",
    "keywords": "moby,thesaurus,synonyms,language,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mobypy",
    "package_url": "https://pypi.org/project/mobypy/",
    "platform": "",
    "project_url": "https://pypi.org/project/mobypy/",
    "project_urls": {
      "Homepage": "https://github.com/blainemccarthy/mobypy"
    },
    "release_url": "https://pypi.org/project/mobypy/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python module for searching the Moby thesaurus",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5875884,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aae06a30bdf7744ac23772fb15d7238d8002a1dbe64da48e35cf621169b7de72",
        "md5": "ceb6dce53fcfdfd3be4b65d4036e0da2",
        "sha256": "e02bfac9530e953f0b3f98c7082f4294d618a3c2788590993e17f25fd4326ccc"
      },
      "downloads": -1,
      "filename": "mobypy-1.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "ceb6dce53fcfdfd3be4b65d4036e0da2",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 9285198,
      "upload_time": "2019-09-23T17:31:30",
      "upload_time_iso_8601": "2019-09-23T17:31:30.172205Z",
      "url": "https://files.pythonhosted.org/packages/aa/e0/6a30bdf7744ac23772fb15d7238d8002a1dbe64da48e35cf621169b7de72/mobypy-1.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e706b3c634a5c3d26e4c922785f8621fe9d8789ea37af0d59465cdfaa7450c9b",
        "md5": "ff54da3abcc0a568828e4324953f96cf",
        "sha256": "159a9b79da6ae3a73a4ea40cf551c76a030f44698e94fbe8056a964979177506"
      },
      "downloads": -1,
      "filename": "mobypy-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ff54da3abcc0a568828e4324953f96cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9279483,
      "upload_time": "2019-09-23T17:31:47",
      "upload_time_iso_8601": "2019-09-23T17:31:47.572425Z",
      "url": "https://files.pythonhosted.org/packages/e7/06/b3c634a5c3d26e4c922785f8621fe9d8789ea37af0d59465cdfaa7450c9b/mobypy-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}