{
  "info": {
    "author": "Andreas Madsen",
    "author_email": "amwebdk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# lrcurve\n\n**Creates a learning-curve plot for Jupyter/Colab notebooks that is\nupdated in real-time.**\n\nThere is a framework agnostic interface `lrcurve.PlotLearningCurve`\nthat works well with PyTorch and Tensorflow and a keras wrapper\n`lrcurve.KerasLearningCurve` that uses the keras callback interface.\n\n`lrcurve` works with python 3.6 or newer and is distributed under the\nMIT license.\n\n![Gif of learning-curve](gifs/readme_header.gif)\n\n## Install\n\n```bash\npip install -U lrcurve\n```\n\n## API\n\n* [`lrcurve.PlotLearningCurve`](lrcurve/plot_learning_curve.py)\n* [`lrcurve.KerasLearningCurve`](lrcurve/keras_learning_curve.py)\n\n## Examples\n\n* [Keras example](#keras-example)\n* [Framework agnostic example](#framework-agnostic-example)\n* [PyTorch example](#pytorch-example)\n\n### Keras example\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AndreasMadsen/python-lrcurve/blob/master/notebooks/keras_example.ipynb)\n\n```python\nfrom lrcurve import KerasLearningCurve\n\nmodel.compile(optimizer=keras.optimizers.Adam(),\n              loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n              metrics=[keras.metrics.SparseCategoricalAccuracy()])\n\nmodel.fit(train.x, train.y,\n          epochs=100,\n          verbose=0,\n          validation_data=(validation.x, validation.y),\n          callbacks=[KerasLearningCurve()])\n```\n\n![Gif of learning-curve for keras example](gifs/keras_example.gif)\n\n### Framework agnostic example\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AndreasMadsen/python-lrcurve/blob/master/notebooks/emulated_training.ipynb)\n\n```python\nwith PlotLearningCurve() as plot:\n    for i in range(100):\n        plot.append(i, {\n            'loss': math.exp(-(i+1)/10),\n            'val_loss': math.exp(-i/10)\n        })\n        plot.draw()\n        time.sleep(0.1)\n```\n\n![Gif of learning-curve for simple example](gifs/simple_example.gif)\n\n### PyTorch example\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AndreasMadsen/python-lrcurve/blob/master/notebooks/pytorch_example.ipynb)\n\n```python\nfrom lrcurve import PlotLearningCurve\n\nplot = PlotLearningCurve(\n    mappings = {\n        'loss': { 'line': 'train', 'facet': 'loss' },\n        'val_loss': { 'line': 'validation', 'facet': 'loss' },\n        'acc': { 'line': 'train', 'facet': 'acc' },\n        'val_acc': { 'line': 'validation', 'facet': 'acc' }\n    },\n    facet_config = {\n        'loss': { 'name': 'Cross-Entropy', 'limit': [0, None], 'scale': 'linear' },\n        'acc': { 'name': 'Accuracy', 'limit': [0, 1], 'scale': 'linear' }\n    },\n    xaxis_config = { 'name': 'Epoch', 'limit': [0, 500] }\n)\n\nwith plot:\n    # optimize model\n    for epoch in range(500):\n        # compute loss\n        z_test = network(x_test)\n        loss_test = criterion(z_test, y_test)\n\n        optimizer.zero_grad()\n        z_train = network(x_train)\n        loss_train = criterion(z_train, y_train)\n        loss_train.backward()\n        optimizer.step()\n\n        # compute accuacy\n        accuacy_test = sklearn.metrics.accuracy_score(torch.argmax(z_test, 1).numpy(), y_test)\n        accuacy_train = sklearn.metrics.accuracy_score(torch.argmax(z_train, 1).numpy(), y_train)\n\n        # append and update\n        plot.append(epoch, {\n            'loss': loss_train,\n            'val_loss': loss_test,\n            'acc': accuacy_train,\n            'val_acc': accuacy_test\n        })\n        plot.draw()\n```\n\n![Gif of learning-curve for pytorch example](gifs/pytorch_example.gif)\n\n## Sponsor\n\nSponsored by <a href=\"https://www.nearform.com/research/\">NearForm Research</a>.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AndreasMadsen/lrcurve",
    "keywords": "learning,curve,pytorch,keras,tensorflow,jupyter,colab,interactive,live,real-time",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lrcurve",
    "package_url": "https://pypi.org/project/lrcurve/",
    "platform": "",
    "project_url": "https://pypi.org/project/lrcurve/",
    "project_urls": {
      "Homepage": "https://github.com/AndreasMadsen/lrcurve"
    },
    "release_url": "https://pypi.org/project/lrcurve/2.2.1/",
    "requires_dist": [
      "ipython",
      "nose ; extra == 'test'",
      "jupyterlab ; extra == 'test'",
      "tensorflow ; extra == 'test'",
      "torch ; extra == 'test'",
      "scikit-learn ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Real-time learning curve for Jupiter notebooks",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12720352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "468ff0dbb6c2f349ac0b50c09702024f838f0010f6ad2357fefa7856369dcc02",
        "md5": "31899f6187746adcf7fe406e24364772",
        "sha256": "908382a1c09ee635301d73843c4bdfb93c6ca07abf2263c7ee1825e377abac29"
      },
      "downloads": -1,
      "filename": "lrcurve-2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31899f6187746adcf7fe406e24364772",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 71025,
      "upload_time": "2022-01-28T11:41:47",
      "upload_time_iso_8601": "2022-01-28T11:41:47.984497Z",
      "url": "https://files.pythonhosted.org/packages/46/8f/f0dbb6c2f349ac0b50c09702024f838f0010f6ad2357fefa7856369dcc02/lrcurve-2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daef5fd55fca7607086803541861c1cb8c079932e8446e7bc9390ef47cfd3c71",
        "md5": "986733c8f45de37c31b0ac805f457083",
        "sha256": "60d490123d7cd699e3a57693f35bd88652534eb982813b10bf8ae8d82ec6a0dc"
      },
      "downloads": -1,
      "filename": "lrcurve-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "986733c8f45de37c31b0ac805f457083",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 70172,
      "upload_time": "2022-01-28T11:41:51",
      "upload_time_iso_8601": "2022-01-28T11:41:51.149890Z",
      "url": "https://files.pythonhosted.org/packages/da/ef/5fd55fca7607086803541861c1cb8c079932e8446e7bc9390ef47cfd3c71/lrcurve-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}