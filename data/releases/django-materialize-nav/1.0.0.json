{
  "info": {
    "author": "Justin Engel",
    "author_email": "jtengel08@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 2.0",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Materialize Nav\nThis library was created to make django work with materializecss. \n\n\n## Setup\nInstall the library.\n\n\n```python\n# project/settings.py\n\nINSTALLED_APPS = [\n    \"materialize_nav\",\n    ...\n]\n\n```\n\n### Setup Context Processors\nMaterialize nav comes with a context processor to use some settings to change the default base styling.\n```python\n# Context Processor to work with settings\nTEMPLATES = [\n    {\n        ...\n        'OPTIONS': {\n            'context_processors': [\n                ...\n                'materialize_nav.context_processors.get_context',\n            ],\n        },\n    },\n]\n\n```\n\nAlternative way to get the standard context for views\n```python\n# views.py\n\nfrom materialize_nav.context_processors import get_context\n\n\ndef show_page(request):\n    # Get the context with the style settings\n    context = get_context(primary_color='teal')\n    \n    context[\"object\"] = \"MyObject\"\n    return render(request, \"my_page.html\", context)\n```\n\n\n## Style\nThe base template can be used by extending the materialize base nav.\n\n```html\n{% extends \"materialize_nav/base.html\" %}\n\n\n{% block nav_items %}\n    <li><a href=\"sass.html\">Sass</a></li>\n    <li><a href=\"badges.html\">Components</a></li>\n    <li><a href=\"collapsible.html\">JavaScript</a></li>\n{% endblock %}\n\n\n{% block sidenav_items %}\n    {# This makes the sidenav items reusable in other templates #}\n    {% include \"my_app/sidenav_items.html\" %}\n{% endblock %}\n\n\n{% block contents %}\n<div class=\"row\">\n    <div class=\"col s12 m9 l10\">\n        <p>My Content goes here</p>\n    </div>\n</div>\n{% endblock %}\n```\n\n### Styling controls\n\nMaterialize nav comes with several style options used in the template context variables listed below.\n\n  * HIDE_CONTAINER\n  * SHOW_SIDENAV\n  * FIXED_SIDENAV\n  * PRIMARY_COLOR\n  * SECONDARY_COLOR\n  * PRIMARY_COLOR_LIGHT\n  * PRIMARY_COLOR_DARK\n  * SUCCESS_COLOR\n  * ERROR_COLOR\n  * LINK_COLOR\n  \nIf you went through the `Setup Context Processors` step then you can modify several settings to change the default style.\nThis is an alternative to manually providing all of the template context variables.\n\n```python\n# settings.py\n\nMATERIALIZE_HIDE_CONTAINER = False\nMATERIALIZE_SHOW_SIDENAV = True\nMATERIALIZE_FIXED_SIDENAV = False\nMATERIALIZE_PRIMARY_COLOR = 'materialize-red lighten-2'\nMATERIALIZE_SECONDARY_COLOR = 'teal'\nMATERIALIZE_PRIMARY_COLOR_LIGHT = '#e51c23'\nMATERIALIZE_PRIMARY_COLOR_DARK = None\nMATERIALIZE_SUCCESS_COLOR = None\nMATERIALIZE_ERROR_COLOR = None\nMATERIALIZE_LINK_COLOR = None\n\n```\n\n### Styling process\nThere are two methods for changing the default coloring for Materialize CSS.\n\n  * The old method is to use the templatetag `include_dynamic_css` which would use the django template system to generate \n    a style tag with the proper css classes overridden.\n\n  * The new method includes the `materialize_nav/materialize_nav_colors.js` file which uses javascript to create a \n    style tag to edit the proper css classes. This method should require less work from django to change the style.\n\n\n## Goals\n\nMy original goal was to create an easier way to use materialize css with django. When I first started forms did not \nformat properly and I thought navigation was a pain. Unfortunately, my original approach made this library a strong \ncoupled to your django app which was a terrible design decision. I am trying to simplify this library to help style \ndjango apps quickly and without a lot of settings.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/justengel/django_materialize_nav/archive/v1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/justengel/django_materialize_nav",
    "keywords": "Django Materialize CSS",
    "license": "Proprietary",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-materialize-nav",
    "package_url": "https://pypi.org/project/django-materialize-nav/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-materialize-nav/",
    "project_urls": {
      "Download": "https://github.com/justengel/django_materialize_nav/archive/v1.0.0.tar.gz",
      "Homepage": "https://github.com/justengel/django_materialize_nav"
    },
    "release_url": "https://pypi.org/project/django-materialize-nav/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django materialize css support.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10173856,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3d897c74412c94ccd870506db1933788adb2a99e2824f8fa3c0a7f14e1e9481",
        "md5": "4546c6eb0eac02bbb3f0dccb56854a11",
        "sha256": "da20380d979cc711dee7d00733609f68a60bcbbedc31911bda9a516f7dba1e59"
      },
      "downloads": -1,
      "filename": "django_materialize_nav-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4546c6eb0eac02bbb3f0dccb56854a11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24991,
      "upload_time": "2019-03-25T21:54:48",
      "upload_time_iso_8601": "2019-03-25T21:54:48.166604Z",
      "url": "https://files.pythonhosted.org/packages/d3/d8/97c74412c94ccd870506db1933788adb2a99e2824f8fa3c0a7f14e1e9481/django_materialize_nav-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}