{
  "info": {
    "author": "Alex Rubinsteyn",
    "author_email": "alex.rubinsteyn@mssm.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "`|Build Status| <https://travis-ci.org/hammerlab/mhctools>`_ `|Coverage\nStatus| <https://coveralls.io/r/hammerlab/mhctools?branch=master>`_\n`|DOI| <https://zenodo.org/badge/latestdoi/18834/hammerlab/mhctools>`_\n\nmhctools\n========\n\nPython interface to running command-line and web-based MHC binding\npredictors.\n\nExample\n-------\n\n\\`\\`\\`python from mhctools import NetMHCpan # Run NetMHCpan for alleles\nHLA-A*01:01 and HLA-A*02:01 predictor = NetMHCpan(alleles=[\"A\\*02:01\",\n\"hla-a0101\"])\n\nscan the short proteins 1L2Y and 1L3Y for epitopes\n==================================================\n\nprotein\\_sequences = { \"1L2Y\": \"NLYIQWLKDGGPSSGRPPPS\", \"1L3Y\":\n\"ECDTINCERYNGQVCGGPGRGLCFCGKCRCHPGFEGSACQA\" }\n\nepitope\\_collection = predictor.predict(protein\\_sequences)\n\nflatten binding predictions into a Pandas DataFrame\n===================================================\n\ndf = epitope\\_collection.dataframe()\n\nepitope collection is sorted by percentile rank\n===============================================\n\nof binding predictions\n======================\n\nstrongest\\_predicted\\_binder = epitope\\_collection[0] \\`\\`\\` ## API\n\nThe following MHC binding predictors are available in ``mhctools``: \\*\n``NetMHC3``: requires locally installed version of `NetMHC\n3.x <http://www.cbs.dtu.dk/services/NetMHC-3.4/>`_ \\* ``NetMHC4``:\nrequires locally installed version of `NetMHC\n4.x <http://www.cbs.dtu.dk/services/NetMHC/>`_ \\* ``NetMHC``: a wrapper\nfunction to automatically use ``NetMHC3`` or ``NetMHC4`` depending on\nwhat's installed. \\* ``NetMHCpan``: requires locally installed version\nof `NetMHCpan <http://www.cbs.dtu.dk/services/NetMHCpan/>`_ \\*\n``NetMHCIIpan``: requires locally installed version of\n`NetMHCIIpan <http://www.cbs.dtu.dk/services/NetMHCIIpan/>`_ \\*\n``NetMHCcons``: requires locally installed version of\n`NetMHCcons <http://www.cbs.dtu.dk/services/NetMHCcons/>`_ \\*\n``IedbMhcClass1``: Uses IEDB's REST API for class I binding predictions.\n\\* ``IedbMhcClass2``: Uses IEDB's REST API for class II binding\npredictions. \\* ``RandomBindingPredictor``: Creates binding predictions\nwith random IC50 and percentile rank values.\n\nEvery binding predictor is constructed with an ``alleles`` argument\nspecifying the HLA type for which to make predictions. Predictions are\ngenerated by calling the ``predict`` method with a dictionary mapping\nsequence IDs or names to amino acid sequences.\n\nAdditionally there is a module for running the\n`NetChop <http://www.cbs.dtu.dk/services/NetChop>`_ proteosomal cleavage\npredictor: \\* ``NetChop``: requires locally installed version of\n`NetChop-3.1 <http://www.cbs.dtu.dk/services/NetChop/>`_\n\n.. |Build\nStatus| image:: https://travis-ci.org/hammerlab/mhctools.svg?branch=master\n.. |Coverage\nStatus| image:: https://coveralls.io/repos/hammerlab/mhctools/badge.svg?branch=master\n.. |DOI| image:: https://zenodo.org/badge/18834/hammerlab/mhctools.svg",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hammerlab/mhctools",
    "keywords": "",
    "license": "http://www.apache.org/licenses/LICENSE-2.0.html",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mhctools",
    "package_url": "https://pypi.org/project/mhctools/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mhctools/",
    "project_urls": {
      "Homepage": "https://github.com/hammerlab/mhctools"
    },
    "release_url": "https://pypi.org/project/mhctools/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python interface to running command-line and web-based MHC binding predictors",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8378148,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ea704b8568e4cfa26192ea73624b98d4247a2a7edf676c638777f4c440039ea",
        "md5": "c3f9c840fbfce06c7c6ae2b4db7485cb",
        "sha256": "aad86bd176d072602fe1a48b44d88f6ed5e776ac1c2dfc41602396f4d64dac4b"
      },
      "downloads": -1,
      "filename": "mhctools-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c3f9c840fbfce06c7c6ae2b4db7485cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30050,
      "upload_time": "2017-03-02T15:16:33",
      "upload_time_iso_8601": "2017-03-02T15:16:33.032372Z",
      "url": "https://files.pythonhosted.org/packages/2e/a7/04b8568e4cfa26192ea73624b98d4247a2a7edf676c638777f4c440039ea/mhctools-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}