{
  "info": {
    "author": "Alex Rubinsteyn",
    "author_email": "alex.rubinsteyn@mssm.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "|Build Status| |Coverage Status| |DOI|\n\nmhctools\n========\n\nPython interface to running command-line and web-based MHC binding\npredictors.\n\nExample\n-------\n\n.. code:: python\n\n    from mhctools import NetMHCpan\n    # Run NetMHCpan for alleles HLA-A*01:01 and HLA-A*02:01\n    predictor = NetMHCpan(alleles=[\"A*02:01\", \"hla-a0101\"])\n\n    # scan the short proteins 1L2Y and 1L3Y for epitopes\n    protein_sequences = {\n      \"1L2Y\": \"NLYIQWLKDGGPSSGRPPPS\",\n      \"1L3Y\": \"ECDTINCERYNGQVCGGPGRGLCFCGKCRCHPGFEGSACQA\"\n    }\n\n    epitope_collection = predictor.predict(protein_sequences)\n\n    # flatten binding predictions into a Pandas DataFrame\n    df = epitope_collection.dataframe()\n\n    # epitope collection is sorted by percentile rank\n    # of binding predictions\n    strongest_predicted_binder = epitope_collection[0]\n\nAPI\n---\n\nThe following MHC binding predictors are available in ``mhctools``: \\*\n``NetMHC3``: requires locally installed version of `NetMHC\n3.x <http://www.cbs.dtu.dk/services/NetMHC-3.4/>`__ \\* ``NetMHC4``:\nrequires locally installed version of `NetMHC\n4.x <http://www.cbs.dtu.dk/services/NetMHC/>`__ \\* ``NetMHC``: a wrapper\nfunction to automatically use ``NetMHC3`` or ``NetMHC4`` depending on\nwhat's installed. \\* ``NetMHCpan``: requires locally installed version\nof `NetMHCpan <http://www.cbs.dtu.dk/services/NetMHCpan/>`__ \\*\n``NetMHCIIpan``: requires locally installed version of\n`NetMHCIIpan <http://www.cbs.dtu.dk/services/NetMHCIIpan/>`__ \\*\n``NetMHCcons``: requires locally installed version of\n`NetMHCcons <http://www.cbs.dtu.dk/services/NetMHCcons/>`__ \\*\n``IedbMhcClass1``: Uses IEDB's REST API for class I binding predictions.\n\\* ``IedbMhcClass2``: Uses IEDB's REST API for class II binding\npredictions. \\* ``RandomBindingPredictor``: Creates binding predictions\nwith random IC50 and percentile rank values.\n\nEvery binding predictor is constructed with an ``alleles`` argument\nspecifying the HLA type for which to make predictions. Predictions are\ngenerated by calling the ``predict`` method with a dictionary mapping\nsequence IDs or names to amino acid sequences.\n\nAdditionally there is a module for running the\n`NetChop <http://www.cbs.dtu.dk/services/NetChop>`__ proteosomal\ncleavage predictor: \\* ``NetChop``: requires locally installed version\nof `NetChop-3.1 <http://www.cbs.dtu.dk/services/NetChop/>`__\n\n.. |Build Status| image:: https://travis-ci.org/hammerlab/mhctools.svg?branch=master\n   :target: https://travis-ci.org/hammerlab/mhctools\n.. |Coverage Status| image:: https://coveralls.io/repos/hammerlab/mhctools/badge.svg?branch=master\n   :target: https://coveralls.io/r/hammerlab/mhctools?branch=master\n.. |DOI| image:: https://zenodo.org/badge/18834/hammerlab/mhctools.svg\n   :target: https://zenodo.org/badge/latestdoi/18834/hammerlab/mhctools\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hammerlab/mhctools",
    "keywords": "",
    "license": "http://www.apache.org/licenses/LICENSE-2.0.html",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mhctools",
    "package_url": "https://pypi.org/project/mhctools/",
    "platform": "",
    "project_url": "https://pypi.org/project/mhctools/",
    "project_urls": {
      "Homepage": "https://github.com/hammerlab/mhctools"
    },
    "release_url": "https://pypi.org/project/mhctools/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python interface to running command-line and web-based MHC binding predictors",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8378148,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8ab3ca25d8a8fb0d8dd76b393963059d8a0d70526e4ab55cb7c8f5cbd90d254",
        "md5": "d2f2333e8523a57db8cea6fa1204b5cc",
        "sha256": "ed1a6c03760c5268d953ddc30505fb994f1eba0b42733f61e48125aa7395aef3"
      },
      "downloads": -1,
      "filename": "mhctools-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d2f2333e8523a57db8cea6fa1204b5cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28360,
      "upload_time": "2017-03-07T21:59:16",
      "upload_time_iso_8601": "2017-03-07T21:59:16.050197Z",
      "url": "https://files.pythonhosted.org/packages/b8/ab/3ca25d8a8fb0d8dd76b393963059d8a0d70526e4ab55cb7c8f5cbd90d254/mhctools-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}