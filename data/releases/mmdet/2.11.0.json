{
  "info": {
    "author": "OpenMMLab",
    "author_email": "openmmlab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<div align=\"center\">\n  <img src=\"resources/mmdet-logo.png\" width=\"600\"/>\n</div>\n\n**News**: We released the technical report on [ArXiv](https://arxiv.org/abs/1906.07155).\n\nDocumentation: https://mmdetection.readthedocs.io/\n\n## Introduction\n\nEnglish | [简体中文](README_zh-CN.md)\n\nMMDetection is an open source object detection toolbox based on PyTorch. It is\na part of the [OpenMMLab](https://openmmlab.com/) project.\n\nThe master branch works with **PyTorch 1.3+**.\nThe old v1.x branch works with PyTorch 1.1 to 1.4, but v2.0 is strongly recommended for faster speed, higher performance, better design and more friendly usage.\n\n![demo image](resources/coco_test_12510.jpg)\n\n### Major features\n\n- **Modular Design**\n\n  We decompose the detection framework into different components and one can easily construct a customized object detection framework by combining different modules.\n\n- **Support of multiple frameworks out of box**\n\n  The toolbox directly supports popular and contemporary detection frameworks, *e.g.* Faster RCNN, Mask RCNN, RetinaNet, etc.\n\n- **High efficiency**\n\n  All basic bbox and mask operations run on GPUs. The training speed is faster than or comparable to other codebases, including [Detectron2](https://github.com/facebookresearch/detectron2), [maskrcnn-benchmark](https://github.com/facebookresearch/maskrcnn-benchmark) and [SimpleDet](https://github.com/TuSimple/simpledet).\n\n- **State of the art**\n\n  The toolbox stems from the codebase developed by the *MMDet* team, who won [COCO Detection Challenge](http://cocodataset.org/#detection-leaderboard) in 2018, and we keep pushing it forward.\n\nApart from MMDetection, we also released a library [mmcv](https://github.com/open-mmlab/mmcv) for computer vision research, which is heavily depended on by this toolbox.\n\n## License\n\nThis project is released under the [Apache 2.0 license](LICENSE).\n\n## Changelog\n\nv2.11.0 was released in 01/04/2021.\nPlease refer to [changelog.md](docs/changelog.md) for details and release history.\nA comparison between v1.x and v2.0 codebases can be found in [compatibility.md](docs/compatibility.md).\n\n## Benchmark and model zoo\n\nResults and models are available in the [model zoo](docs/model_zoo.md).\n\nSupported backbones:\n\n- [x] ResNet (CVPR'2016)\n- [x] ResNeXt (CVPR'2017)\n- [x] VGG (ICLR'2015)\n- [x] HRNet (CVPR'2019)\n- [x] RegNet (CVPR'2020)\n- [x] Res2Net (TPAMI'2020)\n- [x] ResNeSt (ArXiv'2020)\n\nSupported methods:\n\n- [x] [RPN (NeurIPS'2015)](configs/rpn)\n- [x] [Fast R-CNN (ICCV'2015)](configs/fast_rcnn)\n- [x] [Faster R-CNN (NeurIPS'2015)](configs/faster_rcnn)\n- [x] [Mask R-CNN (ICCV'2017)](configs/mask_rcnn)\n- [x] [Cascade R-CNN (CVPR'2018)](configs/cascade_rcnn)\n- [x] [Cascade Mask R-CNN (CVPR'2018)](configs/cascade_rcnn)\n- [x] [SSD (ECCV'2016)](configs/ssd)\n- [x] [RetinaNet (ICCV'2017)](configs/retinanet)\n- [x] [GHM (AAAI'2019)](configs/ghm)\n- [x] [Mask Scoring R-CNN (CVPR'2019)](configs/ms_rcnn)\n- [x] [Double-Head R-CNN (CVPR'2020)](configs/double_heads)\n- [x] [Hybrid Task Cascade (CVPR'2019)](configs/htc)\n- [x] [Libra R-CNN (CVPR'2019)](configs/libra_rcnn)\n- [x] [Guided Anchoring (CVPR'2019)](configs/guided_anchoring)\n- [x] [FCOS (ICCV'2019)](configs/fcos)\n- [x] [RepPoints (ICCV'2019)](configs/reppoints)\n- [x] [Foveabox (TIP'2020)](configs/foveabox)\n- [x] [FreeAnchor (NeurIPS'2019)](configs/free_anchor)\n- [x] [NAS-FPN (CVPR'2019)](configs/nas_fpn)\n- [x] [ATSS (CVPR'2020)](configs/atss)\n- [x] [FSAF (CVPR'2019)](configs/fsaf)\n- [x] [PAFPN (CVPR'2018)](configs/pafpn)\n- [x] [Dynamic R-CNN (ECCV'2020)](configs/dynamic_rcnn)\n- [x] [PointRend (CVPR'2020)](configs/point_rend)\n- [x] [CARAFE (ICCV'2019)](configs/carafe/README.md)\n- [x] [DCNv2 (CVPR'2019)](configs/dcn/README.md)\n- [x] [Group Normalization (ECCV'2018)](configs/gn/README.md)\n- [x] [Weight Standardization (ArXiv'2019)](configs/gn+ws/README.md)\n- [x] [OHEM (CVPR'2016)](configs/faster_rcnn/faster_rcnn_r50_fpn_ohem_1x_coco.py)\n- [x] [Soft-NMS (ICCV'2017)](configs/faster_rcnn/faster_rcnn_r50_fpn_soft_nms_1x_coco.py)\n- [x] [Generalized Attention (ICCV'2019)](configs/empirical_attention/README.md)\n- [x] [GCNet (ICCVW'2019)](configs/gcnet/README.md)\n- [x] [Mixed Precision (FP16) Training (ArXiv'2017)](configs/fp16/README.md)\n- [x] [InstaBoost (ICCV'2019)](configs/instaboost/README.md)\n- [x] [GRoIE (ICPR'2020)](configs/groie/README.md)\n- [x] [DetectoRS (ArXix'2020)](configs/detectors/README.md)\n- [x] [Generalized Focal Loss (NeurIPS'2020)](configs/gfl/README.md)\n- [x] [CornerNet (ECCV'2018)](configs/cornernet/README.md)\n- [x] [Side-Aware Boundary Localization (ECCV'2020)](configs/sabl/README.md)\n- [x] [YOLOv3 (ArXiv'2018)](configs/yolo/README.md)\n- [x] [PAA (ECCV'2020)](configs/paa/README.md)\n- [x] [YOLACT (ICCV'2019)](configs/yolact/README.md)\n- [x] [CentripetalNet (CVPR'2020)](configs/centripetalnet/README.md)\n- [x] [VFNet (ArXix'2020)](configs/vfnet/README.md)\n- [x] [DETR (ECCV'2020)](configs/detr/README.md)\n- [x] [CascadeRPN (NeurIPS'2019)](configs/cascade_rpn/README.md)\n- [x] [SCNet (AAAI'2021)](configs/scnet/README.md)\n\nSome other methods are also supported in [projects using MMDetection](./docs/projects.md).\n\n## Installation\n\nPlease refer to [get_started.md](docs/get_started.md) for installation.\n\n## Getting Started\n\nPlease see [get_started.md](docs/get_started.md) for the basic usage of MMDetection.\nWe provide [colab tutorial](demo/MMDet_Tutorial.ipynb), and full guidance for quick run [with existing dataset](docs/1_exist_data_model.md) and [with new dataset](docs/2_new_data_model.md) for beginners.\nThere are also tutorials for [finetuning models](docs/tutorials/finetune.md), [adding new dataset](docs/tutorials/new_dataset.md), [designing data pipeline](docs/tutorials/data_pipeline.md), [customizing models](docs/tutorials/customize_models.md), [customizing runtime settings](docs/tutorials/customize_runtime.md) and [useful tools](docs/useful_tools.md).\n\nPlease refer to [FAQ](docs/faq.md) for frequently asked questions.\n\n## Contributing\n\nWe appreciate all contributions to improve MMDetection. Please refer to [CONTRIBUTING.md](.github/CONTRIBUTING.md) for the contributing guideline.\n\n## Acknowledgement\n\nMMDetection is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks.\nWe wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new detectors.\n\n## Citation\n\nIf you use this toolbox or benchmark in your research, please cite this project.\n\n```\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n```\n\n## Projects in OpenMMLab\n\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab foundational library for computer vision.\n- [MMClassification](https://github.com/open-mmlab/mmclassification): OpenMMLab image classification toolbox and benchmark.\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab detection toolbox and benchmark.\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab's next-generation platform for general 3D object detection.\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab semantic segmentation toolbox and benchmark.\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab's next-generation action understanding toolbox and benchmark.\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab video perception toolbox and benchmark.\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab pose estimation toolbox and benchmark.\n- [MMEditing](https://github.com/open-mmlab/mmediting): OpenMMLab image and video editing toolbox.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/open-mmlab/mmdetection",
    "keywords": "computer vision,object detection",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmdet",
    "package_url": "https://pypi.org/project/mmdet/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmdet/",
    "project_urls": {
      "Homepage": "https://github.com/open-mmlab/mmdetection"
    },
    "release_url": "https://pypi.org/project/mmdet/2.11.0/",
    "requires_dist": [
      "matplotlib",
      "mmpycocotools",
      "numpy",
      "six",
      "terminaltables",
      "cython ; extra == 'all'",
      "numpy ; extra == 'all'",
      "albumentations (>=0.3.2) ; extra == 'all'",
      "cityscapesscripts ; extra == 'all'",
      "imagecorruptions ; extra == 'all'",
      "mmlvis ; extra == 'all'",
      "scipy ; extra == 'all'",
      "sklearn ; extra == 'all'",
      "matplotlib ; extra == 'all'",
      "mmpycocotools ; extra == 'all'",
      "six ; extra == 'all'",
      "terminaltables ; extra == 'all'",
      "asynctest ; extra == 'all'",
      "codecov ; extra == 'all'",
      "flake8 ; extra == 'all'",
      "interrogate ; extra == 'all'",
      "isort (==4.3.21) ; extra == 'all'",
      "kwarray ; extra == 'all'",
      "onnx (==1.7.0) ; extra == 'all'",
      "onnxruntime (==1.5.1) ; extra == 'all'",
      "pytest ; extra == 'all'",
      "ubelt ; extra == 'all'",
      "xdoctest (>=0.10.0) ; extra == 'all'",
      "yapf ; extra == 'all'",
      "cython ; extra == 'build'",
      "numpy ; extra == 'build'",
      "albumentations (>=0.3.2) ; extra == 'optional'",
      "cityscapesscripts ; extra == 'optional'",
      "imagecorruptions ; extra == 'optional'",
      "mmlvis ; extra == 'optional'",
      "scipy ; extra == 'optional'",
      "sklearn ; extra == 'optional'",
      "asynctest ; extra == 'tests'",
      "codecov ; extra == 'tests'",
      "flake8 ; extra == 'tests'",
      "interrogate ; extra == 'tests'",
      "isort (==4.3.21) ; extra == 'tests'",
      "kwarray ; extra == 'tests'",
      "onnx (==1.7.0) ; extra == 'tests'",
      "onnxruntime (==1.5.1) ; extra == 'tests'",
      "pytest ; extra == 'tests'",
      "ubelt ; extra == 'tests'",
      "xdoctest (>=0.10.0) ; extra == 'tests'",
      "yapf ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "OpenMMLab Detection Toolbox and Benchmark",
    "version": "2.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17076559,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b94507f0af04dcba6532fdfa424e2b1f997606feded253524c821f6e94a16ba8",
        "md5": "57745e1f30220f6e3b52f848bad29f17",
        "sha256": "809f9f463034aa390c65b6e903f0e9fede7c48e59f386610b441348373d8581e"
      },
      "downloads": -1,
      "filename": "mmdet-2.11.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57745e1f30220f6e3b52f848bad29f17",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 559830,
      "upload_time": "2021-04-02T08:37:02",
      "upload_time_iso_8601": "2021-04-02T08:37:02.053145Z",
      "url": "https://files.pythonhosted.org/packages/b9/45/07f0af04dcba6532fdfa424e2b1f997606feded253524c821f6e94a16ba8/mmdet-2.11.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb4d515dd9e90ed098f77254ae4b4c29a37649e3aa86a0d357da3e293cc6f1ac",
        "md5": "fc259162f9122f0409a3c0a56afcbea6",
        "sha256": "daf000e687a1fd4523923b78649544cbc08306de4189c207b5ce8a51fa9858f3"
      },
      "downloads": -1,
      "filename": "mmdet-2.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fc259162f9122f0409a3c0a56afcbea6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 399363,
      "upload_time": "2021-04-02T08:37:03",
      "upload_time_iso_8601": "2021-04-02T08:37:03.140239Z",
      "url": "https://files.pythonhosted.org/packages/cb/4d/515dd9e90ed098f77254ae4b4c29a37649e3aa86a0d357da3e293cc6f1ac/mmdet-2.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}