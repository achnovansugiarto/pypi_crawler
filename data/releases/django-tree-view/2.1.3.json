{
  "info": {
    "author": "Alex Fischer",
    "author_email": "alex@quadrant.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Tree View\n\nOrganize your view code and templates and in a directory structure, and automatically generate urls for them.\n\n## Terminology\n\n\"Tree View\" refers the actual view function we've created, which processes a request according to code you write inside your \"view tree\".\n\n## Installation\n\n1. `pip install django_tree_view`\n2. In your urls.py file, add in a call to `make_tree_view`, passing in the python package name (dotted python path) of your view tree:\n    ```python\n    from django_tree_view import make_tree_view\n\n    urlpatterns = [\n        make_tree_view('my_view_tree'),\n    ]\n    ```\n\n    Note: we're not using django's path() here, and we didn't specify a url regex. make_tree_view() returns an object which dynamically resolves urls, matching them whenever there is a corresponding directory (with a `view_tree_node.py` module) inside of your view tree.\n\n    Note: you can use `include('some_path/', [make_tree_view()])` if you want a url prefix.\n\n3. Optionally, add the full path to your view tree to the `DIRS` option of your `DjangoTemplates` backend:\n    ```python\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [os.path.join(BASE_DIR, 'my_view_tree')],\n            ...\n        },\n    ]\n    ```\n\n    This will allow you to place page-specific templates inside the same directory which holds the view code for that url.\n\n## Organizing Your View Tree\n\nTODO\n\n## TODO\n\nWhen DEBUG and reloading, reload empty modules (not sure, but this might already be done).\n\n### \"Single View Tree\" approach\nOur path resolver no longer matches when the \"path directory\" contains no `view_tree_node.py` file. \n\nI think we should change how view trees are \"installed\". The user should define one global `VIEW_TREE_ROOT`. You can \"install\" reusable apps in your view tree by symlinking to them from your view tree.\n\nThis makes things easier to understand for the end user. They don't need understand `make_tree_view()`. You have a single directory containing your view tree. Period.\n\nThe challenge: if an app is distributed on pypi, symlinking to it (in a way that can be copied between server environments), is not trivial.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quadrant-newmedia/django_tree_view",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-tree-view",
    "package_url": "https://pypi.org/project/django-tree-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-tree-view/",
    "project_urls": {
      "Homepage": "https://github.com/quadrant-newmedia/django_tree_view"
    },
    "release_url": "https://pypi.org/project/django-tree-view/2.1.3/",
    "requires_dist": [
      "Django (<3.1,>=2.2)",
      "django-dynamic-path (>=0.0.4<1)",
      "django-referer-csrf (<1)",
      "django-early-return (<1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Organize your code and templates in a natural directory structure",
    "version": "2.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10779222,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c03c5dc2b612c0d4238af4af3425716699fdb44dae72b1932767f5c4d4f06fd",
        "md5": "12e1000a924e51750c750d0d02619f53",
        "sha256": "4fc80d5e29872431a654621b81eb55296f53295b5edc5387def380830fd3c17e"
      },
      "downloads": -1,
      "filename": "django_tree_view-2.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12e1000a924e51750c750d0d02619f53",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15478,
      "upload_time": "2020-06-24T20:47:59",
      "upload_time_iso_8601": "2020-06-24T20:47:59.214441Z",
      "url": "https://files.pythonhosted.org/packages/4c/03/c5dc2b612c0d4238af4af3425716699fdb44dae72b1932767f5c4d4f06fd/django_tree_view-2.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21e5a56d7a31ba760e42005b56d0ec4fa2e00b82cfb7fb97693fd33732f612e5",
        "md5": "f580a04513452b69e5f9b1b66195c0a8",
        "sha256": "115ca4d3933f693a364704d9499f73ebc5fe85c01c63d9d72d357f00de1fc3d3"
      },
      "downloads": -1,
      "filename": "django_tree_view-2.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f580a04513452b69e5f9b1b66195c0a8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10258,
      "upload_time": "2020-06-24T20:48:00",
      "upload_time_iso_8601": "2020-06-24T20:48:00.461313Z",
      "url": "https://files.pythonhosted.org/packages/21/e5/a56d7a31ba760e42005b56d0ec4fa2e00b82cfb7fb97693fd33732f612e5/django_tree_view-2.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}