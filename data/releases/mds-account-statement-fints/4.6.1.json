{
  "info": {
    "author": "m-ds GbR",
    "author_email": "service@m-ds.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Framework :: Tryton",
      "Intended Audience :: Customer Service",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Natural Language :: German",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Financial :: Accounting"
    ],
    "description": "mds-account-statement-fints\n===========================\nTryton module for importing bank statements via Internet \nfrom your bank using the FinTS-3 protocol.\n\nInstall\n-------\npip install mds-account-statement-fints\n\nLimitations\n-----------\n- PIN/TAN authentication only\n- read only access\n\nHow to setup\n============\n\nConfigure access to your bank\n-----------------------------\nCreate your Bank\n  Open *Banking/Banks* and create your bank. The value for the *FinTS-URL* can \n  be found on the website 'https://www.hbci-zka.de/institute/institut_auswahl.htm', \n  search for your bank and copy the value for *PIN/TAN-URL*.\nCreate Account\n  Open *Banking/Account*. Create an account and enter owner, currency, \n  and the bank you just created. Your company must be the owner of the bank account to \n  allow online access. Create a 'Number'. Enter your IBAN and activate 'enable online \n  access'. In 'FinTS-Login' enter the login name for your online account.\n  You can also enter the PIN.  If you leave the field blank, you will be \n  prompted for the PIN each time you access online banking.\nCheck connection\n  Open *Banking/Account*, mark the accounts to be checked. Click the action \n  button and select 'Check bank access'. If the connection works, \n  the dialog will display the list of available SEPA accounts.  \n\nCreate journals\n---------------\nJournal for account transactions\n  In *Finance/Configuration/Journals/Journals* create a new entry and enter a name, \n  e.g. 'BankXY bookings', the type is 'statement'. Enter in *Default Debit Account*\n  and *Default Credit Account* an account from your chart of accounts. In the german \n  SKR04 for example '1810'. This account will receive all account movements of your \n  bank account. In *sequence* use the existing 'Default Account Journal'.\nStatement Journal\n  In *Finance/Configuration/Statements/Statement Journals* create a new entry and \n  enter a name, eg 'BankXY statements'. Enter the other values: *Currency:* Euro, \n  *Journal:* the journal created above, *Company:* your company, \n  *Bank Account:* the bank account created above, *Validation Type:* Balance. \n  This journal will contain the bank statements.\n\nPermissions\n-----------\n*Account Statement FinTS - edit logindata*\n  allows the user to change the connection settings and the login data to the bank\n*Account Statement FinTS - online access*\n  allows the user online access to the bank\n\nThe following permissions are required for a user to fetch the account statements:\n  - Account Statement FinTS online access\n  - Account\n\nIn order to allow the automatic generation of bank accounts of the payer/payee \nthe user needs the permission 'Bank Adminstration'.\n\n\nPick up bank statements\n=======================\nOpen *Finance/Statements/Statements*, click the action button and then \n'Import bank statements online'. The wizard will guide you through the \nimport. For new payments, a statement is created in draft mode. \nYou can then check and commit the statement.\n\nInvoices that have to be paid are automatically linked with appropriate\nlines of the bank statement if: the invoice number appears in the purpose \nand the amount corresponds to the invoice amount.\n\nRequires\n========\n- Tryton 4.6\n- fints (tested with 0.2.1)\n- Python 3\n\nChanges\n=======\n4.6.1 - 11/02/2018\n - Improved recognition of known account statement lines\n\n4.6.0 - 08/01/2018\n - first public version\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.m-ds.de/",
    "keywords": "tryton invoice fints bank statement",
    "license": "GPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mds-account-statement-fints",
    "package_url": "https://pypi.org/project/mds-account-statement-fints/",
    "platform": "",
    "project_url": "https://pypi.org/project/mds-account-statement-fints/",
    "project_urls": {
      "Homepage": "https://www.m-ds.de/"
    },
    "release_url": "https://pypi.org/project/mds-account-statement-fints/4.6.1/",
    "requires_dist": [
      "fints (>=0.2.1)",
      "mds-sqlextension (>=0.1.4)",
      "trytond-bank (<4.7,>=4.6)",
      "trytond-party (<4.7,>=4.6)",
      "trytond-account-statement (<4.7,>=4.6)",
      "trytond-account-invoice (<4.7,>=4.6)",
      "trytond (<4.7,>=4.6)"
    ],
    "requires_python": "",
    "summary": "Tryton module for importing bank statements via Internet from your bank using the FinTS-3 protocol.",
    "version": "4.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4195832,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "979b26eb003bfcf91c23abd7f636d09e76076155c39d255f750f241afc925b24",
        "md5": "d8ab20b3ecc8440777105eee1f4933c3",
        "sha256": "35f9f7498ccf7202dd2ae55d10ab29e92c4d5b4c48a0a22f7ab4589ce9f47460"
      },
      "downloads": -1,
      "filename": "mds_account_statement_fints-4.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8ab20b3ecc8440777105eee1f4933c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 48598,
      "upload_time": "2018-01-11T10:33:39",
      "upload_time_iso_8601": "2018-01-11T10:33:39.298264Z",
      "url": "https://files.pythonhosted.org/packages/97/9b/26eb003bfcf91c23abd7f636d09e76076155c39d255f750f241afc925b24/mds_account_statement_fints-4.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1cb815031d132f112c0e0e83c3b14a0a15f5e9fa96dc1c86e51f9f48f753367",
        "md5": "f3dd852c51c25988992660792a6b6134",
        "sha256": "be5d9d3a49917e568727ec86a87ecff83fc976db366280c31750fa96e06628c6"
      },
      "downloads": -1,
      "filename": "mds_account_statement_fints-4.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f3dd852c51c25988992660792a6b6134",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33630,
      "upload_time": "2018-01-11T10:33:40",
      "upload_time_iso_8601": "2018-01-11T10:33:40.833752Z",
      "url": "https://files.pythonhosted.org/packages/f1/cb/815031d132f112c0e0e83c3b14a0a15f5e9fa96dc1c86e51f9f48f753367/mds_account_statement_fints-4.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}