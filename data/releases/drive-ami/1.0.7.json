{
  "info": {
    "author": "Tim Staley",
    "author_email": "timstaley337@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "============\ndrive-ami\n============\nA python package for scripting the AMI_-reduce pipeline.\n\nFor a full description, see `Staley and Anderson (2015)`_. \nIf you use drive-ami in work leading to a publication, we ask that you cite \nthe paper above, and the relevant `ASCL entry`_.\n\n.. _AMI: http://www.mrao.cam.ac.uk/telescopes/ami/\n.. _Staley and Anderson (2015): https://github.com/timstaley/automated-radio-imaging-paper\n.. _ASCL entry: http://ascl.net/1502.017\n\n\nRationale\n---------\nFrom a radio astronomy point of view:\n This package makes it trivial to script reduction of raw AMI data\n from python. What's more, it provides tools to group the raw files into \n datasets, outputting the UVFITS for each dataset under a single folder.\n It does this by extracting the pointing information from the raw data,\n resulting in fairly reliable groupings (although you can edit these manually, \n see later). \n\n When processing the data, all output from ``reduce`` is saved to an\n accompanying log-file, retaining all information that would normally \n be available to the user from the interactive interface.\n Meanwhile, all emulated commands passed to ``reduce`` are \n recorded in a separate log for each file processed, so it's easy to\n re-run the script manually and tinker with the reduction process.\n \n Additionally, when running commands listed in a script the interface\n quietly parses key information such as flagging percentages, \n rain modulation, and estimated noise, from the ``reduce`` output. \n These are then stored to disk alongside the UVFITs in easily \n machine readable JSON format. \n (These may also be added to the UVFITS header in future.)\n\n \n\nFrom a software engineering point of view:\n Written in Fortran, with an interactive terminal interface, the ``reduce`` \n pipeline takes a little coaxing to co-operate with calling scripts, \n making automated processing of large numbers of files tricky.\n Fortunately, the python library ``pexpect`` provides an easy mechanism \n to emulate human interaction, upon which I've built an interface class.\n Limitations such as a maximum path length of ~32 chars are circumvented\n with a few careful hacks. \n The python logging libraries then allow us provide the user with \n minimal progress information, whilst retaining all possible information \n for debugging and scientific evaluation.\n \nInstallation\n------------\n\n*Requirements*:\n - You will need a working installation of AMI-reduce (naturally)\n - `pexpect <http://pypi.python.org/pypi/pexpect/>`_ For interfacing with AMI-reduce.\n   (Installed automatically as part of the python setup.) \n - `astropy <http://astropy.org/>`_ Used for calculating\n   co-ordinate distances, etc.\n   (Installed automatically as part of the python setup.)\n   \nFrom the command line (preferably within a virtualenv):: \n\n git clone git://github.com/timstaley/drive-ami.git\n cd drive-ami\n pip install numpy #Workaround for buggy scipy/numpy combined install.\n pip install .\n\nUsage\n-----\n\nCommand-line scripts are installed along with the package. \nTheir sourcefiles can be found at https://github.com/timstaley/drive-ami/tree/master/bin.\nFor full details, run e.g.::\n\n    driveami_list_rawfiles.py -h\n\nWhere ``-h`` is short for 'help'.\n\nTypical usage is to run ``driveami_list_rawfiles.py`` to build a full\nlisting of available data, followed by ``driveami_filter_rawfile_listing.py`` \nto extract the entries on a desired target. \nFinally, ``driveami_calibrate_rawfiles.py`` actually does the processing using \nAMI-REDUCE.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/timstaley/drive-ami",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drive-ami",
    "package_url": "https://pypi.org/project/drive-ami/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/drive-ami/",
    "project_urls": {
      "Homepage": "https://github.com/timstaley/drive-ami"
    },
    "release_url": "https://pypi.org/project/drive-ami/1.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An interface layer for scripting the AMI-Reduce pipeline.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2854250,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "207e5115be8fdd0888553081ac5fdeca26548ead28f5185e00950184a05707c8",
        "md5": "28e8a766b234d6399707dc91572a9aaa",
        "sha256": "eb3f73f46157f9bfcc55eeabe3784736323af95ce038d11d918de05d9839204a"
      },
      "downloads": -1,
      "filename": "drive-ami-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "28e8a766b234d6399707dc91572a9aaa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31087,
      "upload_time": "2017-05-05T17:01:08",
      "upload_time_iso_8601": "2017-05-05T17:01:08.309596Z",
      "url": "https://files.pythonhosted.org/packages/20/7e/5115be8fdd0888553081ac5fdeca26548ead28f5185e00950184a05707c8/drive-ami-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}