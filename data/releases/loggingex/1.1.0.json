{
  "info": {
    "author": "Paulius Maru≈°ka",
    "author_email": "paulius.maruska+loggingex@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "##################\nLogging Extensions\n##################\n\n.. image:: https://travis-ci.com/open-things/loggingex.svg?branch=master\n    :target: https://travis-ci.com/open-things/loggingex\n\nImplements a few extensions for the standard python logging library.\n\nCurrently, this project lacks documentation. Sorry about that.\n\n\nLogging Context Filter\n======================\n\nLogging Context Filter injects context variables into LogRecord objects as extra\nfields.\n\nHere's a usage example:\n\n.. code-block:: python\n\n    import logging\n    import sys\n\n    from loggingex.context import LoggingContextFilter, context\n\n    log = logging.getLogger()\n\n\n    def process_lines(lines):\n        for index, line in enumerate(lines):\n            line = line.strip()\n            with context(current_line=index + 1):\n                log.debug(\"processing line: %s\", line)\n                if not line:\n                    log.error(\"empty line!\")\n                    continue\n                log.info(\"processed line: %s\", line)\n\n\n    def process_files(filenames):\n        log.debug(\"starting...\")\n        for filename in filenames:\n            with context(current_file=filename):\n                log.info(\"processing file: %s\", filename)\n                with open(filename, \"r\") as f:\n                    process_lines(f)\n                log.info(\"processed file: %s\", filename)\n        log.debug(\"work is complete!\")\n\n\n    if __name__ == \"__main__\":\n        formatter = logging.Formatter(\n            \"%(current_file)s:%(current_line)s:%(levelname)s: %(message)s\"\n        )\n        handler = logging.StreamHandler(stream=sys.stdout)\n        handler.setFormatter(formatter)\n        handler.setLevel(logging.DEBUG)\n        handler.addFilter(LoggingContextFilter())  # it's that simple\n        logging.basicConfig(handlers=[handler], level=logging.DEBUG)\n\n        with context(current_file=\"-\", current_line=\"-\"):\n            # The context above sets default value, so that the formatter does\n            # not crash, when they are not defined.\n            process_files(sys.argv[1:])\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/open-things/loggingex/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loggingex",
    "package_url": "https://pypi.org/project/loggingex/",
    "platform": "",
    "project_url": "https://pypi.org/project/loggingex/",
    "project_urls": {
      "Homepage": "https://github.com/open-things/loggingex/"
    },
    "release_url": "https://pypi.org/project/loggingex/1.1.0/",
    "requires_dist": [
      "contextvars ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.5",
    "summary": "Logging Extensions",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5154465,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f08fb0e0724e43ecb77eb9508824f294217dfebaca26858a338f412392ec620f",
        "md5": "95efdafc3e3fe8e17d50122b2398424f",
        "sha256": "6cb6830bd5935fe854223ad1350702e0ec42928d1c9d4653e006e2f379418ec3"
      },
      "downloads": -1,
      "filename": "loggingex-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95efdafc3e3fe8e17d50122b2398424f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8588,
      "upload_time": "2019-04-12T07:18:46",
      "upload_time_iso_8601": "2019-04-12T07:18:46.463966Z",
      "url": "https://files.pythonhosted.org/packages/f0/8f/b0e0724e43ecb77eb9508824f294217dfebaca26858a338f412392ec620f/loggingex-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d7cb5b2ccfde5e5a31994982cb9bc4187cb5bfd4d1799de28a4e1c06982150c",
        "md5": "b5c19630d616d534159f2d7746fb25dd",
        "sha256": "9154d22c272ddba279c0f10072d95b0ad9ac6fabfd8456b53dd4cf140d4696c9"
      },
      "downloads": -1,
      "filename": "loggingex-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b5c19630d616d534159f2d7746fb25dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 15228,
      "upload_time": "2019-04-12T07:18:47",
      "upload_time_iso_8601": "2019-04-12T07:18:47.697448Z",
      "url": "https://files.pythonhosted.org/packages/6d/7c/b5b2ccfde5e5a31994982cb9bc4187cb5bfd4d1799de28a4e1c06982150c/loggingex-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}