{
  "info": {
    "author": "Raihan Kabir",
    "author_email": "rk4bir.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django :: 3",
      "Framework :: Django :: 4",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# djnotifier\n>**djnotifier** is a Django app to conduct web-based real time notification. Almost fully customizable app + plugin.\n\n\n# Quick start\n> Guide to setup `djnotifier` into your Django project\n\n## Requirements\n1. System requirements: **`Redis server`**\n2. `pip3` packages -\n    ```text\n    channels\n    channels-redis\n    ```\n   and off course `django` itself.\n\n## Install and configure\n### Step-0\n```shell\npip install djnotifier\n```\n\n### Step-1\nAdd **djnotifier** to your `INSTALLED_APPS` setting like this\n\n ```python\nINSTALLED_APPS = [\n     ...\n     'djnotifier',\n ]\n ```\n\n### Step-2\nSetup `asgi` application for the project\n\n1. Update `asgi.py`\n   ```python\n   # <project>/asgi.py\n   import os\n   \n   from django.core.asgi import get_asgi_application\n   from channels.auth import AuthMiddlewareStack\n   from channels.routing import ProtocolTypeRouter, URLRouter\n   \n   # import web-socket routes from djnotifier\n   from djnotifier.routing import websocket_urlpatterns\n   \n   os.environ.setdefault('DJANGO_SETTINGS_MODULE', '<project_name>.settings')\n   \n   application = ProtocolTypeRouter({\n       \"http\": get_asgi_application(),\n       \"websocket\": AuthMiddlewareStack(\n           URLRouter(\n               websocket_urlpatterns\n           )\n       ),\n   })\n   ```\n2. Configure `asgi` application in `settings` \n   ```python\n   # <project>/config.py\n   ...\n   ASGI_APPLICATION = '<project>.asgi.application'\n   ```\n\n### Step-3\nConfigure `redis` layer\n```python\n# <project>/config.py\n...\n\nCHANNEL_LAYERS = {\n   'default': {\n      'BACKEND': 'channels_redis.core.RedisChannelLayer',\n      'CONFIG': {\n       \"hosts\": [('127.0.0.1', 6379)],\n      },\n   },\n}\n\n...\n```\n\n### Step-4\nAdd `djnotifier`'s `template` to a common project template e.g. `base.html or core.html`\n```html\n<!--templates/core.html-->\n{% include 'djnotifier/dj_notifier.html' %}\n```\n\n\n## Usage example\n#### Configure `djnotifier`\n```python\n# <project>/settings.py\n\n...\n\n# You may replace this consumer as needed and \n# point the consumer class\nDJ_NOTIFIER_CONSUMER = 'djnotifier.consumers.DJNotifierConsumer'\n\n# If you want to register more websocket routes\n# you may point to the routes list variable as - \nDJ_NOTIFIER_EXTRA_ROUTES = \"<app_label>.routing.extra_routes\"\n\n# When you're developing you may want to \n# turn it on by putting `True` to see\n# `djnotifier` logs\nDJ_NOTIFIER_CONFIG_INFO_SHOW = False\n```\n\n####  Copy example project into your Django project's root, install in your `INSTALLED_APPS`\n```python\nINSTALLED_APPS = [\n     ...\n     'djnotifier',\n     'example',\n ]\n ```\n#### Add example routes to `project`'s url \n```python\n# <project>/urls.py\n...\nfrom django.urls import path, include\n...\n\nurlpatterns = [\n    ...\n    path(\"example/\", include('example.urls')),\n    ...\n]\n```\n\n#### Now run redis-server and django development server -\n```shell\n# run redis-server\n$  redis-server\n```\nin another terminal/console tab run -\n```shell\n# run django dev server\n$ python manage.py runserver\n```\n\n#### Now open 2 tabs - \n1. Un-authenticated user page: http://localhost:8000/example/\n2. Authenticated user page: http://localhost:8000/example/auth/\n\nNow in another tab if you open http://localhost:8000/example/notify/\nthen you'll see two different notification.\n\n\n# Documentation\n> [Full documentation here...](./docs/README.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rk4bir/djnotifier",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djnotifier",
    "package_url": "https://pypi.org/project/djnotifier/",
    "platform": null,
    "project_url": "https://pypi.org/project/djnotifier/",
    "project_urls": {
      "Documentation": "https://github.com/rk4bir/djnotifier",
      "Homepage": "https://github.com/rk4bir/djnotifier"
    },
    "release_url": "https://pypi.org/project/djnotifier/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A web-based Django app to conduct real time notification.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13381391,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a78f9488f8572fadc345fff93fc0763d3f8394ed1e9c12d88fbb3524852453a9",
        "md5": "593ef304444f995a760655a803f3793e",
        "sha256": "f212b1c123033205e08debdc2a99610a1fb3a889d01fc647d8b2b119ccf13035"
      },
      "downloads": -1,
      "filename": "djnotifier-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "593ef304444f995a760655a803f3793e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 146199,
      "upload_time": "2022-04-01T10:23:57",
      "upload_time_iso_8601": "2022-04-01T10:23:57.042112Z",
      "url": "https://files.pythonhosted.org/packages/a7/8f/9488f8572fadc345fff93fc0763d3f8394ed1e9c12d88fbb3524852453a9/djnotifier-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}