{
  "info": {
    "author": "Hmiku8338",
    "author_email": "hmiku8338@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# e621\n\ne621 is a feature-rich high-level e621 and e926 API wrapper.\n\nIt provides access to almost all of the endpoints available. The only exceptions are unstable and admin-only endpoints.\n\ne621 API documentation is currently highly undocumented, unstable, and sometimes even untruthful. We tried to wrap it in a sanest possible way, properly documenting all the possible ways to interact with it. However, if you still have any questions, bugs to report, or features to request -- please, create an issue on our [github page](\"https://github.com/Hmiku8338/e621-py-stable\") and we will reply as soon as we can.\n\n## Installation\n\n```bash\npip install e621-stable\n```\n\n## Quickstart\n\nWe translate everything the API returns to python data types created with pydantic. Everything is 100% typehinted so you get autocomplete everywhere and your IDE will warn you if you are sending invalid arguments or using nonexistent attributes.\n\n### Creating the api client\n\n* To create the most basic client, all you need to do is\n\n```python\nfrom e621 import E621\n\napi = E621()\n```\n\n* If you wish to get information about your account, use your blacklist or create/update/delete any of the e621's entities, you will have to create an api key and put it into the API client as such:\n\n```python\napi = E621((\"your_e621_login\", \"your_e621_api_key\"))\n```\n\n### Searching\n\nThe majority of the endpoints allow you to query for a list of their entities, be it posts, pools or tags.\n\n* To search for posts that match the \"canine\" but not the \"3d\" tag:\n\n```python\nposts = api.posts.search(\"canine -3d\")\n# Or\nposts = api.posts.search([\"canine\", \"-3d\"])\n```\n\n* To search for pools whose names start with \"hello\" and end with \"kitty\":\n\n```python\nposts = api.pools.search(name_matches=\"hello*kitty\")\n```\n\n* e621 searching api is paginated, which means that if you want to get a lot of posts, you will have to make multiple requests with a different \"page\" parameter. To simplify interactions with paginated queries, all of our searching endpoints support the \"limit\", \"page\", and \"ignore_pagination\" parameters. If you wish to get a specific number of entities, simply pass the \"limit\" and \"ignore_pagination\" arguments:\n\n```python\ntags = api.tags.search(name_matches=\"large_*\", limit=900, ignore_pagination=True)\n```\n\n### Accessing Attributes\n\nWhen you have retrieved the entities, you can access any of their attributes without dealing with json.\n\n```python\nfor post in posts:\n    print(post.score.total, post.all_tags, post.relationships.parent_id)\n    with open(f\"{post.id}.{post.file.ext}\", \"wb\") as f:\n        f.write(requests.get(post.file.url).content)\n```\n\n### Getting\n\nMany entities that have unique identifiers (such as post_id or username) support indexing using these ids:\n\n```python\npost = api.posts.get(3291457)\nposts = api.posts.get([3291457, 3069995])\npool = api.pools.get(28232)\nuser = api.users.get(\"fox\")\n```\n\n### Updating\n\n```python\napi.posts.update(3291457, tag_string_diff=\"canine -male\", description=\"Rick roll?\")\n```\n\n### Creating\n\n```python\nfrom pathlib import Path\n\napi.posts.create(\n    tag_string=\"canine 3d rick_roll\",\n    file=Path(\"path/to/rickroll.webm\"),\n    rating=\"s\",\n    sources=[],\n    description=\"Rick roll?\"\n)\n```\n\n## FAQ\n\n* For more information on these and other api endpoints, please, visit our [endpoint reference](TODO)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Hmiku8338/e621-py-stable",
    "keywords": "e621.net,e621,e926.net,e926,furry,yiff,api,booru",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "e621-stable",
    "package_url": "https://pypi.org/project/e621-stable/",
    "platform": null,
    "project_url": "https://pypi.org/project/e621-stable/",
    "project_urls": {
      "Homepage": "https://github.com/Hmiku8338/e621-py-stable",
      "Repository": "https://github.com/Hmiku8338/e621-py-stable"
    },
    "release_url": "https://pypi.org/project/e621-stable/1.0.1/",
    "requires_dist": [
      "requests (>=2.27.1,<3.0.0)",
      "pydantic (>=1.9.0,<2.0.0)",
      "backports.cached-property (>=1.0.1,<2.0.0)",
      "typing-extensions (>=4.1.1,<5.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "e621.net API wrapper written in Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16209394,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cb4efded0684b8ea6c4d5801eef42563d7ccf81070e613cb3c908d35e5f05ea",
        "md5": "bc0bac540f85533d24a10bfd2da5437d",
        "sha256": "b7a6170fd7aef20d349aee3f3ceed7b358b001e928e5fbb6b6f3020679fadba9"
      },
      "downloads": -1,
      "filename": "e621_stable-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc0bac540f85533d24a10bfd2da5437d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 14992,
      "upload_time": "2022-11-07T17:03:02",
      "upload_time_iso_8601": "2022-11-07T17:03:02.371102Z",
      "url": "https://files.pythonhosted.org/packages/1c/b4/efded0684b8ea6c4d5801eef42563d7ccf81070e613cb3c908d35e5f05ea/e621_stable-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "919722bcbbd774eac267f61a8f846c3b58e78466addb93c552b5087ec02b906b",
        "md5": "c97dde5a082491cd87233ed886d4c60a",
        "sha256": "717821d61f9656f173fc66fe0cb1815bbccb2a5f99608de682942155dd898d80"
      },
      "downloads": -1,
      "filename": "e621-stable-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c97dde5a082491cd87233ed886d4c60a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 15128,
      "upload_time": "2022-11-07T17:02:59",
      "upload_time_iso_8601": "2022-11-07T17:02:59.620915Z",
      "url": "https://files.pythonhosted.org/packages/91/97/22bcbbd774eac267f61a8f846c3b58e78466addb93c552b5087ec02b906b/e621-stable-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}