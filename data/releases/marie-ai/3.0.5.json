{
  "info": {
    "author": "Marie AI",
    "author_email": "hello@marieai.co",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Unix Shell",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
      "Topic :: Multimedia :: Video",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n# Marie-AI\n\nIntegrate AI-powered document pipeline into your applications\n\n## Documentation\n\nSee the [MarieAI docs](https://docs.marieai.co).\n\n## Installation\n\nYou don't need this source code unless you want to modify the package. If you just\nwant to use the package, just run:\n\n```sh\npip install --upgrade marieai\n```\n\nInstall from source with:\n\n```sh\npip install -e .\n```\n\nBuild docker container:\n\n```sh\nDOCKER_BUILDKIT=1 docker build . --build-arg PIP_TAG=\"standard\" -f ./Dockerfiles/gpu.Dockerfile  -t marieai/marie:3.0-cuda \n```\n\n## Command-line interface\n\nThis library additionally provides an `marie` command-line utility which makes it easy to interact with the API \nfrom your terminal. Run `marie -h` for usage.\n\n## Example code\n\nExamples of how to use this library to accomplish various tasks can be found in the MarieAI documentation. \nIt contains code examples for:\n\n* Document cleanup\n* Optical character recognition\n* Textbox detection\n* Named Entity Recognition\n* Form detection\n* And more\n\n\n## Telemetry\nhttps://telemetry.marieai.co/\n\nTODO :MOVE TO DOCS\n\n# S3 Cloud Storage\n```shell\ndocker compose -f  docker-compose.s3.yml --project-directory . up  --build --remove-orphans\n```\n\nCrossFTP\n\n\n## Configure AWS CLI Credentials.\n\n```shell\nvi ~/.aws/credentials\n[marie] # this should be in the file\naws_access_key_id=your_access_key_id\naws_secret_access_key=your_secret_access_key\n```\n\n \n\n## Pull the Docker image.\n\n```shell\ndocker pull zenko/cloudserver\n```\n\n## Create and start the container.\n\n\n```sh\ndocker run --rm -it --name marie-s3-server -p 8000:8000 \\\n-e SCALITY_ACCESS_KEY_ID=MARIEACCESSKEY \\\n-e SCALITY_SECRET_ACCESS_KEY=MARIESECRETACCESSKEY \\\n-e S3DATA=multiple \\\n-e S3BACKEND=mem zenko/cloudserver\n```\n\n```\nSCALITY_ACCESS_KEY_ID : Your AWS ACCESS KEY \nSCALITY_SECRET_ACCESS_KEY: Your AWS SECRET ACCESS KEY \nS3BACKEND: Currently using memory storage\n```\n\n## Verify Installation.\n\n```shell\naws s3 mb s3://mybucket  --profile marie --endpoint-url http://localhost:8000 --region us-west-2\n```\n\n```shell\naws s3 ls --profile marie --endpoint-url http://localhost:8000\n```\n\n```shell\naws s3 cp some_file.txt s3://mybucket  --profile marie --endpoint-url http://localhost:8000\n```\n\n\n```shell\naws s3 --profile marie --endpoint-url=http://127.0.0.1:8000 ls --recursive s3://\n```\n\n# Production setup\n\n\nConfiguration for the S3 server will be stored in the following files:\nhttps://towardsdatascience.com/10-lessons-i-learned-training-generative-adversarial-networks-gans-for-a-year-c9071159628\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/marieai/marie-ai/tags",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marieai/marie-ai/",
    "keywords": "marie-ai ocr icr index elastic neural-network encoding embedding serving docker container image video audio deep-learning mlops",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "marie-ai",
    "package_url": "https://pypi.org/project/marie-ai/",
    "platform": null,
    "project_url": "https://pypi.org/project/marie-ai/",
    "project_urls": {
      "Documentation": "https://docs.marieai.co",
      "Download": "https://github.com/marieai/marie-ai/tags",
      "Homepage": "https://github.com/marieai/marie-ai/",
      "Source": "https://github.com/marieai/marie-ai.git",
      "Tracker": "https://github.com/marieai/marie-ai/issues"
    },
    "release_url": "https://pypi.org/project/marie-ai/3.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python library to Integrate AI-powered features into your applications",
    "version": "3.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17431497,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "218e24af301502377dad15009b3da5a8555fb6cbc80b7dced29f91373073bec8",
        "md5": "3f1e2c6f183253b9477f2e78bf1ecbad",
        "sha256": "95cb4554d0810dfc6423fc3748e05bcfdadf0b5e85af1c6d45800a8ad8bc44ca"
      },
      "downloads": -1,
      "filename": "marie-ai-3.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "3f1e2c6f183253b9477f2e78bf1ecbad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 586362,
      "upload_time": "2023-03-24T13:57:31",
      "upload_time_iso_8601": "2023-03-24T13:57:31.049586Z",
      "url": "https://files.pythonhosted.org/packages/21/8e/24af301502377dad15009b3da5a8555fb6cbc80b7dced29f91373073bec8/marie-ai-3.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}