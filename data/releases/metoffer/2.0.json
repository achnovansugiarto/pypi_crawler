{
  "info": {
    "author": "Stephen B. Murray",
    "author_email": "sbm199@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "================\n metoffer v.2.0\n================\n\nmetoffer is a simple wrapper for the API provided by the British\n`Met Office <http://www.metoffice.gov.uk>`_ known as DataPoint. It\ncan be used to retrieve weather observations and forecasts. At its\nheart is the ``MetOffer`` class which has methods to retrieve data\navailable through the API and make them available as Python objects.\nAlso included are a couple of functions and classes useful for\ninterpretting the data.\n\nThis project is now maintained at `<https://github.com/sludgedesk/metoffer>`_.\n\nExample\n-------\n\nGet forecast for Met Office site closest to supplied latitude and\nlongitude, the forecast to be given in three-hourly intervals::\n\n\t>>> import metoffer\n\t>>> api_key = '01234567-89ab-cdef-0123-456789abcdef'\n\t>>> M = metoffer.MetOffer(api_key)\n\t>>> x = M.nearest_loc_forecast(51.4033, -0.3375, metoffer.THREE_HOURLY)\n\n*It's worth noting here that, if you expect many requests for forecast data\nto be made, it is probably better to use the functions called by this\nconvenience function so that data that does not change often (e.g. data\nabout Met Office sites) may be cached.*\n\nParse this data into a ``metoffer.Weather`` instance::\n\n\t>>> y = metoffer.Weather(x)\n\t>>> y.name\n\t'HAMPTON COURT PALACE'\n\t>>> y.country\n\t'ENGLAND'\n\t>>> y.continent\n\t'EUROPE'\n\t>>> y.lat\n\t51.4007\n\t>>> y.lon\n\t-0.3337\n\t>>> y.elevation\n\t4.0\n\t>>> y.ident # The Met Office site ident\n\t'351747'\n\t>>> y.data_date\n\t'2014-06-14T23:00:00Z'\n\t>>> y.dtype\n\t'Forecast'\n\t>>> import pprint\n\t>>> pprint.pprint(y.data)\n\t[{'Feels Like Temperature': (17, 'C', 'F'),\n\t  'Max UV Index': (1, '', 'U'),\n\t  'Precipitation Probability': (7, '%', 'Pp'),\n\t  'Screen Relative Humidity': (63, '%', 'H'),\n\t  'Temperature': (19, 'C', 'T'),\n\t  'Visibility': ('VG', '', 'V'),\n\t  'Weather Type': (7, '', 'W'),\n\t  'Wind Direction': ('NNE', 'compass', 'D'),\n\t  'Wind Gust': (18, 'mph', 'G'),\n\t  'Wind Speed': (11, 'mph', 'S'),\n\t  'timestamp': (datetime.datetime(2014, 6, 14, 18, 0), '')},\n\t {'Feels Like Temperature': (15, 'C', 'F'),\n\t  'Max UV Index': (0, '', 'U'),\n\t  'Precipitation Probability': (0, '%', 'Pp'),\n\t  'Screen Relative Humidity': (72, '%', 'H'),\n\t  'Temperature': (16, 'C', 'T'),\n\t  'Visibility': ('VG', '', 'V'),\n\t  'Weather Type': (0, '', 'W'),\n\t  'Wind Direction': ('NNE', 'compass', 'D'),\n\t  'Wind Gust': (18, 'mph', 'G'),\n\t  'Wind Speed': (9, 'mph', 'S'),\n\t  'timestamp': (datetime.datetime(2014, 6, 14, 21, 0), '')},\n\n\t    [...]\n\n\t {'Feels Like Temperature': (16, 'C', 'F'),\n\t  'Max UV Index': (0, '', 'U'),\n\t  'Precipitation Probability': (2, '%', 'Pp'),\n\t  'Screen Relative Humidity': (66, '%', 'H'),\n\t  'Temperature': (16, 'C', 'T'),\n\t  'Visibility': ('VG', '', 'V'),\n\t  'Weather Type': (0, '', 'W'),\n\t  'Wind Direction': ('NNE', 'compass', 'D'),\n\t  'Wind Gust': (13, 'mph', 'G'),\n\t  'Wind Speed': (7, 'mph', 'S'),\n\t  'timestamp': (datetime.datetime(2014, 6, 18, 21, 0), '')}]\n\nInterpret the data further::\n\n\t>>> for i in y.data:\n\t...     print(\"{} - {}\".format(i[\"timestamp\"][0].strftime(\"%d %b, %H:%M\"), metoffer.WEATHER_CODES[i[\"Weather Type\"][0]]))\n\t... \n\t14 Jun, 18:00 - Cloudy\n\t14 Jun, 21:00 - Clear night\n\t15 Jun, 00:00 - Clear night\n\t15 Jun, 03:00 - Cloudy\n\n\t    [...]\n\n\t18 Jun, 09:00 - Partly cloudy (day)\n\t18 Jun, 12:00 - Partly cloudy (day)\n\t18 Jun, 15:00 - Cloudy\n\t18 Jun, 18:00 - Cloudy\n\t18 Jun, 21:00 - Clear night\n\t>>> metoffer.VISIBILITY[y.data[0][\"Visibility\"][0]]\n\t'Very good - Between 20-40 km'\n\t>>> metoffer.guidance_UV(y.data[0][\"Max UV Index\"][0])\n\t'Low exposure. No protection required. You can safely stay outside'\n\nThe MetOffer Class\n------------------\n\nAvailable methods:\n\n* ``loc_forecast``. Return location-specific forecast data (including lists of\n  available sites and time capabilities) for given time step.\n\n* ``nearest_loc_forecast``. Work out nearest possible site to lat & lon\n  coordinates and return its forecast data for the given time step.\n\n* ``loc_observations``. Return location-specific observation data, including a\n  list of available sites (time step will be HOURLY).\n\n* ``nearest_loc_obs``. Work out nearest possible site to lat & lon coordinates\n  and return observation data for it.\n\n* ``text_forecast``. Return textual forecast data for regions, national parks\n  or mountain areas.\n\n* ``text_uk_extremes``. Return textual data of UK extremes.\n\n* ``stand_alone_imagery``. Returns capabilities data for stand alone imagery and\n  includes URIs for the images.\n\n* ``map_overlay_forecast``. Returns capabilities data for forecast map overlays.\n\n* ``map_overlay_obs``. Returns capabilities data for observation map overlays.\n\nThe Site Class\n--------------\n\nDescribes object to hold site metadata.  Also describes method\n(``distance_to_coords``) to return a Site instance's 'distance' from any given\nlat & lon coordinates.  This 'distance' is a value which is used to guide\n``MetOffer.nearest_loc_forecast`` and ``MetOffer.nearest_loc_obs``. It simply\ncalculates the difference between the two sets of coordinates and arrives at a\nvalue through Pythagorean theorem.\n\nThe Weather Class\n-----------------\n\nA hold-all for returned weather data, including associated metadata.  It parses\nreturned dict of MetOffer location-specific data into a Weather instance.\nWorks with single or multiple time steps.  There are a couple of points to\nnote:\n\n* All dict keys have a tuple, even where there is no obvious need, such as\n  with 'timestamp' and 'Weather Type'.  'timestamp' is a 2-tuple, all else\n  is a 3-tuple.  This is a feature.\n\n* When the Met Office does not have a recorded observation against a category,\n  metoffer will return None.\n\n* For parsed DAILY forecasts, the hours and minutes of the 'timestamp'\n  datetime.datetime object are superfluous.  In fact, it would be misleading\n  to follow them.  Rather, this time there is a sensible entry in the second\n  part of the tuple.  This alternates between 'Day' and 'Night' with each\n  successive dict.  The categories are often specific to the time of day.\n  This is how the API provides it.  Take note as it may catch you out.\n\nThe TextForecast Class\n----------------------\n\nA hold-all for returned textual regional forecasts, including associated meta-\ndata, created by parsing the data returned by ``MetOffer.text_forecast``.\n\nUseful Functions\n----------------\n\n* ``parse_sitelist``. Return list of Site instances from retrieved sitelist data.\n\n* ``get_nearest_site``. Return a list of strings (site IDs) which can be used\n  as 'request' in calls to ``loc_forecast`` and ``loc_observations``.\n\n* ``guidance_UV``. Return Met Office guidance regarding UV exposure based on UV\n   index.\n\n* ``extract_data_key``. Returns a dict that maps measurement type to its description\n  and measurement unit.\n\nFeedback & Bug Reports\n----------------------\n\nGet in touch:\n\nStephen B Murray <sbm199@gmail.com>\n@sludgedesk\n\nLegal\n-----\n\nCopyright 2012-2014, 2018 Stephen B Murray\n\nDistributed under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nYou should have received a copy of the GNU General Public License along with\nthis package. If not, see <http://www.gnu.org/licenses/>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sludgedesk/metoffer",
    "keywords": "",
    "license": "LGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MetOffer",
    "package_url": "https://pypi.org/project/MetOffer/",
    "platform": "",
    "project_url": "https://pypi.org/project/MetOffer/",
    "project_urls": {
      "Homepage": "https://github.com/sludgedesk/metoffer"
    },
    "release_url": "https://pypi.org/project/MetOffer/2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple wrapper for the Met Office DataPoint API.",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3907067,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56c5d4d6536dedf95de5ee90e7851a0ba4e83e39eec47de31f922e2665a483c8",
        "md5": "865e221a770b761717c2bb211a7c1a96",
        "sha256": "8626624b11aac27dfc533dae4f94b9417315e9145acc6e4aeb2f017dd2dfc13f"
      },
      "downloads": -1,
      "filename": "MetOffer-2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "865e221a770b761717c2bb211a7c1a96",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3936,
      "upload_time": "2018-05-28T22:34:09",
      "upload_time_iso_8601": "2018-05-28T22:34:09.191527Z",
      "url": "https://files.pythonhosted.org/packages/56/c5/d4d6536dedf95de5ee90e7851a0ba4e83e39eec47de31f922e2665a483c8/MetOffer-2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0de1968d11ffd4102a95372f028e932cef27c535574ad6eeef739e60912a6f1",
        "md5": "cb65637482bd9abaea3f2f8476e6ea3e",
        "sha256": "fa5762fcc92ba4540a8d6513fde11a9b3e5fc7560cd73e92f72133e48b6ef46c"
      },
      "downloads": -1,
      "filename": "MetOffer-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb65637482bd9abaea3f2f8476e6ea3e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4795,
      "upload_time": "2018-05-28T22:34:10",
      "upload_time_iso_8601": "2018-05-28T22:34:10.500454Z",
      "url": "https://files.pythonhosted.org/packages/c0/de/1968d11ffd4102a95372f028e932cef27c535574ad6eeef739e60912a6f1/MetOffer-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}