{
  "info": {
    "author": "Stephen B. Murray",
    "author_email": "sbm199@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "================\nmetoffer v.1.2.0\n================\n\nmetoffer is a simple wrapper for the API provided by the British\n`Met Office <http://www.metoffice.gov.uk>`_ known as DataPoint. It\ncan be used to retrieve weather observations and forecasts. At its\nheart is the ``MetOffer`` class which has methods to retrieve data\navailable through the API and make them available as Python objects.\nAlso included are a couple of functions and classes useful for\ninterpretting the data.\n\nExample\n-------\n\nGet forecast for Met Office site closest to supplied latitude and\nlongitude, the forecast to be given in three-hourly intervals::\n\n\t>>> import metoffer\n\t>>> api_key = '01234567-89ab-cdef-0123-456789abcdef'\n\t>>> M = metoffer.MetOffer(api_key)\n\t>>> x = M.nearest_loc_forecast(51.4033, -0.3375, metoffer.THREE_HOURLY)\n\n*It's worth noting here that, if you expect many requests for forecast data\nto be made, it is probably better to use the functions called by this\nconvenience function so that data that does not change often (e.g. data\nabout Met Office sites) may be cached.*\n\nParse this data into a ``metoffer.Weather`` instance::\n\n\t>>> y = metoffer.parse_val(x)\n\t>>> y.name\n\t'HAMPTON COURT PALACE'\n\t>>> y.country\n\t'ENGLAND'\n\t>>> y.continent\n\t'EUROPE'\n\t>>> y.lat\n\t51.4007\n\t>>> y.lon\n\t-0.3337\n\t>>> y.elevation\n\t4.0\n\t>>> y.ident # The Met Office site ident\n\t'351747'\n\t>>> y.data_date\n\t'2013-05-16T14:00:00Z'\n\t>>> y.dtype\n\t'Forecast'\n\t>>> import pprint\n\t>>> pprint.pprint(y.data)\n\t[{'Feels Like Temperature': (9, 'C'),\n\t  'Max UV Index': (3, ''),\n\t  'Precipitation Probability': (1, '%'),\n\t  'Screen Relative Humidity': (83, '%'),\n\t  'Temperature': (10, 'C'),\n\t  'Visibility': ('GO', ''),\n\t  'Weather Type': (3, ''),\n\t  'Wind Direction': ('E', 'compass'),\n\t  'Wind Gust': (11, 'mph'),\n\t  'Wind Speed': (4, 'mph'),\n\t  'timestamp': (datetime.datetime(2013, 5, 16, 9, 0), '')},\n\t {'Feels Like Temperature': (11, 'C'),\n\t  'Max UV Index': (4, ''),\n\t  'Precipitation Probability': (5, '%'),\n\t\n\t[...]\n\t\n\t  'Wind Direction': ('N', 'compass'),\n\t  'Wind Gust': (22, 'mph'),\n\t  'Wind Speed': (11, 'mph'),\n\t  'timestamp': (datetime.datetime(2013, 5, 20, 21, 0), '')}]\n\nInterpret the data further::\n\n\t>>> for i in y.data:\n\t...     print('{} - {}'.format(i['timestamp'][0].strftime('%d %b, %H:%M'), metof\n\tfer.WEATHER_CODES[i['Weather Type'][0]]))\n\t... \n\t16 May, 09:00 - Partly cloudy (day)\n\t16 May, 12:00 - Partly cloudy (day)\n\t16 May, 15:00 - Heavy rain shower (day)\n\t16 May, 18:00 - Cloudy\n\t16 May, 21:00 - Cloudy\n\t17 May, 00:00 - Cloudy\n\t17 May, 03:00 - Cloudy\n\t\n\t[...]\n\t\n\t20 May, 06:00 - Cloudy\n\t20 May, 09:00 - Overcast\n\t20 May, 12:00 - Light rain shower (day)\n\t20 May, 15:00 - Light rain\n\t20 May, 18:00 - Light rain\n\t20 May, 21:00 - Overcast\n\t>>> metoffer.VISIBILITY[y.data[0]['Visibility'][0]]\n\t'Good - Between 10-20 km'\n\t>>> metoffer.guidance_UV(y.data[0]['Max UV Index'][0])\n\t'Moderate exposure. Seek shade during midday hours, cover up and wear sunscreen'\n\nThe MetOffer Class\n------------------\n\nAvailable methods:\n\n* ``loc_forecast``. Return location-specific forecast data (including lists of\n  available sites and time capabilities) for given time step.\n\n* ``nearest_loc_forecast``. Work out nearest possible site to lat & lon\n  coordinates and return its forecast data for the given time step.\n\n* ``loc_observations``. Return location-specific observation data, including a\n  list of available sites (time step will be HOURLY).\n\n* ``nearest_loc_obs``. Work out nearest possible site to lat & lon coordinates\n  and return observation data for it.\n\n* ``text_forecast``. Return textual forecast data for regions, national parks\n  or mountain areas.\n\n* ``text_uk_extremes``. Return textual data of UK extremes.\n\n* ``stand_alone_imagery``. Returns capabilities data for stand alone imagery and\n  includes URIs for the images.\n\n* ``map_overlay_forecast``. Returns capabilities data for forecast map overlays.\n\n* ``map_overlay_obs``. Returns capabilities data for observation map overlays.\n\nThe Site Class\n--------------\n\nDescribes object to hold site metadata.  Also describes method\n(``distance_to_coords``) to return a Site instance's 'distance' from any given\nlat & lon coordinates.  This 'distance' is a value which is used to guide\n``MetOffer.nearest_loc_forecast`` and ``MetOffer.nearest_loc_obs``. It simply\ncalculates the difference between the two sets of coordinates and arrives at a\nvalue through Pythagorean theorem.\n\nThe Weather Class\n-----------------\n\nA hold-all for returned weather data, including associated metadata.\n\nUseful Functions\n----------------\n\n* ``parse_sitelist``. Return list of Site instances from retrieved sitelist data.\n\n* ``get_nearest_site``. Return a list of strings (site IDs) which can be used as 'request' in calls to\n  ``loc_forecast`` and ``loc_observations``.\n\n* ``parse_val``. Parse returned dict of MetOffer location-specific data into a\n  Weather instance. Data must be of multiple time steps. There are a couple of\n  points to note:\n\n  * All dict keys have a tuple, even where there is no obvious need, such as\n    with 'timestamp' and 'Weather Type'. This is a feature.\n\n  * When the Met Office does not have a recorded observation against a category,\n    metoffer will return None.\n\n  * For parsed DAILY forecasts, the hours and minutes of the 'timestamp'\n    datetime.datetime object are superfluous. In fact, it would be misleading\n    to follow them. Rather, this time there is a sensible entry in the second\n    part of the tuple. This alternates between 'Day' and 'Night' with each\n    successive dict. The categories are often specific to the time of day.\n    This is how the API provides it. Take note; it may catch you out.\n\n*  ``guidance_UV``. Return Met Office guidance regarding UV exposure based on UV\n   index.\n\nFeedback & Bug Reports\n----------------------\n\nGet in touch: Stephen B. Murray <sbm199@gmail.com>\n\nLegal\n-----\n\nCopyright 2012 & 2013 Stephen B. Murray\n\nDistributed under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nYou should have received a copy of the GNU General Public License along with\nthis package. If not, see <http://www.gnu.org/licenses/>",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/MetOffer/",
    "keywords": null,
    "license": "LICENSE.txt",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MetOffer",
    "package_url": "https://pypi.org/project/MetOffer/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/MetOffer/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/MetOffer/"
    },
    "release_url": "https://pypi.org/project/MetOffer/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Simple wrapper for the Met Office DataPoint API.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3907067,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30bb0ac52de6ef27fd2dc99b6d71283dc295f04f21a411da4e8d71684ad4de39",
        "md5": "10bcbe19b11ad9668ccb47ad8fe061e3",
        "sha256": "b8a958782f229fd8a04d68ecf8a244000d28cc2a7beba5786ab42de900b30e0e"
      },
      "downloads": -1,
      "filename": "MetOffer-1.2.tar.gz",
      "has_sig": true,
      "md5_digest": "10bcbe19b11ad9668ccb47ad8fe061e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21604,
      "upload_time": "2013-12-04T22:51:30",
      "upload_time_iso_8601": "2013-12-04T22:51:30.496922Z",
      "url": "https://files.pythonhosted.org/packages/30/bb/0ac52de6ef27fd2dc99b6d71283dc295f04f21a411da4e8d71684ad4de39/MetOffer-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}