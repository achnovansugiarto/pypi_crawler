{
  "info": {
    "author": "Alex Rubinsteyn",
    "author_email": "alex.rubinsteyn@unc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "<a href=\"https://travis-ci.com/til-unc/mhcgnomes\">\n    <img src=\"https://travis-ci.com/til-unc/mhcgnomes.svg?branch=main\" alt=\"Build Status\" />\n</a>\n<a href=\"https://coveralls.io/github/til-unc/mhcgnomes?branch=main\">\n    <img src=\"https://coveralls.io/repos/til-unc/mhcgnomes/badge.svg?branch=main&service=github\" alt=\"Coverage Status\" />\n</a>\n<a href=\"https://pypi.python.org/pypi/mhcgnomes/\">\n    <img src=\"https://img.shields.io/pypi/v/mhcgnomes.svg?maxAge=1000\" alt=\"PyPI\" />\n</a>\n\n\n![](https://raw.githubusercontent.com/til-unc/mhcgnomes/main/gnome-red-text.png) \n\n# mhcgnomes: Parsing MHC nomenclature in the wild\n\nMHCgnomes is a parsing library for multi-species MHC nomenclature which\naims to correctly parse every name in [IEDB](http://www.iedb.org/), [IMGT/HLA](https://www.ebi.ac.uk/ipd/imgt/hla/), [IPD/MHC](https://www.ebi.ac.uk/ipd/mhc/), and the allele lists for both [NetMHCpan](https://services.healthtech.dtu.dk/service.php?NetMHCpan-4.1) and [NetMHCIIpan](https://services.healthtech.dtu.dk/service.php?NetMHCIIpan-4.0) predictors. This allows for standardization between immune databases and tools, which often use different naming conventions.\n\n## Usage example\n\n```python\n\nIn [1]: mhcgnomes.parse(\"HLA-A0201\")\nOut[1]: Allele(\n    gene=Gene(\n        species=Species(name=\"Homo sapiens', prefix=\"HLA\"), \n        name=\"A\"), \n    allele_fields=(\"02\", \"01\"), \n    annotations=(), \n    mutations=())\n\nIn [2]: mhcgnomes.parse(\"HLA-A0201\").to_string()\nOut[2]: 'HLA-A*02:01'\n\nIn [3]: mhcgnomes.parse(\"HLA-A0201\").compact_string()\nOut[3]: 'A0201'\n\n```\n\n## The problem: MHC nomenclature is nuts\n\nDespite the valiant efforts of groups such as the [Comparative MHC Nomenclature Committee](https://www.ebi.ac.uk/ipd/mhc/committee/), the names of MHC alleles you might encounter in different datasets (or accepted by immunoinformatics tools) are frustratingly ill specified. It's not uncommon to see dozens of different forms for the same allele.\n\nFor example, these all refer to the same MHC protein sequence:\n\n* \"HLA-A\\*02:01\"\n* \"HLA-A02:01\"\n* \"HLA-A:02:01\"\n* \"HLA-A0201\"\n\n\nAdditionally, for human alleles, the species prefix is often omitted:\n\n* \"A\\*02:01\"\n* \"A\\*0201\"\n* \"A02:01\"\n* \"A:02:01\"\n* \"A0201\"\n\nOriginally alleles for many genes were numbered with two digits:\n\n* \"HLA-MICB*01\"\n\nBut as the number of identified alleles increased, the number of\nfields specifying a distinct protein increase to two. This became \nconventionally called a \"four digit\" format, since each field has two\ndigits. Yet, as the number of identified alleles continued to increase, then \nthe number of digits per field has often increased from two to three: \n\n* \"MICB\\*002:01\"\n* \"HLA-A00201\"\n* \"A:002:01\"\n* \"A\\*00201\"\n\nThese are not always currently treated as equivalent to allele strings with two digits in their first field, but that feature is in the works.\n\nWe might also encounter \"6 digit\" and \"8 digit\" MHC alleles, which specify \nsynonymous differences in the coding sequence and UTR/intronic regions respectively.\n\n* \"A\\*02:01:01\"\n* \"A\\*02:01:01:01\"\n\n### Annotations\n\nSometimes, alleles are bundled with modifier suffixes which specify \nthe functionality or abundance of the MHC. Here's an example with an allele\nwhich is secreted instead of membrane-bound:\n\n* \"HLA-A\\*02:01:01S\"\n\nThese are collected in the `annotations` field of an \n[`Allele`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/allele.py)\nresult.\n\n### Mutations\n\nMHC proteins are sometimes described in terms of mutations to a known allele. \n\n* \"HLA-B\\*08:01 N80I mutant\"\n\nThese mutations are collected in the `mutations` field of an \n[`Allele`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/allele.py) result.\n\n### Beyond humans\n\nTo make things worse, several model organisms (like mice and rats) use archaic\nnaming systems, where there is no notion of allele groups or four/six/eight\ndigit alleles but every allele is simply given a name, such as:\n\n* \"H2-Kk\"\n* \"RT1-9.5f\"\n\n\nIn the above example \"H2\"/\"RT1\" correspond to species, \"K\"/\"9.5\" are\nthe gene names and \"k\"/\"f\" are the allele names.\n\nTo make these even worse, the name of a species is subject to variation (e.g. \"H2\" vs. \"RT-1\") as well as drift over time (e.g. ChLA -> MhcPatr -> Patr).  \n\n### Serotypes, haplotypes, and other named entitites\n\nBesides alleles are also other named MHC related entities you'll encounter in immunological data. Closely related to alleles are serotypes, which effectively denote a grouping of alleles that are all recognized by the same antibody:\n\n* \"HLA-A2\"\n* \"A2\"\n\nIn many datasets the exact allele is not known but an experiment might note the genetic background of a model animal, resulting in loose haplotype restrictions such as: \n\n* \"H2-k class I\"\n\nYes, good luck disambiguating \"H2-k\" the haplotype from \"H2-K\" the gene, especially since capitalization is not stable enough to be relied on for parsing. \n\nIn some cases immunological data comes only with a denoted species (e.g. \"mouse\"), a gene (e.g. \"HLA-A\"), or an MHC class (\"human class I\"). MHCgnomes has a structured representation for all of these cases and more. \n\n## Parsing strategy\n\nIt is a fool's errand to curate *all* possible MHC allele names since that list grows daily as the MHC loci of more people (and non-human animals) are sequenced. Instead, MHCgnomes contains an ontology of curated species and genes and then attempts to parse any given string into a multiple candidates of the following types:\n\n* [`Species`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/species.py)\n* [`Gene`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/gene.py)\n* [`Allele`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/allele.py)\n* [`AlleleWithoutGene`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/allele_without_gene.py)\n* [`Class2Pair`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/class2_pair.py)\n* [`Class2Locus`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/class2_locus.py)\n* [`MhcClass`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/mhc_class.py)\n* [`Haplotype`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/haplotype.py)\n* [`Serotype`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/serotype.py)\n\n\nThe set of candidate interpretations for each string are then \nranked according to heuristic rules. For example, a string will be \npreferentially interpreted as an [`Allele`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/allele.py) rather \nthan a [`Serotype`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/serotype.py)\nor [`Haplotype`](https://github.com/til-unc/mhcgnomes/blob/main/mhcgnomes/haplotype.py). \n\n## References\n\n* [IPD-MHC: nomenclature requirements for the non-human major histocompatibility complex in the next-generation sequencing era](https://link.springer.com/article/10.1007%2Fs00251-018-1072-4)\n* [Comparative MHC nomenclature: report from the ISAG/IUIS-VIC committee 2018]()\n* [ISAG/IUIS-VIC Comparative MHC Nomenclature\nCommittee report, 2005](https://link.springer.com/content/pdf/10.1007%2Fs00251-005-0071-4.pdf)\n* [Marsupial MHC Class II β Genes Are Not Orthologous to the Eutherian β Gene Families]()\n* [Nomenclature for factors of the SLA system, update 2008](https://www.ncbi.nlm.nih.gov/pubmed/19317739)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/til-unc/mhcgnomes",
    "keywords": "",
    "license": "http://www.apache.org/licenses/LICENSE-2.0.html",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mhcgnomes",
    "package_url": "https://pypi.org/project/mhcgnomes/",
    "platform": "",
    "project_url": "https://pypi.org/project/mhcgnomes/",
    "project_urls": {
      "Homepage": "https://github.com/til-unc/mhcgnomes"
    },
    "release_url": "https://pypi.org/project/mhcgnomes/1.2.2/",
    "requires_dist": [
      "serializable",
      "pyyaml",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Python library for parsing MHC nomenclature in the wild",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14014759,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a93207e90029f1e1f8ee2ffd576772ec9f66034c6120015a2d375c65a7029f2a",
        "md5": "2336506b416b874eb6491da5d9fb5dc2",
        "sha256": "1e819aee6df67fbba0c7588b114e46d0251bcd0454d085fa5731c21473a59bf0"
      },
      "downloads": -1,
      "filename": "mhcgnomes-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2336506b416b874eb6491da5d9fb5dc2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 75647,
      "upload_time": "2020-11-12T18:56:53",
      "upload_time_iso_8601": "2020-11-12T18:56:53.822205Z",
      "url": "https://files.pythonhosted.org/packages/a9/32/07e90029f1e1f8ee2ffd576772ec9f66034c6120015a2d375c65a7029f2a/mhcgnomes-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "291bb4f7db1305b434465bfed3746bf7c24b87c092eec42788ed5a16b450bd39",
        "md5": "cf7f262da9654b48096666a419bd17c7",
        "sha256": "e2cd5b54c51df39f4b5c6599a00cf3915ced7892e6d99ef0ee445851c166a6b2"
      },
      "downloads": -1,
      "filename": "mhcgnomes-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cf7f262da9654b48096666a419bd17c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1664295,
      "upload_time": "2020-11-12T18:56:58",
      "upload_time_iso_8601": "2020-11-12T18:56:58.258112Z",
      "url": "https://files.pythonhosted.org/packages/29/1b/b4f7db1305b434465bfed3746bf7c24b87c092eec42788ed5a16b450bd39/mhcgnomes-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}