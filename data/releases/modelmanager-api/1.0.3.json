{
  "info": {
    "author": "falcon",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "ï»¿Welcome to Modelmanager-api!\n===================\n\nThis is a api model for interacting with modelmanager. \n\n----------\n\n\nDocuments\n-------------\n\nStackEdit stores your documents in your browser, which means all your documents are automatically saved locally and are accessible **offline!**\n\n> **Note:**\n> - Example files are are in example_script directory.\n> - Example assets are in api_assets directory.\n> - It contains scripts for different actions(Add, Update, Delete).\n\n> - **EXAMPLE SCRIPTS** \n> > add_model.py\n> >add_project.py\n> >update_model.py\n> >update_project.py\n> >delete_model.py\n> >delete_project.py\n\n> - **EXAMPLE ASSETS** \n>>Project Assets\n>>Model Assets\n\n----------\n>**Example Codes**\n>> ###Add_Project###\n>>from modelmanager-api.modelmanager-api import Usecase\n>>secret_key = Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>data = {\n\t&nbsp;&nbsp;&nbsp;        \"name\": \"UsecaseName\",\n\t&nbsp;&nbsp;&nbsp;\t    \"author\": \"AuthorName\",\n\t&nbsp;&nbsp;&nbsp;\t    \"description\": \"UsecaseDescription\",\n\t&nbsp;&nbsp;&nbsp;\t    \"source\": \"UsecasSource\",\n\t&nbsp;&nbsp;&nbsp;\t    \"contributor\": \"UsecaseContributor\",\n\t&nbsp;&nbsp;&nbsp;\t    \"image\": image.jpg' ,\n\t&nbsp;&nbsp;&nbsp;\t    \"banner\": 'banner.jpg' ,\n}\n>> Usecase(secret_key, url).post_usecase(data)\n\n>> ###Update_Project###\n>>from modelmanager-api.modelmanager-api import Usecase\n>>secret_key = Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>data = {\n\t&nbsp;&nbsp;&nbsp;        \"name\": \"UsecaseName\",\n\t&nbsp;&nbsp;&nbsp;\t    \"author\": \"AuthorName\",\n\t&nbsp;&nbsp;&nbsp;\t    \"description\": \"UsecaseDescription\",\n\t&nbsp;&nbsp;&nbsp;\t    \"source\": \"UsecasSource\",\n\t&nbsp;&nbsp;&nbsp;\t    \"contributor\": \"UsecaseContributor\",\n\t&nbsp;&nbsp;&nbsp;\t    \"image\": image.jpg' ,\n\t&nbsp;&nbsp;&nbsp;\t    \"banner\": 'banner.jpg' ,\n}\n>> Usecase(secret_key, url).patch_usecase(data)\n\n>> ###Delete_Project###\n>>from modelmanager-api.modelmanager-api import Usecase\n>>secret_key = Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>project_id =Project_ID\n>>Usecase(secret_key,url).delete_usecase(project_id)\n\n\n----------\n>>###Add_Model###\n>>from modelmanager-api.modelmanager-api import Model\n>>secret_key = Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>data = {\n  &nbsp;&nbsp;&nbsp;   \"project\":Project_ID,\n  &nbsp;&nbsp;&nbsp;  \"transformerType\": \"logistic\",\n  &nbsp;&nbsp;&nbsp;   \"target_column\": \"id\",\n &nbsp;&nbsp;&nbsp;    \"note\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_area\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_dependencies\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_usage\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_audjustment\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"model_developer\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_approver\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"model_maintenance\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"documentation_code\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"implementation_plateform\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"training_dataset\": \"train.csv\",\n  &nbsp;&nbsp;&nbsp;   \"pred_dataset\": \"submissionsample.csv\",\n&nbsp;&nbsp;&nbsp;     \"actual_dataset\": \"truth.csv\",\n&nbsp;&nbsp;&nbsp;     \"test_dataset\": \"test.csv\",\n&nbsp;&nbsp;&nbsp;     \"model_file_path\":\"\",\n &nbsp;&nbsp;&nbsp;    \"scoring_file_path\":\"\",\n &nbsp;&nbsp;&nbsp;    \"production\":\"\",\n &nbsp;&nbsp;&nbsp;    \"current_date\":\"\",\n}\n>>Model(secret_key, url).post_model(data)\n\n>>###Update_Model###\n>>from modelmanager-api.modelmanager-api import Model\n>>secret_key = \"Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>data = {\n  &nbsp;&nbsp;&nbsp;   \"project\":Project_ID,\n  &nbsp;&nbsp;&nbsp;  \"transformerType\": \"logistic\",\n  &nbsp;&nbsp;&nbsp;   \"target_column\": \"id\",\n &nbsp;&nbsp;&nbsp;    \"note\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_area\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_dependencies\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_usage\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_audjustment\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"model_developer\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"model_approver\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"model_maintenance\": \"api script Model\",\n&nbsp;&nbsp;&nbsp;     \"documentation_code\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"implementation_plateform\": \"api script Model\",\n &nbsp;&nbsp;&nbsp;    \"training_dataset\": \"train.csv\",\n  &nbsp;&nbsp;&nbsp;   \"pred_dataset\": \"submissionsample.csv\",\n&nbsp;&nbsp;&nbsp;     \"actual_dataset\": \"truth.csv\",\n&nbsp;&nbsp;&nbsp;     \"test_dataset\": \"test.csv\",\n&nbsp;&nbsp;&nbsp;     \"model_file_path\":\"\",\n &nbsp;&nbsp;&nbsp;    \"scoring_file_path\":\"\",\n &nbsp;&nbsp;&nbsp;    \"production\":\"\",\n &nbsp;&nbsp;&nbsp;    \"current_date\":\"\",\n}\n>>Model(secret_key, url).patch_model(data)\n\n>> ###Delete_Project###\n>>from modelmanager-api.modelmanager-api import Model\n>>secret_key = Get from \"http://modelmanager.ai/key/\"\n>>url = 'http://modelmanager.ai'\n>>model_id =model_ID\n>>Usecase(secret_key,url).delete_usecase(model_id)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modelmanager-api",
    "package_url": "https://pypi.org/project/modelmanager-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/modelmanager-api/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/modelmanager-api/1.0.3/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Modelmanager api",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6621700,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b1e425e91e19def4d2f1e830940e361d0b6670a8e79aa8b67f89d1057eccdf4",
        "md5": "e9bb9a342af24517e7a391a3ea83ef04",
        "sha256": "a83b17a9c356e4548376bf4418473b5928e9d7a088b1dadf7531fb50171a4ff7"
      },
      "downloads": -1,
      "filename": "modelmanager_api-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9bb9a342af24517e7a391a3ea83ef04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3467,
      "upload_time": "2020-02-07T06:52:11",
      "upload_time_iso_8601": "2020-02-07T06:52:11.332820Z",
      "url": "https://files.pythonhosted.org/packages/6b/1e/425e91e19def4d2f1e830940e361d0b6670a8e79aa8b67f89d1057eccdf4/modelmanager_api-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}