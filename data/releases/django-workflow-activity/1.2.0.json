{
  "info": {
    "author": "Arnaud Grausem",
    "author_email": "arnaud.grausem@unistra.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "django-workflow-activity\n========================\n.. image:: https://travis-ci.org/unistra/django-workflow-activity.svg?branch=master\n    :target: https://travis-ci.org/unistra/django-workflow-activity\n\n.. image:: https://coveralls.io/repos/unistra/django-workflow-activity/badge.svg?branch=master\n    :target: https://coveralls.io/r/unistra/django-workflow-activity?branch=master\n\nInstall\n-------\n\nInstall the package via pypi: ::\n    \n    pip install django-workflow-activity\n\nAdd the installed application in the django settings file: ::\n\n    INSTALLED_APPS = (\n        ...\n        'workflow_activity'\n    )\n\nMigrate the database: ::\n\n    python manage.py migrate\n\nUsage\n-----\n\nTo create workflows and permissions, see the following documentations:\n\n- https://pythonhosted.org/django-workflows\n- https://pythonhosted.org/django-permissions\n\nTo use workflow activity methods on a class : ::\n\n    from workflow_activity.models import WorkflowManagedInstance\n\n    class MyClass(WorkflowManagedInstance):\n        ...\n        \nTo add a workflow to an object: ::\n\n    myobj = MyClass()\n    myobj.set_workflow('My workflow')\n\nNow, you can use methods on your object like: ::\n\n    myobj.last_state()\n    myobj.last_transition()\n    myobj.last_actor()\n    myobj.last_action()\n    myobj.allowed_transitions(request.user)\n    myobj.is_editable_by(request.user, permission='edit')\n    myobj.state()\n    myobj.change_state(transition, request.user)\n    ...\n\nAnd managers like: ::\n\n    MyClass.objects.filter()\n    MyClass.pending.filter()\n    MyClass.ended.filter()   \n    ...",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/unistra/django-workflow-activity",
    "keywords": "workflows django events log",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-workflow-activity",
    "package_url": "https://pypi.org/project/django-workflow-activity/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-workflow-activity/",
    "project_urls": {
      "Homepage": "https://github.com/unistra/django-workflow-activity"
    },
    "release_url": "https://pypi.org/project/django-workflow-activity/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Manage all events on workflows",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10205825,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a6cd4f0a85f3ed8d5d54a41ba38e762586ee6602d78c70428e9cc79840c53ca",
        "md5": "94ed13abd72018dbebbe23d6efe58785",
        "sha256": "3c65d2b589eeb0c670e604ee71f9e3199377338238761e0067fae49fcadf78c5"
      },
      "downloads": -1,
      "filename": "django-workflow-activity-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "94ed13abd72018dbebbe23d6efe58785",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7164,
      "upload_time": "2021-04-29T08:21:13",
      "upload_time_iso_8601": "2021-04-29T08:21:13.878779Z",
      "url": "https://files.pythonhosted.org/packages/2a/6c/d4f0a85f3ed8d5d54a41ba38e762586ee6602d78c70428e9cc79840c53ca/django-workflow-activity-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}