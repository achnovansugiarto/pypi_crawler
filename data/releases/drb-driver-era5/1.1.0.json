{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# ERA5 driver\n Climate reanalysis produced by ECMWF driver.\n\n# Nodes\n### Era5ServiceNode\nRepresents the Climate Data Store (CDS) service. This node allows to parse dataset of\nClimate Data Store like https://cds.climate.copernicus.eu/api/v2.\nThe service have for children the era5 dataset:\n    'reanalysis-era5-land'\n    'reanalysis-era5-land-monthly-means'\n    'reanalysis-era5-single-levels'\n    'reanalysis-era5-single-levels-monthly-means'\n    'reanalysis-era5-pressure-levels'\n    'reanalysis-era5-pressure-levels-monthly-means'\n\n### Era5NodeDataSet\n\nEach child of Era5ServiceNode is a Era5NodeDataSet that represent a ERA5 dataset\nEra5NodeDataSet have for children the variables of this Dataset\n\nTo access of data of the dataset we can access by children if the variable is predefined as children of dataset\n\nOr directly from the Dataset by either a dict or a predicate\n\nTo know the predicate supported by the dataset\n\n```\ndataset_node.get_predicate_allowed()\n```\n\n\n### EraNode\n\nEraNode are the children of dataset\nThey define the variables predefined of the dataset parent.\nWe can access to the no predefined variable of the dataset, by using predicate or by using dict (by define variable parameter)\n\n\n### Era5Predicate\n\nTo access Data of Dataset, it is necessary to indicate the filter used\nEach Dataset can be filtered by a Predicate or by a dict\n\nEach Dataset have each predicate\n\nList of dataset and associated predicate:\n*    'reanalysis-era5-land'                          => Era5PredicateEra5Land\n*    'reanalysis-era5-land-monthly-means'            => Era5PredicateEra5SingleLevelsByMonth\n*    'reanalysis-era5-single-levels'                 => Era5PredicateEra5SingleLevelsByHour\n*    'reanalysis-era5-single-levels-monthly-means'   => Era5PredicateEra5SingleLevelsByMonth\n*    'reanalysis-era5-pressure-levels'               => Era5PredicateEra5PressureLevelByHour\n*    'reanalysis-era5-pressure-levels-monthly-means' => Era5PredicateEra5PressureLevelsByMonth\n\n\n\nIf predicate is apply directly on dataset, it is used for all variables of the dataset\n\n\nTo create a predicate\n\n```\nmy_predicate= Era5PredicateEra5SingleLevelsByHour(year=2011, \n                                                  month=12, \n                                                  day=1, \n                                                  time=[1, 2 ,3], \n                                                  product_type='ensemble_spread')\n```\n\nIn predicate, we can define the variable parameter\n\nIf variable is not defined :\n\n   - If the predicate is applied on aEra5NodeDataSet all predefined variables of the dataset are filtered\n   - If the predicate is applied in a child of dataset EraNode, the predicate is applied only on this variable (except if variable is define din predicate)\n\nExample wit variable defined\n\n```\nmy_predicate= Era5PredicateEra5SingleLevelsByHour(year=2011, \n                                                  month=12, \n                                                  day=1, \n                                                  time=[1, 2 ,3], \n                                                  product_type='ensemble_spread',\n                                                  variable=['2m_dewpoint_temperature', '2m_temperature'])\n```\n\nEach predicate have a year, month, time, area (by default None) and a format by default (netcdf)\nEach parameter of constructor of predicate can be a list or a value \nexcept the format: in the example above the time are 1, 2 and 3 and the area that can be only a list.\n\nMonth begin 1 for january\n\nArea if not None is a array that define the North, West, South and East in Latitude Longitude \n\nfor example area = [90, -180, -90, 180] for the whole map.\n\n\nAll predicate except Era5PredicateEra5Land have product_type.\nProduct can be a unique product or a list of product \n\nlike product_type = ['monthly_averaged_ensemble_members', 'monthly_averaged_reanalysis']\n\nList of product possible for each dataset\n\n'reanalysis-era5-land-monthly-means':\n*    monthly_averaged_reanalysis (default value)\n*    monthly_averaged_reanalysis_by_hour_of_day\n\n'reanalysis-era5-single-levels' and 'reanalysis-era5-pressure-levels' :\n*    ensemble_mean\n*    ensemble_members\n*    ensemble_spread\n*    reanalysis (default value)\n\n'reanalysis-era5-single-levels-monthly-means' and 'reanalysis-era5-pressure-levels-monthly-means' :\n*    monthly_averaged_ensemble_members\n*    monthly_averaged_ensemble_members_by_hour_of_day\n*    monthly_averaged_reanalysis (default value)\n*    monthly_averaged_reanalysis_by_hour_of_day\n\nFor Monthly predicate: If name(s) of product_type don't contain by_hour_of_day the only time value allowed is zero \nBy default the value of time is zero by default for Monthly predicate.\n\nThe predicate that doesn't finish by Month have in addition a day parameter.\nThe day is the day in the month (begin by 1)\n\nFor predicate that name contains pressure a parameter pressure_level is defined (by default it is zero) the unit of this value is the hectopascal (hPa)\n\n```\n# Predicate to retrieve the mean of a variable for december 2011, for the pressure level 1 hPa\nwithout take count of the hour of fay.\nmy_predicate_pressure= Era5PredicateEra5PressureLevelsByMonth(year=2011,\n                                                            month=12)\n```\n\nIn the example above the product_type is 'monthly_averaged_reanalysis' and time is 0\nand pressure_level is 1\n\nSame example with product_type, time and pressure level different\n\n\n```\n# Predicate to retrieve the mean of a variable for december 2011, for the pressure level 10 and 12 hPa\nand at 1 PM\n\nmy_predicate_pressure= Era5PredicateEra5SingleLevelsByMonth(year=2011,\n                                                            month=12, \n                                                            pressure_level=[10, 12],\n                                                            product_type='monthly_averaged_reanalysis_by_hour_of_day',\n                                                            time=13)\n                                                            \n                                                           \n```\n\n\n### Examples\n\nExample without access child '2m_temperature' of Dataset 'reanalysis-era5-pressure-levels': \n```\nimport xarray\nfrom drb.utils import keyringconnection\n\nfrom drb.drivers.era5 import Era5ServiceNode, Era5PredicateEra5SingleLevelsByHour\n\n# Add credential in the keyring\nkeyringconnection.kr_add(service='https://cds.climate.copernicus.eu/api/v2',\n                         username='111111',\n                         password='11111-9c6d-4a0c-8dce-5552c5f99878')\n\n# by default the source is https://cds.climate.copernicus.eu/api/v2'\nservice_era5 = Era5ServiceNode()\n\npredicate = Era5PredicateEra5SingleLevelsByHour(year=1959, month=1, day=1, time=[11, 12])\n\n\n\nres = service_era5['reanalysis-era5-pressure-levels']['2m_temperature'][predicate]\n\nres['root']['variables']['t2m'].get_impl(xarray.DataArray)\n```\n\nExample without access children of Dataset 'reanalysis-era5-pressure-levels':\n```\nimport xarray\n\nfrom drb.drivers.era5 import Era5ServiceNode, Era5PredicateEra5SingleLevelsByHour\n\nmy_id = '11111:11111-9c6d-4a0c-8dce-5552c5f99878'\n\nservice_era5 = Era5ServiceNode(auth=my_id)\n# is same as service_rea5 = Era5ServiceNode('https://cds.climate.copernicus.eu/api/v2', auth=my_id)\n\npredicate = Era5PredicateEra5SingleLevelsByHour(year=1959, month=1, day=1, time=0,\n                                                variable='2m_temperature')\n\n\n\nres = service_era5['reanalysis-era5-pressure-levels'][predicate]\n\nres['root']['variables']['t2m'].get_impl(xarray.DataArray)\n\n# you can make the same by dict\n\ndict_request = {\n    'product_type': 'reanalysis',\n    'variable': '2m_temperature',\n    'year': '1959',\n    'month': '1',\n    'day': '1',\n    'time': '0',\n    'format': 'netcdf'\n}\n\nres = service_era5['reanalysis-era5-pressure-levels'][dict_request]\n# ...\n\n# you can also request a list of variables or a list of product_type\n# by default product_type in predicate is 'reanalysis'\n\npredicate = Era5PredicateEra5SingleLevelsByHour(year=1959, month=1, day=1, time=0\n                                                variable=['2m_temperature', 'skin_temperature'],\n                                                product_type=['ensemble_mean', 'ensemble_members'])\n\nres = service_era5['reanalysis-era5-pressure-levels'][predicate]\n\n```\n\n\n\n# Installation\n```\npip install drb-driver-era5\n```\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/impl/era5",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-driver-era5",
    "package_url": "https://pypi.org/project/drb-driver-era5/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-driver-era5/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/impl/era5"
    },
    "release_url": "https://pypi.org/project/drb-driver-era5/1.1.0/",
    "requires_dist": [
      "drb (~=2.0.3)",
      "drb-driver-http (~=1.1.1)",
      "drb-driver-netcdf (~=1.1.1)",
      "cdsapi (==0.5.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB era5 OGC Service driver",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16230791,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff71795454ebedd0e35c2b5e329afd5da3fbcc41b8d03fba0247b8452f541c71",
        "md5": "de00281971a96d22b80319a1c70d15f3",
        "sha256": "932284868709a73bdfa63d69f6dd3b06a5d65d94c38bfc2bf225c1a8b76e27f0"
      },
      "downloads": -1,
      "filename": "drb_driver_era5-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de00281971a96d22b80319a1c70d15f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11041,
      "upload_time": "2022-12-27T17:11:33",
      "upload_time_iso_8601": "2022-12-27T17:11:33.597326Z",
      "url": "https://files.pythonhosted.org/packages/ff/71/795454ebedd0e35c2b5e329afd5da3fbcc41b8d03fba0247b8452f541c71/drb_driver_era5-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b38ef97439bb37144be3acb4e9e3134d95a5183e8aa1da979aa54c5b29b68b83",
        "md5": "60b22bb824a1e5e83da835c45cbb42b6",
        "sha256": "728e37785b23e487af991f81915b2b6d398a9ffce5e762951ba940e6761cc100"
      },
      "downloads": -1,
      "filename": "drb-driver-era5-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "60b22bb824a1e5e83da835c45cbb42b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 30367,
      "upload_time": "2022-12-27T17:11:34",
      "upload_time_iso_8601": "2022-12-27T17:11:34.932992Z",
      "url": "https://files.pythonhosted.org/packages/b3/8e/f97439bb37144be3acb4e9e3134d95a5183e8aa1da979aa54c5b29b68b83/drb-driver-era5-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}