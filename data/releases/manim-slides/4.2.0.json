{
  "info": {
    "author": "JÃ©rome Eertmans (previously, Federico A. Galatolo)",
    "author_email": "jeertmans@icloud.com (resp., federico.galatolo@ing.unipi.it)",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![Manim Slides Logo](https://raw.githubusercontent.com/jeertmans/manim-slides/main/static/logo.png)\n\n[![Latest Release][pypi-version-badge]][pypi-version-url]\n[![Python version][pypi-python-version-badge]][pypi-version-url]\n![PyPI - Downloads](https://img.shields.io/pypi/dm/manim-slides)\n# Manim Slides\n\nTool for live presentations using either [Manim (community edition)](https://www.manim.community/) or [ManimGL](https://3b1b.github.io/manim/). Manim Slides will *automatically* detect the one you are using!\n\n> **_NOTE:_**  This project extends the work of [`manim-presentation`](https://github.com/galatolofederico/manim-presentation), with a lot more features!\n\n- [Installation](#installation)\n  * [Dependencies](#dependencies)\n  * [Pip install](#pip-install)\n  * [Install From Repository](#install-from-repository)\n- [Usage](#usage)\n  * [Basic Example](#basic-example)\n  * [Key Bindings](#key-bindings)\n  * [Other Examples](#other-examples)\n- [Features and Comparison with Original manim-presentation](#features-and-comparison-with-original-manim-presentation)\n- [F.A.Q](#faq)\n  * [How to increase quality on Windows](#how-to-increase-quality-on-windows)\n- [Contributing](#contributing)\n\n## Installation\n\nWhile installing Manim Slides and its dependencies on your global Python is fine, I recommend using a [virtualenv](https://docs.python.org/3/tutorial/venv.html) for a local installation.\n\n### Dependencies\n\nManim Slides requires either Manim or ManimGL to be installed. Having both packages installed is fine too.\n\nIf none of those packages are installed, please refer to their specific installation guidelines:\n- [Manim](https://docs.manim.community/en/stable/installation.html)\n- [ManimGL](https://3b1b.github.io/manim/getting_started/installation.html)\n\n### Pip Install\n\nThe recommended way to install the latest release is to use pip:\n\n```bash\npip install manim-slides\n```\n\n### Install From Repository\n\nAn alternative way to install Manim Slides is to clone the git repository, and install from there:\n\n```bash\ngit clone https://github.com/jeertmans/manim-slides\npip install -e .\n```\n\n> *Note:* the `-e` flag allows you to edit the files, and observe the changes directly when using Manim Slides\n\n## Usage\n\nUsing Manim Slides is a two-step process:\n1. Render animations using `Slide` (resp. `ThreeDSlide`) as a base class instead of `Scene` (resp. `ThreeDScene`), and add calls to `self.pause()` everytime you want to create a new slide.\n2. Run `manim-slides` on rendered animations and display them like a *Power Point* presentation.\n\nThe command-line documentation is available [online](https://eertmans.be/manim-slides/).\n\n### Basic Example\n\n\nWrap a series of animations between `self.start_loop()` and `self.stop_loop()` when you want to loop them (until input to continue):\n\n```python\n# example.py\n\nfrom manim import *\n# or: from manimlib import *\nfrom manim_slides import Slide\n\nclass Example(Slide):\n    def construct(self):\n        circle = Circle(radius=3, color=BLUE)\n        dot = Dot()\n\n        self.play(GrowFromCenter(circle))\n        self.pause()  # Waits user to press continue to go to the next slide\n\n        self.start_loop()  # Start loop\n        self.play(MoveAlongPath(dot, circle), run_time=2, rate_func=linear)\n        self.end_loop()  # This will loop until user inputs a key\n\n        self.play(dot.animate.move_to(ORIGIN))\n        self.pause()  # Waits user to press continue to go to the next slide\n\n        self.wait()  # The presentation directly exits after last animation\n```\n\nYou **must** end your `Slide` with a `self.play(...)` or a `self.wait(...)`.\n\nFirst, render the animation files:\n\n```bash\nmanim example.py\n# or\nmanimgl example.py\n```\n\nTo start the presentation using `Scene1`, `Scene2` and so on simply run:\n\n```bash\nmanim-slides [OPTIONS] Scene1 Scene2...\n```\n\nOr in this example:\n\n```bash\nmanim-slides Example\n```\n\n##  Key Bindings\n\nThe default key bindings to control the presentation are:\n\n|  Keybinding |          Action          |\n|:-----------:|:------------------------:|\n| Right Arrow |    Continue/Next Slide   |\n|  Left Arrow |      Previous Slide      |\n|      R      |   Replay Current Slide   |\n|      V      |   Reverse Current Slide  |\n|   Spacebar  |        Play/Pause        |\n|      Q      |           Quit           |\n\nYou can run the **configuration wizard** to change those key bindings:\n\n```bash\nmanim-slides wizard\n```\n\nAlternatively you can specify different key bindings creating a file named `.manim-slides.json` with the keys: `QUIT` `CONTINUE` `BACK` `REVERSE` `REWIND` and `PLAY_PAUSE`.\n\nA default file can be created with:\n\n```bash\nmanim-slides init\n```\n\n> **_NOTE:_**  `manim-slides` uses `cv2.waitKeyEx()` to wait for keypresses, and directly registers the key code.\n\n## Other Examples\n\nOther examples are available in the [`example.py`](https://github.com/jeertmans/manim-slides/blob/main/example.py) file, if you downloaded the git repository.\n\nBelow is a small recording of me playing with the slides back and forth.\n\n![](https://raw.githubusercontent.com/jeertmans/manim-slides/main/static/example.gif)\n\n\n## Features and Comparison with original manim-presentation\n\nBelow is a non-exhaustive list of features:\n\n| Feature | `manim-slides` | `manim-presentation` |\n|:--------|:--------------:|:--------------------:|\n| Support for Manim | :heavy_check_mark: | :heavy_check_mark: |\n| Support for ManimGL | :heavy_check_mark: | :heavy_multiplication_x: |\n| Configurable key bindings | :heavy_check_mark: | :heavy_check_mark: |\n| Configurable paths | :heavy_check_mark: | :heavy_multiplication_x: |\n| Play / Pause slides | :heavy_check_mark: | :heavy_check_mark: |\n| Next / Previous slide | :heavy_check_mark: | :heavy_check_mark: |\n| Replay slide | :heavy_check_mark: | :heavy_check_mark: |\n| Reverse slide | :heavy_check_mark: | :heavy_multiplication_x: |\n| Multiple key per actions | :heavy_check_mark: | :heavy_multiplication_x: |\n| One command line tool | :heavy_check_mark: | :heavy_multiplication_x: |\n| Robust config file parsing | :heavy_check_mark: | :heavy_multiplication_x: |\n| Support for 3D Scenes | :heavy_check_mark: | :heavy_multiplication_x: |\n| Documented code | :heavy_check_mark: | :heavy_multiplication_x: |\n| Tested on Unix, macOS, and Windows | :heavy_check_mark: | :heavy_multiplication_x: |\n\n## F.A.Q\n\n### How to increase quality on Windows\n\nOn Windows platform, one may encounter a lower image resolution than expected. Usually, this is observed because Windows rescales every application to fit the screen.\nAs found by [@arashash](https://github.com/arashash), in [#20](https://github.com/jeertmans/manim-slides/issues/20), the problem can be addressed by changing the scaling factor to 100%:\n\n![Windows Fix Scaling](static/windows_quality_fix.png)\n\nin *Settings*->*Display*.\n\n## Contributing\n\nContributions are more than welcome!\n\n[pypi-version-badge]: https://img.shields.io/pypi/v/manim-slides?label=manim-slides\n[pypi-version-url]: https://pypi.org/project/manim-slides/\n[pypi-python-version-badge]: https://img.shields.io/pypi/pyversions/manim-slides\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeertmans/manim-slides",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manim-slides",
    "package_url": "https://pypi.org/project/manim-slides/",
    "platform": null,
    "project_url": "https://pypi.org/project/manim-slides/",
    "project_urls": {
      "Homepage": "https://github.com/jeertmans/manim-slides"
    },
    "release_url": "https://pypi.org/project/manim-slides/4.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Tool for live presentations using manim",
    "version": "4.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17365561,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a7b147c59bfd6bd9a26e6a73d648053a4958a169841c5d67ae6feb1f1b86a82",
        "md5": "a5494b0be2dd0282954e6ecf482ba8eb",
        "sha256": "7ad29f6b9df0811a2b11a2daa45516583508d8cc2a4d070b411c2ffc57e36365"
      },
      "downloads": -1,
      "filename": "manim-slides-4.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a5494b0be2dd0282954e6ecf482ba8eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 31919,
      "upload_time": "2022-10-19T09:18:59",
      "upload_time_iso_8601": "2022-10-19T09:18:59.473395Z",
      "url": "https://files.pythonhosted.org/packages/1a/7b/147c59bfd6bd9a26e6a73d648053a4958a169841c5d67ae6feb1f1b86a82/manim-slides-4.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}