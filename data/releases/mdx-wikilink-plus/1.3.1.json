{
  "info": {
    "author": "Md. Jahidul Hamid",
    "author_email": "jahidulhamid@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "[![Build Status](https://travis-ci.org/neurobin/mdx_wikilink_plus.svg?branch=release)](https://travis-ci.org/neurobin/mdx_wikilink_plus)\n\nConverts wikilinks (`[[wikilink]]`) to relative links. Absolute links are kept as is (with an automatic label made from the file path part in the URL if label is not given explicitly).\n\n**You should not use markdown.extensions.wikilinks along with this one. This extension is designed to provide the functionalities of markdown.extensions.wikilinks along with some extra features. Choose either one.**\n\n# Install\n\n```bash\npip install mdx_wikilink_plus\n```\n\n# Wikilink syntax\n\nThe geneal formats are:\n\n1. Without explicit label: `[[wikilink]]`\n2. With explicit label: `[[ link | label ]]`\n\n# Usage\n\n```python\ntext = \"[[wikilink]]\"\nmd = markdown.Markdown(extensions=['mdx_wikilink_plus'])\nhtml = md.convert(text)\n```\n\n# Quick examples\n\n`[[/path/to/file-name]]` will become:\n\n```html\n<p><a class=\"wikilink\" href=\"/path/to/file-name\">File Name</a></p>\n```\n\n`[[https://www.example.com/example-tutorial]]` will become:\n\n```html\n<p><a class=\"wikilink\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n```\n\nand `[[https://www.example.com/?a=b&b=c]]` will become:\n\n```html\n<p><a class=\"wikilink\" href=\"https://www.example.com/?a=b&amp;b=c\">www.example.com</a></p>\n```\n\n\n## Configuration\n\nThe configuration options are:\n\nConfig param | Default | Details\n------------ | ------- | -------\nbase_url | `''` | Prepended to the file_path part of the URL. A `/` at the end of the base_url will be handled intelligently.\nend_url | `''` | Appended to the file_path part of the URL. If end_url is given (non-empty), then any `/` at the end of the file_path part in the URL is removed. If the end_url matches the extension of the file_path part, it will be ignored, for example, if end_url is `.html` and the wikilink provided is `[[/path/to/myfile.html]]`, then the URL will be `/path/to/myfile.html` not `/path/to/myfile.html.html`.\nurl_whitespace | `'-'` | Replace all whitespace in the file_path path with this character (string) when building the URL.\nurl_case | `'none'` | Choose case in the file_path. Available options: lowercase, uppercase.\nlabel_case | `'titlecase'` | Choose case of the label. Available options: titlecase, capitalize, none. Capitalize will capitalize the first character only.\nhtml_class | `'wikilink'` | Set custom HTML classes on the anchor tag. It does not add classes rather it resets any previously set value.\nbuild_url | `mdx_wikilink_plus.build_url` | A callable that returns the URL string. [Default build_url callable](#the-build_url-callable)\n\n**None of the configs apply on absolute URLs except html_class and build_url. (Yes, label_case won't work either)**\n\n### Configuration through meta data\n\nConfiguration can also be passed through metadata (markdown.extensions.meta).\n\nWe recognize the following template:\n\n```md\nwiki_base_url: /static/\nwiki_end_url: \nwiki_url_whitespace: _\nwiki_label_case: capitalize\nwiki_html_class: wikilink\n\nThe first line of the document\n```\n\n\n### An example with configuration:\n\n\n```python\nmd_configs = {\n                'mdx_wikilink_plus': {\n                    'base_url': '/static',\n                    'end_url': '.html',\n                    'url_whitespace': '-',\n                    'url_case': 'lowercase',\n                    'label_case': 'titlecase',\n                    'html_class': 'a-custom-class',\n                    #'build_url': build_url, # A callable\n                    # all of the above config params are optional\n                },\n             }\n\n\ntext = \"\"\"\n[[Page Name]]\n\n[[/path/to/file-name]]\n\n[[/path/to/file name/?a=b&b=c]]\n\"\"\"\n\n\nmd = markdown.Markdown(extensions=['mdx_wikilink_plus'], extension_configs=md_configs)\nprint(md.convert(text))\n```\n\nThe output will be:\n\n```html\n<p><a class=\"a-custom-class\" href=\"/static/page-name.html\">Page Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html?a=b&amp;b=c\">File Name</a></p>\n```\n\n!!! info\n    `end_url` is added at the end of the file-path part in the URL.\n\n\n# More examples\n\nOur test markdown:\n\n```md\n[[wikilink]]    `[[wikilink]]`\n\n[[/path/to/file name]]\n\n[[/path/to/file_name]]\n\n[[/path/to/file-name]]\n\n[[/path/to/file name/?a=b&b=c]]\n\n[[/path/to/file name.html]]\n\n[[/path/to/file name.html?a=b&b=c]]\n\n[[https://www.example.com/?]]\n\n[[https://www.example.com/?a=b&b=c]]\n\n[[https://www.example.com/example-tutorial]]\n\n[[https://www.example.com/example-tutorial | Example Tutorial]]\n```\n\n## Output without any config\n\n```html\n<p><a class=\"wikilink\" href=\"wikilink\">Wikilink</a>    <code>[[wikilink]]</code></p>\n<p><a class=\"wikilink\" href=\"/path/to/file-name\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"/path/to/file_name\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"/path/to/file-name\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"/path/to/file-name/?a=b&amp;b=c\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"/path/to/file-name.html\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"/path/to/file-name.html?a=b&amp;b=c\">File Name</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/\">www.example.com</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/?a=b&amp;b=c\">www.example.com</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n```\n\n## With a config\n\nWith the configuration\n\n```python\n'mdx_wikilink_plus': {\n    'base_url': '/static',\n    'end_url': '.html',\n    'url_whitespace': '-',\n    'label_case': 'titlecase',\n    'html_class': 'a-custom-class',\n},\n```\n\nthe output will be:\n\n```html\n<p><a class=\"a-custom-class\" href=\"/static/wikilink.html\">Wikilink</a>    <code>[[wikilink]]</code></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file_name.html\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html?a=b&amp;b=c\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"/static/path/to/file-name.html?a=b&amp;b=c\">File Name</a></p>\n<p><a class=\"a-custom-class\" href=\"https://www.example.com/\">www.example.com</a></p>\n<p><a class=\"a-custom-class\" href=\"https://www.example.com/?a=b&amp;b=c\">www.example.com</a></p>\n<p><a class=\"a-custom-class\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n<p><a class=\"a-custom-class\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n```\n\n## With meta (`markdown.extensions.meta`)\n\nWith the following meta added to the markdown:\n\n```md\nwiki_base_url: /static/\nwiki_end_url: \nwiki_url_whitespace: _\nwiki_label_case: capitalize\nwiki_html_class: wikilink\n```\n\nthe output will be:\n\n```html\n<p><a class=\"wikilink\" href=\"/static/wikilink\">Wikilink</a>    <code>[[wikilink]]</code></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file_name\">File name</a></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file_name\">File name</a></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file-name\">File name</a></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file_name/?a=b&amp;b=c\">File name</a></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file_name.html\">File name</a></p>\n<p><a class=\"wikilink\" href=\"/static/path/to/file_name.html?a=b&amp;b=c\">File name</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/\">www.example.com</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/?a=b&amp;b=c\">www.example.com</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/example-tutorial\">Example tutorial</a></p>\n<p><a class=\"wikilink\" href=\"https://www.example.com/example-tutorial\">Example Tutorial</a></p>\n```\n\n\n# The build_url callable\n\nThe default `build_url` function is defined as:\n\n```python\ndef build_url(urlo, base, end, url_whitespace):\n    \"\"\" Build and return a valid url.\n\n    Parameters\n    ----------\n\n    urlo            A ParseResult object returned by urlparse\n\n    base            base_url from config\n\n    end             end_url from config\n\n    url_whitespace  url_whitespace from config\n\n    Returns\n    -------\n\n    URL string\n\n    \"\"\"\n    if not urlo.netloc:\n        if not end:\n            clean_target = re.sub(r'\\s+', url_whitespace, urlo.path)\n        else:\n            clean_target = re.sub(r'\\s+', url_whitespace, urlo.path.rstrip('/'))\n            if clean_target.endswith(end):\n                end = ''\n        if base.endswith('/'):\n            path = \"%s%s%s\" % (base, clean_target.lstrip('/'), end)\n        elif base and not clean_target.startswith('/'):\n            path = \"%s/%s%s\" % (base, clean_target, end)\n        else:\n            path = \"%s%s%s\" % (base, clean_target, end)\n        urlo = urlo._replace(path=path)\n    return urlunparse(urlo)\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neurobin/mdx_wikilink_plus",
    "keywords": "markdown wikilinks wikilink wikilink_plus",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdx-wikilink-plus",
    "package_url": "https://pypi.org/project/mdx-wikilink-plus/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdx-wikilink-plus/",
    "project_urls": {
      "Homepage": "https://github.com/neurobin/mdx_wikilink_plus"
    },
    "release_url": "https://pypi.org/project/mdx-wikilink-plus/1.3.1/",
    "requires_dist": [
      "Markdown (>=2.6)"
    ],
    "requires_python": "",
    "summary": "A wikilink extension for Python Markdown",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14549387,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ebcb2397dad367fb7374955afce4b0227ca9be4b661c4ac5090277a685fee82",
        "md5": "7ae9caf52544147b23d08c38876762e6",
        "sha256": "885d400eb3c41f47a27c901d164edd879301f3e87ba37f15d0454dc535674391"
      },
      "downloads": -1,
      "filename": "mdx_wikilink_plus-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ae9caf52544147b23d08c38876762e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8522,
      "upload_time": "2019-11-24T11:16:14",
      "upload_time_iso_8601": "2019-11-24T11:16:14.561786Z",
      "url": "https://files.pythonhosted.org/packages/1e/bc/b2397dad367fb7374955afce4b0227ca9be4b661c4ac5090277a685fee82/mdx_wikilink_plus-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bb819bd3d82f362c4343381f86a0063ade01cb86298149c45ec409111059a2c",
        "md5": "1f37d6e104b8df1b349be2bddab11106",
        "sha256": "a0d724bbf3a0bf7d70b0290018817393714b2f0e0c9ea3fcc2d3ba481407eefd"
      },
      "downloads": -1,
      "filename": "mdx_wikilink_plus-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1f37d6e104b8df1b349be2bddab11106",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7571,
      "upload_time": "2019-11-24T11:16:17",
      "upload_time_iso_8601": "2019-11-24T11:16:17.041519Z",
      "url": "https://files.pythonhosted.org/packages/0b/b8/19bd3d82f362c4343381f86a0063ade01cb86298149c45ec409111059a2c/mdx_wikilink_plus-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}