{
  "info": {
    "author": "Leon Danon (original C code), Christopher Woods (Python port)",
    "author_email": "l.danon@bristol.ac.uk, Christopher.Woods@bristol.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# MetaWards\n\n[![Build status](https://github.com/metawards/MetaWards/workflows/Build/badge.svg)](https://github.com/metawards/MetaWards/actions?query=workflow%3ABuild)\n[![PyPI version](https://badge.fury.io/py/metawards.svg)](https://pypi.python.org/pypi/metawards)\n[![PyPI](https://img.shields.io/pypi/pyversions/metawards.svg)](https://pypi.org/project/metawards/)\n[![Downloads](https://pepy.tech/badge/metawards)](https://pepy.tech/project/metawards)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/m/metawards/metawards)](https://github.com/metawards/MetaWards)\n[![License](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0.html)\n\nFor the most accurate and up to date information please\n[visit the project website](https://metawards.org).\n\nThis is a Python port of the [MetaWards](https://github.com/ldanon/MetaWards)\npackage originally written by Leon Danon. The port is kept in sync with\nthe original C code, with checks in place to ensure that the two codes\ngive identical results. This improves the robustness of both codes, as\nit minimises the footprint to bugs that can evade both C and Python.\n\nThe aim of this port is to make it easier for others to contribute to the\nprogram, to improve robustness by adding in unit and integration test,\nand to also open up scope for further optimisation and parallelisation.\n\nThe package makes heavy use of [cython](https://cython.org) which is used\nwith [OpenMP](https://openmp.org) to compile bottleneck parts of the\ncode to parallelised C. This enables this Python port\nto run at approximately the same speed as the original C program on one core,\nand to run several times faster across multiple cores.\n\nThe program compiles on any system that has a working C compiler that\nsupports OpenMP, and a working Python >= 3.7. This include X86-64 and\nARM64 servers.\n\nThe software supports running over a cluster using MPI\n(via [mpi4py](https://mpi4py.readthedocs.io/en/stable/)) or via\nsimple networking (via [scoop](http://scoop.readthedocs.io)).\n\nFull instructions on how to use the program, plus example job submission\nscripts can be found on the [project website](https://metawards.org).\n\n## Data\n\nThe data and input parameters needed to use this package are stored in\nthe [MetaWardsData](https://github.com/metawards/MetaWardsData)\nrepository. Please make sure that you clone this repository to your\ncomputer and supply the full path to that repository to the program\nwhen it runs. There are three ways to do this;\n\n1. Set the `METAWARDSDATA` environment variable to point to this directory,\n   e.g. `export METAWARDSDATA=$HOME/GitHub/MetaWards`\n\n2. Pass the `repository` variable to the input data classes\n   [Disease](https://github.com/metawards/MetaWards/blob/devel/src/metawards/_disease.py), [InputFiles](https://github.com/metawards/MetaWards/blob/devel/src/metawards/_inputfiles.py) and [Parameters](https://github.com/metawards/MetaWards/blob/devel/src/metawards/_parameters.py)\n\n3. Or simply make sure you clone into the directory `$HOME/GitHub/MetaWardsData`\n   as this is the default path.\n\n## References\n\nThese are the references behind the\n[original C code](https://github.com/ldanon/MetaWards) are;\n\n- _\"Individual identity and movement networks for disease metapopulations\"_\nMatt J. Keeling, Leon Danon, Matthew C. Vernon, Thomas A. House\nProceedings of the National Academy of Sciences May 2010, 107 (19) 8866-8870; DOI: [10.1073/pnas.1000416107](https://doi.org/10.1073/pnas.1000416107)\n\n- _\"A spatial model of CoVID-19 transmission in England and Wales: early spread and peak timing\"_\nLeon Danon, Ellen Brooks-Pollock, Mick Bailey, Matt J Keeling\nmedRxiv 2020.02.12.20022566; doi: [10.1101/2020.02.12.20022566](https://doi.org/10.1101/2020.02.12.20022566)\n\n## Dependencies\n\nThe code requires Python 3.7 or above.\nFor development you will need [cython](https://cython.org) and a\nworking C compiler to build the code,\nplus [pytest](https://docs.pytest.org/en/latest/)\nfor running the tests.\n\n## Installation\n\n[Full installation instructions are here](https://metawards.org/install.html).\n\nAs you are here, I guess you want to install the latest code from GitHub ;-)\n\nTo do that, type;\n\n```\ngit clone https://github.com/metawards/MetaWards\ncd MetaWards\npip install -r requirements-dev.txt\nCYTHONIZE=1 python setup.py build\nCYTHONIZE=1 python setup.py install\n```\n\nAlternatively, you can also use the makefile, e.g.\n\n```\nmake\nmake install\n```\n\n(assuming that `python` is version 3.7 or above)\n\nYou can run tests using pytest, e.g.\n\n```\nMETAWARDSDATA=\"/path/to/MetaWardsData\" pytest tests\n```\n\nYou can generate the docs using\n\n```\nmake docs\n```\n\n## Running\n\n[Full usage instructions are here](https://metawards.org/usage.html)\n\nYou can either load and use the Python classes directly, or you can\nrun the `metawards` front-end command line program that is automatically installed.\n\n```\nmetawards --help\n```\n\nwill print out all of the help for the program. For example;\n\n```\nmetawards --input tests/data/ncovparams.csv --seed 15324 --nsteps 30 --nthreads 1\n```\n\nThis will duplicate the run of the MetaWards C program that is bundled\nin this repository that was run using;\n\n```\n./original/metawards 15324 tests/data/ncovparams.csv 0 1.0\n```\n\nThe original C code, command line and expected output are in the\n[original](https://github.com/metawards/MetaWards/tree/devel/original)\ndirectory that is bundled in this repo.\n\n### Running an ensemble\n\nThis program supports parallel running of an ensemble of jobs using\n[multiprocessing](https://docs.python.org/3.7/library/multiprocessing.html)\nfor single-node jobs, and [mpi4py](https://mpi4py.readthedocs.io/en/stable/)\nor [scoop](http://scoop.readthedocs.io) for multi-node cluster jobs.\n\n[Full instructions for running on a cluster are here](https://metawards.org/cluster_usage.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/metawards/metawards",
    "keywords": "",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metawards",
    "package_url": "https://pypi.org/project/metawards/",
    "platform": "",
    "project_url": "https://pypi.org/project/metawards/",
    "project_urls": {
      "Code": "https://github.com/metawards/MetaWards",
      "Documentation": "https://metawards.org",
      "Homepage": "https://github.com/metawards/metawards",
      "Issue tracker": "https://github.com/metawards/MetaWards/issues"
    },
    "release_url": "https://pypi.org/project/metawards/1.2.0/",
    "requires_dist": [
      "dateparser (>=0.7.0)",
      "configargparse (>=1.2.0)",
      "rich (==1.1.7)",
      "yaspin (==0.17.0)",
      "pytest (>=5.1) ; extra == 'dev'",
      "pytest-cov (>=2.2.0) ; extra == 'dev'",
      "flake8 (>=3.7) ; extra == 'dev'",
      "cython (>=0.29.13) ; extra == 'dev'",
      "numpy (>=1.17.2) ; extra == 'dev'",
      "sphinx (==1.8.0) ; extra == 'dev'",
      "sphinx-issues ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "sphinxcontrib-programoutput ; extra == 'dev'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'"
    ],
    "requires_python": ">=3.7",
    "summary": "MetaWards disease metapopulation modelling",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13216579,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e44c95664cfc90c0e79b3795521a186edb7e8dce5531a3dfc33c9777cfb4c68",
        "md5": "eac4a70aa308a250727932388273eb99",
        "sha256": "f89a8ab9612810d6627e3f02025d4d86fcabe73801ae2e3f0787df3d540cbcbc"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp37-cp37m-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "eac4a70aa308a250727932388273eb99",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.7",
      "size": 2007189,
      "upload_time": "2020-06-26T12:25:47",
      "upload_time_iso_8601": "2020-06-26T12:25:47.902978Z",
      "url": "https://files.pythonhosted.org/packages/3e/44/c95664cfc90c0e79b3795521a186edb7e8dce5531a3dfc33c9777cfb4c68/metawards-1.2.0-cp37-cp37m-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e093d4d32ae500f3728e2544de60d21cd50176c3528b316f943eaadfbb01f797",
        "md5": "3c5156bf1126dc6b7dca875262be2032",
        "sha256": "2c23bd868f46bb94c0cab8961a7641eccadc2960a54def1453db7d04d8137598"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3c5156bf1126dc6b7dca875262be2032",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.7",
      "size": 6446655,
      "upload_time": "2020-06-26T12:25:54",
      "upload_time_iso_8601": "2020-06-26T12:25:54.046172Z",
      "url": "https://files.pythonhosted.org/packages/e0/93/d4d32ae500f3728e2544de60d21cd50176c3528b316f943eaadfbb01f797/metawards-1.2.0-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "306a5813368b8af7532851291e7a03a148ef30fc6cd88d07bc1e92dcca353ce7",
        "md5": "6234e3957c340521bee8e2cbf74211e4",
        "sha256": "87754773a005efe5e617c9680c5e97aeeaa4df5570ce941508dea9f85dd8e011"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "6234e3957c340521bee8e2cbf74211e4",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.7",
      "size": 1810937,
      "upload_time": "2020-06-26T12:25:57",
      "upload_time_iso_8601": "2020-06-26T12:25:57.437871Z",
      "url": "https://files.pythonhosted.org/packages/30/6a/5813368b8af7532851291e7a03a148ef30fc6cd88d07bc1e92dcca353ce7/metawards-1.2.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19c5a0a3922ee2b20d0f0a39e29e4d0f9c728813b8313a9eaa8a6aa3ccf1413f",
        "md5": "2aa58d9ed9d15a74150470de61761e98",
        "sha256": "5e69429cdfc5a2cc23f1a69ba21ac8ac909f57493686f622aa946369774b1973"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp38-cp38-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2aa58d9ed9d15a74150470de61761e98",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 2008246,
      "upload_time": "2020-06-26T12:26:00",
      "upload_time_iso_8601": "2020-06-26T12:26:00.226532Z",
      "url": "https://files.pythonhosted.org/packages/19/c5/a0a3922ee2b20d0f0a39e29e4d0f9c728813b8313a9eaa8a6aa3ccf1413f/metawards-1.2.0-cp38-cp38-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c2965cbc8e88c18fd053ede50d3b60bdc23dc184106248f4b01b63781a14bd4",
        "md5": "882701efa924dfa779e113e2423ff7ea",
        "sha256": "590ea7edeccaf2882fd0c276d4bcd412bca4e8f38b40ba29990d02139468fb21"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "882701efa924dfa779e113e2423ff7ea",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 6679485,
      "upload_time": "2020-06-26T12:26:05",
      "upload_time_iso_8601": "2020-06-26T12:26:05.613754Z",
      "url": "https://files.pythonhosted.org/packages/6c/29/65cbc8e88c18fd053ede50d3b60bdc23dc184106248f4b01b63781a14bd4/metawards-1.2.0-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d6e8218f18bbff4cd8b6d6ecfbe0f0d7e88b989ca4f82a3abe2db6fffa05b54",
        "md5": "7a5b04f73a9504d27c04ebf869fcb447",
        "sha256": "1ed894193998b8c7985c7d84e05f0a0616d5bdfd51a198ff4afcbdedb55ab67a"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "7a5b04f73a9504d27c04ebf869fcb447",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 1838542,
      "upload_time": "2020-06-26T12:26:08",
      "upload_time_iso_8601": "2020-06-26T12:26:08.318778Z",
      "url": "https://files.pythonhosted.org/packages/2d/6e/8218f18bbff4cd8b6d6ecfbe0f0d7e88b989ca4f82a3abe2db6fffa05b54/metawards-1.2.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38cf72f48d6be646fc9606926f001e03194c00f46bd4a8d624ef691279508bce",
        "md5": "ef5b73c883d54a92a3388b6a1908a7dd",
        "sha256": "f6af96a7592f2a5f36001bd75193fd7d1913f32bbb97203cb92478e85dc44014"
      },
      "downloads": -1,
      "filename": "metawards-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ef5b73c883d54a92a3388b6a1908a7dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2349390,
      "upload_time": "2020-06-26T12:26:11",
      "upload_time_iso_8601": "2020-06-26T12:26:11.223744Z",
      "url": "https://files.pythonhosted.org/packages/38/cf/72f48d6be646fc9606926f001e03194c00f46bd4a8d624ef691279508bce/metawards-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}