{
  "info": {
    "author": "Jacob Rief",
    "author_email": "jacob.rief@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# SendCloud Shipping Provider Integration for django-SHOP\n\nThis integrates the **SendCloud** API for **django-SHOP** version 1.0 and above.\n\n\n## Installation\n\nfor django-SHOP version 1.0 and later:\n\n```\npip install djangoshop-sendcloud<1.1\n```\n\n\n## Preparation\n\nAt [SendCloud](https://panel.sendcloud.sc/) create an account.\n\nIn your personal account settings, click on **Settings**. There:\n\n* Add a **Sender Address**.\n* In **Financial > Direct Debit** add your recurring payment settings. There your bank account is\n  charged with â‚¬ 0.01, but this may take a few hours or even one day until everything is checked.\n* In **Selected Shop** select **SendCloud API** with a name of your choice. There, extract the\n  **Public Key** and the **Secret Key** (see below).\n\n\n## Configuration\n\nIn `settings.py` of the merchant's project:\n\nAdd `'shop_sendcloud'` to `INSTALLED_APPS`.\n\nAdd `'shop_sendcloud.modifiers.SendcloudShippingModifier'` to the list of `SHOP_CART_MODIFIERS`.\n\nAdd `'shop_sendcloud.shipping.OrderWorkflowMixin'` to the list of `SHOP_ORDER_WORKFLOWS`.\n\nIf you run **django-SHOP** with partial delivery, replace the `OrderItemSerializer` with the one provided:\n`SHOP_ORDER_ITEM_SERIALIZER = 'shop_sendcloud.serializers.OrderItemSerializer'`\nand change the workflow to:\n\n```python\nSHOP_ORDER_WORKFLOWS = [\n    ...\n    'shop_sendcloud.workflows.CommonOrderWorkflowMixin',\n    'shop.shipping.workflows.PartialDeliveryWorkflowMixin',\n]\n```\n\nOtherwise, without partial delivery, change the workflow to:\n\n```python\nSHOP_ORDER_WORKFLOWS = [\n    ...\n    'shop_sendcloud.workflows.SingularOrderWorkflowMixin',\n    'shop.shipping.workflows.CommissionGoodsWorkflowMixin',\n]\n```\n\nAdd the **Public Key** and the **Secret Key** as provided by SendCloud (see above):\n\n```python\nSHOP_SENDCLOUD = {\n  'API_KEY': '<public-key-as-provided-by-SendCloud>',\n  'API_SECRET': '<secret-key-as-provided-by-SendCloud>',\n}\n```\n\nSince SendClouds sets the Shipping ID for us, we disable that field in the\nbackend, using `SHOP_MANUAL_SHIPPING_ID = False`.\n\n**SendCloud** requires a specific address model, therefore ensure that you \"materialize\" the one\nprovided with **djangoshop-sendcloud** and not the defaults from `shop/models/defaults/address`.\n\nTypically, it's enough to import the alternative classes for `BillingAddress`, `ShippingAddress`\nand `Customer` into `models.py` of your merchant implementation:\n\n```python\nfrom shop_sendcloud.models.address import BillingAddress, ShippingAddress\nfrom shop_sendcloud.models.customer import Customer\n```\n\n\n## Initialization\n\nCreate two additional database tables as required by **djangoshop-sendcloud**:\n\n```bash\npython manange.py migrate djangoshop_sendcloud\n```\n\nFinally, load all possible shipping options into your shop:\n\n```bash\npython manange.py sendcloud_import\n```\nremember to run this job on a regular basis, say once a week, to update shipping prices.\n\n\n## Usage\n\nWhen **django-SHOP** renders the form **Shipping Method** inside the checkout view, additional\noptions will be available. For each carrier configured in the **SendCloud** backend, an extra radio\nbutton appears. Whatever the customer selects, will be stored inside **django-SHOP**'s `OrderModel`.\n\nIn the Django Admin backend, only after fulfilling the order, a new button apprears named\n**PRINT SHIPPING LABEL**. Clicking on that button fetches a PDF document from the SendCloud API and\nforwards it to the Django Admin interface, from where it can be printed out.\n\n\n## Changes\n\n### 1.0.1\n* Adopt Models to work with Django>2.\n\n### 1.0\n* Initial working release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrief/djangoshop-sendcloud",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangoshop-sendcloud",
    "package_url": "https://pypi.org/project/djangoshop-sendcloud/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/djangoshop-sendcloud/",
    "project_urls": {
      "Homepage": "https://github.com/jrief/djangoshop-sendcloud"
    },
    "release_url": "https://pypi.org/project/djangoshop-sendcloud/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SendCloud Shipping Provider Integration for django-shop",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7258061,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec7e8c3ce9d37952edb0baa9bd7b6184607250a140b05097ed2cfd61a62537fa",
        "md5": "d6ff8a5af9cc5503a224e0a5b0999c2b",
        "sha256": "7b8e40fca84c7ac2c74b4ced1b55d5d0d3f95d7c14afc493280228a8761e9eea"
      },
      "downloads": -1,
      "filename": "djangoshop-sendcloud-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6ff8a5af9cc5503a224e0a5b0999c2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11202,
      "upload_time": "2020-01-09T22:35:31",
      "upload_time_iso_8601": "2020-01-09T22:35:31.814716Z",
      "url": "https://files.pythonhosted.org/packages/ec/7e/8c3ce9d37952edb0baa9bd7b6184607250a140b05097ed2cfd61a62537fa/djangoshop-sendcloud-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}