{
  "info": {
    "author": "xsthunder",
    "author_email": "xsthunder@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "- [Download Youtube Subtitle ![Build Status](https://travis-ci.com/xsthunder/download-youtube-subtitle)](#download-youtube-subtitle-)\n    - [Features](#features)\n    - [Example](#example)\n      - [save as txt](#save-as-txt)\n      - [save as json](#save-as-json)\n      - [use caption_num caption_num_second to get full control](#use-caption_num-caption_num_second-to-get-full-control)\n  - [Install and Run](#install-and-run)\n    - [Install via download-youtube-subtitle · PyPI](#install-via-download-youtube-subtitle--pypi)\n    - [run in cli](#run-in-cli)\n    - [Use in Code](#use-in-code)\n  - [Development](#development)\n    - [Environment Setup](#environment-setup)\n    - [Usage](#usage)\n    - [Tests](#tests)\n      - [Ref](#ref)\n# Download Youtube Subtitle [![Build Status](https://travis-ci.com/xsthunder/download-youtube-subtitle.svg?branch=master)](https://travis-ci.com/xsthunder/download-youtube-subtitle)\n\nDownload youtube subtitles(closed caption, cc) or srt as txt or json. \n\n### Features\n\n1. Support exportting translation at the same time which is useful for language study.\n1. Full control. All available caption will be displayed, [use `--caption_num` `--caption_num_second` to choose the caption which will be displayed as original or translation transcript.](#use-caption_num-caption_num_second-to-get-full-control)\n1. Support proxy for youtube, follow the step at [Using Anaconda behind a company proxy by setting environment-variables](https://docs.anaconda.com/anaconda/user-guide/tasks/proxy/#environment-variables).\n1. Full test with traivis [![Build Status](https://travis-ci.com/xsthunder/download-youtube-subtitle.svg?branch=master)](https://travis-ci.com/xsthunder/download-youtube-subtitle) to make sure things are on rail.\n\npython version of [algolia/youtube-captions-scraper: Fetch youtube user submitted or fallback to auto-generated captions](https://github.com/algolia/youtube-captions-scraper)\n \n \n### Example\n\n#### save as txt\n\n`dl-youtube-cc https://www.youtube.com/watch?v=wgnigj1ngye --translation ja`\nor\n`dl-youtube-cc wgNiGj1nGYE --translation ja`\n\nwill saved as `Version1.5SpecialProgramGenshinImpact.txt`\n\n```text\nhttps://www.youtube.com/watch?v=wgNiGj1nGYE\n---------00:00----------\n從前，有一對雙胞胎結伴在宇宙中旅行\n昔々、宇宙を一緒に旅している双子のペアがいました\n\n---------00:05----------\n但有一天，他們前路遇阻\nしかしある日、彼らの道は封鎖されました\n\n---------00:07----------\n被一個未知的神明生生分離\n未知の神によって隔てられている\n```\n\n#### save as json\n\n`dl-youtube-cc wgNiGj1nGYE --translation ja --to_json=True` will saved as `Version1.5SpecialProgramGenshinImpact.json`\n\n```json\n{\n    \"original\": [\n        {\n            \"start\": \"0\",\n            \"dur\": \"5.056\",\n            \"text\": \"Once upon a time, two twins traveled together throughout the universe.\"\n        },\n\t// continue\n\t],\n    \"translation\": [\n        {\n            \"start\": \"0\",\n            \"dur\": \"5.056\",\n            \"text\": \"昔々、2人の双子が一緒に宇宙を旅していました。\"\n        },\n\t\t// continue\n\t],\n    \"merged\": [\n        {\n            \"start\": \"0\",\n            \"dur\": \"5.056\",\n            \"text\": \"Once upon a time, two twins traveled together throughout the universe.\",\n            \"translate_text\": \"昔々、2人の双子が一緒に宇宙を旅していました。\"\n        },\n\t\t// continue\n\t]\n```\n\n#### use caption_num caption_num_second to get full control\n\nAll available caption will be displayed, use `--caption_num` `--caption_num_second` to choose the caption which will be displayed as original or translation transcript.\n\n```bash\n>> dl-youtube-cc \"wgNiGj1nGYE\" --caption_num=0 --caption_num_second=3, --output_file=\"0,3-zh,es.txt\"\nINFO:  available caption(s):\nINFO:  ✔ as original #0. .zh-Hant 中文（繁體字）\nINFO:  ⭕ #1. .zh-Hans 中文（簡體字）\nINFO:  ⭕ #2. .id      印尼文\nINFO:  ✔ as translation #3. .es      西班牙文\nINFO:  ⭕ #4. .fr      法文\nINFO:  ⭕ #5. .ru      俄文\nINFO:  ⭕ #6. .en-US   英文（美國）\nINFO:  ⭕ #7. .th      泰文\nINFO:  ⭕ #8. .vi      越南文\nINFO:  ⭕ #9. .pt      葡萄牙文\nINFO:  ⭕ #10. .de      德文\nINFO:  ✔ marks chosen one in 0-index\nINFO:  given by --caption_num default to 0 as original\nINFO:  Save to  0,3-zh,es.txt\n```\n \n## Install and Run\n\n### Install via [download-youtube-subtitle · PyPI](https://pypi.org/project/download-youtube-subtitle/)\n\n1. `pip install download-youtube-subtitle` or `pip install download-youtube-subtitle --user`\n2. `dl-youtube-cc -h`\n\nor uninstall to reinstall new version\n\n`pip uninstall download-youtube-subtitle -y`\n\n### run in cli\n\n`dl-youtube-cc -h` will show the following.\n\n```text\nNAME\n    dl-youtube-cc - download youtube closed caption(subtitles) by videoID\n\nSYNOPSIS\n    dl-youtube-cc VIDEOID <flags>\n\nDESCRIPTION\n    Examples:\n    dl-youtube-cc -h # to see this helpful infomation\n    dl-youtube-cc wgNiGj1nGYE --translation 'ja' # use japanese translation, see ./lang_code for full list\n    dl-youtube-cc wgNiGj1nGYE --caption_num=1 --translation 'ja' # choose the caption num for original transcript and use japanese translation,\n    dl-youtube-cc wgNiGj1nGYE --caption_num=1 --caption_num_second=2 # manually choose the original and translation transcript from available caption list\n    dl-youtube-cc wgNiGj1nGYE --translation False # without translation\n    dl-youtube-cc wgNiGj1nGYE --save_to_file=False # print stuff in console\n    dl-youtube-cc wgNiGj1nGYE --output_file='test.txt' # print stuff in named file\n    dl-youtube-cc wgNiGj1nGYE --to_json=True # print stuff in json\n\nPOSITIONAL ARGUMENTS\n    VIDEOID\n        Type: str\n        the video link or the id of youtube video, the string after 'v=' in a youtube video link\n\nFLAGS\n    --translation=TRANSLATION\n        Type: typing.Union[str, bool]\n        Default: 'zh-Hans'\n        which will be displayed as original transcript, default to 'zh-Hans' for simplified Chinese, see ./lang_code.json for full list, or pass False to disable translation\n    --caption_num=CAPTION_NUM\n        Type: int\n        Default: 0\n        choose the caption which will be displayed as original transcript\n    --caption_num_second=CAPTION_NUM_SECOND\n        Type: Optional[int]\n        Default: None\n        will surpass translation option, choose the caption which will be displayed as translation transcript\n    --output_file=OUTPUT_FILE\n        Type: Optional[str]\n        Default: None\n        default to video title\n    --save_to_file=SAVE_TO_FILE\n        Type: bool\n        Default: True\n        pass False to print in console\n    --to_json=TO_JSON\n        Type: bool\n        Default: False\n        pass True to export caption to json\n    --remove_font_tag=REMOVE_FONT_TAG\n        Type: bool\n        Default: True\n        remove font tag\n```\n\n### Use in Code\n\n```python\nimport download_youtube_subtitle.common as common\nimport download_youtube_subtitle.main as download_youtube_subtitle\n# ...\n```\n\n## Development\n\n### Environment Setup\n\n[for conda](./config/create-env.sh)\n\n```bash\npip install 'fire' 'requests' 'IPython' 'sure'\n```\n\n### Usage\n\n```bash\npython main.py -h\npython main.py VIDEOID\n```\n\n### Tests\n\n```bash\ncd tests\n./run.sh\n./test_cli.sh\n```\n\n#### Ref \n\n[deployment - How can I use setuptools to generate a console_scripts entry point which calls `python -m mypackage`? - Stack Overflow](https://stackoverflow.com/questions/27784271/how-can-i-use-setuptools-to-generate-a-console-scripts-entry-point-which-calls)\n\n[Packaging Python Projects — Python Packaging User Guide](http://packaging.python.org/tutorials/packaging-projects/)\n\n`./nb/notebook2script.py` from [course-v3/nbs/dl2 at master · fastai/course-v3](https://github.com/fastai/course-v3/tree/master/nbs/dl2)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xsthunder/download-youtube-subtitle",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "download-youtube-subtitle",
    "package_url": "https://pypi.org/project/download-youtube-subtitle/",
    "platform": "",
    "project_url": "https://pypi.org/project/download-youtube-subtitle/",
    "project_urls": {
      "Homepage": "https://github.com/xsthunder/download-youtube-subtitle"
    },
    "release_url": "https://pypi.org/project/download-youtube-subtitle/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "download youtube subtitles(closed caption, cc) as txt or json",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14861185,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "559fba0012244a16e958136e5eecf6c69307931e126caeef17ae23ad92733255",
        "md5": "7a91baea60c701e2c70ac98edc340364",
        "sha256": "01b000f006d7cb652862cc18f08a74adcee70bf69a79558745f255cdb973f0a3"
      },
      "downloads": -1,
      "filename": "download-youtube-subtitle-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7a91baea60c701e2c70ac98edc340364",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 11541,
      "upload_time": "2021-04-17T05:55:02",
      "upload_time_iso_8601": "2021-04-17T05:55:02.359301Z",
      "url": "https://files.pythonhosted.org/packages/55/9f/ba0012244a16e958136e5eecf6c69307931e126caeef17ae23ad92733255/download-youtube-subtitle-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}