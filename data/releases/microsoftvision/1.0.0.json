{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Microsoft Vision\n\n## Installation\n``pip install microsoftvision``\n\n\n## Usage\nInput images should be in <b>BGR</b> format of shape (3 x H x W), where H and W are expected to be at least 224.\nThe images have to be loaded in to a range of [0, 1] and then normalized using mean = [0.485, 0.456, 0.406] and std = [0.229, 0.224, 0.225].\n\nExample script:  \n```\nimport microsoftvision\nimport torch\n\n# This will load pretrained model\nmodel = microsoftvision.models.resnext101_32x8d(pretrained=True)\n\n# Load model to CPU memory, interface is the same as torchvision\nmodel = microsoftvision.resnet50(map_location=torch.device('cpu')) \n```\n\nExample of creating image embeddings:\n```\nimport microsoftvision\nfrom torchvision import transforms\nimport torch\nfrom PIL import Image\n\ndef get_image():\n    img = cv2.imread('example.jpg', cv2.IMREAD_COLOR)\n    img = cv2.resize(img, (256, 256))\n    img = img[16:256-16, 16:256-16]\n    preprocess = transforms.Compose([\n        transforms.ToTensor(),\n        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n    ])\n    return preprocess(image).unsqueeze(0) # Unsqueeze only required when there's 1 image in images batch\n\nmodel = microsoftvision.models.resnet50(pretrained=True)\nfeatures = model(get_image())\nprint(features.shape)\n```\nShould output\n```\n...\ntorch.Size([1, 2048])\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microsoftvision",
    "package_url": "https://pypi.org/project/microsoftvision/",
    "platform": "",
    "project_url": "https://pypi.org/project/microsoftvision/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/microsoftvision/1.0.0/",
    "requires_dist": [
      "torch (>=1.2.0)",
      "azure-storage-blob",
      "azure-identity",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Downloads pretrained Microsoft Vision models",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9311420,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab0b8c0cfcaa4d891c693ab80f15f4b4c08256614d6a55fe05886bd3af382fb9",
        "md5": "3be6e645a6b63680b8ca14d51c95492c",
        "sha256": "475f1890f04baf176810a27df397fc697398e28fba7a00ea01859476be80af45"
      },
      "downloads": -1,
      "filename": "microsoftvision-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3be6e645a6b63680b8ca14d51c95492c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1791,
      "upload_time": "2021-01-25T19:18:43",
      "upload_time_iso_8601": "2021-01-25T19:18:43.873531Z",
      "url": "https://files.pythonhosted.org/packages/ab/0b/8c0cfcaa4d891c693ab80f15f4b4c08256614d6a55fe05886bd3af382fb9/microsoftvision-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbdee721e338a224eea0b46e6927ceffa1e3e9a835b44ce1bf6ae358b6fd8198",
        "md5": "92525c9bc0ab0f70600f06c986b6d895",
        "sha256": "afc1c0cf3bb447cdda50b11d617a73c0136049480fc841938e56dc44d2e9d765"
      },
      "downloads": -1,
      "filename": "microsoftvision-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "92525c9bc0ab0f70600f06c986b6d895",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5085,
      "upload_time": "2021-01-25T19:18:45",
      "upload_time_iso_8601": "2021-01-25T19:18:45.110027Z",
      "url": "https://files.pythonhosted.org/packages/cb/de/e721e338a224eea0b46e6927ceffa1e3e9a835b44ce1bf6ae358b6fd8198/microsoftvision-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}