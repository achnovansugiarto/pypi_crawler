{
  "info": {
    "author": "MarÃ§al Pla",
    "author_email": "marcal.pla@shimoku.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DynamoDB Garbage Collector\n\n[![Version](https://img.shields.io/badge/version-1.1.0-blue.svg)](https://shields.io/)\n\nThe DynamoDB Garbage Collector is a Python library that allows you to delete garbage items in DynamoDB tables.\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Installation\n\nTo install the DynamoDB Garbage Collector, use `pip`:\n\n```bash\n$ pip install dynamodb-garbage-collector\n```\n\n## Usage\n\nThe DynamoDB Garbage Collector currently provides a single function called `purge_orphan_items`, which allows you to delete orphan items in a child table that reference a non-existent item in a parent table. If optional timestamp attributes are provided only will be delete orphan items earlier than a specified maximum time (by default, one hour ago).\n\nTo use `purge_orphan_items`, you need to provide the following parameters:\n\n- `logger`: a logger object to log messages during the execution of the function.\n- `region`: the AWS region where the parent and child tables are located.\n- `parent_table`: the name of the parent table.\n- `child_table`: the name of the child table.\n- `key_attribute`: the name of the key attribute for both tables.\n- `child_reference_attribute`: the name of the reference attribute in the child table.\n- `max_workers` (optional): the maximum number of workers to use for concurrent operations. If not provided, a default value of 100 will be used.\n- `timestamp_attribute` (optional): the name of the attribute that contains the timestamp of the records in the child table. If not provided, timestamp will not be taken into account when deleting items.\n- `timestamp_format` (optional): the format of the timestamp attribute. If not provided, timestamp will not be taken into account when deleting items.\n\nHere is an example of how to use the `purge_orphan_items` function:\n\n```python\nimport logging\nfrom dynamodb_garbage_collector import purge_orphan_items\n\n# Set up the logger\nlogging.basicConfig()\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n# Set the AWS region where the parent and child tables are located\nregion = 'eu-west-1'\n\n# Set the names of the parent and child tables, and the key and reference attributes\nparent_table = 'ParentTable'\nchild_table = 'ChildTable'\nkey_attribute = 'id'\nchild_reference_attribute = 'parentId'\n\n# Set the maximum number of workers\nmax_workers = 50\n\n# Set the name of the timestamp attribute and the timestamp format\ntimestamp_attribute = 'createdAt'\ntimestamp_format = '%Y-%m-%dT%H:%M:%S.%fZ'\n\n# Call the function\npurge_orphan_items(logger, region, parent_table, child_table, key_attribute, child_reference_attribute, max_workers, timestamp_attribute, timestamp_format)\n```\n\n## Contributing\n\nWe welcome contributions to the DynamoDB Garbage Collector. To contribute, please fork the repository and create a pull request with your changes.\n\n## License\n\nThe DynamoDB Garbage Collector is released under the MIT License.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamodb-garbage-collector",
    "package_url": "https://pypi.org/project/dynamodb-garbage-collector/",
    "platform": null,
    "project_url": "https://pypi.org/project/dynamodb-garbage-collector/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dynamodb-garbage-collector/1.1.0/",
    "requires_dist": [
      "boto3 (>=1.26.41,<2.0.0)",
      "botocore (>=1.29.41,<2.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Remove garbage items from DynamoDB tables",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16282182,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aad165eb2aaef943e418218a5aa8487363cc7aa30e7e6ce102e3e0e94aef61d",
        "md5": "16cfd177d230ce000b1730ca087f1200",
        "sha256": "86ff869cdc9cefb3d0ab223b5f502fde876bacedf07b33b8746b944ad1080fba"
      },
      "downloads": -1,
      "filename": "dynamodb_garbage_collector-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16cfd177d230ce000b1730ca087f1200",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 5501,
      "upload_time": "2023-01-02T20:33:43",
      "upload_time_iso_8601": "2023-01-02T20:33:43.493186Z",
      "url": "https://files.pythonhosted.org/packages/9a/ad/165eb2aaef943e418218a5aa8487363cc7aa30e7e6ce102e3e0e94aef61d/dynamodb_garbage_collector-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32393b0bb89e95f8bcc046a4c24225b3d8de442f6b65bf2ceb84fa319d14ea69",
        "md5": "b0491f1c5045aa5c9e4e64c41f6b6d51",
        "sha256": "a3ce20022ad010bff493ea9d4c03624970bf1a4d5c986a7a8bac9aef7deeb680"
      },
      "downloads": -1,
      "filename": "dynamodb_garbage_collector-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b0491f1c5045aa5c9e4e64c41f6b6d51",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 5254,
      "upload_time": "2023-01-02T20:33:44",
      "upload_time_iso_8601": "2023-01-02T20:33:44.754897Z",
      "url": "https://files.pythonhosted.org/packages/32/39/3b0bb89e95f8bcc046a4c24225b3d8de442f6b65bf2ceb84fa319d14ea69/dynamodb_garbage_collector-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}