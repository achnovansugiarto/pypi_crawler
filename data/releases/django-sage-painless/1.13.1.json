{
  "info": {
    "author": "Sage Team",
    "author_email": "mail@sageteam.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Django Sage Painless\n\nThe [django-sage-painless](https://github.com/sageteam-org/django-sage-painless) is a valuable package based on Django Web Framework & Django Rest Framework for high-level and rapid web development. The introduced package generates Django applications. After completing many projects, we concluded that any basic project and essential part is its database structure. You can give the database schema in this package and get some parts of the Django application, such as API, models, admin, signals, model cache, setting configuration, mixins, etc. All of these capabilities come with a unit test. So you no longer have to worry about the simple parts of Django, and now you can write your advanced services in Django. The django-sage-painless dramatically speeds up the initial development of your projects. Documentation of this package is available in [readthedocs](https://django-sage-painless.readthedocs.io/).\n\n## Vision\n\nHowever, we intend to make it possible to use it in projects that are in-progress.\n\n## Why Painless\n\nWe used the name painless instead of the Django code generator because this package allows you to reach your goals with less effort.\n\n&nbsp;\n\n[![SageTeam](https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_sage.png?raw=true \"SageTeam\")](http://sageteam.org)\n\n![License](https://img.shields.io/github/license/sageteam-org/django-sage-painless \"django-sage-painless\")\n![PyPI release](https://img.shields.io/pypi/v/django-sage-painless \"django-sage-painless\")\n![Supported Python versions](https://img.shields.io/pypi/pyversions/django-sage-painless \"django-sage-painless\")\n![Supported Django versions](https://img.shields.io/pypi/djversions/django-sage-painless \"django-sage-painless\")\n![Documentation](https://img.shields.io/readthedocs/django-sage-painless \"django-sage-painless\")\n![Build](https://img.shields.io/appveyor/build/mrhnz/django-sage-painless \"django-sage-painless\")\n![Last Commit](https://img.shields.io/github/last-commit/sageteam-org/django-sage-painless/develop \"django-sage-painless\")\n![Languages](https://img.shields.io/github/languages/top/sageteam-org/django-sage-painless \"django-sage-painless\")\n![Downloads](https://static.pepy.tech/badge/django-sage-painless \"django-sage-painless\")\n\n- [Project Detail](#project-detail)\n- [Get Started](#getting-started)\n- [Usage](#usage)\n- [Contribute](#how-to-contribute)\n- [Git Rules](#git-rules)\n\n## Project Detail\n\n- Language: Python > 3.6\n- Framework: Django > 3.1\n\n## Getting Started\n\nBefore creating Djagno project you must first create virtualenv.\n\n``` shell\n$ python3.9 -m pip install virtualenv\n$ python3.9 -m virtualenv venv\n```\n\nTo activate virtualenvironment in ubuntu:\n\n```shell\n$ source venv/bin/activate\n```\n\nTo deactive vritualenvironment use:\n\n``` shell\n$ deactivate\n```\n\n## Start Project\n\nFirst create a Django project\n\n```shell\n$ mkdir GeneratorTutorials\n$ cd GeneratorTutorials\n$ django-admin startproject kernel .\n```\n\n## Install Generator\n\nFirst install package\n\n```shell\n$ pip install django-sage-painless\n```\n\nThen add 'sage_painless' to INSTALLED_APPS in settings.py\n\n**TIP:** You do not need to install the following packages unless you request to automatically generate an API or API documentation.\n\nHowever, you can add following apps in your INSTALLED_APPS:\n\n- rest_framework\n- drf_yasg\n- django_seed\n\n```python\nINSTALLED_APPS = [\n  'sage_painless',\n  'rest_framework',\n  'drf_yasg',\n  'django_seed',\n]\n```\n\n## Usage\n\nTo generate a Django app you just need a diagram in JSON format. diagram is a json file that contains information about database tables.\n\n[Diagram examples](sage_painless/docs/diagrams)\n\nstart to generate\n(it is required for development. you will run tests on this app)\n\n- First validate your diagram format. It will raise errors if your diagram format is incorrect.\n\n```shell\n$ python manage.py validate_diagram --diagram <path to diagram>\n```\n\n- Now you can generate code (you need generate diagram json file)\n\n[Generate diagram sample](tests/diagrams/product_diagram.json)\n\n```shell\n$ python manage.py generate --diagram <path to diagram>\n```\n\n- You can generate deploy config files (you need a deploy diagram json file)\n\n[Deploy diagram sample](tests/diagrams/deploy_diagram.json)\n\n```shell\n$ python manage.py deploy --diagram <path to deploy diagram>\n```\n\n- You can generate doc files (README, etc) \n\n```shell\n$ python manage.py docs --diagram <path to diagram>\n```\n\nHere system will ask you what you want to generate for your app.\n\n- If you generated api you have to add app urls to main urls.py:\n\n```python\nurlpatterns = [\n  path('api/', include('products.api.urls')),\n]\n```\n\n- You have to migrate your new models\n\n```shell\n$ python manage.py makemigrations\n$ python manage.py migrate\n```\n\n- You can run tests for your app\n\n```shell\n$ python manage.py test products\n```\n\n- Django run server\n\n```shell\n$ python manage.py runserver\n```\n  \n- For support Rest API doc add this part to your urls.py\n\n```python\nfrom rest_framework.permissions import AllowAny\nfrom drf_yasg.views import get_schema_view\nfrom drf_yasg import openapi\n\nschema_view = get_schema_view(\n    openapi.Info(\n        title=\"Rest API Doc\",\n        default_version='v1',\n        description=\"Auto Generated API Docs\",\n        license=openapi.License(name=\"S.A.G.E License\"),\n    ),\n    public=True,\n    permission_classes=(AllowAny,),\n)\n\nurlpatterns = [\n    path('api/doc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-swagger-ui'),\n]\n```\n\n- Rest API documentation is available at `localhost:8000/api/doc/`\n\n## How to Contribute\n\nRun project tests before starting to develop\n\n- `products` app is required for running tests\n\n```shell\n$ python manage.py startapp products\n```\n\n```python\nINSTALLED_APPS = [\n  'products',\n]\n```\n\n- you have to generate everything for this app\n  \n- diagram file is available here: [Diagram](tests/diagrams/product_diagram.json)\n- download diagram file and generate test app using this commend\n\n```shell\n$ python manage.py generate --diagram tests/diagrams/product_diagram.json\n```\n\n- run tests\n\n```shell\n$ python manage.py test sage_painless\n```\n\n## Git Rules\n\nS.A.G.E. team Git Rules Policy is available here:\n\n- [S.A.G.E. Git Policy](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)\n\n## Team\n| [<img src=\"https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/sepehr.jpeg?raw=true\" width=\"230px\" height=\"230px\" alt=\"Sepehr Akbarzadeh\">](https://github.com/sepehr-akbarzadeh) | [<img src=\"https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/mehran.png?raw=true\" width=\"225px\" height=\"340px\" alt=\"Mehran Rahmanzadeh\">](https://github.com/mehran-rahmanzadeh) |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Sepehr Akbarazadeh Maintainer](https://github.com/sepehr-akbarzadeh)                                                                                                             | [Mehran Rahmanzadeh Maintainer](https://github.com/mehran-rahmanzadeh)                                                                                                       |\n\n## Version 1\n- [x] generate README.md\n- [x] db encryption\n- [x] video streaming\n- [x] improve test generation\n- [x] coverage & tox\n- [x] deployment questionnaire\n- [x] management command\n- [x] docker\n- [x] gunicorn, uwsgi, etc\n- [x] nginx configuration\n- [x] commit generation\n- [ ] GitHub repo integration\n- [ ] CI CD\n- [ ] Database Support (postgres, mysql, sqlite, sql server)\n- [ ] security config and check\n- [ ] seo\n- [ ] graphql\n- [x] package manager support\n\n## Version 2\n- [ ] Django admin generator\n- [ ] modular setting\n- [ ] mock data generator\n- [ ] file field svg support\n- [ ] image field enhancement\n- [ ] traditional mixins\n- [ ] decorator signals\n- [ ] logging configuration\n- [ ] sentry support\n- [ ] monitoring feature (prometheus)\n- [ ] track data history\n- [ ] stream upload\n- [ ] CORS config\n- [ ] mongo support\n- [ ] Elastic search configuration\n- [ ] cache support (+Memcache)\n- [ ] error handlers (2xx, 3xx, 4xx, 5xx)\n- [ ] django forms support\n- [ ] django view support\n- [ ] image compression support\n- [ ] debug tools support",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sageteam-org/django-sage-painless/archive/refs/tags/1.5.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sageteam-org/django-sage-painless",
    "keywords": "django,python,generate,code generator",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sage-painless",
    "package_url": "https://pypi.org/project/django-sage-painless/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sage-painless/",
    "project_urls": {
      "Download": "https://github.com/sageteam-org/django-sage-painless/archive/refs/tags/1.5.0.tar.gz",
      "Homepage": "https://github.com/sageteam-org/django-sage-painless"
    },
    "release_url": "https://pypi.org/project/django-sage-painless/1.13.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A handy tool for generating Django-based backend projects without coding. On the other hand, it is a code generator of the Django framework.",
    "version": "1.13.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12227096,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83b2b84e217a675e020fe54a8f1430e71d53e6756d7f10578e344dbde5ada724",
        "md5": "700a75c76f5d41f69d4b3c21267c7059",
        "sha256": "b88959d296758fc237df0ba6bff04ebb813576db5bd0d5d275e6752c56261d5f"
      },
      "downloads": -1,
      "filename": "django-sage-painless-1.13.1.tar.gz",
      "has_sig": false,
      "md5_digest": "700a75c76f5d41f69d4b3c21267c7059",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 49186,
      "upload_time": "2021-08-18T16:01:48",
      "upload_time_iso_8601": "2021-08-18T16:01:48.851747Z",
      "url": "https://files.pythonhosted.org/packages/83/b2/b84e217a675e020fe54a8f1430e71d53e6756d7f10578e344dbde5ada724/django-sage-painless-1.13.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}