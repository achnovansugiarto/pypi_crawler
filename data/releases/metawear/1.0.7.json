{
  "info": {
    "author": "MbientLab",
    "author_email": "hello@mbientlab.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "MetaWear Python SDK\n###################\nPython SDK for creating MetaWear apps on the Linux platform.  This is a thin wrapper around the `MetaWear C++ API <https://github.com/mbientlab/MetaWear-SDK-Cpp>`_ so you will find the C++ \n`documentation <https://mbientlab.com/cppdocs/latest/>`_ and `API reference <https://mbientlab.com/docs/metawear/cpp/latest/globals.html>`_ useful.  Also, check out the scripts in the \n`examples <https://github.com/mbientlab/MetaWear-SDK-Python/tree/master/examples>`_ folder for full sample code.\n\n**This is not the pymetawear package.  That is a community developed Python SDK which you can find over** \n`here <https://github.com/mbientlab-projects/pymetawear>`_ **.**\n\nInstall\n#######\nUse pip to install the metawear package.  It depends on `PyWarble <https://github.com/mbientlab/PyWarble>`_ so ensure your target environment has the necessary `dependencies <https://github.com/mbientlab/Warble#build>`_ installed.  \n\n.. code-block:: bash\n\n    pip install metawear\n\nUsage\n#####\nImport the MetaWear class and libmetawear variable from the metawear module and everything from the cbindings module.  \n\n.. code-block:: python\n\n    from mbientlab.metawear import MetaWear, libmetawear\n    from mbientlab.metawear.cbindings import *\n\nIf you do not know the MAC address of your device, use ``PyWarble`` to scan for nearby devices.  \n\n.. code-block:: python\n\n    from mbientlab.warble import *\n    from mbientlab.metawear import *\n    from threading import Event\n    \n    e = Event()\n    address = None\n    def device_discover_task(result):\n        global address\n        if (result.has_service_uuid(MetaWear.GATT_SERVICE)):\n            # grab the first discovered metawear device\n            address = result.mac\n            e.set()\n    \n    BleScanner.set_handler(device_discover_task)\n    BleScanner.start()\n    e.wait()\n\n    BleScanner.stop()\n    \nOnce you have the device's MAC address, create a MetaWear object with the MAC address and connect to the device.\n\n.. code-block:: python\n\n    device = MetaWear(address)\n    device.connect()\n\nUpon a successful connection, you can begin calling any of the functions from the C++ SDK, for example, blinking the LED green.\n\n.. code-block:: python\n\n    pattern= LedPattern(repeat_count= Const.LED_REPEAT_INDEFINITELY)\n    libmetawear.mbl_mw_led_load_preset_pattern(byref(pattern), LedPreset.BLINK)\n    libmetawear.mbl_mw_led_write_pattern(device.board, byref(pattern), LedColor.GREEN)\n    libmetawear.mbl_mw_led_play(device.board)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbientlab/MetaWear-SDK-Python",
    "keywords": "sensors,mbientlab,metawear,bluetooth le,native",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metawear",
    "package_url": "https://pypi.org/project/metawear/",
    "platform": null,
    "project_url": "https://pypi.org/project/metawear/",
    "project_urls": {
      "Homepage": "https://github.com/mbientlab/MetaWear-SDK-Python"
    },
    "release_url": "https://pypi.org/project/metawear/1.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Python bindings for the MetaWear C++ SDK by MbientLab",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13603721,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b588854cb59e467125bd2ac3e849502bd1e828eb4f105b59914e6fe974a0b78",
        "md5": "846a508693f31b2f0435ab9bd90f00a5",
        "sha256": "a467100284406b3f5c2266dcfb677da0a652c634d2a9f68a06d68ace6e4050d8"
      },
      "downloads": -1,
      "filename": "metawear-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "846a508693f31b2f0435ab9bd90f00a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 651387,
      "upload_time": "2022-04-05T04:03:30",
      "upload_time_iso_8601": "2022-04-05T04:03:30.289954Z",
      "url": "https://files.pythonhosted.org/packages/3b/58/8854cb59e467125bd2ac3e849502bd1e828eb4f105b59914e6fe974a0b78/metawear-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}