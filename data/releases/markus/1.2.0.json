{
  "info": {
    "author": "Will Kahn-Greene",
    "author_email": "willkg@mozilla.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "======\nMarkus\n======\n\nMarkus is a Python library for generating metrics.\n\n:Code:          https://github.com/willkg/markus\n:Issues:        https://github.com/willkg/markus/issues\n:License:       MPL v2\n:Documentation: http://markus.readthedocs.io/en/latest/\n\n\nGoals\n=====\n\nMarkus makes it easier to generate metrics in your program by:\n\n* providing multiple backends (Datadog statsd, statsd, logging, logging rollup,\n  and so on) for sending data to different places\n\n* sending metrics to multiple backends at the same time\n\n* providing a testing framework for easy testing\n\n* providing a decoupled architecture making it easier to write code to generate\n  metrics without having to worry about making sure creating and configuring a\n  metrics client has been done--similar to the Python logging Python logging\n  module in this way\n\nI use it at Mozilla in the collector of our crash ingestion pipeline. Peter used\nit to build our symbols lookup server, too.\n\n\nInstall\n=======\n\nTo install Markus, run::\n\n    $ pip install markus\n\n\n(Optional) To install the requirements for the\n``markus.backends.datadog.DatadogMetrics`` backend::\n\n    $ pip install markus[datadog]\n\n\nQuick start\n===========\n\nSimilar to using the logging library, every Python module can create a\n``MetricsInterface`` (loosely equivalent to a Python logging logger) at any time\nincluding at module import time and use that to generate metrics.\n\nFor example::\n\n    import markus\n\n    metrics = markus.get_metrics(__name__)\n\n\nCreating a ``MetricsImplementation`` using ``__name__`` will cause it to\ngenerate all stats keys with a prefix determined from ``__name__`` which\nis a dotted Python path to that module.\n\nThen you can use the ``MetricsImplementation`` anywhere in that module::\n\n    @metrics.timer_decorator('chopping_vegetables')\n    def some_long_function(vegetable):\n        for veg in vegetable:\n            chop_vegetable()\n            metrics.incr('vegetable', 1)\n\n\nAt application startup, configure Markus with the backends you want to use to\npublish metrics and any options they require.\n\nFor example, lets configure metrics to publish to logs and Datadog::\n\n    import markus\n\n    markus.configure(\n        backends=[\n            {\n                # Log metrics to the logs\n                'class': 'markus.backends.logging.LoggingMetrics',\n            },\n            {\n                # Log metrics to Datadog\n                'class': 'markus.backends.datadog.DatadogMetrics',\n                'options': {\n                    'statsd_host': 'example.com',\n                    'statsd_port': 8125,\n                    'statsd_namespace': ''\n                }\n            }\n        ]\n    )\n\n\nWhen you're writing your tests, use the ``MetricsMock`` to make testing easier::\n\n    import markus\n    from markus.testing import MetricsMock\n\n\n    def test_something():\n        with MetricsMock() as mm:\n            # ... Do things that might publish metrics\n\n            # This helps you debug and write your test\n            mm.print_records()\n\n            # Make assertions on metrics published\n            assert mm.has_metric(markus.INCR, 'some.key', value=1)\n\n\nHistory\n=======\n\n1.2.0 (April 27th, 2018)\n------------------------\n\n**Features**\n\n* Add ``.clear()`` to ``MetricsMock`` making it easier to build a pytest\n  fixture with the ``MetricsMock`` context and manipulate records for easy\n  testing. #29\n\n**Bug fix**\n\n* Update Cloudwatch backend fixing ``.timing()`` and ``.histogram()`` to\n  send ``histogram`` metrics type which Datadog now supports. #31\n\n\n1.1.2 (April 5th, 2018)\n-----------------------\n\n**Typo fix**\n\n* Fix the date from the previous release. Ugh.\n\n\n1.1.1 (April 5th, 2018)\n-----------------------\n\n**Features**\n\n* Official switch to semver.\n\n**Bug fixes**\n\n* Fix ``MetricsMock`` so it continues to work even if ``configure``\n  is called. #27\n\n\n1.1 (November 13th, 2017)\n-------------------------\n\n**Features**\n\n* Added ``markus.utils.generate_tag`` utility function\n\n\n1.0 (October 30th, 2017)\n------------------------\n\n**Features**\n\n* Added support for Python 2.7.\n\n* Added a ``markus.backends.statsd.StatsdMetrics`` backend that uses\n  pystatsd client for statsd pings. Thank you, Javier!\n\n**Bug fixes**\n\n* Added ``LoggingRollupMetrics`` to docs.\n\n* Mozilla has been running Markus in production for 6 months so we\n  can mark it production-ready now.\n\n\n0.2 (April 19th, 2017)\n----------------------\n\n**Features**\n\n* Added a ``markus.backends.logging.LoggingRollupMetrics`` backend that\n  rolls up metrics and does some light math on them. Possibly helpful\n  for light profiling for development.\n\n**Bug fixes**\n\n* Lots of documentation fixes. Thank you, Peter!\n\n\n0.1 (April 10th, 2017)\n----------------------\n\nInitial writing.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/willkg/markus",
    "keywords": "metrics statsd",
    "license": "MPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "markus",
    "package_url": "https://pypi.org/project/markus/",
    "platform": "",
    "project_url": "https://pypi.org/project/markus/",
    "project_urls": {
      "Homepage": "https://github.com/willkg/markus"
    },
    "release_url": "https://pypi.org/project/markus/1.2.0/",
    "requires_dist": [
      "six",
      "statistics; python_version<'3.4'",
      "datadog; extra == 'datadog'",
      "statsd; extra == 'statsd'"
    ],
    "requires_python": "",
    "summary": "Metrics system for generating statistics about your app",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17515287,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b4fcd8a972a61e08879105e5fbec3f63f05d8b47e67bb247483ee31340b050e",
        "md5": "0b58750b5dbe85d7e42710d63864d379",
        "sha256": "86bbeb16de1b1920d291c81a39b7a7c61c94b665cd8d10c6b69c994ce4fd5bcc"
      },
      "downloads": -1,
      "filename": "markus-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b58750b5dbe85d7e42710d63864d379",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18665,
      "upload_time": "2018-04-27T17:19:03",
      "upload_time_iso_8601": "2018-04-27T17:19:03.736391Z",
      "url": "https://files.pythonhosted.org/packages/3b/4f/cd8a972a61e08879105e5fbec3f63f05d8b47e67bb247483ee31340b050e/markus-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf97a2d534492ef660f5c6248570e82f909e2e93ba877b0f170e185ea24339b6",
        "md5": "07bfc97a631029381d8fb539f7a8732c",
        "sha256": "9bce7bd152578703a8e4aa5a765c7c0d94bcdd69f7bc5e42d29b893e3abf2e5a"
      },
      "downloads": -1,
      "filename": "markus-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "07bfc97a631029381d8fb539f7a8732c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27680,
      "upload_time": "2018-04-27T17:19:04",
      "upload_time_iso_8601": "2018-04-27T17:19:04.879036Z",
      "url": "https://files.pythonhosted.org/packages/bf/97/a2d534492ef660f5c6248570e82f909e2e93ba877b0f170e185ea24339b6/markus-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}