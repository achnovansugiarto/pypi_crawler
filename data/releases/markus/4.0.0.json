{
  "info": {
    "author": "Will Kahn-Greene",
    "author_email": "willkg@mozilla.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "======\nMarkus\n======\n\nMarkus is a Python library for generating metrics.\n\n:Code:          https://github.com/willkg/markus\n:Issues:        https://github.com/willkg/markus/issues\n:License:       MPL v2\n:Documentation: http://markus.readthedocs.io/en/latest/\n\n\nGoals\n=====\n\nMarkus makes it easier to generate metrics in your program by:\n\n* providing multiple backends (Datadog statsd, statsd, logging, logging rollup,\n  and so on) for sending data to different places\n\n* sending metrics to multiple backends at the same time\n\n* providing a testing framework for easy testing\n\n* providing a decoupled architecture making it easier to write code to generate\n  metrics without having to worry about making sure creating and configuring a\n  metrics client has been done--similar to the Python logging Python logging\n  module in this way\n\nI use it at Mozilla in the collector of our crash ingestion pipeline. Peter used\nit to build our symbols lookup server, too.\n\n\nInstall\n=======\n\nTo install Markus, run::\n\n    $ pip install markus\n\n\n(Optional) To install the requirements for the\n``markus.backends.datadog.DatadogMetrics`` backend::\n\n    $ pip install markus[datadog]\n\n\nQuick start\n===========\n\nSimilar to using the logging library, every Python module can create a\n``markus.main.MetricsInterface`` (loosely equivalent to a Python\nlogging logger) at any time including at module import time and use that to\ngenerate metrics.\n\nFor example::\n\n    import markus\n\n    metrics = markus.get_metrics(__name__)\n\n\nCreating a ``markus.main.MetricsInterface`` using ``__name__``\nwill cause it to generate all stats keys with a prefix determined from\n``__name__`` which is a dotted Python path to that module.\n\nThen you can use the ``markus.main.MetricsInterface`` anywhere in that\nmodule::\n\n    @metrics.timer_decorator(\"chopping_vegetables\")\n    def some_long_function(vegetable):\n        for veg in vegetable:\n            chop_vegetable()\n            metrics.incr(\"vegetable\", value=1)\n\n\nAt application startup, configure Markus with the backends you want to use to\npublish metrics and any options they require.\n\nFor example, lets configure metrics to publish to logs and Datadog::\n\n    import markus\n\n    markus.configure(\n        backends=[\n            {\n                # Log metrics to the logs\n                \"class\": \"markus.backends.logging.LoggingMetrics\",\n            },\n            {\n                # Log metrics to Datadog\n                \"class\": \"markus.backends.datadog.DatadogMetrics\",\n                \"options\": {\n                    \"statsd_host\": \"example.com\",\n                    \"statsd_port\": 8125,\n                    \"statsd_namespace\": \"\"\n                }\n            }\n        ]\n    )\n\n\nWhen you're writing your tests, use the ``markus.testing.MetricsMock``\nto make testing easier::\n\n    from markus.testing import MetricsMock\n\n\n    def test_something():\n        with MetricsMock() as mm:\n            # ... Do things that might publish metrics\n\n            # Make assertions on metrics published\n            mm.assert_incr_once(\"some.key\", value=1)\n\n\nHistory\n=======\n\n4.0.0 (October 22nd, 2021)\n--------------------------\n\n**Features**\n\n* Added support for Python 3.10 (#88)\n\n**Backwards incompatibel changes**\n\n* Dropped support for Python 3.6 (#89)\n\n\n3.0.0 (February 5th, 2021)\n--------------------------\n\n**Features**\n\n* Added support for Python 3.9 (#79). Thank you, Brady!\n\n* Changed ``assert_*`` helper methods on ``markus.testing.MetricsMock``\n  to print the records to stdout if the assertion fails. This can save some\n  time debugging failing tests. (#74)\n\n**Backwards incompatible changes**\n\n* Dropped support for Python 3.5 (#78). Thank you, Brady!\n\n* ``markus.testing.MetricsMock.get_records`` and\n  ``markus.testing.MetricsMock.filter_records`` return\n  ``markus.main.MetricsRecord`` instances now. This might require\n  you to rewrite/update tests that use the ``MetricsMock``.\n\n\n2.2.0 (April 15th, 2020)\n------------------------\n\n**Features**\n\n* Add ``assert_`` methods to ``MetricsMock`` to reduce the boilerplate for\n  testing. Thank you, John! (#68)\n\n**Bug fixes**\n\n* Remove use of ``six`` library. (#69)\n\n\n2.1.0 (October 7th, 2019)\n-------------------------\n\n**Features**\n\n* Fix ``get_metrics()`` so you can call it without passing in a `thing`\n  and it'll now create a ``MetricsInterface`` that doesn't have a key\n  prefix. (#59)\n\n\n2.0.0 (September 19th, 2019)\n----------------------------\n\n**Features**\n\n* Use ``time.perf_counter()`` if available. Thank you, Mike! (#34)\n* Support Python 3.7 officially.\n* Add filters for adjusting and dropping metrics getting emitted.\n  See documentation for more details. (#40)\n\n**Backwards incompatible changes**\n\n* ``tags`` now defaults to ``[]`` instead of ``None`` which may affect some\n  expected test output.\n* Adjust internals to run ``.emit()`` on backends. If you wrote your own\n  backend, you may need to adjust it.\n* Drop support for Python 3.4. (#39)\n* Drop support for Python 2.7.\n  \n  If you're still using Python 2.7, you'll need to pin to ``<2.0.0``. (#42)\n\n**Bug fixes**\n\n* Document feature support in backends. (#47)\n* Fix ``MetricsMock.has_record()`` example. Thank you, John!\n\n\n1.2.0 (April 27th, 2018)\n------------------------\n\n**Features**\n\n* Add ``.clear()`` to ``MetricsMock`` making it easier to build a pytest\n  fixture with the ``MetricsMock`` context and manipulate records for easy\n  testing. (#29)\n\n**Bug fixes**\n\n* Update Cloudwatch backend fixing ``.timing()`` and ``.histogram()`` to\n  send ``histogram`` metrics type which Datadog now supports. (#31)\n\n\n1.1.2 (April 5th, 2018)\n-----------------------\n\n**Typo fixes**\n\n* Fix the date from the previous release. Ugh.\n\n\n1.1.1 (April 5th, 2018)\n-----------------------\n\n**Features**\n\n* Official switch to semver.\n\n**Bug fixes**\n\n* Fix ``MetricsMock`` so it continues to work even if ``configure``\n  is called. (#27)\n\n\n1.1 (November 13th, 2017)\n-------------------------\n\n**Features**\n\n* Added ``markus.utils.generate_tag`` utility function\n\n\n1.0 (October 30th, 2017)\n------------------------\n\n**Features**\n\n* Added support for Python 2.7.\n\n* Added a ``markus.backends.statsd.StatsdMetrics`` backend that uses\n  pystatsd client for statsd pings. Thank you, Javier!\n\n**Bug fixes**\n\n* Added ``LoggingRollupMetrics`` to docs.\n\n* Mozilla has been running Markus in production for 6 months so we\n  can mark it production-ready now.\n\n\n0.2 (April 19th, 2017)\n----------------------\n\n**Features**\n\n* Added a ``markus.backends.logging.LoggingRollupMetrics`` backend that\n  rolls up metrics and does some light math on them. Possibly helpful\n  for light profiling for development.\n\n**Bug fixes**\n\n* Lots of documentation fixes. Thank you, Peter!\n\n\n0.1 (April 10th, 2017)\n----------------------\n\nInitial writing.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/willkg/markus",
    "keywords": "metrics datadog statsd",
    "license": "MPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "markus",
    "package_url": "https://pypi.org/project/markus/",
    "platform": "",
    "project_url": "https://pypi.org/project/markus/",
    "project_urls": {
      "Documentation": "https://markus.readthedocs.io/",
      "Homepage": "https://github.com/willkg/markus",
      "Source": "https://github.com/willkg/markus/",
      "Tracker": "https://github.com/willkg/markus/issues"
    },
    "release_url": "https://pypi.org/project/markus/4.0.0/",
    "requires_dist": [
      "datadog ; extra == 'datadog'",
      "black (==21.9b0) ; extra == 'dev'",
      "check-manifest (==0.47) ; extra == 'dev'",
      "flake8 (==4.0.1) ; extra == 'dev'",
      "freezegun (==1.1.0) ; extra == 'dev'",
      "pytest (==6.2.5) ; extra == 'dev'",
      "Sphinx (==4.2.0) ; extra == 'dev'",
      "tox (==3.24.4) ; extra == 'dev'",
      "tox-gh-actions (==2.8.1) ; extra == 'dev'",
      "twine (==3.4.2) ; extra == 'dev'",
      "wheel (==0.37.0) ; extra == 'dev'",
      "statsd ; extra == 'statsd'"
    ],
    "requires_python": ">=3.7",
    "summary": "Metrics system for generating statistics about your app",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17515287,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bc2347007cf3d8c327a9c4a77f9f5f8d69eb3351ca25a22a2414f04a2479d31",
        "md5": "c1402786bac1424b831b31d1ed5b7137",
        "sha256": "412d82e11ab0c64753ac7572df2b879553dde3e4c95e7e5bd085d3b7600f3131"
      },
      "downloads": -1,
      "filename": "markus-4.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c1402786bac1424b831b31d1ed5b7137",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24750,
      "upload_time": "2021-10-22T16:59:04",
      "upload_time_iso_8601": "2021-10-22T16:59:04.278883Z",
      "url": "https://files.pythonhosted.org/packages/4b/c2/347007cf3d8c327a9c4a77f9f5f8d69eb3351ca25a22a2414f04a2479d31/markus-4.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67116ff3cfc57e95b171429837cb16593ac493f6f78cb7b916a60587b2063093",
        "md5": "5c587eed1ac51345641a7c8a15a14a44",
        "sha256": "da711d0c667f37f7a6fe99da338a0a2565460b64a4a059e305bd26b2d2517e2d"
      },
      "downloads": -1,
      "filename": "markus-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c587eed1ac51345641a7c8a15a14a44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 36154,
      "upload_time": "2021-10-22T16:59:05",
      "upload_time_iso_8601": "2021-10-22T16:59:05.569070Z",
      "url": "https://files.pythonhosted.org/packages/67/11/6ff3cfc57e95b171429837cb16593ac493f6f78cb7b916a60587b2063093/markus-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}