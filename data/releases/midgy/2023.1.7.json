{
  "info": {
    "author": null,
    "author_email": "tonyfast <tony.fast@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# `midgy`\n\n`midgy` makes markdown python modules and scripts.\n\n### command line interface\n\n```bash\nmidgy README.md     # run a readme file as python\nmidgy run README.md     # run a readme file as python\nmidgy -m README     # run a readme file as python\n```   \n   \n      >>> from midgy.run import Markdown\n      >>> with Markdown():\n      ...   import README\n      >>> print(README)\n      <module 'README' from '...README.md'>\n      \n\n`midgy` is one half of `pidgy`, together they bring literate programming and computing afforandances to [python] and [`IPython`]. `midgy` is only concerned with the half of literate programming that translates a document to compiled code. `midgy` has a small api:\n\n* `md_to_python` - a function that converts a markdown document to python\n* `Python` - a class that parses a markdown document and renders python\n* `midgy.run.Markdown` - is an `importnb` context manager that includes markdown documents when importing python modules.\n\n\n## tangling literate programs\n\n literate programming is paradigm that treats code as literate, and vice versa; documents are evaluated on their literary and computational qualities. there are two actions defined in the framework of literate programming:\n\n1. render\n   : the act of translating the document into a programming language\n   : `midgy` renders markdown to python\n2. weave\n   : the act of translating the document to a rendered format\n   : `pidgy` weaves markdown to html, pdf, or md through the `jinja2` template system.\n\n`midgy` focuses only on the `render` actions, and is extended in `pidgy` which implements the weave action.\n\n### extending the lexical analysis of CommonMark markdown\n\n`midgy` extends the commonmark spec to reflect some common conventions.\n\n1. shebang\n   : `midgy` documents are programs and may begin with a shebang.\n2. front matter\n   : can be included at the beginning of a document or after a shebang.\n   : either toml, json or yaml can be used\n3. doctest\n   : a literate programming convention for including tests in python strings\n4. code\n   : our code blocks are modified to be aware of doctests and include lexical diagnostics of the content\n\n### rendering tokenized CommonMark as Python\n\n`midgy` translates markdown to python relative to indented code blocks. content between indented code blocks are wrapped a python block strings, and non-indented code blocks can be included in python programs. the translation from markdown to python is meant to require the fewest changes to have valid python code.\n\n`midgy` goes to great lengths to generate a line-for-line translation of the markdown to python.\nthe line-for-line translation improves the error handling experience when using non-python documents as modules.\n\n      from sys import argv\n      print(argv)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "midgy",
    "package_url": "https://pypi.org/project/midgy/",
    "platform": null,
    "project_url": "https://pypi.org/project/midgy/",
    "project_urls": {
      "Documentation": "https://github.com/deathbeds/midgy#readme",
      "Issues": "https://github.com/deathbeds/midgy/issues",
      "Source": "https://github.com/deathbeds/midgy"
    },
    "release_url": "https://pypi.org/project/midgy/2023.1.7/",
    "requires_dist": [
      "importnb",
      "markdown-it-py[linkify,plugins]",
      "black; extra == 'black'",
      "rich; extra == 'rich'",
      "pytest; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "run markdown as python code",
    "version": "2023.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16866606,
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "59d472a1b4a3a9ab8b83d164530578e44685ca698cfcfe4672cca476d34b0bd6",
        "md5": "a13458cde273f5ea8a9d3152cf8993c0",
        "sha256": "e6d8df9eda2c33e05589830403b3531c974f2be66186eb44f5a4d6bfc5ec7453"
      },
      "downloads": -1,
      "filename": "midgy-2023.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a13458cde273f5ea8a9d3152cf8993c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13351,
      "upload_time": "2023-01-08T19:48:41",
      "upload_time_iso_8601": "2023-01-08T19:48:41.584908Z",
      "url": "https://files.pythonhosted.org/packages/59/d4/72a1b4a3a9ab8b83d164530578e44685ca698cfcfe4672cca476d34b0bd6/midgy-2023.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "14fca161068c8482ceb33ce912a924846f6469ad590fabb5c4eb4cd68aebde31",
        "md5": "0cc3ceb1f44b9d7532192762f93371e0",
        "sha256": "199b0508df039d085c21cec2c8c4d1fc817b635abade0e97ac9a42d4fa7f3c83"
      },
      "downloads": -1,
      "filename": "midgy-2023.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "0cc3ceb1f44b9d7532192762f93371e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 66461,
      "upload_time": "2023-01-08T19:48:38",
      "upload_time_iso_8601": "2023-01-08T19:48:38.270665Z",
      "url": "https://files.pythonhosted.org/packages/14/fc/a161068c8482ceb33ce912a924846f6469ad590fabb5c4eb4cd68aebde31/midgy-2023.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}