{
  "info": {
    "author": "arteria GmbH",
    "author_email": "admin@arteria.ch",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Userproperty\n\n[![Build Status](https://travis-ci.org/arteria/django-userproperty.svg?branch=master)](https://travis-ci.org/arteria/django-userproperty)\n[![Coverage Status](https://coveralls.io/repos/arteria/django-userproperty/badge.svg?branch=master&service=github)](https://coveralls.io/github/arteria/django-userproperty?branch=master)\n[![PyPI](https://img.shields.io/pypi/v/django-userproperty.svg)](https://pypi.python.org/pypi/django-userproperty)\n\n\ndjango-userproperty is a reusable Django app that manages per user and global properties. In addition, django-userproperty provides helper functions to set, get, incerement and decrement these properties.\n\n\n## Installation\n\nInstall the package:\n\n    pip install django-userproperty\n\nAdd the app in you settings.py:\n\n    INSTALLED_APPS = (\n        'userproperty',\n    )\n\nUpdate your root urls.py file:\n\n    ...\n    url(r'^properties/', include('userproperty.urls')),\n    ...\n\n\nAnd finally sync your db\n\n    python manage.py syncdb\n\n\n## Usage\n\n### API for asynchronous Usage\n\nThis app is designed to be used with JavaScript/jQuery and asynchronous requests. It provides so besic API interfaces to get and set Properties\n\n#### `get-uproperty`\n\n> logged-in user is required\n\n**name**: name of the user-property\ndefault: default value, will be retuned if user-property not found\n\n    $.get(\"/get-uproperty/?name=<name>&default=<value>\", function(data) {\n            alert(data);\n        });\n\nresponse:\n\n    {\"status\": \"success\", \"number-of-items\": \"50\"} // or 100 if the property number-of-items was not found\n\n#### `set-uproperty`\n\n> logged-in user is required\n\n**name**: name of the user-property\n**value**: value of the user-property to set\n\n    $.get(\"/set-uproperty/?name=<name>&value=<value>\", function(data) {\n        alert(data);\n    });\n\nresponse:\n\n    {\"status\": \"success\", \"number-of-items\": \"100\"}\n\n#### `get-gproperty`\n\n> staff member is required\n\n**name**: name of the global-property\ndefault: default value, will be retuned if global-property not found\n\n        $.get(\"/get-gproperty/?name=<name>&default=<value>\", function(data) {\n            alert(data);\n        });\n\nresponse:\n\n    {\"status\": \"success\", \"number-of-items\": \"50\"}\n\n#### `set-gproperty` - staff member is required\n\n> staff member is required\n\n**name**: name of the global-property\n**value**: value of the global-property to set\n\n    $.get(\"/set-gproperty/?name=<name>&value=<value>\", function(data) {\n        alert(data);\n    });\n\nreturns\n\n    {\"status\": \"success\", \"number-of-items\": \"100\"}\n\n\n### More examples:\n\nAfter creating an account on your website, the user needs to do some tasks before he can enter his profile. In this example adding more information and agreeing to the terms and conditions.\n\nWhen creating the new user you create a new property:\n\n    from userproperty.utils import addProperty\n\n    addProperty(request, tag='setup')\n    # if the user is not saved in the request add: anUser=yourNewUser\n\nIn your login view you can now have different outcomes based on the UserProperty\n\n    from userproperty.utils import getIntegerProperty, setIntegerProperty, removeProperty\n\n    #in your login view\n\n    setupProperty = getIntegerProperty(request,'setup')\n\n    if setupProperty == 1:\n        #redirect, a form for adding phone number etc\n    elif setupProperty == 2:\n        #redirect, accepting the terms and conditions\n    elif setupProperty:\n        removeProperty(request, tag='setup')\n\n    # stuff when no property was set\n\nThe only thing left to do is setting the property to a new value when the respective actions(forms in this case) are done:\n\n    from userproperty.utils import setIntegerProperty, removeProperty\n\n    #in the view with the form for the phonenumer etc.\n    form.is_valid():\n        #do stuff\n\n        setIntegerProperty(request, tag='setup', value=2)\n\n        #redirect login\n\n\n    #in the view for terms and conditions\n    form.is_valid():\n        #do stuff\n\n        removeProperty(request, tag='setup')\n\n        #redirect login\n\nOther examples: setup tour, saving user specific properties(number of data entries displayed in js datatables), etc.\n\n## PEP8\n\nThe functions are available in pep8 (lowercase with _ as separator between words)\n\nsetIntegerProperty() ==> set_integer_property()\n\n## Change Log\n\n### 06/Aug/2015\n\n* Propper anonymous users handling.\n* ``decUserProperty`` and ``incUserProperty`` returns ``False`` instead of ``True`` for anonymous users or in case of errors.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-userproperty",
    "package_url": "https://pypi.org/project/django-userproperty/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-userproperty/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-userproperty/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "django userproperty",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3086606,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f41a10c70f5c4a1863658f2cbbf43b94385f0c892f53088d9260962754f9273f",
        "md5": "ec3618381324d06deb00348b98ef06c5",
        "sha256": "e45dcd2ab77e418d5489a2ea8d1e3febbe8d1cf28b5097c1d50510cf154125f6"
      },
      "downloads": -1,
      "filename": "django-userproperty-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "ec3618381324d06deb00348b98ef06c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8201,
      "upload_time": "2017-08-10T11:54:48",
      "upload_time_iso_8601": "2017-08-10T11:54:48.216624Z",
      "url": "https://files.pythonhosted.org/packages/f4/1a/10c70f5c4a1863658f2cbbf43b94385f0c892f53088d9260962754f9273f/django-userproperty-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}