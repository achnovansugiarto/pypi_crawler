{
  "info": {
    "author": "deedy5",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![Python >= 3.7](https://img.shields.io/badge/python->=3.7-red.svg) [![](https://badgen.net/github/release/deedy5/duckduckgo_search)](https://github.com/deedy5/duckduckgo_search/releases) [![](https://badge.fury.io/py/duckduckgo-search.svg)](https://pypi.org/project/duckduckgo-search)\n## Duckduckgo_search\n\nSearch for words, documents, images, videos, news, maps and text translation using the DuckDuckGo.com search engine. Downloading images to a local hard drive.\n\n***Install***\n```python\npip install -U duckduckgo_search\n```\n___\n### CLI version\n```python3\nddgs --help\n```\nor\n```python3\npython -m duckduckgo_search --help\n```\n![](https://github.com/deedy5/duckduckgo_search/raw/main/docs/ddgs_demo.gif)\n\n___\n### Table of Contents  \n[Duckduckgo search operators](#duckduckgo-search-operators)</br>\n[Using proxy](#using-proxy)</br>\n[1. ddg()](#1-ddg---search-by-duckduckgocom)</br>\n[2. ddg_images()](#2-ddg_images---image-search-by-duckduckgocom)</br>\n[3. ddg_videos()](#3-ddg_videos---video-search-by-duckduckgocom)</br>\n[4. ddg_news()](#4-ddg_news---news-search-by-duckduckgocom)</br>\n[5. ddg_maps()](#5-ddg_maps---map-search-by-duckduckgocom)</br>\n[6. ddg_translate()](#6-ddg_translate---translation-by-duckduckgocom)</br>\n\n___\n## Duckduckgo search operators\n\n| Keywords example |\tResult|\n| ---     | ---   |\n| cats dogs |\tResults about cats or dogs |\n| \"cats and dogs\" |\tResults for exact term \"cats and dogs\". If no results are found, related results are shown. |\n| cats -dogs |\tFewer dogs in results |\n| cats +dogs |\tMore dogs in results |\n| cats filetype:pdf |\tPDFs about cats. Supported file types: pdf, doc(x), xls(x), ppt(x), html |\n| dogs site:example.com  |\tPages about dogs from example.com |\n| cats -site:example.com |\tPages about cats, excluding example.com |\n| intitle:dogs |\tPage title includes the word \"dogs\" |\n| inurl:cats  |\tPage url includes the word \"cats\" |\n___\n### Using proxy\n```python3\nfrom duckduckgo_search import ddg\nfrom duckduckgo_search.utils import SESSION\n\n\nSESSION.proxies = {\n    \"http\": f\"socks5h://localhost:9150\",\n    \"https\": f\"socks5h://localhost:9150\"\n}\nr = ddg(\"Don't Worry, Be Happy\")\nprint(r)\n```\n___\n## 1. ddg() - search by duckduckgo.com\n\n```python\nfrom duckduckgo_search import ddg\n\ndef ddg(keywords, region='wt-wt', safesearch='Moderate', time=None, max_results=25, output=None):\n    \"\"\"DuckDuckGo text search. Query params: https://duckduckgo.com/params\n\n    Args:\n        keywords (str): keywords for query.\n        region (str, optional): country - wt-wt, us-en, uk-en, ru-ru, etc. Defaults to \"wt-wt\".\n        safesearch (str, optional): On(kp=1), Moderate(kp=-1), Off(kp=-2). Defaults to \"Moderate\".\n        time (str, optional): 'd' (day), 'w' (week), 'm' (month), 'y' (year). Defaults to None.\n        max_results (int, optional): return not less than max_results, max=200. Defaults to 25.\n        output (str, optional): csv, json, print. Defaults to None.\n\n    Returns:\n        Optional[List[dict]]: DuckDuckGo text search results.\n    \"\"\"\n```\n***Returns***\n```python\n[{'title': title of result,\n  'href': href of result,\n  'body': body of result,},\n ...\n ]\n```\n***Example 1. Text search***\n```python\nfrom duckduckgo_search import ddg\n\nkeywords = 'Bella Ciao'\nresults = ddg(keywords, region='wt-wt', safesearch='Moderate', time='y', max_results=25)\nprint(results)\n```\n```python\n[\n{'title': 'Bella Ciao - Original Italian Lyrics & English Translation ...', 'href': 'https://dailyitalianwords.com/bella-ciao-original-italian-lyrics-english-translation/', 'body': 'Bella Ciao - English Meaning (Mondine version) In the morning as soon as I get up oh goodbye beautiful, goodbye beautiful, goodbye beautiful, bye, bye, bye In the morning as soon as I get up I have to go to the paddy fields. And between insects and mosquitoes oh goodbye beautiful, goodbye beautiful, goodbye beautiful, bye, bye, bye'},\n{'title': \"What's the meaning of Bella Ciao | Italian song explained\", 'href': 'https://www.thinkinitalian.com/bella-ciao-meaning/', 'body': \"Bella Ciao is probably the most famous Italian folk song. It has been sung anywhere in the world for years, and the TV series Money Heist made it even more popular. But what does it talk about? What's the story behind its lyrics? This is a perfect chance to learn some more Italian with the meaning of Bella Ciao. Italian culture Michele\"},\n...\n]\n```\n***Example 2. Searching for pdf files***\n```python\nfrom duckduckgo_search import ddg\n\nkeywords = 'conditioned reflex in humans filetype:pdf'\nresults = ddg(keywords, region='wt-wt', safesearch='None', time=None, max_results=300)\nprint(results)\n```\n```python\n[\n{'title': 'PDF Conditioned Reflexes', 'href': 'https://antilogicalism.com/wp-content/uploads/2019/04/conditioned-reflexes.pdf', 'body': '302 CONDITIONED REFLEXES. in the strength of the reflexes, a state of ;affair.~ which lasted for many. days, the relation between the magnitudes of the reflexes and the Other dogs those of the inhibitable type suffered a functional disturbance of the cortical activities for a very considerable period.'},\n{'title': 'Conditioned reflex therapy; the direct approach to the reconstruction...', 'href': 'https://archive.org/details/conditionedrefle00salt', 'body': \"Two chapters were rewritten and expanded from the author's What is hypnosis. One was reprinted from the South west review. Bibliography: p. 321-340.\"},\n{'title': 'conditioned reflex examples in humans - Bing', 'href': 'https://technopagan.org/conditioned+reflex+examples+in+humans&FORM=QSRE4', 'body': 'Jun 02, 2021 Â· Conditioned Reflex Examples In Humans And not discrimination is directly with dogs was presented is absent, and emotional responses being subtle variations in... When they hear thunder, in conditioned reflex was sent to humans are allowed early contributions ivan to know about why...'},\n...\n]\n```\n___\n## 2. ddg_images() - image search by duckduckgo.com\n```python\nfrom duckduckgo_search import ddg_images\n\ndef ddg_images(keywords, region='wt-wt', safesearch='Moderate', time=None, size=None,\n           color=None, type_image=None, layout=None, license_image=None, max_results=100,\n           output=None, download=False):\n    \"\"\"DuckDuckGo images search.\n\n    Args:\n        keywords (str): keywords for query.\n        region (str, optional): country of results - wt-wt (Global), us-en, uk-en, ru-ru, etc.\n            Defaults to \"wt-wt\".\n        safesearch (str, optional): On (kp = 1), Moderate (kp = -1), Off (kp = -2).\n            Defaults to \"Moderate\".\n        time (Optional[str], optional): Day, Week, Month, Year. Defaults to None.\n        size (Optional[str], optional): Small, Medium, Large, Wallpaper. Defaults to None.\n        color (Optional[str], optional): color, Monochrome, Red, Orange, Yellow, Green, Blue,\n            Purple, Pink, Brown, Black, Gray, Teal, White. Defaults to None.\n        type_image (Optional[str], optional): photo, clipart, gif, transparent, line.\n            Defaults to None.\n        layout (Optional[str], optional): Square, Tall, Wide. Defaults to None.\n        license_image (Optional[str], optional): any (All Creative Commons), Public (PublicDomain),\n            Share (Free to Share and Use), ShareCommercially (Free to Share and Use Commercially),\n            Modify (Free to Modify, Share, and Use), ModifyCommercially (Free to Modify, Share, and\n            Use Commercially). Defaults to None.\n        max_results (Optional[int], optional): number of results, max 1000 results. Defaults to 100.\n        output (Optional[str], optional): csv, json, print. Defaults to None.\n        download (bool, optional): if True, download and save images to 'keywords' folder.\n            Defaults to False.\n\n    Returns:\n        Optional[List[dict]]: DuckDuckGo text search results.\n    \"\"\"\n```\n***Returns***\n```python\n[{'height': image height,\n  'image': image url,\n  'source': image source,\n  'thumbnail': image thumbnail,\n  'title': image title,\n  'url': url where the image was found,\n  'width': image width },  \n ...\n ]\n```\n***Example***\n```python\nfrom duckduckgo_search import ddg_images\n\nkeywords = 'liberty tree'\nr = ddg_images(keywords, region='wt-wt', safesearch='Off', size=None,\n               color='Monochrome', type_image=None, layout=None, license_image=None, max_results=300)\nprint(r)\n```\n```python\n[\n{'height': 1000, 'image': 'https://i5.walmartimages.com/asr/fef2dbdb-3756-4401-b7ae-502ec2ea082b_1.eb37ae35a5e3d4ae59d61ecac336c226.jpeg?odnWidth=1000&odnHeight=1000&odnBg=ffffff', 'source': 'Bing', 'thumbnail': 'https://tse2.mm.bing.net/th?id=OIP.4DhDDdx9IOAwbFm6CRGpTwHaHa&pid=Api', 'title': 'Liberty Tree 1765 Nthe Large Elm Tree At Boylston Market ...', 'url': 'https://www.walmart.com/ip/Liberty-Tree-1765-Nthe-Large-Elm-Tree-Boylston-Market-Boston-Massachusetts-Named-Liberty-Tree-Sons-Liberty-Held-Meetings-Summer-1765-Wood-Engraving-A/997377547?wmlspartner=bizratecom&affcmpid=3313893407&tmode=0000', 'width': 1000},\n{'height': 2400, 'image': 'http://etc.usf.edu/clipart/13500/13570/liberty-tree_13570.tif', 'source': 'Bing', 'thumbnail': 'https://tse2.mm.bing.net/th?id=OIP.4t3AojTiUP6TZ-AFaSfCHAHaJ7&pid=Api', 'title': 'Liberty Tree | ClipArt ETC', 'url': 'http://etc.usf.edu/clipart/13500/13570/liberty-tree_13570.htm', 'width': 1790},\n{'height': 297, 'image': 'https://www.blogtalkradio.com/api/image/resize/400x297/aHR0cHM6Ly9kYXNnN3h3bWxkaXg2LmNsb3VkZnJvbnQubmV0L2hvc3RwaWNzLzc1MGZhZjVhLTJhMTUtNDE5Ni1iOTQwLTA1NTc1NjVlMGM1MV9saWJlcnR5LXRyZWVfbG9nby5qcGc/750faf5a-2a15-4196-b940-0557565e0c51_liberty-tree_logo.jpg?mode=Fill', 'source': 'Bing', 'thumbnail': 'https://tse2.mm.bing.net/th?id=OIP.IQxgK4LaaFV82m7Iz9J3sgAAAA&pid=Api', 'title': 'Liberty Tree Radio Online Radio | BlogTalkRadio', 'url': 'http://www.blogtalkradio.com/libertytreeradio', 'width': 400},\n...\n]\n```\n___\n## 3. ddg_videos() - video search by duckduckgo.com\n```python\nfrom duckduckgo_search import ddg_videos\n\ndef ddg_videos(keywords, region=\"wt-wt\", safesearch=\"Moderate\", time=None, resolution=None,\n    duration=None, license_videos=None, max_results=50, output=None):\n    \"\"\"DuckDuckGo videos search\n\n    Args:\n        keywords: keywords for query.\n        region: country of results - wt-wt (Global), us-en, uk-en, ru-ru, etc. Defaults to \"wt-wt\".\n        safesearch: On (p = 1), Moderate (p = -1), Off (p = -2). Defaults to \"Moderate\".\n        time: d, w, m (published after). Defaults to None.\n        resolution: high, standart. Defaults to None.\n        duration: short, medium, long. Defaults to None.\n        license_videos: creativeCommon, youtube. Defaults to None.\n        max_results: number of results, maximum ddg_videos gives out 1000 results. Defaults to 50.\n        output: csv, json, print. Defaults to None.\n\n    Returns:\n        DuckDuckGo videos search results\n    \"\"\"\n```\n***Returns***\n```python\n[{\"content\": str,\n  \"description\": str,\n  \"duration\": str,\n  \"embed_html\": str,\n  \"embed_url\": str,\n  \"images\": {\n    \"large\": str,\n    \"medium\": str,\n    \"motion\": str,\n    \"small\": str,\n  },\n  \"provider\": str,\n  \"published\": str,\n  \"publisher\": str,\n  \"statistics\": {\n    \"viewCount\": int\n  },\n  \"title\": str,\n  \"uploader\": str},\n\n ...\n ]\n```\n***Example***\n```python\nfrom duckduckgo_search import ddg_videos\n\nkeywords = 'Earth'\nr = ddg_videos(keywords=\"Earth\", region='wt-wt', safesearch='Off', time=None, resolution=None,\n               duration=None, license_videos=None, max_results=50, output=None)\nprint(r)\n```\n```python\n[\n{'content': 'https://www.youtube.com/watch?v=HCDVN7DCzYE', 'description': \"Earth is the only planet known to maintain life. Find out the origins of our home planet and some of the key ingredients that help make this blue speck in space a unique global ecosystem. Subscribe: http://bit.ly/NatGeoSubscribe #NationalGeographic #Earth #EarthDay About National Geographic: National Geographic is the world's premium ...\", 'duration': '3:33', 'embed_html': '<iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/HCDVN7DCzYE?autoplay=1\" frameborder=\"0\" allowfullscreen></iframe>', 'embed_url': 'https://www.youtube.com/embed/HCDVN7DCzYE?autoplay=1', 'images': {'large': 'https://tse2.mm.bing.net/th?id=OVP.oeITkB49pZMoAG0Ds6PoXQHgFo&pid=Api', 'medium': 'https://tse2.mm.bing.net/th?id=OVP.oeITkB49pZMoAG0Ds6PoXQHgFo&pid=Api', 'motion': 'https://tse2.mm.bing.net/th?id=OM2.PVGeB2TtDBxXjQ_1633563877&pid=Api', 'small': 'https://tse2.mm.bing.net/th?id=OVP.oeITkB49pZMoAG0Ds6PoXQHgFo&pid=Api'}, 'provider': 'Bing', 'published': '2018-11-22T13:00:02.0000000', 'publisher': 'YouTube', 'statistics': {'viewCount': 4466328}, 'title': 'Earth 101 | National Geographic', 'uploader': 'National Geographic'},\n{'content': 'https://www.youtube.com/watch?v=hGpItpIlLkc', 'description': 'Chaos erupts when a new mother introducers her calf into the hippopotamus pod... Subscribe: http://bit.ly/BBCEarthSub #NaturalWorld #BBCEarth Watch more: Planet Earth http://bit.ly/PlanetEarthPlaylist Blue Planet http://bit.ly/BluePlanetPlaylist Planet Earth II http://bit.ly/PlanetEarthIIPlaylist Planet Dinosaur https://bit.ly ...', 'duration': '6:05', 'embed_html': '<iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/hGpItpIlLkc?autoplay=1\" frameborder=\"0\" allowfullscreen></iframe>', 'embed_url': 'https://www.youtube.com/embed/hGpItpIlLkc?autoplay=1', 'images': {'large': 'https://tse1.mm.bing.net/th?id=OVP.lwq6by7crgwpkXGERzXLvQHgFo&pid=Api', 'medium': 'https://tse1.mm.bing.net/th?id=OVP.lwq6by7crgwpkXGERzXLvQHgFo&pid=Api', 'motion': 'https://tse1.mm.bing.net/th?id=OM.3QweCgZ-KW53rQ&pid=Api', 'small': 'https://tse1.mm.bing.net/th?id=OVP.lwq6by7crgwpkXGERzXLvQHgFo&pid=Api'}, 'provider': 'Bing', 'published': '2022-02-20T14:00:15.0000000', 'publisher': 'YouTube', 'statistics': {'viewCount': 1364377}, 'title': 'Mother Hippo Fights to Protect Her Calf | Natural World | BBC Earth', 'uploader': 'BBC Earth'},\n...\n]\n```\n___\n## 4. ddg_news() - news search by duckduckgo.com\n```python\nfrom duckduckgo_search import ddg_news\n\ndef ddg_news(keywords, region='wt-wt', safesearch='Moderate', time=None, max_results=25, output=None):\n    \"\"\"DuckDuckGo news search\n\n    Args:\n        keywords: keywords for query.\n        region: country of results - wt-wt (Global), us-en, uk-en, ru-ru, etc. Defaults to \"wt-wt\".\n        safesearch: On (kp = 1), Moderate (kp = -1), Off (kp = -2). Defaults to \"Moderate\".\n        time: 'd' (day), 'w' (week), 'm' (month). Defaults to None.\n        max_results: maximum DDG_news gives out 240 results. Defaults to 25.\n        output: csv, json, print. Defaults to None.\n\n    Returns:\n        DuckDuckGo news search results.\n    \"\"\"\n```\n***Returns***\n```python\n[{'date': datetime in isoformat,\n  'title': title of result,\n  'body': body of result,\n  'url': url of result,\n  'image': image url,\n  'source': source of result,\n ...\n ]\n```\n***Example***\n```python\nfrom duckduckgo_search import ddg_news\n\nkeywords = \"russia invasion ukraine\"\nr = ddg_news(keywords, region='wt-wt', safesearch='Off', time='d', max_results=100)\nprint(r)\n```\n```python\n[\n{'date': '2022-02-04T06:50:00', 'title': 'Russia denies leaking U.S. security talks document to El Pais', 'body': 'Moscow has demanded guarantees from Washington and NATO that Ukraine will not be allowed to join the military bloc. Russia has amassed over 100,000 troops close to the Ukrainian borders, but denies planning an invasion.', 'url': 'https://wdez.com/2022/02/04/russia-denies-leaking-u-s-security-talks-document-to-el-pais/', 'image': 'https://storage.googleapis.com/media.mwcradio.com/mimesis/2022-02/04/2022-02-04T060600Z_1_LYNXMPEI13053_RTROPTP_3_RUSSIA-USA-SECURITY.JPG', 'source': 'WDEZ'},\n{'date': '2022-02-04T06:50:00', 'title': 'Analysis-Traders scour markets for protection amid Ukraine tensions', 'body': 'LONDON (Reuters) - Unnerved by the sabre-rattling between Russia and the West over Ukraine, traders are scouring ... a 10% probability of a full-fledged invasion. Ganry recommends a different ...', 'url': 'https://wsau.com/2022/02/04/analysis-traders-scour-markets-for-protection-amid-ukraine-tensions/', 'image': 'https://storage.googleapis.com/media.mwcradio.com/mimesis/2022-02/04/2022-02-04T061136Z_2_LYNXMPEI13058_RTROPTP_3_GLOBAL-MARKETS-TRADING.JPG', 'source': 'WSAY'},\n{'date': '2022-02-04T06:47:00', 'title': \"Morning news brief: US's warning on Russia-Ukraine crisis, Johnson's top aides quitting, and more\", 'body': 'Russia will produce graphic propaganda video as pretext for an invasion against Ukraine: US Â© Provided by WION Pentagon officials said today that Russia could fabricate a pretext for an invasion of Ukraine. \"As part of this fake attack, we believe that ...', 'url': 'https://www.msn.com/en-in/news/world/morning-news-brief-us-s-warning-on-russia-ukraine-crisis-johnson-s-top-aides-quitting-and-more/ar-AATs9ml', 'image': 'https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AATsnww.img?h=315&w=600&m=6&q=60&o=t&l=f&f=jpg', 'source': 'MSN'},\n...\n]\n```\n___\n## 5. ddg_maps() - map search by duckduckgo.com\n```python\nfrom duckduckgo_search import ddg_maps\n\ndef ddg_maps(keywords, place=None, street=None, city=None, county=None, state=None,\n             country=None, postalcode=None, latitude=None, longitude=None, radius=0,\n             max_results=None, output=None):\n    \"\"\"DuckDuckGo maps search\n\n    Args:\n        keywords: keywords for query\n        place: simplified search - if set, the other parameters are not used. Defaults to None.\n        street: house number/street. Defaults to None.\n        city: city of search. Defaults to None.\n        county: county of search. Defaults to None.\n        state: state of search. Defaults to None.\n        country: country of search. Defaults to None.\n        postalcode: postalcode of search. Defaults to None.\n        latitude: geographic coordinate that specifies the northâsouth position. Defaults to None.\n        longitude: geographic coordinate that specifies the eastâwest position;\n            if latitude and longitude are set, the other parameters are not used. Defaults to None.\n        radius: expand the search square by the distance in kilometers. Defaults to 0.\n        max_results: maximum number of results. Defaults to None.\n        output: csv, json, print. Defaults to None.\n\n    Returns:\n        DuckDuckGo maps search results\n    \"\"\"\n```\n***Returns***\n```python\n[{'title': title,\n  'address': address,\n  'country_code': country code,\n  'latitude': latitude,\n  'longitude': longitude,\n  'url': url,\n  'desc': desc,\n  'phone': phone,\n  'image': image,  \n  'source': source,\n  'links': links,\n  'hours': hours,}\n ...\n ]\n```\n***Example 1. Simple search (if place parameter is set, the other parameters are not used)***\n```python\nfrom duckduckgo_search import ddg_maps\n\nkeywords = 'dentists'\nplace = 'Los Angeles'\n\nr = ddg_maps(keywords, place='Los Angeles')\nprint(r)\n```\n```python\n[\n{'title': 'Venice Family Dentistry', 'address': '10913 Venice Blvd, Los Angeles, CA  90034, United States', 'country_code': 'US', 'latitude': 34.0159528696929, 'longitude': -118.412624001503, 'url': 'http://venicefamilydentistry.com', 'desc': 'This website is for sale! venicefamilydentistry.com is your first and best source for all of the information youâre looking for. From general topics to more of what you would expect to find here, venicefamilydentistry.com has it all. We hope you find what you are searching for!', 'phone': '+13108733331', 'image': '', 'source': 'http://yelp.com/biz/EKGhduy0WGnMBpbqJCQapg', 'links': '', 'hours': {'Fri': '9AMâ5PM', 'Mon': '9AMâ5PM', 'Sat': '9AMâ5PM', 'Wed': '9AMâ5PM', 'closes_soon': 0, 'is_open': 0, 'opens_soon': 0, 'state_switch_time': '9AM'}},\n{'title': 'Serenity Dental Care', 'address': '11262 W Washington Blvd, Culver City, CA  90230, United States', 'country_code': 'US', 'latitude': 34.0050049579316, 'longitude': -118.413847088814, 'url': 'https://serenitydentalcare.com', 'desc': None, 'phone': '+13103906500', 'image': None, 'source': 'http://yelp.com/biz/tD9wuIHnJhYjsPAnEGHzTQ', 'links': None, 'hours': {'Fri': '8AMâ2PM', 'Mon': '10AMâ7PM', 'Sat': '8AMâ5PM', 'Thu': '10AMâ7PM', 'Tue': '10AMâ7PM', 'Wed': '8AMâ5PM', 'closes_soon': 0, 'is_open': 0, 'opens_soon': 0, 'state_switch_time': '8AM'}},\n...\n]\n```\n***Example 2. Advanced search in city and country***\n```python\nfrom duckduckgo_search import ddg_maps\n\nkeywords = 'dentists'\ncity = 'Denver'\ncountry = 'USA'\nr = ddg_maps(keywords, city='Denver', country='USA')\nprint(r)\n```\n```python\n[\n{'title': 'Williams Family Dentistry', 'address': '4624 N Central Park Blvd, Unit 102, Denver, CO 80238, United States', 'country_code': 'US', 'latitude': 39.7804958556395, 'longitude': -104.88231038524, 'url': 'http://www.margiewilliamsdds.com/', 'desc': '4624 Central Park Blvd #102 (303) 945-2699 Front Desk Mon â Thu: 7AM â 6PMFri: 7AM-4PM Talented and Caring Team At Williams Family Dentistry we strive to develop long lasting relationships with our patients and neighbors. We [â¦]', 'phone': '+13039452699', 'image': 'https://margiewilliamsdds.com/wp-content/uploads/2021/06/Dr-Group-photo-scaled.jpg', 'source': 'http://yelp.com/biz/DgmYAIM30TXvBaB-FBSvRQ', 'links': '', 'hours': {'Fri': '7AMâ4PM', 'Mon': '7AMâ6PM', 'Thu': '7AMâ6PM', 'Tue': '7AMâ6PM', 'Wed': '7AMâ6PM', 'closes_soon': 0, 'is_open': 1, 'opens_soon': 0, 'state_switch_time': '4PM'}},\n{'title': 'Dentists of Central Park', 'address': '10355 E Martin Luther King Jr Blvd, Unit 110, Denver, CO 80238, United States', 'country_code': 'US', 'latitude': 39.7602729, 'longitude': -104.8673477, 'url': 'https://www.dentistsofcentralpark.com', 'desc': 'Local dentist near you in Denver. Book your dental appointment for general dentistry, teeth whitening, oral surgery, or emergency dentistry.', 'phone': '+17204038351', 'image': 'https://www.dentistsofcentralpark.com/etc/designs/pds/favicon-152x152.png', 'source': 'http://yelp.com/biz/6GULzhI8Zg6V5Diqyc_rWw', 'links': {'facebook': 'https://www.facebook.com/DentistsofCentralPark/'}, 'hours': {'Fri': '7AMâ7PM', 'Mon': '7AMâ7PM', 'Sat': '7AMâ7PM', 'Sun': '8AMâ2PM', 'Thu': '7AMâ7PM', 'Tue': '7AMâ7PM', 'Wed': '7AMâ7PM', 'closes_soon': 0, 'is_open': 1, 'opens_soon': 0, 'state_switch_time': '7PM'}},\n...\n]\n```\n***Example 3. Advanced search by address with increasing search square***\n```python\nfrom duckduckgo_search import ddg_maps\n\nkeywords = 'dentists'\nstreet = 'Av. Dom Pedro Massa 639'\ncity = 'SÃ£o Gabriel da Cachoeira'\nradius = 2 #km\nr = ddg_maps(keywords, street='Av. Dom Pedro Massa 639', city ='SÃ£o Gabriel da Cachoeira', radius=2)\nprint(r)\n```\n```python\n[\n{'title': 'ClÃ­nica Integrada de Odontologia', 'address': 'Avenida Presidente Castelo Branco, SÃ£o Gabriel da Cachoeira - AM, 69750, Brazil', 'country_code': 'BR', 'latitude': -0.130427164469837, 'longitude': -67.0899445932125, 'url': '', 'desc': None, 'phone': '+559734711654', 'image': None, 'source': 'https://maps.apple.com/place?q=Cl%C3%ADnica%20Integrada%20de%20Odontologia&auid=7074519049033716214&address=Avenida%20Presidente%20Castelo%20Branco,%20S%C3%A3o%20Gabriel%20da%20Cachoeira%20-%20AM,%2069750,%20Brazil&ll=-0.13042716446983657,-67.08994459321246', 'links': None, 'hours': ''},\n{'title': 'DNS Odontomedica', 'address': 'Rua Alfredo MacÃªdo, 102, SÃ£o Gabriel da Cachoeira - AM, 69750-000, Brazil', 'country_code': 'BR', 'latitude': -0.1242364, 'longitude': -67.0890056, 'url': 'http://www.dnsodontologica.com.br', 'desc': None, 'phone': '+559734712066', 'image': None, 'source': 'https://maps.apple.com/place?q=DNS%20Odontomedica&auid=9296844468385454246&address=Rua%20Alfredo%20Mac%C3%AAdo,%20102,%20S%C3%A3o%20Gabriel%20da%20Cachoeira%20-%20AM,%2069750-000,%20Brazil&ll=-0.1242364,-67.0890056', 'links': None, 'hours': ''},\n\n...\n]\n```\n***Example 4. Advanced search by coordinates with increasing search square***\n```python\nfrom duckduckgo_search import ddg_maps\n\nkeywords = 'dentists'\nlongitude = '-3,844749'\nlatitude = '-0,728722'\nradius = 1000 #km\nr = ddg_maps(keywords, longitude='-3,844749', latitude='-0,728722', radius=1000)\nprint(r)\n```\n```python\n[\n{'title': 'Blissfield Dental', 'address': 'Borno Way, Ebute Metta, Lagos, Nigeria', 'country_code': 'NG', 'latitude': 6.49685370846362, 'longitude': 3.37770581245422, 'url': '', 'desc': None, 'phone': '+2348023134407', 'image': None, 'source': 'https://maps.apple.com/place?q=Blissfield%20Dental&auid=14057124693413493763&address=Borno%20Way,%20Ebute%20Metta,%20Lagos,%20Nigeria&ll=6.496853708463621,3.3777058124542236', 'links': None, 'hours': ''},\n{'title': 'pierrefabrecotedivoire', 'address': 'Rue D35, Abidjan, CÃ´te dâIvoire', 'country_code': 'CI', 'latitude': 5.33444294059565, 'longitude': -3.97692739963531, 'url': 'https://www.instagram.com/pierrefabrecotedivoire/', 'desc': 'Welcome back to Instagram. Sign in to check out what your friends, family & interests have been capturing & sharing around the world.', 'phone': '', 'image': 'https://www.instagram.com/static/images/ico/apple-touch-icon-180x180-precomposed.png/c06fdb2357bd.png', 'source': 'https://maps.apple.com/place?q=pierrefabrecotedivoire&auid=11515715525840432861&address=Rue%20D35,%20Abidjan,%20C%C3%B4te%20d%E2%80%99Ivoire&ll=5.334442940595645,-3.976927399635315', 'links': '', 'hours': ''},\n...\n]\n```\n___\n## 6. ddg_translate() - translation by duckduckgo.com\n\n```python\nfrom duckduckgo_search import ddg_translate\n\ndef ddg_translate(keywords, from_=None, to='en', output=None):\n    \"\"\"DuckDuckGo translate\n\n    Args:\n        keywords: string or a list of strings to translate\n        from_: what language to translate from (defaults automatically). Defaults to None.\n        to: what language to translate. Defaults to \"en\".\n        output: print, csv, json. Defaults to None.\n\n    Returns:\n        DuckDuckGo translate results.\n    \"\"\"\n```\n***Returns***\n```python\n[\n{'detected_language': detected_language,\n  'translated': translated text,\n  'original': original text,},\n ...\n ]\n```\n***Example 1. Translate the string***\n```python\nfrom duckduckgo_search import ddg_translate\n\nkeywords = \"A chain is only as strong as its weakest link\"\nresults = ddg_translate(keywords, to='de')\nprint(results)\n```\n```python\n[\n{'detected_language': 'en', 'translated': 'Eine Kette ist nur so stark wie ihr schwÃ¤chstes Glied', 'original': 'A chain is only as strong as its weakest link'}\n]\n```\n***Example 2. Translate the list of strings***\n```python\nfrom duckduckgo_search import ddg_translate\n\nkeywords = [\"Ð¢Ð°ÐºÐ¸Ðµ Ð´ÐµÐ»Ð°, Ð±ÑÐ°Ñ\", \"You can lead a horse to water, but you can't make it drink.\",\n            \"Ein Spatz in der Hand ist besser, als eine Taube auf dem Dach.\"]\nresults = ddg_translate(keywords, from_=None, to='tr')\nprint(results)\n```\n```python\n[\n{'detected_language': 'ru', 'translated': 'BÃ¶yle Åeyler, kardeÅim.', 'original': 'Ð¢Ð°ÐºÐ¸Ðµ Ð´ÐµÐ»Ð°, Ð±ÑÐ°Ñ'},\n{'detected_language': 'en', 'translated': 'Bir atÄ± suya gÃ¶tÃ¼rebilirsin ama iÃ§iremezsin.', 'original': \"You can lead a horse to water, but you can't make it drink.\"},\n{'detected_language': 'de', 'translated': 'Elinizdeki serÃ§e Ã§atÄ±daki bir gÃ¼vercinden daha iyidir.', 'original': 'Ein Spatz in der Hand ist besser, als eine Taube auf dem Dach.'},\n...\n]\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deedy5/duckduckgo_search",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "duckduckgo-search",
    "package_url": "https://pypi.org/project/duckduckgo-search/",
    "platform": null,
    "project_url": "https://pypi.org/project/duckduckgo-search/",
    "project_urls": {
      "Homepage": "https://github.com/deedy5/duckduckgo_search"
    },
    "release_url": "https://pypi.org/project/duckduckgo-search/2.2.2/",
    "requires_dist": [
      "requests (>=2.28.1)",
      "click (>=8.1.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "Search for words, documents, images, news, maps and text translation using the DuckDuckGo.com search engine.",
    "version": "2.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17260093,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23bc8cc8916412e3944e681add8418bdef99ce3f0fc9694750a3b54c1f481304",
        "md5": "25be84299e540d99b73ca3ba86707654",
        "sha256": "4b062f5e937c5c616530d781a95f0ae71d29327ae3cefe4301aa9b78c614cebd"
      },
      "downloads": -1,
      "filename": "duckduckgo_search-2.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25be84299e540d99b73ca3ba86707654",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 27824,
      "upload_time": "2022-10-07T17:21:12",
      "upload_time_iso_8601": "2022-10-07T17:21:12.664833Z",
      "url": "https://files.pythonhosted.org/packages/23/bc/8cc8916412e3944e681add8418bdef99ce3f0fc9694750a3b54c1f481304/duckduckgo_search-2.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37f9dfe69dca91d0ce1478d1fbf24be063de46c0d94b5984b930709e38a76c38",
        "md5": "9114975b1f19fc6fbb18ec739098dea6",
        "sha256": "328a11e2363558894b82fec96e7b11a6f3b1e090945832be47460cd38dfb1595"
      },
      "downloads": -1,
      "filename": "duckduckgo_search-2.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9114975b1f19fc6fbb18ec739098dea6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28709,
      "upload_time": "2022-10-07T17:21:14",
      "upload_time_iso_8601": "2022-10-07T17:21:14.280413Z",
      "url": "https://files.pythonhosted.org/packages/37/f9/dfe69dca91d0ce1478d1fbf24be063de46c0d94b5984b930709e38a76c38/duckduckgo_search-2.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}