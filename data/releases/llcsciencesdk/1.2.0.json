{
  "info": {
    "author": "Ariel Delgado",
    "author_email": "arieldelgado@landlifecompany.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# LLC Science SDK\n\n> A simple way to fetch scientific data from the Science Admin.\n\n## Installation\n\n```sh\npip install llcsciencesdk\n```\n\n## Updating to a new version\n\n```sh\npip install llcsciencesdk -U\n```\n\n## Usage\n\n#### Specifying environment\n\n```python\nfrom llcsciencesdk.llc_api import ScienceSdk\n\nllc_api = ScienceSdk() # connect to production\nllc_api = ScienceSdk(environment=\"staging\") # connect to staging\nllc_api = ScienceSdk(environment=\"local\") # connect to localhost\n```\n\n#### Logging in\n\n```python\nfrom llcsciencesdk.llc_api import ScienceSdk\n\nllc_api = ScienceSdk()\nllc_api.login(\"username\", \"password\")\n```\n\n#### Getting data for fasttrack\n\n```python\nmodel_input_json = llc_api.get_model_input_fast_track_json(1) # get json data\nmodel_input_json = llc_api.get_model_input_fast_track(1) # get dict of data frames\n```\n\n#### Getting data for calibration\n\n```python\nmodel_input_json = llc_api.get_model_input_calibrate_fast_track_json(1) # get json data\nmodel_input_json = llc_api.get_model_input_calibrate_fast_track(1) # get dict of data frames\n```\n\n#### Getting data for density analyses\n\n```python\nmodel_input_json = llc_api.get_model_input_density_analyses_fast_track_json(1) # get json data\nmodel_input_json = llc_api.get_model_input_density_analyses_fast_track(1) # get dict of data frames\n```\n\n## Legacy methods\n\n#### Getting the data in JSON format\n\n```python\nmodel_input = llc_api.get_model_input_fast_track_json(1)\n```\n\n#### Getting the data as a list of DataFrames\n\n```python\nmodel_input = llc_api.get_model_input_fast_track(1)\n```\n\n#### Getting data with legacy version8 and version11 parameter names\n\n```python\nmodel_input = llc_api.get_model_input_as_json(1, legacy_parameters=True)\n```\n\n#### Getting data for old model runs using the old API structure\n\n```python\nmodel_input = llc_api.get_old_model_inputs([46])\n```\n\n#### Getting data about a Planting Design\n\n```python\nfrom llcsciencesdk.llc_api import ScienceSdk\n\nllc_api = ScienceSdk()\nllc_api.login(\"username\", \"password\")\nplanting_design_list = llc_api.get_planting_design_list()\nplanting_design_detail = llc_api.get_planting_design(10)\n\n```\n\n## Supported endpoints\n\nThe following endpoints can be called\n\n### Fast Track Endpoints (Refer to FT API docs for more info)\n\n- llc_api.get_model_input_fast_track_json\n- llc_api.get_model_input_fast_track\n- get_model_input_calibrate_fast_track_json\n- get_model_input_calibrate_fast_track\n- get_model_input_density_analyses_fast_track_json\n- get_model_input_density_analyses_fast_track\n\n### Planting Design Endpoints\n\n- llc_api.get_planting_design_list -> Returns a list of the Planting Designs(id, name)\n- llc_api.get_planting_design(id) -> Returns a detail object of the Planting Design (id, name, species, location)\n- llc_api.update_remote_sensing_dashboard_status(planting_design_id, status_code) -> update the status in the internal admin once remote sensing assets are generated\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "llcsciencesdk",
    "package_url": "https://pypi.org/project/llcsciencesdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/llcsciencesdk/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/llcsciencesdk/1.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A mini SDK for interacting with the LLC Science Admin",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13772358,
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "d9001b1994556f042daa7c9237b5cc1e24e56979f7ae2ea8f32aa4d14f835fc7",
        "md5": "5cb9cc7d26141b05f12045ef33381d38",
        "sha256": "861ac478a8b4869b5b299557f66c6a91e791309e310ed616628f813625f21247"
      },
      "downloads": -1,
      "filename": "llcsciencesdk-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cb9cc7d26141b05f12045ef33381d38",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7478,
      "upload_time": "2022-05-10T15:02:18",
      "upload_time_iso_8601": "2022-05-10T15:02:18.331773Z",
      "url": "https://files.pythonhosted.org/packages/d9/00/1b1994556f042daa7c9237b5cc1e24e56979f7ae2ea8f32aa4d14f835fc7/llcsciencesdk-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b2c31f0cf819a719ab7de0065487e5219b7104c61e6c30d6de484892bcf49137",
        "md5": "dbe32f42ca0964cd1e55c0edab3b4b71",
        "sha256": "9c49cdd6c2f4259add0ebda2374da4e1b8cf81e45cdf5bff17739a0a41e91446"
      },
      "downloads": -1,
      "filename": "llcsciencesdk-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dbe32f42ca0964cd1e55c0edab3b4b71",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6354,
      "upload_time": "2022-05-10T15:02:20",
      "upload_time_iso_8601": "2022-05-10T15:02:20.916882Z",
      "url": "https://files.pythonhosted.org/packages/b2/c3/1f0cf819a719ab7de0065487e5219b7104c61e6c30d6de484892bcf49137/llcsciencesdk-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}