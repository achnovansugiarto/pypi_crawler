{
  "info": {
    "author": "Walter Doekes, OSSO B.V.",
    "author_email": "wjdoekes+dutree@osso.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Filesystems",
      "Topic :: Utilities"
    ],
    "description": "dutree :: Disk usage summary\n============================\n\n*dutree* shows a summary of the directories/files which take up the most\nspace.\n\nInstead of showing *only the root of the files* with sizes, or the\ndetails of *every file*, it shows *only the paths taking up the most\nspace*.\n\nExample usage::\n\n    $ dutree /srv\n\nAnnotated output, where only paths of >5% of the total size are shown\n(which is about 4GB for this dataset)::\n\n     12.1 G  /srv/data/audiofiles/\n              ^-- audiofiles contains files/dirs with a total of 12.1G\n                  but it does NOT contain a single dir or file larger\n                  than 4G.\n      4.3 G  /srv/data/callrecordings/unmatched/\n      4.5 G  /srv/data/fax/\n     17.5 G  /srv/data/playlists/\n     34.4 G  /srv/data/twinfield_invoices/1/\n      7.8 G  /srv/data/*\n               ^-- data contains more files/directories than shown above\n                   but those that don't total above 4G are merged into\n                   this \"leftover\" node. that includes everything in\n                   /twinfield_invoices/ except for the /1/ subdirectory\n                   which has its individual listing above.\n     32   B  /srv/*\n               ^-- only /data/ is in /srv/, but the directory itself also\n                   takes up a tiny bit of space\n      -----\n     80.6 G  TOTAL (86558511658)\n\n**NOTE**: The directories do not count the size of themselves, only of\ntheir contents. This explains any discrepancies with ``du -sb`` output.\n\n**NOTE**: On filesystems with built-in compression (like ZFS) or with many\nsparse files, you may want to check the --count-blocks option. This\nshould better reflect the actual used size (and align with ``du -sh``).\n\n\nLibrary usage::\n\n    >>> from dutree import Scanner\n    >>> scanner = Scanner('/srv')\n    >>> tree = scanner.scan(use_apparent_size=True)\n    >>> tree.app_size()\n    86558511658\n\n    >>> len(tree.get_leaves())\n    7\n\n    >>> leaf0 = tree.get_leaves()[0]\n    >>> leaf0.name()\n    '/srv/data/audiofiles/'\n\n    >>> leaf0.app_size() / (1024.0 * 1024 * 1024)\n    12.092280263081193\n\n\nHistory\n-------\n\n* v1.6\n\n  - **Fix so the tests work with Python 3 as well.**\n  - **Fix grave bugs with real size.**\n    The real size calculation was wrong sometimes, it raised assertion\n    sometimes and the leaf count would be off sometimes.\n\n* v1.5\n\n  - **Add apparent vs. real size.**\n    Deprecates ``node.size()``. Use ``node.app_size()`` instead.\n    Get the real used size using ``node.use_size()``.\n    Group by real used size by passing ``use_apparent_size=False`` to\n    ``scan()``.\n  - **Don't die if we cannot enter directories.**",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ossobv/dutree",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dutree",
    "package_url": "https://pypi.org/project/dutree/",
    "platform": "",
    "project_url": "https://pypi.org/project/dutree/",
    "project_urls": {
      "Homepage": "https://github.com/ossobv/dutree"
    },
    "release_url": "https://pypi.org/project/dutree/1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Disk usage summary, showing large dirs/files",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6472543,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db0be82de404537af7e8513310247a5e1902215e6c5ebb9e89f027d79fb61e2e",
        "md5": "210d46531855f07261b82033d94fe0dc",
        "sha256": "d6656d172489ddc36018fa2bb2f4ee98a73b581e2a7c65be7a50e0b02a9d274e"
      },
      "downloads": -1,
      "filename": "dutree-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "210d46531855f07261b82033d94fe0dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12830,
      "upload_time": "2019-08-27T09:05:09",
      "upload_time_iso_8601": "2019-08-27T09:05:09.745026Z",
      "url": "https://files.pythonhosted.org/packages/db/0b/e82de404537af7e8513310247a5e1902215e6c5ebb9e89f027d79fb61e2e/dutree-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}