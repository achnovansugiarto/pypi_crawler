{
  "info": {
    "author": "Yann Fouillat (alias Gagaro)",
    "author_email": "yann.fouillat@makina-corpus.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===============\nTracking Fields\n===============\n\n.. image:: https://travis-ci.org/makinacorpus/django-tracking-fields.png\n    :target: https://travis-ci.org/makinacorpus/django-tracking-fields\n\n.. image:: https://coveralls.io/repos/makinacorpus/django-tracking-fields/badge.png?branch=master\n    :target: https://coveralls.io/r/makinacorpus/django-tracking-fields?branch=master\n\n\nA Django app allowing the tracking of objects field in the admin site.\n\nRequirements\n------------\n\n* Django 1.8: See version 0.1 for earlier version of Django.\n* django-cuser: Only if you want to track which user made the modifications.\n\nQuick start\n-----------\n\n1. Add \"tracking_fields\" to your INSTALLED_APPS settings.\n\n2. Add the ``tracking_fields.decorators.track`` decorator to your models with the fields you want to track as parameters::\n\n     @track('test', 'm2m')\n     class MyModel(models.Model):\n         test = models.BooleanField('Test', default=True)\n         m2m = models.ManyToManyField(SubModelTest, null=True)\n\n3. Your objects are now tracked. See the admin site for the tracking information.\n\n4. If you want to track who does the changes, please install the ``django-cuser`` app.\n\n5. You can also track fields of related objects::\n\n     class MyModel(models.Model):\n         test = models.BooleanField('Test', default=True)\n\n     @track('related__test')\n     class MyOtherModel(models.Model):\n         related = models.ForeignKey(MyModel)\n\n\n6. You can run the tests by doing ``make test`` (make sure to have ``django-cuser`` installed).\n\nUpgrades from 0.1 or 1.0.1\n==========================\n\nThe change to UUID is a mess to do in a migration. The migrations have thus been squashed. You can either alter your fields by hand and do a fake migration afterward or remove your tracking fields tables and run migrations again::\n\n    ./manage.py migrate --fake tracking_fields zero\n    ./manage.py migrate tracking_fields\n\nFAQ\n===\n\n* Why does my relationship change create two events ?\n\n  Please see https://docs.djangoproject.com/en/1.7/ref/models/relations/#direct-assignment\n\n\nAUTHORS\n=======\n\n* Yann FOUILLAT (alias Gagaro) <yann.fouillat@makina-corpus.com>\n\n|makinacom|_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\n\n=======\nLICENSE\n=======\n\n* GPLv3+\n\n\nChangelog\n---------\n\n1.0.6\n~~~~~\n\n* Fix unicode error in admin with Python 3.4 and django_cuser\n\n1.0.5\n~~~~~\n\n* Fix MANIFEST\n\n1.0.4\n~~~~~\n\n* Order TrackingEvent by -date\n\n1.0.3\n~~~~~\n\n* Fix MANIFEST\n\n1.0.2\n~~~~~\n\n* Include migrations in MANIFEST\n\n1.0.0\n~~~~~\n\n* Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makinacorpus/django-tracking-fields",
    "keywords": null,
    "license": "GPLv3+",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-tracking-fields",
    "package_url": "https://pypi.org/project/django-tracking-fields/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-tracking-fields/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/makinacorpus/django-tracking-fields"
    },
    "release_url": "https://pypi.org/project/django-tracking-fields/1.0.6/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django app allowing the tracking of objects field in the admin site.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13438001,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4977b1eb87a468209b15ea7668810aa102007e97f778f5d22070d43e1e2d1385",
        "md5": "550dd76099a4b7759878893918b103fb",
        "sha256": "1ec41a74ecc0885b4346065da3ddbb25d19aef7d0b47407e8fed300b9b958caf"
      },
      "downloads": -1,
      "filename": "django-tracking-fields-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "550dd76099a4b7759878893918b103fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58772,
      "upload_time": "2016-02-04T07:50:16",
      "upload_time_iso_8601": "2016-02-04T07:50:16.307630Z",
      "url": "https://files.pythonhosted.org/packages/49/77/b1eb87a468209b15ea7668810aa102007e97f778f5d22070d43e1e2d1385/django-tracking-fields-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}