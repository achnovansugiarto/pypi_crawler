{
  "info": {
    "author": "Tommy Dougiamas",
    "author_email": "tom@digitalnook.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Maze Solver\n#### Created by Tommy Dougiamas  \n\nThis algorithm finds the shortest path through black and white maze images. It outputs an image with the path marked in green.\n\n\n### Installing\n\n**Easy Installation**\n\nCheck that your python version is >=3.5 with `python3 -V`. (You might have to use `python3.5` or similar).\nAlso make sure that pip is installed with `python3 -m pip -V`.\n\nTo install, simply run `python3 -m pip install mazesolver` on the command line as root/admin. \n\nYou can run the tool using `mazesolver`.\n\n**Install from source**\n\n##### For GNU/Linux:\n\n`git clone https://github.com/exciteabletom/mazesolver.git`\n\n`cd mazesolver`\n\n`python3 setup.py build`\n\n`sudo python3 setup.py install`\n\n##### For Windows CMD:\n\nMake sure your prompt has admin permissions.\n\n`git clone https://github.com/exciteabletom/mazesolver.git`\n\n`chdir mazesolver`\n\n`python3 setup.py build`\n\n`python3 setup.py install`\n\n\n\n### What are the rules for maze images?\n- Walls marked with black pixels and paths marked with white pixels\n\n- Walls around the entire maze\n\n- One entrance on the top row and one exit on the bottom row\n\n*If this is confusing, check out some of the example mazes in the **pics** directory.*\n\n\n\n### How do I use it?\n\nYou can use `mazesolver --help` to get a list of commands.\n\nMake sure that your image meets the specifications above.\n\nNormal usage will look something like this: `mazesolver -i path/to/input_img -o path/to/output_dir`\n\n\n\n### How does the algorithm work?\n\n- Start at the entrance and label it zero.\n\n- Move to any neighbouring cells and mark them with 1\n\n- Move to any of the cells neighbouring the ones marked 1 and label them 2\n\n- Continue doing this until all cells are marked\n\n- Start from the exit of the maze and move to any neighbouring cell that == the current cell's number -1. Until we reach 0 (the entrance).\n\nWe now have the shortest path from the entrance to the exit!\n\n\n> Licensed under GNU GPLv3",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/exciteabletom/mazesolver",
    "keywords": "maze algortihm image solve",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mazesolver",
    "package_url": "https://pypi.org/project/mazesolver/",
    "platform": "",
    "project_url": "https://pypi.org/project/mazesolver/",
    "project_urls": {
      "Homepage": "https://github.com/exciteabletom/mazesolver"
    },
    "release_url": "https://pypi.org/project/mazesolver/1.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A shortest-path maze solving algorithm for image-based mazes.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7763143,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5d1c27ee914a658f22450f1dc036156f20311c4e0a285dfe91480b32118238a",
        "md5": "97bcba53c56b01f90815982de7862790",
        "sha256": "ba2b30078c173d9e83db08aa3bde3c161f1fef42f6032ccb91de7b0f6dea4005"
      },
      "downloads": -1,
      "filename": "mazesolver-1.2.2.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "97bcba53c56b01f90815982de7862790",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8759,
      "upload_time": "2020-03-19T16:46:14",
      "upload_time_iso_8601": "2020-03-19T16:46:14.387534Z",
      "url": "https://files.pythonhosted.org/packages/d5/d1/c27ee914a658f22450f1dc036156f20311c4e0a285dfe91480b32118238a/mazesolver-1.2.2.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3c17bf8033411b1c4509459a6c0a7246dfebb527f984085e8fef6721ef4de74",
        "md5": "b5368119e43362f9c5a19a545102daa1",
        "sha256": "513cb2e93e2c1c2dcda76ce408604b3369248939f216cfde09c9976b0f30d3df"
      },
      "downloads": -1,
      "filename": "mazesolver-1.2.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "b5368119e43362f9c5a19a545102daa1",
      "packagetype": "bdist_egg",
      "python_version": "3.8",
      "requires_python": ">=3.5",
      "size": 11901,
      "upload_time": "2020-03-19T04:38:20",
      "upload_time_iso_8601": "2020-03-19T04:38:20.453640Z",
      "url": "https://files.pythonhosted.org/packages/e3/c1/7bf8033411b1c4509459a6c0a7246dfebb527f984085e8fef6721ef4de74/mazesolver-1.2.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93dd80eaa3aac517893d8ffd1eb8d37294db4c244c7efe7f10422922c486bfd9",
        "md5": "d669876b5dc178fb514ab3d4aed53c88",
        "sha256": "4fbae56a63ee1e898b9b980e7718f5f3ea2fb0630ca1851b1cb2cfc64cf05720"
      },
      "downloads": -1,
      "filename": "mazesolver-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d669876b5dc178fb514ab3d4aed53c88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 19337,
      "upload_time": "2020-03-19T16:50:27",
      "upload_time_iso_8601": "2020-03-19T16:50:27.648158Z",
      "url": "https://files.pythonhosted.org/packages/93/dd/80eaa3aac517893d8ffd1eb8d37294db4c244c7efe7f10422922c486bfd9/mazesolver-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}