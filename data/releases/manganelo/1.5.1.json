{
  "info": {
    "author": "Joshua Nixon",
    "author_email": "joshuanixonofficial@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Unofficial Manganelo API\n\n###### Package to scrape the Manganelo website. Pull requests are encouraged!\n\nInstallation\n-\n**Python 3.7 +**\n```cmd\npip install manganelo\n```\n\nExamples\n-\n\n##### Manga searching\n```python\nfrom manganelo import SearchManga\n\n\"\"\"\nThreaded\n    Request is made on a seperate thread and is joined when results() is called, \n    this means that you can do things while the request is being sent.\n\nNot threaded (Single-threaded):\n    Request is made on the same thread meaning execution will halt while it is sent\n\"\"\"\nsearch = SearchManga(\"Mythical Realm\", threaded=True)\n\n# .results() returns a generator - We create a list from the generator here\nresults = list(search.results())\n\n# results = [MangaSearchResult(title=?, url=?), MangaSearchResult(title=?, url=?)]\n```\n\n##### Indiviual Manga Homepage\n```python\n...\n\nfrom manganelo import MangaInfo\n\nbest_result = results[0]\n\nmanga_info = MangaInfo(best_result.url, threaded=True)\n\nmanga_page = manga_info.results()\n```\n\n##### Indiviual Manga Homepage Data (manga_page)\n\n*Search Query: Mythical Realm*\n\nAttribute | Value (Shortened)\n--- | ---\nurl                | https://manganelo.com/manga/the_mythical_realm\ntitle              | The Mythical Realm\nauthors            | ['Wu Zui', 'Liao Jia Le']\nstatus             | Ongoing\ngenres             | ['Action', 'Adventure', 'Comedy', 'Fantasy', 'Manhua', 'Martial arts', 'Shounen']\nalternative_titles | ['ä»™ä¾ ä¸–ç•Œ (Chinese)', 'Xian Xia Shi Jie', 'Tháº¿ Giá»›i TiÃªn Hiá»‡p (Vietnamese - Tiáº¿ng Viá»‡t - TV)']\nchapters           | [MangaChapter(url='https://manganelo.com/chapter/the_mythical_realm/chapter_0', title='Chapter 0 : Prologue', num=0)...]\nlast_updated       | 2020-04-28 23:13:00\nviews              | 38488304\nicon               | https://avt.mkklcdnv6.com/43/w/1-1583465436.jpg\ndescription        | From OSTNT: The Mythical Realm: A world of blood, a world where the strong triumph ov...\n\n##### Chapter Download\n```python\n...\n\nfrom manganelo import DownloadChapter\n\nfor chapter in manga_page.chapters:\n\tfile = f\"./Naruto {chapter.num}.pdf\"\n\n\tdl = DownloadChapter(chapter.url, file)\n\n\tresults = dl.results()\n\n\tif results.saved_ok:\n\t\tprint(results.path)\n```\n\n##### Chapter Information\n```python\n...\n\nfrom manganelo import ChapterInfo\n\n# Example: https://manganelo.com/chapter/up919279/chapter_1.1\ninfo = ChapterInfo(chapter.url)\n\nresults = info.results()\n\nprint(results.title, results.url, results.image_urls)\n```\n\n##### Complete Usage\n```python\nsearch = SearchManga(\"Raid\", threaded=False)\n\nresults = list(search.results())\n\nbest_result = results[0]\n\nmanga_info = MangaInfo(best_result._src_url, threaded=False)\n\nmanga_page = manga_info.results()\n\nfor chapter in manga_page.chapters:\n\tfile = f\"./Raid {chapter.num}.pdf\"\n\n\tdl = DownloadChapter(chapter._src_url, file)\n\n\tresults = dl.results()\n\n\tif results.saved_ok:\n\t\tprint(results.path, results.percent_saved)\n```\n\nContact Me\n-\nI am happy to respond to emails at **joshuanixonofficial@gmail.com**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/nixonjoshua98/manganelo/archive/v1.5.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nixonjoshua98/manganelo",
    "keywords": "manga,manganelo,scrapper,web,mangakakalot,thread,comic,manhwa",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manganelo",
    "package_url": "https://pypi.org/project/manganelo/",
    "platform": "",
    "project_url": "https://pypi.org/project/manganelo/",
    "project_urls": {
      "Download": "https://github.com/nixonjoshua98/manganelo/archive/v1.5.1.tar.gz",
      "Homepage": "https://github.com/nixonjoshua98/manganelo"
    },
    "release_url": "https://pypi.org/project/manganelo/1.5.1/",
    "requires_dist": [
      "bs4",
      "requests",
      "reportlab",
      "pillow"
    ],
    "requires_python": ">=3.7",
    "summary": "Unofficial API for the Manganelo website.",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16503946,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "015e856cf9530250e1fd9becdd5ba9f3da35a8a98c53ae00a112195b672c9ee4",
        "md5": "7de351fa2a10314e633705d9fd350280",
        "sha256": "7c4aa3353dfc812f19e0e944fdd01291e5c8673fc70ce14a9f8f9a30a56e17d5"
      },
      "downloads": -1,
      "filename": "manganelo-1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7de351fa2a10314e633705d9fd350280",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10567,
      "upload_time": "2020-06-10T11:41:08",
      "upload_time_iso_8601": "2020-06-10T11:41:08.581602Z",
      "url": "https://files.pythonhosted.org/packages/01/5e/856cf9530250e1fd9becdd5ba9f3da35a8a98c53ae00a112195b672c9ee4/manganelo-1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24a0667b971e9950d9c9741ec8b025ef7528efbb68b894e5532f99e786e64efb",
        "md5": "8da7ebe22b6be9303578a3b573e352a1",
        "sha256": "87aebc4310a5f77c6653e75dc9b941f859cf4c6a1eff348426fbab2fac4af8a0"
      },
      "downloads": -1,
      "filename": "manganelo-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8da7ebe22b6be9303578a3b573e352a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7720,
      "upload_time": "2020-06-10T11:41:09",
      "upload_time_iso_8601": "2020-06-10T11:41:09.883125Z",
      "url": "https://files.pythonhosted.org/packages/24/a0/667b971e9950d9c9741ec8b025ef7528efbb68b894e5532f99e786e64efb/manganelo-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}