{
  "info": {
    "author": "LucaCappelletti94",
    "author_email": "cappelletti.luca94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "downloaders\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability|\n|code_climate_maintainability| |pip| |downloads|\n\nPython package to handle the download of multiple types of files.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install downloaders\n\nUsage examples\n----------------------------------------------\n\n.. code:: python\n\n    from downloaders import BaseDownloader\n\n    downloader = BaseDownloader()\n    urls = [...]\n    downloader.download(urls)\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometimes\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nTroubleshooting\n-----------------------------------------------\n\nMacOS multiprocessing nightmare fuel\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nCupertino has a gift for us: somehow multiprocessing on MacOS in some specific\nastral configurations that I have yet to fully understand, it will crash with the\nfollowing error:\n\n.. code:: bash\n\n    The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec().\n    Break on __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__() to debug.\n\nApparently, this can be easily fixed by changing the way multiprocessing spawns\nprocesses, that is:\n\n.. code:: python\n\n    import platform, multiprocessing\n\n    if platform.system() == \"Darwin\":\n        multiprocessing.set_start_method('spawn')\n\nThe aforementioned solution was proposed on `this StackOverflow question <https://stackoverflow.com/questions/30669659/multiproccesing-and-error-the-process-has-forked-and-you-cannot-use-this-corefou>`__.\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/downloaders.png\n   :target: https://travis-ci.org/LucaCappelletti94/downloaders\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_downloaders&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_downloaders\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_downloaders&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_downloaders\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_downloaders&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_downloaders\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/downloaders/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/downloaders?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/downloaders.svg\n    :target: https://badge.fury.io/py/downloaders\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/downloaders\n    :target: https://pepy.tech/project/downloaders\n    :alt: Pypi total project downloads\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/35fb30e0228dbd2a03cc/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/downloaders/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/35fb30e0228dbd2a03cc/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/downloaders/test_coverage\n    :alt: Code Climate Coverage",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaCappelletti94/downloaders",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "downloaders",
    "package_url": "https://pypi.org/project/downloaders/",
    "platform": null,
    "project_url": "https://pypi.org/project/downloaders/",
    "project_urls": {
      "Homepage": "https://github.com/LucaCappelletti94/downloaders"
    },
    "release_url": "https://pypi.org/project/downloaders/1.0.15/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package to handle download of multiple types of files.",
    "version": "1.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13401571,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df973118b57435508cd241c1380c20398fe7f46f8ace994cc47bdcef58729e1b",
        "md5": "64d6b4294801e0f60ba50f13ec43f6e3",
        "sha256": "7381178230398e804794229e9f42338c4f408a0368c83da90e730005854523de"
      },
      "downloads": -1,
      "filename": "downloaders-1.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "64d6b4294801e0f60ba50f13ec43f6e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10661,
      "upload_time": "2022-04-04T15:41:26",
      "upload_time_iso_8601": "2022-04-04T15:41:26.505980Z",
      "url": "https://files.pythonhosted.org/packages/df/97/3118b57435508cd241c1380c20398fe7f46f8ace994cc47bdcef58729e1b/downloaders-1.0.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}