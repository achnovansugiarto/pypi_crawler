{
  "info": {
    "author": "John Hawkins",
    "author_email": "john@getting-data-science-done.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "MinViME - Minimum Viable Model Estimator \n=====================================================\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![build](https://github.com/john-hawkins/minvime/workflows/build/badge.svg)\n[![PyPI](https://img.shields.io/pypi/v/minvime.svg)](https://pypi.org/project/minvime)\n[![Documentation Status](https://readthedocs.org/projects/minvime/badge/?version=latest)](https://minvime.readthedocs.io/en/latest/?badge=latest)\n  \n:copyright: 2020 John Hawkins\n\n```\nSTATUS: Functional\n```\n\nFor many business problems it is worthwhile understanding how accurate a\nmachine learning model would need to be before you try and build it.\n\nThis information could be useful in prioritising projects or determining the\nquantity and quality of data that will be needed. Extremely accurate models\nfor complicated problems typically require large amounts of data.\n\nThis application is a tool that allows you to estimate\nwhat the minimum performance characteristics would need to be for a machine\nlearning problem. To make this estimate you will need to supply parameters\nthat describe the costs and benefits of the context in which it will be used.\n\nIf you use MinViME in academic work please reference the following paper:\n```\nHawkins, John.,(2020), Minimum Viable Model Estimates for Machine Learning Projects,\nProceedings of the 6th International Conference on Computer Science, \nEngineering And Applications (CSEA 2020), pages 37-46, Issue 18, Volume 10,\nDOI: 10.5121/csit.2020.101803\n```\n\n### For Binary Classification Problems \n\nThe application will make the estimate in terms of the ROC plot characteristics \nthat satisfy the requirements. The constraints need to be provided as:\n\n* A cost/benefit payoff matrix\n* The required ROI\n* Information about the volume and frequency of the event you are predicting.\n\n\nSee examples in the [scripts directory](https://github.com/john-hawkins/minvime/tree/master/scripts)\n\n### For Regression/Time Series Problems\n```\nIn Progress\n```\nThe application will make an estimate in terms of the minimum RMSE, MAE, and MAPE.\nYou will need to specify how the difference between actual and predicted values\nwill affect the business outcome. This can be as either proportional costs for \nerrors that are too high ot too low, or as costs for predictions above a specified\nmargin of error.\n\n\n#### Caveats\n\nIn order to produce a MAPE score regardless of the distribution we add a nominal \nvalue of 0.0001 to calculate the percentage error when actuals are zero. \nThere are many situations in which this would not be acceptable, for example,\nwhen the quantities being prediced are in fact very low value real numbers. \nIf your target distribution has many zero values and \nis confined to values that very close to zero then please ignore the MAPE estimates. \n\n\n## Usage\n\nYou can use this application in multiple ways. The core application will launch a Flask\nweb application through which you can enter the parameters of the business problem you\nrequire an estimate for.\n\n### Web Application\n\nThis web application can be launched via the runner:\n\n```\n./minvime-runner.py \n```\n\nOr you caniInvoke the directory as a package:\n\n```\npython -m minvime\n```\n\nOr simply install the package and use the command line application directly\n\n#### Installation\n\nInstallation from the source tree:\n\n```\ngit clone https://github.com/john-hawkins/minvime\ncd minvime\npython setup.py install\n```\n\n(or via pip from PyPI):\n\n```\npip install minvime \n```\n\nNow, the ``minvime`` command will launch the application \n\n```\nminvime\n```\n\n### Library\n\nAlternatively you can use minvime as a library of functions to use inside your own\napplications or Jupyter Notebooks\n\n```\nimport minvime as mvime\n\n```\n\n\n# Acknowledgements\n\nPython package built using the\n[bootstrap cmdline template](https://github.com/jgehrcke/python-cmdline-bootstrap)\n by [jgehrcke](https://github.com/jgehrcke)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://getting-data-science-done.com",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minvime",
    "package_url": "https://pypi.org/project/minvime/",
    "platform": "",
    "project_url": "https://pypi.org/project/minvime/",
    "project_urls": {
      "Documentation": "https://minvime.readthedocs.io",
      "Homepage": "http://getting-data-science-done.com",
      "Source": "https://github.com/john-hawkins/minvime",
      "Tracker": "https://github.com/john-hawkins/minvime/issues"
    },
    "release_url": "https://pypi.org/project/minvime/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Application for Estimating Minimum Viable Model Performance.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10056632,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46886c6f98fa5894c05fb56a84cd7e0c0d35adf066e23728dbeb3c3c9b8cbb0b",
        "md5": "b853fa4e50b5423d48c48774c1dd872a",
        "sha256": "74f83b8b7b50aea56cd848421d2e5c4ada61db68668648a4272b7d38bb2df9c7"
      },
      "downloads": -1,
      "filename": "minvime-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b853fa4e50b5423d48c48774c1dd872a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 82642,
      "upload_time": "2021-04-13T22:42:34",
      "upload_time_iso_8601": "2021-04-13T22:42:34.300526Z",
      "url": "https://files.pythonhosted.org/packages/46/88/6c6f98fa5894c05fb56a84cd7e0c0d35adf066e23728dbeb3c3c9b8cbb0b/minvime-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}