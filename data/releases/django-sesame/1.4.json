{
  "info": {
    "author": "Aymeric Augustin",
    "author_email": "aymeric.augustin@m4x.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "django-sesame\n#############\n\nIntroduction\n============\n\n`django-sesame`_ provides one-click login for your Django project. It uses\nspecially crafted URLs containing an authentication token, for example:\nhttps://example.com/?url_auth_token=AAAAARchl18CIQUlImmbV9q7PZk%3A89AEU34b0JLSrkT8Ty2RPISio5\n\nIt's useful if you want to share private content without requiring your\nvisitors to remember a username and a password or to go through an\nauthentication process involving a third-party.\n\ndjango-sesame is tested with:\n\n- Django 1.11 (LTS) and 2.0.\n- all supported Python versions.\n\nIt requires ``django.contrib.auth``. It's compatible with custom user models.\n\ndjango-sesame is released under the BSD license, like Django itself.\n\n.. _django-sesame: https://github.com/aaugustin/django-sesame\n\nA few words about security\n==========================\n\n**Before using django-sesame in your project, you should review the following\nadvice carefully.**\n\nThe major security weakness in django-sesame is a direct consequence of the\nfeature it implements: **whoever obtains an authentication token will be able\nto log in to your website.** URLs end up in countless insecure places: emails,\nreferer headers, proxy logs, browser history, etc. You can't avoid that. So\nuse django-sesame only for mundane things.\n\n**If a data leak would affect you in non-trivial ways, don't use this library.\nYou have been warned.**\n\nOtherwise, a reasonable attempt has been made to provide a secure solution.\ndjango-sesame uses Django's signing framework to create signed tokens.\n\nTokens are tied to the primary key and the password of the corresponding user.\nChanging the password invalidates the token. When the authentication backend\nuses salted passwords — that's been the default in Django for a long time —\nthe token is invalidated even if the new password is identical to the old one.\n\nBy default, tokens never expire. If you want them to expire after a given\namount of time, set the ``SESAME_MAX_AGE`` setting to a duration in seconds.\nThen each token will contain the time it was generated at and django-sesame\nwill check if it's still valid at each login attempt.\n\nHow to\n======\n\n1.  Add ``sesame.backends.ModelBackend`` to ``AUTHENTICATION_BACKENDS``::\n\n        AUTHENTICATION_BACKENDS += ['sesame.backends.ModelBackend']\n\n2.  Add ``sesame.middleware.AuthenticationMiddleware`` to ``MIDDLEWARE``::\n\n        MIDDLEWARE += ['sesame.middleware.AuthenticationMiddleware']\n\n    The best position for ``sesame.middleware.AuthenticationMiddleware`` is\n    just after ``django.contrib.auth.middleware.AuthenticationMiddleware``.\n\n3. Generate authentication tokens with ``sesame.utils.get_query_string(user)``.\n\nThat's all!\n\nGenerating URLs\n===============\n\ndjango-sesame provides two functions to generate authenticated URLs.\n\n1. ``sesame.utils.get_query_string(user)`` returns a complete query string\n   that you can append to any URL to enable one-click login.\n\n2. ``sesame.utils.get_parameters(user)`` returns a dictionary of GET\n   parameters to add to the query string, if you're already building one.\n\nShare resulting URLs with your users while ensuring adequate confidentiality.\n\nBy default, the URL parameter is called ``url_auth_token``. You can set the\n``SESAME_TOKEN_NAME`` setting to a shorter name that doesn't conflict with\nquery string parameters used by your application.\n\nStateless authentication\n========================\n\nTechnically, django-sesame can provide stateless authenticated navigation\nwithout ``django.contrib.sessions``, provided all internal links include the\nauthentication token, but that increases the security issues explained above.\n\nIf ``django.contrib.sessions.middleware.SessionMiddleware`` and\n``django.contrib.auth.middleware.AuthenticationMiddleware`` aren't enabled,\n``sesame.middleware.AuthenticationMiddleware`` sets ``request.user`` to the\ncurrently logged-in user or ``AnonymousUser()``.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aaugustin/django-sesame",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sesame",
    "package_url": "https://pypi.org/project/django-sesame/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sesame/",
    "project_urls": {
      "Homepage": "https://github.com/aaugustin/django-sesame"
    },
    "release_url": "https://pypi.org/project/django-sesame/1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "URL-based authentication, an application that provides one-click login via specially crafted URLs",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14573471,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75831dd29b174f0eedad987a24de30065b1ba49d2202c1f1631df99e81b1aab1",
        "md5": "7bfd3729c6b980683eff364c5c0f24b5",
        "sha256": "7da5072e3f2298b94ec78c838d467d4585cbc6efec2248d326b6ae4fb2c32271"
      },
      "downloads": -1,
      "filename": "django_sesame-1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bfd3729c6b980683eff364c5c0f24b5",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "requires_python": null,
      "size": 10079,
      "upload_time": "2018-04-29T07:45:31",
      "upload_time_iso_8601": "2018-04-29T07:45:31.639875Z",
      "url": "https://files.pythonhosted.org/packages/75/83/1dd29b174f0eedad987a24de30065b1ba49d2202c1f1631df99e81b1aab1/django_sesame-1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "527243003e3133a008ce6efd983c0cb6e12e42638ddc3172b49d679965cb32fc",
        "md5": "566529e8be85fac14ea5c0c7369bcaae",
        "sha256": "4a2d88417fe49c62c73e061cf03510697eba01a72ea57763942a2a9eda1e3820"
      },
      "downloads": -1,
      "filename": "django-sesame-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "566529e8be85fac14ea5c0c7369bcaae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9507,
      "upload_time": "2018-04-29T07:45:29",
      "upload_time_iso_8601": "2018-04-29T07:45:29.619682Z",
      "url": "https://files.pythonhosted.org/packages/52/72/43003e3133a008ce6efd983c0cb6e12e42638ddc3172b49d679965cb32fc/django-sesame-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}