{
  "info": {
    "author": "Jason McClellan<jason@jasonmcclellan.io>, Koert van der Veer<koert@ondergetekende.nl>",
    "author_email": "jason@jasonmccllelan.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Project No Longer Maintained\n\nWARNING: This is fork of the jmcclell's repo for Django 4.0 compatibility. I'll try to live this package with your support\n\nThis project lived a long and useful life, but it's been inactive for quite some time and I believe its relevancy has faded.\n\nIt will remain here on Github in a read-only, archived state but there will be no more updates.\n\n\n\n\n\n[![PyPi version](https://img.shields.io/pypi/v/django-bootstrap-pagination.svg)](https://pypi.python.org/pypi/django-bootstrap-pagination)\n[![PyPi downloads](https://img.shields.io/pypi/dm/django-bootstrap-pagination.svg)](https://pypi.python.org/pypi/django-bootstrap-pagination)\n[![Build Status](https://travis-ci.org/jmcclell/django-bootstrap-pagination.png?branch=master)](https://travis-ci.org/jmcclell/django-bootstrap-pagination)\n\n\n## Django Bootstrap Pagination\n\n*Bootstrap Compatibility*\n\n| Versions         | Bootstrap Versions  | Notes                                                  |\n| -----------------| ------------------- | -------------------------------------------------------|\n| < 1.1.0          | 2.x                 |                                                        |\n| > 1.1.0, < 1.7.0 | 3.x                 |                                                        |\n| >= 1.7.0         | 3.x, 4.x            | bootstrap_pager is only compatible with Bootstrap  3.x |\n\n\nThis application serves to make using Twitter's Bootstrap Pagination styles\nwork seamlessly with Django Page objects. By passing in a Page object and\none or more optional arguments, Bootstrap pagination bars and pagers can\nbe rendered with very little effort.\n\nCompatible with Django **1.2+**\n\n## Installation\n\n### PIP\n\nThis will install the latest stable release from PyPi.\n\n```\n    pip install django-bootstrap-pagination\n```\n\n### Download\n\nDownload the latest stable distribution from:\n\nhttp://pypi.python.org/pypi/django-bootstrap-pagination\n\nDownload the latest development version from:\n\ngithub @ http://www.github.com/jmcclell/django-bootstrap-pagination\n\n```\n    setup.py install\n```\n\n## Usage\n\n### Setup\n\nMake sure you include bootstrap_pagination in your installed_apps list in settings.py:\n\n```\n    INSTALLED_APPS = (\n        'bootstrap_pagination',\n    )\n```\n\nAdditionally, include the following snippet at the top of any template that makes use of\nthe pagination tags:\n\n```\n    {% load bootstrap_pagination %}\n```\n\nFinally, make sure that you have the request context processor enabled:\n\n```\n    # Django 1.8+\n    TEMPLATES = [\n        {\n            # ...\n            'OPTIONS': {\n                context_processors': [\n                    # ...\n                    'django.template.context_processors.request',\n                ]\n            }\n        }\n    ]\n\n    # Django < 1.8\n    TEMPLATE_CONTEXT_PROCESSORS = {\n        \"django.core.context_processors.request\",\n    )\n```\n\n# bootstrap_paginate\n\n**All Optional Arguments**\n\n- **range** - Defines the maximum number of page links to show\n- **show_prev_next** - Boolean. Defines whether or not to show the Previous and Next\n                       links. (Accepts `\"true\"` or `\"false\"`)\n- **previous_label** - The label to use for the Previous link\n- **next_label** - The label to use for the Next link\n- **show_first_last** - Boolean. Defines whether or not to show the First and Last links.\n                       (Accepts `\"true\"` or `\"false\"`)\n- **first_label** - The label to use for the First page link\n- **last_label** - The label to use for the Last page link\n- **show_index_range** - Boolean, defaults to \"false\". If \"true\" shows index range of items instead of page numbers in the paginator. For example, if paginator is configured for 50 items per page, show_index_range=\"true\" will display [1-50, 51-100, **101-150**, 151-200, 201-250, etc.] rather than [1, 2, **3**, 4, 5, etc.].\n- **url_view_name** - A named URL reference (such as one that might get passed into the URL\n                      template tag) to use as the URL template. Must be resolvable by the\n                      `reverse()` function. **If this option is not specified, the tag simply\n                      uses a relative url such as `?page=1` which is fine in most situations**\n- **url_param_name** - Determines the name of the `GET` parameter for the page number. The\n                       default is `\"page\"`. If no **url_view_name** is defined, this string\n                       is appended to the url as `?{{url_param_name}}=1`.\n- **url_extra_args** - **Only valid when url_view_name is set.** Additional arguments to\n                       pass into `reverse()` to resolve the URL.\n- **url_extra_kwargs** - **Only valid when `url_view_name` is set.** Additional named\n                         arguments to pass into `reverse()` to resolve the URL. Additionally,\n                         the template tag will add an extra parameter to this for the\n                         page, as it is assumed that if given a url_name, the page will\n                         be a named variable in the URL regular expression. In this case,\n                         the `url_param_name` continues to be the string used to represent\n                         the name. That is, by default, `url_param_name` is equal to `page`\n                         and thus it is expected that there is a named `page` argument in the\n                         URL referenced by `url_view_name`. This allows us to use pretty\n                         pagination URLs such as `/page/1`\n- **extra_pagination_classes** - A space separated list of CSS class names that\n                             will be added to the top level `<ul>` HTML element.\n                             In particular, this can be utilized in Bootstrap 4\n                             installations to add the appropriate alignment\n                             classes from Flexbox utilities: eg:\n                             `justify-content-center`\n\n\n**Basic Usage**\n\nThe following will show a pagination bar with a link to every page, a previous link, and a next link:\n\n```\n    {% bootstrap_paginate page_obj %}\n```\n\nThe following will show a pagination bar with at most 10 page links, a previous link, and a next link:\n\n```\n    {% bootstrap_paginate page_obj range=10 %}\n```\n\nThe following will show a pagination bar with at most 10 page links, a first page link, and a last page link:\n\n```\n    {% bootstrap_paginate page_obj range=10 show_prev_next=\"false\" show_first_last=\"true\" %}\n```\n\n**Advanced Usage**\n\nGiven a url configured such as:\n\n```python\n    archive_index_view = ArchiveIndexView.as_view(\n        date_field='date',\n        paginate_by=10,\n        allow_empty=True,\n        queryset=MyModel.all(),\n        template_name='example/archive.html'\n    )\n\n    urlpatterns = patterns(\n        'example.views',\n        url(r'^$', archive_index_view, name='archive_index'),\n        url(r'^page/(?P<page>\\d+)/$', archive_index_view,\n            name='archive_index_paginated'))\n```\n\nWe could simply use the basic usage (appending ?page=#) with the *archive_index* URL above,\nas the *archive_index_view* class based generic view from django doesn't care how it gets\nthe page parameter. However, if we want pretty URLs, such as those defined in the\n*archive_index_paginated* URL (ie: /page/1), we need to define the URL in our template tag:\n\n```\n    {% bootstrap_paginate page_obj url_view_name=\"archive_index_paginated\" %}\n```\n\nBecause we are using a default page parameter name of \"page\" and our URL requires no other\nparameters, everything works as expected. If our URL required additional parameters, we\nwould pass them in using the optional arguments **url_extra_args** and **url_extra_kwargs**.\nLikewise, if our page parameter had a different name, we would pass in a different\n**url_param_name** argument to the template tag.\n\n# bootstrap_pager\n\nA much simpler implementation of the Bootstrap Pagination functionality is the Pager, which\nsimply provides a Previous and Next link.\n\n**All Optional Arguments**\n\n- **previous_label** - Defines the label for the Previous link\n- **next_label** - Defines the label for the Next link\n- **previous_title** - Defines the link title for the previous link\n- **next_title** - Defines the link title for the next link\n- **centered** - Boolean. Defines whether or not the links are centered. Defaults to false.\n                 (Accepts \"true\" or \"false\")\n- **url_view_name** - A named URL reference (such as one that might get passed into the URL\n                      template tag) to use as the URL template. Must be resolvable by the\n                      `reverse()` function. **If this option is not specified, the tag simply\n                      uses a relative url such as `?page=1` which is fine in most situations**\n- **url_param_name** - Determines the name of the `GET` parameter for the page number. Th\n                       default is `\"page\"`. If no `url_view_name` is defined, this string\n                       is appended to the url as `?{{url_param_name}}=1`.\n- **url_extra_args** - **Only valid when `url_view_name` is set.** Additional arguments to\n                       pass into `reverse()` to resolve the URL.\n- **url_extra_kwargs** - **Only valid when `url_view_name` is set.** Additional named\n                         arguments to pass into `reverse()` to resolve the URL. Additionally,\n                         the template tag will add an extra parameter to this for the\n                         page, as it is assumed that if given a url_name, the page will\n                         be a named variable in the URL regular expression. In this case,\n                         the `url_param_name` continues to be the string used to represent\n                         the name. That is, by default, `url_param_name` is equal to `\"page\"`\n                         and thus it is expected that there is a named `page` argument in the\n                         URL referenced by `url_view_name`. This allows us to use pretty\n                         pagination URLs such as `/page/1`\n- **url_anchor** - The anchor to use in URLs. Defaults to `None`\n- **extra_pager_classes** - A space separated list of CSS class names that will be added\n                to the top level `<ul>` HTML element. This could be used to, as an\n                example, add a class  to prevent the pager from showing up when\n                printing.\n\n**Usage**\n\nUsage is basically the same as for bootstrap_paginate. The simplest usage is:\n\n```\n    {% bootstrap_pager page_obj %}\n```\n\nA somewhat more advanced usage might look like:\n\n```\n    {% bootstrap_pager page_obj previous_label=\"Newer Posts\" next_label=\"Older Posts\" url_view_name=\"post_archive_paginated\" %}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MarlonJD/django-bootstrap-pagination",
    "keywords": "django bootstrap pagination templatetag",
    "license": "MIT licence, see LICENCE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-bootstrap-pagination-forked",
    "package_url": "https://pypi.org/project/django-bootstrap-pagination-forked/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-bootstrap-pagination-forked/",
    "project_urls": {
      "Homepage": "https://github.com/MarlonJD/django-bootstrap-pagination"
    },
    "release_url": "https://pypi.org/project/django-bootstrap-pagination-forked/1.7.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Render Django Page objects as Bootstrap 3.x/4.x Pagination compatible HTML",
    "version": "1.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12797179,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9c4968ec0378c6356478793787d02f60ba49af137a8b3c7fcf283dde2927cb3",
        "md5": "4149909fbeb6d755104fc7bb1d61031a",
        "sha256": "bef6e9e98131580dce2b753c3a4a26cb6a9068bde65dea6045bd75a2cc2a3c71"
      },
      "downloads": -1,
      "filename": "django_bootstrap_pagination_forked-1.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4149909fbeb6d755104fc7bb1d61031a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16127,
      "upload_time": "2022-02-05T17:29:30",
      "upload_time_iso_8601": "2022-02-05T17:29:30.261007Z",
      "url": "https://files.pythonhosted.org/packages/e9/c4/968ec0378c6356478793787d02f60ba49af137a8b3c7fcf283dde2927cb3/django_bootstrap_pagination_forked-1.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "325ec9d0f745ae7a7733035fd713a82da64245747f37129417bd8ab4421468dc",
        "md5": "ac9568e12c495f33b3a4a8c1c24645fd",
        "sha256": "0f0eede5e09faeb1627055d9a781f37c6b7ce3d3aafb17289e7bf19274cce580"
      },
      "downloads": -1,
      "filename": "django-bootstrap-pagination-forked-1.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ac9568e12c495f33b3a4a8c1c24645fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16563,
      "upload_time": "2022-02-05T17:29:32",
      "upload_time_iso_8601": "2022-02-05T17:29:32.104578Z",
      "url": "https://files.pythonhosted.org/packages/32/5e/c9d0f745ae7a7733035fd713a82da64245747f37129417bd8ab4421468dc/django-bootstrap-pagination-forked-1.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}