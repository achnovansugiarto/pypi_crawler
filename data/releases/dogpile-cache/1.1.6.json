{
  "info": {
    "author": "Mike Bayer",
    "author_email": "mike_mp@zzzcomputing.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "dogpile\n=======\n\nDogpile consists of two subsystems, one building on top of the other.\n\n``dogpile`` provides the concept of a \"dogpile lock\", a control structure\nwhich allows a single thread of execution to be selected as the \"creator\" of\nsome resource, while allowing other threads of execution to refer to the previous\nversion of this resource as the creation proceeds; if there is no previous\nversion, then those threads block until the object is available.\n\n``dogpile.cache`` is a caching API which provides a generic interface to\ncaching backends of any variety, and additionally provides API hooks which\nintegrate these cache backends with the locking mechanism of ``dogpile``.\n\nOverall, dogpile.cache is intended as a replacement to the `Beaker\n<https://pypi.org/project/Beaker/>`_ caching system, the internals of which are\nwritten by the same author.   All the ideas of Beaker which \"work\" are re-\nimplemented in dogpile.cache in a more efficient and succinct manner, and all\nthe cruft (Beaker's internals were first written in 2005) relegated to the\ntrash heap.\n\nDocumentation\n-------------\n\nSee dogpile.cache's full documentation at\n`dogpile.cache documentation <https://dogpilecache.sqlalchemy.org>`_.  The\nsections below provide a brief synopsis of the ``dogpile`` packages.\n\nFeatures\n--------\n\n* A succinct API which encourages up-front configuration of pre-defined\n  \"regions\", each one defining a set of caching characteristics including\n  storage backend, configuration options, and default expiration time.\n* A standard get/set/delete API as well as a function decorator API is\n  provided.\n* The mechanics of key generation are fully customizable.   The function\n  decorator API features a pluggable \"key generator\" to customize how\n  cache keys are made to correspond to function calls, and an optional\n  \"key mangler\" feature provides for pluggable mangling of keys\n  (such as encoding, SHA-1 hashing) as desired for each region.\n* The dogpile lock, first developed as the core engine behind the Beaker\n  caching system, here vastly simplified, improved, and better tested.\n  Some key performance\n  issues that were intrinsic to Beaker's architecture, particularly that\n  values would frequently be \"double-fetched\" from the cache, have been fixed.\n* Backends implement their own version of a \"distributed\" lock, where the\n  \"distribution\" matches the backend's storage system.  For example, the\n  memcached backends allow all clients to coordinate creation of values\n  using memcached itself.   The dbm file backend uses a lockfile\n  alongside the dbm file.  New backends, such as a Redis-based backend,\n  can provide their own locking mechanism appropriate to the storage\n  engine.\n* Writing new backends or hacking on the existing backends is intended to be\n  routine - all that's needed are basic get/set/delete methods. A distributed\n  lock tailored towards the backend is an optional addition, else dogpile uses\n  a regular thread mutex. New backends can be registered with dogpile.cache\n  directly or made available via setuptools entry points.\n* Included backends feature three memcached backends (python-memcached, pylibmc,\n  bmemcached), a Redis backend, a backend based on Python's\n  anydbm, and a plain dictionary backend.\n* Space for third party plugins, including one which provides the\n  dogpile.cache engine to Mako templates.\n\n\nThe SQLAlchemy Project\n----------------------\n\nDogpile is part of the `SQLAlchemy Project <https://www.sqlalchemy.org>`_ and\nadheres to the same standards and conventions as the core project.\n\nDevelopment / Bug reporting / Pull requests\n___________________________________________\n\nPlease refer to the\n`SQLAlchemy Community Guide <https://www.sqlalchemy.org/develop.html>`_ for\nguidelines on coding and participating in this project.\n\nCode of Conduct\n_______________\n\nAbove all, SQLAlchemy places great emphasis on polite, thoughtful, and\nconstructive communication between users and developers.\nPlease see our current Code of Conduct at\n`Code of Conduct <https://www.sqlalchemy.org/codeofconduct.html>`_.\n\nLicense\n-------\n\nDogpile is distributed under the `MIT license\n<https://opensource.org/licenses/MIT>`_.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": "https://pythonhosted.org/dogpile.cache/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sqlalchemy/dogpile.cache",
    "keywords": "caching",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dogpile.cache",
    "package_url": "https://pypi.org/project/dogpile.cache/",
    "platform": null,
    "project_url": "https://pypi.org/project/dogpile.cache/",
    "project_urls": {
      "Documentation": "https://dogpilecache.sqlalchemy.org",
      "Homepage": "https://github.com/sqlalchemy/dogpile.cache",
      "Issue Tracker": "https://github.com/sqlalchemy/dogpile.cache/"
    },
    "release_url": "https://pypi.org/project/dogpile.cache/1.1.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A caching front-end based on the Dogpile lock.",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14378141,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7571278069e8caa9aa603f8ed787d2cb4b4a9ff0722dc3de27f134b850340ba",
        "md5": "13a3b7309f4f2394c8ee52e2443b05dd",
        "sha256": "27725b7c9017ff706f2d5e3a6f36ac18986a90c9208efed411d23211d8d78a44"
      },
      "downloads": -1,
      "filename": "dogpile.cache-1.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13a3b7309f4f2394c8ee52e2443b05dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 51225,
      "upload_time": "2022-06-10T14:43:13",
      "upload_time_iso_8601": "2022-06-10T14:43:13.865816Z",
      "url": "https://files.pythonhosted.org/packages/c7/57/1278069e8caa9aa603f8ed787d2cb4b4a9ff0722dc3de27f134b850340ba/dogpile.cache-1.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6334dc7ec6a8cd26e6d9d6199aab67b37977e8bd5b5427ff246417d51d1dbe70",
        "md5": "b8ea75a8a1c40be254f95524c869f303",
        "sha256": "eedc1e327e66c93f0c15a8740569ab74ef3d8929042f108f98fded9e35faff55"
      },
      "downloads": -1,
      "filename": "dogpile.cache-1.1.6.tar.gz",
      "has_sig": true,
      "md5_digest": "b8ea75a8a1c40be254f95524c869f303",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 393076,
      "upload_time": "2022-06-10T14:43:10",
      "upload_time_iso_8601": "2022-06-10T14:43:10.976768Z",
      "url": "https://files.pythonhosted.org/packages/63/34/dc7ec6a8cd26e6d9d6199aab67b37977e8bd5b5427ff246417d51d1dbe70/dogpile.cache-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}