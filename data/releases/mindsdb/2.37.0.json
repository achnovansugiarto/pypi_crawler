{
  "info": {
    "author": "MindsDB Inc",
    "author_email": "jorge@mindsdb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n\t<img width=\"300\" src=\"https://github.com/mindsdb/mindsdb_native/blob/stable/assets/MindsDBColorPurp@3x.png?raw=true\" alt=\"MindsDB\">\n\t<br>\n\n</h1>\n<div align=\"center\">\n\t<a href=\"https://github.com/mindsdb/mindsdb/actions\"><img src=\"https://github.com/mindsdb/mindsdb/workflows/MindsDB%20workflow/badge.svg\" alt=\"MindsDB workflow\"></a>\n\n  <a href=\"https://www.python.org/downloads/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/python-3.6%20|%203.7|%203.8-brightgreen.svg\" alt=\"Python supported\"></a>\n   <a href=\"https://pypi.org/project/MindsDB/\" target=\"_blank\"><img src=\"https://badge.fury.io/py/MindsDB.svg\" alt=\"PyPi Version\"></a>\n  <a href=\"https://pypi.org/project/MindsDB/\" target=\"_blank\"><img src=\"https://img.shields.io/pypi/dm/mindsdb\" alt=\"PyPi Downloads\"></a>\n  <a href=\"https://community.mindsdb.com/\" target=\"_blank\"><img src=\"https://img.shields.io/discourse/posts?server=https%3A%2F%2Fcommunity.mindsdb.com%2F\" alt=\"MindsDB Community\"></a>\n  <a href=\"https://www.mindsdb.com/\"><img src=\"https://img.shields.io/website?url=https%3A%2F%2Fwww.mindsdb.com%2F\" alt=\"MindsDB Website\"></a>\t\n  \n  <h3 align=\"center\">\n    <a href=\"https://www.mindsdb.com/\">Website</a>\n    <span> | </span>\n    <a href=\"https://docs.mindsdb.com/\">Docs</a>\n    <span> | </span>\n    <a href=\"https://apidocs.mindsdb.com/\">API Docs</a>\n    <span> | </span>\n    <a href=\"https://community.mindsdb.com/\">Community forum</a>\n  </h3>\n  \n</div>\n\n[MindsDB](https://mindsdb.com/) is an open-source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using SQL queries. [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Machine%20Learning%20in%20one%20line%20of%20code%21&url=https://www.mindsdb.com&via=mindsdb&hashtags=ai,ml,machine_learning,neural_networks)\n\n<h2 align=\"center\">\n   Predictive AI layer for existing databases\n   <br/>\n  <img width=\"1200\" src=\"https://github.com/mindsdb/mindsdb-docs/blob/master/mindsdb-docs/docs/assets/integration-image.png\" alt=\"MindsDB\">\t\n\n</h2>\n\n\n## Features\n\n* **AutoML**. With MindsDB built-in Automated Machine Learning you can quickly generate the right machine learning model.\n* **AI Tables**. Move your models instantly to production, reduce resources, and overhead costs with AI Tables that deliver the results as database tables.\n* **Explainable AI**. Use MindsDB Studio to interpret predictions made by the model. Identify potential data biases, evaluate and visualize model accuracy using the Explainable AI.\n\n\n\n\n## Try it out\n\n* [Getting started](https://docs.mindsdb.com/)\n* [Install MindsDB](https://docs.mindsdb.com/Installing/)\n\t* [Linux](https://docs.mindsdb.com/installation/Linux/)\n\t* [Windows](https://docs.mindsdb.com/installation/Windows/)\n\t* [MacOS](https://docs.mindsdb.com/installation/MacOS/)\n\t* [Docker](https://docs.mindsdb.com/installation/docker/)\n\t* [From source](https://docs.mindsdb.com/installation/source/)\n* [Tutorials](https://docs.mindsdb.com/databases/)\n\t* [AI Tables in MariaDB](https://docs.mindsdb.com/tutorials/mysql/)\n\t* [AI Tables in ClickHouse](https://docs.mindsdb.com/tutorials/clickhouse/)\n\t* [AI Tables in MySQL](https://docs.mindsdb.com/tutorials/mysql/)\n\t* [AI Tables in PostgreSQL](https://docs.mindsdb.com/tutorials/postgresql/)\n\t* [AI Tables in Microsoft SQL Server](https://docs.mindsdb.com/tutorials/microsoft-sql-server/)\n\n\n## Integrations\n\n\nAI Tables - Get the predictions you need as simple tables in your database.\n\n|  :electric_plug: :books: | :chart_with_upwards_trend: :wrench: | :mag: :bulb: |\n|-|-|-|\n|  <a href=\"https://docs.mindsdb.com/datasources/mariadb/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/MariaDB-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=mariadb\" alt=\"Connect MariaDB\"></a>   | <a href=\"https://docs.mindsdb.com/model/mariadb/\"><img src=\"https://img.shields.io/badge/MariaDB-Train%20new%20model-%2300b06d?style=for-the-badge&logo=mariadb\" alt=\"Tranin new model\"></a> | <a href=\"https://docs.mindsdb.com/model/query/mariadb/\"><img src=\"https://img.shields.io/badge/MariaDB-Query%20the%20model-%2300b06d?style=for-the-badge&logo=mariadb\" alt=\"Query the model\"></a> \n|   <a href=\"https://docs.mindsdb.com/datasources/mysql/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/MySQL-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=mysql\" alt=\"Connect MySQL\"></a> | <a href=\"https://docs.mindsdb.com/model/mysql/\"><img src=\"https://img.shields.io/badge/MySQL-Train%20new%20model-%2300b06d?style=for-the-badge&logo=mysql\" alt=\"Tranin new model\"></a> | <a href=\"https://docs.mindsdb.com/model/query/mysql/\"><img src=\"https://img.shields.io/badge/MySQL-Query%20the%20model-%2300b06d?style=for-the-badge&logo=mysql\" alt=\"Query the model\"></a>\n|  <a href=\"https://docs.mindsdb.com/datasources/postgresql/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/PostgreSQL-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=postgresql\" alt=\"Connect PostgreSQL\"></a> | <a href=\"https://docs.mindsdb.com/model/postgresql/\"><img src=\"https://img.shields.io/badge/PostgreSQL-Train%20new%20model-%2300b06d?style=for-the-badge&logo=postgresql\" alt=\"Tranin new model\"></a>  | <a href=\"https://docs.mindsdb.com/model/query/postgresql/\"><img src=\"https://img.shields.io/badge/PostgreSQL-Query%20the%20model-%2300b06d?style=for-the-badge&logo=postgresql\" alt=\"Query the model\"></a>\n|  <a href=\"https://docs.mindsdb.com/datasources/clickhouse/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/ClickHouse-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=clickhouse\" alt=\"Connect ClickHouse\"></a> | <a href=\"https://docs.mindsdb.com/model/clickhouse/\"><img src=\"https://img.shields.io/badge/Clickhouse-Train%20new%20model-%2300b06d?style=for-the-badge&logo=clickhouse\" alt=\"Tranin new model\"></a> | <a href=\"https://docs.mindsdb.com/model/query/clickhouse/\"><img src=\"https://img.shields.io/badge/Clickhouse-Query%20the%20model-%2300b06d?style=for-the-badge&logo=database\" alt=\"Query the model\"></a>\n|  <a href=\"https://docs.mindsdb.com/datasources/mssql/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/SQL%20Server-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=microsoft\" alt=\"Connect Microsoft SQL Server\"></a> | <a href=\"https://docs.mindsdb.com/model/mssql/\"><img src=\"https://img.shields.io/badge/SQL%20Server-Train%20new%20model-%2300b06d?style=for-the-badge&logo=microsoft\" alt=\"Tranin new model\"></a> | <a href=\"https://docs.mindsdb.com/model/query/mssql/\"><img src=\"https://img.shields.io/badge/SQL%20Server-Query%20the%20model-%2300b06d?style=for-the-badge&logo=microsoft\" alt=\"Query the model\"></a>\n| <a href=\"https://docs.mindsdb.com/datasources/snowflake/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Snowflake-Connect%20your%20data-%2300b06d?style=for-the-badge&logo=snowflake\" alt=\"Connect Snowflake\"></a> |  <a href=\"https://docs.mindsdb.com/model/snowflake/\"><img src=\"https://img.shields.io/badge/Snowflake-Train%20new%20model-%2300b06d?style=for-the-badge&logo=snowflake\" alt=\"Tranin new model\"></a> | <a href=\"https://docs.mindsdb.com/model/query/snowflake/\"><img src=\"https://img.shields.io/badge/Snowflake-Query%20the%20model-%2300b06d?style=for-the-badge&logo=snowflake\" alt=\"Query the model\"></a>\n\n| :warning: :construction:  :construction_worker: | :warning: :construction:  :construction_worker: | :warning: :construction:  :construction_worker:|\n|-|-|-|\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MongoDB-Work%20In%20Progress-%2300b06d?style=for-the-badge&logo=mongodb\" alt=\"Connect MongoDB\"></a> | <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MongoDB-Work%20In%20Progress-%2300b06d?style=for-the-badge&logo=mongodb\" alt=\"Connect MongoDB\"></a>  | <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MongoDB-Work%20In%20Progress-%2300b06d?style=for-the-badge&logo=mongodb\" alt=\"Connect MongoDB\"></a> \n\n[:question: :wave: Missing integration?](https://github.com/mindsdb/mindsdb/issues/new?assignees=&labels=&template=feature-mindsdb-request.md)\n\n## Contributing\n\n* To contribute to MindsDB, please check out [Contribution docs](https://docs.mindsdb.com/contribute/).\n* Welcome to our awesome community, please check out [Community docs](https://docs.mindsdb.com/community/).\n\n### Current contributors\n\n<a href=\"https://github.com/mindsdb/mindsdb/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=mindsdb/mindsdb\" />\n</a>\n\nMade with [contributors-img](https://contributors-img.web.app).\n\n## Report Issues\n\nPlease help us by [reporting any issues](https://github.com/mindsdb/mindsdb/issues/new/choose) you may have while using MindsDB.\n\n## License\n\n* [MindsDB License](https://github.com/mindsdb/mindsdb/blob/master/LICENSE)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/mindsdb/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mindsdb/mindsdb",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MindsDB",
    "package_url": "https://pypi.org/project/MindsDB/",
    "platform": "",
    "project_url": "https://pypi.org/project/MindsDB/",
    "project_urls": {
      "Download": "https://pypi.org/project/mindsdb/",
      "Homepage": "https://github.com/mindsdb/mindsdb"
    },
    "release_url": "https://pypi.org/project/MindsDB/2.37.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "MindsDB server, provides server capabilities to mindsdb native python library",
    "version": "2.37.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17478317,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1892efd94a37848b839bf569f8c92cadb85738e694a3eb03fd5437f202f735a",
        "md5": "dd8f248b114af025f94af20bbbac6755",
        "sha256": "7f4989384b754a536944ee971083350467e2323008e8fdbb51e2f367759665b0"
      },
      "downloads": -1,
      "filename": "MindsDB-2.37.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dd8f248b114af025f94af20bbbac6755",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 115461,
      "upload_time": "2021-06-08T16:06:53",
      "upload_time_iso_8601": "2021-06-08T16:06:53.129974Z",
      "url": "https://files.pythonhosted.org/packages/d1/89/2efd94a37848b839bf569f8c92cadb85738e694a3eb03fd5437f202f735a/MindsDB-2.37.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2022-23522"
      ],
      "details": "### Summary\n\nAn unsafe extraction is being performed using `shutil.unpack_archive()` from a remotely retrieved tarball. Which may lead to the writing of the extracted files to an unintended location. This vulnerability is sometimes called a **TarSlip** or a **ZipSlip variant**.\n\n### Details\n\nUnpacking files using the high-level function `shutil.unpack_archive()` from a potentially malicious tarball without validating that the destination file path remained within the intended destination directory may cause files to be overwritten outside the destination directory.\n\nAs can be seen in the vulnerable snippet code source, an archive is being retrieved using the `download_file()` function from a remote location which is a user-provided permanent storage bucket `s3`. Immediately after being retrieved, the tarball is unsafely unpacked using the function `shutil.unpack_archive()`.\n\nThe vulnerable code is [L128..L129](https://github.com/mindsdb/mindsdb/blob/69c76e727b8067f32b06ab83bb835a8c416c4f21/mindsdb/interfaces/storage/fs.py#L128..L129) in [fs.py](https://github.com/mindsdb/mindsdb/blob/69c76e727b8067f32b06ab83bb835a8c416c4f21/mindsdb/interfaces/storage/fs.py) file.\n\n```python3\n    def __init__(self):\n        super().__init__()\n        if 's3_credentials' in self.config['permanent_storage']:\n            self.s3 = boto3.client('s3', **self.config['permanent_storage']['s3_credentials'])\n        else:\n            self.s3 = boto3.client('s3')\n       \n        # User provided remote storage!\n        self.bucket = self.config['permanent_storage']['bucket'] \n\n    def get(self, local_name, base_dir):\n        remote_name = local_name\n        remote_ziped_name = f'{remote_name}.tar.gz'\n        local_ziped_name = f'{local_name}.tar.gz'\n        local_ziped_path = os.path.join(base_dir, local_ziped_name)\n        os.makedirs(base_dir, exist_ok=True)\n        \n        # Retrieve a potentially malicious tarball\n        self.s3.download_file(self.bucket, remote_ziped_name, local_ziped_path)\n\n        # Perform an unsafe extraction\n        shutil.unpack_archive(local_ziped_path, base_dir)\n\n        os.system(f'chmod -R 777 {base_dir}')\n        os.remove(local_ziped_path)\n```  \n\n### PoC\n\nThe following PoC is provided for illustration purposes only. It showcases the risk of extracting a non-harmless text file `sim4n6.txt` to one of the parent locations rather than the intended current folder.\n\n```bash\n> tar --list -f archive.tar\ntar: Removing leading \"../../../\" from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import shutil\n>>> shutil.unpack_archive(\"archive.tar\")\n>>> exit()\n\n> test -f ../../../sim4n6.txt && echo \"sim4n6.txt exists\"\nsim4n6.txt exists\n```\n\n### Attack Scenario\n\nAn attacker could craft a malicious tarball with a filename path, such as `../../../../../../../../etc/passwd`, and then serve the archive remotely using a personal bucket `s3`, thus, retrieve the tarball through **mindsdb** and overwrite the system files of the hosting server. \n\n### Mitigation\n\nPotential mitigation could be to:\n - Use a safer module, like `zipfile`.\n -  Validate the location of the extracted files and discard those with malicious paths such as relative path `..` or absolute path such as `/etc/password`.\n -  Perform a checksum verification for the retrieved archive, but hard-coding the hashes may be cumbersome and difficult to manage.",
      "fixed_in": [
        "22.11.4.3"
      ],
      "id": "GHSA-7x45-phmr-9wqp",
      "link": "https://osv.dev/vulnerability/GHSA-7x45-phmr-9wqp",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [],
      "details": "### Summary\n\nAn unsafe extraction is being performed using `tarfile.extractall()` from a remotely retrieved tarball. Which may lead to the writing of the extracted files to an unintended location. Sometimes, the vulnerability is called a TarSlip or a ZipSlip variant.\n\n### Details\n\nI commented the following snippet of code as a vulnerability details. The code is from [file.py#L26..L134](https://github.com/mindsdb/mindsdb/blob/afedd37c16e579b6dc075b0814e42d0505ccdc07/mindsdb/api/http/namespaces/file.py#L26..L134)\n\n```python\n@ns_conf.route('/<name>')\n@ns_conf.param('name', \"MindsDB's name for file\")\nclass File(Resource):\n    @ns_conf.doc('put_file')\n    def put(self, name: str):\n        ''' add new file\n            params in FormData:\n                - file\n                - original_file_name [optional]\n        '''\n\n        data = {}\n\n        ... omitted for brevity\n\n            url = data['source']\n            data['file'] = data['name']\n\n            ... omitted for brevity \n\n            with requests.get(url, stream=True) as r:                   # Source: retrieve the URL which point to a remotely located tarball \n                if r.status_code != 200:\n                    return http_error(\n                        400,\n                        \"Error getting file\",\n                        f\"Got status code: {r.status_code}\"\n                    )\n                file_path = os.path.join(temp_dir_path, data['file'])\n                with open(file_path, 'wb') as f:\n                    for chunk in r.iter_content(chunk_size=8192):   # write with chunks the remote retrieved file into file_path location \n                        f.write(chunk)\n\n        original_file_name = data.get('original_file_name')\n\n        file_path = os.path.join(temp_dir_path, data['file'])      \n        lp = file_path.lower()\n        if lp.endswith(('.zip', '.tar.gz')):\n            if lp.endswith('.zip'):\n                with zipfile.ZipFile(file_path) as f:\n                    f.extractall(temp_dir_path)\n            elif lp.endswith('.tar.gz'):\n                with tarfile.open(file_path) as f:  # Just after \n                    f.extractall(temp_dir_path)  # Sink: the tarball located by file_path is supposed to be extracted to temp_dir_path. \n```\n\nSo, a remotely available tarball is being retrieved and written to the server filesystem in chunks, and then, if the extension ends with `.tar.gz` of a compressed tarball, the mindsdb app applies `tarfile.extractall()` directly with no checks for the destination. \n\nHowever, according to the following [warning](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall) from the official documentation;\n\n> Warning: Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of path, e.g. members that have absolute filenames starting with \"/\" or filenames with two dots \"..\". \n\n\n### PoC\n\nThe following PoC is provided for illustration purposes only. It showcases the risk of extracting a non-harmless text file `sim4n6.txt` to one of the parent locations rather than the intended current folder.\n\n```bash\n> tar --list -v -f archive.tar.gz\ntar: Removing leading \"../../../\" from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tarfile\n>>> with tarfile.open(\"archive.tar.gz\") as tf:\n>>>         tf.extractall()\n>>> exit()\n\n> test -f ../../../sim4n6.txt && echo \"sim4n6.txt exists\"\nsim4n6.txt exists\n```\n\n### Attack Scenario\n\nAn attacker could craft a malicious tarball with a filename path, such as ../../../../../../../../etc/passwd, and then serve the archive remotely, proceed to the PUT request of the tarball through mindsdb and overwrite the system files of the hosting server for instance.\n\n### Mitigation \n\nPotential mitigation could be to:\n - Use a safer module, like `zipfile`.\n - Use an alternative of `tarfile`, such as `tarsafe`. \n  - Validate the location or the absolute path of the extracted files and discard those with malicious paths such as relative path `../../..` or absolute path such as `/etc/password`. A simple wrapper could be written to raise an exception when a path traversal may be identified.\n\nThis is similar to the other report [GHSA-7x45-phmr-9wqp](https://github.com/mindsdb/mindsdb/security/advisories/GHSA-7x45-phmr-9wqp).",
      "fixed_in": [],
      "id": "GHSA-2g5w-29q9-w6hx",
      "link": "https://osv.dev/vulnerability/GHSA-2g5w-29q9-w6hx",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}