{
  "info": {
    "author": "MindsDB Inc",
    "author_email": "jorge@mindsdb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n\t<img width=\"300\" src=\"https://github.com/mindsdb/mindsdb_native/blob/stable/assets/MindsDBColorPurp@3x.png?raw=true\" alt=\"MindsDB\">\n\t<br>\n\n</h1>\n<div align=\"center\">\n\t<a href=\"https://github.com/mindsdb/mindsdb/actions\"><img src=\"https://github.com/mindsdb/mindsdb/workflows/MindsDB%20workflow/badge.svg\" alt=\"MindsDB workflow\"></a>\n\n  <a href=\"https://www.python.org/downloads/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/python-3.7.x%20|%203.8.x|%203.9.x-brightgreen.svg\" alt=\"Python supported\"></a>\n   <a href=\"https://pypi.org/project/MindsDB/\" target=\"_blank\"><img src=\"https://badge.fury.io/py/MindsDB.svg\" alt=\"PyPi Version\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/Mindsdb\">  <a href=\"https://hub.docker.com/u/mindsdb\" target=\"_blank\"><img src=\"https://img.shields.io/docker/pulls/mindsdb/mindsdb\" alt=\"Docker pulls\"></a>\n  <a href=\"https://www.mindsdb.com/\"><img src=\"https://img.shields.io/website?url=https%3A%2F%2Fwww.mindsdb.com%2F\" alt=\"MindsDB Website\"></a>\t\n    <a href=\"https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ\" target=\"_blank\"><img src=\"https://img.shields.io/badge/slack-@mindsdbcommunity-brightgreen.svg?logo=slack \" alt=\"MindsDB Community\"></a>\n\t</br>\n\t<a href=\"https://deepnote.com/project/Machine-Learning-With-SQL-8GDF7bc7SzKlhBLorqoIcw/%2Fmindsdb_demo.ipynb\" target=\"_blank\"><img src=\"https://deepnote.com/buttons/launch-in-deepnote-white.svg\" alt=\"Launch in Deepnote\"></a>\n\t</br>\n\t\n  <h3 align=\"center\">\n    <a href=\"https://www.mindsdb.com?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo\">Website</a>\n    <span> | </span>\n    <a href=\"https://docs.mindsdb.com?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo\">Docs</a>\n    <span> | </span>\n    <a href=\"https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ\">Community Slack</a>\n    <span> | </span>\n    <a href=\"https://github.com/mindsdb/mindsdb/projects\">Contribute</a>\n    <span> | </span>\n    <a href=\"https://cloud.mindsdb.com\">Demo</a>\n    <span> | </span>\n    <a href=\"https://github.com/mindsdb/mindsdb/blob/staging/integrations_contest.md\">Integrations Contest</a>\n  </h3>\n  \n</div>\n\n----------------------------------------\n\n[MindsDB](https://mindsdb.com?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo)  ML-SQL Server enables machine learning workflows for the most powerful databases and datawarehouses using SQL.  [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Machine%20Learning%20inside%20Databases%20&url=https://www.mindsdb.com&via=mindsdb&hashtags=ai,ml,machine_learning,neural_networks,databases,sql)\n* Developers can quickly add AI capabilities to your applications.\n* Data Scientists can streamline MLOps by deploying ML models as AI Tables.\n* Data Analysts can easily make forecasts on complex data (like multivariate time-series with high cardinality) and visualize them in BI tools like Tableau.\n\n**NEW!** Check-out the new MindsDB [Dev üí° challenge](https://github.com/mindsdb/mindsdb/blob/staging/integrations_contest.md) (and the cash:dollar: prizes) for democratizing machine learning!\n\nIf you like our project then we would really appreciate **a Star ‚≠ê!**\n\nAlso, check-out the [rewards and community programs.](https://mindsdb.com/community?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo)\n\n----------------------------------------\n\n[Installation](https://github.com/mindsdb/mindsdb#installation) - [Overview](https://github.com/mindsdb/mindsdb#overview) - [Features](https://github.com/mindsdb/mindsdb#features) - [Database Integrations](https://github.com/mindsdb/mindsdb#database-integrations) - [Quickstart](https://github.com/mindsdb/mindsdb#quickstart) - [Documentation](https://github.com/mindsdb/mindsdb#documentation) - [Support](https://github.com/mindsdb/mindsdb#support) - [Contributing](https://github.com/mindsdb/mindsdb#contributing) - [Mailing lists](https://github.com/mindsdb/mindsdb#mailing-lists) - [License](https://github.com/mindsdb/mindsdb#license)\n\n----------------------------\n\n<h2 align=\"center\">\n   Machine Learning using SQL \n   <br/>\n   <br/>\n  <img width=\"600\" src=\"https://docs.mindsdb.com/assets/mdb_image.png\" alt=\"MindsDB\">\t\n\n</h2>\n\n<img width=\"1222\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5898506/172740218-61db5eec-1bcf-4832-99d9-308709a426a7.png\">\n\n## Demo\n\nYou can try Mindsdb ML SQL server here [(demo)](https://cloud.mindsdb.com).\n\n## Installation\n\nTo install the latest version of MindsDB please pull the following Docker image:\n\n```\ndocker pull mindsdb/mindsdb\n```\n\nOr, use PyPI:\n\n```\npip install mindsdb\n```\n\n## Overview\n\nMindsDB automates and abstracts machine learning models through virtual AI Tables:\n\nApart from abstracting ML models as AI Tables inside databases, MindsDB has a set of unique capabilities as:\n\n* Easily make predictions over very complex multivariate time-series data with high cardinality\n\n* An open JSON-AI syntax to tune ML models and optimize ML pipelines in a declarative way\n\n\n#### How it works:\n\n1. Let MindsDB connect to your database.\n\n2. Train a Predictor using a single SQL statement (make MindsDB learn from historical data automatically) or import your own ML model to a Predictor via JSON-AI . \n\n3. Make predictions with SQL statements (Predictor is exposed as virtual AI Tables). There‚Äôs no need to deploy models since they are already part of the data layer.\n\nCheck our [docs](https://docs.mindsdb.com/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) and [blog](https://mindsdb.com/blog/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) for tutorials and use case examples.\n\n\n## Features\n\n* Automatic data pre-processing, feature engineering and encoding\n* Classification, regression, time-series tasks\n* Bring models to production without ‚Äútraditional deployment‚Äù as AI Tables\n* Get mModels‚Äô accuracy scoring and confidence intervals for each prediction\n* Join ML models with existing data\n* Anomaly detection\n* Model explainability analysis \n* GPU support for models‚Äô training\n* Open JSON-AI syntax to build models and bring your own ML blocks in a declarative way \n\n\n## Database Integrations\n\nMindsDB works with most of the SQL and NoSQL databases and data Streams for real-time ML.\n\n| Connect your Data |\n|-|\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Apache Kafka-808080?style=for-the-badge&logo=apache-kafka&logoColor=white\" alt=\"Connect Apache Kafka\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Amazon%20Redshift-0466C8?style=for-the-badge&logo=amazon-aws&logoColor=white\" alt=\"Connect Amazon Redshift\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Cassandra-1287B1?style=for-the-badge&logo=apache%20cassandra&logoColor=white\" alt=\"Connect Cassandra\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Clickhouse-e6e600?style=for-the-badge&logo=clickhouse&logoColor=white\" alt=\"Connect Clickhouse\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/CockroachDB-426EDF?style=for-the-badge&logo=cockroach-labs&logoColor=white\" alt=\"Connect CockroachDB\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MariaDB-003545?style=for-the-badge&logo=mariadb&logoColor=white\" alt=\"Connect MariaDB\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Microsoft%20SQL%20Sever-CC2927?style=for-the-badge&logo=microsoft%20sql%20server&logoColor=white\" alt=\"Connect SQL Server\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&logo=mongodb&logoColor=white\" alt=\"Connect MongoDB\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/MySQL-00758F?style=for-the-badge&logo=mysql&logoColor=white\" alt=\"Connect MySQL\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/PostgreSQL-316192?style=for-the-badge&logo=postgresql&logoColor=white\" alt=\"Connect PostgreSQL\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/QuestDB-d14671?style=for-the-badge&logo=questdb&logoColor=white\" alt=\"Connect QuestDB\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/redis-%23DD0031.svg?&style=for-the-badge&logo=redis&logoColor=white\" alt=\"Connect Redis\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/ScyllaDB-53CADD?style=for-the-badge&logo=scylladbb&logoColor=white\" alt=\"Connect ScyllaDB\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Singlestore-5f07b4?style=for-the-badge&logo=singlestore&logoColor=white\" alt=\"Connect Singlestore\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Snowflake-35aedd?style=for-the-badge&logo=snowflake&logoColor=blue\" alt=\"Connect Snowflake\"></a> |\n| <a href=\"https://docs.mindsdb.com/\"><img src=\"https://img.shields.io/badge/Trino-dd00a1?style=for-the-badge&logo=trino&logoColor=white\" alt=\"Connect Trino\"></a> |\n\n[:question: :wave: Missing integration?](https://github.com/mindsdb/mindsdb/issues/new?assignees=&labels=&template=feature-mindsdb-request.yaml)\n\n## Quickstart\n\nTo get your hands on MindsDB, we recommend using the [Docker image](https://docs.mindsdb.com/setup/self-hosted/docker/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) or simply sign up for a [free cloud account](https://cloud.mindsdb.com/signup?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo).\nFeel free to browse [documentation](https://docs.mindsdb.com?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) for other installation methods and tutorials.\n\n## Documentation\n\nYou can find the complete documentation of MindsDB at [docs.mindsdb.com](https://docs.mindsdb.com?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo).\n\n## Support\n\nIf you found a bug, please submit an [issue on Github](https://github.com/mindsdb/mindsdb/issues).\n\nTo get community support, you can:\n* Post at MindsDB [Slack community](https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ).\n* Ask for help at our [Github Discussions](https://github.com/mindsdb/mindsdb/discussions).\n* Ask a question at [Stackoverflow](https://stackoverflow.com/questions/tagged/mindsdb) with a MindsDB tag.\n\nIf you need commercial support, please [contact](https://mindsdb.com/contact/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) the MindsDB team.\n\n## Contributing\n\nA great place to start contributing to MindsDB will be our GitHub projects for :checkered_flag:\n* Community writers [dashboard tasks](https://github.com/mindsdb/mindsdb/projects/7).\n* Community code contributors [dashboard tasks](https://github.com/mindsdb/mindsdb/projects/8).\n\nAlso, we are always open to suggestions so feel free to open new issues with your ideas and we can give you guidance!\n\nBeing part of the core team is accessible to anyone who is motivated and wants to be part of that journey!\nIf you'd like to contribute to the project, refer to the [contributing documentation](https://docs.mindsdb.com/contribute/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo).\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/mindsdb/mindsdb/blob/stable/CODE_OF_CONDUCT.md). By participating in this project, you agree to abide by its terms.\n\n### Current contributors\n\n<a href=\"https://github.com/mindsdb/mindsdb/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=mindsdb/mindsdb\" />\n</a>\n\nMade with [contributors-img](https://contributors-img.web.app).\n\n## Mailing lists\n\nSubscribe to MindsDB Monthly [Community Newsletter](https://mindsdb.com/newsletter/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) to get general announcements, release notes, information about MindsDB events, and the latest blog posts.\nYou may also join our [beta-users](https://mindsdb.com/beta-tester/?utm_medium=community&utm_source=github&utm_campaign=mindsdb%20repo) group, and get access to new beta features.\n\n\n## License\n\nMindsDB is licensed under [GNU General Public License v3.0](https://github.com/mindsdb/mindsdb/blob/master/LICENSE)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/mindsdb/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mindsdb/mindsdb",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MindsDB",
    "package_url": "https://pypi.org/project/MindsDB/",
    "platform": null,
    "project_url": "https://pypi.org/project/MindsDB/",
    "project_urls": {
      "Download": "https://pypi.org/project/mindsdb/",
      "Homepage": "https://github.com/mindsdb/mindsdb"
    },
    "release_url": "https://pypi.org/project/MindsDB/22.8.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "MindsDB server, provides server capabilities to mindsdb native python library",
    "version": "22.8.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17478317,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05e0f97a941bf56c1806a0291c93b7fb6cbeb4e0830f7c756225b7b04fbed5b8",
        "md5": "1581ce1446782369dbf12c920a3ddcef",
        "sha256": "ae5778305c409375d849b0e978c0806f11dc7958514d5faa4d9c9ca4fbb8deb3"
      },
      "downloads": -1,
      "filename": "MindsDB-22.8.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1581ce1446782369dbf12c920a3ddcef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 761190,
      "upload_time": "2022-08-24T09:07:59",
      "upload_time_iso_8601": "2022-08-24T09:07:59.296952Z",
      "url": "https://files.pythonhosted.org/packages/05/e0/f97a941bf56c1806a0291c93b7fb6cbeb4e0830f7c756225b7b04fbed5b8/MindsDB-22.8.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2022-23522"
      ],
      "details": "### Summary\n\nAn unsafe extraction is being performed using `shutil.unpack_archive()` from a remotely retrieved tarball. Which may lead to the writing of the extracted files to an unintended location. This vulnerability is sometimes called a **TarSlip** or a **ZipSlip variant**.\n\n### Details\n\nUnpacking files using the high-level function `shutil.unpack_archive()` from a potentially malicious tarball without validating that the destination file path remained within the intended destination directory may cause files to be overwritten outside the destination directory.\n\nAs can be seen in the vulnerable snippet code source, an archive is being retrieved using the `download_file()` function from a remote location which is a user-provided permanent storage bucket `s3`. Immediately after being retrieved, the tarball is unsafely unpacked using the function `shutil.unpack_archive()`.\n\nThe vulnerable code is [L128..L129](https://github.com/mindsdb/mindsdb/blob/69c76e727b8067f32b06ab83bb835a8c416c4f21/mindsdb/interfaces/storage/fs.py#L128..L129) in [fs.py](https://github.com/mindsdb/mindsdb/blob/69c76e727b8067f32b06ab83bb835a8c416c4f21/mindsdb/interfaces/storage/fs.py) file.\n\n```python3\n    def __init__(self):\n        super().__init__()\n        if 's3_credentials' in self.config['permanent_storage']:\n            self.s3 = boto3.client('s3', **self.config['permanent_storage']['s3_credentials'])\n        else:\n            self.s3 = boto3.client('s3')\n       \n        # User provided remote storage!\n        self.bucket = self.config['permanent_storage']['bucket'] \n\n    def get(self, local_name, base_dir):\n        remote_name = local_name\n        remote_ziped_name = f'{remote_name}.tar.gz'\n        local_ziped_name = f'{local_name}.tar.gz'\n        local_ziped_path = os.path.join(base_dir, local_ziped_name)\n        os.makedirs(base_dir, exist_ok=True)\n        \n        # Retrieve a potentially malicious tarball\n        self.s3.download_file(self.bucket, remote_ziped_name, local_ziped_path)\n\n        # Perform an unsafe extraction\n        shutil.unpack_archive(local_ziped_path, base_dir)\n\n        os.system(f'chmod -R 777 {base_dir}')\n        os.remove(local_ziped_path)\n```  \n\n### PoC\n\nThe following PoC is provided for illustration purposes only. It showcases the risk of extracting a non-harmless text file `sim4n6.txt` to one of the parent locations rather than the intended current folder.\n\n```bash\n> tar --list -f archive.tar\ntar: Removing leading \"../../../\" from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import shutil\n>>> shutil.unpack_archive(\"archive.tar\")\n>>> exit()\n\n> test -f ../../../sim4n6.txt && echo \"sim4n6.txt exists\"\nsim4n6.txt exists\n```\n\n### Attack Scenario\n\nAn attacker could craft a malicious tarball with a filename path, such as `../../../../../../../../etc/passwd`, and then serve the archive remotely using a personal bucket `s3`, thus, retrieve the tarball through **mindsdb** and overwrite the system files of the hosting server. \n\n### Mitigation\n\nPotential mitigation could be to:\n - Use a safer module, like `zipfile`.\n -  Validate the location of the extracted files and discard those with malicious paths such as relative path `..` or absolute path such as `/etc/password`.\n -  Perform a checksum verification for the retrieved archive, but hard-coding the hashes may be cumbersome and difficult to manage.",
      "fixed_in": [
        "22.11.4.3"
      ],
      "id": "GHSA-7x45-phmr-9wqp",
      "link": "https://osv.dev/vulnerability/GHSA-7x45-phmr-9wqp",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [],
      "details": "### Summary\n\nAn unsafe extraction is being performed using `tarfile.extractall()` from a remotely retrieved tarball. Which may lead to the writing of the extracted files to an unintended location. Sometimes, the vulnerability is called a TarSlip or a ZipSlip variant.\n\n### Details\n\nI commented the following snippet of code as a vulnerability details. The code is from [file.py#L26..L134](https://github.com/mindsdb/mindsdb/blob/afedd37c16e579b6dc075b0814e42d0505ccdc07/mindsdb/api/http/namespaces/file.py#L26..L134)\n\n```python\n@ns_conf.route('/<name>')\n@ns_conf.param('name', \"MindsDB's name for file\")\nclass File(Resource):\n    @ns_conf.doc('put_file')\n    def put(self, name: str):\n        ''' add new file\n            params in FormData:\n                - file\n                - original_file_name [optional]\n        '''\n\n        data = {}\n\n        ... omitted for brevity\n\n            url = data['source']\n            data['file'] = data['name']\n\n            ... omitted for brevity \n\n            with requests.get(url, stream=True) as r:                   # Source: retrieve the URL which point to a remotely located tarball \n                if r.status_code != 200:\n                    return http_error(\n                        400,\n                        \"Error getting file\",\n                        f\"Got status code: {r.status_code}\"\n                    )\n                file_path = os.path.join(temp_dir_path, data['file'])\n                with open(file_path, 'wb') as f:\n                    for chunk in r.iter_content(chunk_size=8192):   # write with chunks the remote retrieved file into file_path location \n                        f.write(chunk)\n\n        original_file_name = data.get('original_file_name')\n\n        file_path = os.path.join(temp_dir_path, data['file'])      \n        lp = file_path.lower()\n        if lp.endswith(('.zip', '.tar.gz')):\n            if lp.endswith('.zip'):\n                with zipfile.ZipFile(file_path) as f:\n                    f.extractall(temp_dir_path)\n            elif lp.endswith('.tar.gz'):\n                with tarfile.open(file_path) as f:  # Just after \n                    f.extractall(temp_dir_path)  # Sink: the tarball located by file_path is supposed to be extracted to temp_dir_path. \n```\n\nSo, a remotely available tarball is being retrieved and written to the server filesystem in chunks, and then, if the extension ends with `.tar.gz` of a compressed tarball, the mindsdb app applies `tarfile.extractall()` directly with no checks for the destination. \n\nHowever, according to the following [warning](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall) from the official documentation;\n\n> Warning: Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of path, e.g. members that have absolute filenames starting with \"/\" or filenames with two dots \"..\". \n\n\n### PoC\n\nThe following PoC is provided for illustration purposes only. It showcases the risk of extracting a non-harmless text file `sim4n6.txt` to one of the parent locations rather than the intended current folder.\n\n```bash\n> tar --list -v -f archive.tar.gz\ntar: Removing leading \"../../../\" from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tarfile\n>>> with tarfile.open(\"archive.tar.gz\") as tf:\n>>>         tf.extractall()\n>>> exit()\n\n> test -f ../../../sim4n6.txt && echo \"sim4n6.txt exists\"\nsim4n6.txt exists\n```\n\n### Attack Scenario\n\nAn attacker could craft a malicious tarball with a filename path, such as ../../../../../../../../etc/passwd, and then serve the archive remotely, proceed to the PUT request of the tarball through mindsdb and overwrite the system files of the hosting server for instance.\n\n### Mitigation \n\nPotential mitigation could be to:\n - Use a safer module, like `zipfile`.\n - Use an alternative of `tarfile`, such as `tarsafe`. \n  - Validate the location or the absolute path of the extracted files and discard those with malicious paths such as relative path `../../..` or absolute path such as `/etc/password`. A simple wrapper could be written to raise an exception when a path traversal may be identified.\n\nThis is similar to the other report [GHSA-7x45-phmr-9wqp](https://github.com/mindsdb/mindsdb/security/advisories/GHSA-7x45-phmr-9wqp).",
      "fixed_in": [],
      "id": "GHSA-2g5w-29q9-w6hx",
      "link": "https://osv.dev/vulnerability/GHSA-2g5w-29q9-w6hx",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}