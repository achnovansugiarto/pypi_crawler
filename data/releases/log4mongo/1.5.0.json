{
  "info": {
    "author": "Vladimír Gorej",
    "author_email": "gorej@codescale.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: System :: Logging",
      "Topic :: System :: Monitoring",
      "Topic :: Utilities"
    ],
    "description": "log4mongo-python\n================\nlog4mongo-python is mongo database handler for python logging, part of log4mongo.org project.\nlog4mongo-python is using pymongo driver - http://github.com/mongodb/mongo-python-driver\n\n\nRequirements\n------------\n\n- python 2.7+\n- pymongo 2.8+\n- mongo database\n\nFor more information see *debian_requirements.txt* and *requirements.txt* files.\n\nConfiguration\n-------------\n\nExample handler python configuration: ::\n\n import logging\n from log4mongo.handlers import MongoHandler\n\n logger = logging.getLogger('test')\n logger.addHandler(MongoHandler(host='localhost'))\n logger.warning('test')\n\n\nContextual information\n----------------------\n\nIt is possible to decorate you document with contextual information. There are tow approaches.\n\n**1.) approach**\n::\n\n import logging\n from log4mongo.handlers import MongoHandler\n\n handler = MongoHandler(host='localhost')\n logger = logging.getLogger('test')\n logger.addHandler(handler)\n logging.LoggerAdapter(logger, {'ip': '127.0.0.1'}).info('test')\n\n**2.) approach**\n::\n\n import logging\n from log4mongo.handlers import MongoHandler\n\n handler = MongoHandler(host='localhost')\n logger = logging.getLogger('test')\n logger.addHandler(handler)\n logger.info('test', extra={'ip': '127.0.0.1'})\n\n\nAs you can see, second approach is more straightforward and there is no need to use LoggerAdapter.\n\n\nCapped collections\n------------------\n\nCapped collections are fixed-size collections that support high-throughput operations that insert, retrieve,\nand delete documents based on insertion order. Capped collections work in a way similar\nto circular buffers: once a collection fills its allocated space, it makes room for new documents\nby overwriting the oldest documents in the collection.\n\nBefore switching to capped collections, read this document please: http://docs.mongodb.org/manual/core/capped-collections/\n\nThis behaviour is disabled by default. You can enable this behaviour in constructor with *capped=True*:\n::\n\n import logging\n from log4mongo.handlers import MongoHandler\n\n handler = MongoHandler(host='localhost', capped=True)\n\n\nTests\n-----\n\n** Tested on evnironment **\n\n- Ubuntu 14.04\n- python 2.7.4\n- pymongo >2.8.3\n- mongod - db version v3.0.2\n- python unittest\n\n**Running tests**\n\nBefore you run the test you must start mongo database. You will do so by this command: ::\n\n $ mongod --dbpath /tmp/\n\n\nTo run the test run command: ::\n\n $ python test.py\n $ python setup.py test\n\n\nSee vagrant file to quickly setup the test environment.\n\nOriginal Author\n---------------\n\n| char0n (Vladimír Gorej, CodeScale s.r.o.) \n| email: gorej@codescale.net\n| web: http://www.codescale.net\n\nCurrent Maitainer\n-----------------\n| Oz Nahum Tiram\n| email: nahumoz@gmail.com\n| web: oz123.github.io\n\nReferences\n----------\n- http://www.mongodb.org/\n- http://docs.python.org/library/logging.html\n- http://github.com/mongodb/mongo-python-driver\n- http://log4mongo.org",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://github.com/log4mongo/log4mongo-python/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://log4mongo.org/display/PUB/Log4mongo+for+Python",
    "keywords": "mongodb mongo logging handler",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "log4mongo",
    "package_url": "https://pypi.org/project/log4mongo/",
    "platform": "any",
    "project_url": "https://pypi.org/project/log4mongo/",
    "project_urls": {
      "Download": "http://github.com/log4mongo/log4mongo-python/tarball/master",
      "Homepage": "http://log4mongo.org/display/PUB/Log4mongo+for+Python"
    },
    "release_url": "https://pypi.org/project/log4mongo/1.5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "mongo database handler for python logging",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6206292,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54117d919753c1c8a89bb8cf7eb869ae3d4c9b134423befdac581adeec035cd5",
        "md5": "8bf0ad2618dace6b7a78bddcfca901ac",
        "sha256": "d9937056e41d752ef9f55389239674a4a14bc1c7e7c574a2ed193efba953c584"
      },
      "downloads": -1,
      "filename": "log4mongo-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8bf0ad2618dace6b7a78bddcfca901ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6946,
      "upload_time": "2016-08-16T18:33:25",
      "upload_time_iso_8601": "2016-08-16T18:33:25.144544Z",
      "url": "https://files.pythonhosted.org/packages/54/11/7d919753c1c8a89bb8cf7eb869ae3d4c9b134423befdac581adeec035cd5/log4mongo-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}