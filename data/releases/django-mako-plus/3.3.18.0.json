{
  "info": {
    "author": "Conan Albrecht",
    "author_email": "ca@byu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development"
    ],
    "description": "IMPORTANT: See the tutorial at the DMP home page: https://github.com/doconix/django-mako-plus\n           The tutorial provides a much more detailed description of this project.\n\n\nUse This If You've Said:\n\n* Is there an alternative to the Django templating language?\n* Why are Django templates weak sauce? Why not just use regular Python in templates?\n* Why does Django make me list every. single. page. in urls.py?\n* I'd like to include Python code in my CSS and Javascript files.\n* My app's views.py file is getting HUGE.  How can I split it intelligently?\n\n\nDescription\n\nThis app is a front controller that integrates the excellent Django framework with the also excellent Mako templating engine.  Django comes with its own template system, but it's fairly weak (by design).  Mako, on the other hand, is a fantastic template system that allows full Python code within HTML pages. But the framework doesn't stop there (that's the \"plus\" part of the name).  Django-Mako-Plus adds the following features:\n\n1. DMP uses the Mako templating engine rather than the weaker Django templating engine.  Why would I want to learn a whole new language for templating when Mako uses my favorite language: Python?\n\n2. DMP allows calling views and html pages by convention rather than specific entries in urls.py. Any .html file on your site can be called without new entries in urls.py for every. single. new. page.  Doesn't Python favor convention over configuration?\n\n3. DMP introduces the idea of URL parameters.  These allow you to embed parameters in urls, Django style (but without requiring urls.py definitions).\n\n4. DMP separates view functions into different files rather than all-in-one style.  Anyone who has programmed Django long knows that the single views.py file in each app often gets looooonnng.  Splitting logic into separate files keeps things more orderly.\n\n5. DMP automatically includes CSS and JS files, and it allows Python code within these files.  These static files get included in your web pages without any explicit declaration of `<link>` or `<script>` elements.   This means that `mypage.css` and `mypage.js` get linked in `mypage.html` automatically.  Python code within these support files means your CSS can change based on user or database entries.\n\n6. DMP integrates with Sass by automatically running `scss` on updated .scss files.\n\nBut don't worry, you'll still get all the Django goodness with its fantastic ORM, views, forms, etc.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/doconix/django-mako-plus/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/doconix/django-mako-plus",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-mako-plus",
    "package_url": "https://pypi.org/project/django-mako-plus/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-mako-plus/",
    "project_urls": {
      "Download": "https://github.com/doconix/django-mako-plus/archive/master.zip",
      "Homepage": "https://github.com/doconix/django-mako-plus"
    },
    "release_url": "https://pypi.org/project/django-mako-plus/3.3.18.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Combines Django framework and Mako templating engine, plus a few bonuses.",
    "version": "3.3.18.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5155632,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c1c5d7d6cfd7e8a691b791fb1f67e6226b76bb4779912ffa3ee2bf8e267735c",
        "md5": "f840929051c54bd5a8f63298705f6760",
        "sha256": "0931f4d25810171e2ecea5c031705472ccb46a4d5293178edd191aef6ce37dbe"
      },
      "downloads": -1,
      "filename": "django_mako_plus-3.3.18.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f840929051c54bd5a8f63298705f6760",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30022,
      "upload_time": "2017-02-03T20:50:52",
      "upload_time_iso_8601": "2017-02-03T20:50:52.293904Z",
      "url": "https://files.pythonhosted.org/packages/6c/1c/5d7d6cfd7e8a691b791fb1f67e6226b76bb4779912ffa3ee2bf8e267735c/django_mako_plus-3.3.18.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}