{
  "info": {
    "author": "Michael Shepanski",
    "author_email": "mjs7231@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "Django Database Backup\n======================\n\n.. image:: https://api.travis-ci.org/django-dbbackup/django-dbbackup.svg\n        :target: https://travis-ci.org/django-dbbackup/django-dbbackup\n\n.. image:: https://readthedocs.org/projects/django-dbbackup/badge/?version=latest\n        :target: https://readthedocs.org/projects/django-dbbackup/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://coveralls.io/repos/django-dbbackup/django-dbbackup/badge.svg?branch=master&service=github\n        :target: https://coveralls.io/github/django-dbbackup/django-dbbackup?branch=master\n\n\nThis Django application provides management commands to help backup and\nrestore your project database and media files with various storages such as\nAmazon S3, DropBox or local file storage.\n\nIt is made for:\n\n-  Ensure yours backup with GPG signature and encryption\n-  Archive with compression\n-  Use Crontab or Celery to setup automated backups.\n-  Great to keep your development database up to date.\n\nDocs\n====\n\nSee our offical documentation at `Read The Docs`_.\n\n\nManagement Commands\n===================\n\ndbbackup\n--------\nBackup your database to the specified storage. By default this will backup all databases specified in your settings.py file and will not delete any old backups. You can optionally specify a server name to be included in the backup filename.\n\n    dbbackup [-s <servername>] [-d <database>] [--clean] [--compress] [--encrypt] [--backup-extension <file-extension>]\n\ndbrestore\n---------\nRestore your database from the specified storage. By default this will lookup the latest backup and restore from that. You may optionally specify a servername if you you want to backup a database image that was created from a different server. You may also specify an explicit local file to backup from.\n\n    dbrestore [-d <database>] [-s <servername>] [-f <localfile>] [--uncompress] [--backup-extension <file-extension>]\n\nmediabackup\n-----------\nBackup media files. Default this will backup the files in the MEDIA_ROOT. Optionally you can set the DBBACKUP_MEDIA_PATH setting.\n\n   mediabackup [--encrypt] [--clean] [--servername <servername>]\n\n\nContributing\n============\n\nAll contribution are very welcomed, propositions, problems, bugs and\nenhancement are tracked with `GitHub issues`_ system and patch are submitted\nvia `pull requests`_.\n\nWe use `Travis`_ coupled with `Coveralls`_ as continious integration tools.\n\n.. _`Read The Docs`: http://django-dbbackup.readthedocs.org/\n.. _`GitHub issues`: https://github.com/django-dbbackup/django-dbbackup/issues\n.. _`pull requests`: https://github.com/django-dbbackup/django-dbbackup/pulls\n.. _Travis: https://travis-ci.org/django-dbbackup/django-dbbackup\n.. _Coveralls: https://coveralls.io/github/django-dbbackup/django-dbbackup\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/django-dbbackup/django-dbbackup",
    "keywords": "django,dropbox,database,backup,amazon,s3",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-dbbackup",
    "package_url": "https://pypi.org/project/django-dbbackup/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-dbbackup/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/django-dbbackup/django-dbbackup"
    },
    "release_url": "https://pypi.org/project/django-dbbackup/2.3.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Management commands to help backup and restore a project database to AmazonS3, Dropbox or local disk.",
    "version": "2.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15234864,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d8a0e76b827d778c24e38fcfb91e8bc1191384a045e887071e8f186c752a56a",
        "md5": "6478880050c089018aeb61a1b6a749f9",
        "sha256": "b60fc15528a275e3c9f8dd7596d1dad0797a90e8e40a56bbe484540449297ffa"
      },
      "downloads": -1,
      "filename": "django-dbbackup-2.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6478880050c089018aeb61a1b6a749f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26965,
      "upload_time": "2015-10-15T02:56:14",
      "upload_time_iso_8601": "2015-10-15T02:56:14.062144Z",
      "url": "https://files.pythonhosted.org/packages/1d/8a/0e76b827d778c24e38fcfb91e8bc1191384a045e887071e8f186c752a56a/django-dbbackup-2.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}