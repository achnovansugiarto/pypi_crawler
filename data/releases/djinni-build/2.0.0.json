{
  "info": {
    "author": "jothepro",
    "author_email": "djinni_build@jothe.pro",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# djinni_build.py ðŸ¦Ž\n\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/jothepro/djinni_build)](https://github.com/jothepro/djinni_build/releases/latest)\n[![GitHub](https://img.shields.io/github/license/jothepro/djinni_build)](https://github.com/jothepro/djinni_build/blob/main/LICENSE)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/djinni_build)\n\nUtility to package and distribute Djinni libraries easily.\n\n## Requirements\n\n- A project structure close to [jothepro/djinni-library-template](https://github.com/jothepro/djinni-library-template)\n- Should be used together with [jothepro/djinni-cmake](https://github.com/jothepro/djinni-cmake).\n- Python >= 3.10\n\n\n## What it does\n\nThis utility automates the building & packaging for Djinni libraries.\n\nIt supports these platforms:\n\n- Android (AAR)\n- iOS (xcframework, Swiftpackage)\n- macOS (xcframework, Swiftpackage)\n- Windows (NuGet .NET package)\n- Linux (Conan)\n\n[`DjinniBuild`](djinni_build/djinni_build.py) provides a CLI that allows the user to configure what the output should be.\n\nThe user is able to configure:\n\n- What target platform to build for (Android, iOS, macOS, Windows, Linux)\n- Which architectures to build for (x86, x86_64, armv7, armv8)\n- How to package the resulting binaries (AAR, NuGet, XCFramework, Swift Package, Conan)\n\nFor every target language, the following steps are executed:\n\n- **Configure Project & Install Dependencies**: Runs `conan install` for each target architecture & target platform\n  to configure the CMake project and install all dependencies defined in the Conanfile.\n- **Build**: Runs `conan build` for each requested target architecture & platform\n- **Package**: Executes the platform specific packaging tasks.\n\n\n## How to use\n\nInstall `djinni_build` from PYPi:\n\n```bash\npip install djinni_build\n```\n\nThen import `DjinniBuild` and configure the project structure and then execute the `main()` function:\n\n```python3\n#!/usr/bin/env python3\n\nfrom djinni_build import DjinniBuild\n\ndjinniBuild = DjinniBuild(\n  darwin_target='MyDjinniLibrary',\n  windows_target='MyDjinniLibrary',\n  android_target='MyDjinniLibrary',\n  android_module_name='MyDjinniLibrary',\n  nupkg_name='MyDjinniLibrary',\n  conan_user='jothepro',\n  conan_channel='release'\n)\ndjinniBuild.main()\n```\n\nIn its current state not everything in the script is configurable and some things will only work if the correct\ndirectory structures and files are present.\nIt is recommended to strictly stick with the project structure of [jothepro/djinni-library-template](https://github.com/jothepro/djinni-library-template)\nto avoid compatibility issues!\n\n## CLI Interface\n\nThis example output from the CLI shows what the configuration options for the user are:\n\n```\nusage: build.py [-h] [--configuration {release,debug}] [--android [{x86_64,x86,armv8,armv7} ...]] [--macos [{armv8,x86_64} ...]]\n                [--iphonesimulator [{armv8,x86_64} ...]] [--iphoneos [{armv8,armv7} ...]] [--windows [{x86_64,x86,armv8,armv7} ...]]\n                [--linux [{x86_64,x86,armv8,armv7} ...]] [--build-directory BUILD_DIRECTORY] [--build-profile CONAN_BUILD_PROFILE]\n                [--package [{xcframework,swiftpackage,conan,aar,nuget} ...]]\n\nBuild & package library for different platforms\n\noptions:\n  -h, --help            show this help message and exit\n  --configuration {release,debug}\n  --android [{x86_64,x86,armv8,armv7} ...]\n                        list of architectures that the library should be built for android\n  --macos [{armv8,x86_64} ...]\n                        list of architectures to build for macOS\n  --iphonesimulator [{armv8,x86_64} ...]\n                        list of architectures to build for the iOS Simulator\n  --iphoneos [{armv8,armv7} ...]\n                        list of architectures to build for iOS\n  --windows [{x86_64,x86,armv8,armv7} ...]\n                        list of architectures to build for windows\n  --linux [{x86_64,x86,armv8,armv7} ...]\n                        list of architectures to build for linux\n  --build-directory BUILD_DIRECTORY\n  --build-profile CONAN_BUILD_PROFILE\n  --package [{xcframework,swiftpackage,conan,aar,nuget} ...]\n                        which packages to create. Packages that cannot be created for the selected target platforms will be ignored.\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jothepro/djinni_build",
    "keywords": "djinni",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djinni-build",
    "package_url": "https://pypi.org/project/djinni-build/",
    "platform": null,
    "project_url": "https://pypi.org/project/djinni-build/",
    "project_urls": {
      "Homepage": "https://github.com/jothepro/djinni_build"
    },
    "release_url": "https://pypi.org/project/djinni-build/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Utility to package and distribute Djinni libraries easily.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15321691,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf66a05b20de9bcfeb6fba852fee265c2633aa8c41d7c1819f3365f2a4ec4970",
        "md5": "eeb6d6f64d14c06c94810208c788abe1",
        "sha256": "93ccf9c9b5bc27f7d78fb3310f2d126b7c87d7f23567c5a5056bc0be6966a326"
      },
      "downloads": -1,
      "filename": "djinni_build-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eeb6d6f64d14c06c94810208c788abe1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 11544,
      "upload_time": "2022-10-06T10:22:37",
      "upload_time_iso_8601": "2022-10-06T10:22:37.191660Z",
      "url": "https://files.pythonhosted.org/packages/bf/66/a05b20de9bcfeb6fba852fee265c2633aa8c41d7c1819f3365f2a4ec4970/djinni_build-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}