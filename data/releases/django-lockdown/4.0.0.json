{
  "info": {
    "author": "Carl Meyer",
    "author_email": "carl@dirtcircle.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "===============\ndjango-lockdown\n===============\n\n.. image:: https://github.com/Dunedan/django-lockdown/workflows/CI/badge.svg\n    :target: https://github.com/Dunedan/django-lockdown/actions\n    :alt: Build Status\n.. image:: https://coveralls.io/repos/Dunedan/django-lockdown/badge.svg\n    :target: https://coveralls.io/r/Dunedan/django-lockdown\n    :alt: Test Coverage\n.. image:: https://img.shields.io/pypi/v/django-lockdown.svg\n    :target: https://pypi.org/project/django-lockdown/\n    :alt: Latest Version\n\n``django-lockdown`` is a reusable Django application for locking down an entire\nsite (or particular views), with customizable date ranges and preview\nauthorization.\n\nInstallation\n============\n\nInstall from PyPI with ``easy_install`` or ``pip``::\n\n    pip install django-lockdown\n\nTo use ``django-lockdown`` in your Django project:\n\n1. Add ``'lockdown'`` to your ``INSTALLED_APPS``.\n   If you want to use one of ``django-lockdowns`` default lock down forms,\n   you'll additionally have to ensure that you have enabled\n   ``django.contrib.auth`` as part of to your ``INSTALLED_APPS``.\n\n2. To enable admin preview of locked-down sites or views with\n   passwords, set the `LOCKDOWN_PASSWORDS`_ setting to a tuple of one or\n   more plain-text passwords.\n\n3. Protect the entire site by using middleware, or protect individual views\n   by applying a decorator to them.\n\nFor more advanced customization of admin preview authorization, see\nthe `LOCKDOWN_FORM`_ setting.\n\nDependencies\n------------\n\n``django-lockdown`` requires `Python`_ 3.6 or later and `Django`_ 2.2 or later.\n\nAs an alternative to CPython `PyPy`_ 3.5 and 3.6 are supported as well.\n\n.. _Python: https://www.python.org/\n.. _Django: https://www.djangoproject.com/\n.. _PyPy: https://pypy.org/\n\nUsage\n=====\n\nUsing the middleware\n--------------------\n\nTo lock down the entire site, add the lockdown middleware to your middlewares::\n\n    MIDDLEWARE = [\n        # ...\n        'lockdown.middleware.LockdownMiddleware',\n    ]\n\nOptionally, you may also add URL regular expressions to a\n`LOCKDOWN_URL_EXCEPTIONS`_ setting.\n\nUsing the decorator\n-------------------\n\n- Import the decorator::\n\n    from lockdown.decorators import lockdown\n\n- Apply the decorator to individual views you want to protect. For example::\n\n    @lockdown()\n    def secret_page(request):\n        # ...\n\nThe decorator accepts seven arguments:\n\n``form``\n  The form to use for providing an admin preview, rather than the form\n  referenced by `LOCKDOWN_FORM`_. Note that this must be an actual form class,\n  not a module reference like the setting.\n\n``until_date``\n  The date to use rather than the date provided by `LOCKDOWN_UNTIL`_.\n\n``after_date``\n  The date to use rather than the date provided by `LOCKDOWN_AFTER`_.\n\n``logout_key``\n  A preview logout key to use, rather than the one provided by\n  `LOCKDOWN_LOGOUT_KEY`_.\n\n``session_key``\n  The session key to use, rather than the one provided by\n  `LOCKDOWN_SESSION_KEY`_.\n\n``url_exceptions``\n  A list of regular expressions for which matching urls can bypass the lockdown\n  (rather than using those defined in `LOCKDOWN_URL_EXCEPTIONS`_).\n\n``remote_addr_exceptions``\n A list of IP-addresses or IP-subnets for which matching URLs can bypass the\n lockdown (rather than using those defined in\n `LOCKDOWN_REMOTE_ADDR_EXCEPTIONS`_).\n\n``extra_context``\n  A dictionary of context data that will be added to the default context data\n  passed to the template.\n\nAny further keyword arguments are passed to the admin preview form. The default\nform accepts one argument:\n\n``passwords``\n  A tuple of passwords to use, rather than the ones provided by\n  `LOCKDOWN_PASSWORDS`_.\n\n\nSettings\n========\n\nLOCKDOWN_ENABLED\n----------------\n\nAn optional boolean value that, if set to False, disables\n``django-lockdown`` globally. Defaults to True (lock down enabled).\n\n\nLOCKDOWN_PASSWORDS\n------------------\n\nOne or more plain-text passwords which allow the previewing of the site or\nviews protected by django-lockdown::\n\n    LOCKDOWN_PASSWORDS = ('letmein', 'beta')\n\nIf this setting is not provided (and the default `LOCKDOWN_FORM`_ is being\nused), there will be no admin preview for locked-down pages.\n\nIf a `LOCKDOWN_FORM`_ other than the default is used, this setting has no\neffect.\n\nLOCKDOWN_URL_EXCEPTIONS\n-----------------------\n\nAn optional list/tuple of regular expressions to be matched against incoming\nURLs. If a URL matches a regular expression in this list, it will not be\nlocked. For example::\n\n    LOCKDOWN_URL_EXCEPTIONS = (\n        r'^/about/$',   # unlock /about/\n        r'\\.json$',   # unlock JSON API\n    )\n\nLOCKDOWN_VIEW_EXCEPTIONS\n------------------------\n\nAn optional list of regular expressions to be matched against the\nresolved views of incoming requests. If the URL of an incoming request\nresolves to one of the views in the list, it will not be locked.\nThat's useful if you want to lock down a whole site using the middleware,\nbut want to whitelist some localized URLs.\n\nFor example::\n\n    from yourapp import one_view_to_unlock, another_view_to_unlock\n\n    LOCKDOWN_VIEW_EXCEPTIONS = [\n        one_view_to_unlock,\n        another_view_to_unlock\n    ]\n\nLOCKDOWN_REMOTE_ADDR_EXCEPTIONS\n-------------------------------\n\nAn optional list of IP-addresses or IP-subnets to be matched against the\nrequesting IP-address (from `requests.META['REMOTE_ADDR']`). If the\nrequesting IP-address is in this list, it will not be locked. For example::\n\n    LOCKDOWN_REMOTE_ADDR_EXCEPTIONS = [\n        '127.0.0.1',\n        '::1',\n    ]\n\nLOCKDOWN_TRUSTED_PROXIES\n-------------------------------\n\nA list of trusted proxy IP-addresses to be used in conjunction with \n`LOCKDOWN_REMOTE_ADDR_EXCEPTIONS` when a reverse-proxy or load balancer is used.\nIf the requesting IP address is from the trusted proxies list the last address from \nthe `X-Forwared-For` header (from `requests.META['HTTP_X_FORWARDED_FOR']`) will be \nchecked against `LOCKDOWN_REMOTE_ADDR_EXCEPTIONS` and locked or unlocked accordingly.\n\nFor example::\n\n    LOCKDOWN_TRUSTED_PROXIES = [\n        '172.17.0.1',\n    ]\n\n    LOCKDOWN_REMOTE_ADDR_EXCEPTIONS = [\n        '172.17.0.5',\n    ]\n\nLOCKDOWN_UNTIL\n--------------\n\nUsed to lock the site down up until a certain date. Set to a\n``datetime.datetime`` object.\n\nIf neither ``LOCKDOWN_UNTIL`` nor `LOCKDOWN_AFTER`_ is provided (the default),\nthe site or views will always be locked.\n\nLOCKDOWN_AFTER\n--------------\n\nUsed to lock the site down after a certain date. Set to a ``datetime.datetime``\nobject.\n\nSee also: `LOCKDOWN_UNTIL`_.\n\nLOCKDOWN_LOGOUT_KEY\n-------------------\n\nA key which, if provided in the query string of a locked URL, will log out the\nuser from the preview. \n\nLOCKDOWN_FORM\n-------------\n\nThe default lockdown form allows admin preview by entering a preset\nplain-text password (checked, by default, against the `LOCKDOWN_PASSWORDS`_\nsetting). To set up more advanced methods of authenticating access to\nlocked-down pages, set ``LOCKDOWN_FORM`` to the Python dotted path to a Django\n``Form`` subclass. This form will be displayed on the lockout page. If the form\nvalidates when submitted, the user will be allowed access to locked pages::\n\n    LOCKDOWN_FORM = 'path.to.my.CustomLockdownForm'\n\nA form for authenticating against ``django.contrib.auth`` users is provided\nwith django-lockdown (use ``LOCKDOWN_FORM = 'lockdown.forms.AuthForm'``). It\naccepts two keyword arguments (in the ``lockdown`` decorator):\n\n``staff_only``\n  Only allow staff members to preview. Defaults to ``True`` (but the default\n  can be provided as a `LOCKDOWN_AUTHFORM_STAFF_ONLY`_ setting).\n\n``superusers_only``\n  Only allow superusers to preview. Defaults to ``False`` (but the default\n  can be provided as a `LOCKDOWN_AUTHFORM_SUPERUSERS_ONLY`_ setting).\n\nLOCKDOWN_AUTHFORM_STAFF_ONLY\n----------------------------\n\nIf using ``lockdown.forms.AuthForm`` and this setting is ``True``, only staff\nusers will be allowed to preview (True by default).\n\nHas no effect if not using ``lockdown.forms.AuthForm``.\n\nLOCKDOWN_AUTHFORM_SUPERUSERS_ONLY\n---------------------------------\n\nIf using ``lockdown.forms.AuthForm`` and this setting is ``True``, only\nsuperusers will be allowed to preview (False by default). Has no effect if not\nusing ``lockdown.forms.AuthForm``.\n\nLOCKDOWN_SESSION_KEY\n--------------------\n\nOnce a client is authorized for admin preview, they will continue to\nbe authorized for the remainder of their browsing session (using\nDjango's built-in session support). ``LOCKDOWN_SESSION_KEY`` defines\nthe session key used; the default is ``'lockdown-allow'``.\n\n\nTemplates\n=========\n\n``django-lockdown`` uses a single template, ``lockdown/form.html``. The\ndefault template displays a simple \"coming soon\" message and the\npreview authorization form, if a password via `LOCKDOWN_PASSWORDS`_ is set.\n\nIf you want to use a different template, you can use Djangos template\n`loaders`_ to specify a path inside your project to search for templates,\nbefore searching for templates included in ``django-lockdown``.\n\nIn your overwritten template the lockdown preview form is available in the\ntemplate context as ``form``.\n\n.. _loaders: https://docs.djangoproject.com/en/2.1/ref/templates/api/#template-loaders\n\nCHANGES\n=======\n\n4.0.0 (2021-02-14)\n------------------\n\n- Remove support for end-of-life Django versions (1.11, 2.0 and 2.1).\n\n- Add support for Python 3.9 and remove support for Python 3.5.\n\n- Add support for Django 3.1.\n\n3.0.0. (2020-01-01)\n-------------------\n\n- Added support for Python 3.8.\n\n- Added support for Django 3.0.\n\n- Removed support for Python 2.7 and 3.4.\n\n2.0.0 (2019-05-26)\n------------------\n\n- Added support for proxies when using IP-address based lockdown exceptions.\n\n- This introduces a breaking change: Installations running behind a proxy will\n  need to set the newly introduced ``LOCKDOWN_TRUSTED_PROXIES``, otherwise\n  access won't be granted anymore, when accessing the site through a proxy.\n\n- Added the ability to whitelist views when locking down a whole site using\n  the middleware.\n\n- Added support for Django 2.2.\n\n- Only require ``mock`` as separate third-party test dependency for\n  Python <3.3.\n\n- Fix detection of compacted IP-addresses.\n\n- This introduces a breaking change for users which make use of the\n  ``REMOTE_ADDR_EXCEPTIONS`` feature and passed the IP-addresses to except as\n  byte strings in the configuration. While it's unlikely somebody did that\n  with Python 3, it's the default for Python 2. With this version, byte\n  strings don't work anymore, but using unicode strings is required.\n\n- Add the ability to specify IP-subnets for remote addresses exception.\n\n1.6.0 (2018-11-25)\n------------------\n\n- Drops support for Django <=1.10.\n\n- Drops support for Python 3.3.\n\n- Add the ability to bypass the lockdown for configured IP-addresses.\n\n- Integrate pre-commit for code style checks during commit and CI.\n\n- Added support for Django 2.1.\n\n- Add support for Python 3.7.\n\n- Add support for PyPy.\n\n1.5.0 (2017-12-05)\n------------------\n\n- Add support for Django 2.0\n\n- Improve the code style in some areas\n\n1.4.2 (2017-04-07)\n------------------\n\n- Fix formatting for PyPi\n\n\n1.4.1 (2017-04-07)\n------------------\n\n- Fix problem with upload for PyPi\n\n\n1.4.0 (2017-04-06)\n------------------\n\n- Refactor tests to use Mocks\n\n- Add support for Python 3.6\n\n- Add support for Django 1.11\n\n\n1.3 (2016-08-07)\n----------------\n\n- Adds support for Django 1.10.\n\n- Adds support for providing additional context data to the lockdown template.\n\n\n1.2 (2015-12-03)\n----------------\n\n- Adds support for Python 3.5.\n\n- Adds support for Django 1.9.\n\n- Drops support for Django <=1.7.\n\n- Fixes not working URL exceptions when specifying them in the decorator\n  arguments.\n\n- Improves tests.\n\n1.1 (2015-04-06)\n----------------\n\n- Proper new version after 0.1.2 and 0.1.3 have been tagged after the release\n  of 1.0. Contains all new features of 0.1.2 and 0.1.3, most notably support\n  for Python 3.\n\n- Last version of django-lockdown with support for Django 1.3, 1.5 and 1.6.\n  Upcoming versions will only support Django versions with official security\n  support. For the time being these are Django 1.4 LTS, 1.7 and 1.8 LTS.\n\n- Fixes testing for Django >=1.7\n\n0.1.3 (2014-03-15) (never released)\n-----------------------------------\n\n- Added ``LOCKDOWN_ENABLED`` setting.\n\n- Removed Django 1.1 backport of ``decorator_from_middleware_with_args``.\n\n0.1.2 (2014-03-15) (never released)\n-----------------------------------\n\n- Require at least Django 1.3.\n\n- Fixed the test runner script to work with recent Django versions.\n\n- Added the csrf_token template tag to the included form template.\n\n- Minor syntax adjustments for Python 3 compatibility.\n\n1.0 (2013-07-10)\n----------------\n\n- BACKWARDS INCOMPATIBLE: Allow multiple passwords (the passwords setting has\n  changed from ``LOCKDOWN_PASSWORD`` to ``LOCKDOWN_PASSWORDS``).\n\n- Decorator changed to a callable decorator (so settings can be overridden for\n  an individual decorator).\n\n- Add ``AuthForm`` which can be used to allow previewing from authenticated\n  users (via ``django.contrib.auth``).\n\n- Allow locking up until or only after certain dates.\n\n0.1.1 (2009-11-24)\n------------------\n\n- Fix setup.py so ``tests`` package is not installed.\n\n0.1 (2009-11-16)\n----------------\n\n- Initial release.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dunedan/django-lockdown/",
    "keywords": "",
    "license": "",
    "maintainer": "Daniel Roschka",
    "maintainer_email": "danielroschka@phoenitydawn.de",
    "name": "django-lockdown",
    "package_url": "https://pypi.org/project/django-lockdown/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-lockdown/",
    "project_urls": {
      "Homepage": "https://github.com/Dunedan/django-lockdown/"
    },
    "release_url": "https://pypi.org/project/django-lockdown/4.0.0/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": "",
    "summary": "Lock down a Django site or individual views, with configurable preview authorization",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9412453,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab6820bceb90346d732f95fbffec9efccaf2cfba5016751741542d67bace12b7",
        "md5": "8dd61195ec93b72ecf26cf78e8433d72",
        "sha256": "ac3635e455038f8ed9e473e37eda7254061a02c4f1937793360b0c1104367552"
      },
      "downloads": -1,
      "filename": "django_lockdown-4.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dd61195ec93b72ecf26cf78e8433d72",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12436,
      "upload_time": "2021-02-14T07:05:23",
      "upload_time_iso_8601": "2021-02-14T07:05:23.264989Z",
      "url": "https://files.pythonhosted.org/packages/ab/68/20bceb90346d732f95fbffec9efccaf2cfba5016751741542d67bace12b7/django_lockdown-4.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f2dfdd27c1857c4e6e7d2652c3eed208f40e183aa84851d7932b27b76a01f05",
        "md5": "0462b7fbae691ca6e1c64c4962842f58",
        "sha256": "6e70431382ea9dfdc2144d0882070d1d0c9669fc4f44aece76a6cafd5fcff0cf"
      },
      "downloads": -1,
      "filename": "django-lockdown-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0462b7fbae691ca6e1c64c4962842f58",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12988,
      "upload_time": "2021-02-14T07:05:24",
      "upload_time_iso_8601": "2021-02-14T07:05:24.731259Z",
      "url": "https://files.pythonhosted.org/packages/0f/2d/fdd27c1857c4e6e7d2652c3eed208f40e183aa84851d7932b27b76a01f05/django-lockdown-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}