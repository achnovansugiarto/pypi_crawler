{
  "info": {
    "author": "Bradley Ayers",
    "author_email": "bradley.ayers@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "django-tables2 - An app for creating HTML tables\n================================================\n\n|Build status|\n\ndjango-tables2 simplifies the task of turning sets of data into HTML\ntables. It has native support for pagination and sorting. It does for\nHTML tables what ``django.forms`` does for HTML forms. e.g.\n\n.. figure:: http://dl.dropbox.com/u/33499139/django-tables2/example.png\n   :alt: An example table rendered using django-tables2\n\n   An example table rendered using django-tables2\nIts features include:\n\n-  Any iterable can be a data-source, but special support for Django\n   querysets is included.\n-  The builtin UI does not rely on JavaScript.\n-  Support for automatic table generation based on a Django model.\n-  Supports custom column functionality via subclassing.\n-  Pagination.\n-  Column based table sorting.\n-  Template tag to enable trivial rendering to HTML.\n-  Generic view mixin.\n\nExample\n=======\n\nCreating a table for a model ``Simple`` is as simple as:\n\n.. code:: python\n\n    import django_tables2 as tables\n\n    class SimpleTable(tables.Table):\n        class Meta:\n            model = Simple\n\nThis would then be used in a view:\n\n.. code:: python\n\n    def simple_list(request):\n        queryset = Simple.objects.all()\n        table = SimpleTable(queryset)\n        return render_to_response(\"simple_list.html\", {\"table\": table},\n                                  context_instance=RequestContext(request))\n\nAnd finally in the template:\n\n::\n\n    {% load django_tables2 %}\n    {% render_table table %}\n\nThis example shows one of the simplest cases, but django-tables2 can do\na lot more! Check out the\n`documentation <http://django-tables2.readthedocs.org/en/latest/>`__ for\nmore details.\n\nBuilding the documentation\n==========================\n\nIf you want to build the docs from within a virtualenv, and Sphinx is\ninstalled globally, use:\n\n::\n\n    make html SPHINXBUILD=\"python $(which sphinx-build)\"\n\nPublishing a release\n====================\n\n1. Bump the version in ``django-tables2/__init__.py``.\n2. Update ``CHANGELOG.md``.\n3. Create a tag ``git tag -a v1.0.6 -m 'tagging v1.0.6'``\n4. Run\n   ``python setup.py sdist upload --sign --identity=<your gpg identity>``.\n\n.. |Build status| image:: https://travis-ci.org/bradleyayers/django-tables2.svg\n   :target: https://travis-ci.org/bradleyayers/django-tables2",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bradleyayers/django-tables2/",
    "keywords": null,
    "license": "Simplified BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-tables2",
    "package_url": "https://pypi.org/project/django-tables2/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-tables2/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bradleyayers/django-tables2/"
    },
    "release_url": "https://pypi.org/project/django-tables2/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Table/data-grid framework for Django",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17170602,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bc4c97099241bd950429ea20094dc368786cdbe22fa35ff62e299e146d4c4a6",
        "md5": "296be24b9af3152e0689cc4e7e2c2e96",
        "sha256": "46bdcae04087a20911dc10e30383743bca464696448e9351424efe2582a90499"
      },
      "downloads": -1,
      "filename": "django-tables2-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "296be24b9af3152e0689cc4e7e2c2e96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 966103,
      "upload_time": "2016-01-19T10:12:37",
      "upload_time_iso_8601": "2016-01-19T10:12:37.053128Z",
      "url": "https://files.pythonhosted.org/packages/0b/c4/c97099241bd950429ea20094dc368786cdbe22fa35ff62e299e146d4c4a6/django-tables2-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}