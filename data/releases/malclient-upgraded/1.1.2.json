{
  "info": {
    "author": "ModerNews",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MAL-API-Client-Upgraded\nA third party object-oriented python3 client library for MyAnimeList's official REST API.\nOriginally created by [@JFryy](https://github.com/JFryy/MAL-API-Client), dropped around 2 years ago, picked up and rewritten by ModerNews to fit more modern standards and new REST API functions.\n\n## Documentation\nThere is first version of docs available, [check it out](https://mal-api-client-upgraded.readthedocs.io)\n\n## Installation\n\n`pip install git+https://github.com/ModerNews/MAL-API-Client-Upgraded`\n\n\n## Authentication\nClient library uses OAuth2 authorization, all you need to do is register your app [here](https://myanimelist.net/apiconfig), and generate access token.  \nYou can do it old-fashioned way using [this tutorial](https://myanimelist.net/blog.php?eid=835707)  \nOr you can use function implemented in API\n```python\nimport malclient\n\nprint(malclient.generate_token(\"<YOUR_CLIENT_ID>\", \"<YOUR_CLIENT_SECRET>\"))\n```\nAlthough remember to call it only once and, then use the token generated this way, optionally with `Client.refresh_bearer_token` method  \nOnce an access token is retrieved, you can simply authenticate with this api with the following:\n```python\nimport malclient\n\nclient = malclient.Client(access_token=\"<YOUR_ACCESS_TOKEN>\")\n\n```\n\nAs mentioned previously, if your scared that your token will time out you can also utilize `Client.refresh_bearer_token` function\n```python\nclient.refresh_bearer_token(\n          client_id=\"<your-client-id>\",\n          client_secret=\"<your-client-secret>\",\n          refresh_token=\"<your-refresh-token>\"))\n```\n\nFor any other issues regarding authentication, [please refer to the following guide](https://myanimelist.net/blog.php?eid=835707).\n\n## Quick Start Examples\nI contained some examples of usage of this wrapper, note that all responses are converted to python objects using pydantic\n\n```python\nimport malclient\n\n# nsfw filter is enabled by default, although it's recommended to disable it if your results are missing titles, \n#  you can also enable/disable it for every query individually \nclient = malclient.Client(access_token=\"<your-access-token>\", nsfw=True)\n\n# search anime, returns list\nanime = client.search_anime(\"cowboy\", limit=20)\nfor item in anime:\n    # prints only titles\n    print(item)\n    # prints all attributes of object\n    print(repr(item))\n    \n# search anime, returns list\nmanga = client.search_manfa(\"Monogatari\", limit=20)\nfor item in manga:\n    # prints only titles\n    print(manga)\n    # prints all attributes of object\n    print(repr(manga))\n\n# Get individual anime by ID\nanime = client.get_anime_details(1)\nprint(anime)\nprint(repr(anime))\n\n# Update anime List based off of search results\nanime = client.search_anime(\"Monogatari\", limit=1)\nmy_status = {\n    'status': 'watching',\n    'score': 7\n}\nstatus = client.update_anime_my_list_status(anime[0].id, my_status)\n\n# get authenticated user info\nprint(client.get_user_info())\n\n# get user anime list (you can get other users by specifying username attribute)\nfor anime in client.get_user_anime_list():\n    print(anime.title, anime.score)\n\n# Update manga list based off search results\nmanga = client.search_manga('doro')\nmy_status = {\n    'status': 'reading',\n    'score': 9\n}\nclient.update_manga_my_list_status(manga[0].id, my_status)\n```\n### To Dos\n- [] Pagination support\n- [] Enumerators for statuses (completed, reading, watching, etc.)\n- [] Field filters for manga and anime queries\n- [] Rewrite boards (currently disabled)\n- [] Rewrite my list updaters\n- [] Probably something else that will pop out midways\n\n## P.S.\nI'm looking forward to developing this library (even if myanimelist doesn't really look like developing API), and counting for your contributions  \nIf anything bugs you, you can always reach me out at discord Gruzin#0911\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Fotherbyy/MAL-API-Client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "malclient-upgraded",
    "package_url": "https://pypi.org/project/malclient-upgraded/",
    "platform": null,
    "project_url": "https://pypi.org/project/malclient-upgraded/",
    "project_urls": {
      "Documentation": "https://mal-api-client-upgraded.readthedocs.io",
      "Homepage": "https://github.com/Fotherbyy/MAL-API-Client"
    },
    "release_url": "https://pypi.org/project/malclient-upgraded/1.1.2/",
    "requires_dist": [
      "requests",
      "pydantic"
    ],
    "requires_python": "",
    "summary": "Modified and rewritten using modern models version of James Fotherby malclient",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17476631,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96d71421b0021a51e6934e3b5c0b5f859c0ea6a82f7c9ee5de7677114c0058c1",
        "md5": "c598c711518032f48e77c293c999ddcb",
        "sha256": "badf538c2718bf00d047a9c58fdc0e68e3213cb27efb65edf514313040241895"
      },
      "downloads": -1,
      "filename": "malclient_upgraded-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c598c711518032f48e77c293c999ddcb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14226,
      "upload_time": "2022-03-20T20:09:36",
      "upload_time_iso_8601": "2022-03-20T20:09:36.375606Z",
      "url": "https://files.pythonhosted.org/packages/96/d7/1421b0021a51e6934e3b5c0b5f859c0ea6a82f7c9ee5de7677114c0058c1/malclient_upgraded-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ead736dba59c100e3882aac9d0fe02f00500577f78e202d13450648aaac0735",
        "md5": "f19966571181ff88381ecebd4fdc4a02",
        "sha256": "89ee3c0aa1a7bf1ce4db7bbd3c43563647ef9a5e4ca2555f955aaf8c592396b8"
      },
      "downloads": -1,
      "filename": "malclient-upgraded-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f19966571181ff88381ecebd4fdc4a02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13348,
      "upload_time": "2022-03-20T20:09:38",
      "upload_time_iso_8601": "2022-03-20T20:09:38.139383Z",
      "url": "https://files.pythonhosted.org/packages/4e/ad/736dba59c100e3882aac9d0fe02f00500577f78e202d13450648aaac0735/malclient-upgraded-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}