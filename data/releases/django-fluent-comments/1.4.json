{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-fluent-comments\n======================\n\n.. image:: https://travis-ci.org/django-fluent/django-fluent-comments.svg?branch=master\n    :target: http://travis-ci.org/django-fluent/django-fluent-comments\n.. image:: https://img.shields.io/pypi/v/django-fluent-comments.svg\n    :target: https://pypi.python.org/pypi/django-fluent-comments/\n.. image:: https://img.shields.io/pypi/l/django-fluent-comments.svg\n    :target: https://pypi.python.org/pypi/django-fluent-comments/\n.. image:: https://img.shields.io/codecov/c/github/django-fluent/django-fluent-comments/master.svg\n    :target: https://codecov.io/github/django-fluent/django-fluent-comments?branch=master\n\nThe *django-fluent-comments* module enhances the default appearance\nof the django_comments_ or django.contrib.comments_ application to be directly usable in web sites.\nThe features are:\n\n* Ajax-based preview and posting of comments\n* Configurable form layouts using django-crispy-forms_ and settings to exclude fields.\n* Comment moderation, using Akismet_ integration and auto-closing after N days.\n* E-mail notification to the site managers of new comments.\n* Optional threaded comments support via django-threadedcomments_.\n\nThe application is designed to be plug&play;\ninstalling it should already give a better comment layout.\n\nInstallation\n============\n\nFirst install the module and django_comments, preferably in a virtual environment::\n\n    pip install django-fluent-comments\n\nConfiguration\n-------------\n\nTo use comments, the following settings are required:\n\n.. code-block:: python\n\n    INSTALLED_APPS += (\n        'fluent_comments',\n        'crispy_forms',\n        'django_comments',\n        'django.contrib.sites',\n    )\n\n    CRISPY_TEMPLATE_PACK = 'bootstrap3'\n\n    COMMENTS_APP = 'fluent_comments'\n\n.. note::\n   For older Django versions (up till 1.7), you can also use django.contrib.comments_ in the ``INSTALLED_APPS``.\n   This packages uses either of those packages, depending on what is installed.\n\nAdd the following in ``urls.py``:\n\n.. code-block:: python\n\n    urlpatterns += patterns('',\n        url(r'^blog/comments/', include('fluent_comments.urls')),\n    )\n\nProvide a template that displays the comments for the ``object`` and includes the required static files:\n\n.. code-block:: html+django\n\n    {% load comments static %}\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'fluent_comments/css/ajaxcomments.css' %}\" />\n    <script type=\"text/javascript\" src=\"{% static 'fluent_comments/js/ajaxcomments.js' %}\"></script>\n\n    {% render_comment_list for object %}\n    {% render_comment_form for object %}\n\nThe database can be created afterwards:\n\n.. code-block:: bash\n\n    ./manage.py migrate\n    ./manage.py runserver\n\nTemplate for non-ajax pages\n---------------------------\n\nThe templates which django_comments_ renders use a single base template for all layouts.\nThis template is empty by default since it's only serves as a placeholder.\nTo complete the configuration of the comments module, create a ``comments/base.html`` file\nthat maps the template blocks onto your website base template. For example:\n\n.. code-block:: html+django\n\n    {% extends \"mysite/base.html\" %}{% load i18n %}\n\n    {% block headtitle %}{% block title %}{% trans \"Responses for page\" %}{% endblock %}{% endblock %}\n\n    {% block main %}\n        <div id=\"comments-wrapper\">\n            {% block content %}{% endblock %}\n        </div>\n    {% endblock %}\n\nIn this example, the base template has a ``headtitle`` and ``main`` block,\nwhich contain the ``content`` and ``title`` blocks that django_comments_ needs to see.\nThis application also outputs an ``extrahead`` block for a meta-refresh tag.\nThe ``extrahead`` block can be included in the site base template directly,\nso it doesn't have to be included in the ``comments/base.html`` file.\n\n\nCSS form layout\n---------------\n\nForm layouts generally differ across web sites, hence this application doesn't dictate a specific form layout.\nInstead, this application uses django-crispy-forms_ which allows configuration of the form appearance.\n\nThe defaults are set to Bootstrap 3 layouts, but can be changed.\n\nSwitching form layouts\n~~~~~~~~~~~~~~~~~~~~~~\n\nBy choosing a different form class, the form layout can be redefined at once:\n\nThe default is:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.FluentCommentForm'\n\n    FLUENT_COMMENTS_FORM_CSS_CLASS = 'comments-form form-horizontal'\n    FLUENT_COMMENTS_LABEL_CSS_CLASS = 'col-sm-2'\n    FLUENT_COMMENTS_FIELD_CSS_CLASS = 'col-sm-10'\n\nYou can replace the labels with placeholders using:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.CompactLabelsCommentForm'\n\nOr place some fields at a single row:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.CompactCommentForm'\n\n    # Optional settings for the compact style:\n    FLUENT_COMMENTS_COMPACT_FIELDS = ('name', 'email', 'url')\n    FLUENT_COMMENTS_COMPACT_GRID_SIZE = 12\n    FLUENT_COMMENTS_COMPACT_COLUMN_CSS_CLASS = \"col-sm-{size}\"\n\n\nChanging the field order\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe default is:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_FIELD_ORDER = ('name', 'email', 'url', 'comment')\n\nFor a more modern look, consider placing the comment first:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_FIELD_ORDER = ('comment', 'name', 'email', 'url')\n\n\nHiding form fields\n~~~~~~~~~~~~~~~~~~\n\nForm fields can be hidden using the following settings:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_EXCLUDE_FIELDS = ('name', 'email', 'url')\n\nWhen `django-threadedcomments`_ in used, the ``title`` field can also be removed.\n\n\nUsing a custom form class\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen the settings above don't provide the layout you need,\nyou can define a custom form class entirely:\n\n.. code-block:: python\n\n    from fluent_comments.forms import CompactLabelsCommentForm\n\n\n    class CommentForm(CompactLabelsCommentForm):\n        \"\"\"\n        The comment form to use\n        \"\"\"\n\n        def __init__(self, *args, **kwargs):\n            super(CommentForm, self).__init__(*args, **kwargs)\n            self.fields['url'].label = \"Website\"  # Changed the label\n\nAnd use that class in the ``FLUENT_COMMENTS_FORM_CLASS`` setting.\nThe ``helper`` attribute defines how the layout is constructed by django-crispy-forms_,\nand should be redefined the change the field ordering or appearance.\n\n\nSwitching form templates\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, the forms can be rendered with 2 well known CSS frameworks:\n\n* `Bootstrap`_ The default template pack. The popular simple and flexible HTML, CSS, and Javascript for user interfaces from Twitter.\n* `Uni-form`_ Nice looking, well structured, highly customizable, accessible and usable forms.\n\nThe ``CRISPY_TEMPLATE_PACK`` setting can be used to switch between both layouts.\nFor more information, see the django-crispy-forms_ documentation.\n\nBoth CSS frameworks have a wide range of themes available, which should give a good head-start to have a good form layout.\nIn fact, we would encourage to adopt django-crispy-forms_ for all your applications to have a consistent layout across all your Django forms.\n\nIf your form CSS framework is not supported, you can create a template pack\nfor it and submit a pull request to the django-crispy-forms_ authors for inclusion.\n\n\nComment moderation\n------------------\n\nComment moderation can be enabled for the specific models using:\n\n.. code-block:: python\n\n    from fluent_comments.moderation import moderate_model\n    from myblog.models import BlogPost\n\n    moderate_model(BlogPost,\n        publication_date_field='publication_date',\n        enable_comments_field='enable_comments',\n    )\n\nThis code can be placed in a ``models.py`` file.\nThe provided field names are optional. By providing the field names,\nthe comments can be auto-moderated or auto-closed after a number of days since the publication date.\n\nThe following settings are available for comment moderation:\n\n.. code-block:: python\n\n    AKISMET_API_KEY = \"your-api-key\"\n    AKISMET_BLOG_URL = \"http://example.com\"         # Optional, to override auto detection\n    AKISMET_IS_TEST = False                         # Enable to make test runs\n\n    FLUENT_CONTENTS_USE_AKISMET = True              # Enabled by default when AKISMET_API_KEY is set.\n    FLUENT_COMMENTS_CLOSE_AFTER_DAYS = None         # Auto-close comments after N days\n    FLUENT_COMMENTS_MODERATE_AFTER_DAYS = None      # Auto-moderate comments after N days.\n    FLUENT_COMMENTS_AKISMET_ACTION = 'soft_delete'  # Set to 'moderate', 'soft_delete' or 'delete'\n\nTo use Akismet_ moderation, make sure the ``AKISMET_API_KEY`` setting is defined.\n\n\nE-mail notification\n-------------------\n\nBy default, the ``MANAGERS`` of a Django site will receive an e-mail notification of new comments.\nThis feature can be enabled or disabled using:\n\n.. code-block:: python\n\n    FLUENT_COMMENTS_USE_EMAIL_NOTIFICATION = True\n\nThe template ``comments/comment_notification_email.txt`` is used to generate the e-mail message.\n\n\nThreaded comments\n-----------------\n\nThere is build-in support for django-threadedcomments_ in this module.\nIt can be enabled using the following settings:\n\n.. code-block:: python\n\n    INSTALLED_APPS += (\n        'threadedcomments',\n    )\n\n    COMMENTS_APP = 'fluent_comments'\n\nThe templates and admin interface adapt themselves automatically\nto show the threaded comments.\n\n\nIP-Address detection\n--------------------\n\nThis package stores the remote IP of the visitor in the model, and passes it to Akismet_.\nThe IP Address is read from the ``REMOTE_ADDR`` meta field.\nIn case your site is behind a HTTP proxy (e.g. using Gunicorn or a load balancer),\nthis would make all comments appear to be posted from the load balancer IP.\n\nThe best and most secure way to fix this, is using WsgiUnproxy_ middleware in your ``wsgi.py``:\n\n.. code-block:: python\n\n    from django.core.wsgi import get_wsgi_application\n    from django.conf import settings\n    from wsgiunproxy import unproxy\n\n    application = get_wsgi_application()\n    application = unproxy(trusted_proxies=settings.TRUSTED_X_FORWARDED_FOR_IPS)(application)\n\nIn your ``settings.py``, you can define which hosts may pass the ``X-Forwarded-For``\nheader in the HTTP request. For example:\n\n.. code-block:: python\n\n    TRUSTED_X_FORWARDED_FOR_IPS = (\n        '11.22.33.44',\n        '192.168.0.1',\n    )\n\n\nContributing\n------------\n\nThis module is designed to be generic, and easy to plug into your site.\nIn case there is anything you didn't like about it, or think it's not\nflexible enough, please let us know. We'd love to improve it!\n\nIf you have any other valuable contribution, suggestion or idea,\nplease let us know as well because we will look into it.\nPull requests are welcome too. :-)\n\n\n.. _django_comments: https://github.com/django/django-contrib-comments\n.. _django.contrib.comments: https://docs.djangoproject.com/en/1.7/ref/contrib/comments/\n.. _django-crispy-forms: http://django-crispy-forms.readthedocs.org/\n.. _django-threadedcomments: https://github.com/HonzaKral/django-threadedcomments.git\n.. _Akismet: http://akismet.com\n.. _`Bootstrap`: http://twitter.github.com/bootstrap/index.html\n.. _`Uni-form`: http://sprawsm.com/uni-form\n.. _WsgiUnproxy: https://pypi.python.org/pypi/WsgiUnproxy",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-fluent-comments/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-fluent-comments",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-fluent-comments",
    "package_url": "https://pypi.org/project/django-fluent-comments/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-fluent-comments/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-fluent-comments/zipball/master",
      "Homepage": "https://github.com/edoburu/django-fluent-comments"
    },
    "release_url": "https://pypi.org/project/django-fluent-comments/1.4/",
    "requires_dist": [
      "django-contrib-comments (>=1.5)",
      "django-crispy-forms (>=1.1.1)",
      "django-tag-parser (>=3.1)",
      "python-akismet (>=0.2.3)",
      "django-threadedcomments (>=1.0.1); extra == 'threadedcomments'"
    ],
    "requires_python": "",
    "summary": "A modern, ajax-based appearance for django_comments",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10320414,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b47486bf4d0831521747fb8dbe5edfea03bcc984845f9945c503ba626f26f1e",
        "md5": "beb139661c72cbd1f31f6b5718417ad8",
        "sha256": "7149c0e54d6c98d5dba900f3a075473416ae5cd79be696cf786a4a3c77118f10"
      },
      "downloads": -1,
      "filename": "django_fluent_comments-1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "beb139661c72cbd1f31f6b5718417ad8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 58052,
      "upload_time": "2017-02-03T16:48:00",
      "upload_time_iso_8601": "2017-02-03T16:48:00.541303Z",
      "url": "https://files.pythonhosted.org/packages/0b/47/486bf4d0831521747fb8dbe5edfea03bcc984845f9945c503ba626f26f1e/django_fluent_comments-1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08689834b00cf9328f67e6f092330661c977d5a8cdec77f00c0e420920d8b633",
        "md5": "cfca6ac85ccead30f835ad476f0fa938",
        "sha256": "c85144f8099d1ec1dab4d7139c0df11f7eddb39f79c0957628b6cd5762184c72"
      },
      "downloads": -1,
      "filename": "django-fluent-comments-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cfca6ac85ccead30f835ad476f0fa938",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43311,
      "upload_time": "2017-02-03T16:48:02",
      "upload_time_iso_8601": "2017-02-03T16:48:02.863754Z",
      "url": "https://files.pythonhosted.org/packages/08/68/9834b00cf9328f67e6f092330661c977d5a8cdec77f00c0e420920d8b633/django-fluent-comments-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}