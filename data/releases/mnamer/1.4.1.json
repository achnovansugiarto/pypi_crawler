{
  "info": {
    "author": "Jessy Williams",
    "author_email": "jessy@jessywilliams.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![pypi](https://img.shields.io/pypi/v/mnamer.svg?style=for-the-badge)](https://pypi.python.org/pypi/mnamer)\n[![travis\\_ci](https://img.shields.io/travis/jkwill87/mnamer/develop.svg?style=for-the-badge)](https://travis-ci.org/jkwill87/mnamer)\n[![coverage](https://img.shields.io/codecov/c/github/jkwill87/mnamer/develop.svg?style=for-the-badge)](https://codecov.io/gh/jkwill87/mnamer)\n[![licence](https://img.shields.io/github/license/jkwill87/mnamer.svg?style=for-the-badge)](https://en.wikipedia.org/wiki/MIT_License)\n[![code style black](https://img.shields.io/badge/Code%20Style-Black-black.svg?style=for-the-badge)](https://github.com/ambv/black)\n\n![mnamer logo](https://github.com/jkwill87/mnamer/raw/develop/_assets/logo.png)\n\n# mnamer\n\nmnamer (**m**edia re**namer**) is an intelligent and highly configurable media organization utility. It parses media filenames for metadata, searches the web to fill in the blanks, and then renames and moves them.\n\n![mnamer terminal recording](https://github.com/jkwill87/mnamer/blob/develop/_assets/terminal-rec.svg)\n\n\n# Installation\n\n## Stable Version\n\n`$ pip install mnamer`\n\n## Development Version\n\n`$ pip install https://github.com/jkwill87/mnamer/archive/develop.zip`\n\n## Notes\n\nIf you want to install it using system python (e.g. the one that comes with your OS, not really recommended) and get a permission error you need to use either `sudo -H pip ...` or `pip install --user ...`.\n\n\n# Usage\n\n`mnamer target [targets ...] [options] [directives]`\n\n\n# Options\n\nmnamer attempts to load options from mnamer.json in the user's configuration directory, .mnamer.json in the current working directory, and then from the command line, also overriding each other in that order.\n\n\n| Option                  | Arguments        | Description                                           |\n|:------------------------|:-----------------|:------------------------------------------------------|\n|-b, --batch              |                  | batch mode; disables interactive prompts              |\n|-s, --scene              |                  | scene mode; replace non ascii-alphanumerics with `.`  |\n|-r, --recurse            |                  | show this help message and exit                       |\n|-v, --verbose            |                  | increases output verbosity                            |\n|--blacklist              | pattern          | ignore files including these words                    |\n|--max_hits               | number           | limits the maximum number of hits for each query      |\n|--extension_mask         | extention(s)     | define the extension mask used by the the file parser |\n|--movie_api              | `imdb` or `tmdb` | set movie api provider                                |\n|--movie_destination      | path             | set movie relocation destination                      |\n|--movie_template         | template         | set movie renaming template                           |\n|--television_api         | `tvdb`           | set television api provider                           |\n|--television_destination | path             | set television relocation destination                 |\n|--television_template    | template         | set television renaming template                      |\n\n\n# Directives\n\nWhereas options configure how mnamer works, directives are one-off parameters that are used to perform secondary tasks like exporting the current option set to a file.\n\n| Option           | Arguments               | Description                            |\n|:-----------------|:------------------------|:---------------------------------------|\n| --config_load    | path                    | import configuration from file         |\n| --config_save    | path                    | save configuration to file             |\n| --id             | id                      | explicitly specify movie or series id  |\n| --media          | `movie` or `television` | override media detection               |\n| --test_run       |                         | mocks the renaming and moving of files |\n\n\n# Configuration Files\n\nIn addition to the option argument flags listed above, mnamer can also be configured via JSON configuration file(s). These are loaded and applied from the following locations, in the following order:\n\n1. As **.mnamer.json** within the current working directory (e.g. *./.mnamer.json*)\n2. As **mnamer.json** from within the user config directory (e.g. *~/.config/mnamer.json*)\n3. As **.mnamer.json** from the user home directory (e.g. *~/.mnamer.json*)\n4. Any path explicitly passed using the `--load_config` directive\n\n\n# Templating\n\n\nYou have complete control of how media files are renamed using mnamer's template options:\n\n- you can use templating with the following options: **television_destination**, **television_template**, **movie_destination**, **movie_template**\n- metadata fields prefixed with a sigil `$` found inside angle brackets with the result of a match\n- any leading or trailing whitespace will be trimmed\n- if a field can't be matched, the entire contents of the bracket are disregared\n\n\n## Example: SxE Episodes Format\n\n- television_template: `<$series - >< - $seasonx><$episode - >< - $title><$extension>`\n- target: `~/Downloads/Rick.and.Morty.S02E01.WEBRip.x264-RARBG.mp4`\n- result: `~/Downloads/Rick and Morty - 02x01 - A Rickle in Time.mp4`\n\n\n## Example: Missing Metadata\n\n\n*Note: Target file is missing group metadata field in title and will be omitted gracefully*\n\n- television_template: `<$series - >< - S$season><E$episode - >< - $group - >< - $title><$extension>`\n- target: `~/Downloads/The.Orville.S01E01.1080p.WEB-DL.DD5.1.H264-RARBG.mkv`\n- result: `~/Downloads/The Orville - S01E01 - Old Wounds.mkv`\n\n\n## Example: Subdirectories\n\n*Note: If the subdirectory doesn't exist, mnamer will create it*\n\n- movie_template: `<$title ><($year)><$extension>`\n- movie_destination: `/media/movies/<$title ><($year)>`\n- target: `~/Downloads/The.Goonies.1985.720p.BluRay.x264-SiNNERS.mkv`\n- result: `/media/movies/The Goonies (1985)/The Goonies (1985).mkv`\n\n\n# Metadata Fields\n\n| Field   | Description                      |\n|:--------|:---------------------------------|\n| title   | movie or episode title           |\n| year    | movie release year               |\n| series  | tv series' name                  |\n| season  | tv series' airing season number  |\n| episode | tv series' airing episode number |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jkwill87/mnamer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mnamer",
    "package_url": "https://pypi.org/project/mnamer/",
    "platform": "",
    "project_url": "https://pypi.org/project/mnamer/",
    "project_urls": {
      "Homepage": "https://github.com/jkwill87/mnamer"
    },
    "release_url": "https://pypi.org/project/mnamer/1.4.1/",
    "requires_dist": [
      "appdirs (>=1.4)",
      "colorama (>=0.3)",
      "guessit (>=3)",
      "mapi (<4,>=3.4.3)",
      "termcolor (>=1)",
      "future; python_version < \"3\""
    ],
    "requires_python": "",
    "summary": "A media file organiser",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16407429,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92ce4df6c83363a8291f042991c0afafcc490c4f9d88707b65a52d287cfb11fc",
        "md5": "c07bcf4925ef9f97044201f84dcef06e",
        "sha256": "fea6ef0793b644e11047008093693004d2d4ac45db92d6e6f4803995e3e45a08"
      },
      "downloads": -1,
      "filename": "mnamer-1.4.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c07bcf4925ef9f97044201f84dcef06e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11644,
      "upload_time": "2018-08-22T16:42:29",
      "upload_time_iso_8601": "2018-08-22T16:42:29.251578Z",
      "url": "https://files.pythonhosted.org/packages/92/ce/4df6c83363a8291f042991c0afafcc490c4f9d88707b65a52d287cfb11fc/mnamer-1.4.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3a94471d0c39882c8677a83c32e25d50746a6318554d44f343b20d11e102027",
        "md5": "124e3a5a6fabdab54e74a91917b273b3",
        "sha256": "26a2e040dc18db45010940f641a10ce3b51a2dddbe3a7a3e38539c75e29260e9"
      },
      "downloads": -1,
      "filename": "mnamer-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "124e3a5a6fabdab54e74a91917b273b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12775,
      "upload_time": "2018-08-22T16:42:30",
      "upload_time_iso_8601": "2018-08-22T16:42:30.389482Z",
      "url": "https://files.pythonhosted.org/packages/a3/a9/4471d0c39882c8677a83c32e25d50746a6318554d44f343b20d11e102027/mnamer-1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}