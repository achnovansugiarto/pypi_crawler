{
  "info": {
    "author": "Ben Caller",
    "author_email": "bcallergmai@l.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "# Document Object Identifiers and Python and Markdown, together!\n\nType journal article DOIs, and have them automagically converted into a beautiful bibliography.\n\n[![travis](https://travis-ci.org/bcaller/markdown_doi.svg)](https://travis-ci.org/bcaller/markdown_doi)\n[![PyPI version](https://badge.fury.io/py/markdown_doi.svg)](https://badge.fury.io/py/markdown_doi)\n\nA Markdown extension that looks through your text for things like `doi:10.1234/j.banana.5678`,\nlooks up the metadata on the crossref API and outputs text according to your requirements\n\nAdd `'markdown_doi'` to your Markdown call and watch the magic unfold:\n\n```python\n>>> from markdown import Markdown\n\n>>> markdown = Markdown(extensions=['markdown_doi']\n>>> markdown.convert('doi:10.1016/j.applanim.2010.02.004')\n```\noutputs\n```html\n<p><span class=\"doi\"><a href=\"http://dx.doi.org/10.1016/j.applanim.2010.02.004\">Are cows more likely to lie down the longer they stand?</a> <span class=\"doi-year\">(2010)</span></span></p>\n```\n\nYou can enable the caching if for example you are using Pelican and constantly regenerating the same files\n\n```python\n>>> markdown = Markdown(extensions=['markdown_doi(cache_file=.doi_cache)']\n```\n\nThe templating function takes the metadata Dict from the\nmessage key of [the JSON API response](https://api.crossref.org/works/10.1016/j.applanim.2010.02.004)\nand returns a `markdown.util.etree.ElementTree`. See the default `template_title_link_year` function.\n\n```python\nfrom markdown_doi import makeExtension as makeDoiExtension\n\ndef templater(metadata, doi_pattern):\n    el = markdown.util.etree.Element(\"span\")\n    el.text = '%(given)s %(family)s' % metadata['author'][0]\n    return el\n\next = makeDoiExtension(templater=templater)\nmd = markdown.Markdown(extensions=[ext])\nhtml = md.convert('hello 10.1016/j.applanim.2010.02.004')\nassert html == 'hello <p><span>Bert J. Tolkamp</span></p>'\n```\n\n## Options\n| Option    | Type | Default |Description |\n|-----------|------|---------|------------|\n| templater | (Dict, LinkPattern) -> etree.ElementTree | None | Function which renders the metadata as an element tree |\n| cache_file | str | '' | File name that can store a cache of the DOIs looked up |\n| cache | dict | None | Instead, you can pass a map from DOI to metadata dict as the cache rather than a file name |\n\n\n## Installation\n>From Github:\n\n```\ngit clone https://github.com/bcaller/markdown_doi.git\npip install -e ./markdown_doi\n```\n\n>From Pypi:\n\n```\npip install markdown_doi\n```\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bcaller/markdown_doi",
    "keywords": "doi research journals markdown",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "markdown-doi",
    "package_url": "https://pypi.org/project/markdown-doi/",
    "platform": "",
    "project_url": "https://pypi.org/project/markdown-doi/",
    "project_urls": {
      "Homepage": "https://github.com/bcaller/markdown_doi"
    },
    "release_url": "https://pypi.org/project/markdown-doi/1.0.3/",
    "requires_dist": [
      "markdown (>=2.5)",
      "requests",
      "pypandoc; extra == 'develop'"
    ],
    "requires_python": "",
    "summary": "Convert doi:10.xxxxx/xxxx to nice bibliographic metadata",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4727829,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f45ed9271841b2106ab9dc5d004577ed13cf510fe1ebf1225c8b9aeef04e03ef",
        "md5": "94fd26637ed89dda65ff8c0cf65b5d41",
        "sha256": "82fa97cb11a522e63c9919c15452dfee084b5f0c58c520e4ef58430078ba3a97"
      },
      "downloads": -1,
      "filename": "markdown_doi-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94fd26637ed89dda65ff8c0cf65b5d41",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4764,
      "upload_time": "2017-02-09T23:18:06",
      "upload_time_iso_8601": "2017-02-09T23:18:06.239729Z",
      "url": "https://files.pythonhosted.org/packages/f4/5e/d9271841b2106ab9dc5d004577ed13cf510fe1ebf1225c8b9aeef04e03ef/markdown_doi-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7d792f513226a77430bee4d92efe0b2d949d694980850169a89356d7080bc07",
        "md5": "cd0038f44ecbae22f5b39b48c75a4729",
        "sha256": "c57c912bde328534359f808b1a48963cdbf4915eb97e90617cc6e065f94aca04"
      },
      "downloads": -1,
      "filename": "markdown_doi-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cd0038f44ecbae22f5b39b48c75a4729",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16979,
      "upload_time": "2017-02-09T23:18:08",
      "upload_time_iso_8601": "2017-02-09T23:18:08.171728Z",
      "url": "https://files.pythonhosted.org/packages/d7/d7/92f513226a77430bee4d92efe0b2d949d694980850169a89356d7080bc07/markdown_doi-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}