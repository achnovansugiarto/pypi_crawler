{
  "info": {
    "author": "Ilya Baryshev",
    "author_email": "baryshev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3"
    ],
    "description": "Django Twitter Tag\n==================\n\n.. image:: https://secure.travis-ci.org/coagulant/django-twitter-tag.png?branch=dev\n    :target: https://travis-ci.org/coagulant/django-twitter-tag\n\n.. image:: https://coveralls.io/repos/coagulant/django-twitter-tag/badge.png?branch=dev\n    :target: https://coveralls.io/r/coagulant/django-twitter-tag/\n\nA django template tag to display user's recent tweets / search results.\nVersion 1.0 uses Twitter API 1.1.\n\nBasic features are limiting numbers of displayed tweets, filtering out replies and retweets.\nLibrary exposes each tweet ``json`` in template, adding extra attributes: ``html`` and ``datetime``.\nFirst one makes urls, hashtags or twitter usernames clickable, juts like you expect them to be.\nLast one provides python datetime object to ease output in templates.\nUrls are expanded by default. Library handles twitter exceptions gracefully,\nreturning last successful response.\n\nUsage\n-----\n\n* Load tag in your template like this::\n\n    {% load twitter_tag %}\n\n\n* Get user's (``futurecolors`` in example) most recent tweets and store them in ``tweets`` variable::\n\n    {% get_tweets for \"futurecolors\" as tweets %}\n\n\n* Now you have a list of tweets in your template context, which you can iterate over like this::\n\n    <ul>\n    {% for tweet in tweets %}\n        <li>{{ tweet.html|safe }}</li>\n    {% endfor %}\n    </ul>\n\n\nInstallation\n------------\n\nThis app works with python 2.7 and 3.3, Django 1.4-1.6.\n\nRecommended way to install is pip::\n\n  pip install django-twitter-tag\n\n\nAdd ``twitter_tag`` to ``INSTALLED_APPS`` in settings.py::\n\n    INSTALLED_APPS = (...\n                      'twitter_tag',\n                      ...\n                     )\n\nConfiguration\n-------------\n\nTwitter `API 1.1`_ requires authentication for every request you make,\nso you have to provide some credentials for oauth dance to work.\nFirst, `create an application`_, second, request access token on newly created\napp page. The `process of obtaining a token`_ is explained in detail in docs.\n\nHere is an example of how your config might look like::\n\n    # settings.py\n    # Make sure to replace with your own values, theses are just made up\n\n    # Your access token: Access token\n    TWITTER_OAUTH_TOKEN = '91570701-BQMM5Ix9AJUC5JtM5Ix9DtwNAiaaYIYGN2CyPgduPVZKSX'\n    # Your access token: Access token secret\n    TWITTER_OAUTH_SECRET = 'hi1UiXm8rF4essN3HlaqMz7GoUvy3e4DsVkBAVsg4M'\n    # OAuth settings: Consumer key\n    TWITTER_CONSUMER_KEY = '3edIOec4uu00IGFxvQcwJe'\n    # OAuth settings: Consumer secret\n    TWITTER_CONSUMER_SECRET = 'YBD6GyFpvumNbNA218RAphszFnkifxR8K9h8Rdtq1A'\n\nFor best performance you should set up `django cache framework`_. Cache is used both internally\nto store last successful json response and externally (see Caching below).\n\n.. _API 1.1: https://dev.twitter.com/docs/api/1.1\n.. _create an application: https://dev.twitter.com/apps\n.. _process of obtaining a token: https://dev.twitter.com/docs/auth/tokens-devtwittercom\n.. _django cache framework: https://docs.djangoproject.com/en/dev/topics/cache/\n\nExamples\n--------\n\nYou can specify number of tweets to show::\n\n    {% get_tweets for \"futurecolors\" as tweets limit 10 %}\n\n\nTo filter out tweet replies (that start with @ char)::\n\n    {% get_tweets for \"futurecolors\" as tweets exclude \"replies\" %}\n\n\nTo ignore native retweets::\n\n    {% get_tweets for \"futurecolors\" as tweets exclude \"retweets\" %}\n\n\nOr everything from above together::\n\n    {% get_tweets for \"futurecolors\" as tweets exclude \"replies, retweets\" limit 10 %}\n\n\nSearch tag (experimental)\n-------------------------\n\nYou can search for tweets::\n\n    {% search_tweets for \"python 3\" as tweets limit 5 %}\n\nSearch api arguments are supported via key=value pairs::\n\n    {% search_tweets for \"python 3\" as tweets lang='eu' result_type='popular' %}\n\nRelevant `API docs for search`_.\n\n.. _API docs for search: https://dev.twitter.com/docs/api/1.1/get/search/tweets\n\nCaching\n-------\n\nIt's strongly advised to use template caching framework to reduce the amount of twitter API calls\nand avoid reaching `rate limit`_ (currently, 180 reqs in 15 minutes)::\n\n    {% load twitter_tag cache %}\n    {% cache 60 my_tweets %}\n    {% get_tweets for \"futurecolors\" as tweets exclude \"retweets\" %}\n    ...\n    {% endcache %}\n\n\n.. _rate limit: https://dev.twitter.com/docs/rate-limiting/1.1\n\nExtra\n-----\n\nTweet's properties\n~~~~~~~~~~~~~~~~~~\n\nget_tweets returns a list of tweets into context. Each tweets is a json dict, that has\nexactly the same attributes, as stated in API 1.1 docs, describing `tweet json`_.\nTweet's created timestamp is converted to python object and is available in templates::\n\n    {{ tweet.datetime|date:\"D d M Y\" }}\n\n.. _tweet json: https://dev.twitter.com/docs/platform-objects/tweets\n\nTweet's html\n~~~~~~~~~~~~\n\nTweet also has extra ``html`` property, which contains tweet, formatted for html output\nwith all needed links. Note, Twitter has `guidelines for developers`_ on how embeded tweets\nshould look like.\n\n.. _guidelines for developers: https://dev.twitter.com/terms/display-requirements\n\nException handling\n~~~~~~~~~~~~~~~~~~\n\nAny Twitter API exceptions like 'Over capacity' are silenced and logged.\nDjango cache is used internally to store last successful response in case `twitter is down`_.\n\n.. _twitter is down: https://dev.twitter.com/docs/error-codes-responses\n\nGoing beyond\n~~~~~~~~~~~~\nSince version 1.0 you can create your own template tags for specific twitter queries,\nnot supported by this library. Simply inherit from ``twitter_tag.templatetags.twitter_tag.BaseTwitterTag``\nand implement your own ``get_json`` method (tag syntax is contolled by django-classy-tags).\n\nDevelopment\n-----------\n\nTo install `development version`_, use ``pip install django-twitter-tag==dev``\n\n.. _development version: https://github.com/coagulant/django-twitter-tag/archive/dev.tar.gz#egg=django_twitter_tag-dev\n\nTests\n-----\n\nRun::\n\n    DJANGO_SETTINGS_MODULE = twitter_tag.test_settings python setup.py test",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/coagulant/django-twitter-tag",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-twitter-tag",
    "package_url": "https://pypi.org/project/django-twitter-tag/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-twitter-tag/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/coagulant/django-twitter-tag"
    },
    "release_url": "https://pypi.org/project/django-twitter-tag/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A django template tag to display user's recent tweets.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1846374,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76308acf870d5a398ac10e38895ba92d0ec0d5bf6f837c62310024e47242b484",
        "md5": "f747fc64dcd61ddf262f4a7df7c4b3a8",
        "sha256": "349df9b592167b9f13e3e1fb07c9acd742ab5d425a8ee6bb85fb17109db46102"
      },
      "downloads": -1,
      "filename": "django-twitter-tag-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f747fc64dcd61ddf262f4a7df7c4b3a8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12103,
      "upload_time": "2015-12-04T11:56:16",
      "upload_time_iso_8601": "2015-12-04T11:56:16.629820Z",
      "url": "https://files.pythonhosted.org/packages/76/30/8acf870d5a398ac10e38895ba92d0ec0d5bf6f837c62310024e47242b484/django-twitter-tag-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}