{
  "info": {
    "author": "3DLirious",
    "author_email": "3DLirious@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\r\n# MeshLabXML\r\n\r\n----\r\n## Description\r\n\r\n[MeshLab](http://meshlab.sourceforge.net/) is an excellent program for the processing and editing of unstructured 3D triangular meshes. MeshLab comes with a basic scripting ability whereby you provide a list of filters and parameters in XML format (file extension .mlx) that MeshLab can run either in the GUI or in headless mode (via the meshlabserver executable). MeshLab has the ability to record and save mlx scripts from the GUI, however generating mlx scripts from scratch is difficult.\r\n\r\n**MeshLabXML** is a 3rd party library intended to fill this gap by providing a way to programmatically create and run MeshLab XML filter scripts using Python 3. In addition to running many of the built-in filters, MeshLabXML also contains additional functions and features, as well as work-arounds for some of MeshLab's bugs and idiosyncrasies.\r\n\r\nMeshLabXML is currently written against MeshLab version 1.34BETA, which at the time of this writing (September 2016) is only available for 64 bit Windows. MeshLabXML may also work with older versions of MeshLab and on different platforms, however this has not been extensively tested and some features may not be available or work properly.\r\n\r\n----\r\n## Installation\r\n\r\nMeshLabXML can be installed via PyPI and pip:\r\n\r\n    pip --install meshlabxml\r\n\r\n----\r\n## Examples\r\n\r\nExample #1: Create an orange cube and apply some transformations\r\n\r\n    import os\r\n    import meshlabxml as mlx\r\n\r\n    # Add meshlabserver directory to OS PATH; omit this if it is already in\r\n    # your PATH\r\n    MESHLABSERVER_PATH = 'C:\\\\Program Files\\\\VCG\\\\MeshLab'\r\n    os.environ['PATH'] += os.pathsep + MESHLABSERVER_PATH\r\n\r\n    script = 'orange_cube.mlx' # script file\r\n    model = 'orange_cube.ply' # output file\r\n    log = 'orange_cube_log.txt' # log file\r\n\r\n    mlx.begin(script=script) # Start writing the script to the script file\r\n    mlx.create.cube(script=script, size=[3.0, 3.0, 2.0], center=True, color='orange')\r\n    mlx.transform.rotate(script=script, axis='x', angle=45)\r\n    mlx.transform.translate(script=script, value=[5.0, 0, 0])\r\n    mlx.end(script=script) # Finish writing the script to the script file\r\n\r\n    mlx.run(script=script, log=log, file_out=model) # Run the script using meshlabserver and output the result\r\n    mlx.util.delete_all('TEMP3D*') # Delete temp files\r\n\r\n\r\nExample #2: Measure the built-in Stanford Bunny test model and print the results\r\n\r\n    import os\r\n    import meshlabxml as mlx\r\n\r\n    # Add meshlabserver directory to OS PATH; omit this if it is already in\r\n    # your PATH\r\n    MESHLABSERVER_PATH = 'C:\\\\Program Files\\\\VCG\\\\MeshLab'\r\n    os.environ['PATH'] += os.pathsep + MESHLABSERVER_PATH\r\n\r\n    aabb, geometry, topology = mlx.files.measure_all('bunny')\r\n\r\nCheck out the \"examples\" directory for more complex examples.\r\n\r\n----\r\n## Status\r\n\r\nMeshLabXML is still under heavy development and the API is not yet considered stable.\r\n\r\n* Many filters have not yet been implemented. Filters are generally added \"as I need them\". If you have a need for a specific filter, please open an issue requesting that it be added.\r\n\r\n* Documentation is still lacking or incomplete in many areas. For the MeshLab built-in functions, usage is typically the same or similar to MeshLab.\r\n\r\n----\r\n## License\r\n\r\nMeshLabXML is released under [LGPL version 2.1](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)\r\n\r\nExample code is released into the public domain.\r\n\r\nAny included models (such as the Stanford Bunny) are released under their own licenses.\r\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/3DLIRIOUS/MeshLabXML",
    "keywords": null,
    "license": "LGPL-2.1",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MeshLabXML",
    "package_url": "https://pypi.org/project/MeshLabXML/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/MeshLabXML/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/3DLIRIOUS/MeshLabXML"
    },
    "release_url": "https://pypi.org/project/MeshLabXML/134.20160916/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Create and run MeshLab XML scripts",
    "version": "134.20160916",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3645352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5142163f0a679c1498786b0234d12aea1469c07f2375bd0d32c128f6cd486419",
        "md5": "de882d077d79b8ad13133b365ccd6a24",
        "sha256": "b6800d48cb4cd98b73a534dc602c8edbf34d6f1389ba53ae02a22872d65711f3"
      },
      "downloads": -1,
      "filename": "MeshLabXML-134.20160916.zip",
      "has_sig": false,
      "md5_digest": "de882d077d79b8ad13133b365ccd6a24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1567145,
      "upload_time": "2016-09-17T02:17:14",
      "upload_time_iso_8601": "2016-09-17T02:17:14.049785Z",
      "url": "https://files.pythonhosted.org/packages/51/42/163f0a679c1498786b0234d12aea1469c07f2375bd0d32c128f6cd486419/MeshLabXML-134.20160916.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}