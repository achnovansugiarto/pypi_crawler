{
  "info": {
    "author": "Markus Foote",
    "author_email": "markusfoote@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Atmospheric Science"
    ],
    "description": "# MAG1C:  Matched filter with Albedo correction and reweiGhted L1 sparsity Code\n\n[![Article DOI:10.1109/TGRS.2020.2976888](https://img.shields.io/badge/Article%20DOI-10.1109%2FTGRS.2020.2976888-blue)](https://doi.org/10.1109/TGRS.2020.2976888) [![ArXiv:2003.02978](https://img.shields.io/badge/arXiv-2003.02978-blue)](https://arxiv.org/abs/2003.02978) ![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/markusfoote/mag1c?include_prereleases&sort=semver) ![PyPI](https://img.shields.io/pypi/v/mag1c) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mag1c) ![PyPI - License](https://img.shields.io/pypi/l/mag1c)\n\nFast concentration estimation and detection of trace gas absorption from imaging spectrometer data.\n\n\n## Citation\nIf you use this tool in a program or publication, please acknowledge our paper about this method:\n\nFoote, M. D., *et al.* \"Fast and Accurate Retrieval of Methane Concentration from Imaging Spectrometer Data Using Sparsity Prior\" IEEE Transactions on Geoscience and Remote Sensing. 2020.\n* bibTeX:\n  ```\n  @ARTICLE{9034492,\n  author={M. D. {Foote} and P. E. {Dennison} and A. K. {Thorpe} and D. R. {Thompson} and S. {Jongaramrungruang} and C. {Frankenberg} and S. C. {Joshi}},\n  journal={IEEE Transactions on Geoscience and Remote Sensing},\n  title={Fast and Accurate Retrieval of Methane Concentration From Imaging Spectrometer Data Using Sparsity Prior},\n  year={2020},\n  volume={},\n  number={},\n  pages={1-13},\n  keywords={Airborne Visible InfraRed Imaging Spectrometer-Next Generation (AVIRIS-NG);greenhouse gas emissions;methane mapping;plume detection.},\n  doi={10.1109/TGRS.2020.2976888},\n  ISSN={1558-0644},\n  month={},}\n  ```\nGet the article from:\n* IEEE DOI: [10.1109/TGRS.2020.2976888](https://doi.org/10.1109/TGRS.2020.2976888)\n* arXiv: [2003.02978](https://arxiv.org/abs/2003.02978)\n## Installation\n``pip install mag1c``\n\n## Requirements\nmag1c depends on these software packages for math routines and data I/O. \n\nPython 3.6 (or newer) and the following python packages and versions:\n- [`numpy`](https://www.numpy.org/)\n- [`spectral`](https://www.spectralpython.net/)\n- [`torch`](https://pytorch.org) 1.3+\n- [`scikit-image`](https://scikit-image.org/)\n\n## GPU Processing\nIf available, this code uses a compatible GPU for accelerated computation. See [https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/) for details on how to install pytorch with gpu support for your system. You will then need to install the other dependencies.\n\nThe `--gpu` flag must be used to enable GPU acceleration.\n### CPU-Only\nIf you know that you will **not** use a GPU, you can install the CPU-only version of pytorch. See [https://pytorch.org/get-started/locally/#no-cuda-1](https://pytorch.org/get-started/locally/#no-cuda-1) for how to install the CPU-only version. At time of writing, the install command for cpu-only torch and mag1c together through pip is: \n```\npip3 install mag1c torch==1.3.1+cpu -f https://download.pytorch.org/whl/torch_stable.html\n```\n\n## Advanced Installation\nThe simplest way to obtain this program is through `pip`. To get the latest release:\n```bash\npip install mag1c\n```\nor, to install a specific released version:\n```\npip install magic==x.y.z\n```\nor, to get a specific point in history directly from github:\n```\npip install git+https://github.com/markusfoote/mag1c@tag#egg=mag1c\n```\nwhere ``tag`` is any tag (e.g. ``v1.2.0``), branch name (e.g. ``master``) or commit hash. [PyPA has more detailed instructions.](https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support)\n\nThis will install required dependencies (most notably, [pytorch](https://pytorch.org)) on linux systems. For Windows, or specific installation flavors of pytorch (like CPU-only), follow your choice of instructions on [PyTorch's website](https://pytorch.org/get-started/locally/), then install mag1c. Mag1c is compatible with PyTorch installed through `conda`, just make sure you are using the **environment's** `pip` to install mag1c, and activate the conda environment whenever you wish to run `mag1c`.\n\n## Usage\n### Entrypoints\nThis program can be invoked in multiple ways: \n1. `python /path/to/mag1c.py` works whenever you have a copy of the `mag1c.py` script. The versioning metadata may not work well with a standalone script.\n2. `python -m mag1c` works when you install the python package (i.e. via `pip`).\n3. `mag1c` is a direct entry point to the program when you install via `pip`.\n4. `sparsemf` is exactly the same as `mag1c`, just with a debatably-more-readable name.\n\n### Runtime Options\nThere are numerous options/flags that can be provided to modify processing behavior. Run `mag1c --help` for a full description of the available arguments.\n\n## Examples\n### Process a single file with defaults:\n```bash\npython mag1c.py /my/radiance --spec /my/target --out /some/output\n```\n\n### Process a single file with bash variables and some custom options, including GPU:\n```bash\nexport CUDA_VISIBLE_DEVICES=0 # Restrict processing to the first GPU in the system\nRDNFILE=\"/path/to/my/radiance data with spaces in filename\"\nTEMPLATE=/path/to/my/templatespectrum\nOUTPUT=/path/to/outputfile_date_time_iteration25_grouping5\nGLT=/path/to/my/gltfile\npython mag1c.py \"$RDNFILE\" --spec $TEMPLATE --out $OUTPUT --outputgeo $GLT --iter 25 --group 5 --gpu -t 2 -b16\n```\n\n### Process all files in a folder:\n```bash\nTEMPLATE=/path/to/template.txt\nfor f in /path/to/folder/ang*_rdn_*_clip; do \\\n    python mag1c.py \"${f}\" \"${TEMPLATE}\" \"/output/folder/$(basename \"${f/rdn/mag1c}\")\" --iter 20\ndone;\n```\n\n### Process a file with detector saturation detection/masking:\nFor a geocorrected file:\n```bash\nsparsemf ${RDN_FILE} \\\n  --out $OUTPUTFOLDER$(basename ${b/_rdn_/_ch4_cmfr_}) \\\n  --geo ${RDN_FILE/img/glt} \\\n  --group 1 \\\n  --saturation \\\n  --saturationthreshold 6.0 \\\n  --maskgrowradius 150m \\\n  --mingrowarea 5 \\\n  --hfdi \\\n  --threads 8 \\\n  --gpu \\\n  --no-albedo-output \\\n  --visible-mask-growing-threshold 9.0\n```\nor for a non-geocorrected file:\n```bash\nsparsemf ${RDN_FILE} \\\n  --out $OUTPUTFOLDER$(basename ${b/_rdn_/_ch4_cmfr_}) \\\n  --outputgeo ${RDN_FILE/img/glt} \\\n  --group 1 \\\n  --saturation \\\n  --saturationthreshold 6.0 \\\n  --maskgrowradius 12px \\\n  --mingrowarea 5 \\\n  --hfdi \\\n  --threads 8 \\\n  --gpu \\\n  --no-albedo-output \\\n  --visible-mask-growing-threshold 9.0\n```\nNotice that the non-geocorrected file requires a **`maskgrowradius` in pixels**, as the file has no spatial metadata.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/markusfoote/mag1c",
    "keywords": "imaging spectrometer matched filter sparse pytorch",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mag1c",
    "package_url": "https://pypi.org/project/mag1c/",
    "platform": "",
    "project_url": "https://pypi.org/project/mag1c/",
    "project_urls": {
      "Homepage": "https://github.com/markusfoote/mag1c"
    },
    "release_url": "https://pypi.org/project/mag1c/1.2.0/",
    "requires_dist": [
      "torch (>=1.3)",
      "numpy (>=1.16.4)",
      "spectral (>=0.19)",
      "scikit-image (>=0.15.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Sparse Matched Filter Algorithm for Atmospheric Trace Gas Concentration Estimation",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7492884,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26cac93f35423879df96518b539d0d97163ed85c45bf46ce3e232af11766cc5d",
        "md5": "6e401773c873f436ee0af972dc42020d",
        "sha256": "52efb85d9f7391a451337a38ce7834fa5d3685c632eeaf85ce85797628f21bdf"
      },
      "downloads": -1,
      "filename": "mag1c-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e401773c873f436ee0af972dc42020d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1255464,
      "upload_time": "2020-06-17T00:13:31",
      "upload_time_iso_8601": "2020-06-17T00:13:31.257980Z",
      "url": "https://files.pythonhosted.org/packages/26/ca/c93f35423879df96518b539d0d97163ed85c45bf46ce3e232af11766cc5d/mag1c-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afaec172dd46afe31576e731074a13af2999550281238bf51c752ae2fc27aa46",
        "md5": "a1be6e7c2d8a734d6872beaf1c1b07b6",
        "sha256": "ccf56ac450418bee9624e21c3c4ae750b660513f8e9b01b03c49949d70ae6de0"
      },
      "downloads": -1,
      "filename": "mag1c-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a1be6e7c2d8a734d6872beaf1c1b07b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1263362,
      "upload_time": "2020-06-17T00:13:32",
      "upload_time_iso_8601": "2020-06-17T00:13:32.658822Z",
      "url": "https://files.pythonhosted.org/packages/af/ae/c172dd46afe31576e731074a13af2999550281238bf51c752ae2fc27aa46/mag1c-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}