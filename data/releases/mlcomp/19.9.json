{
  "info": {
    "author": "Evgeny Semyonov",
    "author_email": "lightsanweb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "\n<div align=\"center\">\n\n![MLComp logo](https://raw.githubusercontent.com/catalyst-team/catalyst-pics/master/pics/MLcomp.png)\n\n**MLComp is a distributed DAG (Directed acyclic graph) framework for machine learning with UI**\n\n[![Pipi version](https://img.shields.io/pypi/v/mlcomp.svg)](https://pypi.org/project/mlcomp/)\n[![Docs](https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fmlcomp%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v)](https://catalyst-team.github.io/mlcomp/index.html)\n[![License](https://img.shields.io/github/license/catalyst-team/mlcomp.svg)](LICENSE)\n\n[![Build Status](https://travis-ci.com/catalyst-team/mlcomp.svg?branch=master)](https://travis-ci.com/catalyst-team/mlcomp) \n[![Telegram](./docs/imgs/telegram.svg)](https://t.me/catalyst_team)\n[![Gitter](https://badges.gitter.im/catalyst-team/community.svg)](https://gitter.im/catalyst-team/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Slack](./docs/imgs/slack.svg)](https://opendatascience.slack.com/messages/CGK4KQBHD)\n[![Donate](https://raw.githubusercontent.com/catalyst-team/catalyst-pics/master/third_party_pics/patreon.png)](https://www.patreon.com/catalyst_team)\n\n</div>\n\nThe goal of MLComp is to provide tools for training, inferencing, creating complex pipelines\n(especially for computer vision) in a rapid, well manageable way.\n\nMLComp is compatible with: Python 3.6+, Unix operation system.\n\n**Features**\n\n- Amazing UI\n- [Catalyst](https://github.com/catalyst-team/catalyst) support\n- Distributed training\n- Supervisor that controls computational resources\n- Synchronization of both code and data\n- Resource monitoring\n- Full functionality of the pause and continue on UI\n- Auto control of the requirements\n- Code dumping (with syntax highlight on UI)\n- [Kaggle](https://www.kaggle.com/) integration\n- Hierarchical logging\n- Grid search\n- Experiments comparison\n- Customizing layouts\n\n**Contents**\n\n- [Screenshots](#screenshots)\n\n- [Installation](#installation)\n\n- [UI](#ui)\n\n- [Usage](#usage)\n\n- [Docs and examples](#docs-and-examples)\n\n- [Environment variables](#environment-variables)\n\n# Screenshots\n\nDags\n\n![dags](docs/imgs/dags.png)\n\nComputers\n\n![computers](docs/imgs/computers.png)\n\nReports\n\n![reports](docs/imgs/reports.png)\n\nCode\n\n![code](docs/imgs/code.png)\n\nGraph\n\n![graph](docs/imgs/graph.png)\n\n[More screenshots](docs/screenshots.md)\n\n# Installation\n\n1. Install MLComp package\n\n    ```bash\n    pip install mlcomp\n    mlcomp init\n    ```\n\n2. Setup your environment. Please consider [Environment variables](#environment-variables) section\n\n3. Run db, redis, mlcomp-server, mlcomp-workers:\n\n    **Variant 1: minimal (if you have 1 computer)**\n\n    Run all necessary (mlcomp-server, mlcomp-workers, redis-server), it uses SQLITE:\n\n    ```bash\n    mlcomp-server start\n    ```\n\n    **Variant 2: full**\n\n    a. Change your [Environment variables](#environment-variables) to use PostgreSql\n\n    b. Install rsync on each work computer\n\n    ```.env\n    sudo apt-get install rsync\n    ```\n\n    Ensure that every computer is available by SSH protocol with IP/PORT you specified\n     in the [Environment variables](#environment-variables) file.\n\n     rsync will perform the following commands:\n\n     to upload\n     ```bash\n     rsync -vhru -e \"ssh -p {target.port} -o StrictHostKeyChecking=no\" \\\n     {folder}/ {target.user}@{target.ip}:{folder}/ --perms  --chmod=777\n     ```\n     to download\n\n     ```.env\n     rsync -vhru -e \"ssh -p {source.port} -o StrictHostKeyChecking=no\" \\\n     {source.user}@{source.ip}:{folder}/ {folder}/ --perms  --chmod=777\n     ```\n\n    c. Install [apex](https://github.com/NVIDIA/apex#quick-start) for distributed learning\n\n    d. To Run postgresql, redis-server, mlcomp-server, execute on your server-computer:\n\n     ```bash\n    cd ~/mlcomp/configs/\n    docker-compose -f server-compose.yml up -d\n    ```\n\n    e. Run on each worker-computer:\n\n    ```bash\n    mlcomp-worker start\n    ```\n\n # UI\n\nWeb site is available at http://{WEB_HOST}:{WEB_PORT}\n\nBy default, it is http://localhost:4201\n\nThe front is built with AngularJS.\n\nIn case you desire to change it, please consider [front's Readme page](mlcomp/server/front/README.md)\n\n # Usage\n\nRun\n ```bash\nmlcomp dag PATH_TO_CONFIG.yml\n```\n\nThis command copies files of the directory to the database.\n\nThen, the server schedules the DAG considering free resources. \n\nFor more information, please consider [Docs](https://catalyst-team.github.io/mlcomp/usage.html)\n\n# Docs and examples\n\nAPI documentation and an overview of the library can be\n found here [![Docs](https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fmlcomp%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v)](https://catalyst-team.github.io/mlcomp/index.html)\n\nYou can find advanced tutorials and MLComp best practices in the [examples](examples/) folder of the repository.\n\n# Environment variables\n\nThe single file to setup your computer environment is located at ~/mlcomp/configs/.env\n\n- ROOT_FOLDER - folder to save MLComp files: configs, db, tasks, etc.\n- TOKEN - site security token. Please change it to any string\n- DB_TYPE. Either SQLITE or POSTGRESQL\n- POSTGRES_DB. PostgreSql db name\n- POSTGRES_USER. PostgreSql user\n- POSTGRES_PASSWORD. PostgreSql password\n- POSTGRES_HOST. PostgreSql host\n- PGDATA. PostgreSql db files location\n- REDIS_HOST. Redis host\n- REDIS_PORT. Redis port\n- REDIS_PASSWORD. Redis password\n- WEB_HOST. MLComp site host. 0.0.0.0 means it is available from everywhere\n- WEB_PORT. MLComp site port\n- CONSOLE_LOG_LEVEL. log level for output to the console\n- DB_LOG_LEVEL. log level for output to the database\n- IP. Ip of a work computer. The work computer must be accessible from other work computers by these IP/PORT\n- PORT. Port of a work computer. The work computer must be accessible from other work computers by these IP/PORT (SSH protocol)\n- MASTER_PORT_RANGE. distributed port range for a work computer. 29500-29510 means that if\nthis work computer is a master in a distributed learning, it will use the first free port\nfrom this range. Ranges of different work computers must not overlap.\n- NCCL_SOCKET_IFNAME. NCCL network interface.\n- FILE_SYNC_INTERVAL. File sync interval in seconds. 0 means file sync is off\n- WORKER_USAGE_INTERVAL. Interval in seconds of writing worker usage to DB\n- INSTALL_DEPENDENCIES. True/False. Either install dependent libraries or not\n\nYou can see your network interfaces with `ifconfig` command.\n Please consider [nvidia doc](https://docs.nvidia.com/deeplearning/sdk/nccl-developer-guide/docs/env.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/catalyst-team/mlcomp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlcomp",
    "package_url": "https://pypi.org/project/mlcomp/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlcomp/",
    "project_urls": {
      "Homepage": "https://github.com/catalyst-team/mlcomp"
    },
    "release_url": "https://pypi.org/project/mlcomp/19.9/",
    "requires_dist": [
      "catalyst (==19.9)",
      "redis",
      "PyYAML (>=5.1)",
      "setuptools (>=41.0.1)",
      "click (>=7.0)",
      "psutil (>=5.6.2)",
      "GPUtil (==1.4.0)",
      "pathspec (>=0.5.9)",
      "apscheduler (>=3.6.0)",
      "sqlalchemy (>=1.3.4)",
      "celery (>=4.3.0)",
      "kaggle (>=1.5.3)",
      "scipy (>=1.3.0)",
      "flask (>=1.0.2)",
      "requests",
      "flask-cors (>=3.0.6)",
      "sqlalchemy-serializer (==1.3.1)",
      "scikit-learn (>=0.21.2)",
      "psycopg2-binary (>=2.8.2)",
      "tiffile",
      "albumentations (>=0.2.3)",
      "sqlalchemy-migrate (>=0.12.0)",
      "cython",
      "supervisor (>=4.0.4)",
      "jupyter",
      "networkx (>=2.2)",
      "pytest (>=5.0.1)",
      "pytest-xdist (>=1.29.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Machine learning pipelines. Especially, for competitions, like Kaggle",
    "version": "19.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6821648,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7b60fd081f0adbe5ab41a221f45f1512ae892104ba7cc00fd53342cc688785a",
        "md5": "573b23b7f1e8d04bad54eb048d1ac07a",
        "sha256": "ceddd36205f0b8439bc4ffd46ec85177dd2ec008954a221a0f5ff826ffaa9716"
      },
      "downloads": -1,
      "filename": "mlcomp-19.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "573b23b7f1e8d04bad54eb048d1ac07a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 14125732,
      "upload_time": "2019-09-02T19:09:02",
      "upload_time_iso_8601": "2019-09-02T19:09:02.228801Z",
      "url": "https://files.pythonhosted.org/packages/c7/b6/0fd081f0adbe5ab41a221f45f1512ae892104ba7cc00fd53342cc688785a/mlcomp-19.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f87afd55eb9f2410de1b8f7be913b49824e12a44277248cc88abab164f3eb772",
        "md5": "238058d528c1b4c069c3c9aa259b1552",
        "sha256": "b0707bb9857ecc66ba416ac5e448b077a406cf1d076538cf8efbc3f64c7428f2"
      },
      "downloads": -1,
      "filename": "mlcomp-19.9.tar.gz",
      "has_sig": false,
      "md5_digest": "238058d528c1b4c069c3c9aa259b1552",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 6922077,
      "upload_time": "2019-09-02T19:09:06",
      "upload_time_iso_8601": "2019-09-02T19:09:06.944889Z",
      "url": "https://files.pythonhosted.org/packages/f8/7a/fd55eb9f2410de1b8f7be913b49824e12a44277248cc88abab164f3eb772/mlcomp-19.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}