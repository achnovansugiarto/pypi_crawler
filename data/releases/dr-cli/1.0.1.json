{
  "info": {
    "author": "Nyior Clement",
    "author_email": "cnyior27@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "<h1 align=\"center\">\n  Django Rest CLI âœ¨\n</h1>\n\n<p align=\"center\">\n  <img src=\"https://github.com/py-universe/django-rest-cli/blob/docs/assets/logo.png\" width=\"120\" height=\"120\">\n</p>\n\n<p align=\"center\">\n   Scaffold your DRF project with common python packages configured, auto-generated docs, auto-generated CRUD endpoints, code linting with pre-commit hook, and moreâš¡ðŸš€\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/pre-commit/pre-commit\">\n    <img src=\"https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\" alt=\"pre-commit\">\n  </a>\n\n  <a href=\"https://github.com/tiangolo/typer/actions?query=workflow%3ATest\" target=\"_blank\">\n      <img src=\"https://github.com/tiangolo/typer/workflows/Test/badge.svg\" alt=\"Test\">\n  </a>\n  <a href=\"https://pypi.org/project/django-rest-cli\" target=\"_blank\">\n      <img src=\"https://img.shields.io/pypi/v/typer?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n  </a>\n</p>\n\n\n## What is Django Rest CLI ?\nA CLI tool for _rapid_ Rest APIs development with the Django Framework.\nIt abstracts the repeated aspects of building a REST API with the Django Rest Framework by:\n\n- Allowing you start your project from one of three templates. Each template comes with features you'd most likely be setting up yourself already configured.\n\n- Allowing you define your models and have this tool generate CRUD endpoints for each model defined.\nFor example, if you define a model, **Product** in your `models.py` file, this tool could generate a _GET /products POST /products PUT /products/<product_id>_ etc. endpoints for that model.\n\n- Allowing you create all the apps in your project at once, if you know them before hand.\n\n\n## Demo\nworking on it\n\n## Usage: How to Work with this Tool\n\n### Step-1: Installation\n```pip install dr-cli```\n\nI highly recommend that you install this in a virtual environment.\n\n### Step-2: Create a New Project\n- Run ```dr-cli startproject project_name``` to start a new DRF project.\n\n- You'd be prompted to start your project from one of three templates: Baisc, Medior, and Advanced template. Learn more about what each template comes bundled with [here](https://github.com/py-universe/django-rest-cli/blob/docs/templatesInfo.md).\n\n- On selecting one of the templates your project will then be created. Git will be initialized in your project, and all project dependencies installed as shown in the image below:\n\n<img src=\"https://github.com/py-universe/django-rest-cli/blob/docs/assets/startproject.PNG\">\n\nThe generated project comes with a nice Readme containing the steps for running the project\n\n\n### Step-3: Create a New Apps in your Project\n- Run ```dr-cli startapps app1_name app2_name app3_name``` to create multiple Django apps in your project.\n\n- Running the above command will create all your apps. Name validations would also be performed as shown in the image below:\n\n<img src=\"https://github.com/py-universe/django-rest-cli/blob/docs/assets/createapps.PNG\">\n\n**Note** Make sure to add your successfully created apps to the list of INSTALLED APPS\n\n\n### Step-4: Generate CRUD Endpoints for your Apps\n- Run ```dr-cli addcrud app1_name app2_name app3_name``` to create CRUD endpoints for the models defined in the specified apps. \n\n- Running the above command would return a nice looking feedback as shown in the image below:\n\n<img src=\"https://github.com/py-universe/django-rest-cli/blob/docs/assets/addcrud.PNG\">\n\n**Note** Make sure to register the `URLs` for each app in the top level `urls.py` file.\n\nOn Windows, Emojis are only supported in [Windows Terminal Preview](https://www.microsoft.com/en-us/p/windows-terminal-preview/9n8g5rfz9xk3?activetab=pivot:overviewtab)\n\n\n## Motivation\nIn creating REST APIs with the Django framework, I noticed there were things I kept repeating for every project. And there were things I just wished there was a better way of doing them. I created this CLI tool to address _the three concerns_ that mattered to me the most. Hopefully, it resonates with you too.\n\n- **PROBLEM-1:**  I noticed I was repeating at least one of the following integrations, and features in every project:\n  - A custom user model defined in a `users` app\n  - Authentication endpoints.\n  - [python-decouple](https://pypi.org/project/python-decouple/): for managing environment varibales \n  - [drf-spactacular](https://drf-spectacular.readthedocs.io/en/latest/readme.html): for auto-generating APi docs \n  - [dj-database-url](https://github.com/jazzband/dj-database-url): for connecting to various databases \n  - [pre-commit, black, isort, flake8](https://ljvmiranda921.github.io/notebook/2018/06/21/precommits-using-black-and-flake8/): for code linting with pre-commit hooks \n  - [pytest-django](https://pytest-django.readthedocs.io/en/latest/): for writing unit tests with pytest \n  - [Docker](https://learndjango.com/tutorials/django-docker-and-postgresql-tutorial): for containerization. \n\n  So I wished there was a tool that could start my project with the integrations, and features I need configured. I found [cookie-cutter-django-rest](https://github.com/agconti/cookiecutter-django-rest) to be useful, but sometimes it's just too heavy for my use-case. I needed something more flexible, something that could start my project with few integrations or all the features and integrations above. \n\n  - **SOLUTION:** This CLI tool allows you start your project from one of three templates we provide: Basic, Medior, and Advanced templates. Depending on what template you select, you could scaffold your project with just python_decouple for managing env vars. Or you could go with something as complex as adding pytest for unit tests, drf_spectacular for auto-generating docs, authentication endpoints, pre-commit hook for code linting setup in your project, and docker support. Regardless of the template you select, we initialize git, and add a readme to your project.\n\n\n- **PROBLEM-2:** I noticed most times I needed CRUD endpoints for the models I define. CRUD endpoints are so unchanging that I wish there was a tool that could just generate all the CRUD endpoints for the models I define.\n\n  - **SOLUTION:** You can define your models and have this tool generate CRUD endpoints for each model defined. For example, if you define a model, **Product** in your `models.py` file, this tool could generate a _GET /products POST /products PUT /products/<product_id>_ etc. endpoints for that model.\n\n\n- **PROBLEM-3:** I had always wish there was a way to create multiples apps at once in my Django project\n  - **SOLUTION:** This tool allows you create multiple apps at once in this project.\n\n\n## Contributing Guide\nComing soon... \n\n\n## Acknowledgements\nIn building this I re-used a few parts of these repositories in this project:\n- [django-classy-start](https://github.com/mfonism/django-classy-start)\n- [dr-scaffold](https://github.com/Abdenasser/dr_scaffold)\n\n\n## I Love this, how can I thank you Nyior?\nJust let your developer friends know about this repo :) If you star this repo too I won't complain xD\n\n\n## Licence\nMIT\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nyior/django-rest-cli",
    "keywords": "python,rest,api,rest-framework,developer tool,cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dr-cli",
    "package_url": "https://pypi.org/project/dr-cli/",
    "platform": null,
    "project_url": "https://pypi.org/project/dr-cli/",
    "project_urls": {
      "Bug Tracker": "https://github.com/py-universe/django-rest-cli/issues",
      "Homepage": "https://github.com/Nyior/django-rest-cli",
      "Source Code": "https://github.com/py-universe/django-rest-cli"
    },
    "release_url": "https://pypi.org/project/dr-cli/1.0.1/",
    "requires_dist": [
      "Django (>=2.2)",
      "PyInquirer (>=1.0.3)",
      "black (>=22.3.0)",
      "isort (>=5.10.1)",
      "inflect (>=5.5.2)",
      "colorama (>=0.4.4)",
      "termcolor (>=1.1.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Scaffold your DRF projects fasterâš¡ðŸš€",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13632302,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "166faba7b8bf02b9d3bb04764a8b2f0db0d34fed1fca72f6982fba8a85521a9a",
        "md5": "55d10b2a830e0bda7d3ce4a202227145",
        "sha256": "45c46309d1f067e6c994820ec85cd40a446815e1993c9e175159aae9147c77fb"
      },
      "downloads": -1,
      "filename": "dr_cli-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55d10b2a830e0bda7d3ce4a202227145",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 52341,
      "upload_time": "2022-04-23T10:48:17",
      "upload_time_iso_8601": "2022-04-23T10:48:17.238965Z",
      "url": "https://files.pythonhosted.org/packages/16/6f/aba7b8bf02b9d3bb04764a8b2f0db0d34fed1fca72f6982fba8a85521a9a/dr_cli-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53fb8e690e244f4025169708b179a0736a61481264c09e35390922271d2a86cc",
        "md5": "a3eb5ba0804f4dc378cf9cd8cafc3990",
        "sha256": "cb59a7ff91bd2f93519b81d06ff9f1b190e695c4a3e885bd5836d694db93d8ff"
      },
      "downloads": -1,
      "filename": "dr-cli-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a3eb5ba0804f4dc378cf9cd8cafc3990",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 31565,
      "upload_time": "2022-04-23T10:48:19",
      "upload_time_iso_8601": "2022-04-23T10:48:19.072449Z",
      "url": "https://files.pythonhosted.org/packages/53/fb/8e690e244f4025169708b179a0736a61481264c09e35390922271d2a86cc/dr-cli-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}