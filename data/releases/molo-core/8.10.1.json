{
  "info": {
    "author": "Praekelt.org",
    "author_email": "dev@praekelt.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "Molo\n====\n\n.. image:: https://travis-ci.org/praekelt/molo.svg?branch=develop\n    :target: https://travis-ci.org/praekelt/molo\n    :alt: Continuous Integration\n\n.. image:: https://coveralls.io/repos/praekelt/molo/badge.png?branch=develop\n    :target: https://coveralls.io/r/praekelt/molo?branch=develop\n    :alt: Code Coverage\n\n.. image:: https://readthedocs.org/projects/molo/badge/?version=latest\n    :target: https://molo.readthedocs.org\n    :alt: Molo Documentation\n\n.. image:: https://badge.fury.io/py/molo.core.svg\n    :target: http://badge.fury.io/py/molo.core\n    :alt: Pypi Package\n\nInstallation\n============\n\nMolo requires `Python`_ (version 2.6 or 2.7) to be installed. This installation method also requires `pip`_. Both of these must be installed before following the installation steps below.\n\nInstalling Molo\n---------------\n\nMolo can be then installed using::\n\n    $ virtualenv ve\n    $ source ve/bin/activate\n    (ve)$ pip install molo.core\n\n.. _python: https://www.python.org/\n.. _pip: https://pip.pypa.io/en/latest/index.html\n\nGetting Started\n===============\n\nMolo scaffolds a Django application for you with sensible defaults, packages\nand configuration to help you get going as soon as possible.\n\nScaffold a site using Molo\n--------------------------\n\nThe goal of Molo is to provide a solid base of proven, stable packages that\nhelp Praekelt Foundation and partners to deliver on project scope::\n\n   $ molo scaffold myapp\n   $ cd myapp/\n   $ ./manage.py migrate\n   $ ./manage.py createsuperuser\n   $ ./manage.py runserver\n\nOpen the sample site in your browser at http://localhost:8000/ and the CMS\nat http://localhost:8000/admin/.\n\nScaffolding a site in an existing repository\n--------------------------------------------\n\nIt's not always desirable to create a new directory for an application,\nespecially when scaffolding an application for a repository that's already\nbeen created. Specifically for that Molo allows a second argument for the\ndirectory.\n\nTo scaffold an application called ``myapp`` in the current directory do::\n\n   $ molo scaffold myapp .\n\nSpecifying extra requires\n-------------------------\n\nMolo in itself is not expected to be enough to deliver on a client request.\nDuring scaffolding use the ``--require`` commandline parameter to include\nmore libraries that are required for installation::\n\n   $ molo scaffold myapp --require=django-contrib-comments\n\nAdds the `django-contrib-comments` to the generated requirements file which\nis read by the generated package's ``setup.py`` file.\n\nMultiple requires can be specified on the command line::\n\n   $ molo scaffold myapp --require=django-contrib-comments\n\nAutomatically adding installed apps\n-----------------------------------\n\nIf you're including a Django app chances are you're going to want to\nadd it to your ``INSTALLED_APPS`` settings as well as adding an entry\nto the generated ``urls.py`` file::\n\n   $ molo scaffold myapp --include=django_comments ^comments/\n\nThis results in the following ``urls.py`` entry::\n\n   url(r'^comments/',\n       include('django_comments.urls',\n               namespace='django_comments',\n               app_name='django_comments')),\n\n.. note:: multiple includes can be specified on the command line, the format\n          is ``--include=<app_name> <regex-for-urls>``\n\nFor convenience, here's the full scaffold command for the current plugins::\n\n    $ molo scaffold myapp \\\n        --require=django-contrib-comments --include=django_comments ^comments/ \\\n        --require=molo.commenting --include=molo.commenting ^commenting/ \\\n        --require=molo.yourwords --include=molo.yourwords ^yourwords/\n\nMolo, Django & settings files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhat you have now is a standard Django application set up for normal\ndevelopment like outlined in the Django documentation. The only main difference\nis that your settings are Python modules found in the\n``settings/dev.py`` and ``settings/production.py`` files in your applications\nfolder. Both of these inherit settings from ``settings/base.py``.\n\nTo create your own custom settings add a ``local.py`` file in the ``settings``\nfolder. The ``settings/dev.py`` will automatically include those settings\nfor your local development environment.\n\nUnpacking Templates from Packages\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSometimes a package's existing templates simply are not enough and need\nsome amount of customization. Use the ``unpack-templates`` command in the\nscaffolded application to unpack a package's templates in your application's\ntemplates directory::\n\n   $ molo scaffold testapp\n   $ pip install -e testapp\n   ...\n\nYou'll see the default templates that ``molo.core`` ships with available in\nthe ``templates`` directory::\n\n   $ ls testapp/testapp/templates\n   404.html  500.html  base.html core\n\nNow we unpack the ``profiles`` templates directory from the ``molo.profiles``\npackage into the ``testapp`` package template directory::\n\n   $ molo unpack-templates molo.profiles testapp\n   $ ls testapp/testapp/templates\n   404.html  500.html  base.html core profiles\n\nThe format is::\n\n   $ molo unpack-templates <source package> <target package>\n\nRunning tests\n~~~~~~~~~~~~~\n\nNow develop your application and write tests for the features you add.\nRunning your tests for Django works as you would expect::\n\n   $ ./manage.py test\n\n\nWhat is bundled with Molo?\n--------------------------\n\n1. `Wagtail CMS`_\n2. Basic feature phone template set.\n3. Basic models for the following tree structure:\n\n   1. A site has languages\n   2. A language has a homepage\n   3. Articles are organised into sections.\n   4. Articles are composed from one or more blocks.\n   5. Blocks can be headings, paragraphs, images, lists or\n      links to other pages.\n4. Molo Profiles: Provides code to help with User profiles in a project using the Molo code base.\n\n\n\nTesting the Molo scaffolding tool\n---------------------------------\n\nIf you're interested in working on or contributing to the code that\ndoes the scaffolding then clone this repository from the GitHub repository at\nhttp://github.com/praekelt/molo.\n\nInstall the requirement development & testing dependencies::\n\n   $ pip install -r requirements-dev.txt\n\nAnd then run the full test suite with::\n\n   $ py.test\n\nPull requests are expected to follow Praekelt's `Ways Of Working`_.\n\n.. _`Ways of Working`: http://ways-of-working.rtfd.org\n.. _`Wagtail CMS`: http://wagtail.io\n\nDocumentation\n-------------\n\nDocumentation is available online at http://molo.readthedocs.org/\nand in the `docs` directory of the repository.\n\n.. |molo-docs| image:: https://readthedocs.org/projects/molo/badge/?version=latest\n    :alt: Documentation\n    :scale: 100%\n    :target: http://molo.readthedocs.org/\n\nTo build the docs locally::\n\n    $ virtualenv ve\n    $ source ve/bin/activate\n    (ve)$ pip install -r requirements-docs.txt\n    (ve)$ cd docs\n    (ve)$ make html\n\nYou'll find the docs in `docs/_build/index.html`\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/praekelt/molo",
    "keywords": "praekelt,mobi,web,django",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molo.core",
    "package_url": "https://pypi.org/project/molo.core/",
    "platform": "",
    "project_url": "https://pypi.org/project/molo.core/",
    "project_urls": {
      "Homepage": "http://github.com/praekelt/molo"
    },
    "release_url": "https://pypi.org/project/molo.core/8.10.1/",
    "requires_dist": [
      "babel",
      "beautifulsoup4 (==4.6.0)",
      "cached-property",
      "celery (<4.0)",
      "cookiecutter (==1.0.0)",
      "dj-database-url",
      "Django (<2.0,>=1.11)",
      "django-cas-ng (==3.5.8)",
      "django-el-pagination (==3.1.0)",
      "django-extensions (<2,>=1)",
      "django-google-analytics-app (==4.3.7)",
      "django-libsass",
      "django-mptt (==0.8.7)",
      "djangorestframework (==3.7.4)",
      "django-phonenumber-field (==1.3.0)",
      "django-import-export",
      "django-daterange-filter",
      "markdown (>=3.0.1)",
      "mote-prk (==0.2.1)",
      "raven (==5.0.0)",
      "redis",
      "requests",
      "setuptools (>=18.5)",
      "six (>=1.9)",
      "ujson (==1.35)",
      "unicodecsv (==0.14.1)",
      "unicore.content",
      "wagtail (<2.3,>=2.2)",
      "wagtailmedia (==0.2.0)",
      "ImageHash (==3.4)",
      "boto (==2.49.0)",
      "django-storages (==1.7.1)",
      "Unidecode (==0.04.16)",
      "django-treebeard (==4.2.0)",
      "django-prometheus",
      "prometheus-client",
      "django-enumfield (==1.5)"
    ],
    "requires_python": "",
    "summary": "Molo is a set of tools for publishing mobi sites with a community focus.",
    "version": "8.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10311296,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb1cda21a01849ac771469d9b6a32ec9724162845efcefc6576ebc7901784ed0",
        "md5": "3f954f78bcc2a8b085fc507c260013ca",
        "sha256": "8e305631f2be7bc242bf63f74285e21fad68940dc3fc24ca9797c53c898d6747"
      },
      "downloads": -1,
      "filename": "molo.core-8.10.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f954f78bcc2a8b085fc507c260013ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4710438,
      "upload_time": "2019-05-21T14:38:01",
      "upload_time_iso_8601": "2019-05-21T14:38:01.580946Z",
      "url": "https://files.pythonhosted.org/packages/bb/1c/da21a01849ac771469d9b6a32ec9724162845efcefc6576ebc7901784ed0/molo.core-8.10.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "417bbd0cb44deed981ee05aeac264af0330913244fb368655cbac09fdd2f0af1",
        "md5": "645e492655abbcd397fb77fd90c2d145",
        "sha256": "b7e7c970ea5e9250829fac51aea78c97588f95e725481c8d14c0a798c087ca19"
      },
      "downloads": -1,
      "filename": "molo.core-8.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "645e492655abbcd397fb77fd90c2d145",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6450879,
      "upload_time": "2019-05-21T14:38:05",
      "upload_time_iso_8601": "2019-05-21T14:38:05.860919Z",
      "url": "https://files.pythonhosted.org/packages/41/7b/bd0cb44deed981ee05aeac264af0330913244fb368655cbac09fdd2f0af1/molo.core-8.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}