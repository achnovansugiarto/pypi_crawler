{
  "info": {
    "author": "Praekelt Foundation",
    "author_email": "dev@praekelt.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "Molo\n====\n\n.. image:: https://travis-ci.org/praekelt/molo.svg?branch=develop\n    :target: https://travis-ci.org/praekelt/molo\n    :alt: Continuous Integration\n\n.. image:: https://coveralls.io/repos/praekelt/molo/badge.png?branch=develop\n    :target: https://coveralls.io/r/praekelt/molo?branch=develop\n    :alt: Code Coverage\n\n.. image:: https://readthedocs.org/projects/molo/badge/?version=latest\n    :target: https://molo.readthedocs.org\n    :alt: Molo Documentation\n\n.. image:: https://badge.fury.io/py/molo.core.svg\n    :target: http://badge.fury.io/py/molo.core\n    :alt: Pypi Package\n\nInstallation\n============\n\nMolo requires `Python`_ (version 2.6 or 2.7) to be installed. This installation method also requires `pip`_. Both of these must be installed before following the installation steps below.\n\nInstalling Molo\n---------------\n\nMolo can be then installed using::\n\n    $ virtualenv ve\n    $ source ve/bin/activate\n    (ve)$ pip install molo.core\n\n.. _python: https://www.python.org/\n.. _pip: https://pip.pypa.io/en/latest/index.html\n\nGetting Started\n===============\n\nMolo scaffolds a Django application for you with sensible defaults, packages\nand configuration to help you get going as soon as possible.\n\nScaffold a site using Molo\n--------------------------\n\nThe goal of Molo is to provide a solid base of proven, stable packages that\nhelp Praekelt Foundation and partners to deliver on project scope::\n\n   $ molo scaffold myapp\n   $ cd myapp/\n   $ ./manage.py migrate\n   $ ./manage.py createsuperuser\n   $ ./manage.py runserver\n\nOpen the sample site in your browser at http://localhost:8000/ and the CMS\nat http://localhost:8000/admin/.\n\nScaffolding a site in an existing repository\n--------------------------------------------\n\nIt's not always desirable to create a new directory for an application,\nespecially when scaffolding an application for a repository that's already\nbeen created. Specifically for that Molo allows a second argument for the\ndirectory.\n\nTo scaffold an application called ``myapp`` in the current directory do::\n\n   $ molo scaffold myapp .\n\nSpecifying extra requires\n-------------------------\n\nMolo in itself is not expected to be enough to deliver on a client request.\nDuring scaffolding use the ``--require`` commandline parameter to include\nmore libraries that are required for installation::\n\n   $ molo scaffold myapp --require=django-contrib-comments\n\nAdds the `django-contrib-comments` to the generated requirements file which\nis read by the generated package's ``setup.py`` file.\n\nMultiple requires can be specified on the command line::\n\n   $ molo scaffold myapp --require=django-contrib-comments \\\n   >   --require=molo.profiles\n\nAutomatically adding installed apps\n-----------------------------------\n\nIf you're including a Django app chances are you're going to want to\nadd it to your ``INSTALLED_APPS`` settings as well as adding an entry\nto the generated ``urls.py`` file::\n\n   $ molo scaffold myapp --include=django_comments ^comments/\n\nThis results in the following ``urls.py`` entry::\n\n   url(r'^comments/',\n       include('django_comments.urls',\n               namespace='django_comments',\n               app_name='django_comments')),\n\n.. note:: multiple includes can be specified on the command line, the format\n          is ``--include=<app_name> <regex-for-urls>``\n\nMolo, Django & settings files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhat you have now is a standard Django application set up for normal\ndevelopment like outlined in the Django documentation. The only main difference\nis that your settings are Python modules found in the\n``settings/dev.py`` and ``settings/production.py`` files in your applications\nfolder. Both of these inherit settings from ``settings/base.py``.\n\nTo create your own custom settings add a ``local.py`` file in the ``settings``\nfolder. The ``settings/dev.py`` will automatically include those settings\nfor your local development environment.\n\nUnpacking Templates from Packages\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSometimes a package's existing templates simply are not enough and need\nsome amount of customization. Use the ``unpack-templates`` command in the\nscaffolded application to unpack a package's templates in your application's\ntemplates directory::\n\n   $ molo scaffold testapp \\\n   >   --require=molo.profiles \\\n   >   --include=molo.profiles ^profiles/\n   $ pip install -e testapp\n   ...\n\nYou'll see the default templates that ``molo.core`` ships with available in\nthe ``templates`` directory::\n\n   $ ls testapp/testapp/templates\n   404.html  500.html  base.html core\n\nNow we unpack the ``profiles`` templates directory from the ``molo.profiles``\npackage into the ``testapp`` package template directory::\n\n   $ molo unpack-templates molo.profiles testapp\n   $ ls testapp/testapp/templates\n   404.html  500.html  base.html core profiles\n\nThe format is::\n\n   $ molo unpack-templates <source package> <target package>\n\nWriting tests\n~~~~~~~~~~~~~\n\nNow develop your application and write tests for the features you add.\nRunning your tests for Django works as you would expect::\n\n   $ ./manage.py test\n\nWhat is bundled with Molo?\n--------------------------\n\n1. `Wagtail CMS`_\n2. Basic feature phone template set.\n3. Basic models for the following tree structure:\n\n   1. A site has languages\n   2. A language has a homepage\n   3. Articles are organised into sections.\n   4. Articles are composed from one or more blocks.\n   5. Blocks can be headings, paragraphs, images, lists or\n      links to other pages.\n\nTesting the Molo scaffolding tool\n---------------------------------\n\nIf you're interested in working on or contributing to the code that\ndoes the scaffolding then clone this repository from the GitHub repository at\nhttp://github.com/praekelt/molo.\n\nInstall the requirement development & testing dependencies::\n\n   $ pip install -r requirements-dev.txt\n\nAnd then run the full test suite with::\n\n   $ py.test\n\nPull requests are expected to follow Praekelt's `Ways Of Working`_.\n\n.. _`Ways of Working`: http://ways-of-working.rtfd.org\n.. _`Wagtail CMS`: http://wagtail.io\n\nDocumentation\n-------------\n\nDocumentation is available online at http://molo.readthedocs.org/\nand in the `docs` directory of the repository.\n\n.. |molo-docs| image:: https://readthedocs.org/projects/molo/badge/?version=latest\n    :alt: Documentation\n    :scale: 100%\n    :target: http://molo.readthedocs.org/\n\nTo build the docs locally::\n\n    $ virtualenv ve\n    $ source ve/bin/activate\n    (ve)$ pip install -r requirements-docs.txt\n    (ve)$ cd docs\n    (ve)$ make html\n\nYou'll find the docs in `docs/_build/index.html`",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/praekelt/molo",
    "keywords": "praekelt,mobi,web,django",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molo.core",
    "package_url": "https://pypi.org/project/molo.core/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/molo.core/",
    "project_urls": {
      "Homepage": "http://github.com/praekelt/molo"
    },
    "release_url": "https://pypi.org/project/molo.core/2.6.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Molo is a set of tools for publishing mobi sites with a community focus.",
    "version": "2.6.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10311296,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa7725825afe22f918a05f41ae4e6edcbb284179f6e205f1047523ccac016055",
        "md5": "82ef4509ff7d1a24937167eb4623acf1",
        "sha256": "7f01a398a39bebedfd8ce215cad9f15b0d6efd78194cb81b2c417796c70d0a1b"
      },
      "downloads": -1,
      "filename": "molo.core-2.6.7.tar.gz",
      "has_sig": false,
      "md5_digest": "82ef4509ff7d1a24937167eb4623acf1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36953,
      "upload_time": "2016-02-17T10:54:27",
      "upload_time_iso_8601": "2016-02-17T10:54:27.553223Z",
      "url": "https://files.pythonhosted.org/packages/aa/77/25825afe22f918a05f41ae4e6edcbb284179f6e205f1047523ccac016055/molo.core-2.6.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}