{
  "info": {
    "author": "tumbler",
    "author_email": "zimbler@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django-sphinxsearch\n===================\n\n`SphinxSearch <http://sphinxsearch.com>`__ database backend for\n`Django <https://www.djangoproject.com/>`__.\n\n|Build Status| |codecov| |PyPI version|\n\n-  Not a\n   `django\\_sphinx\\_db <https://github.com/smartfile/django-sphinx-db>`__\n   fork\n-  ``Django==2.0`` supported\n\nInstallation and usage\n----------------------\n\n1. Install django-sphinxsearch package\n\n   .. code:: sh\n\n       pip install django_sphinxsearch\n\n2. Configure Django settings\n\n   .. code:: python\n\n\n       INSTALLED_APPS += (\n           'sphinxsearch',\n       )\n\n       SPHINX_DATABASE_NAME = 'sphinx'\n\n       DATABASES[SPHINX_DATABASE_NAME] = {\n           'ENGINE': 'sphinxsearch.backend.sphinx',\n           'HOST': '127.0.0.1',\n           'PORT': 9306,\n       }\n\n       DATABASE_ROUTERS = ['sphinxsearch.routers.SphinxRouter']\n\n3. Create index definitions in sphinx.conf\n\n   ::\n\n       index testapp_testmodel\n       {\n           type              = rt\n           path              = /data/sphinx/testapp/testmodel/\n\n           rt_field          = sphinx_field\n           rt_attr_uint      = attr_uint\n           rt_attr_bool      = attr_bool\n           rt_attr_bigint    = attr_bigint\n           rt_attr_float     = attr_float\n           rt_attr_multi     = attr_multi\n           rt_attr_multi_64  = attr_multi_64\n           rt_attr_timestamp = attr_timestamp\n           rt_attr_string    = attr_string\n           rt_attr_json      = attr_json\n       }\n\n4. Define Django model for index\n\n   .. code:: python\n\n       import six\n       from datetime import datetime\n       from django.db import models\n\n       from jsonfield.fields import JSONField\n\n       from sphinxsearch import sql\n       from sphinxsearch import models as spx_models\n\n\n       class FieldMixin(spx_models.SphinxModel):\n           # Note that NULL values are not allowed for sphinx rt-index.\n           # Indexed text field. If no attribute with same name defined, can't be\n           # retrieved from index.\n\n           class Meta:\n               abstract = True\n\n           # Indexed text field. If no attribute with same name defined, can't be\n           # retrieved from index.\n           sphinx_field = spx_models.SphinxField(default='')\n           other_field = spx_models.SphinxField(default='')\n\n           # Numeric attributes\n           attr_uint = spx_models.SphinxIntegerField(default=0, db_column='attr_uint_')\n           attr_bigint = spx_models.SphinxBigIntegerField(default=0)\n           attr_float = models.FloatField(default=0.0)\n           attr_timestamp = spx_models.SphinxDateTimeField(default=datetime.now)\n           attr_bool = models.BooleanField(default=False)\n\n           # String attributes\n           attr_string = models.CharField(max_length=32, default='')\n           attr_json = JSONField(default={})\n\n           # Multi-value fields (sets of integer values)\n           attr_multi = spx_models.SphinxMultiField(default=[])\n           attr_multi_64 = spx_models.SphinxMulti64Field(default=[])\n\n\n       class TestModel(FieldMixin, spx_models.SphinxModel):\n           pass\n\n5. Query index from your app\n\n   .. code:: python\n\n\n       # Numeric attributes filtering\n       TestModel.objects.filter(attr_uint=0, attr_float__gte=10, attr_multi__in=[1, 2])\n\n       # For sphinxsearch>=2.2.7, string attr filtering enabled\n       TestModel.objects.filter(attr_string='some test')\n\n       # Use mysql-fulltext-search filtering:\n\n       TestModel.objects.filter(sphinx_field__search='find me')\n\n       # Run match queries\n       TestModel.objects.match(\n           'find in all fields',\n           sphinx_field='only in this field')\n\n       # Insert and update documents to index\n\n       obj = TestModel.objects.create(**values)\n       obj.attr_uint = 1\n       obj.save()\n\n       TestModel.objects.filter(attr_bool=True).update(attr_uint=2)\n\nNotes for production usage\n--------------------------\n\n-  Sphinxsearch engine has some issues with SQL-syntax support, and they\n   vary from one version to another. I.e. float attributes are not\n   comparable, string attributes were not comparable till v2.2.7.\n-  Without limits sphinxsearch returns only 20 matched documents.\n-  uint attributes accept -1 but return it as unsigned 32bit integer.\n-  bigint accept 2\\*\\*63 + 1 but return it as signed 64bit integer.\n-  use SphinxIntegerField and SphinxBigIntegerField instead of\n   IntegerField and BigIntegerField from django.db.models, because IN is\n   an expression in SQL (``value IN column``), but a function\n   (``IN(value, column)``) in sphinxsearch.\n\n.. |Build Status| image:: https://travis-ci.org/tumb1er/django_sphinxsearch.svg\n   :target: https://travis-ci.org/tumb1er/django_sphinxsearch\n.. |codecov| image:: https://codecov.io/gh/tumb1er/django_sphinxsearch/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/tumb1er/django_sphinxsearch\n.. |PyPI version| image:: https://badge.fury.io/py/django_sphinxsearch.svg\n   :target: http://badge.fury.io/py/django_sphinxsearch",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/rutube/django_sphinxsearch",
    "keywords": "",
    "license": "Beerware",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sphinxsearch",
    "package_url": "https://pypi.org/project/django-sphinxsearch/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sphinxsearch/",
    "project_urls": {
      "Homepage": "http://github.com/rutube/django_sphinxsearch"
    },
    "release_url": "https://pypi.org/project/django-sphinxsearch/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sphinxsearch database backend for django>=2.0",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7887477,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d525f55f0396b7805b7f0cc243d6dbb2831cc5ffae629bb6ee53e9d7145ab19d",
        "md5": "92b8503d91277ce423d9355cf6484d6f",
        "sha256": "471ceb237a642fa5e3f022d54d31171086586ebfe96e0aedbecfbcb819a03228"
      },
      "downloads": -1,
      "filename": "django_sphinxsearch-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "92b8503d91277ce423d9355cf6484d6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13457,
      "upload_time": "2018-02-22T07:55:28",
      "upload_time_iso_8601": "2018-02-22T07:55:28.322704Z",
      "url": "https://files.pythonhosted.org/packages/d5/25/f55f0396b7805b7f0cc243d6dbb2831cc5ffae629bb6ee53e9d7145ab19d/django_sphinxsearch-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}