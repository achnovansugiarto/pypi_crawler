{
  "info": {
    "author": "Jacob Salassi",
    "author_email": "author@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Upload Python Package](https://github.com/secmerc/materialize_threats/workflows/Upload%20Python%20Package/badge.svg)\n```\nmaterialize threats.\n                              '             .           .\n                           o       '   o  .     '   . O\n                        '   .   ' .   _____  '    .      .\n                         .     .   .mMMMMMMMm.  '  o  '   .\n                       '   .     .MMXXXXXXXXXMM.    .   ' \n                      .       . /XX77:::::::77XX\\ .   .   .\n                         o  .  ;X7:::''''''':::7X;   .  '\n                        '    . |::'.:'        '::| .   .  .\n                           .   ;:.:.            :;. o   .\n                        '     . \\'.:            /.    '   .\n                           .     `.':.        .'.  '    .\n                         '   . '  .`-._____.-'   .  . '  .\n                          ' o   '  .   O   .   '  o    '\n                           . ' .  ' . '  ' O   . '  '   '\n                            . .   '    '  .  '   . '  '\n                             . .'..' . ' ' . . '.  . '\n                              `.':.'        ':'.'.'\n                                `\\\\_  |     _//'\n                                  \\(  |\\    )/\n                                  //\\ |_\\  /\\\\\n                                 (/ /\\(\" )/\\ \\)\n                                  \\/\\ (  ) /\\/\n                                     |(  )|\n                                     | \\( \\\n                                     |  )  \\\n                                     |      \\\n                                     |       \\\n                                     |wizardsh`.__,_\n                                     \\_________.-'\nIt's magic.\n```\n# :confetti_ball: Who is this for?\nDevelopers and security practitioners who want to perform 'graph' analysis on data flow diagrams - **using SQL**. \n\n`materialize-threats` ingests draw.io data flow diagrams into a database, represents them like a property graph, then uses SQL to answer questions about them. \n\nToday, we can answer questions like:\n\n* What STRIDE based threat classes :warning: impact which elements and flows in my diagram? \n* What mitigations :lock: & test cases :white_check_mark: should be considered for this diagram? \n\nThese are just a few ideas.\n\n# :moneybag: What's in the box?\n* materialize_threats python module\n    * Parse [draw.io](https://github.com/jgraph/drawio-desktop/releases) data flow diagrams into graph representation (nodes, edges) stored in a RDBMS (sqlite in this demo)\n    * SQL (ORM) implementation of [Rapid Threat Model Prototyping methodology](https://github.com/geoffrey-hill-tutamantic/rapid-threat-model-prototyping-docs) used to generate threat classes\n* (Optional) Minimal Draw.io shape library (dfd-materialize.xml)\n    * Tag trust zones more easily\n* [Gherkin](https://cucumber.io/docs/gherkin/) + [STRIDE](https://en.wikipedia.org/wiki/STRIDE_(security)) test plan/feature file generator\n\n# :wrench: How do I use it?\n## Demo\n![](samples/bookface.gif)\n\n## 1. Creating the diagram\n* Use [draw.io](https://github.com/jgraph/drawio-desktop/releases) with the built-in threat modeling shape set, or use ours\n* Create a data flow diagram using some guidelines\n   * Use processes between entities to describe flows\n      * Example: [Entity: Browser] --> (Process: Login) ----> [Entity: API]\n   * Identify trust zones using the green 'security control label' following the [Rapid Threat Model Prototyping methodology](https://github.com/geoffrey-hill-tutamantic/rapid-threat-model-prototyping-docs) process\n      * untrusted sources (entities) are 0\n      * sinks (data store) are <=9\n      * +1 or -1 in between\n   * Processes inherit trust zones from the upstream entity\n* Save it as a .drawio file in a convenient location\n\n### Example\n![](samples/bookface.png)\n\n## 2. Enumerating threats\n```\npip install materialize-threats\nmaterialize-threats --diagram=/path/to/diagram.drawio\n```\n\n## 3. Creating the feature file\nMaterialize threats will create a Gherkin feature file with boilerplate scenarios and mitigations, along with remediation tips. By default, it uses the diagram filename.\n\n![](samples/bookface_featurefile.png)\n\n# :mag_right: Sample data\n```\nmaterialize-threats\n```\n\nMore samples can be found in the /samples directory\n```\nmaterialize-threats --diagram=samples/bookface.drawio\n```\n\n# :warning: Is this production ready?\nNot yet.\n* There are no tests written, but im pretty sure it works. \n* Lots of other python stuff that might horrify you but wont impact functionality that I know of.\n\n# :computer: Development\n```\ngit clone git@github.com:secmerc/materialize_threats.git\ncd materialize_threats\npython3 -m venv ./venv\nsource ./venv/bin/activate\npip install -e .\npytest\n```\n\n## Publishing\n```bash\npython3 -m pip install --user --upgrade setuptools wheel twine\n\npython3 setup.py sdist bdist_wheel\npython3 -m twine upload dist/*\n```\n\n# :link: Links\n* https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-presenting-the-playsound-threat-model\n* https://github.com/geoffrey-hill-tutamantic/rapid-threat-model-prototyping-docs\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/secmerc/materialize-threats",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "materialize-threats",
    "package_url": "https://pypi.org/project/materialize-threats/",
    "platform": "",
    "project_url": "https://pypi.org/project/materialize-threats/",
    "project_urls": {
      "Homepage": "https://github.com/secmerc/materialize-threats"
    },
    "release_url": "https://pypi.org/project/materialize-threats/1.0.4/",
    "requires_dist": [
      "peewee",
      "gherkin-official",
      "pytest"
    ],
    "requires_python": ">=3.6",
    "summary": "Analyze draw.io data flow diagrams for STRIDE threat classes",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9536796,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "560fd4223a4db3003e3b14f4d2de8e894528d5d427d3418439615d95a26e9dbc",
        "md5": "450342f175452c7802575d9a30564e78",
        "sha256": "9b7b31f0180ed9b66d31b7b5494ae1934ac3a53e1bc09920ebefd7a146823a32"
      },
      "downloads": -1,
      "filename": "materialize_threats-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "450342f175452c7802575d9a30564e78",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33463,
      "upload_time": "2020-08-25T01:41:28",
      "upload_time_iso_8601": "2020-08-25T01:41:28.365309Z",
      "url": "https://files.pythonhosted.org/packages/56/0f/d4223a4db3003e3b14f4d2de8e894528d5d427d3418439615d95a26e9dbc/materialize_threats-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ad0095ca65a1094bae7ce31f21c720764e53413804548e61c8fd85a92110ac8",
        "md5": "25bc8a494ba3d517f6753a855fd75521",
        "sha256": "7d21c28e4d0cd461bfa3ee31c9c2f53a457994ad1f5bf0c82b6c62790e57b952"
      },
      "downloads": -1,
      "filename": "materialize-threats-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "25bc8a494ba3d517f6753a855fd75521",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24031,
      "upload_time": "2020-08-25T01:41:29",
      "upload_time_iso_8601": "2020-08-25T01:41:29.610898Z",
      "url": "https://files.pythonhosted.org/packages/9a/d0/095ca65a1094bae7ce31f21c720764e53413804548e61c8fd85a92110ac8/materialize-threats-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}