{
  "info": {
    "author": "",
    "author_email": "saizk <sergioaizcorbe@hotmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# LunarCrushAPI\r\n![PyPI version](https://img.shields.io/pypi/v/lunarcrush)\r\n\r\nUnofficial LunarCrush API **v2** and **v3** Wrapper for Python. No API key needed for LCv2!\r\n\r\n## üíΩ Installation\r\nLunarCrushAPI is supported on **Python 3.6+**. You can install this package via pip:\r\n```\r\npip install lunarcrush\r\n```\r\n## üîç Quickstart for LunarCrush API v2\r\n**1.** Create an instance of LunarCrush\r\n\r\n```Python\r\nfrom lunarcrush import LunarCrush\r\n\r\nlc = LunarCrush()\r\n```\r\n\r\n**2.** Start requesting information!\r\n\r\n```Python\r\neth_1_year_data = lc.get_assets(symbol=['ETH'],\r\n                                data_points=365, interval='day')\r\n```\r\n\r\n## üîç Quickstart for LunarCrush API v3\r\n**1.** Create an instance of LunarCrushV3\r\n\r\n```Python\r\nfrom lunarcrush import LunarCrushV3\r\n\r\nlcv3 = LunarCrushV3('<YOUR API KEY>')\r\n```\r\n\r\n**2.** Start requesting information!\r\n\r\n```Python\r\neth_insights = lcv3.get_coin_insights(coin='ETH', metrics='social_volume')\r\n```\r\n\r\n## üìú API v2 Endpoints\r\nHere is a short description for the LunarCrush API v2 Endpoints.\r\n\r\n| Method                                                                | Description                                                                                                                             | Not authorized parameters |\r\n|-----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|---------------------------|\r\n| ```get_assets(symbol, time_series_indicators, change, data_points)``` | Details, overall metrics, and time series metrics for one or multiple assets.                                                           | (*~~start~~*, *~~end~~*)  |\r\n| ```get_market(limit, page, sort)```                                   | Summary information for all supported assets (Markets page) including 5 recent time series values for some metrics.                     |                           |\r\n| ```get_market_pairs(symbol, limit, page)```                           | Provides the exchange information for assets, and the other assets they are being traded for.                                           |                           |\r\n| ```get_global(interval, change, data_points)```                       | Overall aggregated metrics for all supported assets (top of Markets page).                                                              |                           |\r\n| ```get_meta(type)```                                                  | Meta information for all supported assets                                                                                               |                           |\r\n| ```get_exchange(exchange)```                                          | Meta information and market pairs for a single exchange that we track                                                                   |                           |\r\n| ```get_exchanges(limit, order_by)```                                  | Meta information for all exchanges that we track                                                                                        |                           |\r\n| ```get_coin_of_the_day()```                                           | The current coin of the day                                                                                                             |                           |\r\n| ```get_coin_of_the_day_info()```                                      | Provides the history of the coin of the day on LunarCRUSH when it was last changed, and when each coin was last coin of the day         |                           |\r\n| ```get_feeds(sources, page, type, limit)```                           | Social posts, news, and shared links for one or multiple coins.                                                                         | (*~~start~~*, *~~end~~*)  |\r\n| ```get_influencer(id, screen_name, days, page)```                     | Individual influencer details including actual posts.                                                                                   | (*~~limit~~*)             |\r\n| ```get_influencers(symbol, days, num_days, order_by)```               | List of social accounts that have the most influence on different assets based on number of followers, engagements and volume of posts. | (*~~limit~~*)             |\r\n\r\n## ‚ö†Ô∏è Warning!\r\nSome parameters might **NOT** work properly for LunarCrush API v2, making the server to response with a *5XX error*.\r\n\r\n\r\n## üì∞ API v3 Endpoints\r\n\r\n| Method                                                 | Endpoint                  |\r\n|--------------------------------------------------------|---------------------------|\r\n| ```get_coin_of_the_day()```                            | /coinoftheday             |\r\n| ```get_coin_of_the_day_info()```                       | /coinoftheday/info        |\r\n| ```get_coins(sort, limit, desc)```                     | /coins                    |\r\n| ```get_coin(coin)```                                   | /coins/{coin}             |\r\n| ```get_coin_change(coin, interval)```                  | /coins/{coin}/change      |\r\n| ```get_coin_historical(coin)```                        | /coins/{coin}/historical  |\r\n| ```get_coin_influencers(coin, interval, order)```      | /coins/{coin}/influencers |\r\n| ```get_coin_insights(coin, metrics, limit)```          | /coins/{coin}/insights    |\r\n| ```get_coin_meta(coin)```                              | /coins/{coin}/meta        |\r\n| ```get_coin_time_series(coin, interval, start)```      | /coins/{coin}/time-series |\r\n| ```get_coins_global()```                               | /coins/global             |\r\n| ```get_coins_global_change(interval)```                | /coins/global/change      |\r\n| ```get_coins_global_historical()```                    | /coins/global/historical  |\r\n| ```get_coins_global_insights(metrics, limit)```        | /coins/global/insights    |\r\n| ```get_coins_global_time_series(interval, start)```    | /coins/global/time-series |\r\n| ```get_coins_influencers(interval, order)```           | /coins/influencers        |\r\n| ```get_coins_insights(metrics, limit)```               | /coins/insights           |\r\n| ```get_coins_list()```                                 | /coins/list               |\r\n| ```get_exchanges(order, limit)```                      | /exchanges                |\r\n| ```get_exchange(exchange)```                           | /exchanges/{exchange}     |\r\n| ```get_feeds(limit, since, hours, days, sources)```    | /feeds                    |\r\n| ```get_feed(feed)```                                   | /feeds/{feed}             |\r\n| ```get_influencer(influencer, fast, interval, sort)``` | /influencers/{influencer} |\r\n| ```get_insight(insight, type)```                       | /insights/{insight}       |\r\n| ```get_market_pairs(coin, limit, page, sort)```        | /market-pairs/{coin}      |\r\n| ```get_nft_of_the_day()```                             | /nftoftheday              |\r\n| ```get_nft_of_the_day_info()```                        | /nftoftheday/info         |\r\n| ```get_nfts(sort, limit, desc)```                      | /nfts                     |\r\n| ```get_nft(nft)```                                     | /nft/{nft}                |\r\n| ```get_nft_change(nft, interval)```                    | /nfts/{nft}/change        |\r\n| ```get_nft_historical(nft)```                          | /nfts/{nft}/historical    |\r\n| ```get_nft_influencers(nft, interval, order)```        | /nfts/{nft}/influencers   |\r\n| ```get_nft_insights(nft, metrics, limit)```            | /nfts/{nft}/insights      |\r\n| ```get_nft_time_series(nft, interval, start)```        | /nfts/{nft}/time-series   |\r\n| ```get_nft_tokens(nft, sort)```                        | /nfts/{nft}/tokens        |\r\n| ```get_nfts_global()```                                | /nfts/global              |\r\n| ```get_nfts_global_change(interval)```                 | /nfts/global/change       |\r\n| ```get_nfts_global_historical()```                     | /nfts/global/historical   |\r\n| ```get_nfts_global_insights(metrics, limit)```         | /nfts/global/insights     |\r\n| ```get_nfts_global_time_series(interval, start)```     | /nfts/global/time-series  |\r\n| ```get_nfts_influencers(interval, order)```            | /nfts/influencers         |\r\n| ```get_nfts_insights(metrics, limit)```                | /nfts/insights            |\r\n| ```get_nfts_list()```                                  | /nfts/list                |\r\n| ```get_opinions(context, sort)```                      | /opinions                 |\r\n| ```get_opinions_summary()```                           | /opinions/summary         |\r\n| ```get_spark(spark_id)```                              | /sparks/{spark_id}        |\r\n| ```get_stats_lunrfi()```                               | /stats/lunrfi             |\r\n| ```get_top_mentions(interval, type, market)```         | /top-mentions             |\r\n\r\nYou can visit [LunarCrush API v3 documentation](https://lunarcrush.com/developers/api/endpoints) for a more detailed description of all the endpoints and parameters.\r\n\r\n## üìà Metrics description\r\n| Metric           | Description                                                                                                                                                                                                                                                                                                                                         |\r\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| **GALAXY SCORE** | The Galaxy Score‚Ñ¢ indicates how healthy a coin is by looking at combined performance indicators across markets and social engagement. Display the real-time Galaxy Score‚Ñ¢ of any coin.                                                                                                                                                              |\r\n| **ALT RANK**     | AltRank‚Ñ¢ measures a coin's performance VS. all other coins that we actively support. In general, it is a unique measurement that combines ALT coin price performance relative to Bitcoin and other social activity indicators across the entire crypto market. A coin can have a high AltRank of 1 even in a bear market situation.                 |\r\n| **INFLUENCERS**  | View Twitter influencer activity and their impact across all coins and tokens. All influencers are measured by the same metrics, which includes followers, replies, favorites, and retweets. Metrics are evaluated across all collected posts during the timeframe selected. Actual influence will vary over time and will depend on user activity. |\r\n| **CANDLESTICK**  | The incredibly powerful Candlestick widget takes any data point and compares it to price over a specified timeframe.                                                                                                                                                                                                                                |\r\n| **WORD CLOUD**   | Uncover keywords used throughout collected social content for any coin. The Word Cloud is generated from all recent and available social posts from Twitter and Reddit. It looks at frequency of mentions. All data is segmented by either all coins or specific, individual coins.                                                                 |\r\n| **SOCIAL FEED**  | Display social feeds from multiple sources including Twitter, Reddit, news channels and more all at once. Gain unique insights into what's being talked about in real time. All social feeds have been cleaned with spam removed and can be organized by coin.                                                                                      |\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2021 Sergio  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lunarcrush",
    "package_url": "https://pypi.org/project/lunarcrush/",
    "platform": null,
    "project_url": "https://pypi.org/project/lunarcrush/",
    "project_urls": {
      "Bug Tracker": "https://github.com/saizk/LunarCrushAPI/issues",
      "Homepage": "https://github.com/saizk/LunarCrushAPI"
    },
    "release_url": "https://pypi.org/project/lunarcrush/2.0.4/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "Unofficial LunarCrush API v2 Wrapper for Python.",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15889327,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51881cd2ae589f1627bcbdb191f2bdc5c22ea2043c1b38e1b444367923b11b15",
        "md5": "d75afa45e0e93965a55758bef7642baf",
        "sha256": "8ef6a3b8f9a268c5a5d8d9c9fa78b5d75d93c5b83753607dfcb165ed5129ed7a"
      },
      "downloads": -1,
      "filename": "lunarcrush-2.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d75afa45e0e93965a55758bef7642baf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15539,
      "upload_time": "2022-11-16T08:38:04",
      "upload_time_iso_8601": "2022-11-16T08:38:04.809076Z",
      "url": "https://files.pythonhosted.org/packages/51/88/1cd2ae589f1627bcbdb191f2bdc5c22ea2043c1b38e1b444367923b11b15/lunarcrush-2.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fec36ad88d8fa942e64d756ee51a6c2741e6c4bba81df21930440b1c587202d1",
        "md5": "badea453e1aa47b91a4dc18dfb138a8b",
        "sha256": "5be44be06476869f4a2c5c04ddc99d7a5683a28acc0b829cde2df71a933c8a20"
      },
      "downloads": -1,
      "filename": "lunarcrush-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "badea453e1aa47b91a4dc18dfb138a8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16907,
      "upload_time": "2022-11-16T08:38:06",
      "upload_time_iso_8601": "2022-11-16T08:38:06.735600Z",
      "url": "https://files.pythonhosted.org/packages/fe/c3/6ad88d8fa942e64d756ee51a6c2741e6c4bba81df21930440b1c587202d1/lunarcrush-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}