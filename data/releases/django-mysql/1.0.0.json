{
  "info": {
    "author": "Adam Johnson",
    "author_email": "me@adamj.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Database"
    ],
    "description": "============\nDjango-MySQL\n============\n\n.. image:: https://img.shields.io/pypi/v/django-mysql.svg\n    :target: https://pypi.python.org/pypi/django-mysql\n\n.. image:: https://travis-ci.org/adamchainz/django-mysql.png?branch=master\n        :target: https://travis-ci.org/adamchainz/django-mysql\n\n.. image:: https://coveralls.io/repos/adamchainz/django-mysql/badge.svg\n        :target: https://coveralls.io/r/adamchainz/django-mysql\n\n.. image:: https://img.shields.io/pypi/dm/django-mysql.svg\n        :target: https://pypi.python.org/pypi/django-mysql\n\n.. image:: https://readthedocs.org/projects/django-mysql/badge/?version=latest\n        :target: http://django-mysql.readthedocs.org/en/latest/\n\n\n.. figure:: https://raw.github.com/adamchainz/django-mysql/master/docs/images/dolphin-pony.png\n   :alt: The dolphin-pony - proof that cute + cute = double cute.\n\n..\n\n    | The dolphin-pony - proof that cute + cute = double cute.\n\n\nDjango-MySQL is a non-inventively named package that helps you use some\nMySQL/MariaDB-specific features in the world of Django.\n\n\nWhat kind of features?\n----------------------\n\nIncludes:\n\n* ``QuerySet`` extensions - 'smart' iteration, ``approx_count`` for quick\n  estimates of ``count()``, query hints, quick ``pt-visual-explain`` of the\n  underlying query\n* Model fields for storing lists and sets in comma-separated strings, with the\n  ability to query them\n* ORM expressions for MySQL-specific functions\n* A new cache backend that makes use of MySQL's upserts and does compression\n* Handler API for quicker-than-SQL reads using the 'NoSQL' HANDLER commands\n* Status variable inspection and utility methods\n* Named locks for easy locking of e.g. external resources\n* Table lock manager for hard to pull off data migrations\n\nTo see them all, check out the exposition at\nhttp://django-mysql.readthedocs.org/en/latest/exposition.html .\n\nRequirements\n------------\n\nTested with all combinations of:\n\n* Python: 2.7, 3.4\n* Django: 1.7, 1.8, master\n* MySQL: 5.5, 5.6 / MariaDB: 5.5, 10.0, 10.1\n* mysqlclient: 1.3.6 (Python 3 compatible version of ``MySQL-python``)\n\nAny combination of these should be good, and also ``MySQL-python`` should work\nsince it's just an older version of ``mysqlclient``.\n\n\n\n\nHistory\n=======\n\n1.0.0 (2015-10-29)\n------------------\n\n* Changed version number to 1.0.0 to indicate maturity.\n* Added ``DynamicField`` for using MariaDB's Named Dynamic Columns, and related\n  database functions ``ColumnAdd``, ``ColumnDelete``, and ``ColumnGet``.\n* ``SmartChunkedIterator`` with ``report_progress=True`` correctly reports\n  'lowest pk so far' when iterating in reverse.\n* Fix broken import paths during ``deconstruct()`` for subclasses of all\n  fields: ``ListCharField``, ``ListTextField``, ``SetCharField``,\n  ``SetTextField``, ``SizedBinaryField`` and ``SizedTextField``\n* Added XML database functions - ``UpdateXML`` and ``XMLExtractValue``.\n\n0.2.3 (2015-10-12)\n------------------\n\n* Allow ``approx_count`` on QuerySets for which only query hints have been used\n* Added index query hints to ``QuerySet`` methods, via query-rewriting layer\n* Added ``ordering`` parameter to ``GroupConcat`` to specify the ``ORDER BY``\n  clause\n* Added index query hints to ``QuerySet`` methods, via query-rewriting layer\n* Added ``sql_calc_found_rows()`` query hint that calculates the total rows\n  that match when you only take a slice, which becomes available on the\n  ``found_rows`` attribute\n* Made ``SmartChunkedIterator`` work with ``reverse()``'d ``QuerySet``\\s\n\n0.2.2 (2015-09-03)\n------------------\n\n* ``SmartChunkedIterator`` now takes an argument ``chunk_size`` as the initial\n  chunk size\n* ``SmartChunkedIterator`` now allows models whose primary key is a\n  ``ForeignKey``\n* Added ``iter_smart_pk_ranges`` which is similar to ``iter_smart_chunks`` but\n  yields only the start and end primary keys for each chunks, in a tuple.\n* Added prefix methods to ``MySQLCache`` - ``delete_with_prefix``,\n  ``get_with_prefix``, ``keys_with_prefix``\n* Added ``Bit1BooleanField`` and ``NullBit1BooleanField`` model fields that\n  work with boolean fields built by other databases that use the ``BIT(1)``\n  column type\n\n0.2.1 (2015-06-22)\n------------------\n\n* Added Regexp database functions for MariaDB - ``RegexpInstr``,\n  ``RegexpReplace``, and ``RegexpSubstr``\n* Added the option to not limit the size of a ``MySQLCache`` by setting\n  ``MAX_ENTRIES`` = -1.\n* ``MySQLCache`` performance improvements in `get`, `get_many`, and `has_key`\n* Added query-rewriting layer added which allows the use of MySQL query hints\n  such as ``STRAIGHT_JOIN`` via QuerySet methods, as well as adding label\n  comments to track where queries are generated.\n* Added ``TableLock`` context manager\n\n0.2.0 (2015-05-14)\n------------------\n\n* More database functions added - ``Field`` and its complement ``ELT``,\n  and ``LastInsertId``\n* Case sensitive string lookup added as to the ORM for ``CharField`` and\n  ``TextField``\n* Migration operations added - ``InstallPlugin``, ``InstallSOName``, and\n  ``AlterStorageEngine``\n* Extra ORM aggregates added - ``BitAnd``, ``BitOr``, and ``BitXor``\n* ``MySQLCache`` is now case-sensitive. If you are already using it, an upgrade\n  ``ALTER TABLE`` and migration is provided at `the end of the cache docs\n  <http://django-mysql.readthedocs.org/en/latest/cache.html>`_.\n* (MariaDB only) The ``Lock`` class gained a class method ``held_with_prefix``\n  to query held locks matching a given prefix\n* ``SmartIterator`` bugfix for chunks with 0 objects slowing iteration; they\n  such chunks most often occur on tables with primary key \"holes\"\n* Now tested against Django master for cutting edge users and forwards\n  compatibility\n\n0.1.10 (2015-04-30)\n-------------------\n\n* Added the ``MySQLCache`` backend for use with Django's caching framework, a\n  more efficient version of ``DatabaseCache``\n* Fix a ``ZeroDivision`` error in ``WeightedAverageRate``, which is used in\n  smart iteration\n\n0.1.9 (2015-04-20)\n------------------\n\n* ``pt_visual_explain`` no longer executes the given query before fetching its\n  ``EXPLAIN``\n* New ``pt_fingerprint`` function that wraps the ``pt-fingerprint`` tool\n  efficiently\n* For ``List`` fields, the new ``ListF`` class allows you to do atomic append\n  or pop operations from either end of the list in a single query\n* For ``Set`` fields, the new ``SetF`` class allows you to do atomic add or\n  remove operatiosn from the set in a single query\n* The ``@override_mysql_variables`` decorator has been introduced which makes\n  testing code with different MySQL configurations easy\n* The ``is_mariadb`` property gets added onto Django's MySQL ``connection``\n  class automatically\n* A race condition in determining the minimum and maximum primary key values\n  for smart iteration was fixed.\n\n\n0.1.8 (2015-03-31)\n------------------\n\n* Add ``Set`` and ``List`` fields which can store comma-separated sets and\n  lists of a base field with MySQL-specific lookups\n* Support MySQL's ``GROUP_CONCAT`` as an aggregate!\n* Add a ``functions`` module with many MySQL-specific functions for the new\n  Django 1.8 database functions feature\n* Allow access of the global and session status for the default connection from\n  a lazy singleton, similar to Django's ``connection`` object\n* Fix a different recursion error on ``count_tries_approx``\n\n\n0.1.7 (2015-03-25)\n------------------\n\n* Renamed ``connection_name`` argument to ``using`` on ``Lock``,\n  ``GlobalStatus``, and ``SessionStatus`` classes, for more consistency with\n  Django.\n* Fix recursion error on ``QuerySetMixin`` when using ``count_tries_approx``\n\n\n0.1.6 (2015-03-21)\n------------------\n\n* Added support for ``HANDLER`` statements as a ``QuerySet`` extension\n* Now tested on Django 1.8\n* Add ``pk_range`` argument for 'smart iteration' code\n\n\n0.1.5 (2015-03-11)\n------------------\n\n* Added ``manage.py`` command ``dbparams`` for outputting database paramters\n  in formats useful for shell scripts\n\n\n0.1.4 (2015-03-10)\n------------------\n\n* Fix release process\n\n\n0.1.3 (2015-03-08)\n------------------\n\n* Added ``pt_visual_explain`` integration on ``QuerySet``\n* Added soundex-based field lookups for the ORM\n\n\n0.1.2 (2015-03-01)\n------------------\n\n* Added ``get_many`` to ``GlobalStatus``\n* Added ``wait_until_load_low`` to ``GlobalStatus`` which allows you to wait\n  for any high load on your database server to dissipate.\n* Added smart iteration classes and methods for ``QuerySet``\\s that allow\n  efficient iteration over very large sets of objects slice-by-slice.\n\n0.1.1 (2015-02-23)\n------------------\n\n* Added ``Model`` and ``QuerySet`` subclasses which add the ``approx_count``\n  method\n\n0.1.0 (2015-02-12)\n---------------------\n\n* First release on PyPI\n* ``Lock``\\s\n* ``GlobalStatus`` and ``SessionStatus``",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/django-mysql/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-mysql",
    "keywords": "Django,MySQL,MariaDB",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-mysql",
    "package_url": "https://pypi.org/project/django-mysql/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-mysql/",
    "project_urls": {
      "Homepage": "https://github.com/adamchainz/django-mysql"
    },
    "release_url": "https://pypi.org/project/django-mysql/1.0.0/",
    "requires_dist": [
      "Django (>=1.7)"
    ],
    "requires_python": "",
    "summary": "Extensions to Django for use with MySQL/MariaDB",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17024230,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfd5b4ebc62a15de2beed8e1b885ec7991463f2761d04ae210d8f38e8bf417ce",
        "md5": "483d4b6a6a643144dd9306c07372f9fe",
        "sha256": "44799de8fdfd6e3e6a0ccc7623cbed20adf528182ac666f544de5f4b9d3697f8"
      },
      "downloads": -1,
      "filename": "django_mysql-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "483d4b6a6a643144dd9306c07372f9fe",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 59017,
      "upload_time": "2015-10-29T08:18:54",
      "upload_time_iso_8601": "2015-10-29T08:18:54.870255Z",
      "url": "https://files.pythonhosted.org/packages/cf/d5/b4ebc62a15de2beed8e1b885ec7991463f2761d04ae210d8f38e8bf417ce/django_mysql-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee25551218bff102188c5f5797ee8bca5aa470f09477c6334a6d7bca8c5c3e37",
        "md5": "34222e78d7dcc6ec2fd95e67c7c72fca",
        "sha256": "fe7ac95e9bf908f8e918538b8d64eb21806f2b8656632e4640a3fcecbb5c4dd6"
      },
      "downloads": -1,
      "filename": "django-mysql-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "34222e78d7dcc6ec2fd95e67c7c72fca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 139905,
      "upload_time": "2015-10-29T08:19:15",
      "upload_time_iso_8601": "2015-10-29T08:19:15.345888Z",
      "url": "https://files.pythonhosted.org/packages/ee/25/551218bff102188c5f5797ee8bca5aa470f09477c6334a6d7bca8c5c3e37/django-mysql-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}