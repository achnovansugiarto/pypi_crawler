{
  "info": {
    "author": "Caleb Hattingh",
    "author_email": "caleb.hattingh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "misu\n====\n\n`misu` is short for \"misura\", \nwhich means **measurement** (in Italian).\n\nDemo\n----\n\nDemo to go here.\n\nIntroduction\n------------\n\n`misu` is a package of handling physical quantities\nwith dimensions. This means performing calculations\nwith all the units being tracked correctly. It is \npossible to add *kilograms per hour* to \n*ounces per minute*, obtain the correct answer, and \nhave that answer be reported in, say, *pounds per \nweek*.\n\n`misu` grew out of a personal need. I have used this code\npersonally in a (chemical) engineering context for\nwell over a year now (at time of writing, Feb 2015).\nEvery feature has been added in response to a personal need.\n\n#### Features\n\n- Written as a Cython extension module (for speed).\n Speed benefits carry over when using\n`misu` from your own Cython module (a `.pxd` is \nprovided for linking).\n- Decorators for functions to enforce dimensions\n```python\n@dimensions(x=Length, y=Mass)\ndef f(x, y):\n    return x/y\n\nf(2*m, 3*kg)         # Works\nf(200*feet, 3*tons)  # Works\n\nf(2*joules, 3*kelvin)  # raises UnitsError\nf(2*m, 3)              # raises UnitsError\n```\n- An operator for easily stripping the units \ncomponent to obtain a plain numerical value\n```python\nmass = 100 * kg\nmass_lb = mass >> lb\n\nduty = 50 * MW\nduty_BTU_hr = duty >> BTU / hr\n```\n- An enormous amount of redundancy in the naming\nof various units. This means that `m`, `metre`, \n`metres`, `METRE`, `METRES` will all work.\n The reason for this is that\nfrom my own experience, when working interactively\n(e.g. in the IPython Notebook) it can be very\ndistracting to incorrectly guess the name for a\nparticular unit, and have to look it up. `ft`, \n`foot` and `feet` all work, `m3` means `m**3` and\nso on.\n- You can specify a *reporting unit* for a dimension, \nmeaning that you could have all lengths be reported\nin \"feet\" by default for example.\n- You can specify a *reporting format* for a particular\nunit.\n\n#### There are other projects, why `misu`?\n\nThere are several units systems for Python, but the primary motivating use-case is that `misu` is\nwritten as a Cython module and is by far the fastest*\nfor managing units available in Python. \n\n\\**Except for `NumericalUnits`, which is a special case*\n\n\\*\\**I haven't actually checked that this statement is true for all of them yet.*\n\nGeneral usage\n-------------\n\nFor speed-critical code, the application of unit operations can still be too slow.\nIn these situations it is typical to first cast quantities into numerical values\n(doubles, say), perform the speed-critical calculations (perhaps call into a \nC-library), and then re-cast the result back into a quantity and return that from\na function.\n```python\n@dimensions(x = Length, y = Mass):\ndef f(x, y):\n    x = x >> metre\n    y = y >> ounces\n    <code that assumes meters and ounces, returns value in BTU>\n    return answer * BTU \n\n```\nThis way you can still easily wrap performance-critical calculations with \nrobust unit-handling.\n\n#### Inspiration\n\nThe inspiration for `misu` was [Frink](http://futureboy.us/frinkdocs/)\nby Alan Eliasen. It is *wonderful*, but I need to work\nwith units in the IPython Notebook, and with all my\nother Python code.\n\nThere are a bunch of other similar projects. I have not used any\nof them enough yet to provide a fair comparison:\n\n- [astropy.units](\"http://astropy.readthedocs.org/en/latest/units/\")\n- [Buckingham](\"http://code.google.com/p/buckingham/\")\n- [DimPy](\"http://www.inference.phy.cam.ac.uk/db410/\")\n- [Magnitude](\"http://juanreyero.com/open/magnitude/\")\n- [NumericalUnits](\"https://pypi.python.org/pypi/numericalunits\")\n- [Pint](\"http://pint.readthedocs.org/\")\n- [Python-quantities](\"https://pypi.python.org/pypi/quantities\")\n- [Scalar](\"http://russp.us/scalar-guide.htm\")\n- [Scientific.Physics.PhysicalQuantities](\"http://dirac.cnrs-orleans.fr/ScientificPython/ScientificPythonManual/Scientific.Physics.PhysicalQuantities-module.html\")\n- [SciMath](\"http://scimath.readthedocs.org/en/latest/units/intro.html\")\n- [sympy.physics.units](\"http://docs.sympy.org/dev/modules/physics/units.html\")\n- [udunitspy](\"https://github.com/blazetopher/udunitspy\")\n- [Units](\"https://bitbucket.org/adonohue/units/\")\n- [Unum](\"https://bitbucket.org/kiv/unum/\")",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cjrh/misu",
    "keywords": "math science engineering physics quantities units",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "misu",
    "package_url": "https://pypi.org/project/misu/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/misu/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/cjrh/misu"
    },
    "release_url": "https://pypi.org/project/misu/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Fast quantities",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4398481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a9c132bea4712f4073f18b900bd82a35821055c9fe6025224ef481883fdc0c2",
        "md5": "e4c2a2acc546f1ca989c33f7493b85b7",
        "sha256": "d1b82c632f56f575257db0a245c45ac97017d265362d5bd02b91f45f47853c7f"
      },
      "downloads": -1,
      "filename": "misu-1.0.2-cp27-none-macosx_10_5_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e4c2a2acc546f1ca989c33f7493b85b7",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 137768,
      "upload_time": "2015-05-04T10:50:42",
      "upload_time_iso_8601": "2015-05-04T10:50:42.780077Z",
      "url": "https://files.pythonhosted.org/packages/0a/9c/132bea4712f4073f18b900bd82a35821055c9fe6025224ef481883fdc0c2/misu-1.0.2-cp27-none-macosx_10_5_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76b41aea1a80504e9761a3973d263e2b11ff6fac3ab0e3c6921172f629190281",
        "md5": "537649c340b1ea74208def1bd26e6d1f",
        "sha256": "da43db6279c8fa10183471d7fff408628acde177cce7e706eee01d90b30342e2"
      },
      "downloads": -1,
      "filename": "misu-1.0.2-cp27-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "537649c340b1ea74208def1bd26e6d1f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 103083,
      "upload_time": "2015-05-04T10:51:03",
      "upload_time_iso_8601": "2015-05-04T10:51:03.555482Z",
      "url": "https://files.pythonhosted.org/packages/76/b4/1aea1a80504e9761a3973d263e2b11ff6fac3ab0e3c6921172f629190281/misu-1.0.2-cp27-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b25a716488cc8ba50b6e8f4c58fcedf710d0261125cbdb2abe403be8e5bee17",
        "md5": "04b292471e04b0b13685b8d0806f5351",
        "sha256": "9082eafc5638dc709325b71630d8065c999f4d21243cba79e36124592a89c4f5"
      },
      "downloads": -1,
      "filename": "misu-1.0.2-cp34-cp34m-macosx_10_5_x86_64.whl",
      "has_sig": false,
      "md5_digest": "04b292471e04b0b13685b8d0806f5351",
      "packagetype": "bdist_wheel",
      "python_version": "3.4",
      "requires_python": null,
      "size": 136866,
      "upload_time": "2015-05-04T10:47:40",
      "upload_time_iso_8601": "2015-05-04T10:47:40.569529Z",
      "url": "https://files.pythonhosted.org/packages/5b/25/a716488cc8ba50b6e8f4c58fcedf710d0261125cbdb2abe403be8e5bee17/misu-1.0.2-cp34-cp34m-macosx_10_5_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a2f4779283ee5050995453c85be806b8cd5b7e65339971445a7a4620fc00687",
        "md5": "cb74f896e9168ff2dbf22269b1ccb925",
        "sha256": "79229d7496ecd7f3a906ddf7da6a1bd97cae14cd1ae9f4ad04e067025360bd1d"
      },
      "downloads": -1,
      "filename": "misu-1.0.2-cp34-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "cb74f896e9168ff2dbf22269b1ccb925",
      "packagetype": "bdist_wheel",
      "python_version": "3.4",
      "requires_python": null,
      "size": 100318,
      "upload_time": "2015-05-04T10:51:22",
      "upload_time_iso_8601": "2015-05-04T10:51:22.554783Z",
      "url": "https://files.pythonhosted.org/packages/0a/2f/4779283ee5050995453c85be806b8cd5b7e65339971445a7a4620fc00687/misu-1.0.2-cp34-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e092ca54a94fcdf9b808178e34e00c44ff77d6f4b2a11d3dde83d3ad9916863e",
        "md5": "363e4b3701e025f362f6369b61953b24",
        "sha256": "2c93c297ad255957591b28f02275eee108753fdc538ad1319e4c9056d510c95f"
      },
      "downloads": -1,
      "filename": "misu-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "363e4b3701e025f362f6369b61953b24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 163753,
      "upload_time": "2015-05-04T10:47:45",
      "upload_time_iso_8601": "2015-05-04T10:47:45.094564Z",
      "url": "https://files.pythonhosted.org/packages/e0/92/ca54a94fcdf9b808178e34e00c44ff77d6f4b2a11d3dde83d3ad9916863e/misu-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}