{
  "info": {
    "author": "Mathew Moon",
    "author_email": "mmoon@quinovas.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "============================\nDynamodb Pretty Parser\n============================\n\nParses Dynamodb responses into a more usable format. Results are returned as a list of dictionaries with the attribute names being the key. Results are parsed recursively.\nOne use is to return results directly to Appsync from a Lambda function.\nParses all scalar types that Dynamo supports\n\n* N (number scalar) - cast as integer or Decimal types\n* S (string scalar) - stays string\n* SS (string set scalar) - list of strings\n* NS (number set scalar) - list of Decimal/integer\n* L (list scalar) - list\n* BOOL (boolean scalar) - boolean\n* B (binary scalar) - string of base64\n* BS (binary set scalar) - list of base64 strings\n* NULL (null scalar) - None\n* M (map scalar) - Dictionary\n\n\nResponses are returned formated as:\n\n.. code-block:: JSON\n\n  [\n    {\"attributeOneName\": {\"S\": \"value1\"}, \"attributeTwoName\": {\"S\": \"value2\"}},\n    {\"attributeOneName\": {\"S\": \"value1\"}, \"attributeTwoName\": {\"S\": \"value2\"}}\n  ]\n\nBecomes\n\n.. code-block:: JSON\n\n  [\n    {\"attributeOneName\": \"value1\", \"attributeTwoName\": \"value2\"},\n    {\"attributeOneName\": \"value1\", \"attributeTwoName\": \"value2\"}\n  ]\n\nWhere each dictionary in the top level array is a separate item.\n\nMethods\n----------------------------\n\nparseResults(records) -> dict\nArguments:\nitems -- Response from any boto3 call to Dynamodb that returns Items in the response\n\nExample\n----------------------------\n\n.. code-block:: python\n\n  from dynamodbPrettyParser import parseResults\n  import boto3\n\n  dynamodb = boto3.client('dynamodb')\n  response = dynamodb.query(\n    TableName='mytable',\n    KeyConditionExpression='my_attribute = :foo',\n    ExpressionAttributeValues={':foo': 'bar'}\n  )\n\n  print(parseResults(response))\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuiNovas/aurora-prettyparser",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamodb-prettyparser",
    "package_url": "https://pypi.org/project/dynamodb-prettyparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamodb-prettyparser/",
    "project_urls": {
      "Homepage": "https://github.com/QuiNovas/aurora-prettyparser"
    },
    "release_url": "https://pypi.org/project/dynamodb-prettyparser/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parses dynamodb responses into a list dictionaries with attribute names as keys",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8367005,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea5f40544da4e77665ab1f03fab6b1fc3ed34afa1b6459209e3eecef38001a2d",
        "md5": "7ef01ed8dfc5f38d29fb8cf83a7e43c0",
        "sha256": "a586e31a4297077e79feff0d89d1fe071237172f517deeb8447802d56e76a503"
      },
      "downloads": -1,
      "filename": "dynamodb_prettyparser-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ef01ed8dfc5f38d29fb8cf83a7e43c0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6798,
      "upload_time": "2020-08-17T18:07:43",
      "upload_time_iso_8601": "2020-08-17T18:07:43.084417Z",
      "url": "https://files.pythonhosted.org/packages/ea/5f/40544da4e77665ab1f03fab6b1fc3ed34afa1b6459209e3eecef38001a2d/dynamodb_prettyparser-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20847a3a8d6b81d83e7ffd8b96651dc39577306a030a9c8d2964269899cafd58",
        "md5": "82d3ab40aa2e9b6f85cb6ac62974b82c",
        "sha256": "f91d3e59453ffde6a967a03d893e8ffdd8f3dbb9ea7a2ce7fcb6958691f5db26"
      },
      "downloads": -1,
      "filename": "dynamodb-prettyparser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "82d3ab40aa2e9b6f85cb6ac62974b82c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6451,
      "upload_time": "2020-08-17T18:07:45",
      "upload_time_iso_8601": "2020-08-17T18:07:45.816157Z",
      "url": "https://files.pythonhosted.org/packages/20/84/7a3a8d6b81d83e7ffd8b96651dc39577306a030a9c8d2964269899cafd58/dynamodb-prettyparser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}