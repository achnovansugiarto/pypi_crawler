{
  "info": {
    "author": "Mathew Moon",
    "author_email": "mmoon@quinovas.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "============================\nDynamodb Pretty Parser\n============================\n\nParses Dynamodb responses into a more usable format. Results are returned as a list of dictionaries with the attribute names being the key. Results are parsed recursively.\nOne use is to return results directly to Appsync from a Lambda function.\nParses all scalar types that Dynamo supports\n\n* N (number scalar) - cast as integer or Decimal types\n* S (string scalar) - stays string\n* SS (string set scalar) - list of strings\n* NS (number set scalar) - list of Decimal/integer\n* L (list scalar) - list\n* BOOL (boolean scalar) - boolean\n* B (binary scalar) - string of base64\n* BS (binary set scalar) - list of base64 strings\n* NULL (null scalar) - None\n* M (map scalar) - Dictionary\n\n\nResponses are returned formated as:\n\n.. code-block:: JSON\n\n  [\n    {\"attributeOneName\": {\"S\": \"value1\"}, \"attributeTwoName\": {\"S\": \"value2\"}},\n    {\"attributeOneName\": {\"S\": \"value1\"}, \"attributeTwoName\": {\"S\": \"value2\"}}\n  ]\n\nBecomes\n\n.. code-block:: JSON\n\n  [\n    {\"attributeOneName\": \"value1\", \"attributeTwoName\": \"value2\"},\n    {\"attributeOneName\": \"value1\", \"attributeTwoName\": \"value2\"}\n  ]\n\nWhere each dictionary in the top level array is a separate item.\n\nMethods\n----------------------------\n\nparseResults(records) -> dict\nArguments:\nitems -- Response from any boto3 call to Dynamodb that returns Items in the response\n\nExample\n----------------------------\n\n.. code-block:: python\n\n  from dynamodbPrettyParser import parseResults\n  import boto3\n\n  dynamodb = boto3.client('dynamodb')\n  response = dynamodb.query(\n    TableName='mytable',\n    KeyConditionExpression='my_attribute = :foo',\n    ExpressionAttributeValues={':foo': 'bar'}\n  )\n\n  print(parseResults(response))\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuiNovas/dynamodb-prettyparser",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamodb-prettyparser",
    "package_url": "https://pypi.org/project/dynamodb-prettyparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamodb-prettyparser/",
    "project_urls": {
      "Homepage": "https://github.com/QuiNovas/dynamodb-prettyparser"
    },
    "release_url": "https://pypi.org/project/dynamodb-prettyparser/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parses dynamodb responses into a list dictionaries with attribute names as keys",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8367005,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5961f2a72be69fa9a6a824f582994f56614a49127b8f817a783da08f9b4f117",
        "md5": "3fb5416c5670e75974a1c3ff0e5f7f20",
        "sha256": "a96ad416b975f4ae7feac313fe2d52ef98c38aa9097fc3c65afaaad434a11cb6"
      },
      "downloads": -1,
      "filename": "dynamodb_prettyparser-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3fb5416c5670e75974a1c3ff0e5f7f20",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6792,
      "upload_time": "2020-08-17T18:30:52",
      "upload_time_iso_8601": "2020-08-17T18:30:52.500174Z",
      "url": "https://files.pythonhosted.org/packages/b5/96/1f2a72be69fa9a6a824f582994f56614a49127b8f817a783da08f9b4f117/dynamodb_prettyparser-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9d5d98ee133f33d9ecf8710627e50769186c615c73698ae534147ff19267fe4",
        "md5": "4004fb9960430d22f98d243154a1e957",
        "sha256": "05834c6050067148c30b5c93156988fc868922191a0aed3af8b3d1d32b4c2f47"
      },
      "downloads": -1,
      "filename": "dynamodb-prettyparser-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4004fb9960430d22f98d243154a1e957",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6447,
      "upload_time": "2020-08-17T18:30:53",
      "upload_time_iso_8601": "2020-08-17T18:30:53.902786Z",
      "url": "https://files.pythonhosted.org/packages/c9/d5/d98ee133f33d9ecf8710627e50769186c615c73698ae534147ff19267fe4/dynamodb-prettyparser-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}