{
  "info": {
    "author": "Jonathan Strutz",
    "author_email": "jonstrutz11@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "# MINE Databases\n[![Build Status](https://travis-ci.org/JamesJeffryes/MINE-Database.svg?branch=master)](https://travis-ci.org/JamesJeffryes/MINE-Database)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/a8d348757fd9495686cd54b08456f6a2)](https://www.codacy.com/app/JamesJeffryes/MINE-Database?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=JamesJeffryes/MINE-Database&amp;utm_campaign=Badge_Grade)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nThis repository contains code for the generation (though Pickaxe), \nstorage and querying of MINE databases. For generalinformation on MINE \nDatabases, please consult [JJeffryes et al. 2015](http://jcheminf.springeropen.com/articles/10.1186/s13321-015-0087-1)\nAPIs can found in [the API Repository](https://github.com/tyo-nu/MINE-API)\n\n## Repository Structure\nThis repository primarily consists of the minedatabases python module \nand it's 5 submodules:\n- compound_io: Contains functions to load and export chemical structures \nfrom MINE databases. Has command-line interface.\n- databases: Contains functions which impose a schema on the underlying \nMongo databases which store MINE data.\n- pickaxe: Allows for the application of reaction rules to compound sets \nand the annotation of the resulting compounds an reactions. Has command-line interface.\n- queries: Contains logic for text and chemical structure queries of the \nMINE database.\n- utils: Various utility functions such as hashing & type conversions\n\n### Compound_io command-line usage\ncompound_io may be called independently to import or export chemical \nstrictures in MINE database format. These may be helpful for sharing \npredictions or maintaining current external databases for cross-referencing.\nThe call format is `python compound_io.py import-<format> <input path> \n<database>` for imports and `python compound_io.py export-<format> \n<database> <outfile path> <optionally: maximum compounds per file>` for exports.\nValid formats are:\n- smi: SMILES line-code\n- mol: MDL molecule files (outputs individual files in specified directory)\n- sdf: Structured Data File (concatenated mol files)\n- tsv: FOR EXPORT ONLY, a tab separated file compatible with ModelSEED\n\n### Pickaxe command-line usage\nPickaxe.py can be called independently to generate predictions with or \nwithout database storage. To list all options call `python pickaxe.py -h`. \nTo predict all chemical damage reactions for one generation on compounds in the iAF1260 \nmodel one would call `python pickaxe.py -C ./data/ChemicalDamageCoreactants.tsv -r \n./data/ChemicalDamageRxnRules.tsv -g 1 -c ./data/iAF1260.tsv`\n\n### Testing\n`pytest` to run all tests. Ensure that pytest is installed.\nTo add coverage, run:\n`pytest --cov-report term --cov-report xml:tests/cov.xml --cov=minedatabase minedatabase/tests/`\nEnsure that coverage and pytest-cov are both installed.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tyo-nu/MINE-Database",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minedatabase",
    "package_url": "https://pypi.org/project/minedatabase/",
    "platform": "",
    "project_url": "https://pypi.org/project/minedatabase/",
    "project_urls": {
      "Homepage": "https://github.com/tyo-nu/MINE-Database"
    },
    "release_url": "https://pypi.org/project/minedatabase/1.0.0/",
    "requires_dist": [
      "pymongo"
    ],
    "requires_python": "",
    "summary": "Metabolic In silico Network Expansions",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15558242,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f84459933173d60cb4d731ec6825df08dd1dbcabe227618d09ee3ae0d91fe99",
        "md5": "e93e83e9b199c829db0305ca7d563b34",
        "sha256": "3f47f6fc33b4a7f72e1682346b281d40c4119a46de6c0bea345e4c30ded06743"
      },
      "downloads": -1,
      "filename": "minedatabase-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e93e83e9b199c829db0305ca7d563b34",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3319501,
      "upload_time": "2020-05-06T16:34:20",
      "upload_time_iso_8601": "2020-05-06T16:34:20.393267Z",
      "url": "https://files.pythonhosted.org/packages/9f/84/459933173d60cb4d731ec6825df08dd1dbcabe227618d09ee3ae0d91fe99/minedatabase-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9e0061cef9953be7dca842504e65f9658c5c99a8905d8b9cc57ea17763f2549",
        "md5": "bf77de3caf1711b7e7196bf766de8c86",
        "sha256": "f77202bde1817f55290afbf16eec80d857ee485736ff27ab2e874a33e47bd6e0"
      },
      "downloads": -1,
      "filename": "minedatabase-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bf77de3caf1711b7e7196bf766de8c86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47674,
      "upload_time": "2020-05-06T16:34:22",
      "upload_time_iso_8601": "2020-05-06T16:34:22.543516Z",
      "url": "https://files.pythonhosted.org/packages/e9/e0/061cef9953be7dca842504e65f9658c5c99a8905d8b9cc57ea17763f2549/minedatabase-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}