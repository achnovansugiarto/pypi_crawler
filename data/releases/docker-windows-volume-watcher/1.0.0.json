{
  "info": {
    "author": "Mikhail Erofeev",
    "author_email": "mikhail@erofeev.pw",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Docker Windows Volume Watcher\r\n==============================\r\nThis script monitors directory bindings of Docker containers on Windows hosts and notifies containers about file changes.\r\n\r\nThe script aims to be workaround for the problem of file change events propagation on Windows hosts. Due to limitations of CIFS implementation in Linux kernel, file change events in mounted folders of host are not propagated to container by Docker for Windows. This problem renders watch mode of modern frameworks (e.g. Jekyll, ng-cli, etc.) development servers useless, since containers are not notified about file changes. This problem is described on [Docker Community Forums][community-forums].\r\n\r\n[community-forums]: https://forums.docker.com/t/file-system-watch-does-not-work-with-mounted-volumes/12038\r\n\r\nInstallation\r\n------------\r\nThis script can be installed with pip (both Python 2 & 3 are supported).\r\n\r\n```dos\r\npip install docker-windows-volume-watcher\r\n```\r\n\r\nUsage\r\n-----\r\nMonitor all directory bindings of all containers. The script will listen for container start/stop events and notify all running containers about file changes.\r\n```dos\r\ndocker-volume-watcher\r\n```\r\n\r\nMonitor only bindings of container `container_name`.\r\n```dos\r\ndocker-volume-watcher container_name\r\n```\r\n\r\nMonitor only binding of `container_name` to host directory `C:\\some\\directory`.\r\n```dos\r\ndocker-volume-watcher container_name C:\\some\\directory\r\n```\r\n\r\nYou can also specify wildcards with `*` and `?` characters. For example: monitor only bindings of containers with names containing `myproject` to directories starting with `C:\\project\\folder\\`.\r\n```dos\r\ndocker-volume-watcher *myproject* C:\\project\\folder\\*\r\n```\r\n\r\nUse flag `-v` to enable verbose output: the script will report start/stop events of eligible containers and print all detected file changes.\r\n\r\nLimitations\r\n------------\r\n* The script doesn't propagate to container file deletion events.\r\n* The script requires `stat` and `chmod` utils to be installed in container (this should be true by default for the most of containers).\r\n\r\nImplementation details\r\n-----------------------\r\nThe script uses `watchdog` package to observe file change events of the host directory. Once file change event is fired the script reads file permissions of changed file (using `stat` util) and rewrites file permissions with the same value (using `chmod` util) thus triggering inotify event inside container.\r\n\r\n\"Rewrite file permissions approach\" was used instead of updating file last modified time with `touch` util. Since touching will cause event loop: touch will trigger file change event in Windows, script will handle this event and touch file again, etc.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/merofeev/docker-windows-volume-watcher",
    "keywords": "Docker volume Windows watch inotify",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-windows-volume-watcher",
    "package_url": "https://pypi.org/project/docker-windows-volume-watcher/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/docker-windows-volume-watcher/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/merofeev/docker-windows-volume-watcher"
    },
    "release_url": "https://pypi.org/project/docker-windows-volume-watcher/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A tool to notify Docker contianers about changes in mounts on Windows.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4616595,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4bf3f1465f4c8d4fa1380831d58c90bc5956f569cd385bc650b95b65b99081d",
        "md5": "802347c4b16ea04972c02ede94a51c1f",
        "sha256": "96be9b9a2d11e316ee680dbe61cee7f7c27faea6002e3f36bb44c20a6023f3d1"
      },
      "downloads": -1,
      "filename": "docker_windows_volume_watcher-1.0.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "802347c4b16ea04972c02ede94a51c1f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6012,
      "upload_time": "2017-04-22T19:41:34",
      "upload_time_iso_8601": "2017-04-22T19:41:34.307801Z",
      "url": "https://files.pythonhosted.org/packages/b4/bf/3f1465f4c8d4fa1380831d58c90bc5956f569cd385bc650b95b65b99081d/docker_windows_volume_watcher-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e639965c2fca268a13fd54fb5551f1ee98a6563ad5a3de62aaa075bc78ef5d0b",
        "md5": "43ece626857da0985f9f82412e898fab",
        "sha256": "ef52544d4b818607a501dbe1bfa9beb8620161c365bb6467d97d009fc997c194"
      },
      "downloads": -1,
      "filename": "docker-windows-volume-watcher-1.0.0.zip",
      "has_sig": true,
      "md5_digest": "43ece626857da0985f9f82412e898fab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6715,
      "upload_time": "2017-04-22T19:41:44",
      "upload_time_iso_8601": "2017-04-22T19:41:44.551071Z",
      "url": "https://files.pythonhosted.org/packages/e6/39/965c2fca268a13fd54fb5551f1ee98a6563ad5a3de62aaa075bc78ef5d0b/docker-windows-volume-watcher-1.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}