{
  "info": {
    "author": "Mohammad Javad Naderi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Session",
      "Topic :: Security"
    ],
    "description": ".. image:: https://user-images.githubusercontent.com/2115303/35397912-f00efbb4-0205-11e8-89b5-3d4f585a4588.png\n\n.. image:: https://img.shields.io/pypi/v/django-qsessions.svg\n   :target: https://pypi.python.org/pypi/django-qsessions/\n\n.. image:: https://img.shields.io/travis/QueraTeam/django-qsessions.svg\n   :target: https://travis-ci.org/QueraTeam/django-qsessions\n\n.. image:: https://img.shields.io/github/license/QueraTeam/django-qsessions.svg\n   :target: https://github.com/QueraTeam/django-qsessions/blob/master/LICENSE.txt\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n-------\n\n**django-qsessions** offers two extended session backends for Django.\nThey extend Django's ``db`` and ``cached_db`` backends (and ``Session`` model)\nwith following extra features:\n\n- Sessions have a foreign key to User\n- Sessions store IP and User Agent\n\n\nComparison\n==========\n\nHere is a brief comparison between Django's session backends (db, cache, cached_db), and django-qsessions.\n\n+-------------------------+-------------------------+----------------+\n|                         | django                  | qsessions      |\n+                         +-------+-----+-----------+----+-----------+\n|                         | cache | db  | cached_db | db | cached_db |\n+=========================+=======+=====+===========+====+===========+\n| Performance             | ✔✔    |     | ✔         |    | ✔         |\n+-------------------------+-------+-----+-----------+----+-----------+\n| Persistence             |       | ✔   | ✔         | ✔  | ✔         |\n+-------------------------+-------+-----+-----------+----+-----------+\n| Foreign Key to User     |       |     |           | ✔  | ✔         |\n+-------------------------+-------+-----+-----------+----+-----------+\n| Store IP and User Agent |       |     |           | ✔  | ✔         |\n+-------------------------+-------+-----+-----------+----+-----------+\n\n\nCompatibility\n=============\n\n- Python: **3.6**, **3.7**, **3.8**\n- Django: **1.11**, **2.0**, **2.1**, **2.2**, **3.0**, **3.1**\n\nInstallation\n============\n\nIf your system is in production and there are active sessions using another session backend,\nyou need to migrate them manually. We have no migration script.\n\n(1) If you want to use the ``cached_db`` backend, make sure you've\n    `configured your cache`_. If you have multiple caches defined in ``CACHES``, Django\n    will use the default cache. To use another cache, set ``SESSION_CACHE_ALIAS`` to the\n    name of that cache.\n\n(2) Install the latest version from PyPI:\n\n    .. code-block:: sh\n\n        pip install django-qsessions\n\n(3) In settings:\n\n    - In ``INSTALLED_APPS`` replace ``'django.contrib.sessions'`` with ``'qsessions'``.\n\n    - In ``MIDDLEWARE`` or ``MIDDLEWARE_CLASSES`` replace\n      ``'django.contrib.sessions.middleware.SessionMiddleware'`` with\n      ``'qsessions.middleware.SessionMiddleware'``.\n\n    - Set ``SESSION_ENGINE`` to:\n\n      - ``'qsessions.backends.cached_db'`` if you want to use ``cached_db`` backend.\n      - ``'qsessions.backends.db'`` if you want to use ``db`` backend.\n\n(4) Run migrations to create ``qsessions.models.Session`` model.\n\n    .. code-block:: sh\n\n        python manage.py migrate qsessions\n\nTo enable location detection using GeoIP2 (optional):\n\n(5) Install ``geoip2`` package:\n\n    .. code-block:: sh\n\n        pip install geoip2\n\n(6) Set ``GEOIP_PATH`` to a directory for storing GeoIP2 database.\n\n(7) Run the following command to download latest GeoIP2 database. You can add this\n    command to a cron job to update GeoIP2 DB automatically.\n    Due to `Maxmind license changes`_ you will need to acquire and use a license key for\n    downloading the databases.  You can pass the key on the command line, or in the ``MAXMIND_LICENSE_KEY``\n    environment variable.\n\n    .. code-block:: sh\n\n        python manage.py download_geoip_db -k mykey\n\nUsage\n=====\n\ndjango-qsessions has a custom ``Session`` model with following extra fields:\n``user``, ``user_agent``, ``created_at``, ``updated_at``, ``ip``.\n\nGetting a user's sessions:\n\n.. code-block:: python\n\n    user.session_set.filter(expire_date__gt=timezone.now())\n\nDeleting a session:\n\n.. code-block:: python\n\n    # Deletes session from both DB and cache\n    session.delete()\n\nLogout a user:\n\n.. code-block:: python\n\n    user.session_set.all().delete()\n\nSession creation time (user login time):\n\n.. code-block:: python\n\n    >>> session.created_at\n    datetime.datetime(2018, 6, 12, 17, 9, 17, 443909, tzinfo=<UTC>)\n\nIP and user agent:\n\n.. code-block:: python\n\n    >>> session.ip\n    '127.0.0.1'\n    >>> session.user_agent\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'\n\nAnd if you have configured GeoIP2, you can call ``.location()``, ``.location_info()``:\n\n.. code-block:: python\n\n    >>> session.location()\n    'Tehran, Iran'\n\n    >>> session.location_info()\n    {'city': 'Tehran', 'continent_code': 'AS', 'continent_name': 'Asia', 'country_code': 'IR', 'country_name': 'Iran', 'time_zone': 'Asia/Tehran', ...}\n\nAdmin page:\n\n.. image:: https://user-images.githubusercontent.com/2115303/41525284-b0b258b0-72f5-11e8-87f1-8770e0094f4c.png\n\nCaveats\n-------\n\n- ``session.updated_at`` is not the session's last activity. It's updated each time the session\n  object in DB is saved. (e.g. when user logs in, or when ip, user agent, or session data changes)\n\nWhy not ``django-user-sessions``?\n=================================\n\n`django-user-sessions`_ has the same functionality,\nbut only extends the ``db`` backend. Using a cache can improve performance.\n\nWe got ideas and some codes from django-user-sessions.\nMany thanks to `Bouke Haarsma`_ for writing django-user-sessions.\n\nDevelopment\n===========\n\n- Install development dependencies in your virtualenv with ``pip install -e '.[dev]'``\n\n- Run tests with coverage:\n\n  - ``py.test --cov --ds tests.settings_db``\n  - ``py.test --cov --ds tests.settings_cached_db``\n\n- Apply **black** code style (using the latest version of black):\n\n  .. code-block:: sh\n\n      black -l 120 qsessions tests setup.py\n\nTODO\n====\n\n- Write better documentation.\n\n  - Explain how it works (in summary)\n  - Add more details to existing documentation.\n\n- Write more tests\n\n- Performance benchmark (and compare with Django's ``cached_db``)\n\nContributions are welcome!\n\nLicense\n=======\n\nMIT\n\n.. _`configured your cache`: https://docs.djangoproject.com/en/dev/topics/cache/\n.. _`django-user-sessions`: https://github.com/Bouke/django-user-sessions\n.. _`Bouke Haarsma`: https://github.com/Bouke\n.. _`Maxmind license changes`: https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/django-qsessions",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QueraTeam/django-qsessions",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-qsessions",
    "package_url": "https://pypi.org/project/django-qsessions/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-qsessions/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/django-qsessions",
      "Homepage": "https://github.com/QueraTeam/django-qsessions"
    },
    "release_url": "https://pypi.org/project/django-qsessions/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extended session backends for Django",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15057415,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6154b7aa3e8598ee00b2ea53ce615fd62c7a69578e764f35cddb1842fef7b0ca",
        "md5": "3e1f851e430067ae01947ea77894bb27",
        "sha256": "f351fb9bf917d47829c78acff8cbd206315e6b0448bbc235bb94f2c0c7f9395d"
      },
      "downloads": -1,
      "filename": "django-qsessions-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3e1f851e430067ae01947ea77894bb27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32915,
      "upload_time": "2020-10-17T16:39:29",
      "upload_time_iso_8601": "2020-10-17T16:39:29.546980Z",
      "url": "https://files.pythonhosted.org/packages/61/54/b7aa3e8598ee00b2ea53ce615fd62c7a69578e764f35cddb1842fef7b0ca/django-qsessions-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}