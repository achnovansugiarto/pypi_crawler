{
  "info": {
    "author": "CHEN Xingjian",
    "author_email": "xingjchen3-c@my.cityu.edu.hk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: Chinese (Simplified)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\nMetaDR is a pipeline that can integrate various information to predict human diseases. MetaDR consists of a predictor and an interpreter. The predictor can embed the taxonomic relationship into microbial features and ensembles the prediction results from multiple perspectives. The interpreter can extract and elucidate biological insights from different microbial contexts.\n\nMetaDR can provide reference biomarkers from the combination of both known and unknown microbial organisms for the metagenomic dataset as well as achieving competitive prediction performance for human diseases.\n\nFor application, we designed an operator to choose the best model from several candidate models according to the performance on the validation set, so the discrepancy on different combinations of abundance profiles and taxonomic information can be avoided since only the best model will be chosen, rather than the last ensemble model.\n\n\nInputs of our MetaDR:\n\nThe output of MicroPro can be direct as the input of our pipeline. Optionally, the users can also prepare thier data in the following formats based on other analysis pipelines.\n\nThere are 4 files that need to be prepared as the input for our pipeline, assume the name of the example set is 'Karlsson_T2D', then the file names should be 'Karlsson_T2D_known'.csv, 'Karlsson_T2D_unknown'.csv, 'Karlsson_T2D_y'.csv, and Unknown_name.xlsx'. Where the first two files are the abundance tables of known and unknown features. 'Karlsson_T2D_y'.csv is the label file for each patient. Unknown_name.xlsx' includes the genus-level assignments for each MAG.\n\n\nOutputs of our MetaDR:\n\nA txt file that saves all the metrics and prediction results will be generated for each function.\n\nFor WRF:\n\n\"WeighRF.train\" will return the final ensemble RF model, the weights for known and  unknown features, and the final ensemble prediction results.\n\n\"WeighRF.select\" will return the top 30 features.\n\nFor EPCNN:\n\n\"EpCNN.phygen\" will generate four \"csv\" files, known_level, known_postorder, unknown_level, and unknown_postorder which represents the postorder phylogenetic-sorting based on known features, level phylogenetic-sorting based on known features, postorder phylogenetic-sortingbased on unknown features, and level phylogenetic-sorting based on unknown features.\n\n\"EpCNN.train\" will return 4 single models and the final ensemble prediction results.\n\nSee https://github.com/Microbiods/MetaDR for more details.\n\nThe tutorial for MetaDR is made available at GitHub:\nhttps://github.com/Microbiods/MetaDR/blob/main/test_MetaDR_pypi.ipynb\n\ncontact: Xingjian chen  \nemail: xingjchen3-c@my.cityu.edu.hk \n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Microbiods/MetaDR",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MetaDR",
    "package_url": "https://pypi.org/project/MetaDR/",
    "platform": "all",
    "project_url": "https://pypi.org/project/MetaDR/",
    "project_urls": {
      "Homepage": "https://github.com/Microbiods/MetaDR"
    },
    "release_url": "https://pypi.org/project/MetaDR/3.0.0/",
    "requires_dist": [
      "xlrd (==1.2.0)",
      "scipy (==1.7.1)",
      "pandas (==1.3.2)",
      "numpy (==1.19.5)",
      "ete3 (==3.1.2)",
      "tensorflow (==2.7.0)",
      "scikit-learn (==0.24.2)"
    ],
    "requires_python": "",
    "summary": "MetaDR package",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12762548,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da6f813a3df34deed9d7e70d465c7371632616720770128de80b85ce8dbae17e",
        "md5": "66ba14d6e0cb487a21a3359171187350",
        "sha256": "13009bac9263274b64549cd780ebabce5a619a51147886fe74d6e00ff811314b"
      },
      "downloads": -1,
      "filename": "MetaDR-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66ba14d6e0cb487a21a3359171187350",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10475,
      "upload_time": "2022-02-02T08:36:16",
      "upload_time_iso_8601": "2022-02-02T08:36:16.101253Z",
      "url": "https://files.pythonhosted.org/packages/da/6f/813a3df34deed9d7e70d465c7371632616720770128de80b85ce8dbae17e/MetaDR-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "743f50a2e57eea218a2d68ccf50aa43999851d13cb0a64fa2ea335af6536e661",
        "md5": "203cede5946d7e504d15402039945462",
        "sha256": "d5b21d8c42902b585db2e722b34385960ca273463523249c399181b0ab12275a"
      },
      "downloads": -1,
      "filename": "MetaDR-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "203cede5946d7e504d15402039945462",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8237,
      "upload_time": "2022-02-02T08:36:17",
      "upload_time_iso_8601": "2022-02-02T08:36:17.797300Z",
      "url": "https://files.pythonhosted.org/packages/74/3f/50a2e57eea218a2d68ccf50aa43999851d13cb0a64fa2ea335af6536e661/MetaDR-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}