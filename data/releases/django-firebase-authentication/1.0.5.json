{
  "info": {
    "author": "floydya",
    "author_email": "xfloydya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "==============================\ndjango-firebase-authentication\n==============================\n\ndjango-firebase-authentication is an auth provider for `Firebase Authentication Service <https://firebase.google.com/products/auth/>`_.\n\nInstallation\n------------\n\nInstall via pip::\n\n    pip install django-firebase-authentication\n\nAlso installed dependencies:\n`django-rest-framework <https://github.com/encode/django-rest-framework/>`_ and\n`firebase-admin <https://github.com/firebase/firebase-admin-python/>`_.\n\nDjango setup\n------------\n1. Add \"firebase_auth\" to your INSTALLED_APPS::\n\n    INSTALLED_APPS = [\n        ...\n        'firebase_authentication',\n    ]\n\n2. Specify a location for your Firebase keyfile with the settings::\n\n    FIREBASE_KEY_PATH = os.path.join(BASE_DIR, 'keyfile.json')\n\n   And place the json key inside ``BASE_DIR``.\n\n3. Specify default auth model in settings::\n\n    AUTH_USER_MODEL = 'firebase_authentication.User'\n\n3. Add FirebaseAuthentication to default authentication classes in DRF settings, like::\n\n    REST_FRAMEWORK = {\n        'DEFAULT_AUTHENTICATION_CLASSES': (\n            'firebase_authentication.authentication.FirebaseAuthentication',\n        ),\n    }\n\n   Or use ``FirebaseAuthMixin`` in DRF views like::\n\n    from firebase_auth.mixins import FirebaseAuthMixin\n    class MyModelViewSet(FirebaseAuthMixin, viewsets.ModelViewSet)\n        ...\n\n   **Attention!** This mixin must be first in inheritance order.\n\n4. Add FirebaseAuthMiddleware to MIDDLEWARE list instead of default session middleware::\n\n    MIDDLEWARE = [\n        ...\n        # 'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'firebase_authentication.authentication.FirebaseAuthMiddleware',\n        ...\n    ]",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-firebase-authentication",
    "package_url": "https://pypi.org/project/django-firebase-authentication/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-firebase-authentication/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-firebase-authentication/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A DRF authentication provider for Google Firebase AS.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7776440,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "948f3cfd9168c2c802de7ace4f2c9eb87dae71804c19a7b6c0d9a7cbc152907a",
        "md5": "a77c5654ba6925d09d01253f6d8f78b8",
        "sha256": "7ef4691dc1d1fd12f3fc5bd7d23dd3666e7507311171519e5e848f2275f4ed6c"
      },
      "downloads": -1,
      "filename": "django-firebase-authentication-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a77c5654ba6925d09d01253f6d8f78b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4968,
      "upload_time": "2020-05-22T11:26:26",
      "upload_time_iso_8601": "2020-05-22T11:26:26.655740Z",
      "url": "https://files.pythonhosted.org/packages/94/8f/3cfd9168c2c802de7ace4f2c9eb87dae71804c19a7b6c0d9a7cbc152907a/django-firebase-authentication-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}