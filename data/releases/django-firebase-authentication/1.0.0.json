{
  "info": {
    "author": "floydya",
    "author_email": "xfloydya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "==============================\ndjango-firebase-authentication\n==============================\n\ndjango-firebase-authentication is an auth provider for `Firebase Authentication Service <https://firebase.google.com/products/auth/>`_.\n\nInstallation\n------------\n\nInstall via pip::\n\n    pip install django-firebase-authentication\n\nAlso installed dependencies:\n`django-rest-framework <https://github.com/encode/django-rest-framework/>`_ and\n`firebase-admin <https://github.com/firebase/firebase-admin-python/>`_.\n\nDjango setup\n------------\n1. Add \"firebase_auth\" to your INSTALLED_APPS::\n\n    INSTALLED_APPS = [\n        ...\n        'firebase_authentication',\n    ]\n\n2. Specify a location for your Firebase keyfile with the settings::\n\n    FIREBASE_KEY_PATH = os.path.join(BASE_DIR, 'keyfile.json')\n\n   And place the json key inside ``BASE_DIR``.\n\n3. Add FirebaseAuthentication to default authentication classes in DRF settings, like::\n\n    REST_FRAMEWORK = {\n        'DEFAULT_AUTHENTICATION_CLASSES': (\n            'firebase_authentication.authentication.FirebaseAuthentication',\n        ),\n    }\n\n   Or use ``FirebaseAuthMixin`` in DRF views like::\n\n    from firebase_auth import FirebaseAuthMixin\n    class MyModelViewSet(FirebaseAuthMixin, viewsets.ModelViewSet)\n        ...\n\n   **Attention!** This mixin must be first in inheritance order.\n\n4. Create your users with the Firebase user ID as user ID.\n   Inside your views, you can access the user reference like you're used to with  request.user",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-firebase-authentication",
    "package_url": "https://pypi.org/project/django-firebase-authentication/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-firebase-authentication/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-firebase-authentication/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A DRF authentication provider for Google Firebase AS.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7776440,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e7a8501eb03f745cd6093b69d763f336dbef4749e9938ef4f45d48aa778c94b",
        "md5": "430c2a02ee687126c8378c9580160f7b",
        "sha256": "09a46de65058be87f0c20171239b3021fa555c7ba97a7a3601e5b65841fd3b7b"
      },
      "downloads": -1,
      "filename": "django-firebase-authentication-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "430c2a02ee687126c8378c9580160f7b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3494,
      "upload_time": "2020-05-21T12:28:06",
      "upload_time_iso_8601": "2020-05-21T12:28:06.905511Z",
      "url": "https://files.pythonhosted.org/packages/3e/7a/8501eb03f745cd6093b69d763f336dbef4749e9938ef4f45d48aa778c94b/django-firebase-authentication-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}