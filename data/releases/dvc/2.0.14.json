{
  "info": {
    "author": "Dmitry Petrov",
    "author_email": "dmitry@dvc.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "|Banner|\n\n`Website <https://dvc.org>`_\n• `Docs <https://dvc.org/doc>`_\n• `Blog <http://blog.dataversioncontrol.com>`_\n• `Twitter <https://twitter.com/DVCorg>`_\n• `Chat (Community & Support) <https://dvc.org/chat>`_\n• `Tutorial <https://dvc.org/doc/get-started>`_\n• `Mailing List <https://sweedom.us10.list-manage.com/subscribe/post?u=a08bf93caae4063c4e6a351f6&id=24c0ecc49a>`_\n\n|Release| |CI| |Maintainability| |Coverage| |Donate| |DOI|\n\n|PyPI| |Packages| |Brew| |Conda| |Choco| |Snap|\n\n|\n\n**Data Version Control** or **DVC** is an **open-source** tool for data science and machine\nlearning projects. Key features:\n\n#. Simple **command line** Git-like experience. Does not require installing and maintaining\n   any databases. Does not depend on any proprietary online services.\n\n#. Management and versioning of **datasets** and **machine learning models**. Data is saved in\n   S3, Google cloud, Azure, Alibaba cloud, SSH server, HDFS, or even local HDD RAID.\n\n#. Makes projects **reproducible** and **shareable**; helping to answer questions about how\n   a model was built.\n\n#. Helps manage experiments with Git tags/branches and **metrics** tracking.\n\n**DVC** aims to replace spreadsheet and document sharing tools (such as Excel or Google Docs)\nwhich are being used frequently as both knowledge repositories and team ledgers.\nDVC also replaces both ad-hoc scripts to track, move, and deploy different model versions;\nas well as ad-hoc data file suffixes and prefixes.\n\n.. contents:: **Contents**\n  :backlinks: none\n\nHow DVC works\n=============\n\nWe encourage you to read our `Get Started <https://dvc.org/doc/get-started>`_ guide to better understand what DVC\nis and how it can fit your scenarios.\n\nThe easiest (but not perfect!) *analogy* to describe it: DVC is Git (or Git-LFS to be precise) & Makefiles\nmade right and tailored specifically for ML and Data Science scenarios.\n\n#. ``Git/Git-LFS`` part - DVC helps store and share data artifacts and models, connecting them with a Git repository.\n#. ``Makefile``\\ s part - DVC describes how one data or model artifact was built from other data and code.\n\nDVC usually runs along with Git. Git is used as usual to store and version code (including DVC meta-files). DVC helps\nto store data and model files seamlessly out of Git, while preserving almost the same user experience as if they\nwere stored in Git itself. To store and share the data cache, DVC supports multiple remotes - any cloud (S3, Azure,\nGoogle Cloud, etc) or any on-premise network storage (via SSH, for example).\n\n|Flowchart|\n\nThe DVC pipelines (computational graph) feature connects code and data together. It is possible to explicitly\nspecify all steps required to produce a model: input dependencies including data, commands to run,\nand output information to be saved. See the quick start section below or\nthe `Get Started <https://dvc.org/doc/get-started>`_ tutorial to learn more.\n\nQuick start\n===========\n\nPlease read `Get Started <https://dvc.org/doc/get-started>`_ guide for a full version. Common workflow commands include:\n\n+-----------------------------------+-------------------------------------------------------------------+\n| Step                              | Command                                                           |\n+===================================+===================================================================+\n| Track data                        | | ``$ git add train.py``                                          |\n|                                   | | ``$ dvc add images.zip``                                        |\n+-----------------------------------+-------------------------------------------------------------------+\n| Connect code and data by commands | | ``$ dvc run -d images.zip -o images/ unzip -q images.zip``      |\n|                                   | | ``$ dvc run -d images/ -d train.py -o model.p python train.py`` |\n+-----------------------------------+-------------------------------------------------------------------+\n| Make changes and reproduce        | | ``$ vi train.py``                                               |\n|                                   | | ``$ dvc repro model.p.dvc``                                     |\n+-----------------------------------+-------------------------------------------------------------------+\n| Share code                        | | ``$ git add .``                                                 |\n|                                   | | ``$ git commit -m 'The baseline model'``                        |\n|                                   | | ``$ git push``                                                  |\n+-----------------------------------+-------------------------------------------------------------------+\n| Share data and ML models          | | ``$ dvc remote add myremote -d s3://mybucket/image_cnn``        |\n|                                   | | ``$ dvc push``                                                  |\n+-----------------------------------+-------------------------------------------------------------------+\n\nInstallation\n============\n\nThere are four options to install DVC: ``pip``, Homebrew, Conda (Anaconda) or an OS-specific package.\nFull instructions are `available here <https://dvc.org/doc/get-started/install>`_.\n\nSnap (Snapcraft/Linux)\n----------------------\n\n|Snap|\n\n.. code-block:: bash\n\n   snap install dvc --classic\n\nThis corresponds to the latest tagged release.\nAdd ``--beta`` for the latest tagged release candidate,\nor ``--edge`` for the latest ``master`` version.\n\nChoco (Chocolatey/Windows)\n--------------------------\n\n|Choco|\n\n.. code-block:: bash\n\n   choco install dvc\n\nBrew (Homebrew/Mac OS)\n----------------------\n\n|Brew|\n\n.. code-block:: bash\n\n   brew install dvc\n\nConda (Anaconda)\n----------------\n\n|Conda|\n\n.. code-block:: bash\n\n   conda install -c conda-forge dvc\n\npip (PyPI)\n----------\n\n|PyPI|\n\n.. code-block:: bash\n\n   pip install dvc\n\nDepending on the remote storage type you plan to use to keep and share your data, you might need to specify\none of the optional dependencies: ``s3``, ``gs``, ``azure``, ``oss``, ``ssh``. Or ``all`` to include them all.\nThe command should look like this: ``pip install dvc[s3]`` (in this case AWS S3 dependencies such as ``boto3``\nwill be installed automatically).\n\nTo install the development version, run:\n\n.. code-block:: bash\n\n   pip install git+git://github.com/iterative/dvc\n\nPackage\n-------\n\n|Packages|\n\nSelf-contained packages for Linux, Windows, and Mac are available. The latest version of the packages\ncan be found on the GitHub `releases page <https://github.com/iterative/dvc/releases>`_.\n\nUbuntu / Debian (deb)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/deb/dvc.list -O /etc/apt/sources.list.d/dvc.list\n   sudo apt-get update\n   sudo apt-get install dvc\n\nFedora / CentOS (rpm)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/rpm/dvc.repo -O /etc/yum.repos.d/dvc.repo\n   sudo yum update\n   sudo yum install dvc\n\nComparison to related technologies\n==================================\n\n#. `Git-annex <https://git-annex.branchable.com/>`_ - DVC uses the idea of storing the content of large files (which should\n   not be in a Git repository) in a local key-value store, and uses file hardlinks/symlinks instead of\n   copying/duplicating files.\n\n#. `Git-LFS <https://git-lfs.github.com/>`_ - DVC is compatible with any remote storage (S3, Google Cloud, Azure, SSH,\n   etc). DVC also uses reflinks or hardlinks to avoid copy operations on checkouts; thus handling large data files\n   much more efficiently.\n\n#. *Makefile* (and analogues including ad-hoc scripts) - DVC tracks dependencies (in a directed acyclic graph).\n\n#. `Workflow Management Systems <https://en.wikipedia.org/wiki/Workflow_management_system>`_ - DVC is a workflow\n   management system designed specifically to manage machine learning experiments. DVC is built on top of Git.\n\n#. `DAGsHub <https://dagshub.com/>`_ - This is a Github equivalent for DVC. Pushing Git+DVC based repositories to DAGsHub will produce in a high level project dashboard; including DVC pipelines and metrics visualizations, as well as links to any DVC-managed files present in cloud storage.\n\nContributing\n============\n\n|Maintainability| |Donate|\n\nContributions are welcome! Please see our `Contributing Guide <https://dvc.org/doc/user-guide/contributing/core>`_ for more\ndetails.\n\nMailing List\n============\n\nWant to stay up to date? Want to help improve DVC by participating in our occasional polls? Subscribe to our `mailing list <https://sweedom.us10.list-manage.com/subscribe/post?u=a08bf93caae4063c4e6a351f6&id=24c0ecc49a>`_. No spam, really low traffic.\n\nCopyright\n=========\n\nThis project is distributed under the Apache license version 2.0 (see the LICENSE file in the project root).\n\nBy submitting a pull request to this project, you agree to license your contribution under the Apache license version\n2.0 to this project.\n\nCitation\n========\n\n|DOI|\n\nIterative, *DVC: Data Version Control - Git for Data & Models* (2020)\n`DOI:10.5281/zenodo.012345 <https://doi.org/10.5281/zenodo.3677553>`_.\n\nBarrak, A., Eghan, E.E. and Adams, B. `On the Co-evolution of ML Pipelines and Source Code - Empirical Study of DVC Projects <https://mcis.cs.queensu.ca/publications/2021/saner.pdf>`_ , in Proceedings of the 28th IEEE International Conference on Software Analysis, Evolution, and Reengineering, SANER 2021. Hawaii, USA.\n\n\n.. |Banner| image:: https://dvc.org/img/logo-github-readme.png\n   :target: https://dvc.org\n   :alt: DVC logo\n\n.. |Release| image:: https://img.shields.io/badge/release-ok-brightgreen\n   :target: https://travis-ci.com/iterative/dvc/branches\n   :alt: Release\n\n.. |CI| image:: https://github.com/iterative/dvc/workflows/Tests/badge.svg?branch=master\n   :target: https://github.com/iterative/dvc/actions\n   :alt: GHA Tests\n\n.. |Maintainability| image:: https://codeclimate.com/github/iterative/dvc/badges/gpa.svg\n   :target: https://codeclimate.com/github/iterative/dvc\n   :alt: Code Climate\n\n.. |Coverage| image:: https://codecov.io/gh/iterative/dvc/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/iterative/dvc\n   :alt: Codecov\n\n.. |Donate| image:: https://img.shields.io/badge/patreon-donate-green.svg?logo=patreon\n   :target: https://www.patreon.com/DVCorg/overview\n   :alt: Donate\n\n.. |Snap| image:: https://img.shields.io/badge/snap-install-82BEA0.svg?logo=snapcraft\n   :target: https://snapcraft.io/dvc\n   :alt: Snapcraft\n\n.. |Choco| image:: https://img.shields.io/chocolatey/v/dvc?label=choco\n   :target: https://chocolatey.org/packages/dvc\n   :alt: Chocolatey\n\n.. |Brew| image:: https://img.shields.io/homebrew/v/dvc?label=brew\n   :target: https://formulae.brew.sh/formula/dvc\n   :alt: Homebrew\n\n.. |Conda| image:: https://img.shields.io/conda/v/conda-forge/dvc.svg?label=conda&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/dvc\n   :alt: Conda-forge\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/dvc.svg?label=pip&logo=PyPI&logoColor=white\n   :target: https://pypi.org/project/dvc\n   :alt: PyPI\n\n.. |Packages| image:: https://img.shields.io/github/v/release/iterative/dvc?label=deb|pkg|rpm|exe&logo=GitHub\n   :target: https://github.com/iterative/dvc/releases/latest\n   :alt: deb|pkg|rpm|exe\n\n.. |DOI| image:: https://img.shields.io/badge/DOI-10.5281/zenodo.3677553-blue.svg\n   :target: https://doi.org/10.5281/zenodo.3677553\n   :alt: DOI\n\n.. |Flowchart| image:: https://dvc.org/img/flow.gif\n   :target: https://dvc.org/img/flow.gif\n   :alt: how_dvc_works\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/iterative/dvc",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://dvc.org",
    "keywords": "data-science data-version-control machine-learning git developer-tools reproducibility collaboration ai",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvc",
    "package_url": "https://pypi.org/project/dvc/",
    "platform": "",
    "project_url": "https://pypi.org/project/dvc/",
    "project_urls": {
      "Download": "https://github.com/iterative/dvc",
      "Homepage": "http://dvc.org"
    },
    "release_url": "https://pypi.org/project/dvc/2.0.14/",
    "requires_dist": [
      "ply (>=3.9)",
      "colorama (>=0.3.9)",
      "configobj (>=5.0.6)",
      "gitpython (>3)",
      "dulwich (>=0.20.21)",
      "pygit2 (>=1.5.0)",
      "setuptools (>=34.0.0)",
      "nanotime (>=0.5.2)",
      "pyasn1 (>=0.4.1)",
      "voluptuous (>=0.11.7)",
      "jsonpath-ng (>=1.5.1)",
      "requests (>=2.22.0)",
      "grandalf (==0.6)",
      "distro (>=1.3.0)",
      "appdirs (>=1.4.3)",
      "ruamel.yaml (>=0.16.1)",
      "toml (>=0.10.1)",
      "funcy (>=1.14)",
      "pathspec (>=0.6.0)",
      "shortuuid (>=0.5.0)",
      "tqdm (<5,>=4.45.0)",
      "packaging (>=19.0)",
      "zc.lockfile (>=1.2.1)",
      "flufl.lock (<4,>=3.2)",
      "networkx (>=2.1)",
      "psutil (>=5.8.0)",
      "pydot (>=1.2.4)",
      "flatten-dict (<1,>=0.3.0)",
      "tabulate (>=0.8.7)",
      "pygtrie (==2.3.2)",
      "dpath (<3,>=2.0.1)",
      "shtab (<2,>=1.3.4)",
      "rich (<10,>=9.0.0)",
      "dictdiffer (>=0.8.1)",
      "python-benedict (>=0.21.1)",
      "pyparsing (==2.4.7)",
      "typing-extensions (>=3.7.4)",
      "fsspec (>=0.8.5)",
      "diskcache (>=5.2.1)",
      "dataclasses (==0.7) ; python_version < \"3.7\"",
      "speedcopy (>=2.0.1) ; python_version < \"3.8\" and sys_platform == \"win32\"",
      "win-unicode-console (>=0.5) ; sys_platform == \"win32\"",
      "pywin32 (>=225) ; sys_platform == \"win32\"",
      "gcsfs (>=0.7.2) ; extra == 'all'",
      "boto3 (>=1.9.201) ; extra == 'all'",
      "adlfs (>=0.6.3) ; extra == 'all'",
      "azure-identity (>=1.4.0) ; extra == 'all'",
      "knack ; extra == 'all'",
      "paramiko[invoke] (>=2.7.0) ; extra == 'all'",
      "oss2 (==2.6.1) ; extra == 'all'",
      "pycryptodome (<3.9.9) ; extra == 'all'",
      "pydrive2 (>=1.8.1) ; extra == 'all'",
      "six (>=1.13.0) ; extra == 'all'",
      "pyarrow (>=2.0.0) ; extra == 'all'",
      "hdfs (==2.5.8) ; extra == 'all'",
      "webdavclient3 (>=3.14.5) ; extra == 'all'",
      "adlfs (>=0.6.3) ; extra == 'azure'",
      "azure-identity (>=1.4.0) ; extra == 'azure'",
      "knack ; extra == 'azure'",
      "pydrive2 (>=1.8.1) ; extra == 'gdrive'",
      "six (>=1.13.0) ; extra == 'gdrive'",
      "gcsfs (>=0.7.2) ; extra == 'gs'",
      "pyarrow (>=2.0.0) ; extra == 'hdfs'",
      "oss2 (==2.6.1) ; extra == 'oss'",
      "pycryptodome (<3.9.9) ; extra == 'oss'",
      "boto3 (>=1.9.201) ; extra == 's3'",
      "paramiko[invoke] (>=2.7.0) ; extra == 'ssh'",
      "paramiko[gssapi,invoke] (>=2.7.0) ; extra == 'ssh_gssapi'",
      "wheel (==0.36.2) ; extra == 'tests'",
      "pytest (==6.2.2) ; extra == 'tests'",
      "pytest-cov (==2.11.1) ; extra == 'tests'",
      "pytest-xdist (==2.2.1) ; extra == 'tests'",
      "pytest-mock (==3.5.1) ; extra == 'tests'",
      "pytest-lazy-fixture (==0.6.3) ; extra == 'tests'",
      "pytest-timeout (==1.4.2) ; extra == 'tests'",
      "pytest-docker (==0.10.1) ; extra == 'tests'",
      "flaky (==3.7.0) ; extra == 'tests'",
      "mock (==4.0.3) ; extra == 'tests'",
      "rangehttpserver (==1.2.0) ; extra == 'tests'",
      "mock-ssh-server (==0.9.0) ; extra == 'tests'",
      "moto (==2.0.2) ; extra == 'tests'",
      "beautifulsoup4 (==4.9.3) ; extra == 'tests'",
      "wget (==3.2) ; extra == 'tests'",
      "filelock (==3.0.12) ; extra == 'tests'",
      "wsgidav (==3.1.0) ; extra == 'tests'",
      "crc32c (==2.2) ; extra == 'tests'",
      "xmltodict (==0.12.0) ; extra == 'tests'",
      "google-compute-engine (==2.8.13) ; extra == 'tests'",
      "google-cloud-storage (==1.37.0) ; extra == 'tests'",
      "urllib3 (==1.26.4) ; extra == 'tests'",
      "Pygments (==2.8.1) ; extra == 'tests'",
      "collective.checkdocs (==0.2) ; extra == 'tests'",
      "pydocstyle (==6.0.0) ; extra == 'tests'",
      "jaraco.windows (==5.5.0) ; extra == 'tests'",
      "pylint (==2.7.4) ; extra == 'tests'",
      "pylint-pytest (==1.0.3) ; extra == 'tests'",
      "pylint-plugin-utils (==0.6) ; extra == 'tests'",
      "mypy (==0.812) ; extra == 'tests'",
      "webdavclient3 (>=3.14.5) ; extra == 'webdav'",
      "hdfs (==2.5.8) ; extra == 'webhdfs'"
    ],
    "requires_python": ">=3.6",
    "summary": "Git for data scientists - manage your code and data together",
    "version": "2.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17525210,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d0ded6fc93f7a8f87f04ded983ca286bfa9fa83358f59c9e5300006fb0c23fe",
        "md5": "a33866d26245cb0108204bf5a00abcdd",
        "sha256": "8fe7b020aa3ba7223af93243f8df01e421727eafd600629f7172e6be0b46db19"
      },
      "downloads": -1,
      "filename": "dvc-2.0.14-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a33866d26245cb0108204bf5a00abcdd",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 628007,
      "upload_time": "2021-03-30T12:47:16",
      "upload_time_iso_8601": "2021-03-30T12:47:16.651566Z",
      "url": "https://files.pythonhosted.org/packages/0d/0d/ed6fc93f7a8f87f04ded983ca286bfa9fa83358f59c9e5300006fb0c23fe/dvc-2.0.14-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a448efaa027c4eb18bbee20435887e3d44c395a25c0a6e0ec3282121b24812e",
        "md5": "120f9e0217b1c8708ec3f238d05b48d3",
        "sha256": "5fcad59e48154365beaf4097a2f751f067c808a3ea4b8c87e09420a69f7173a3"
      },
      "downloads": -1,
      "filename": "dvc-2.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "120f9e0217b1c8708ec3f238d05b48d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 460953,
      "upload_time": "2021-03-30T12:47:18",
      "upload_time_iso_8601": "2021-03-30T12:47:18.983352Z",
      "url": "https://files.pythonhosted.org/packages/5a/44/8efaa027c4eb18bbee20435887e3d44c395a25c0a6e0ec3282121b24812e/dvc-2.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}