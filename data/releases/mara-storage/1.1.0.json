{
  "info": {
    "author": "Mara contributors",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Mara Storage\n============\n\n[![mara-storage](https://github.com/mara/mara-storage/actions/workflows/build.yaml/badge.svg)](https://github.com/mara/mara-storage/actions/workflows/build.yaml)\n[![PyPI - License](https://img.shields.io/pypi/l/mara-storage.svg)](https://github.com/mara/mara-storage/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/mara-storage.svg)](https://badge.fury.io/py/mara-storage)\n[![Slack Status](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://communityinviter.com/apps/mara-users/public-invite)\n\nMini package for configuring and accessing multiple storages in a single project. Decouples the use of storages and their configuration by using \"aliases\" for storages.\n\nThe file [mara_storage/storages.py](https://github.com/mara/mara-storage/blob/main/mara_storage/storages.py) contains abstract storage configurations for local disk and cloud storages. The storage connections of a project are configured by overwriting the `storages` function in mara_storage/config.py:\n\n``` python\nimport pathlib\nimport mara_storage.config\nimport mara_storage.storages\n\n## configure storage connections for different aliases\nmara_storage.config.storages = lambda: {\n    'data': mara_storage.storages.LocalStorage(base_path=pathlib.Path('data')),\n    'gcs-bucket-1': mara_storage.storages.GoogleCloudStorage(bucket_name='my_data_lake_bucket_1', project_id='my_awesome_project')\n}\n\n## access individual storage configurations with `storages.storage`:\nprint(mara_storage.storages.storage('data'))\n# -> <LocalStorage: base_path=data>\n```\n\nThis packages gives the possibility to configure, manage and access multile storages in mara.\n\n&nbsp;\n\n\n## Batch processing: Accessing storages with shell commands\n\nThe file [mara_storage/shell.py](https://github.com/mara/mara-storage/blob/main/mara_storage/shell.py) contains functions that create commands for accessing storage files via their command line clients.\n   \nFor example, the `read_file_command` function creates a shell command that reads a file from a storage and returns its content to stdout:\n\n```python\nimport mara_storage.shell\n\nfile = 'my_domain.com/logs/2020/11/15/nginx.node-1.error.log'\n\nprint(mara_storage.shell.read_file_command('data', file_name=file))\n# -> cat /mara/data/my_domain.com/logs/2020/11/15/nginx.node-1.error.log\n\nprint(mara_storage.shell.read_file_command('gcs-bucket-1', file_name=file))\n# -> gsutil cat gs://my_data_lake_bucket_1/my_domain.com/logs/2020/11/15/nginx.node-1.error.log\n```\n\nThe function `write_file_command` creates a shell command that receives a data on stdin and writes it to the storage:\n\n```python\nimport mara_storage.shell\n\ncommand = 'echo \"Hello World!\"'\ncommand += ' | '\ncommand += mara_storage.shell.write_file_command('data', file_name='hello-world.txt')\n\nprint(command)\n# -> echo \"Hello World!\" | cat - > /mara/data/hello-world.txt\n```\n\nFinally, `delete_file_command` creates a shell command that deletes a file from the local storage:\n\n```python\nimport mara_storage.shell\n\nprint(mara_storage.shell.delete_file_command('data', file_name='hello-world.txt'))\n# -> rm -f /mara/data/hello-world.txt\n```\n\n&nbsp;\n\n\nThe following **command line clients** are used to access the various databases:\n\n| Storage | Client binary | Comments |  \n| --- | --- | --- |\n| Local storage | unix shell | Included in standard distributions. |\n| SFTP storage | `sftp`, `curl` |  |\n| Google Cloud Storage | `gsutil` | From [https://cloud.google.com/storage/docs/gsutil_install](https://cloud.google.com/storage/docs/gsutil_install). |\n| Azure Storage | `azcopy`, `curl` | From [https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10](https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10)\n\n&nbsp;\n\n\nInstallation\n------------\nTo use the library directly, use pip:\n\n```bash\npip install mara-storage\n```\n\nor\n\n```\npip install git+https://github.com/mara/mara-storage.git\n```\n\n## Links\n\n* Documentation: https://mara-storage.readthedocs.io/\n* Changes: https://mara-storage.readthedocs.io/en/latest/changes.html\n* PyPI Releases: https://pypi.org/project/mara-storage/\n* Source Code: https://github.com/mara/mara-storage\n* Issue Tracker: https://github.com/mara/mara-storage/issues\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mara/mara-storage",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mara-storage",
    "package_url": "https://pypi.org/project/mara-storage/",
    "platform": null,
    "project_url": "https://pypi.org/project/mara-storage/",
    "project_urls": {
      "Homepage": "https://github.com/mara/mara-storage",
      "Source Code": "https://github.com/mara/mara-storage"
    },
    "release_url": "https://pypi.org/project/mara-storage/1.1.0/",
    "requires_dist": [
      "click",
      "azure-storage-blob ; extra == 'azure-blob'",
      "google-cloud-storage ; extra == 'google-cloud-storage'",
      "google-oauth ; extra == 'google-cloud-storage'",
      "pysftp ; extra == 'sftp'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Configuration of storage connections for mara",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16979329,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aaeae0cf75fff067a83362f5d83ae0d1df44a18d2c8242be0b1b88ca844d1807",
        "md5": "a6489509f9980f4c84b77c48cc17281e",
        "sha256": "ae7debf0b57a4009af317e8258a3f48d99310f4aad75e68838603440489a8d11"
      },
      "downloads": -1,
      "filename": "mara_storage-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6489509f9980f4c84b77c48cc17281e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15176,
      "upload_time": "2023-02-22T17:05:48",
      "upload_time_iso_8601": "2023-02-22T17:05:48.716890Z",
      "url": "https://files.pythonhosted.org/packages/aa/ea/e0cf75fff067a83362f5d83ae0d1df44a18d2c8242be0b1b88ca844d1807/mara_storage-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34735e71d76a4248f2edb8d653aa49086409c0f63ffa273262815e687c5ea2e0",
        "md5": "c85bd433092ca4e2b38b2543c3c08a00",
        "sha256": "ccddeef05b294af9d3d8ba28666e473cba8af60d2a99d40ad502f85d837eb1f0"
      },
      "downloads": -1,
      "filename": "mara-storage-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c85bd433092ca4e2b38b2543c3c08a00",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15044,
      "upload_time": "2023-02-22T17:05:50",
      "upload_time_iso_8601": "2023-02-22T17:05:50.274737Z",
      "url": "https://files.pythonhosted.org/packages/34/73/5e71d76a4248f2edb8d653aa49086409c0f63ffa273262815e687c5ea2e0/mara-storage-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}