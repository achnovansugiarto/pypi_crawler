{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![PyPi version](https://img.shields.io/pypi/v/dm-cli)](https://pypi.org/project/dm-cli)\n[![PyPi downloads](https://img.shields.io/pypi/dm/dm-cli)](https://pypi.org/project/dm-cli)\n![Visitors](https://api.visitorbadge.io/api/visitors?path=equinor%2Fdm-cli&countColor=%23263759&style=flat)\n\n# Data Modelling CLI Tool\n\n## Requirements\nThis package requires Python >=3.8\n\n## Installing\nTo install this CLI tool you can run the below command\n```sh\n$ pip3 install dm-cli\n```\n\nAlternatively, you clone this repo and then run this command from within the repository folder\n```sh\n$ pip3 install .\n```\n\nBoth the above commands would install the package globally and `dm` will be available on your system.\n\n## Usage\n\n```txt\n$ dm --help\nUsage: dm [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n--version         Show the version and exit.\n-t, --token TEXT  Token for authentication against DMSS.\n-u, --url TEXT    URL to the Data Modelling Storage Service (DMSS).\n-h, --help        Show this message and exit.\n\nCommands:\ncreate-lookup             Create a named Ui-/StorageRecipe-lookup-table...\nds                        Subcommand for working with data sources\nentity                    Subcommand for working with entities\nimport-plugin-blueprints  Import blueprints from a plugin into the...\ninit                      Initialize the data sources and import all...\npkg                       Subcommand for working with packages\nreset                     Reset all data sources (deletes and reuploads...\n```\n\nFor each of the `commands` listed above, you can run `dm <COMMAND> --help` to see subcommand-specific help messages, e.g. `dm ds import --help` or `dm pkg --help`\n\n### Expected directory structure\nCertain commands expect a specific directory structure, such as the commands `dm reset`, `dm init`, and `dm ds reset`.\nFor these commands, the `path` argument must be the path to a directory with two subdirectories, `data_sources` and `data`.\n\n```sh\n$ tree app\napp\n├── data\n  └── DemoApplicationDataSource\n    ├── instances\n│     └── demoApplication.json\n|     └── models\n|       └── DemoApplication.json\n└── data_sources\n    └── DemoApplicationDataSource.json\n```\n\nTo add meta information to a package (for example to the models root package), a file with name \"package.json\" can be placed inside the folder.\n\n\n### Supported reference syntax\nThe CLI tool will understand and resolve these kind of type reference schemas during import.\nAll values with one of these keys; `(\"type\", \"attributeType\", \"extends\", \"_blueprintPath_\")` will be evaluated for resolution.\n\n```bash\n# URI - Full absolute path prefixed with protocol\ndmss://datasource/package/entity\ndmss://datasource/package/subfolder/entity\n\n# Alias - Require dependencies to be defined somewhere in the source tree\nALIAS:packge/entity\nALIAS:entity\n\n# Data Source - Relative from the destination data source\n/package/entity\n/package/subfolder/entity\n\n# Package - Relative from the source package\nentity\nsubfolder/entity\n\n# Dotted - Relative from the file (UNIX directory traversal)\n./../entity\n../subfolder/entity\n../../subfolder/entity\n```\n\n### General\nInitialize the data sources\n\n*i.e. import datasources and their packages*\n\n```sh\n$ dm init [<path>]\n# By default, the `PATH` argument is set to the current working directory\n$ dm init\n# Optionally specify a path to the directory containing data sources and data\n$ dm init app/\n```\n\nReset all data sources\n\n*i.e. delete all datasources and packages, before reuploading them*\n\n```sh\n# Reset all datasources and their packages\n$ dm reset [<path>]\n# By default, the `path` argument is set to the current working directory\n$ dm reset\n# Optionally specify a path to the directory containing data sources and data\n$ dm reset app/\n```\n\n### Datasources\nImport a datasource\n\n```sh\n# Import a datasource, where <path> is the path to a data source definition (JSON)\n$ dm ds import <path>\n$ dm ds import app/data_sources/DemoApplicationDataSource.json\n```\n\nImport all datasources\n\n```sh\n# Import all datasources found in the directory given by 'path'\n$ dm ds import-all <path>\n$ dm ds import-all app/data_sources\n```\n\nReset a datasource\n\n*i.e. reset the given data source, deleting all packages and reuploading them*\n\n```sh\n$ dm ds reset <data_source> [<path>]\n# By default, the `path` argument is set to the current working directory\n$ dm ds reset DemoApplicationDataSource\n# Optionally specify a path to the directory containing data sources and data\n$ dm ds reset DemoApplicationDataSource app/\n```\n\n### Plugin blueprints\nImport blueprints from a plugin into the default plugin blueprint path (`system/Plugins/<plugin-name>)\n\n```shell\ndm import-plugin-blueprints ./node_modules/@development-framework/dm-core-plugins\n```\n> Note that this is the same as;\n> `dm entity import ./node_modules/@development-framework/dm-core-plugins/blueprints/ system/Plugins/dm-core-plugins`\n\n\n### Packages\nImport a package\n> Note that importing a package will delete any preexisting package with the same name, if present in DMSS\n\n```sh\n# Import the package <path> to the given data source\n$ dm pkg import <path> <data_source>\n# Import the package 'models' from app/data/DemoApplicationDataSource'\n$ dm pkg import app/data/DemoApplicationDataSource/models DemoApplicationDataSource\n```\n\nImport all packages\n\n```sh\n# Import all packages found in the directory given by <path>\n$ dm pkg import-all <path> <data_source>\n# Import all packages in 'app/data/DemoApplicationDataSource'\n$ dm pkg import-all app/data/DemoApplicationDataSource DemoApplicationDataSource\n```\n\n\nExporting packages and single documents\n```sh\n# export document(s) by a given <data_source>/<path>\n$ dm pkg export <data_source>/<path>\n$ dm pkg export <data_source>/<path> <destination_path>\n$ dm pkg export <data_source>/<path> <destination_path> --unpack\n\n# Export all documents in 'DemoApplicationDataSource/models/CarPackage'\n$ dm pkg export DemoApplicationDataSource/models/CarPackage\n```\n\nOptional arguments and flags:\n<destination_path> : specifies where to save the downloaded file(s) on the local disk\nunpack: whether or not to unpack the zip file\n\nDelete a package\n\n```sh\n# Delete the package from the datasource in DMSS\n$ dm pkg delete <data_source> <package_name>\n# Delete the package 'models' from 'DemoApplicationDataSource'\n$ dm pkg delete DemoApplicationDataSource models\n```\n\nDelete all packages\n> Note that this will only delete packages which are present in the directory <path>, so any package present in DMSS but absent in the given directory will not be removed.\n\n```sh\n# Delete all packages found in the directory given by <path>\n$ dm pkg delete-all <data_source> <path>\n$ dm pkg delete-all DemoApplicationDataSource app/data/DemoApplicationDataSource\n```\n\n### Entities\n\nUpload a single entity\n\n```sh\n$ dm entity import <local_path> <destination_path>\n```\n\n### Recipe Lookup\nCreate a named Ui-/StorageRecipe Lookup table from a package. Tell DMSS to look through a package,\ngather all RecipeLinks, and create a named lookup from that. The lookup can be used to associate recipes with an application.\n\n```sh\ndm create-lookup myApplicationName path/To/A/Package/With/RecipeLinks\n```\n\n## Development\n> You need to have DMSS running locally.\n\n```sh\n$ python3 -m venv .venv\n$ source .venv/bin/activate\n$ pip3 install -e .\n$ dm init\n```\n\n### Generating the DMSS API client\nThe DMSS API client, found in [`dm_cli/dmss_api/`](./dm_cli/dmss_api/), can be regenerated by running the script [`generate-dmss-api.sh`](./generate-dmss-api.sh). Note that an instance of DMSS must be running locally prior to executing the script.\n\n```bash\n./generate-dmss-api.sh\n```\n\n> NB: Due to incorrect import paths in the generated API client, you must do a search and replace after generating the new client. Replace all occurrences of '`from dmss_api`' with '`from dm_cli.dmss_api`' in all files under `dm_cli/dmss_api/`\n\n### Testing\n\n1. Install the dependencies: `pip3 install -r requirements.txt`\n2. Install the dev dependencies: `pip3 install -r dev-requirements.txt`\n3. Run the tests: `pytest`\n\n## Feedback\nPlease feel free to leave feedback in issues/PRs.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/equinor/dm-cli",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dm-cli",
    "package_url": "https://pypi.org/project/dm-cli/",
    "platform": null,
    "project_url": "https://pypi.org/project/dm-cli/",
    "project_urls": {
      "Homepage": "https://github.com/equinor/dm-cli"
    },
    "release_url": "https://pypi.org/project/dm-cli/1.0.5/",
    "requires_dist": [
      "pyperclip (>=1.8.2)",
      "requests (>=2.28.1)",
      "emoji (>=2.0.0)",
      "progress (>=1.6)",
      "frozendict (>=2.3.4)",
      "typing-extensions (>=4.4.0)",
      "python-dateutil (>=2.8.2)",
      "typer[all] (>=0.7.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17478108,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35acb683fd8bdacdfb0d4fdd97432aa63477cd238d912eb2199f21ff3c2f30e7",
        "md5": "1b760503aa75b7ba53009f23d8d202b5",
        "sha256": "356ca829351e85e728dc2690ff9d06f97f10c3950e1ae1ba1286a4f3faf8d7b9"
      },
      "downloads": -1,
      "filename": "dm_cli-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b760503aa75b7ba53009f23d8d202b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 139400,
      "upload_time": "2023-03-28T13:06:32",
      "upload_time_iso_8601": "2023-03-28T13:06:32.794554Z",
      "url": "https://files.pythonhosted.org/packages/35/ac/b683fd8bdacdfb0d4fdd97432aa63477cd238d912eb2199f21ff3c2f30e7/dm_cli-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dfaaabb6de8b1f25d86f6eecdf0bc3354a625fc3a7cea5998d6a10d04f40e5d",
        "md5": "6134972862973a82372773028b6f7525",
        "sha256": "1b36d72421bb404f347e10469f1a0f197918f36c513cf0c7ff4113a9c4dab268"
      },
      "downloads": -1,
      "filename": "dm-cli-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6134972862973a82372773028b6f7525",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 75744,
      "upload_time": "2023-03-28T13:06:34",
      "upload_time_iso_8601": "2023-03-28T13:06:34.634673Z",
      "url": "https://files.pythonhosted.org/packages/2d/fa/aabb6de8b1f25d86f6eecdf0bc3354a625fc3a7cea5998d6a10d04f40e5d/dm-cli-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}