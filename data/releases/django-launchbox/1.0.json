{
  "info": {
    "author": "Jet Propulsion Laboratory",
    "author_email": "Scott Cranfill <scott.cranfill@jpl.nasa.gov>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Launchbox Helper for Django\n\nA plugin for your Django app to assist in integrating with [Launchbox](https://github.com/nasa-jpl/launchbox).\n\n\n---\n\n## Features\n\nThe plugin currently offers the following features:\n\n- A helper class for easier configuration of settings for resources provided by Launchbox,\n  like databases, caches, and storage buckets\n- A class for querying an identity service provided by a Launchbox plugin\n- An API for Launchbox to get information from your application so that\n  it can display, or even change, that info within the Launchbox Management Dashboard\n\n### Planned features\n\n- Integrations with other Launchbox plugin types â€“ authentication and SSL certificate management\n\n\n## Installation\n\nThese steps assume that you have already added a `launch.yaml` file to your application.\nFor more information on that, [visit the Launchbox docs](https://nasa-jpl.github.io/launchbox/features/services/).\n\n1. Add `django-launchbox` to your project's requirements and install it.\n2. Add `\"launchbox\"` to your `INSTALLED_APPS` setting like this:\n   ```python\n   INSTALLED_APPS = [\n       \"launchbox\",\n       ...\n   ]\n   ```\n3. Update your Django settings to use the database provided by Launchbox:\n   ```python\n   from launchbox import LBResources\n   \n   DATABASES = {\n       # \"db\" is the resource identifier specified in your launch.yaml file\n       \"default\": LBResources().settings(\"db\")\n   }\n   ```\n   - If you configured a cache or storage bucket in your `launch.yaml` file,\n     update those settings, too:\n     ```python\n     from launchbox import LBResources\n     \n     CACHES = {\n         # \"cache\" is the resource identifier specified in your launch.yaml file\n         \"default\": LBResources().settings(\"cache\")\n     }\n     \n     # AWS_STORAGE_BUCKET_NAME is a django-storages setting\n     # \"storage\" is the resource identifier specified in your launch.yaml file\n     AWS_STORAGE_BUCKET_NAME = LBResources().settings(\"storage\") \n   ```\n4. If you want to manage users in the Launchbox dashboard,\n   add the `LB_USER_ATTRIBUTES` setting to specify which user model fields\n   and properties you want to log and validate:\n   ```python\n   LB_USER_ATTRIBUTES = [\n       \"first_name\",\n       \"last_name\",\n       \"middle_initial\",\n       \"display_name\",\n       \"email\",\n       \"admin_access\",\n       \"is_active\",\n       \"is_editor\",\n       \"is_moderator\",\n       \"is_owner\",\n       \"is_superuser\",\n   ]\n   ```\n   And then add the Launchbox bridge API URLs to the `urlpatterns` in your project's `urls.py`:\n   ```python\n   # Launchbox Service Bridge API\n   path(\"bridge/\", include(\"launchbox.api.urls\")),\n   ```\n\n\n## Working with Launchbox plugins\n\n### Identity providers\n\nUse the `LBIdendity` class to query an identity service provided by a Launchbox plugin.\nFor all examples given below, be sure you have imported the class with:\n\n```python\nfrom launchbox import LBIdentity\n```\n\nYou will need to know a plugin's `plugin_id` (an identifier internal to Launchbox) to work with it.\n\n#### Get a specific user\n\nTo get a user's details when you know their exact user ID within the identity database, use the `user.get()` method:\n\n```python\nuser_details = LBIdentity(\"plugin_id\").user.get(\"user_id\")\n```\n\n#### Search for a user with partial matching\n\nTo search for a user when you aren't certain of their user ID, use the `user.search()` method:\n\n```python\nuser_details = LBIdentity(\"plugin_id\").user.search(\"user_id\")\n```\n\n#### Get the groups a user belongs to\n\nFor identity providers that can place users into groups,\nyou can get a list of a user's groups with the `user.groups()` method:\n\n```python\nuser_groups = LBIdentity(\"plugin_id\").user.groups(\"user_id\")\n```\n\n#### Get group details\n\nTo get the details of a group, use the `group.get()` method:\n\n```python\ngroup_details = LBIdentity(\"plugin_id\").group.get(\"group_id\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nasa-jpl/django-launchbox",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-launchbox",
    "package_url": "https://pypi.org/project/django-launchbox/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-launchbox/",
    "project_urls": {
      "Bug Tracker": "https://github.com/nasa-jpl/django-launchbox/issues",
      "Homepage": "https://github.com/nasa-jpl/django-launchbox"
    },
    "release_url": "https://pypi.org/project/django-launchbox/1.0/",
    "requires_dist": [
      "Django (>=3.2)",
      "requests (>=2.28.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "A plugin for your Django app to assist in integrating with Launchbox.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15453529,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ecb252b032ddef803ab54f5c71f7ea3d32cecf9415a79e881503df4ae03eca6",
        "md5": "cd3b64f0ec9a02a812eb8253c44d54c8",
        "sha256": "ec9e1ce3165aca1c3fdef07d1573bd1837e12ed9b4f5e08286bdac894bea829c"
      },
      "downloads": -1,
      "filename": "django_launchbox-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd3b64f0ec9a02a812eb8253c44d54c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10054,
      "upload_time": "2022-10-18T20:18:23",
      "upload_time_iso_8601": "2022-10-18T20:18:23.357800Z",
      "url": "https://files.pythonhosted.org/packages/1e/cb/252b032ddef803ab54f5c71f7ea3d32cecf9415a79e881503df4ae03eca6/django_launchbox-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be28318eb29544bceba12592cc96d29268a92650979534044df6c49faef1fac1",
        "md5": "dafde2275907213b5d7f716c49dc62f8",
        "sha256": "55afc073958075934f2cc2168e31ad34f729bb149d049b76158c8f7cb8e21132"
      },
      "downloads": -1,
      "filename": "django-launchbox-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dafde2275907213b5d7f716c49dc62f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8575,
      "upload_time": "2022-10-18T20:18:24",
      "upload_time_iso_8601": "2022-10-18T20:18:24.974841Z",
      "url": "https://files.pythonhosted.org/packages/be/28/318eb29544bceba12592cc96d29268a92650979534044df6c49faef1fac1/django-launchbox-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}