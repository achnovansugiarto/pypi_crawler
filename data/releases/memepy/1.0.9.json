{
  "info": {
    "author": "Julian Brandt",
    "author_email": "julianbrrandt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MemePy\n*Meme generator library for your everyday needs*\n\nPython meme generator originally made for the discord-chat-bot [HydroBot](https://github.com/julianbrandt/Hydrobot3), but migrated to its own package for increased modularity and ease of use.\n\n## How it works\n\nMemePy uses the Python Imaging Library *PIL* to edit existing templates of memes and return them to the user.\n\nMemePy has a list of defined `MemeImage` templates that are fed to a `MemeFactory`. The factory then produces an image with all the arguments, given by the user, pasted onto the image in the correct formats of the specific meme.\n\nIn addition to just text-based memes, MemePy also supports substituting the text-argument with an image. Just supply an image-link in `< ... >` angle brackets as an argument, and the text will be substituted for the image. ENDLESS POTENTIAL!!!\n\nThe available meme templates can be found in the [Image Library](Resources/ImageLibrary). The specifications of each meme template can be found in the [Meme Library](Resources/MemeLibrary). Where `builtin.JSON` is the place for default templates, and `extension.JSON` is where you can define your own templates.\n\n## Usage\n### Importing MemePy into your own project\n\nIf you wish to import the meme-generation functionality into your own project, usually all you will need can be found in [src.MemeGenerator.py](src/MemeGenerator.py). \n\n#### The functions available in this file are:\n\n* `save_meme_to_disk(template, path, args)`\n  * Generates a meme of the given template, with given args and saves it to disk at the given path.\n* `get_meme_image(template, args)`\n  * Generates a meme of the given template, with given args and returns it as a `PIL`Image object. Used if you wanna pass an image to your own project instead of saving it.\n* `get_meme_image_bytes(template, args)`\n  * Generates a meme of the given template, with given args and returns it as a BytesIO object. This allows for treating the output image as a file, and thus making it possible to open as other objects (e.g. `discord.py File` objects).\n* `get_meme_factory(template, args)`\n  * Generates a meme factory with the given template and args. This exposes more of the specifications of the factory, in case you need more rich details.\n\n## Creating memes on the Command-Line\n\nUsing the command-line, you can generate images from templates and save them to disk.\n\n#### Generating a meme:\n\n```console\nMemePy <path> <template> <*args> <*options>\n```\n\n- __path__ is where on your computer you want to save the meme.\n\n- __template__ is the underlying template to use for the meme.\n\n- __\\*args__ are all arguments to be placed onto the template (either texts or images).\n\n- __\\*options__ are the options that modify behavior of the generation.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/julianbrandt/MemePy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MemePy",
    "package_url": "https://pypi.org/project/MemePy/",
    "platform": "",
    "project_url": "https://pypi.org/project/MemePy/",
    "project_urls": {
      "Homepage": "https://github.com/julianbrandt/MemePy"
    },
    "release_url": "https://pypi.org/project/MemePy/1.0.9/",
    "requires_dist": [
      "pillow",
      "requests"
    ],
    "requires_python": "",
    "summary": "Meme Generator for python",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9751889,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d380eddac205874e7cb4d7fe15639647c96b3417bda8007a645024df882bb8d9",
        "md5": "77d217e55ad9ac1c4ced020cbe2f657f",
        "sha256": "8d4252c4fd2ba87d2656df88cf2961ee1ca95e89f14298c73c5254d86e2dd829"
      },
      "downloads": -1,
      "filename": "MemePy-1.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77d217e55ad9ac1c4ced020cbe2f657f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1265073,
      "upload_time": "2020-02-18T19:35:35",
      "upload_time_iso_8601": "2020-02-18T19:35:35.869744Z",
      "url": "https://files.pythonhosted.org/packages/d3/80/eddac205874e7cb4d7fe15639647c96b3417bda8007a645024df882bb8d9/MemePy-1.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a016b8d9721e386f98fc045f65e2b5d3b796689b176dea11df629009fde2c57",
        "md5": "0dcd0014e1808ea03fc544cfa1bc7bcb",
        "sha256": "807fe1ac1bbb96aa848f12330133656aa469831d1c4ec9378ab9c53687ebcfcb"
      },
      "downloads": -1,
      "filename": "MemePy-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "0dcd0014e1808ea03fc544cfa1bc7bcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1262369,
      "upload_time": "2020-02-18T19:35:37",
      "upload_time_iso_8601": "2020-02-18T19:35:37.990161Z",
      "url": "https://files.pythonhosted.org/packages/2a/01/6b8d9721e386f98fc045f65e2b5d3b796689b176dea11df629009fde2c57/MemePy-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}