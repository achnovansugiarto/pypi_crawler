{
  "info": {
    "author": "Linets Development Team",
    "author_email": "dteam@linets.cl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Linets Bluexpress\n\n\n## Starting ðŸš€\n_These instructions will allow you to install the library in your django project._\n\n### Current features ðŸ“‹\n\n-   Generate order in Bluexpress.\n-   Generate default data for create order in Bluexpress.\n\n### Pre-requisitos ðŸ“‹\n\n-   Python >= 3.7\n-   Django >= 3\n-   zeep >= 4\n***\n## Installation ðŸ”§\n\n1. To get the latest stable release from PyPi:\n```\npip install django-bluexpress\n```\nor\n\n2. From a build\n```\ngit clone https://gitlab.com/linets/ecommerce/oms/integrations/oms-bluexpress\n```\n\n```\ncd {{project}} && git checkout develop\n```\n\n```\npython setup.py sdist\n```\nand, install in your project django\n```\npip install {{path}}/oms-bluexpress/dist/{{tar.gz file}}\n```\n\n3. Settings in django project\n\n```\nDJANGO_BLUEXPRESS = {\n    'BLUEXPRESS': {\n        'ISSUE_WSDL': '<BLUEXPRESS_ISSUE_WSDL>',\n        'TOKEN_ID': '<BLUEXPRESS_TOKEN_ID>',\n        'USER_COD': '<BLUEXPRESS_USER_COD>',\n        'COMPANY_CODE': '<BLUEXPRESS_COMPANY_CODE>',\n        'SHIPPING_TYPE': '<BLUEXPRESS_SHIPPING_TYPE>',\n        'PAYMENT_TYPE': '<BLUEXPRESS_PAYMENT_TYPE>',\n        'PRODUCT_CODE': '<BLUEXPRESS_PRODUCT_CODE>',\n        'CURRENCY_CODE': '<BLUEXPRESS_CURRENCY_CODE>',\n        'SERVICE_TYPE_CODE': '<BLUEXPRESS_SERVICE_TYPE_CODE>',\n        'PRODUCT_FAMILY_CODE': '<BLUEXPRESS_PRODUCT_FAMILY_CODE>',\n    },\n    'SENDER': {\n        'PERSON_CODE': '<BLUEXPRESS_PERSON_CODE>',\n        'ACCOUNT_CLIENT': '<BLUEXPRESS_ACCOUNT_CLIENT>',\n        'RUT': '<BLUEXPRESS_RUT>',\n        'DV': '<BLUEXPRESS_DV>',\n        'NAME': '<BLUEXPRESS_NAME>',\n        'STREET': '<BLUEXPRESS_STREET>',\n        'NUMBER': '<BLUEXPRESS_NUMBER>',\n        'FLOOR': '<BLUEXPRESS_FLOOR>',\n        'DPTO': '<BLUEXPRESS_DPTO>',\n        'PHONE_PREFIX': '<BLUEXPRESS_PHONE_PREFIX>',\n        'PHONE_NUMBER': '<BLUEXPRESS_PHONE_NUMBER>',\n        'PHONE_ANNEXED': '<BLUEXPRESS_PHONE_ANNEXED>',\n        'COUNTRY_CODE': '<BLUEXPRESS_COUNTRY_CODE>',\n        'REGION_CODE': '<BLUEXPRESS_REGION_CODE>',\n        'COMMUNE_CODE': '<BLUEXPRESS_COMMUNE_CODE>',\n        'LOCATION_CODE': '<BLUEXPRESS_LOCATION_CODE>'\n    },\n    'DESTINATARY': {\n        'PHONE_PREFIX': '<BLUEXPRESS_PHONE_PREFIX>',\n        'COUNTRY_CODE': '<BLUEXPRESS_COUNTRY_CODE>',\n    },\n}\n```\n\n## Usage ðŸ”§\n\n1. Generate default data for create a order in Bluexpress:\n```\nfrom bluexpress.handler import BluexpressHandler\n\nhandler = BluexpressHandler()\ndefault_data = handler.get_default_payload(instance)\n\nOutput:\n\n```\n\n2. Create a order in Bluexpress:\n```\nfrom bluexpress.handler import BluexpressHandler\n\nhandler = BluexpressHandler()\nresponse = handler.create_shipping(default_data)\n\nOutput:\n\n```\n\n3. Get events:\n```\nfrom bluexpress.handler import BluexpressHandler\n\nhandler = BluexpressHandler()\n\nraw_data = {\n    'carrier_tracking_number': int.\n    'tracking_data': xml string.\n}\nresponse = handler.get_events(raw_data)\n\nOutput:\n[{\n    'city': string\n    'state': string\n    'description': string\n    'date': string\n}, ...]\n```\n\n4. Get status and if \"is_delivered\":\n```\nfrom bluexpress.handler import BluexpressHandler\n\nhandler = BluexpressHandler()\n\nraw_data = {\n    'carrier_tracking_number': int.\n    'tracking_data': xml string.\n}\nresponse = handler.get_status(raw_data)\n\nOutput:\n('Entregado', True)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/linets/ecommerce/oms/integrations/oms-bluexpress/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-bluexpress",
    "package_url": "https://pypi.org/project/django-bluexpress/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-bluexpress/",
    "project_urls": {
      "Homepage": "https://gitlab.com/linets/ecommerce/oms/integrations/oms-bluexpress/"
    },
    "release_url": "https://pypi.org/project/django-bluexpress/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Django Bluexpress Integration",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16568851,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d6a6934cddeb0cd9d18057f65688604776e785a14212ac8f37e545dfe28bf7f",
        "md5": "599c521c2f865828ca79e933842870e7",
        "sha256": "5a6c84fe7f58695599e1bb90bc66d047b6d9b2b9b7a61c5e9a7b0f9c267fa80b"
      },
      "downloads": -1,
      "filename": "django-bluexpress-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "599c521c2f865828ca79e933842870e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6401,
      "upload_time": "2021-07-06T18:08:36",
      "upload_time_iso_8601": "2021-07-06T18:08:36.185000Z",
      "url": "https://files.pythonhosted.org/packages/0d/6a/6934cddeb0cd9d18057f65688604776e785a14212ac8f37e545dfe28bf7f/django-bluexpress-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}