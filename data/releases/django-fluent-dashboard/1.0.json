{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-fluent-dashboard\n=======================\n\nThe ``fluent_dashboard`` module offers a custom admin dashboard, built on top of\ndjango-admin-tools_ (`docs <https://django-admin-tools.readthedocs.io/>`_).\n\nThe django-admin-tools_ package provides a default mechanism to replace the standard Django\nadmin homepage with a widget based dashboard. The ``fluent_dashboard`` module extends this,\nby providing additional widgets (called \"modules\") such as:\n\n* a \"icon list\" module for the admin homepage.\n* a \"welcome\" module for the admin homepage.\n* a configurable module layout for the admin homepage, through ``settings.py``.\n* a \"return to site\" link.\n* an optional \"cache statistics\" module.\n\nDocumentation can be found at: https://django-fluent-dashboard.readthedocs.io/\n\nScreenshot\n==========\n\n.. image:: https://github.com/edoburu/django-fluent-dashboard/raw/master/docs/images/dashboard.png\n   :width: 1030px\n   :height: 715px\n   :alt: django-fluent-dashboard preview\n\nInstallation\n============\n\nFirst install the module, preferably in a virtual environment. It can be installed from PyPI::\n\n    pip install django-fluent-dashboard\n\nOr the current folder can be installed::\n\n    pip install .\n\nConfiguration\n-------------\n\nAdd the following settings to ``settings.py``:\n\n.. code-block:: python\n\n    INSTALLED_APPS += (\n        'fluent_dashboard',\n\n        # enable the admin\n        'admin_tools',\n        'admin_tools.theming',\n        'admin_tools.menu',\n        'admin_tools.dashboard',\n        'django.contrib.admin',\n    )\n\n    ADMIN_TOOLS_INDEX_DASHBOARD = 'fluent_dashboard.dashboard.FluentIndexDashboard'\n    ADMIN_TOOLS_APP_INDEX_DASHBOARD = 'fluent_dashboard.dashboard.FluentAppIndexDashboard'\n    ADMIN_TOOLS_MENU = 'fluent_dashboard.menu.FluentMenu'\n\nNote that some ``admin_tools`` applications are optional,\nyet recommended to have the full experience of the module.\n\nAdd to ``urls.py``:\n\n.. code-block:: python\n\n    urlpatterns += [\n        url(r'^admintools/', include('admin_tools.urls')),\n    ]\n\nThe database tables for ``admin_tools`` can be created afterwards:\n\n.. code-block:: bash\n\n    ./manage.py migrate\n\nCustomizing the dashboard\n--------------------------\n\nAdding extra icons\n------------------\n\nThe ``FLUENT_DASHBOARD_APP_ICONS`` setting is a dictionary that allows you to define extra icons\nfor your own modules, and overwrite default settings. For example:\n\n.. code-block:: python\n\n    FLUENT_DASHBOARD_APP_ICONS = {\n        'auth/user': \"user.png\"\n    }\n\nThe icon is expected to be 48x48 pixels.\nThe icon name is treated in 3 different formats:\n\n* Absolute URLs are passed as-is.\n* Icon names with a `/` character, are relative to the ``STATIC_URL``.\n* Icon names without any path information, are relative to the current theme folder, e.g. `STATIC_URL`/fluent_dashboard/`themename`/\n\nOrganizing the application groups\n---------------------------------\n\nThe ``FLUENT_DASHBOARD_APP_GROUPS`` setting defines which applications are grouped.\nFor example:\n\n.. code-block:: python\n\n    FLUENT_DASHBOARD_APP_GROUPS = (\n        (_('CMS'), {\n            'models': (\n                'cms.*',\n                'pages.*',\n                'fiber.*',\n            ),\n            'module': 'CmsAppIconList',\n            'collapsible': False,\n        }),\n        (_('Interactivity'), {\n            'models': (\n                'django.contrib.comments.*',\n                'form_designer.*'\n                'threadedcomments.*',\n                'zinnia.*',\n            ),\n        }),\n        (_('Administration'), {\n            'models': (\n                'django.contrib.auth.*',\n                'django.contrib.sites.*',\n                'google_analytics.*',\n                'registration.*',\n            ),\n        }),\n        (_('Applications'), {\n            'models': ('*',),\n            'module': 'AppList',\n            'collapsible': True,\n        }),\n    )\n\nDetails about these options, and additional settings are explained in the documentation_.\n\nDisplaying cache status\n-----------------------\n\nThis application features optional support for the dashboardmods_ package,\nwhich can display cache statistics. It can be installed using::\n\n    pip install dashboardmods\n\nThe application requires the cache backends to be configured, for example:\n\n.. code-block:: python\n\n    INSTALLED_APPS += (\n        'dashboardmods',\n    )\n\n    # Example Memcache configuration:\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n            'KEY_PREFIX': 'mysite.production',\n            'LOCATION': '127.0.0.1:11211',\n            'TIMEOUT': 24*3600,\n        },\n    }\n\n    # Optional, example Varnish configuration:\n    VARNISH_MANAGEMENT_ADDRS = ('127.0.0.1:6082',)\n\nWhen a cache is not configured, it will simply not be displayed by the module.\n\n\nRelated applications\n--------------------\n\nThe following packages provide additional modules,\nwhich can be displayed at the dashboard:\n\n* django-admin-user-stats_ adds graphs to the dashboard, to see the number of registered users in the last month.\n* django-admin-tools-stats_ is derived from the previous package, and adds configurable graphs for any model type.\n* dashboardmods_ is detected to display cache statistics, but also features a configure RSS feed module.\n* django-admin-tools_ should not be forgotten, because it also provides modules for RSS feeds, link lists and tab grouping.\n\nThese modules can be integrated by subclassing the ``FluentIndexDashboard`` class,\nand point to that module with the ``ADMIN_TOOLS_INDEX_DASHBOARD`` setting.\n\nContributing\n------------\n\nThis module is designed to be generic. In case there is anything you didn't like about it,\nor think it's not flexible enough, please let us know. We'd love to improve it!\n\nIf you have any other valuable contribution, suggestion or idea,\nplease let us know as well because we will look into it.\nPull requests are welcome too. :-)\n\n\n.. _documentation: https://django-fluent-dashboard.readthedocs.io/\n.. _dashboardmods: https://github.com/callowayproject/dashboardmods\n.. _django-admin-tools: https://github.com/django-admin-tools/django-admin-tools\n.. _django-admin-tools-stats: https://github.com/Star2Billing/django-admin-tools-stats\n.. _django-admin-user-stats: https://github.com/kmike/django-admin-user-stats\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-fluent-dashboard/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-fluent-dashboard",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-fluent-dashboard",
    "package_url": "https://pypi.org/project/django-fluent-dashboard/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-fluent-dashboard/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-fluent-dashboard/zipball/master",
      "Homepage": "https://github.com/edoburu/django-fluent-dashboard"
    },
    "release_url": "https://pypi.org/project/django-fluent-dashboard/1.0/",
    "requires_dist": [
      "django-admin-tools (>=0.5.2)",
      "future (>=0.12.2)",
      "dashboardmods (>=0.2.2); extra == 'cachestatus'",
      "feedparser; extra == 'cachestatus'",
      "python-varnish; extra == 'cachestatus'"
    ],
    "requires_python": "",
    "summary": "An improved django-admin-tools dashboard for Django projects",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12047655,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab9ad0cd8ce877cfd26a1dfca79fadc1da2af14332e1e1134f905d87641945f6",
        "md5": "f6ef5b8e585248d8f18eb28cc5d83332",
        "sha256": "80360f03cbdf61240a6e7b67537ec6015e8b20211d12afc0847759c87b52e2a0"
      },
      "downloads": -1,
      "filename": "django_fluent_dashboard-1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6ef5b8e585248d8f18eb28cc5d83332",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 421576,
      "upload_time": "2018-02-05T14:55:21",
      "upload_time_iso_8601": "2018-02-05T14:55:21.487267Z",
      "url": "https://files.pythonhosted.org/packages/ab/9a/d0cd8ce877cfd26a1dfca79fadc1da2af14332e1e1134f905d87641945f6/django_fluent_dashboard-1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26f5cece548463cd902d5ab5547ca986da8361b40d7a921099d107f62d32fa3a",
        "md5": "3ca926dab773d0247076673d658453b2",
        "sha256": "ba99e9d8814717fbc7cec2dac12ad1a5b1d18c18e356d26b580472270af0849e"
      },
      "downloads": -1,
      "filename": "django_fluent_dashboard-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ca926dab773d0247076673d658453b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 421571,
      "upload_time": "2018-01-22T12:38:25",
      "upload_time_iso_8601": "2018-01-22T12:38:25.325089Z",
      "url": "https://files.pythonhosted.org/packages/26/f5/cece548463cd902d5ab5547ca986da8361b40d7a921099d107f62d32fa3a/django_fluent_dashboard-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33cf78bca520965bf1abbdefb3edfe46eacba43289541ebfb6b52fce896c2047",
        "md5": "548816d182448597de5fdce8b85fe763",
        "sha256": "3b701bb72b2989080885cd859778ad5f8781401ea1caeeb2730b8b2ca472d23c"
      },
      "downloads": -1,
      "filename": "django-fluent-dashboard-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "548816d182448597de5fdce8b85fe763",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 376745,
      "upload_time": "2018-01-22T12:38:27",
      "upload_time_iso_8601": "2018-01-22T12:38:27.867322Z",
      "url": "https://files.pythonhosted.org/packages/33/cf/78bca520965bf1abbdefb3edfe46eacba43289541ebfb6b52fce896c2047/django-fluent-dashboard-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}