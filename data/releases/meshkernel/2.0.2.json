{
  "info": {
    "author": "Julian Hofer, Prisca van der Sluis, Luca Carniato",
    "author_email": "julian.hofer@deltares.nl, prisca.vandersluis@deltares.nl, luca.carniato@deltares.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# MeshKernelPy\n\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=Deltares_MeshKernelPy&metric=alert_status)](https://sonarcloud.io/dashboard?id=Deltares_MeshKernelPy)\n[![PyPI version](https://badge.fury.io/py/meshkernel.svg)](https://badge.fury.io/py/meshkernel)\n\n`MeshKernelPy` is a library for creating and editing meshes.\nIt supports 1D and 2D unstructured meshes.\nSupport for curvilinear meshes is planned.\nThe underlying C++ library `MeshKernel` can be found [here](https://github.com/Deltares/MeshKernel).\n\n# Installation\n\n## Windows\n\nThe library can be installed from PyPI by executing\n\n```bash\npip install meshkernel\n```\n\nIf you encounter any issues importing the pip wheels on Windows, you may need to install the [Visual C++ Redistributable for Visual Studio 2019](https://docs.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170).\n\n## Linux\n\nCurrently, we only offer wheels specific to Deltares' CentOS machines.\nWe plan to release a manylinux wheel at PyPI in the future. \n\n# Examples\n\n## Creating a triangular mesh inside a polygon\n\nIn this example a mesh is created by discretizing the polygon perimeter with the desired edge length.\n\n![](https://raw.githubusercontent.com/Deltares/MeshKernelPy/main/docs/images/TriangularMeshInPolygon.jpg)\n\n## Mesh orthogonalization\n\nFinite volume staggered flow solvers require the mesh to be as much orthogonal as possible. \nMeshKernel provides an algorithm to adapt the mesh and achieve a good balance between mesh orthogonality and smoothness.\n\n![](https://raw.githubusercontent.com/Deltares/MeshKernelPy/main/docs/images/MeshOrthogonalization.jpg)\n\n## Mesh refinement\n\nA mesh can be refined in areas based on samples or polygon selections. \n\n![](https://raw.githubusercontent.com/Deltares/MeshKernelPy/main/docs/images/GridRefinement.jpg)\n\n# License\n\n`MeshKernelPy` uses the MIT license.\nHowever, the wheels on PyPI bundle the LGPL licensed [MeshKernel](https://github.com/Deltares/MeshKernel).\nPlease make sure that this fits your needs before depending on it.\n\n\n# Contributing\n\nIn order to install `MeshKernelPy` locally, please execute the following line inside your virtual environment\n\n```bash\npip install -e \".[tests, lint, docs]\"\n```\n\nThen add a compiled `MeshKernelApi.dll` into your `src` folder.\n\nAlso make sure that your editor is configured to format the code with [`black`](https://black.readthedocs.io/en/stable/) and [`isort`](https://pycqa.github.io/isort/).\nWhen modifying `Jupyter` notebooks, the [`jupyterlab-code-formatter`](https://jupyterlab-code-formatter.readthedocs.io/en/latest/installation.html) can be used.\n\n# Building linux wheels\n\nTo deploy Linux wheels to PyPI, we provide a Docker image that is based on manylinux2014_x86_64. \nThis image includes cmake and boost, which are necessary for compiling the native MeshKernel library (written in C++). \nTo build the Docker image, please follow these steps:\n\n```powershell\ncd scripts\ndocker build --progress=plain ./scripts -t build_linux_library\ncd ..\n```\n\nOnce the Docker image has been built, build the linux wheels using the following command:\n\n```powershell\ndocker run -v %cd%:/root --rm build_linux_library \n```\n\nThe deployable linux wheels will be located in dist/wheelhouse\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Deltares/MeshKernelPy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshkernel",
    "package_url": "https://pypi.org/project/meshkernel/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/meshkernel/",
    "project_urls": {
      "Homepage": "https://github.com/Deltares/MeshKernelPy"
    },
    "release_url": "https://pypi.org/project/meshkernel/2.0.2/",
    "requires_dist": [
      "numpy",
      "sphinx ; extra == 'docs'",
      "sphinx-book-theme ; extra == 'docs'",
      "myst-nb ; extra == 'docs'",
      "flake8 ; extra == 'lint'",
      "black ; extra == 'lint'",
      "isort ; extra == 'lint'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "nbval ; extra == 'tests'",
      "matplotlib ; extra == 'tests'"
    ],
    "requires_python": ">=3.8",
    "summary": "`meshkernel` is a library which can be used to manipulate meshes.",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17287358,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06656957b53484b33ceb03870878883946d314210fb7857ef87cbf8ca81e16bd",
        "md5": "ad04326a51976da64fae716a3f5805da",
        "sha256": "710b5541d0d67eafc3b75bbf9e7fa944430a3d9f57a9779c88431f977d99dc89"
      },
      "downloads": -1,
      "filename": "meshkernel-2.0.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ad04326a51976da64fae716a3f5805da",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 522663,
      "upload_time": "2023-03-14T13:05:56",
      "upload_time_iso_8601": "2023-03-14T13:05:56.362879Z",
      "url": "https://files.pythonhosted.org/packages/06/65/6957b53484b33ceb03870878883946d314210fb7857ef87cbf8ca81e16bd/meshkernel-2.0.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d66b2812f53d81d178c32afaf7cb686021c3e009fcf8c18002601812dc6b84e",
        "md5": "bc6a305b2d73c0ef0a64ea6f36c3c9af",
        "sha256": "04a200ebe2a9302f15128cb8ce29f0267e323d0941e3b2612a7369f25ff85738"
      },
      "downloads": -1,
      "filename": "meshkernel-2.0.2-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "bc6a305b2d73c0ef0a64ea6f36c3c9af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 362130,
      "upload_time": "2023-03-14T13:05:58",
      "upload_time_iso_8601": "2023-03-14T13:05:58.491461Z",
      "url": "https://files.pythonhosted.org/packages/1d/66/b2812f53d81d178c32afaf7cb686021c3e009fcf8c18002601812dc6b84e/meshkernel-2.0.2-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37219037f07ecdd0cb962f0d0c0922d3b01338e98cadaaa8fd2f7eff4ad1c0b7",
        "md5": "79bf86d7b8bf695889b4efa7e51d90c3",
        "sha256": "17565ea786d1247b6070f3c63df3a40b008b7a0d9b97e917bcd1674b42cf670f"
      },
      "downloads": -1,
      "filename": "meshkernel-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "79bf86d7b8bf695889b4efa7e51d90c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 364119,
      "upload_time": "2023-03-14T13:06:00",
      "upload_time_iso_8601": "2023-03-14T13:06:00.713079Z",
      "url": "https://files.pythonhosted.org/packages/37/21/9037f07ecdd0cb962f0d0c0922d3b01338e98cadaaa8fd2f7eff4ad1c0b7/meshkernel-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}