{
  "info": {
    "author": "Laurent Modolo",
    "author_email": "laurent.modolo@ens-lyon.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# IDR\n\nThis tool is designed to compute the Irreproducible Discovery Rate (IDR)\nfrom NarrowPeaks files for two or more replicates.\nIt’s an implementation of the method described in the following paper using\nGaussian copula.\n\n> LI, Qunhua, BROWN, James B., HUANG, Haiyan, et al. Measuring reproducibility\n> of high-throughput experiments. The annals of applied statistics, 2011,\n> vol. 5, no 3, p. 1752-1779. doi:10.1214/11-AOAS466\n\nThe default method for the IDR computation is the one developped in the \nfollowing paper using Archimedean copula.\n\n> Measuring Reproducibility of High-Throughput Deep-Sequencing Experiments \n> Based on Self-adaptive Mixture Copula. Part of the Lecture Notes in Computer\n> Science book series (LNCS, volume 7818) PAKDD 2013: Advances in Knowledge \n> Discovery and Data Mining p 301-313, isbn: 978-3-642-37453-1\n\nAll the estimators for multivariate Archimedean copula are implemented from the \ntwo following papers:\n\n> Likelihood inference for Archimedean copulas in high dimensions under known\n> margins, Journal of Multivariate Analysis, 2012, p133-150, \n> doi:10.1016/j.jmva.2012.02.019\n\n> Archimedean Copulas in High Dimensions: Estimators and Numerical Challenges\n> Motivated by Financial Applications | Journal de la Société Française de\n> Statistique, Vol. 154 No. 1 (2013), ISSN: 2102-6238\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your\nlocal machine for development and testing purposes.\n\n### Prerequisites\n\nTo run **midr** on your computer you need to have python (>= 3) installed.\n\n```sh\npython3 --version\n```\n\n### Installing\n\nTo easily install **midr** on your computer using `pip` run the following command:\n\n```\npip3 install midr\n```\n\nOtherwise you can clone this repository:\n\n```\ngit clone git@gitbio.ens-lyon.fr:/LBMC/sbdm/midr.git\ncd midr/src/\npython3 setup.py install\n```\n\nGiven a list of peak calls in NarrowPeaks format and the corresponding peak\ncall for the merged replicate. This tool computes and appends a IDR column to\nNarrowPeaks files.\n\n### Dependencies\n\nThe **idr** package depends on the following python3 library:\n\n- [scipy>=1.3](https://scipy.org) [DOI:10.1109/MCSE.2007.58](https://doi.org/10.1109/MCSE.2007.58) [DOI:10.1109/MCSE.2011.36](https://doi.org/10.1109/MCSE.2011.36)\n\n> Travis E. Oliphant. Python for Scientific Computing, Computing in Science &\n> Engineering, 9, 10-20 (2007), DOI:10.1109/MCSE.2007.58\n\n> K. Jarrod Millman and Michael Aivazis. Python for Scientists and Engineers,\n> Computing in Science & Engineering, 13, 9-12 (2011),\n> DOI:10.1109/MCSE.2011.36\n\n\n- [numpy>=1.16](https://numpy.org/) [DOI:10.1109/MCSE.2011.37](https://doi.org/10.1109/MCSE.2010.118)\n\n> Travis E, Oliphant. A guide to NumPy, USA: Trelgol Publishing, (2006).\n\n> Stéfan van der Walt, S. Chris Colbert and Gaël Varoquaux. The NumPy Array:\n> A Structure for Efficient Numerical Computation, Computing in Science &\n> Engineering, 13, 22-30 (2011), DOI:10.1109/MCSE.2011.37\n\n- [matplotlib>=3.1](https://github.com/matplotlib/matplotlib/tree/v3.1.1) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3264781.svg)](https://doi.org/10.5281/zenodo.3264781)\n\n>  J. D. Hunter, \"Matplotlib: A 2D Graphics Environment\",\n> Computing in Science & Engineering, vol. 9, no. 3, pp. 90-95, 2007.\n\n- [pandas>=0.25.0](https://pandas.pydata.org)\n> McKinney. Data Structures for Statistical Computing in Python, Proceedings\n> of the 9th Python in Science Conference, 51-56 (2010) [(publisher link)](http://conference.scipy.org/proceedings/scipy2010/mckinney.html)\n\n- [pynverse>=0.1](https://pypi.org/project/pynverse/)\n\n- [mpmath>=1.1.0](http://mpmath.org/)\n- [cython>=0.28.0](https://cython.org/)\n\n## Usage\n\n**idr** Takes as input file in the [NarrowPeaks format](https://genome.ucsc.edu/FAQ/FAQformat.html#format12),\nand output NarrowPeaks files with an additional *idr* column.\n\nComputing *IDR* between three replicates\n\n```\n$ midr -m merged_peak_calling.NarrowPeaks \\\n     -f replicate1_.NarrowPeaks replicate2.NarrowPeaks replicate3.NarrowPeaks \\\n     -o results\n```\n\nWhere `replicate1_.NarrowPeaks` is the output of the peak caller on the \nalignment file corresponding to the first replicate and \n`merged_peak_calling.NarrowPeaks` is the output of the peak caller on the merge\nof the replicates alignment files.\n`Results` are the directory where we want to output our results.\n\nDisplaying help:\n\n```\n$ midr -h\nusage: midr [-h] [--merged FILE] [--files FILES [FILES ...]] [--output DIR] [--score SCORE_COLUMN] [--threshold THRESHOLD] [--merge_function MERGE_FUNCTION] [--size SIZE_MERGE] [--nodrop] [--method METHOD]\n            [--cpu CPU] [--debug] [--verbose] [--matrix FILE]\n\nCompute the Irreproducible Discovery Rate (IDR) from NarrowPeaks files\n\nImplementation of the IDR methods for two or more replicates.\n\nLI, Qunhua, BROWN, James B., HUANG, Haiyan, et al. Measuring reproducibility\nof high-throughput experiments. The annals of applied statistics, 2011,\nvol. 5, no 3, p. 1752-1779.\n\nGiven a list of peak calls in NarrowPeaks format and the corresponding peak\ncall for the merged replicate. This tool computes and appends a IDR column to\nNarrowPeaks files.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nIDR settings:\n  --merged FILE, -m FILE\n                        file of the merged NarrowPeaks\n  --files FILES [FILES ...], -f FILES [FILES ...]\n                        list of NarrowPeaks files\n  --output DIR, -o DIR  output directory (default: results)\n  --score SCORE_COLUMN, -s SCORE_COLUMN\n                        NarrowPeaks score column to compute the IDR on, one of 'score', 'signalValue', 'pValue' or 'qValue' (default: signalValue)\n  --threshold THRESHOLD, -t THRESHOLD\n                        Threshold value for the precision of the estimators (default: 0.0001)\n  --merge_function MERGE_FUNCTION, -mf MERGE_FUNCTION\n                        function to determine the score to keep for overlapping peak within a replica ('sum', 'max', 'mean', 'median', 'min') (default: max)\n  --size SIZE_MERGE, -ws SIZE_MERGE\n                        distance (bp) to add before and after each peak before merging finding match between --merged file and --files files (default: 100)\n  --nodrop, -nd         don't drop peak unmatched in any bed. The score of the absent peak is set to 0.0 (default: True)\n  --method METHOD, -mt METHOD\n                        copula model to use('archimedean' or 'gaussian' (default: archimedean)\n  --cpu CPU, -cpu CPU   number of thread to use for merging the beds files (default: 1)\n  --debug, -d           enable debugging (default: False)\n  --verbose, -v         log to console (default: False)\n  --matrix FILE         matrix file of the peaks score in raw (tsv format), replace the --merge and --files options if used\n```\n\n\n## Authors\n\n* **Laurent Modolo** - *Initial work*\n\n## License\n\nThis project is licensed under the CeCiLL License- see the [LICENSE](LICENSE) file for details.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitbio.ens-lyon.fr/LBMC/sbdm/midr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "midr",
    "package_url": "https://pypi.org/project/midr/",
    "platform": "",
    "project_url": "https://pypi.org/project/midr/",
    "project_urls": {
      "Homepage": "https://gitbio.ens-lyon.fr/LBMC/sbdm/midr"
    },
    "release_url": "https://pypi.org/project/midr/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Compute idr from m NarrowPeak files and a merged NarrowPeak",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10984441,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07dd3e54b998a69b992f79fff6d120a43dfa68885cc716974eba0911a8f416d2",
        "md5": "25546720743d7d24c4c804d732c51374",
        "sha256": "cb36f0cca6975ea6c8fae5fb0fbba6d1c9c5a7636d55c85a76be6723056fbbbb"
      },
      "downloads": -1,
      "filename": "midr-1.3.0-py3.8-linux-x86_64.egg",
      "has_sig": false,
      "md5_digest": "25546720743d7d24c4c804d732c51374",
      "packagetype": "bdist_egg",
      "python_version": "1.3.0",
      "requires_python": null,
      "size": 716757,
      "upload_time": "2021-07-22T15:10:11",
      "upload_time_iso_8601": "2021-07-22T15:10:11.539210Z",
      "url": "https://files.pythonhosted.org/packages/07/dd/3e54b998a69b992f79fff6d120a43dfa68885cc716974eba0911a8f416d2/midr-1.3.0-py3.8-linux-x86_64.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d3a0225f017c5e0f5f130b5b301db8ab32203e2115b3e453270d1ed65f0871a",
        "md5": "413d1e9ea503ba538b4d0d3981d99541",
        "sha256": "cb9bc6e44f2ce3f5ffa1d29c8bc0c9576a6f09359bd439bc2f0f254beee9dc1a"
      },
      "downloads": -1,
      "filename": "midr-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "413d1e9ea503ba538b4d0d3981d99541",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 161270,
      "upload_time": "2020-07-03T14:02:32",
      "upload_time_iso_8601": "2020-07-03T14:02:32.424568Z",
      "url": "https://files.pythonhosted.org/packages/2d/3a/0225f017c5e0f5f130b5b301db8ab32203e2115b3e453270d1ed65f0871a/midr-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}