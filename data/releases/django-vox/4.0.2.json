{
  "info": {
    "author": "Alan Trick",
    "author_email": "me@alantrick.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "==========\nDjango Vox\n==========\n\n|pipeline-badge| |coverage-badge| |docs-badge| |pypi-badge|\n\nDjango vox is a django app that allow you to create and issue\ndifferent types of notifications. Notifications can have different\nkinds of parameters which allow for convenient editing in the admin.\n\nFeatures\n---------------\n\n* Add and edit notifications from the admin\n* Built-in message editor provides drop-down of available template variables\n  and supports previewing\n* Supports many backends: email (html & text), SMS (Twilio), Twitter, Slack,\n  Postmark, XMPP, JSON webhooks, and Activity Streams\n* Supports attachments\n* Built in site contacts that can be used to send emails to admins, or update\n  your organization‘s Twitter account, or send out webhooks\n* Flexible API allows you to define your own user preferences about which user\n  gets which kind of notification\n* Set custom “from” addresses\n* Send messages in bulk (all together) or individually customized messages\n\n\nWhy this exists\n---------------\n\nTLDR: Because I am lazy and I don't want to spend my evening doing\na deploy just because marketing wants to update the text in their\nlatest spam mail.\n\nIn a few more words:\n\n* Editing copy for notifications shouldn't have to be done by programmers.\n  This means:\n\n  1. The notification templates should be editable in the admin\n  2. The information necessary to correctly make a template, whether\n     it's a template ID or parameters) should be available in the admin\n     page. It shouldn't be necessary to look through source code just to\n     make a notification work.\n  3. Number 2 is actually a fairly difficult problem.\n\n* People have different ways of interacting with computers, and one\n  way of doing notifications (i.e. email) doesn't always make sense.\n\n  1. Added to that, sending a text message that's as verbose as an HTML\n     email is simply ridiculous. Each medium begets its own kind of\n     content.\n  2. Since, as we mentioned earlier, content should be manageable\n     by non-programmers, the different ways of sending messages should\n     be manageable by non-programmers.\n\n\nI want it, stat!\n----------------\n\nWell, why don't you just head over to `the documentation`_ and we'll\nget you started. A word of warning, it's not super simple to setup, but\nit's worth it.\n\n\n.. |pipeline-badge| image:: https://gitlab.com/alantrick/django-vox/badges/master/pipeline.svg\n   :target: https://gitlab.com/alantrick/django-vox/\n   :alt: Build Status\n\n.. |coverage-badge| image:: https://gitlab.com/alantrick/django-vox/badges/master/coverage.svg\n   :target: https://gitlab.com/alantrick/django-vox/\n   :alt: Coverage Status\n\n.. |docs-badge| image:: https://img.shields.io/badge/docs-latest-informational.svg\n   :target: `the documentation`_\n   :alt: Documentation\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/django_vox.svg\n   :target: https://pypi.org/project/django-vox/\n   :alt: Project on PyPI\n\n.. _the documentation: https://alantrick.gitlab.io/django-vox/\n\n\nCHANGES\n=======\n\n4.0.2\n-----\n\n* Fix a bug when Notification.issue is passed SimpleLazyObject\n\n4.0.1\n-----\n\n* Fix a bug with ``Channel.field``\n\n4.0\n---\n\nThis version includes a new registration system for models so that you\ndon’t have to subclass ``VoxModel`` (which is a problem for 3rd party models).\nThe new way of registering the models is described in detail in the\ndocumentation.\n\nIncompatibilities with Version 3:\n\n* The actor & target arguments on ``Notification.issue`` must be specified\n  by keyword arguments now. This doesn’t affect\n  ``VoxModel.issue_notification``, so it’s only relevant if you were manually\n  loading Notifications and triggering them.\n* A few default backends were are no longer defaults\n\nOther changes:\n\n* Backend settings can just reference the class, and not the module\n* Notify will use a default address if none is specified\n* Notifications now have a “last updated” field\n\n3.6\n---\n\n* Fix bug in notification editor where switching one template's backend would\n  alter the state of the another template form.\n* Add more tests\n* Make ``Backend.send_message`` an instance method, and instantiate backend\n  objects when sending messages. This is a significant API change, but it's\n  unlikely to actually cause backwards compatibility issues.\n* Add title to notify page\n\n3.5.3\n-----\n\n* Fix bugs in demo caused by slug\n* Add icon\n\n3.5.2\n-----\n\n* Add better support and testing for non-ID primary keys\n\n3.5.1\n-----\n\n* Fix packaging problem (missing files)\n\n3.5\n---\n\n* Fix some javascript problems on Django 2.1 & 2.2\n* Add one-time message admin actions\n\n3.4\n---\n\n* Fix crash when a non VoxModel model is registered\n\n3.3\n---\n\n* Pin to a newer version of august, it works much better\n* Be slightly more sophisticated with our activity data parsing\n\n3.2\n---\n\n* fix implementation of activity\\_type parameter\n* Fix bug issuing notifications with non VoxModel objects\n* Fix bug where django will crash if ``to_addresses`` is a generator\n* Omit skipping message when notification is not from code\n* Fix bug where we kept recreating notifications\n* Keep orphaned notifications with templates so we don't delete data\n\n3.1\n---\n\n* Add ability to remove notifications of deleted classes\n* Fix error in notification editor when using grappelli\n\n3.0\n---\n\n* Rewrite that add support for multiple participants\n\n2.3\n---\n\n* add ``read_at`` field on inbox items\n* Users should be posting read activities to outbox, duh\n\n2.2\n---\n\n* Add the ability to post to inboxes and read messages\n\n2.1\n---\n\n* Redo activity schema so that its more straightforward\n* fix bug in ``background_task`` implementation\n\n2.0.0\n-----\n\n* Add activity backend\n\n1.1.0\n-----\n\n* Replace newlines in subject with space\n* Add support for resending failed messages\n* A few improvements to the admin\n* Add Grappelli compatibility\n\n1.0.0\n-----\n\nFirst stable release\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/alantrick/django-vox",
    "keywords": "notifications email twilio slack",
    "license": "LGPL3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-vox",
    "package_url": "https://pypi.org/project/django-vox/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-vox/",
    "project_urls": {
      "Homepage": "https://gitlab.com/alantrick/django-vox"
    },
    "release_url": "https://pypi.org/project/django-vox/4.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A notification app for Django",
    "version": "4.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6045200,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a3fcadaac502f5a070c7715f84cf854d13f3cfb02a2304f59289dc81bd0136b",
        "md5": "7516d0a1c84a7d41ca7ac2b103a5676d",
        "sha256": "0b7d91ea065c0137dddc6a93abf44bdc07a9c74d507ed9f7470c39af25cb0e9e"
      },
      "downloads": -1,
      "filename": "django_vox-4.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7516d0a1c84a7d41ca7ac2b103a5676d",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "requires_python": null,
      "size": 110395,
      "upload_time": "2019-05-25T03:20:41",
      "upload_time_iso_8601": "2019-05-25T03:20:41.711695Z",
      "url": "https://files.pythonhosted.org/packages/0a/3f/cadaac502f5a070c7715f84cf854d13f3cfb02a2304f59289dc81bd0136b/django_vox-4.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03e530b78053d3dcfe2cc7e42acc14bece7d33df7db830c59934bffd15d39e1f",
        "md5": "16a75ae843d5094c5d7aa0384807edb0",
        "sha256": "e8fb2e18da2c1f558631d45a732225c4109bf0727f484ba4e84b4128d025bf11"
      },
      "downloads": -1,
      "filename": "django-vox-4.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "16a75ae843d5094c5d7aa0384807edb0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 119670,
      "upload_time": "2019-05-25T03:20:39",
      "upload_time_iso_8601": "2019-05-25T03:20:39.841108Z",
      "url": "https://files.pythonhosted.org/packages/03/e5/30b78053d3dcfe2cc7e42acc14bece7d33df7db830c59934bffd15d39e1f/django-vox-4.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}