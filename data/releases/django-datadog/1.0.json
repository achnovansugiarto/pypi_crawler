{
  "info": {
    "author": "Chris Heisel",
    "author_email": "cheisel@kabbage.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Datadog\n\n* A simple Django middleware for submitting timings and exceptions to Datadog.\n* A helper class, Stats, that creates an API and Statsd connection to Datadog from Django settings\n\n## Installation\n\nDownload the code into your project and install it.\n\n```bash\ngit clone git://github.com/conorbranagan/django-datadog.git\ncd django-datadog\npython setup.py install\n```\n\nAdd `djdatadog` to your list of installed apps.\n\n```python\nINSTALLED_APPS += ('djdatadog')\n```\n\nAdd the following configuration to your projects' `settings.py` file:\n\n```python\nDATADOG_API_KEY = \"apikey\"\nDATADOG_APP_KEY = \"appkey\"\nDATADOG_APP_NAME = \"appname\" #name your metrics will be tagged with\nDATADOG_HOST = \"yourddhost\" #for statsd metrics\nDATADOG_PORT = \"8125\" #for statsd metrics\n```\n\nThe API and app keys can be found at https://app.datadoghq.com/account/settings#api\n\nAdd the Datadog request handler to your middleware in `settings.py`.\n\n```python\nMIDDLEWARE_CLASSES += ('djdatadog.middleware.DatadogMiddleware')\n```\n\n## Usage\n\n### Stats class\n\n```\nfrom djdatadog.helpers import Stats\n\ns = Stats()\ns.increment(\"my_other_metric\", 4, [\"tag1\", \"tag2\"])\n```\n\nFor information on the statsd interface, see the [Datadog Python Client documentation](http://datadogpy.readthedocs.org/en/latest/#datadog-dogstatsd-module)\n\n### Middleware\nOnce the middlewhere installed, you'll start receiving events in your Datadog\nstream in the case of an app exception. Here's an example:\n\n![example django exception](https://dl.dropbox.com/u/126553/django-datadog.png)\n\nYou will also have new timing metrics available:\n\n- `my_app.request_time.{avg,max,min}`\n- `my_app.errors.500`\n- `my_app.errors.404`\n- `my_app.errors.403`\n- `my_app.errors.405`\n- `my_app.errors.410`\n\n\nMetrics are tagged with `path:/path/to/view`\n\nNote: `my_app` will be replaced by whatever value you give for `DATADOG_APP_NAME`.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-datadog",
    "package_url": "https://pypi.org/project/django-datadog/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-datadog/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/django-datadog/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "simple Django middleware for submitting timings and exceptions to Datadog.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1652331,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb5596baf57493752d34cd10bba439eee75a608bfddc43f7abc8f2b3d4823b39",
        "md5": "592b1348e75572763d4cb5e7436c5ebe",
        "sha256": "3adce28e42494a07427cd3cfca6c44a576264c821d7e4a65b96b261e6fbd57e6"
      },
      "downloads": -1,
      "filename": "django-datadog-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "592b1348e75572763d4cb5e7436c5ebe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3599,
      "upload_time": "2015-07-27T21:10:17",
      "upload_time_iso_8601": "2015-07-27T21:10:17.163056Z",
      "url": "https://files.pythonhosted.org/packages/fb/55/96baf57493752d34cd10bba439eee75a608bfddc43f7abc8f2b3d4823b39/django-datadog-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}