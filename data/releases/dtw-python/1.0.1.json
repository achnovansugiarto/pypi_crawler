{
  "info": {
    "author": "Toni Giorgino",
    "author_email": "toni.giorgino@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": "Welcome to the dtw-python package\n=================================\n\nComprehensive implementation of `Dynamic Time Warping algorithms\n<https://dynamictimewarping.github.io>`__.\n\nDTW is a family of algorithms which compute the local stretch or\ncompression to apply to the time axes of two timeseries in order to\noptimally map one (query) onto the other (reference). DTW outputs the\nremaining cumulative distance between the two and, if desired, the\nmapping itself (warping function). DTW is widely used e.g. for\nclassification and clustering tasks in econometrics, chemometrics and\ngeneral timeseries mining.\n\nThis package provides the most complete, freely-available (GPL)\nimplementation of Dynamic Time Warping-type (DTW) algorithms up to\ndate. It is a faithful Python equivalent of `R's DTW package on CRAN\n<https://cran.r-project.org/package=dtw>`__.  Supports arbitrary local (e.g.\nsymmetric, asymmetric, slope-limited) and global (windowing)\nconstraints, fast native code, several plot styles, and more.\n\n\n\nDocumentation\n~~~~~~~~~~~~~\n\nPlease refer to the main `DTW project homepage\n<https://dynamictimewarping.github.io>`__ for the full documentation\nand background.\n\nThe best place to learn how to use the package (and a hopefully a\ndecent deal of background on DTW) is the companion paper `Computing\nand Visualizing Dynamic Time Warping Alignments in R: The dtw Package\n<http://www.jstatsoft.org/v31/i07/>`__, which the Journal of\nStatistical Software makes available for free.  It includes detailed\ninstructions and extensive background on things like multivariate\nmatching, open-end variants for real-time use, interplay between\nrecursion types and length normalization, history, etc.\n\nTo have a look at how the *dtw* package is used in domains ranging from\nbioinformatics to chemistry to data mining, have a look at the list of\n`citing\npapers <http://scholar.google.it/scholar?oi=bibs&hl=it&cites=5151555337428350289>`__.\n\nLinks to prebuilt documentation are available\n`for R <http://www.rdocumentation.org/packages/dtw>`__\nand\n`Python <https://dynamictimewarping.github.io/py-api/html/>`__.\n\n**Note**: **R** is the preferred environment for the DTW\nproject. Python's docstrings and the API below are generated\nautomatically for the sake of consistency and maintainability, and may\nnot be as pretty.\n\n\nFeatures\n~~~~~~~~\n\nThe implementation provides:\n\n-  arbitrary windowing functions (global constraints), eg. the\n   `Sakoe-Chiba\n   band <http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=01163055>`__\n   and the `Itakura\n   parallelogram <http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1162641>`__;\n-  arbitrary transition types (also known as step patterns, slope\n   constraints, local constraints, or DP-recursion rules). This includes\n   dozens of well-known types:\n\n   -  all step patterns classified by\n      `Rabiner-Juang <http://www.worldcat.org/oclc/26674087>`__,\n      `Sakoe-Chiba <http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1163055>`__,\n      and `Rabiner-Myers <http://hdl.handle.net/1721.1/27909>`__;\n   -  symmetric and asymmetric;\n   -  Rabiner's smoothed variants;\n   -  arbitrary, user-defined slope constraints\n\n-  partial matches: open-begin, open-end, substring matches\n-  proper, pattern-dependent, normalization (exact average distance per\n   step)\n-  the Minimum Variance Matching (MVM) algorithm `(Latecki et\n   al.) <http://dx.doi.org/10.1016/j.patcog.2007.03.004>`__\n\nMultivariate timeseries can be aligned with arbitrary local distance\ndefinitions, leveraging the *{proxy}dist* function. DTW itself becomes a\ndistance function with the *dist* semantics.\n\nIn addition to computing alignments, the package provides:\n\n-  methods for plotting alignments and warping functions in several\n   classic styles (see plot gallery);\n-  graphical representation of step patterns;\n-  functions for applying a warping function, either direct or inverse;\n-  a fast native (C) core.\n\n\n\nCitation\n~~~~~~~~\n\nWhen using in academic works please cite:\n\n* T. Giorgino. Computing and Visualizing Dynamic Time Warping Alignments in R: The dtw Package. J. Stat. Soft., 31 (2009) `doi:10.18637/jss.v031.i07 <https://www.jstatsoft.org/article/view/v031i07>`__.\n\nWhen using partial matching (unconstrained endpoints via the open.begin/open.end options) and/or normalization strategies, please also cite:\n\n* P. Tormene, T. Giorgino, S. Quaglini, M. Stefanelli (2008). Matching Incomplete Time Series with Dynamic Time Warping: An Algorithm and an Application to Post-Stroke Rehabilitation. Artificial Intelligence in Medicine, 45(1), 11-34. `doi:10.1016/j.artmed.2008.11.007 <http://dx.doi.org/10.1016/j.artmed.2008.11.007>`__\n\n\nLicense\n~~~~~~~\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://DynamicTimeWarping.github.io",
    "keywords": "dtw",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtw-python",
    "package_url": "https://pypi.org/project/dtw-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtw-python/",
    "project_urls": {
      "Homepage": "https://DynamicTimeWarping.github.io"
    },
    "release_url": "https://pypi.org/project/dtw-python/1.0.1/",
    "requires_dist": [
      "numpy (>=1.12)",
      "scipy (>=1.1)",
      "cython (>=0.29)"
    ],
    "requires_python": "",
    "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms. DTW computes the optimal (least cumulative distance) alignment between points of two time series. Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on. Provides cumulative distances, alignments, specialized plot styles, etc.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14976521,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "236baafa9db84651ff49d912d36d7098b5565f55f863cae34dbe52bae59ff17a",
        "md5": "531cf1f204dfba2ab4c06f2b9224b3f2",
        "sha256": "bdbf817603795202b76bde9047b910ec6340bde9f3a72bbd937736bf46895e10"
      },
      "downloads": -1,
      "filename": "dtw_python-1.0.1-cp36-cp36m-macosx_10_7_x86_64.whl",
      "has_sig": false,
      "md5_digest": "531cf1f204dfba2ab4c06f2b9224b3f2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 312761,
      "upload_time": "2019-09-01T16:42:55",
      "upload_time_iso_8601": "2019-09-01T16:42:55.159494Z",
      "url": "https://files.pythonhosted.org/packages/23/6b/aafa9db84651ff49d912d36d7098b5565f55f863cae34dbe52bae59ff17a/dtw_python-1.0.1-cp36-cp36m-macosx_10_7_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3653859e96901fba7a567fed276bf39364a09ba154c8a8b4dfa190149c9544e",
        "md5": "40afa714c4795760a8917bd0714ae2bc",
        "sha256": "76ecd24174e4fc700768e02d4e59f74d49aff1a75531b405ff89d1994f02c967"
      },
      "downloads": -1,
      "filename": "dtw-python-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "40afa714c4795760a8917bd0714ae2bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 255847,
      "upload_time": "2019-09-01T16:42:59",
      "upload_time_iso_8601": "2019-09-01T16:42:59.943178Z",
      "url": "https://files.pythonhosted.org/packages/c3/65/3859e96901fba7a567fed276bf39364a09ba154c8a8b4dfa190149c9544e/dtw-python-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}