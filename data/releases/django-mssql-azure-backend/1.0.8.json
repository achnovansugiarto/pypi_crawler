{
  "info": {
    "author": "Sathiamoorthy M",
    "author_email": "shakthifuture@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "django-mssql-azure-backend\n==========================\n\n.. image:: https://img.shields.io/pypi/v/django-mssql-backend.svg\n   :target: https://pypi.python.org/pypi/django-mssql-backend\n\n*django-mssql-azure-backend* is a fork of\n`django-mssql-backend <https://github.com/ESSolutions/django-mssql-backend>`__\n\nFeatures\n--------\n\n-  Supports Django 2.2, 3.0\n-  Supports Microsoft SQL Server 2008/2008R2, 2012, 2014, 2016, 2017, 2019\n-  Passes most of the tests of the Django test suite\n-  Compatible with\n   `Micosoft ODBC Driver for SQL Server <https://docs.microsoft.com/en-us/sql/connect/odbc/microsoft-odbc-driver-for-sql-server>`__,\n   `SQL Server Native Client <https://msdn.microsoft.com/en-us/library/ms131321(v=sql.120).aspx>`__,\n   and `FreeTDS <http://www.freetds.org/>`__ ODBC drivers\n\nDependencies\n------------\n\n-  Django 2.2 or newer\n-  pyodbc 3.0 or newer\n\nInstallation\n------------\n\n1. Install pyodbc and Django\n\n2. Install django-mssql-azure-backend ::\n\n    pip install django-mssql-azure-backend\n\n3. Now you can point the ``ENGINE`` setting in the settings file used by\n   your Django application or project to the ``'sql_server.pyodbc'``\n   module path ::\n\n    'ENGINE': 'sql_server.pyodbc'\n\nRegex Support\n-------------\n\ndjango-mssql-backend supports regex using a CLR .dll file. To install it, run ::\n\n    python manage.py install_regex_clr {database_name}\n\nConfiguration\n-------------\n\nStandard Django settings\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following entries in a database-level settings dictionary\nin DATABASES control the behavior of the backend:\n\n-  ENGINE\n\n   String. It must be ``\"sql_server.pyodbc\"``.\n\n-  NAME\n\n   String. Database name. Required.\n\n-  HOST\n\n   String. SQL Server instance in ``\"server\\instance\"`` format.\n\n-  PORT\n\n   String. Server instance port.\n   An empty string means the default port.\n\n-  USER\n\n   String. Database user name in ``\"user\"`` format.\n   If not given then MS Integrated Security will be used.\n\n-  PASSWORD\n\n   String. Database user password.\n\n-  IS_AZURE_BASED_TOKEN\n\n   Boolean. Set this to True if you want to connect azure DB without userid and password\n   if it false or not given, DB will connect using userid and password\n\n-  AUTOCOMMIT\n\n   Boolean. Set this to False if you want to disable\n   Django's transaction management and implement your own.\n\nand the following entries are also available in the TEST dictionary\nfor any given database-level settings dictionary:\n\n-  NAME\n\n   String. The name of database to use when running the test suite.\n   If the default value (``None``) is used, the test database will use\n   the name \"test\\_\" + ``NAME``.\n\n-  COLLATION\n\n   String. The collation order to use when creating the test database.\n   If the default value (``None``) is used, the test database is assigned\n   the default collation of the instance of SQL Server.\n\n-  DEPENDENCIES\n\n   String. The creation-order dependencies of the database.\n   See the official Django documentation for more details.\n\n-  MIRROR\n\n   String. The alias of the database that this database should\n   mirror during testing. Default value is ``None``.\n   See the official Django documentation for more details.\n\nOPTIONS\n~~~~~~~\n\nDictionary. Current available keys are:\n\n-  driver\n\n   String. ODBC Driver to use (``\"ODBC Driver 13 for SQL Server\"``,\n   ``\"SQL Server Native Client 11.0\"``, ``\"FreeTDS\"`` etc).\n   Default is ``\"ODBC Driver 13 for SQL Server\"``.\n\n-  isolation_level\n\n   String. Sets `transaction isolation level\n   <https://docs.microsoft.com/en-us/sql/t-sql/statements/set-transaction-isolation-level-transact-sql>`__\n   for each database session. Valid values for this entry are\n   ``READ UNCOMMITTED``, ``READ COMMITTED``, ``REPEATABLE READ``,\n   ``SNAPSHOT``, and ``SERIALIZABLE``. Default is ``None`` which means\n   no isolation levei is set to a database session and SQL Server default\n   will be used.\n\n-  dsn\n\n   String. A named DSN can be used instead of ``HOST``.\n\n-  host_is_server\n\n   Boolean. Only relevant if using the FreeTDS ODBC driver under\n   Unix/Linux.\n\n   By default, when using the FreeTDS ODBC driver the value specified in\n   the ``HOST`` setting is used in a ``SERVERNAME`` ODBC connection\n   string component instead of being used in a ``SERVER`` component;\n   this means that this value should be the name of a *dataserver*\n   definition present in the ``freetds.conf`` FreeTDS configuration file\n   instead of a hostname or an IP address.\n\n   But if this option is present and it's value is ``True``, this\n   special behavior is turned off.\n\n   See http://www.freetds.org/userguide/dsnless.htm for more information.\n\n-  unicode_results\n\n   Boolean. If it is set to ``True``, pyodbc's *unicode_results* feature\n   is activated and strings returned from pyodbc are always Unicode.\n   Default value is ``False``.\n\n-  extra_params\n\n   String. Additional parameters for the ODBC connection. The format is\n   ``\"param=value;param=value\"``.\n\n-  collation\n\n   String. Name of the collation to use when performing text field\n   lookups against the database. Default is ``None``; this means no\n   collation specifier is added to your lookup SQL (the default\n   collation of your database will be used). For Chinese language you\n   can set it to ``\"Chinese_PRC_CI_AS\"``.\n\n-  connection_timeout\n\n   Integer. Sets the timeout in seconds for the database connection process.\n   Default value is ``0`` which disables the timeout.\n\n-  connection_retries\n\n   Integer. Sets the times to retry the database connection process.\n   Default value is ``5``.\n\n-  connection_retry_backoff_time\n\n   Integer. Sets the back off time in seconds for reries of\n   the database connection process. Default value is ``5``.\n\n-  query_timeout\n\n   Integer. Sets the timeout in seconds for the database query.\n   Default value is ``0`` which disables the timeout.\n\nbackend-specific settings\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following project-level settings also control the behavior of the backend:\n\n-  DATABASE_CONNECTION_POOLING\n\n   Boolean. If it is set to ``False``, pyodbc's connection pooling feature\n   won't be activated.\n\nExample\n~~~~~~~\n\nHere is an example of the database settings for **azure token**:\n\n::\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'sql_server.pyodbc',\n            'NAME': 'mydb',\n            'HOST': 'myserver.database.windows.net',\n            'PORT': '',\n            'IS_AZURE_BASED_TOKEN': True,\n            'OPTIONS': {\n                'driver': 'ODBC Driver 13 for SQL Server',\n            },\n        },\n    }\n\nIf you are using a **local SQL server**, use the below configuration.\n\n::\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'sql_server.pyodbc',\n            'NAME': 'mydb',\n            'USER': 'user@myserver',\n            'PASSWORD': 'password',\n            'HOST': 'myserver.database.windows.net',\n            'PORT': '',\n            'IS_AZURE_BASED_TOKEN': False,\n\n            'OPTIONS': {\n                'driver': 'ODBC Driver 13 for SQL Server',\n            },\n        },\n    }\n\n    # set this to False if you want to turn off pyodbc's connection pooling\n    DATABASE_CONNECTION_POOLING = False\n\nLimitations\n-----------\n\nThe following features are currently not supported:\n\n- Altering a model field from or to AutoField at migration\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shakthifuture/django-mssql-azure-backend",
    "keywords": "django",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-mssql-azure-backend",
    "package_url": "https://pypi.org/project/django-mssql-azure-backend/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-mssql-azure-backend/",
    "project_urls": {
      "Homepage": "https://github.com/shakthifuture/django-mssql-azure-backend"
    },
    "release_url": "https://pypi.org/project/django-mssql-azure-backend/1.0.8/",
    "requires_dist": [
      "pyodbc (>=3.0)",
      "requests (>=2.24.0)"
    ],
    "requires_python": "",
    "summary": "Django backend for Microsoft SQL Server",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11545453,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb9f6031a149a51c5dd6988d2e53435ba352deed1978c4539aa17f44d7367e90",
        "md5": "7a81e63d9ef10556a8439229f37ad310",
        "sha256": "bacec243cd6fc2dcb37c90c98598f1ef33770921ee1499e565849fe5ded7dd54"
      },
      "downloads": -1,
      "filename": "django_mssql_azure_backend-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a81e63d9ef10556a8439229f37ad310",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 53971,
      "upload_time": "2021-09-24T13:05:24",
      "upload_time_iso_8601": "2021-09-24T13:05:24.227182Z",
      "url": "https://files.pythonhosted.org/packages/eb/9f/6031a149a51c5dd6988d2e53435ba352deed1978c4539aa17f44d7367e90/django_mssql_azure_backend-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8754fc86729476bd8b03fc7bb980bcb1354e31f2c2bd087712c5a71f68f351b2",
        "md5": "dcfec4faaa0428e5904bab45568800ea",
        "sha256": "fe045b200a9f169eddf559ab0a33f608fe2cada6d0ca4d1c8eda0f372d110159"
      },
      "downloads": -1,
      "filename": "django-mssql-azure-backend-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "dcfec4faaa0428e5904bab45568800ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 45645,
      "upload_time": "2021-09-24T13:05:25",
      "upload_time_iso_8601": "2021-09-24T13:05:25.997300Z",
      "url": "https://files.pythonhosted.org/packages/87/54/fc86729476bd8b03fc7bb980bcb1354e31f2c2bd087712c5a71f68f351b2/django-mssql-azure-backend-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}