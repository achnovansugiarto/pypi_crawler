{
  "info": {
    "author": "VICC",
    "author_email": "help@cancervariants.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![Documentation Status](https://readthedocs.org/projects/vicc-metakb/badge/?version=latest)](https://vicc-metakb.readthedocs.io/en/latest/?badge=latest) [![Build Status](https://travis-ci.org/cancervariants/metakb.svg?branch=main)](https://travis-ci.org/cancervariants/metakb) [![Coverage Status](https://coveralls.io/repos/github/cancervariants/metakb/badge.svg?branch=main)](https://coveralls.io/github/cancervariants/metakb?branch=main)\n\n# metakb\n\nThe intent of the project is to leverage the collective knowledge of the disparate existing resources of the VICC to improve the comprehensiveness of clinical interpretation of genomic variation. An ongoing goal will be to provide and improve upon standards and guidelines by which other groups with clinical interpretation data may make it accessible and visible to the public. We have released a preprint discussing our initial harmonization effort and observed disparities in the structure and content of variant interpretations.\n\n## Getting Started\n\n> These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisites\n\n* A newer version of Python 3, preferably 3.8 or greater. To confirm on your system, run:\n\n```\npython3 --version\n```\n\n* [Pipenv](https://pipenv.pypa.io/en/latest/), for package management.\n\n```\npip3 install --user pipenv\n```\n\n### Installing\n\n\nOnce Pipenv is installed, clone the repo and install the package requirements into a Pipenv environment:\n\n```sh\ngit clone https://github.com/cancervariants/metakb\ncd metakb\npipenv lock && pipenv sync\n```\n\nIf you intend to provide development support, install the development dependencies:\n\n```sh\npipenv lock --dev && pipenv sync\n```\n\n### Setting up Neo4j\n\nThe MetaKB uses [Neo4j](https://neo4j.com/) for its database backend. To run a local MetaKB instance, you'll need to run a Neo4j database instance as well. The easiest way to do this is from Neo4j Desktop.\n\nFirst, follow the [desktop setup instructions](https://neo4j.com/developer/neo4j-desktop) to download, install, and open Neo4j Desktop for the first time.\n\nOnce you have opened Neo4j desktop, use the \"New\" button in the upper-left region of the window to create a new project. Within that project, click the \"Add\" button in the upper-right region of the window and select \"Local DBMS\". The name of the DBMS doesn't matter, but the password will be used later to connect the database to MetaKB (we have been using \"admin\" by default). Click \"Create\". Then, click the row within the project screen corresponding to your newly-created DBMS, and click the green \"Start\" button to start the database service.\n\nThe graph will initially be empty, but once you have successfully loaded data, Neo4j Desktop provides an interface for exploring and visualizing relationships within the graph. To access it, click the blue \"Open\" button. The prompt at the top of this window processes [Cypher queries](https://neo4j.com/docs/cypher-refcard/current/); to start, try `MATCH (n:Statement {id:\"civic.eid:1409\"}) RETURN n`. Buttons on the left-hand edge of the results pane let you select graph, tabular, or textual output.\n\n\n### Setting up normalizers\n\nThe MetaKB calls a number of normalizer libraries to transform resource data and resolve incoming search queries. These will be installed as part of the package requirements, but require additional setup.\n\nFirst, [follow these instructions for deploying DynamoDB locally on your computer](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html). Once setup, in a separate terminal instance, navigate to its source directory and run the following to start the database instance:\n\n```sh\njava -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb\n```\n\nNext, navigate to the `site-packages` directory of your virtual environment. Assuming Pipenv is installed to your user directory, this should be something like:\n\n```sh\ncd ~/.local/share/virtualenvs/metakb-<various characters>/lib/python<python-version>/site-packages/  # replace <various characters> and <python-version>\n```\n\nNext, initialize the [Variation Normalizer](https://github.com/cancervariants/variation-normalization) by following the instructions in the [README](https://github.com/cancervariants/variation-normalization#installation). When setting up the UTA database, [these](https://github.com/ga4gh/vrs-python/tree/main/docs/setup_help) docs may be helpful.\n\n\nThe MetaKB can acquire all other needed normalizer data, except for that of [OMIM](https://www.omim.org/downloads), which must be manually placed:\n\n```sh\ncd disease/  # starting from the site-packages dir of your virtual environment's Python instance\nmkdir -p data/omim\ncp ~/YOUR/PATH/TO/mimTitles.txt data/omim/omim_<date>.tsv  # replace <date> with date of data acquisition formatted as YYYYMMDD\n```\n\n### Environment Variables\n\nMetaKB relies on environment variables to set in order to work.\n\n* Always Required:\n  * `UTA_DB_URL`\n    * Used in Variation Normalizer which relies on UTA Tools\n    * Format: `driver://user:pass@host/database/schema`\n    * More info can be found [here](https://github.com/GenomicMedLab/uta-tools#connecting-to-the-database)\n\n    Example:\n\n    ```shell script\n    export UTA_DB_URL=postgresql://uta_admin:password@localhost:5432/uta/uta_20210129\n    ```\n\n* Required when using the `--load_normalizers_db` or `--force_load_normalizers_db` arguments in CLI commands\n  * `RXNORM_API_KEY`\n    * Used in Therapy Normalizer to retrieve RxNorm data\n    * RxNorm requires a UMLS license, which you can register for one [here](https://www.nlm.nih.gov/research/umls/index.html). You must set the `RxNORM_API_KEY` environment variable to your API key. This can be found in the [UTS 'My Profile' area](https://uts.nlm.nih.gov/uts/profile) after singing in.\n\n    Example:\n\n    ```shell script\n    export RXNORM_API_KEY={rxnorm_api_key}\n    ```\n\n  * `DATAVERSE_API_KEY`\n    * Used in Therapy Normalizer to retrieve HemOnc data\n    * HemOnc.org data requires a Harvard Dataverse API key. After creating a user account on the Harvard Dataverse website, you can follow [these instructions](https://guides.dataverse.org/en/latest/user/account.html) to generate a key. You will create or login to your account at [this](https://dataverse.harvard.edu/) site. You must set the `DATAVERSE_API_KEY` environment variable to your API key.\n\n    Example:\n\n    ```shell script\n    export DATAVERSE_API_KEY={dataverse_api_key}\n    ```\n\n### Loading data\n\nOnce Neo4j and DynamoDB instances are both running, and necessary normalizer data has been placed, run the MetaKB CLI with the `--initialize_normalizers` flag to acquire all other necessary normalizer source data, and execute harvest, transform, and load operations into the graph datastore.\n\nIn the MetaKB project root, run the following:\n\n```sh\npipenv shell\npython3 -m metakb.cli --db_url=bolt://localhost:7687 --db_username=neo4j --db_password=<neo4j-password-here> --load_normalizers_db\n```\n\nFor more information on the different CLI arguments, see the [CLI README](docs/cli/README.md).\n\n### Starting the server\n\nOnce data has been loaded successfully, use the following to start service on localhost port 8000:\n\n```sh\nuvicorn metakb.main:app --reload\n```\n\nEnsure that both the MetaKB Neo4j and Normalizers databases are running.\n\nNavigate to [http://localhost:8000/api/v2](http://localhost:8000/api/v2) in your browser to enter queries.\n\n## Running tests\n\n### Unit tests\n\nExplain how to run the automated tests for this system\n\n```sh\npython3 -m pytest\n```\n\n\n### And coding style tests\n\nCode style is managed by [flake8](https://github.com/PyCQA/flake8) and checked prior to commit.\n\n```\nsee .flake8\n\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n### Committing\n\nWe use [pre-commit](https://pre-commit.com/#usage) to run conformance tests.\n\nThis ensures:\n\n* Check code style\n* Check for added large files\n* Detect AWS Credentials\n* Detect Private Key\n\nBefore first commit run:\n\n```sh\npre-commit install\n```\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/cancervariants/metakb/tags).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cancervariants/metakb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metakb",
    "package_url": "https://pypi.org/project/metakb/",
    "platform": null,
    "project_url": "https://pypi.org/project/metakb/",
    "project_urls": {
      "Homepage": "https://github.com/cancervariants/metakb"
    },
    "release_url": "https://pypi.org/project/metakb/1.1.0/",
    "requires_dist": [
      "asyncclick",
      "boto3",
      "botocore",
      "civicpy (>=2.0.0)",
      "disease-normalizer[dev] (==0.2.15)",
      "fastapi",
      "ga4gh.vrs (==0.8.0dev0)",
      "ga4gh.vrsatile.pydantic (==0.0.11)",
      "gene-normalizer[dev] (==0.1.30)",
      "jsondiff",
      "neo4j",
      "pydantic",
      "requests",
      "requests-cache",
      "thera-py[dev] (==0.3.7)",
      "uvicorn",
      "variation-normalizer (==0.5.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "A search interface for cancer variant interpretations assembled by aggregating and harmonizing across multiple cancer variant interpretation knowledgebases.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15738585,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2293ac19b289aada0a7dc911ea0c5f939f97bb044db2b7f60efed5b3359434d5",
        "md5": "11426e22cab82dfcd8f9e4019f6be6ff",
        "sha256": "05531144880405c63011701b93e0b669c37975a981efff2996669f520bb84683"
      },
      "downloads": -1,
      "filename": "metakb-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11426e22cab82dfcd8f9e4019f6be6ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 59156,
      "upload_time": "2022-11-11T18:47:39",
      "upload_time_iso_8601": "2022-11-11T18:47:39.142904Z",
      "url": "https://files.pythonhosted.org/packages/22/93/ac19b289aada0a7dc911ea0c5f939f97bb044db2b7f60efed5b3359434d5/metakb-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b79813f08331d7bb8a72433c245636fc5c9c02ccc6a9197ca8e51f00a34910a3",
        "md5": "ed5f37250b976bb9afbff714fddba54a",
        "sha256": "5fdcc4a0d2b273afaa07d06ba7fcfe7fc4758b3202cbf688352af4b8958d17d3"
      },
      "downloads": -1,
      "filename": "metakb-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ed5f37250b976bb9afbff714fddba54a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 56597,
      "upload_time": "2022-11-11T18:47:41",
      "upload_time_iso_8601": "2022-11-11T18:47:41.554321Z",
      "url": "https://files.pythonhosted.org/packages/b7/98/13f08331d7bb8a72433c245636fc5c9c02ccc6a9197ca8e51f00a34910a3/metakb-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}