{
  "info": {
    "author": "Steven Loria",
    "author_email": "sloria1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "********************************************\nmarshmallow: simplified object serialization\n********************************************\n\n.. image:: https://badge.fury.io/py/marshmallow.svg\n    :target: http://badge.fury.io/py/marshmallow\n    :alt: Latest version\n\n.. image:: https://travis-ci.org/marshmallow-code/marshmallow.svg?branch=pypi\n    :target: https://travis-ci.org/marshmallow-code/marshmallow\n    :alt: Travis-CI\n\n.. image:: https://readthedocs.org/projects/flask-marshmallow/badge/\n   :target: http://marshmallow.readthedocs.io/\n   :alt: Documentation\n\n**marshmallow** is an ORM/ODM/framework-agnostic library for converting complex datatypes, such as objects, to and from native Python datatypes.\n\n.. code-block:: python\n\n    from datetime import date\n    from marshmallow import Schema, fields, pprint\n\n    class ArtistSchema(Schema):\n        name = fields.Str()\n\n    class AlbumSchema(Schema):\n        title = fields.Str()\n        release_date = fields.Date()\n        artist = fields.Nested(ArtistSchema())\n\n    bowie = dict(name='David Bowie')\n    album = dict(artist=bowie, title='Hunky Dory', release_date=date(1971, 12, 17))\n\n    schema = AlbumSchema()\n    result = schema.dump(album)\n    pprint(result.data, indent=2)\n    # { 'artist': {'name': 'David Bowie'},\n    #   'release_date': '1971-12-17',\n    #   'title': 'Hunky Dory'}\n\n\nIn short, marshmallow schemas can be used to:\n\n- **Validate** input data.\n- **Deserialize** input data to app-level objects.\n- **Serialize** app-level objects to primitive Python types. The serialized objects can then be rendered to standard formats such as JSON for use in an HTTP API.\n\nGet It Now\n==========\n\n::\n\n    $ pip install -U marshmallow\n\n\nDocumentation\n=============\n\nFull documentation is available at http://marshmallow.readthedocs.io/ .\n\nRequirements\n============\n\n- Python >= 2.6 or >= 3.3\n\nmarshmallow has no external dependencies outside of the Python standard library, although `python-dateutil <https://pypi.python.org/pypi/python-dateutil>`_ is recommended for robust datetime deserialization.\n\n\nEcosystem\n=========\n\nA list of marshmallow-related libraries can be found at the GitHub wiki here:\n\nhttps://github.com/marshmallow-code/marshmallow/wiki/Ecosystem\n\nProject Links\n=============\n\n- Docs: http://marshmallow.readthedocs.io/\n- Changelog: http://marshmallow.readthedocs.io/en/latest/changelog.html\n- PyPI: https://pypi.python.org/pypi/marshmallow\n- Issues: https://github.com/marshmallow-code/marshmallow/issues\n\nLicense\n=======\n\nMIT licensed. See the bundled `LICENSE <https://github.com/marshmallow-code/marshmallow/blob/pypi/LICENSE>`_ file for more details.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marshmallow-code/marshmallow",
    "keywords": "serialization,rest,json,api,marshal,marshalling,deserialization,validation,schema",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "marshmallow",
    "package_url": "https://pypi.org/project/marshmallow/",
    "platform": "",
    "project_url": "https://pypi.org/project/marshmallow/",
    "project_urls": {
      "Homepage": "https://github.com/marshmallow-code/marshmallow"
    },
    "release_url": "https://pypi.org/project/marshmallow/2.13.3/",
    "requires_dist": [
      "python-dateutil; extra == 'reco'",
      "simplejson; extra == 'reco'"
    ],
    "requires_python": "",
    "summary": "A lightweight library for converting complex datatypes to and from native Python datatypes.",
    "version": "2.13.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16966409,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abf0ecea6637b066e7f3d54b99b1b973d9aec6f472ebf076f3da14d24d721c49",
        "md5": "f05796867da69428dda8adc5cc1f935d",
        "sha256": "e48cf450dd548f778a836563e2779d08b115e329fe7316a275de4ba600c377c7"
      },
      "downloads": -1,
      "filename": "marshmallow-2.13.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f05796867da69428dda8adc5cc1f935d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 45338,
      "upload_time": "2017-03-11T16:40:22",
      "upload_time_iso_8601": "2017-03-11T16:40:22.412651Z",
      "url": "https://files.pythonhosted.org/packages/ab/f0/ecea6637b066e7f3d54b99b1b973d9aec6f472ebf076f3da14d24d721c49/marshmallow-2.13.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6f73c77f36c1768c235ce1c8940e6b61f16ae770a58bf16c006fc430a82ec3b",
        "md5": "58f51d307bbba640c2f53d8b962b7c76",
        "sha256": "41b07838d99166cfef90c0382b5b7ffc52a00e16dd3ab7d03be9438def28f424"
      },
      "downloads": -1,
      "filename": "marshmallow-2.13.3.tar.gz",
      "has_sig": false,
      "md5_digest": "58f51d307bbba640c2f53d8b962b7c76",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 138614,
      "upload_time": "2017-03-11T16:40:23",
      "upload_time_iso_8601": "2017-03-11T16:40:23.485707Z",
      "url": "https://files.pythonhosted.org/packages/e6/f7/3c77f36c1768c235ce1c8940e6b61f16ae770a58bf16c006fc430a82ec3b/marshmallow-2.13.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2018-17175",
        "GHSA-9q2p-fj49-vpxj"
      ],
      "details": "In the marshmallow library before 2.15.1 and 3.x before 3.0.0b9 for Python, the schema \"only\" option treats an empty list as implying no \"only\" option, which allows a request that was intended to expose no fields to instead expose all fields (if the schema is being filtered dynamically using the \"only\" option, and there is a user role that produces an empty value for \"only\").",
      "fixed_in": [
        "2.15.1",
        "3.0.0b9"
      ],
      "id": "PYSEC-2018-67",
      "link": "https://osv.dev/vulnerability/PYSEC-2018-67",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2018-17175"
      ],
      "details": "In the marshmallow library before 2.15.1 and 3.x before 3.0.0b9 for Python, the schema \"only\" option treats an empty list as implying no \"only\" option, which allows a request that was intended to expose no fields to instead expose all fields (if the schema is being filtered dynamically using the \"only\" option, and there is a user role that produces an empty value for \"only\").",
      "fixed_in": [
        "2.15.1"
      ],
      "id": "GHSA-9q2p-fj49-vpxj",
      "link": "https://osv.dev/vulnerability/GHSA-9q2p-fj49-vpxj",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}