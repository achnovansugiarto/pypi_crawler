{
  "info": {
    "author": "Frankie Dintino",
    "author_email": "fdintino@theatlantic.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "django-select2-forms\n####################\n\n.. image:: https://travis-ci.org/theatlantic/django-select2-forms.svg?branch=master\n    :target: https://travis-ci.org/theatlantic/django-select2-forms\n\n**django-select2-forms** is a project that makes available Django form\nfields that use the `Select2 javascript\nplugin <http://ivaynberg.github.com/select2/>`_. It was created by\ndevelopers at `The Atlantic <http://www.theatlantic.com/>`_.\n\nInstallation\n============\n\nThe recommended way to install is with pip::\n\n    pip install django-select2-forms\n\nor, to install with pip from source::\n\n        pip install -e git+git://github.com/theatlantic/django-select2-forms.git#egg=django-select2-forms\n\nIf the source is already checked out, use setuptools::\n\n        python setup.py develop\n\nConfiguration\n=============\n\n``django-select2-forms`` serves static assets using\n`django.contrib.staticfiles <https://docs.djangoproject.com/en/1.8/howto/static-files/>`_,\nand so requires that ``\"select2\"`` be added to your settings'\n``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        # ...\n        'select2',\n    )\n\nTo use django-select2-forms' ajax support, ``'select2.urls'`` must be\nincluded in your urls.py ``urlpatterns``:\n\n.. code-block:: python\n\n    urlpatterns = patterns('',\n        # ...\n        url(r'^select2/', include('select2.urls')),\n    )\n\nUsage\n=====\n\nThe simplest way to use ``django-select2-forms`` is to use\n``select2.fields.ForeignKey`` and ``select2.fields.ManyToManyField`` in\nplace of ``django.db.models.ForeignKey`` and\n``django.db.models.ManyToManyField``, respectively. These fields extend\ntheir django equivalents and take the same arguments, along with extra\noptional keyword arguments.\n\nselect2.fields.ForeignKey examples\n----------------------------------\n\nIn the following two examples, an \"entry\" is associated with only one\nauthor. The example below does not use ajax, but instead performs\nautocomplete filtering on the client-side using the ``<option>``\nelements (the labels of which are drawn from ``Author.__str__()``)\nin an html ``<select>``.\n\n.. code-block:: python\n\n    @python_2_unicode_compatible\n    class Author(models.Model):\n        name = models.CharField(max_length=100)\n\n        def __str__(self):\n            return self.name\n\n    class Entry(models.Model):\n        author = select2.fields.ForeignKey(Author,\n            overlay=\"Choose an author...\",\n            on_delete=models.CASCADE)\n\nThis more advanced example autocompletes via ajax using the\n``Author.name`` field and limits the autocomplete search to\n``Author.objects.filter(active=True)``\n\n.. code-block:: python\n\n    class Author(models.Model):\n        name = models.CharField(max_length=100)\n        active = models.BooleanField()\n\n    class Entry(models.Model):\n        author = select2.fields.ForeignKey(Author,\n            limit_choices_to=models.Q(active=True),\n            ajax=True,\n            search_field='name',\n            overlay=\"Choose an author...\",\n            js_options={\n                'quiet_millis': 200,\n            },\n            on_delete=models.CASCADE)\n\nselect2.fields.ManyToManyField examples\n---------------------------------------\n\nIn the following basic example, entries can have more than one author.\nThis example does not do author name lookup via ajax, but populates\n``<option>`` elements in a ``<select>`` with ``Author.__unicode__()``\nfor labels.\n\n.. code-block:: python\n\n    @python_2_unicode_compatible\n    class Author(models.Model):\n        name = models.CharField(max_length=100)\n\n        def __str__(self):\n            return self.name\n\n    class Entry(models.Model):\n        authors = select2.fields.ManyToManyField(Author)\n\nThe following \"kitchen sink\" example allows authors to be ordered, and\nuses ajax to autocomplete on two variants of an author's name.\n\n.. code-block:: python\n\n    from django.db import models\n    from django.db.models import Q\n    import select2.fields\n    import select2.models\n\n    class Author(models.Model):\n        name = models.CharField(max_length=100)\n        alt_name = models.CharField(max_length=100, blank=True, null=True)\n\n    class Entry(models.Model):\n        categories = select2.fields.ManyToManyField(Author,\n            through='EntryAuthors',\n            ajax=True,\n            search_field=lambda q: Q(name__icontains=q) | Q(alt_name__icontains=q),\n            sort_field='position',\n            js_options={'quiet_millis': 200})\n\nform field example\n------------------\n\nIf you don't need to use the ajax features of ``django-select2-forms``\nit is possible to use select2 on django forms without modifying your\nmodels. The select2 formfields exist in the ``select2.fields`` module\nand have the same class names as their standard django counterparts\n(``ChoiceField``, ``MultipleChoiceField``, ``ModelChoiceField``,\n``ModelMultipleChoiceField``). Here is the first ``ForeignKey`` example\nabove, done with django formfields.\n\n.. code-block:: python\n\n    class AuthorManager(models.Manager):\n        def as_choices(self):\n            for author in self.all():\n                yield (author.pk, force_text(author))\n\n    @python_2_unicode_compatible\n    class Author(models.Model):\n        name = models.CharField(max_length=100)\n        objects = AuthorManager()\n\n        def __str__(self):\n            return self.name\n\n    class Entry(models.Model):\n        author = models.ForeignKey(Author, on_delete=models.CASCADE)\n\n    class EntryForm(forms.ModelForm):\n        author = select2.fields.ChoiceField(\n            choices=Author.objects.as_choices(),\n            overlay=\"Choose an author...\")\n\n        class Meta:\n            model = Entry\n\nLicense\n=======\n\nThe django code is licensed under the `Simplified BSD\nLicense <http://opensource.org/licenses/BSD-2-Clause>`_ and is\ncopyright The Atlantic Media Company. View the ``LICENSE`` file under\nthe root directory for complete license and copyright information.\n\nThe Select2 javascript library included is licensed under the `Apache\nSoftware Foundation License Version\n2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_. View the file\n``select2/static/select2/select2/LICENSE`` for complete license and\ncopyright information about the Select2 javascript library.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theatlantic/django-select2-forms",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-select2-forms",
    "package_url": "https://pypi.org/project/django-select2-forms/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-select2-forms/",
    "project_urls": {
      "Homepage": "https://github.com/theatlantic/django-select2-forms"
    },
    "release_url": "https://pypi.org/project/django-select2-forms/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django form fields using the Select2 jQuery plugin",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10725299,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28fc6c3b7204eea572a765a3a185eeb39635c196229a9c67cd37ea5abb255de2",
        "md5": "ad6ef98d3a0882caa1434e31a5cb8c91",
        "sha256": "e4adf132164e02dc0ca3c5fc14f9e5edc5af19a82b635805a94b45978562557d"
      },
      "downloads": -1,
      "filename": "django_select2_forms-2.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad6ef98d3a0882caa1434e31a5cb8c91",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 218107,
      "upload_time": "2017-03-27T14:21:18",
      "upload_time_iso_8601": "2017-03-27T14:21:18.326947Z",
      "url": "https://files.pythonhosted.org/packages/28/fc/6c3b7204eea572a765a3a185eeb39635c196229a9c67cd37ea5abb255de2/django_select2_forms-2.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cce6c6ad4bcdd9e1a72daa5d0ce83ea9d459ad2c2e0eae2ebf24416e0948d964",
        "md5": "e880ec107534be2f4f6cbc2b2d791032",
        "sha256": "252fef3287463259876e383b341f73ea5072ad7a6ffa07c90b10669b100743d4"
      },
      "downloads": -1,
      "filename": "django-select2-forms-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e880ec107534be2f4f6cbc2b2d791032",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 208010,
      "upload_time": "2017-03-27T14:21:16",
      "upload_time_iso_8601": "2017-03-27T14:21:16.197263Z",
      "url": "https://files.pythonhosted.org/packages/cc/e6/c6ad4bcdd9e1a72daa5d0ce83ea9d459ad2c2e0eae2ebf24416e0948d964/django-select2-forms-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}