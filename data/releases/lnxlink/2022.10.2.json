{
  "info": {
    "author": "",
    "author_email": "bkbilly <bkbilly@hotmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![license](https://img.shields.io/badge/license-MIT-blue)](LICENSE.md)\n[![OS - Linux](https://img.shields.io/badge/OS-Linux-blue?logo=linux&logoColor=white)]()\n[![Python 3.5](https://img.shields.io/badge/Python-3.5-blue?logo=python&logoColor=white)]()\n[![Last commit](https://img.shields.io/github/last-commit/bkbilly/lnxlink?color=blue&logo=github&logoColor=white)]()\n\n<img align=\"right\" width=\"170\" height=\"100\" src=\"https://github.com/bkbilly/lnxlink/blob/master/logo.png?raw=true\">\n\n# LNX link\nThis is a Linux service for integrating your system with an external application like Home Assistant using MQTT.\nIt is inspired by [IOT Link](https://iotlink.gitlab.io/).\n\n# Features\n - **System control:** Shutdown, Restart, Send Keys, Notify, Media, Screen On/Off.\n - **System monitor:** CPU, Ram, Network, Media, Microphone, Idle, Bluetooth battery.\n - **Home Assistant:** Uses MQTT Autodiscovery to create entities.\n - **No sudo required:** No need to be root user to install and use, unless used on server setup.\n - **Easily expanded:** Any new module is automatically imported.\n\n# Installation\nOne command install and update:\n```shell\nbash <(curl -s \"https://raw.githubusercontent.com/bkbilly/lnxlink/master/install.sh\")\n```\nYou can manually update the configuration file `/opt/lnxlink/config.yaml` and restart the service with the use of systemctl:\n```shell\nsystemctl --user restart lnxlink.service\n```\n\n# Examples\n\n### Send a notification with an image as a preview:\n```yaml\nservice: mqtt.publish\ndata:\n  topic: {prefix}/{clientId}/commands/notify\n  payload: >-\n    { \"title\": \"Notification Title\",\n      \"message\": \"Testing notification\",\n      \"iconUrl\": \"http://hass.local:8123/local/myimage.jpg\" }\n```\n\n### Send a series of keys:\n```yaml\nservice: mqtt.publish\ndata:\n  topic: {prefix}/{clientId}/commands/send-keys\n  payload: \"<CTRL>+t\"\n```\n\n### Combine with [Wake on Lan](https://www.home-assistant.io/integrations/wake_on_lan/) to control your PC with one switch:\n```yaml\nswitch:\n  - platform: template\n    switches:\n      my_pc:\n        friendly_name: \"My PC\"\n        unique_id: my_pc\n        value_template: \"{{ not is_state('button.shutdown', 'unavailable') }}\"\n        turn_on:\n          service: switch.turn_on\n          data:\n            entity_id: switch.pc_wol\n        turn_off:\n          service: button.press\n          data:\n            entity_id: button.shutdown\n```\n\n### Create a media player using [mqtt-mediaplayer](https://github.com/bkbilly/hass-mqtt-mediaplayer) using the information collected from the media sensor:\n\n![image](https://user-images.githubusercontent.com/518494/193397441-f18bb5fa-de37-4d95-9158-32cd81b31c72.png)\n\n\n\n\n\n\n<details><summary>Technical Notes (click to expand)</summary>\n\n# Creating new senosr\nTo expand the supported features, create a new python file on **modules** folder and use this template:\n```python\nclass Addon():\n    name = 'Example'\n    icon = 'mdi:home-assistant'\n    unit = ''\n\n    def startControl(self, topic, data):\n        ''' When a command is sent, it will run this method '''\n        print(topic, data)\n\n    def getInfo(self):\n        ''' Returns any type that can be converted to JSON '''\n        return 15\n\n    def exposedControls(self):\n        ''' Optional method which exposes an entity '''\n        return {\n            \"mybutton\": {\n                \"type\": \"button\",\n                \"icon\": \"mdi:button-cursor\",\n            }\n        }\n```\n\n</details>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bkbilly.github.io/lnxlink",
    "keywords": "lnxlink",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lnxlink",
    "package_url": "https://pypi.org/project/lnxlink/",
    "platform": null,
    "project_url": "https://pypi.org/project/lnxlink/",
    "project_urls": {
      "Home Page": "https://bkbilly.github.io/lnxlink",
      "Homepage": "https://bkbilly.github.io/lnxlink",
      "Source Code": "https://github.com/bkbilly/lnxlink"
    },
    "release_url": "https://pypi.org/project/lnxlink/2022.10.2/",
    "requires_dist": [
      "PyYAML (>=5.3.1)",
      "paho-mqtt (>=1.5.1)",
      "notify2 (>=0.3.1)",
      "psutil (>=5.8.0)",
      "mpris2 (>=1.0.2)",
      "pynput (>=1.7.3)",
      "idle-time (>=0.1.0)",
      "pyalsaaudio (>=0.9.2)",
      "dbus-python (>=1.3.2)",
      "pyOpenSSL (>=22.1.0)",
      "requests (>=2.28.1)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Internet Of Things (IOT) integration with Linux using MQTT",
    "version": "2022.10.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17532359,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de9118f615246a878d48e7b2eb075dbfe3ab9571e4c03a2e8f427cd70c6309ab",
        "md5": "a80a318d10b29992485d76d81926c1fd",
        "sha256": "b3468628d914b60bf1115f65686c756273d072eceed890b313d8738786604f53"
      },
      "downloads": -1,
      "filename": "lnxlink-2022.10.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a80a318d10b29992485d76d81926c1fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 15254,
      "upload_time": "2022-10-30T01:05:14",
      "upload_time_iso_8601": "2022-10-30T01:05:14.818566Z",
      "url": "https://files.pythonhosted.org/packages/de/91/18f615246a878d48e7b2eb075dbfe3ab9571e4c03a2e8f427cd70c6309ab/lnxlink-2022.10.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0102e06a9727fbc7a7ba4b827485acd4cd775a4311d011174fc0b614fa064773",
        "md5": "99d121a4079c705767544d5d69027d8d",
        "sha256": "e99fb08e031ba11ac9820eeb373596faacf0c6855cdd97e661fd3f9c981509d7"
      },
      "downloads": -1,
      "filename": "lnxlink-2022.10.2.tar.gz",
      "has_sig": false,
      "md5_digest": "99d121a4079c705767544d5d69027d8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 12624,
      "upload_time": "2022-10-30T01:05:17",
      "upload_time_iso_8601": "2022-10-30T01:05:17.308730Z",
      "url": "https://files.pythonhosted.org/packages/01/02/e06a9727fbc7a7ba4b827485acd4cd775a4311d011174fc0b614fa064773/lnxlink-2022.10.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}