{
  "info": {
    "author": "George Luca",
    "author_email": "fixingg@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a href=\"https://jgltechnologies.com/discord\">\n<img src=\"https://discord.com/api/guilds/844418702430175272/embed.png\">\n</a>\n\n# DPYS\n\n## <span style=\"color:dodgerblue;\">The goal of DPYS is to make basic functionalities that every good bot needs easy to implement for beginners.</span>\n\n[DPYS](https://jgltechnologies.com/dpys) is a library that makes functionalites such as warnings, curse filter, reaction roles, anti mute evade, and many more easy to add to your bot.\nAll DPYS databases use the [aiosqlite library](https://aiosqlite.omnilib.dev/en/latest/).\nSupport for DPYS can be given in [our Discord server](https://jgltechnologies.com/discord).\nIf you see any problems in the code or want to add a feature, create a pull request on [our Github repository](https://jgltechnologies.com/dpys/src).\n\n<br>\n\nInstall from pypi\n```\npython -m pip install dpys\n```\n\n<br>\n\nInstall from github\n```\npython -m pip install git+https://github.com/Nebulizer1213/dpys\n```\n\n<br>\n\nReaction role example\n\n<br>\n\n```python\nimport dpys\nfrom discord.ext import commands\n\nclient = commands.AutoShardedBot(command_prefix=\"!\")\nTOKEN = \"Your Token\"\n\n# Adds role on reaction.\n@client.listen(\"on_raw_reaction_add\")\nasync def role_add(payload):\n    await dpys.rr.add(payload, \"Your dir goes here.\", client)\n\n\n# Removes role when reaction is removed.\n@client.listen(\"on_raw_reaction_remove\")\nasync def role_remove(payload):\n    await dpys.rr.remove(payload, \"Your dir goes here.\", client)\n\n\n# Command to list all current reaction roles in the guild.\n@client.command(name=\"listrr\")\n@commands.has_role(\"Staff\")\nasync def listrr(ctx):\n    await dpys.rr.display(ctx, \"Your dir goes here.\")\n\n\n\"\"\"\nCommand to remove reaction role info from the database. Putting \"all\" as the id argument will wipe all reaction role data for the guild.\nTo remove specific ones put the message id as the id argument. You can put multiple just seperate by commas. Data is automatically wiped when the reaction role is deleted.\nThis will only need to be used if the reaction role was deleted with channel.purge.\nThe id can be found using the above command.\n\"\"\"\n\n\n@client.command(name=\"rrclear\")\n@commands.has_permissions(administrator=True)\nasync def rrclear(ctx, *, id):\n    id = id.lower()\n    if id == \"all\":\n        await dpys.rr.clear_all(ctx, \"Your dir goes here.\")\n        await ctx.message.delete()\n    else:\n        await dpys.rr.clear_one(ctx, \"Your dir goes here.\", id)\n        await ctx.message.delete()\n\n\n# Removes data for a reaction role when its message is deleted. Does not work with cahnnel.purge(). For that you need dpys.rr.clear_on_raw_bulk_message_delete().\n@client.listen(\"on_message_delete\")\nasync def rr_clear_on_message_delete(message):\n    await dpys.rr.clear_on_message_delete(message, \"Your dir goes here.\")\n\n\n# Removes data for a reaction role when its channel is deleted.\n@client.listen(\"on_channel_delete\")\nasync def rr_clear_on_channel_delete(channel):\n    await dpys.rr.clear_on_message_delete(channel, \"Your dir goes here.\")\n\n\n# Removes data for a reaction role when its message is deleted in channel.purge().\n@client.listen(\"on_raw_bulk_message_delete\")\nasync def rr_clear_on_raw_bulk_message_delete(payload):\n    await dpys.rr.clear_on_raw_bulk_message_delete(payload, \"Your dir goes here.\")\n\n\n# Clears all DPYS data for a guild when it is removed.\n@client.listen(\"on_guild_remove\")\nasync def rr_clear_on_guild_remove(guild):\n    await dpys.misc.clear_data_on_guild_remove(guild, \"Your dir goes here.\")\n\n\n\"\"\"\nThe command to create the reaction role.\nIt is used like this\n!rr emoji @role <Embed Title> <Embed Description>\nYou can make one with multiple emojis and role.\n!rr \"emoji1, emoji2\" \"@role1, @role2\" Title Description\nIf you don't understand where to use quotes and where not to think about it like this.\nWhenever you add a space the bot thinks you are moving on to the next argument.\nIf you want an argument with spaces wrap it in quotes.\nThe only argument that does not need quotes if there are spaces is the description bescause it is the last argument.\n\"\"\"\n\n# Do not type hint discord.Role for the role argument\n@client.command(name=\"rr\", aliases=[\"reactionrole\"])\n@commands.has_permissions(administrator=True)\nasync def reaction_role_command(ctx, emoji, role, title, *, description):\n    await ctx.message.delete()\n    await dpys.rr.command(\n        ctx, emoji, \"Your dir goes here.\", role, title=title, description=description\n    )\n\n\nclient.run(TOKEN)\n```\n\n<br>\n<br>\n\nDPYS also has a utils extension that provides some useful features.\n\n<br>\n\n```python\nfrom dpys import utils\nimport asyncio\n\nasync def foo():\n    bar = \"bar\"\n    result = await utils.var_can_be_type(bar, float)\n    print(result)\n\nasyncio.run(foo())\n\n>>> False\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://jgltechnologies.com/dpys",
    "keywords": "discord",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpys",
    "package_url": "https://pypi.org/project/dpys/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpys/",
    "project_urls": {
      "Homepage": "https://jgltechnologies.com/dpys"
    },
    "release_url": "https://pypi.org/project/dpys/4.4.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library to simplify discord.py",
    "version": "4.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13967334,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9da37f84995a38a4155998dda20aebdd0df934e763ff04d0d9595e39024d0ec",
        "md5": "f05e8537642fdc6baf79a4da7df119b1",
        "sha256": "9f7adf1d9372a3dbd94986cee9737a333d669c0fc0c1655217f50157070f37a6"
      },
      "downloads": -1,
      "filename": "dpys-4.4.5.tar.gz",
      "has_sig": false,
      "md5_digest": "f05e8537642fdc6baf79a4da7df119b1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14488,
      "upload_time": "2021-10-09T03:08:24",
      "upload_time_iso_8601": "2021-10-09T03:08:24.670205Z",
      "url": "https://files.pythonhosted.org/packages/a9/da/37f84995a38a4155998dda20aebdd0df934e763ff04d0d9595e39024d0ec/dpys-4.4.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}