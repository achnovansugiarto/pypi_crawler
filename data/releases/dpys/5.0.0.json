{
  "info": {
    "author": "George Luca",
    "author_email": "fixingg@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a href=\"https://jgltechnologies.com/discord\">\r\n<img src=\"https://discord.com/api/guilds/844418702430175272/embed.png\">\r\n</a>\r\n\r\n# DPYS\r\n\r\n## <span style=\"color:dodgerblue;\">The goal of DPYS is to make basic functionalities that every good bot needs easy to implement for beginners.</span>\r\n\r\nWe are currently working on adding support for slash commands with disnake.\r\n\r\n[DPYS](https://jgltechnologies.com/dpys) is a library that makes functionalites such as warnings, curse filter, reaction\r\nroles, anti mute evade, and many more easy to add to your bot. All DPYS databases use\r\nthe [aiosqlite library](https://aiosqlite.omnilib.dev/en/latest/). Support for DPYS can be given\r\nin [our Discord server](https://jgltechnologies.com/discord). If you see any problems in the code or want to add a\r\nfeature, create a pull request on [our Github repository](https://jgltechnologies.com/dpys/src).\r\n\r\n<br>\r\n\r\nInstall from pypi\r\n\r\n```\r\npython -m pip install dpys\r\n```\r\n\r\n<br>\r\n\r\nInstall from github\r\n\r\n```\r\npython -m pip install git+https://github.com/JGLTechnologies/dpys\r\n```\r\n\r\n<br>\r\n\r\nReaction role example\r\n\r\n<br>\r\n\r\n```python\r\nimport dpys\r\nfrom disnake.ext import commands\r\nimport disnake\r\n\r\nclient = commands.AutoShardedBot(command_prefix=\"!\")\r\nTOKEN = \"Your Token\"\r\n\r\n\r\n# Adds role on reaction.\r\n@client.listen(\"on_raw_reaction_add\")\r\nasync def role_add(payload):\r\n    await dpys.rr.add(payload, \"Your dir goes here.\", client)\r\n\r\n\r\n# Removes role when reaction is removed.\r\n@client.listen(\"on_raw_reaction_remove\")\r\nasync def role_remove(payload):\r\n    await dpys.rr.remove(payload, \"Your dir goes here.\", client)\r\n\r\n\r\n# Command to list all current reaction roles in the guild.\r\n@commands.slash_command(name=\"listrr\")\r\n@commands.has_role(\"Staff\")\r\nasync def listrr(inter: disnake.MessageCommandInteraction):\r\n    await dpys.rr.display(inter, \"Your dir goes here.\")\r\n\r\n\r\n\"\"\"\r\nCommand to remove reaction role info from the database. Putting \"all\" as the id argument will wipe all reaction role data for the guild.\r\nTo remove specific ones put the message id as the id argument. You can put multiple just separate by commas. Data is automatically wiped when the reaction role is deleted.\r\nThis will only need to be used if the reaction role was deleted with channel.purge.\r\nThe id can be found using the above command.\r\n\"\"\"\r\n\r\n\r\n@commands.slash_command(name=\"rrclear\")\r\n@commands.has_permissions(administrator=True)\r\nasync def rrclear(inter: disnake.MessageCommandInteraction, id: str = commands.Param(\r\n    description=\"The id or list of ids of the reaction roles you want to remove. Type all if you want to clear all reaction roles.\")):\r\n    id = id.lower()\r\n    if id == \"all\":\r\n        await dpys.rr.clear_all(inter, \"Your dir goes here.\")\r\n    else:\r\n        await dpys.rr.clear_one(inter, \"Your dir goes here.\", int(id))\r\n\r\n\r\n# Removes data for a reaction role when its message is deleted. Does not work with cahnnel.purge(). For that you need dpys.rr.clear_on_raw_bulk_message_delete().\r\n@client.listen(\"on_message_delete\")\r\nasync def rr_clear_on_message_delete(message):\r\n    await dpys.rr.clear_on_message_delete(message, \"Your dir goes here.\")\r\n\r\n\r\n# Removes data for a reaction role when its channel is deleted.\r\n@client.listen(\"on_channel_delete\")\r\nasync def rr_clear_on_channel_delete(channel):\r\n    await dpys.rr.clear_on_message_delete(channel, \"Your dir goes here.\")\r\n\r\n\r\n# Removes data for a reaction role when its message is deleted in channel.purge().\r\n@client.listen(\"on_raw_bulk_message_delete\")\r\nasync def rr_clear_on_raw_bulk_message_delete(payload):\r\n    await dpys.rr.clear_on_raw_bulk_message_delete(payload, \"Your dir goes here.\")\r\n\r\n\r\n# Clears all DPYS data for a guild when it is removed.\r\n@client.listen(\"on_guild_remove\")\r\nasync def clear_on_guild_remove(guild):\r\n    await dpys.misc.clear_data_on_guild_remove(guild, \"Your dir goes here.\")\r\n\r\n\r\n\"\"\"\r\nThe command to create the reaction role.\r\nIt is used like this\r\n/rr emoji @role <Embed Title> <Embed Description>\r\nYou can make one with multiple emojis and role.\r\n/rr emojis: emoji1, emoji2 roles: @role1, @role2 title Description\r\nJust make sure to separate the emojis and roles with commas and match the position of the roles and emojis.\r\n\"\"\"\r\n\r\n\r\n# Do not type hint disnake.Role for the role argument\r\n@commands.slash_command(name=\"rr\")\r\n@commands.has_permissions(administrator=True)\r\nasync def reaction_role_command(inter: disnake.MessageCommandInteraction, emoji: str = commands.Param(\r\n    description=\"An emoji or list of emojis. Match the position of the emoji in the list to the role that you want in the role list.\"),\r\n                                role: str = commands.Param(\r\n                                    description=\"a Role or list of roles. Match the position of the role in the list to the emoji that you want in the emoji list.\"),\r\n                                title: str = commands.Param(description=\"The title for the embed\"),\r\n                                description: str = commands.Param(description=\"The description for the embed\")):\r\n    await dpys.rr.command(\r\n        inter, emoji, \"Your dir goes here.\", role, title, description\r\n    )\r\n\r\n\r\nclient.run(TOKEN)\r\n```\r\n\r\n<br>\r\n<br>\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://jgltechnologies.com/dpys",
    "keywords": "discord",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpys",
    "package_url": "https://pypi.org/project/dpys/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpys/",
    "project_urls": {
      "Homepage": "https://jgltechnologies.com/dpys"
    },
    "release_url": "https://pypi.org/project/dpys/5.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library to simplify discord.py",
    "version": "5.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13967334,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b1c51e14758cccd813bc56b23fb725e121de48edade1edbc6f887a04f6c2349",
        "md5": "731079d6bf95d35082a3fe5693ae0709",
        "sha256": "4054d7a431e5eb46a7a7769f4f98252e271b457ca42c5f6c7646a02ca8b7bd6e"
      },
      "downloads": -1,
      "filename": "dpys-5.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "731079d6bf95d35082a3fe5693ae0709",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12857,
      "upload_time": "2022-01-01T23:27:37",
      "upload_time_iso_8601": "2022-01-01T23:27:37.006261Z",
      "url": "https://files.pythonhosted.org/packages/3b/1c/51e14758cccd813bc56b23fb725e121de48edade1edbc6f887a04f6c2349/dpys-5.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}