{
  "info": {
    "author": "Jean-Kevin KPADEY",
    "author_email": "jeankevin.kpadey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# METAR TAF Parser\n\n![Python test](https://github.com/mivek/python-metar-taf-parser/workflows/Python%20test/badge.svg)\n\nThis project provides METAR and TAF parsers.\n\n## Install\n\n```shell\npip install metar-taf-parser-mivek\n```\n\n## Structure\n\n### Commons package\n\nThis package contains the converter module. The module contains helper functions.\n\n### Model package\n\nThis package contains multiple modules\n\n-   enum: Contains the enumerations for the project\n-   model: Contains the model classes for the project\n\n### Parser package\n\nThis package contains the parser module with the `MetarParser` and `TAFParser` classes.\n\n## Model\n\n### Enumerations\n\n-   CloudQuantity: Represents the quantity in a cloud layer\n-   CloudType: Represents the type of cloud in a cloud layer\n-   Intensity: Represents the intensity of a weather phenomenon\n-   Descriptive: Represents the descriptive part of a weather phenomenon\n-   Phenomenon: Represents the phenomenon of a weather phenomenon\n-   TimeIndicator: Indicates the time trend\n-   WeatherChangeType: Indicate the type of trend\n\n\n### Objects\n\n#### Wind\n\nRepresents the wind part of a metar, taf or trend\n\n-   speed: `int`. The speed of the wind\n-   direction: `str`. The cardinal direction of the wind\n-   degrees: `int`. The direction in degrees\n-   gust: `int`. The speed of gust if any, None otherwise\n-   min_variation: `int`. The minimal degree variation of the wind\n-   max_variation: `int`. The maximal degree variation of the wind\n-   unit: `str`. The unit of the speed of the wind.\n\n#### WindShear\n\nRepresents a wind shear in TAF message. This class extends Wind.\n\n-   height: `int`. The height of the wind shear.\n\n#### Visibility\n\nRepresents the visibility part of a METAR, TAF or trend.\n\n-   distance: `str`. The distance in meters or nautical miles.\n-   min_distance: `int`. The minimal distance in meters if any.\n-   min_direction: `str`. The direction of the minimal distance if any.\n\n#### WeatherCondition\n\nRepresents the weather part of a METAR, TAF or trend.\n\n-   intensity: `Intensity`. The intensity of the weather condition if any, `None` otherwise.\n-   descriptive: `Descriptive`. The descriptive of the weather condition if any, `None` otherwise.\n-   phenomenons: `[Phenomenon]`. Array of phenomenons of the weather condition.\n\n#### TemperatureDated\n\nRepresents the temperature part of a TAF. \n\n-   temperature: `int`. The temperature in celsius degrees.\n-   day: `int`. Day of the occurrence.\n-   hour: `int`. Hour of the occurrence.\n\n#### RunwayInfo\n\nContains information on the visibility on a runway\n\n-   name: `str`. The name of the runway.\n-   min_range: `int`. The minimal visibility distance on the runway.\n-   max_range: `int`. The maximal visibility distance on the runway.\n-   trend: `str`. The trend of the visibility.\n\n#### Cloud\n\nRepresents a cloud layer in METAR, TAF or trend object.\n\n-   height: `int`. The height of the layer in feet.\n-   quantity: `CloudQuantity`. The quantity of clouds.\n-   type: `CloudType`. The type of cloud in the layer.\n\n#### AbstractWeatherContainer\n\nAbstract class containing the basic fields of METAR, TAF or trend objects.\n\n-   wind: `Wind`. The wind. Can be `None` for trends.\n-   visibility: `Visibility`. The visibility.\n-   vertical_visibility: `int`. The vertical visibility, can be `None`\n-   wind_shear: `WindShear`. The wind shear object.\n-   cavok: `bool`. Indicates whether the message is CAVOK (Ceiling and visibility OK)\n-   remark: `str`. The remark part of the message.\n-   remarks: `[str]`. List of remarks. Each element is a different remark or token \n-   clouds: `[Cloud]`. Array of clouds elements.\n-   weather_conditions: `[WeatherCondition]`. Array of weather conditions.\n\n#### AbstractValidity\n\nAbstract class representing the base of a Validity object.\n\n-   start_day: `int`. The starting day of the validity.\n-   start_hour: `int`. The starting hour of the validity.\n\n#### AbstractWeatherCode\n\nClass extending the AbstractWeatherContainer. Abstract parent class of METAR and TAF.\n\n-   day: `int`. The delivery day of the METAR or TAF.\n-   time: `datetime.time`. The delivery time of the METAR/TAF.\n-   message: `str`. The message of the METAR/TAF.\n-   station: `str`. The station for which the message was issued.\n-   trends: `[TAFTrend/MetarTrend]`. Array of trends\n\n#### Metar\n\nClass representing a metar object.\n\n-   temperature: `int`. The temperature in celsius.\n-   dew_point: `int`. The dew_point in celsius.\n-   altimeter: `float`. The altimeter value in HPa.\n-   nosig: `bool`. Whether the message is nosig: No significant changes to come.\n-   auto: `bool`. Whether the message is auto.\n-   runway_info: `[RunwayInfo]`. Array of runway information.\n\n#### TAF\n\nClass representing a TAF object.\n\n-   validity: `Validity`. The validity of the TAF.\n-   max_temperature: `TemperatureDated`. The maximum temperature during the validity of the TAF.\n-   min_temperature: `TemperatureDated`. The minimum temperature during the validity of the TAF.\n-   amendment: `bool`. Whether the TAF is an amendment.\n\n#### AbstractTrend\n\nAbstract base class for trend.\n\n-   type: `WeatherChangeType`. The type of change.\n\n#### MetarTrendTime\n\nClass containing the time of the trend.\n\n-   time: `datetime.time`. Time of the trend's occurrence.\n-   type: `TimeIndicator`. Type of time change of the trend.\n\n#### MetarTrend\n\nRepresents a trend in a METAR object, this class extends `AbstractTrend`.\n\n-   times: `[MetarTrendTime]`. The list of time change of the trend.\n\n#### TAFTrend\n\nRepresent a trend in a TAF object, this class extends `AbstractTrend`\n\n-   validity: `AbstractValidity`. The validity of the trend either `Validity` or `FMValidity`\n-   probability: `int`. The probability of a trend, can be `None`.\n\n#### Validity\n\nRepresents the validity timespan of a TAF or TAFTrend, this class extends `AbstractValidity`.\n\n-   end_day: `int`. The ending day of the validity.\n-   end_hour: `int` The ending hour of the validity.\n\n#### FMValidity\n\nRepresents the validity of a From trend, extends AbstractValidity\n\n-   start_minutes: `int`. The starting minute of the trend.\n\n\n## Example\n\n### Parse a METAR\n\nUse the method `parse(string)` of the `MetarParser` to parse a metar.\n\n```python\nfrom metar_taf_parser.parser.parser import MetarParser\n\nmetar = MetarParser().parse('KTTN 051853Z 04011KT 9999 VCTS SN FZFG BKN003 OVC010 M02/M02 A3006')\n\n```\n\n\n### Parse a TAF \n\nUse the method `parse(string)` of the TAFParser to parse a TAF message.\nThe message must start with `TAF` in order to be parsed.\n\n```python\nfrom metar_taf_parser.parser.parser import TAFParser\n\ntaf = TAFParser().parse(\n    'TAF LFPG 150500Z 1506/1612 17005KT 6000 SCT012 TEMPO 1506/1509 3000 BR BKN006 PROB40 TEMPO 1506/1508 0400 BCFG BKN002 PROB40 TEMPO 1512/1516 4000 -SHRA FEW030TCU BKN040 BECMG 1520/1522 CAVOK TEMPO 1603/1608 3000 BR BKN006 PROB40 TEMPO 1604/1607 0400 BCFG BKN002 TX17/1512Z TN07/1605Z')\n```\n\n\n## Internationalization\n\nThe following locales are supported:\n- en (default)\n- fr\n- de\n- pl\n- it\n\nTo add or complete locales please see [CONTRIBUTING](CONTRIBUTING.md)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mivek/python-metar-taf-parser",
    "keywords": "metar,taf,parser,icao,airport",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metar-taf-parser-mivek",
    "package_url": "https://pypi.org/project/metar-taf-parser-mivek/",
    "platform": "",
    "project_url": "https://pypi.org/project/metar-taf-parser-mivek/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mivek/python-metar-taf-parser/issues",
      "Homepage": "https://github.com/mivek/python-metar-taf-parser"
    },
    "release_url": "https://pypi.org/project/metar-taf-parser-mivek/1.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python project parsing metar and taf message",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17261823,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3c5749950c655bf089e56f8b989734f568291ca330f427be021ac7fce6e0941",
        "md5": "23121cd73e9bc8f61fe4a8ce27b1e649",
        "sha256": "f67d0822170800f0e438c1614a14e5e5cf24c268918b41902496a0aa197f9428"
      },
      "downloads": -1,
      "filename": "metar_taf_parser_mivek-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23121cd73e9bc8f61fe4a8ce27b1e649",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 58788,
      "upload_time": "2021-10-05T05:27:53",
      "upload_time_iso_8601": "2021-10-05T05:27:53.535662Z",
      "url": "https://files.pythonhosted.org/packages/b3/c5/749950c655bf089e56f8b989734f568291ca330f427be021ac7fce6e0941/metar_taf_parser_mivek-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9f3769da8460670f0b61a531397ac9990dafc77ded9ded9fe585aacfa722d79",
        "md5": "b80910f699b0d2b7867eaeec0e7a3051",
        "sha256": "37670b8239c8b0be0078ee7c7ee8015987672319b968b458678a95a8db6d2bfb"
      },
      "downloads": -1,
      "filename": "metar-taf-parser-mivek-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b80910f699b0d2b7867eaeec0e7a3051",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47878,
      "upload_time": "2021-10-05T05:27:54",
      "upload_time_iso_8601": "2021-10-05T05:27:54.808760Z",
      "url": "https://files.pythonhosted.org/packages/d9/f3/769da8460670f0b61a531397ac9990dafc77ded9ded9fe585aacfa722d79/metar-taf-parser-mivek-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}