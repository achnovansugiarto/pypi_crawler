{
  "info": {
    "author": "Hamid Soltani",
    "author_email": "pandora10mk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DRF API Logger\n![version](https://img.shields.io/badge/version-1.1.10-blue.svg)\n[![Downloads](https://static.pepy.tech/personalized-badge/drf-api-logger?period=total&units=none&left_color=black&right_color=orange&left_text=Downloads%20Total)](http://pepy.tech/project/drf-api-logger)\n[![Downloads](https://static.pepy.tech/personalized-badge/drf-api-logger?period=month&units=none&left_color=black&right_color=orange&left_text=Downloads%20Last%20Month)](https://pepy.tech/project/drf-api-logger)\n[![Downloads](https://static.pepy.tech/personalized-badge/drf-api-logger?period=week&units=none&left_color=black&right_color=orange&left_text=Downloads%20Last%20Week)](https://pepy.tech/project/drf-api-logger)\n[![Open Source](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://opensource.org/)\n[![Donate](https://img.shields.io/badge/$-support-ff69b4.svg?style=flat)](https://paypal.me/chynybekov)  \n\n<a href=\"https://discord.gg/eeYansFDCT\"><img src=\"https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&logo=discord&logoColor=white\" alt=\"Join Community Badge\"/></a>\n<a href=\"https://www.instagram.com/coderssecret/\"><img src=\"https://img.shields.io/badge/Instagram-E4405F?style=for-the-badge&logo=instagram&logoColor=white\" alt=\"Join Instagram\"/></a>\n<a href=\"https://github.com/vishalanandl177\"><img src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\" alt=\"GitHub\"/></a>\n\n\n\nAn API Logger for your Django Rest Framework project.\n\nIt logs all the API information for content type \"application/json\".\n1. URL\n2. Request Body\n3. Request Headers\n4. Request Method\n5. API Response\n6. Status Code\n7. API Call Time\n8. Server Execution Time\n9. Client IP Address\n\n\nYou can log API information into the database or listen to the logger signals for different use-cases, or you can do both.\n\n* The logger usage a separate thread to run, so it won't affect your API response time.\n\n## Installation\n\nInstall or add drf-api-logger.\n```shell script\npip install drf-api-logger\n```\n\nAdd in INSTALLED_APPS\n```python\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    drf_api_logger_with_user,  #  Add here\n]\n```\n\nAdd in MIDDLEWARE\n```python\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\n    'drf_api_logger_with_user.middleware.api_logger_middleware.APILoggerMiddleware', # Add here\n]\n```\n\n\n#### * Add these lines in Django Rest Framework settings file.\n\n## Store logs into the database\nLog every request into the database.\n```python\nDRF_API_LOGGER_DATABASE = True  # Default to False\n```\n* Logs will be available in Django Admin Panel.\n\n* The search bar will search in Request Body, Response, Headers and API URL.\n\n* You can also filter the logs based on the \"added_on\" date, Status Code and Request Methods.\n\n![Alt text](https://raw.githubusercontent.com/vishalanandl177/DRF-API-Logger/master/logs.png?raw=true, \"Logger\")\n\n![Alt text](https://raw.githubusercontent.com/vishalanandl177/DRF-API-Logger/master/graph.png?raw=true, \"Graph\")\n\n![Alt text](https://raw.githubusercontent.com/vishalanandl177/DRF-API-Logger/master/lists.png?raw=true, \"Lists\")\n\n![Alt text](https://raw.githubusercontent.com/vishalanandl177/DRF-API-Logger/master/details.png?raw=true, \"Details\")\n\nNote: Make sure to migrate. It will create a table for logger if \"DRF_API_LOGGER_DATABASE\" is True else if already exists, it will delete the table.\n\n## To listen for the logger signals.\nListen to the signal as soon as any API is called. So you can log the API data into a file or for different use-cases.\n```python\nDRF_API_LOGGER_SIGNAL = True  # Default to False\n```\nExample code to listen to the API Logger Signal.\n```python\n\"\"\"\nImport API_LOGGER_SIGNAL\n\"\"\"\nfrom drf_api_logger_with_user import API_LOGGER_SIGNAL\n\n\n\"\"\"\nCreate a function that is going to listen to the API logger signals.\n\"\"\"\ndef listener_one(**kwargs):\n    print(kwargs)\n\ndef listener_two(**kwargs):\n    print(kwargs)\n\n\"\"\"\nIt will listen to all the API logs whenever an API is called.\nYou can also listen signals in multiple functions.\n\"\"\"\nAPI_LOGGER_SIGNAL.listen += listener_one\nAPI_LOGGER_SIGNAL.listen += listener_two\n\n\"\"\"\nUnsubscribe to signals.\n\"\"\"\n\nAPI_LOGGER_SIGNAL.listen -= listener_one\n```\n\n### Queue\n\nDRF API Logger usage queue to hold the logs before inserting into the database. Once queue is full, it bulk inserts into the database.\n\nSpecify the queue size.\n```python\nDRF_LOGGER_QUEUE_MAX_SIZE = 50  # Default to 50 if not specified.\n```\n\n### Interval\n\nDRF API Logger also waits for a period of time. If queue is not full and there are some logs to be inserted, it inserts after interval ends.\n\nSpecify an interval (In Seconds).\n```python\nDRF_LOGGER_INTERVAL = 10  # In Seconds, Default to 10 seconds if not specified.\n```\nNote: The API call time (added_on) is a timezone aware datetime object. It is actual time of API call irrespective of interval value or queue size.\n### Skip namespace\nYou can skip the entire app to be logged into the database by specifying namespace of the app as list.\n```python\nDRF_API_LOGGER_SKIP_NAMESPACE = ['APP_NAMESPACE1', 'APP_NAMESPACE2']\n```\n\n### Skip URL Name\nYou can also skip any API to be logged by using url_name of the API.\n```python\nDRF_API_LOGGER_SKIP_URL_NAME = ['url_name1', 'url_name2']\n```\n\nNote: It does not log Django Admin Panel API calls.\n\n### Hide Sensitive Data From Logs\nYou may wish to hide sensitive information from being exposed in the logs. \nYou do this by setting `DRF_API_LOGGER_EXCLUDE_KEYS` in settings.py to a list of your desired sensitive keys. \nThe default is\n```python\nDRF_API_LOGGER_EXCLUDE_KEYS = ['password', 'token', 'access', 'refresh']\n# Sensitive data will be replaced with \"***FILTERED***\".\n```\n\n### Change default database to store API logs\n```python\nDRF_API_LOGGER_DEFAULT_DATABASE = 'default'  # Default to \"default\" if not specified\n\"\"\"\nMake sure to migrate the database specified in DRF_API_LOGGER_DEFAULT_DATABASE.\n\"\"\"\n```\n\n### Want to identify slow APIs? (Optional)\nYou can also identify slow APIs by specifying `DRF_API_LOGGER_SLOW_API_ABOVE` in settings.py.\n\nA new filter (By API Performance) will be visible, and you can choose slow or fast API.\n```python\nDRF_API_LOGGER_SLOW_API_ABOVE = 200  # Default to None\n# Specify in milli-seconds.\n```\n\n### Want to log only selected request methods? (Optional)\nYou can log only selected methods by specifying `DRF_API_LOGGER_METHODS` in settings.py.\n```python\nDRF_API_LOGGER_METHODS = ['GET', 'POST', 'DELETE', 'PUT']  # Default to empty list (Log all the requests).\n```\n\n### Want to log only selected response status codes? (Optional)\nYou can log only selected responses by specifying `DRF_API_LOGGER_STATUS_CODES` in settings.py.\n```python\nDRF_API_LOGGER_STATUS_CODES = ['200', '400', '404', '500']  # Default to empty list (Log all responses).\n```\n\n### Want to skip selected response status codes? (Optional)\nYou can skip selected responses by specifying `DRF_API_LOGGER_SKIP_STATUS_CODES` in settings.py.\n```python\nDRF_API_LOGGER_SKIP_STATUS_CODES = ['301', '401']  # Default to empty list (Log all responses).\n```\n\n### Want to see the API information in local timezone? (Optional)\nYou can also change the timezone by specifying `DRF_API_LOGGER_TIMEDELTA` in settings.py.\nIt won't change the Database timezone. It will still remain UTC or the timezone you have defined.\n```python\nDRF_API_LOGGER_TIMEDELTA = 330 # UTC + 330 Minutes = IST (5:Hours, 30:Minutes ahead from UTC) \n# Specify in minutes.\n```\n```python\n# Yoc can specify negative values for the countries behind the UTC timezone.\nDRF_API_LOGGER_TIMEDELTA = -30  # Example\n```\n\n### API with or without Host\nYou can specify an endpoint of API should have absolute URI or not by setting this variable in DRF settings.py file.\n```python\nDRF_API_LOGGER_PATH_TYPE = 'ABSOLUTE'  # Default to ABSOLUTE if not specified\n# Possible values are ABSOLUTE, FULL_PATH or RAW_URI\n```\n\nConsidering we are accessing the following URL: http://127.0.0.1:8000/api/v1/?page=123\nDRF_API_LOGGER_PATH_TYPE possible values are:\n1. ABSOLUTE (Default) :   \n\n    Function used ```request.build_absolute_uri()```\n    \n    Output: ```http://127.0.0.1:8000/api/v1/?page=123```\n    \n2. FULL_PATH\n\n    Function used ```request.get_full_path()```\n    \n    Output: ```/api/v1/?page=123```\n    \n3. RAW_URI\n\n    Function used ```request.get_raw_uri()```\n    \n    Output: ```http://127.0.0.1:8000/api/v1/?page=123```\n    \n    Note: Similar to ABSOLUTE but skip allowed hosts protection, so may return an insecure URI.\n\n\n### Use DRF API Logger Model to query \nYou can use the DRF API Logger Model to query some information.\n\nNote: Make sure to set \"DRF_API_LOGGER_DATABASE = True\" in settings.py file.\n```\nfrom drf_api_logger_with_user.models import APILogsModel\n\n\"\"\"\nExample:\nSelect records for status_code 200.\n\"\"\"\nresult_for_200_status_code = APILogsModel.objects.filter(status_code=200)\n```\n\nDRF API Logger Model:\n```\nclass APILogsModel(Model):\n   id = models.BigAutoField(primary_key=True)\n   api = models.CharField(max_length=1024, help_text='API URL')\n   headers = models.TextField()\n   body = models.TextField()\n   method = models.CharField(max_length=10, db_index=True)\n   client_ip_address = models.CharField(max_length=50)\n   response = models.TextField()\n   status_code = models.PositiveSmallIntegerField(help_text='Response status code', db_index=True)\n   execution_time = models.DecimalField(decimal_places=5, max_digits=8,\n                                       help_text='Server execution time (Not complete response time.)')\n   added_on = models.DateTimeField()\n   \n   def __str__(self):\n      return self.api\n\n   class Meta:\n      db_table = 'drf_api_logs'\n      verbose_name = 'API Log'\n      verbose_name_plural = 'API Logs'\n\n```\n\n### Note:\nAfter sometime, there will be too many data in the database. Searching and filter may get slower.\nIf you want, you can delete or archive the older data.\nTo improve the searching or filtering, try to add indexes in the 'drf_api_logs' table.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HAM1DR37A/DRF-API-Logger/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-api-logger-with-user",
    "package_url": "https://pypi.org/project/drf-api-logger-with-user/",
    "platform": null,
    "project_url": "https://pypi.org/project/drf-api-logger-with-user/",
    "project_urls": {
      "Homepage": "https://github.com/HAM1DR37A/DRF-API-Logger/"
    },
    "release_url": "https://pypi.org/project/drf-api-logger-with-user/1.2.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An API Logger for your Django Rest Framework project.",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14309292,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ab86a1bc407daca47a1beccfefdf9da3b9261cc9b0ce5584488d737f18001dc",
        "md5": "b7911e09d165e046bb9dc5be32a1bc1b",
        "sha256": "82901a0fc0e84c269a9c7ef4090e29634faa26e03a3ccee2988d66d9d09c8a94"
      },
      "downloads": -1,
      "filename": "drf_api_logger_with_user-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b7911e09d165e046bb9dc5be32a1bc1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19352,
      "upload_time": "2022-07-01T14:30:04",
      "upload_time_iso_8601": "2022-07-01T14:30:04.832559Z",
      "url": "https://files.pythonhosted.org/packages/9a/b8/6a1bc407daca47a1beccfefdf9da3b9261cc9b0ce5584488d737f18001dc/drf_api_logger_with_user-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}