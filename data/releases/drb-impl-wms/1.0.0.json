{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# WMS implementation\nThe web map service driver extends abstracts WxS driver with the getMap feature.\n\n# Nodes\n### WmsServiceNode\nRepresents the WMS service. This node has no attribute and\nhas as children WmsOperationNode like GetMap.\nOthers children give information about the service like layers, and are XmlNode.\nThose children are filled in by the information returned from \nthe service's GetCapabilities request.\n\n### WmsOperationNode\n\nRepresents an operation than can mde on the service.\nFor WMS service, the mandatory operation are GetMap, GetCapabilities, and \nGetFeatureInfo.\nOptional operations may be provided by the service \nand indicated in the possibilities thereof. \nThose optional operations are also represented as WmsOperationNode.\n\nFor perform an operation (mandatory or optional), you can use the operator '[]' with a dict that contains \nthe parameters of the request.\n\nExample:\n```\ndict_request = {'layers': 'mgrs_region', 'format': 'image/png', 'height': 256, 'width': 256, 'crs': 'EPSG:3857', 'bbox': '7514065.628545968,7514065.628545967,10018754.171394622,10018754.171394628'}\n\n\nget_map = service_wms['GetMap'][dict_request]\n```\n\nFor mandatory operations GetMap and GetFeatureInfo you can\nalternatively use Predicate WmsGetMapPredicate and WmsGetFeatureInfoPredicate.\n\nSpecific class define WXSNodeOperationGetMap and WXSNodeOperationGetFeatureInfo \nfor accept respectively WmsGetMapPredicate WmsGetFeatureInfoPredicate.\n\nExample:\n```\npredicate = WmsGetMapPredicate(layers='mgrs_region', height=256, width=256, bbox='7514065.628545968,7514065.628545967,10018754.171394622,10018754.171394628'}\n\n\nget_map = service_wms['GetMap'][predicate]\n```\n\n# Installation\n```\npip install drb-impl-wms\n```\n# Examples\n\n```python\nfrom drb.factory import DrbFactoryResolver\n\nfrom drb_impl_wms import WmsServiceNode\n\nurl_wms='https+wms://geoserver.swarm.ops.internal.gael.fr/geoserver/demo/wms?'\n\n\nresolver = DrbFactoryResolver()\n\nservice_wms = WmsServiceNode(url_wms)\n\nlist_cap = service_wms.children\n\nprint('----------------------------------------')\nprint('list_cap')\n\nprint(list_cap)\n\nfor child in service_wms.children:\n    print(child)\n    print(child.name)\n\n#=> <drb_impl_wXs.wXs_node.WXSNodeOperation object at 0x7fc2cb0aeaf0>\n#=> GetCapabilities\n#=> <drb_impl_wXs.wXs_node.WXSNodeOperation object at 0x7fc2cb0ae520>\n#=> GetMap\n#=> <drb_impl_wXs.wXs_node.WXSNodeOperation object at 0x7fc2cb0a2460>\n#=> GetFeatureInfo\n#=> <drb_impl_xml.xml_node.XmlNode object at 0x7fc2cb0aefd0>\n#=> Exception\n#=> <drb_impl_xml.xml_node.XmlNode object at 0x7fc2cb0aed30>\n#=> Layer\n    \n    \nget_map = service_wms['GetMap']\n\nprint('----------------------------------------')\nprint('GetMap : Format')\n\nprint(get_map.get_attribute('Format'))\n#=> ['image/png', 'application/atom+xml', 'application/json;type=geojson', 'application/json;type=topojson', 'application/json;type=utfgrid', 'application/pdf', 'application/rss+xml', 'application/vnd.google-earth.kml+xml', 'application/vnd.google-earth.kml+xml;mode=networklink', 'application/vnd.google-earth.kmz', 'application/vnd.mapbox-vector-tile', 'image/geotiff', 'image/geotiff8', 'image/gif', 'image/jpeg', 'image/png; mode=8bit', 'image/svg+xml', 'image/tiff', 'image/tiff8', 'image/vnd.jpeg-png', 'image/vnd.jpeg-png8', 'text/html; subtype=openlayers', 'text/html; subtype=openlayers2', 'text/html; subtype=openlayers3']\n\ndict_request = {'layers': 'mgrs_region', 'format': 'image/png', 'height': 256, 'width': 256, 'crs': 'EPSG:3857', 'bbox': '7514065.628545968,7514065.628545967,10018754.171394622,10018754.171394628'}\n\n\nget_map = service_wms['GetMap'][dict_request]\n\nprint('----------------------------------------')\nprint('GetMap : with parameter return image')\nprint(get_map)\n#=>  <drb_impl_image.image_node_factory.DrbImageBaseNode object at 0x7fc2cb23efa0>\n\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/impl/wms",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-impl-wms",
    "package_url": "https://pypi.org/project/drb-impl-wms/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-impl-wms/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/impl/wms"
    },
    "release_url": "https://pypi.org/project/drb-impl-wms/1.0.0/",
    "requires_dist": [
      "drb-impl-wXs (<1.1.0,>=1.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB WMS OGC Service implementation",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14226530,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89aeaf3c4cc8bdc53fe4fbdc32b81201abfaa1fd8ecb0b3b741c03c4873c69ce",
        "md5": "60388c861695ded34bd003bedc101737",
        "sha256": "f012ea2e8e5b1e7b1ac8b54466cf3b299a830f5cf60dcf75d650ac3bad9aace6"
      },
      "downloads": -1,
      "filename": "drb_impl_wms-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60388c861695ded34bd003bedc101737",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6589,
      "upload_time": "2022-06-23T15:07:50",
      "upload_time_iso_8601": "2022-06-23T15:07:50.887114Z",
      "url": "https://files.pythonhosted.org/packages/89/ae/af3c4cc8bdc53fe4fbdc32b81201abfaa1fd8ecb0b3b741c03c4873c69ce/drb_impl_wms-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a04c7dd3ff36f5b03d2127d860f410216e7d3d25e2efb2db97ca22010cfbc28",
        "md5": "efe6f7efadee471f942cdbaa735e7746",
        "sha256": "bfc37a37495d5af1103d11473efd0ed2b954b870a85dd97e00fb03a2131e38a4"
      },
      "downloads": -1,
      "filename": "drb-impl-wms-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "efe6f7efadee471f942cdbaa735e7746",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 22680,
      "upload_time": "2022-06-23T15:07:53",
      "upload_time_iso_8601": "2022-06-23T15:07:53.001086Z",
      "url": "https://files.pythonhosted.org/packages/4a/04/c7dd3ff36f5b03d2127d860f410216e7d3d25e2efb2db97ca22010cfbc28/drb-impl-wms-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}