{
  "info": {
    "author": "Martin P. Hellwig",
    "author_email": "martin.hellwig@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://img.shields.io/codeship/8c6d7510-148d-0134-3d1b-7a5ab8a25fce/default.svg\n   :target: https://bitbucket.org/hellwig/django-integrator\n.. image:: https://coveralls.io/repos/bitbucket/hellwig/django-integrator/badge.svg?branch=default \n   :target: https://coveralls.io/bitbucket/hellwig/django-integrator?branch=default\n.. image:: https://img.shields.io/pypi/v/django-integrator.svg\n   :target: https://pypi.python.org/pypi/Django-Integrator/\n.. image:: https://img.shields.io/badge/Donate-PayPal-blue.svg\n   :target: https://paypal.me/MartinHellwig\n.. image:: https://img.shields.io/badge/Donate-Patreon-orange.svg\n   :target: https://www.patreon.com/hellwig\n   \n\n#################\nDjango Integrator\n#################\n\nWhat is it?\n===========\n- A library to conveniently import and use an integrator compliant applications.\n- A tool for starting a new Django project with the focus on creating a\n  distributable application.\n\n\nWhat problem does it solve?\n===========================\nAn integrator compliant distributable application contains its own settings and\nurl file, which using the library can than be imported into the main settings\nfile. This way the main settings file can be kept relatively clean and simple\nthus being more the 'server' part of the Django install.\nThis made it easier for me to split my django project out in several different\napplications, which improved modularity, maintainability and readability.\n\n\nHow do I install it?\n====================\npip install django-integrator\n\n\nHow do I use it?\n================\nAs stated above there are two use cases, create and library.\n\nCreate\n------\nTo create a new project go to the folder where you want the new project to be\ncreated in. Then issue the command: \n$ django-integrator-create pypi_name django_app_class_name verbose_name author email\nThe parameters mean the following:\n\npypi_name:\n  The name of this application as it would be in the PyPI register, the program\n  will do a query to determine if the name is available (at the time).\n  The actual importable name will be the pypi_name with '-' replaced with\n  underscores.\n \ndjango_app_class_name:\n  The name that the application class (as in the apps.py) will have in Django.\n\nverbose_name:\n  The name as the app will be displayed in, for example, the admin interface.\n\nauthor:\n  Your name\n\nemail:\n  Your email address\n\nThis will create a new project, with some additional files and adjusted layouts\ncompared to the default django one. Most notably, the interface folder contains\nonly just enough to get wsgi server set. The rest is stored in the app folder.\nThere is also a script calls devset.py which removes the current sqlite db,\ndeletes the lates migration file, recreates migration file, set the admin user\nup with password admin and starts a development server.\n\nThe settings file in the app folder mirrors layout wise the same as the 'normal'\nsettings file with the exception that there is some extra logic for certain\nconfigurations like middleware. Sometimes it is import that certain middleware\nare imported before another one. To achieve this just put your middleware in\nfollowed by the middleware it must precede. The library will detect that the\nmiddleware already exist and will add your middleware before that one.\n\nFurthermore it also creates a setup.py file, which can be used as a base to\nupload the app to PyPi.\n\n\nLibrary\n-------\nAt the end of the inteface.settings file you see the following lines:\n\n.. sourcecode:: shell\n\n  >>> import django_integrator\n  >>> django_integrator.add_application('your_app_name')\n\nTo add more applications to your system simply repeat the last line.\nURL wise you can see that in interface.urls the following lines are at the end:\n\n.. sourcecode:: shell\n\n  >>> import django_integrator\n  >>> django_integrator.add_urlpatterns(urlpatterns)\n\nThis will add all the applications urls to the server urls file, be careful as\nthis will overwrite previous defined urls if the path clashes.\n\n\nWhat license is this?\n=====================\nTwo-clause BSD\n\n\nHow can I get support?\n======================\nPlease use the repo's bug tracker to leave behind any questions, feedback,\nsuggestions and comments. I will handle them depending on my time and what looks\ninteresting. If you require guaranteed support please contact me via\ne-mail so we can discuss appropriate compensation.\n\n\nSigning Off\n===========\nIs my work helpful or valuable to you? You can repay me by donating via:\n\nhttps://paypal.me/MartinHellwig\n\n.. image:: https://img.shields.io/badge/PayPal-MartinHellwig-blue.svg\n  :target: https://paypal.me/MartinHellwig\n  :alt: Donate via PayPal.Me\n  :scale: 120 %\n\n-or-\n\nhttps://www.patreon.com/hellwig\n\n.. image:: https://img.shields.io/badge/Patreon-hellwig-orange.svg\n  :target: https://www.patreon.com/hellwig\n  :alt: Donate via Patreon\n  :scale: 120 %\n\n\nThank you!",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://bitbucket.org/hellwig/Django-Integrator/get/7bd6d91a4790abd03e3baf0b0f6054c8ba8db14a.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/hellwig/Django-Integrator/",
    "keywords": "django",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Django-Integrator",
    "package_url": "https://pypi.org/project/Django-Integrator/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Django-Integrator/",
    "project_urls": {
      "Download": "https://bitbucket.org/hellwig/Django-Integrator/get/7bd6d91a4790abd03e3baf0b0f6054c8ba8db14a.zip",
      "Homepage": "https://bitbucket.org/hellwig/Django-Integrator/"
    },
    "release_url": "https://pypi.org/project/Django-Integrator/1.0.1.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Create and use django-integrator compliant applications.",
    "version": "1.0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2275687,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a7750cb9a27456f0434517f95f8c27cd182f3b8a48b6abf1b076cfc53d3afe2",
        "md5": "463e4bc347e5b1e15a0d33186262c922",
        "sha256": "ea1c846af59394f9b8630896c4b48b8989f17f91ebe27da9b6b97172acd080fd"
      },
      "downloads": -1,
      "filename": "Django-Integrator-1.0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "463e4bc347e5b1e15a0d33186262c922",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10225,
      "upload_time": "2016-07-12T22:47:56",
      "upload_time_iso_8601": "2016-07-12T22:47:56.023824Z",
      "url": "https://files.pythonhosted.org/packages/2a/77/50cb9a27456f0434517f95f8c27cd182f3b8a48b6abf1b076cfc53d3afe2/Django-Integrator-1.0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}