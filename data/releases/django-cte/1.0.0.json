{
  "info": {
    "author": "Daniel Miller",
    "author_email": "millerdev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Common Table Expressions (CTE) for Django\n=========================================\n\nInstallation\n------------\n\n::\n\n    pip install django-cte\n\nUsage\n-----\n\nSimple Common Table Expressions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSimple CTE queries can be constructed using ``With``. A custom\n``CTEManager`` is used to add the CTE to the final query.\n\n.. code:: py\n\n    from django_cte import CTEManager, With\n\n    class Order(Model):\n        objects = CTEManager()\n        id = AutoField(primary_key=True)\n        region = ForeignKey(\"Region\", on_delete=CASCADE)\n        amount = IntegerField(default=0)\n\n\n    cte = With(\n        Order.objects\n        .values(\"region_id\")\n        .annotate(total=Sum(\"amount\"))\n    )\n\n    orders = (\n        cte.join(Order, region=cte.col.region_id)\n        .with_cte(cte)\n        .annotate(region_total=cte.col.total)\n        .order_by(\"amount\")\n    )\n\nOrders returned by this query will have a ``region_total`` attribute\ncontaining the sum of all order amounts in the order's region.\n\nRecursive Common Table Expressions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRecursive CTE queries can be constructed using ``With.recursive``.\n\n.. code:: py\n\n    class Region(Model):\n        objects = CTEManager()\n        name = TextField(primary_key=True)\n        parent = ForeignKey(\"self\", null=True, on_delete=CASCADE)\n\n    def make_regions_cte(cte):\n        return Region.objects.filter(\n            # start with root nodes\n            parent__isnull=True\n        ).values(\n            \"name\",\n            path=F(\"name\"),\n            depth=Value(0, output_field=IntegerField()),\n        ).union(\n            # recursive union: get descendants\n            cte.join(Region, parent=cte.col.name).values(\n                \"name\",\n                path=Concat(\n                    cte.col.path, Value(\"\\x01\"), F(\"name\"),\n                    output_field=TextField(),\n                ),\n                depth=cte.col.depth + Value(1, output_field=IntegerField()),\n            ),\n            all=True,\n        )\n\n    cte = With.recursive(make_regions_cte)\n\n    regions = (\n        cte.join(Region, name=cte.col.name)\n        .with_cte(cte)\n        .annotate(\n            path=cte.col.path,\n            depth=cte.col.depth,\n        )\n        .order_by(\"path\")\n    )\n\nRegions returned by this query will have ``path`` and ``depth``\nattributes. The results will be ordered by ``path`` (hierarchically by\nregion name). In this case ``path`` is a ``'\\x01'``-delimited string of\nregion names starting with the root region.\n\nSee `tests <./tests>`__ for more advanced examples.\n\nRunning tests\n-------------\n\n::\n\n    cd django-cte\n    mkvirtualenv cte  # or however you choose to setup your environment\n    pip install django nose flake8\n\n    nosetests\n    flake8 --config=setup.cfg\n\nUploading to PyPI\n-----------------\n\nOptional: install ``pandoc`` for prettier README on PyPI. Use your\npreferred package manager to do this. Then install ``pypandoc``.\n\n::\n\n    pip install pypandoc\n\nFinally package and upload the generated files.\n\n::\n\n    pip install twine wheel\n\n    python setup.py sdist bdist_wheel\n    twine upload dist/*\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dimagi/django-cte",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cte",
    "package_url": "https://pypi.org/project/django-cte/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cte/",
    "project_urls": {
      "Homepage": "https://github.com/dimagi/django-cte"
    },
    "release_url": "https://pypi.org/project/django-cte/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Common Table Expressions (CTE) for Django",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14363676,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6874d536d3ed903116f4aeb3b29a9f62508b64cb819cc4c35f455dfbf12d72c3",
        "md5": "5fa1f812ee9491964972a508bd48be0b",
        "sha256": "a76cacb2698cef0d40260614edd1c996ddbb8c9636df9bc9edb912fe4caa1f5a"
      },
      "downloads": -1,
      "filename": "django_cte-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fa1f812ee9491964972a508bd48be0b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10859,
      "upload_time": "2018-04-05T02:21:12",
      "upload_time_iso_8601": "2018-04-05T02:21:12.054866Z",
      "url": "https://files.pythonhosted.org/packages/68/74/d536d3ed903116f4aeb3b29a9f62508b64cb819cc4c35f455dfbf12d72c3/django_cte-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc495865250bd196e930db0cae77b8c3511fb7f802a6edeb99794ec1fce63c40",
        "md5": "95360e5e1516af9b80520da1513d6306",
        "sha256": "d549b0851672ea55d72ad58e5c155ab4df54938752af9988824f2a289d5fd151"
      },
      "downloads": -1,
      "filename": "django-cte-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "95360e5e1516af9b80520da1513d6306",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7552,
      "upload_time": "2018-04-05T02:21:12",
      "upload_time_iso_8601": "2018-04-05T02:21:12.847379Z",
      "url": "https://files.pythonhosted.org/packages/cc/49/5865250bd196e930db0cae77b8c3511fb7f802a6edeb99794ec1fce63c40/django-cte-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}