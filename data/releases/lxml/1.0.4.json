{
  "info": {
    "author": "lxml dev team",
    "author_email": "lxml-dev@codespeak.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Markup :: XML"
    ],
    "description": "lxml is a Pythonic binding for the libxml2 and libxslt libraries.  It provides\nsafe and convenient access to these libraries using the ElementTree API.\n\nIt extends the ElementTree API significantly to offer support for XPath,\nRelaxNG, XML Schema, XSLT, C14N and much more.\n\n1.0.4 (09.09.2006)\n==================\n\nFeatures added\n--------------\n\n* List-like ``Element.extend()`` method\n\nBugs fixed\n----------\n\n* Crash in tail handling in ``Element.replace()``",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://codespeak.net/lxml",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lxml",
    "package_url": "https://pypi.org/project/lxml/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lxml/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://codespeak.net/lxml"
    },
    "release_url": "https://pypi.org/project/lxml/1.0.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16160772,
  "urls": [
    {
      "comment_text": "built on Linux-2.6.16.21-0.13-default-x86_64-with-glibc2.2.5",
      "digests": {
        "blake2b_256": "0b394e577ccd008b4ce653e0b75e71c28bfd948057471ea8a01d53dff6ab9fdd",
        "md5": "83e7d79c7aff626648650d96f42de42b",
        "sha256": "b20dedaeb074136e3a02cd13addc9119623ccc23b701b8d646f17a2891afedf2"
      },
      "downloads": -1,
      "filename": "lxml-1.0.4-py2.4-linux-x86_64.egg",
      "has_sig": true,
      "md5_digest": "83e7d79c7aff626648650d96f42de42b",
      "packagetype": "bdist_egg",
      "python_version": "2.4",
      "requires_python": null,
      "size": 169989,
      "upload_time": "2006-09-09T06:20:49",
      "upload_time_iso_8601": "2006-09-09T06:20:49Z",
      "url": "https://files.pythonhosted.org/packages/0b/39/4e577ccd008b4ce653e0b75e71c28bfd948057471ea8a01d53dff6ab9fdd/lxml-1.0.4-py2.4-linux-x86_64.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "contributed by Ashish Kulkarni, static build including libxml2/libxslt",
      "digests": {
        "blake2b_256": "82a73a293e11d0ba96827636af5515537faf97985b14814427834bf121e584e6",
        "md5": "5555acc686308a4ce33e639d6b8c4158",
        "sha256": "4f908593f62da259461c06787a084e62548242497547e667c33d03b43db20667"
      },
      "downloads": -1,
      "filename": "lxml-1.0.4-py2.4-win32.egg",
      "has_sig": false,
      "md5_digest": "5555acc686308a4ce33e639d6b8c4158",
      "packagetype": "bdist_egg",
      "python_version": "2.4",
      "requires_python": null,
      "size": 1239183,
      "upload_time": "2006-09-12T16:48:13",
      "upload_time_iso_8601": "2006-09-12T16:48:13Z",
      "url": "https://files.pythonhosted.org/packages/82/a7/3a293e11d0ba96827636af5515537faf97985b14814427834bf121e584e6/lxml-1.0.4-py2.4-win32.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62565d182812ae16666c15deb6f2eed62c1fbf4dc62944c434cc06fb15b402c5",
        "md5": "b83980e9000f4af98d4a5f29bd0493e1",
        "sha256": "a06e878e75d7c7b7bea7a27f5abbdca12acb7e143ad95f5fb3fd974bd8bf845c"
      },
      "downloads": -1,
      "filename": "lxml-1.0.4.tar.gz",
      "has_sig": true,
      "md5_digest": "b83980e9000f4af98d4a5f29bd0493e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 381187,
      "upload_time": "2006-09-09T06:20:41",
      "upload_time_iso_8601": "2006-09-09T06:20:41Z",
      "url": "https://files.pythonhosted.org/packages/62/56/5d182812ae16666c15deb6f2eed62c1fbf4dc62944c434cc06fb15b402c5/lxml-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "contributed by Ashish Kulkarni, static build including libxml2/libxslt",
      "digests": {
        "blake2b_256": "a30216a94e14c78df88ba5d686be81c4ca0c343b69254c1751df8550c8ef4011",
        "md5": "e49c059b41ab7ec4646e76481b3262b5",
        "sha256": "f3c599ec873c1ee1e2962ca9ffee68b1c0a2c53d75b87a61a4ec4706f7302824"
      },
      "downloads": -1,
      "filename": "lxml-1.0.4.win32-py2.4.exe",
      "has_sig": false,
      "md5_digest": "e49c059b41ab7ec4646e76481b3262b5",
      "packagetype": "bdist_wininst",
      "python_version": "2.4",
      "requires_python": null,
      "size": 1296729,
      "upload_time": "2006-09-12T16:44:42",
      "upload_time_iso_8601": "2006-09-12T16:44:42Z",
      "url": "https://files.pythonhosted.org/packages/a3/02/16a94e14c78df88ba5d686be81c4ca0c343b69254c1751df8550c8ef4011/lxml-1.0.4.win32-py2.4.exe",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2021-28957",
        "GHSA-jq4v-f5q6-mjqq"
      ],
      "details": "An XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formaction attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in lxml 4.6.3.",
      "fixed_in": [
        "4.6.3"
      ],
      "id": "PYSEC-2021-19",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-19",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2014-3146"
      ],
      "details": "Incomplete blacklist vulnerability in the lxml.html.clean module in lxml before 3.3.5 allows remote attackers to conduct cross-site scripting (XSS) attacks via control characters in the link scheme to the clean_html function.",
      "fixed_in": [
        "3.3.5"
      ],
      "id": "PYSEC-2014-9",
      "link": "https://osv.dev/vulnerability/PYSEC-2014-9",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2018-19787",
        "GHSA-xp26-p53h-6h2p"
      ],
      "details": "An issue was discovered in lxml before 4.2.5. lxml/html/clean.py in the lxml.html.clean module does not remove javascript: URLs that use escaping, allowing a remote attacker to conduct XSS attacks, as demonstrated by \"j a v a s c r i p t:\" in Internet Explorer. This is a similar issue to CVE-2014-3146.",
      "fixed_in": [
        "4.2.5"
      ],
      "id": "PYSEC-2018-12",
      "link": "https://osv.dev/vulnerability/PYSEC-2018-12",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-43818",
        "GHSA-55x5-fj6c-h6m8"
      ],
      "details": "lxml is a library for processing XML and HTML in the Python language. Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch. There are no known workarounds available.",
      "fixed_in": [
        "4.6.5"
      ],
      "id": "PYSEC-2021-852",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-852",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-28957"
      ],
      "details": "An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.",
      "fixed_in": [
        "4.6.3"
      ],
      "id": "GHSA-jq4v-f5q6-mjqq",
      "link": "https://osv.dev/vulnerability/GHSA-jq4v-f5q6-mjqq",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-27783"
      ],
      "details": "A XSS vulnerability was discovered in python-lxml's clean module. The module's parser didn't properly imitate browsers, which caused different behaviors between the sanitizer and the user's page. A remote attacker could exploit this flaw to run arbitrary HTML/JS code.",
      "fixed_in": [
        "4.6.2"
      ],
      "id": "GHSA-pgww-xf46-h92r",
      "link": "https://osv.dev/vulnerability/GHSA-pgww-xf46-h92r",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-43818"
      ],
      "details": "### Impact\nThe HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs.\n\nUsers that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5.\n\n### Patches\nThe issue has been resolved in lxml 4.6.5.\n\n### Workarounds\nNone.\n\n### References\nThe issues are tracked under the report IDs GHSL-2021-1037 and GHSL-2021-1038.\n",
      "fixed_in": [
        "4.6.5"
      ],
      "id": "GHSA-55x5-fj6c-h6m8",
      "link": "https://osv.dev/vulnerability/GHSA-55x5-fj6c-h6m8",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2018-19787"
      ],
      "details": "An issue was discovered in lxml before 4.2.5. lxml/html/clean.py in the lxml.html.clean module does not remove javascript: URLs that use escaping, allowing a remote attacker to conduct XSS attacks, as demonstrated by \"j a v a s c r i p t:\" in Internet Explorer. This is a similar issue to CVE-2014-3146.",
      "fixed_in": [
        "4.2.5"
      ],
      "id": "GHSA-xp26-p53h-6h2p",
      "link": "https://osv.dev/vulnerability/GHSA-xp26-p53h-6h2p",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-2309"
      ],
      "details": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
      "fixed_in": [
        "4.9.1"
      ],
      "id": "GHSA-wrxv-2j5q-m38w",
      "link": "https://osv.dev/vulnerability/GHSA-wrxv-2j5q-m38w",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-2309",
        "GHSA-wrxv-2j5q-m38w"
      ],
      "details": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
      "fixed_in": [
        "4.9.1"
      ],
      "id": "PYSEC-2022-230",
      "link": "https://osv.dev/vulnerability/PYSEC-2022-230",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}