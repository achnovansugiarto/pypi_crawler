{
  "info": {
    "author": "Minh Hoang",
    "author_email": "ngminhhoang1412@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# **Google login with Selenium**\r\n\r\n## Overview\r\nThis is a small package to log in to Google account with Selenium. After signin,\r\nChrome profile of that user will be create and stored. With Chrome profile you can do so many automatic things\r\nwith it.\r\n\r\nAlways active extension is installed by default.\r\n>This has been developed for testing purposes only.\r\n> Any action you take using this script is strictly at your own risk. \r\n> I will not be liable for any losses or damages you face using this script.\r\n\r\n## Requirement\r\nMust have Python <= 3.9 and Google Chrome installed.\r\n\r\n## Usage\r\n```pycon\r\npip install login_gmail_selenium\r\n```\r\nAnd then on example.py\r\n```pycon\r\nfrom login_gmail_selenium.util.profile import ChromeProfile\r\n\r\nprofile = ChromeProfile(email, password, backup_email)\r\n# To allow downloads add insecure=True to ChromeProfile\r\n# To handle false email with custom functions, use param false_email_callback\r\ndriver = profile.retrieve_driver()\r\nprofile.start()\r\n# Do whatever with driver afterward\r\ndriver.get('https://www.google.com/')\r\n...\r\n```\r\n1. Add folder extension/ if you want custom extensions for Chrome (.crx or .zip)\r\n2. The temp folder's content will be generated by the library\r\nYour folder should look like this\r\n```cvs\r\n/temp\r\n    /profiles\r\n        /profile1\r\n        /profile2\r\n/extension\r\n    /custom_extension\r\n        extension1.zip\r\n        extension2.crx\r\nexample.py\r\n```\r\n\r\n## Upload to pypi\r\n\r\n1. Organize your code into proper file hierarchy\r\n2. Add a LICENSE and a README.md if not already done\r\n\r\n```cvs\r\n/demopackage\r\n    __init__.py\r\n    demopackage.py\r\n    /demosubpackage\r\n      __init__.py\r\n      demosubpackage.py\r\n    /tests\r\n        test_package.py\r\nLICENSE\r\nsetup.py\r\n```\r\n3. Create (if not have) and update version number on setup.py\r\n\r\n4. Generate distribution archive files\r\n\r\n```pycon\r\npip install --upgrade setuptools wheel\r\npython setup.py sdist bdist_wheel\r\n```\r\nThis should create a dist/ and build/ folder in your main directory with the compressed files of your package!\r\n5. Upload your distribution archives to PyPI\r\n```pycon\r\npip install --upgrade twine\r\ntwine upload dist/*\r\n```\r\nYou will be prompted for your PyPI login credentials, and then the upload will begin. \r\nNow you should be able to log in to your PyPI account and see your package.\r\n\r\n## License\r\nCopyright Â© 2022 [MoliGroup](https://moligroup.co/), [MIT license](./LICENSE). \r\nFor an improvement or a bug please feel free to open a PR\r\n\r\nFor work information please contact ngminhhoang1412@gmail.com or \r\n[LinkedIn](https://www.linkedin.com/in/ho%C3%A0ng-nguy%E1%BB%85n-1b13481b7/).\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ngminhhoang1412/LoginGmailSelenium",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "login-gmail-selenium",
    "package_url": "https://pypi.org/project/login-gmail-selenium/",
    "platform": null,
    "project_url": "https://pypi.org/project/login-gmail-selenium/",
    "project_urls": {
      "Homepage": "https://github.com/ngminhhoang1412/LoginGmailSelenium"
    },
    "release_url": "https://pypi.org/project/login-gmail-selenium/1.0.2/",
    "requires_dist": [
      "python-dotenv",
      "selenium",
      "undetected-chromedriver"
    ],
    "requires_python": "",
    "summary": "A python package for login google by selenium",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17476174,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a71d5cfc8aa7a29f6d50286b8f9b2e4a7a8ef3eb7d9065ef5fbb7afa9a2d80a5",
        "md5": "27a9481a1006e5981a889311b6200425",
        "sha256": "fca1bb937ba3a3a0c4d7b08f3269b7046646f3346c211ad2201a0eb21e81f805"
      },
      "downloads": -1,
      "filename": "login_gmail_selenium-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27a9481a1006e5981a889311b6200425",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 212792,
      "upload_time": "2023-01-27T10:29:58",
      "upload_time_iso_8601": "2023-01-27T10:29:58.450054Z",
      "url": "https://files.pythonhosted.org/packages/a7/1d/5cfc8aa7a29f6d50286b8f9b2e4a7a8ef3eb7d9065ef5fbb7afa9a2d80a5/login_gmail_selenium-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a582ca683cf9f5b2c971448a6651b11e53d4295a1a91f6714e9f67855c022622",
        "md5": "ac86da2aec37f9b97f648df0e9b3b57f",
        "sha256": "36fcd307ab56703387a11ebf9f6fcda23aea9edfa3937e7c703e1ce36c0acddc"
      },
      "downloads": -1,
      "filename": "login_gmail_selenium-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ac86da2aec37f9b97f648df0e9b3b57f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 213329,
      "upload_time": "2023-01-27T10:30:00",
      "upload_time_iso_8601": "2023-01-27T10:30:00.696771Z",
      "url": "https://files.pythonhosted.org/packages/a5/82/ca683cf9f5b2c971448a6651b11e53d4295a1a91f6714e9f67855c022622/login_gmail_selenium-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}