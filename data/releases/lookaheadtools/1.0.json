{
  "info": {
    "author": "David B. Curtis",
    "author_email": "davecurtis@sonic.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "==============\nlookaheadtools\n==============\n\nThe lookaheadtools module extends generic iterators to support look-ahead,\nand also provides some convenient look-ahead iterators that are useful for\nprocessing text files.\n\nLookahead is implemented by extending iterators with support for __getitem__().\nFor example: ::\n\n  import lookaheadtools as la\n  looker = la.lookahead(iter([0,1,2,3,4]))\n  assert looker[3] == 3\n  assert looker[0] == 0\n  assert looker[1000] == None\n  assert looker[0:9:2] == [0,2,4]\n  assert next(looker) == 0\n  assert looker[0] == 1\n\nAs seen in the example, myLookaheadIter[0] returns the value that will \nbe returned by next(myLookaheadIter) but without consuming it.\nArbitrary lookahead distance is supported.  Attempts to lookahead \npast the end of the iterator will return None.  The look-ahead index \ncan be any slice with positive indices.\n\nClasses Provided\n----------------\n\nLookahead(object) -- Convert any iterator into a look-ahead iterator.\n\nLinesOf(object) -- Iterate line-by-line over a string, emulating text file\niteration.\n\nLexpos (a named tuple) -- Convenience class for capturing lexical \ntracking information.\n\nFileLookahead(Lookahead) -- FileLookahead() is a specialization of the\nLookahead() class that iterates by characters over a text file with \nfull lexical position tracking.\n\nLexAhead(FileLookahead) -- LexAhead() is a specialization of \nFileLookahead() that includes some simple tokenizing utilities, \nstopping short of being a full tokenizer.  See tokenizertools \nfor a module that builds a tokenizer on top of LexAhead().\n\n\n===================\nlookaheadtools news\n===================\n\nUpdate history.\n\n15-Sep-2016\n------------\n1.0 release.  \nTweaked setup.py to make it more robust.\n\n16-June-2014\n------------\n0.2b release.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/dbc/lookaheadtools",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lookaheadtools",
    "package_url": "https://pypi.org/project/lookaheadtools/",
    "platform": "any",
    "project_url": "https://pypi.org/project/lookaheadtools/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/dbc/lookaheadtools"
    },
    "release_url": "https://pypi.org/project/lookaheadtools/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Make any iterator a look-ahead iterator. Provides specialized look-ahead iterators for text files.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2346671,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dd48bfe7fdee92b43afe8d1d63a9de88ea8e5a493ede69815a91c69b0e26f5d",
        "md5": "7be46b8fa8d41c1d0fb085204363a999",
        "sha256": "c0103819702b0e45a2a8e1b33f559bbc5d4e6113ae4de1fafc33c462585bf4a0"
      },
      "downloads": -1,
      "filename": "lookaheadtools-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7be46b8fa8d41c1d0fb085204363a999",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8680,
      "upload_time": "2016-09-16T17:11:54",
      "upload_time_iso_8601": "2016-09-16T17:11:54.236936Z",
      "url": "https://files.pythonhosted.org/packages/6d/d4/8bfe7fdee92b43afe8d1d63a9de88ea8e5a493ede69815a91c69b0e26f5d/lookaheadtools-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}