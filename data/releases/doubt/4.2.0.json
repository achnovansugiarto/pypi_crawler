{
  "info": {
    "author": "Dan Saattrup Nielsen",
    "author_email": "saattrupdan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Doubt\n\n*Bringing back uncertainty to machine learning.*\n\n______________________________________________________________________\n[![PyPI Status](https://badge.fury.io/py/doubt.svg)](https://pypi.org/project/doubt/)\n[![Documentation](https://img.shields.io/badge/docs-passing-green)](https://saattrupdan.github.io/doubt/doubt.html)\n[![License](https://img.shields.io/github/license/saattrupdan/doubt)](https://github.com/saattrupdan/doubt/blob/main/LICENSE)\n[![LastCommit](https://img.shields.io/github/last-commit/saattrupdan/doubt)](https://github.com/saattrupdan/doubt/commits/main)\n[![Code Coverage](https://img.shields.io/badge/Coverage-67%25-yellow.svg)](https://github.com/saattrupdan/doubt/tree/dev/tests)\n\nA Python package to include prediction intervals in the predictions of machine\nlearning models, to quantify their uncertainty.\n\nDocumentation is available on [Read the Docs](https://doubt.readthedocs.io/en/latest/).\n\n\n## Installation\n\nIf you do not already have HDF5 installed, then start by installing that. On MacOS this\ncan be done using `sudo port install hdf5` after\n[MacPorts](https://www.macports.org/install.php) have been installed. On Ubuntu you can\nget HDF5 with `sudo apt-get install python-dev python3-dev libhdf5-serial-dev`. After\nthat, you can install `doubt` with `pip`:\n\n```shell\npip install doubt\n```\n\n\n## Features\n\n- Bootstrap wrapper for all Scikit-Learn models\n    - Can also be used to calculate usual bootstrapped statistics of a dataset\n- Quantile Regression for all generalised linear models\n- Quantile Regression Forests\n- A uniform dataset API, with 24 regression datasets and counting\n\n\n## Quick Start\n\nIf you already have a model in Scikit-Learn, then you can simply\nwrap it in a `Boot` to enable predicting with prediction intervals:\n\n```python\n>>> from sklearn.linear_model import LinearRegression\n>>> from doubt import Boot\n>>> from doubt.datasets import PowerPlant\n>>>\n>>> X, y = PowerPlant().split()\n>>> clf = Boot(LinearRegression())\n>>> clf = clf.fit(X, y)\n>>> clf.predict([10, 30, 1000, 50], uncertainty=0.05)\n(481.9203102126274, array([473.43314309, 490.0313962 ]))\n```\n\nAlternatively, you can use one of the standalone models with uncertainty\noutputs. For instance, a `QuantileRegressionForest`:\n\n```python\n>>> from doubt import QuantileRegressionForest as QRF\n>>> from doubt.datasets import Concrete\n>>> import numpy as np\n>>>\n>>> X, y = Concrete().split()\n>>> clf = QRF(max_leaf_nodes=8)\n>>> clf.fit(X, y)\n>>> clf.predict(np.ones(8), uncertainty=0.25)\n(16.933590347847982, array([ 8.93456428, 26.0664534 ]))\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/saattrupdan/doubt",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doubt",
    "package_url": "https://pypi.org/project/doubt/",
    "platform": null,
    "project_url": "https://pypi.org/project/doubt/",
    "project_urls": {
      "Homepage": "https://github.com/saattrupdan/doubt",
      "Repository": "https://github.com/saattrupdan/doubt"
    },
    "release_url": "https://pypi.org/project/doubt/4.2.0/",
    "requires_dist": [
      "tqdm (>=4.62.0,<5.0.0)",
      "numpy (>=1.23.0,<2.0.0)",
      "pandas (>=1.4.0,<2.0.0)",
      "joblib (>=1.1.0,<2.0.0)",
      "scikit-learn (>=1.1.1,<2.0.0)",
      "tables (>=3.7.0,<4.0.0)",
      "xlrd (>=2.0.1,<3.0.0)",
      "openpyxl (>=3.0.10,<4.0.0)"
    ],
    "requires_python": ">=3.8,<3.11",
    "summary": "Bringing back uncertainty to machine learning.",
    "version": "4.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17367866,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b221c37cc2f63e345319136a59dc23f4d0f00c4d4c204cd9609598960888dd3",
        "md5": "af52273ae6c8bdb94dd63e97dba5adc9",
        "sha256": "a4ea0064e8b6ae163cd124325bba38a78c360c9c6367d480fad5d8679f6f1b65"
      },
      "downloads": -1,
      "filename": "doubt-4.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af52273ae6c8bdb94dd63e97dba5adc9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.11",
      "size": 7120,
      "upload_time": "2022-07-17T15:42:24",
      "upload_time_iso_8601": "2022-07-17T15:42:24.915605Z",
      "url": "https://files.pythonhosted.org/packages/9b/22/1c37cc2f63e345319136a59dc23f4d0f00c4d4c204cd9609598960888dd3/doubt-4.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45f482ca6a4e0f44eea18089a504290f92c99fbc9f8dc48befe6280327a1f7b5",
        "md5": "2b163e3515b257f30e8638af82f07adc",
        "sha256": "bc72bcb91dd1bd5d08dd45e7b53b046529ef5d3c4fc0c24a8c19f11b3466070f"
      },
      "downloads": -1,
      "filename": "doubt-4.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2b163e3515b257f30e8638af82f07adc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.11",
      "size": 7533,
      "upload_time": "2022-07-17T15:42:26",
      "upload_time_iso_8601": "2022-07-17T15:42:26.659776Z",
      "url": "https://files.pythonhosted.org/packages/45/f4/82ca6a4e0f44eea18089a504290f92c99fbc9f8dc48befe6280327a1f7b5/doubt-4.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}