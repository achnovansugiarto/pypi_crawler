{
  "info": {
    "author": "Raz Nitzan",
    "author_email": "raz.nitzan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Magshimim GitLab Project Management\nThis package extracts project data from GitLab, and writes it to .csv files,\nwhich can be used for monitoring and analysis (e.g., using Excel)\n\nThe data extracted by this package includes:\n* `events.csv` - (almost) every activity made, including opening and closing issues,\npushing to the repository, and more...\n\n* `backlog.csv` - a pool of issues, not associated with assignee or milestone.\n\n* `sprints.csv` - an advanced feature for close monitoring of sprint progress (see special requirements below)\n\n### Installation\n```\npip install magpy-raz\n```\n\n### Requirements\nTo use this package, you need to provide a [GitLab personal access token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html) file, with `api` scope.\n\n### Assumptions\n* Gitlab projects belong to GitLab groups (not individual users)\n\n* Each project has a defined `start_date` and `end_date`\n\n* Output csv files will be created in the same folder as the main  program\n\n### Special Requirements for Sprint Tracking\nTo use the `sprints` feature, you need to implement the following in your \nGitLab projects:\n*  Create a set of milestones, each with a start and due date, creating a \n  continuous timeline (i.e., the due date of sprint-1 is the day before the \n  start date of sprint-2)\n\n*  Define a work-hours budget for the sprint, by including the following line \n  at the top of the milestone descrition: ` Budget: .... = __h`\n\n*  Define work estimate for each issue, associated with the milestone, by \n  using the Gitlab `/estimate` command (see [GitLab Time Tracking](https://docs.gitlab.com/ee/user/project/time_tracking.html) for more details)\n\n*  Use the standard `To Do`, `In Progress` and `Done` labels, to indicate \n  issue status.\n\n### Example\n```python\nimport magpy.general as mg\nimport magpy.hub as my\nimport magpy.hubs as mh\nimport sys\n\nHUBS = [my.Hub('בית-שמש', '5961818', '2019-10-31', '2020-04-01')]\nTOKEN = 'token-raz.txt'\n\n\ndef parse_hubs(hubs_string):\n    '''\n    Convert Hubs string to a list of Hub objects\n    '''\n    hubs = []\n\n    hub_string_list = hubs_string.split(sep=']')\n    for hub_string in hub_string_list:\n        hub_params = hub_string.strip('[,').split(sep=',')\n        if len(hub_string) >= 4:\n            hub = my.Hub(name=hub_params[0],\n                         group_id=hub_params[1],\n                         start_date=hub_params[2],\n                         end_date=hub_params[3])\n            hubs.append(hub)\n\n    return hubs\n\n\ndef main():\n    try:\n        # Get Hubs from a calling script (e.g., from Excel)\n        token = sys.argv[1]\n        hubs = parse_hubs(sys.argv[2])\n    except BaseException:\n        # Get locally defined Hubs (for debug)\n        token = TOKEN\n        hubs = HUBS\n\n    # Connect to GitLab\n    gl = mg.MagGitlab(token)\n\n    # Get data for my hubs\n    hubs = mh.Hubs(gl, hubs)\n    hubs.write_csv_files()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n### Author\n[Raz Nitzan](mailto:raz.nitzan@gmail.com)\n\n### License\n\nDistributed under the [MIT License](LICENSE).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/Razinka/magpy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magpy-raz",
    "package_url": "https://pypi.org/project/magpy-raz/",
    "platform": "",
    "project_url": "https://pypi.org/project/magpy-raz/",
    "project_urls": {
      "Homepage": "https://gitlab.com/Razinka/magpy"
    },
    "release_url": "https://pypi.org/project/magpy-raz/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extract project data from GitLab",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6672962,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17190c4476dd603bda66d046e27860114bcd5de838066bea9381b358327fe2f8",
        "md5": "0385c7f78235b0a8b3ae92bb8b999682",
        "sha256": "6b5fff83f8588de0a177e6d82ed0d69fb1db4afefa9a36d4bd92847914919469"
      },
      "downloads": -1,
      "filename": "magpy_raz-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0385c7f78235b0a8b3ae92bb8b999682",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15954,
      "upload_time": "2020-01-20T07:54:32",
      "upload_time_iso_8601": "2020-01-20T07:54:32.702211Z",
      "url": "https://files.pythonhosted.org/packages/17/19/0c4476dd603bda66d046e27860114bcd5de838066bea9381b358327fe2f8/magpy_raz-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b22818eded3f1f18b4fcabe497035318d6a4f01442529b0417f1ee84521f2539",
        "md5": "753ea132d8fc60df056928a13a879a83",
        "sha256": "52c99cd04401afd7731cdb90d6ca9f08c6075f7d1962863450898240a2a5cffd"
      },
      "downloads": -1,
      "filename": "magpy-raz-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "753ea132d8fc60df056928a13a879a83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11388,
      "upload_time": "2020-01-20T07:54:37",
      "upload_time_iso_8601": "2020-01-20T07:54:37.578978Z",
      "url": "https://files.pythonhosted.org/packages/b2/28/18eded3f1f18b4fcabe497035318d6a4f01442529b0417f1ee84521f2539/magpy-raz-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}