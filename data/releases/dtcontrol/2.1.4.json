{
  "info": {
    "author": "Christoph Weinhuber",
    "author_email": "christoph.weinhuber@tum.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "***************************************************************************\ndtControl: Decision Tree Learning Algorithms for Controller Representation\n***************************************************************************\n\n*******************\nSystem requirements\n*******************\n\nTo run dtControl, you need Python 3.8 or higher with several other libraries which are automatically installed if installing with the python-based ``pip`` package manager. We have tested the installation and basic functionality on Ubuntu Linux, MacOS Catalina and Windows 10.\n\n\n************************************\nInstalling dtControl on your machine\n************************************\n\nFor most users, running the following command should install the latest version of dtControl, as long as you have Python 3.8 or newer and ``pip`` installed on your system::\n\n    $ pip install dtcontrol\n\nNote that in case you have both Python 2 as well as Python 3 installed, you might have to run ``python3 -m pip install dtcontrol``.\n\n\n*******************\nManual Installation\n*******************\n\n*Note: In case of difficulty when following any of the instructions in this section, please check the section 'Common Installation Issues' below*\n\n1. Make sure you have Python 3.8 (or newer), `pip3` and `python3-venv` for creating virtual environments.\n\n   On **Ubuntu** 16.10 or newer::\n\n    $ sudo apt-get install python3 python3-pip python3-venv\n\n   On **MacOS**, you can install with the help of the package manager `Homebrew <https://brew.sh/>`_::\n\n    $ brew install python3\n\n   or refer to this `tutorial <https://docs.python-guide.org/starting/install3/osx/>`_ if you don't have Homebrew installed.\n\n   On **Windows**, one may follow `this <https://docs.python-guide.org/starting/install3/win/>`__ or `this <https://installpython3.com/windows/>`__ tutorial.\n\n2. Use a virtual environment to make sure that the installation is clean and easy, and does not interfere with any other python packages installed in your system. Create a new folder ``dtcontrol`` and create a virtual environment inside it and activate the virtual environment::\n\n       $ mkdir dtcontrol\n       $ cd dtcontrol\n       $ python3 -m venv venv\n       $ source venv/bin/activate\n\n   Run ``python`` and verify that the displayed version is greater than 3.8. Press ``Ctrl+D`` to exit the python console again.\n3. With the virtual environment activated, run::\n\n       $ pip install dtcontrol\n\n   This should install *dtControl* and all its dependencies. Try running *dtControl* by typing dtControl in the console. It should print the help text.\n\n\n**Uninstallation** You can delete the ``dtcontrol`` folder created above to delete all traces of dtcontrol as well as its dependencies.\n\n**************************\nCommon Installation Issues\n**************************\n\n1. If ``sudo apt-get install python3.6`` does not work, this `askubuntu answer <https://askubuntu.com/questions/865554/how-do-i-install-python-3-6-using-apt-get)>`_ might help you.\n2. In case of errors when trying to run ``virtualenv``, check that it is located in a directory that is included in your path; this `stackoverflow answer <https://stackoverflow.com/questions/31133050/virtualenv-command-not-found>`_ might be relevant.\n3. If you don't see what went wrong, leave the virtual environment (run \"deactivate\"), delete the folder ``rm -rf ~/dtcontrol-venv`` and go through all the installation steps again. If errors still occur, please `raise an issue <https://gitlab.lrz.de/i7/dtcontrol/-/issues/new?issue%5Bassignee_id%5D=&issue%5Bmilestone_id%5D=>`_ or `contact us <https://dtcontrol.model.in.tum.de>`_.\n\n***********************\nRunning the experiments\n***********************\n\nThis section assumes you have installed *dtControl* so that upon entering dtControl in your command line, the help text is displayed. Additionally it assumes that you have unzip-ed all examples in ``./dtcontrol/examples``. You can `download dtControl examples <https://gitlab.lrz.de/i7/dtcontrol-examples/-/archive/master/dtcontrol-examples-master.zip>`_ and extract them into `./dtcontrol/examples` or run the following from the terminal::\n\n    $ cd ./dtcontrol\n    $ git clone https://gitlab.lrz.de/i7/dtcontrol-examples.git examples\n\nFurther, you may either manually unzip the specific case study you would like to run or use the following command to unzip all case studies at once::\n\n    $ find . -name \"*.zip\" | while read filename; do unzip -o -d \"`dirname \"$filename\"`\" \"$filename\"; done;\n\nHowever, be warned that this would use up about 13GB of space.\n\nTo execute a single algorithm on a single model, run a command like::\n\n    $ dtcontrol --input ./dtcontrol/examples/cartpole.scs --use-preset maxfreq --timeout 30m\n\nIf run successfully, this should create a ``benchmark.html`` file displaying the results of the current run. It should also create a ``decision_trees`` folder containing the output (DOT and C files) decision trees.\n\nWe have pre-defined a few preset methods, which can be listed using::\n\n    $ dtcontrol preset --list\n\nRun ``dtcontrol preset --sample`` or see the `manual <https://dtcontrol.readthedocs.io>`_ for details on how to pick and mix your own presets.\n\nOther commands can be found by running::\n\n    $ dtcontrol --help\n\n******************\nReading the output\n******************\n\nTo get an overview of the results, the file ``benchmark.html`` is created in the directory from which you call dtControl.  You can open it in any browser.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://dtcontrol.model.in.tum.de/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtcontrol",
    "package_url": "https://pypi.org/project/dtcontrol/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtcontrol/",
    "project_urls": {
      "Homepage": "https://dtcontrol.model.in.tum.de/"
    },
    "release_url": "https://pypi.org/project/dtcontrol/2.1.4/",
    "requires_dist": [
      "Flask (==2.0.3)",
      "dd (==0.5.7)",
      "pandas (==1.4.1)",
      "ruamel.yaml (==0.17.21)",
      "scikit-learn (==1.0.2)",
      "sympy (==1.9)",
      "tabulate (==0.8.9)",
      "tqdm (==4.62.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "A small tool which can convert automatically synthesised formally verified controllers into concise decision trees.",
    "version": "2.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13018359,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "771a991a98a4a6e2e3de2ab084987c97b9e681a483f0050aff401b3eeea70e07",
        "md5": "3cab5bc1ed3c3dd59b2788ee570635de",
        "sha256": "ea866957b1ea3cb4ec7a3428a57d538aaa09d7da24192fc86055090a11df1937"
      },
      "downloads": -1,
      "filename": "dtcontrol-2.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3cab5bc1ed3c3dd59b2788ee570635de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 1572434,
      "upload_time": "2022-02-26T13:32:55",
      "upload_time_iso_8601": "2022-02-26T13:32:55.858046Z",
      "url": "https://files.pythonhosted.org/packages/77/1a/991a98a4a6e2e3de2ab084987c97b9e681a483f0050aff401b3eeea70e07/dtcontrol-2.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}