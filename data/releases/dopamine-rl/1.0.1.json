{
  "info": {
    "author": "The Dopamine Team",
    "author_email": "opensource@google.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Dopamine\n\n<div align=\"center\">\n  <img src=\"https://google.github.io/dopamine/images/dopamine_logo.png\"><br><br>\n</div>\n\nDopamine is a research framework for fast prototyping of reinforcement learning\nalgorithms. It aims to fill the need for a small, easily grokked codebase in\nwhich users can freely experiment with wild ideas (speculative research).\n\nOur design principles are:\n\n* _Easy experimentation_: Make it easy for new users to run benchmark\n                          experiments.\n* _Flexible development_: Make it easy for new users to try out research ideas.\n* _Compact and reliable_: Provide implementations for a few, battle-tested\n                          algorithms.\n* _Reproducible_: Facilitate reproducibility in results.\n\nIn the spirit of these principles, this first version focuses on supporting the\nstate-of-the-art, single-GPU *Rainbow* agent ([Hessel et al., 2018][rainbow])\napplied to Atari 2600 game-playing ([Bellemare et al., 2013][ale]).\nSpecifically, our Rainbow agent implements the three components identified as\nmost important by [Hessel et al.][rainbow]:\n\n* n-step Bellman updates (see e.g. [Mnih et al., 2016][a3c])\n* Prioritized experience replay ([Schaul et al., 2015][prioritized_replay])\n* Distributional reinforcement learning ([C51; Bellemare et al., 2017][c51])\n\nFor completeness, we also provide an implementation of DQN\n([Mnih et al., 2015][dqn]).\nFor additional details, please see our\n[documentation](https://github.com/google/dopamine/tree/master/docs).\n\nThis is not an official Google product.\n\n## Instructions\n### Install via source\nInstalling from source allows you to modify the agents and experiments as\nyou please, and is likely to be the pathway of choice for long-term use.\nThese instructions assume that you've already set up your favourite package\nmanager (e.g. `apt` on Ubuntu, `homebrew` on Mac OS X), and that a C++ compiler\nis available from the command-line (almost certainly the case if your favourite\npackage manager works).\n\nThe instructions below assume that you will be running Dopamine in a *virtual\nenvironment*. A virtual environment lets you control which dependencies are\ninstalled for which program; however, this step is optional and you may choose\nto ignore it.\n\nDopamine is a Tensorflow-based framework, and we recommend you also consult\nthe [Tensorflow documentation](https://www.tensorflow.org/install)\nfor additional details.\n\nFinally, these instructions are for Python 2.7. While Dopamine is Python 3\ncompatible, there may be some additional steps needed during installation.\n\n#### Ubuntu\n\nFirst set up the virtual environment:\n\n```\nsudo apt-get install virtualenv\nvirtualenv --python=python2.7 dopamine-env\nsource dopamine-env/bin/activate\n```\n\nThis will create a directory called `dopamine-env` in which your virtual\nenvironment lives. The last command activates the environment.\n\nThen, install the dependencies to Dopamine:\n\n```\nsudo apt-get install cmake zlib1g-dev\npip install absl-py atari-py gin-config gym opencv-python tensorflow\n```\n\nDuring installation, you may safely ignore the following error message:\n*tensorflow 1.10.1 has requirement numpy<=1.14.5,>=1.13.3, but you'll have\nnumpy 1.15.1 which is incompatible*.\n\nFinally, download the Dopamine source, e.g.\n\n```\ngit clone https://github.com/google/dopamine.git\n```\n\n#### Mac OS X\n\nFirst set up the virtual environment:\n\n```\npip install virtualenv\nvirtualenv --python=python2.7 dopamine-env\nsource dopamine-env/bin/activate\n```\n\nThis will create a directory called `dopamine-env` in which your virtual\nenvironment lives. The last command activates the environment.\n\nThen, install the dependencies to Dopamine:\n\n```\nbrew install cmake zlib\npip install absl-py atari-py gin-config gym opencv-python tensorflow\n```\n\nDuring installation, you may safely ignore the following error message:\n*tensorflow 1.10.1 has requirement numpy<=1.14.5,>=1.13.3, but you'll have\nnumpy 1.15.1 which is incompatible*.\n\nFinally, download the Dopamine source, e.g.\n\n```\ngit clone https://github.com/google/dopamine.git\n```\n\n#### Running tests\n\nYou can test whether the installation was successful by running the following:\n\n```\ncd dopamine\nexport PYTHONPATH=${PYTHONPATH}:.\npython tests/atari_init_test.py\n```\n\nThe entry point to the standard Atari 2600 experiment is\n[`dopamine/atari/train.py`](https://github.com/google/dopamine/blob/master/dopamine/atari/train.py).\nTo run the basic DQN agent,\n\n```\npython -um dopamine.atari.train \\\n  --agent_name=dqn \\\n  --base_dir=/tmp/dopamine \\\n  --gin_files='dopamine/agents/dqn/configs/dqn.gin'\n```\n\nBy default, this will kick off an experiment lasting 200 million frames.\nThe command-line interface will output statistics about the latest training\nepisode:\n\n```\n[...]\nI0824 17:13:33.078342 140196395337472 tf_logging.py:115] gamma: 0.990000\nI0824 17:13:33.795608 140196395337472 tf_logging.py:115] Beginning training...\nSteps executed: 5903 Episode length: 1203 Return: -19.\n```\n\nTo get finer-grained information about the process,\nyou can adjust the experiment parameters in\n[`dopamine/agents/dqn/configs/dqn.gin`](https://github.com/google/dopamine/blob/master/dopamine/agents/dqn/configs/dqn.gin),\nin particular by reducing `Runner.training_steps` and `Runner.evaluation_steps`,\nwhich together determine the total number of steps needed to complete an\niteration. This is useful if you want to inspect log files or checkpoints, which\nare generated at the end of each iteration.\n\nMore generally, the whole of Dopamine is easily configured using the\n[gin configuration framework](https://github.com/google/gin-config).\n\n\n### Install as a library\nAn easy, alternative way to install Dopamine is as a Python library:\n\n```\nsudo apt-get install cmake  # Or brew install, see Mac OS X instructions above.\npip install dopamine-rl\npip install atari-py\n```\n\nDepending on your particular system configuration, you may also need to install\nzlib (see \"Install via source\" above).\n\n#### Running tests\nFrom the root directory, tests can be run with a command such as:\n\n```\npython -um tests.agents.rainbow.rainbow_agent_test\n```\n\n### References\n\n[Bellemare et al., *The Arcade Learning Environment: An evaluation platform for\ngeneral agents*. Journal of Artificial Intelligence Research, 2013.][ale]\n\n[Hessel et al., *Rainbow: Combining Improvements in Deep Reinforcement Learning*.\nProceedings of the AAAI Conference on Artificial Intelligence, 2018.][rainbow]\n\n[Mnih et al., *Human-level Control through Deep Reinforcement Learning*. Nature,\n2015.][dqn]\n\n[Mnih et al., *Asynchronous Methods for Deep Reinforcement Learning*. Proceedings\nof the International Conference on Machine Learning, 2016.][a3c]\n\n[Schaul et al., *Prioritized Experience Replay*. Proceedings of the International\nConference on Learning Representations, 2016.][prioritized_replay]\n\n### Giving credit\n\nIf you use Dopamine in your work, we ask that you cite this repository as a\nreference. The preferred format (authors in alphabetical order) is:\n\nMarc G. Bellemare, Pablo Castro, Carles Gelada, Saurabh Kumar, Subhodeep Moitra.\nDopamine, https://github.com/google/dopamine, 2018.\n\n\n\n[ale]: https://arxiv.org/abs/1207.4708\n[dqn]: https://storage.googleapis.com/deepmind-media/dqn/DQNNaturePaper.pdf\n[a3c]: https://arxiv.org/abs/1602.01783\n[prioritized_replay]: https://arxiv.org/abs/1511.05952\n[c51]: https://arxiv.org/abs/1707.06887\n[rainbow]: https://arxiv.org/abs/1710.02298\n[iqn]: https://arxiv.org/abs/1806.06923\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/google/dopamine",
    "keywords": "dopamine reinforcement-learning python machine learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dopamine-rl",
    "package_url": "https://pypi.org/project/dopamine-rl/",
    "platform": "",
    "project_url": "https://pypi.org/project/dopamine-rl/",
    "project_urls": {
      "Bug Reports": "https://github.com/google/dopamine/issues",
      "Documentation": "https://github.com/google/dopamine",
      "Homepage": "https://github.com/google/dopamine",
      "Source": "https://github.com/google/dopamine"
    },
    "release_url": "https://pypi.org/project/dopamine-rl/1.0.1/",
    "requires_dist": [
      "gin-config (>=0.1.1)",
      "absl-py (>=0.2.2)",
      "tensorflow",
      "opencv-python (>=3.4.1.15)",
      "gym (>=0.10.5)"
    ],
    "requires_python": "",
    "summary": "Dopamine: A framework for flexible Reinforcement Learning research",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15170036,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82781a5cec0d17bc6375fd291392282c338d666c30cafc02896e65bc71d19eb1",
        "md5": "3bee2ce4b0c974a0acf5bdb6ec6dde2f",
        "sha256": "4638015b3d34ce559ac89bd8ec20f831ba4774d3c68ba2d04b5e975d79c82a37"
      },
      "downloads": -1,
      "filename": "dopamine_rl-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bee2ce4b0c974a0acf5bdb6ec6dde2f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 61231,
      "upload_time": "2018-08-27T20:10:12",
      "upload_time_iso_8601": "2018-08-27T20:10:12.898772Z",
      "url": "https://files.pythonhosted.org/packages/82/78/1a5cec0d17bc6375fd291392282c338d666c30cafc02896e65bc71d19eb1/dopamine_rl-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81a6945d5229ebba04f903de0c03444ae671a3b6a78b91069d115302d92393d0",
        "md5": "d02dd8898c2d9cf83037b7cf275895d1",
        "sha256": "3347ae69b3eb0f01c1d573710ce86bdc34f7b606e83a65546d4b5d3c0d6c46a0"
      },
      "downloads": -1,
      "filename": "dopamine_rl-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d02dd8898c2d9cf83037b7cf275895d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 45176,
      "upload_time": "2018-08-27T20:10:14",
      "upload_time_iso_8601": "2018-08-27T20:10:14.342781Z",
      "url": "https://files.pythonhosted.org/packages/81/a6/945d5229ebba04f903de0c03444ae671a3b6a78b91069d115302d92393d0/dopamine_rl-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}