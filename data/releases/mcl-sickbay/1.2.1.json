{
  "info": {
    "author": "Sean Kelly",
    "author_email": "sean.kelly@jpl.nasa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Buildout",
      "Intended Audience :: Developers",
      "Intended Audience :: Healthcare Industry",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Database",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# üë©‚Äç‚öïÔ∏è MCL Sickbay\n\n\"MCL Sickbay\" is the data model and object-relational mapping for the clinical data application of the [Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions](https://mcl.nci.nih.gov/).\n\n\n## üèÉ‚Äç‚ôÄÔ∏è Getting Started\n\nThe \"Sickbay\" software provides a [Python](https://python.org/) based API into a data model (a series of related classes) and takes advantage of [SQLAlchemy](https://www.sqlalchemy.org/) as the object-relational mapper. This section will help you get started.\n\n\n### üìÄ The Database\n\nFor this project, we're using [PostgreSQL](https://www.postgresql.org). You can create a PostgreSQL database to use with this software as follows:\n\n```console\ndropdb --if-exists clinical_data\ndropuser --if-exists mcl\n\ncreateuser \\\n    --createdb \\\n    --inherit \\\n    --login \\\n    --no-createrole \\\n    --no-superuser \\\n    mcl\n\n\ncreatedb --encoding=UTF8 --owner=mcl clinical_data\n```\n\n\n### üñ• The Software\n\nTo use this software, simply add `mcl.sickbay` as a dependency to your project or install it into your Python virtual environment.\n\nYou can develop, build, and test the package locally as follows:\n\n```console\npython3 -m venv venv\nvenv/bin/pip install --quiet --upgrade setuptools pip wheel build\nvenv/bin/pip install --editable .\n```\n\nYou can run `venv/bin/create-clinical-db` to populate a PostgreSQL database with the schema of the Sickbay data model. Add `--add-test-data` to include some test data or `--add-sample-data` to add some sample data (or use both!).\n\nTo build and publish this software, try [build](https://pypi.org/project/build/) and [Twine](https://twine.readthedocs.io/).\n\n\n### üî¢ Versioning\n\nWe use the [SemVer](https://semver.org/) philosophy for versioning this software. For versions available, see the [release history](https://pypi.org/project/mcl.sickbay/#history).\n\n\n## üì¶ Additional Resources\n\nSome resources that provide further context for this software are as follows:\n\n-   [Sample data, presentations, mockups, etc.](https://drive.google.com/drive/folders/1oXqRl-Aw2TSF70D9sPJaW99F9hyPiFHY?usp=sharing)\n-   [Common Data Elements](https://mcl.nci.nih.gov/resources/standards/mcl-cdes)\n\n\n## üë• Contributing\n\nWell it's wide open right now, but later you might look at [open issues](https://github.com/MCLConsortium/mcl.sickbay/issues), forking the project, and submitting a pull request.\n\n\n## üìÉ License\n\nThe project is licensed under the [Apache version 2](LICENSE.txt) license.\n\n\n\n## üìú Changelog\n\nThis documents the changes from release to release.\n\n\n### 1.2.1\n\nThis release accommodates [listings in the CDE changelog](https://mcl.nci.nih.gov/resources/standards/mcl_cdedictionaries_changelog_v11.xlsx) from 2022-03-15‚Äì2022-04-11, notably:\n\n-   `pancreaticoduodenectomy` is a new enumerated value in `RulesOfAcquisition`.\n-   `higpin` is a new enumerated value in `Precancers`.\n-   `sarcoma` is a new enumerated value in `Lesion`.\n-   In class `Biospecimen`, these fields are no longer enumerations or floats, but nullable strings:\n    -   `storage_method`\n    -   `section_thickness`\n    -   `shipping_destination`\n-   In class `Genomics`, `sequencing_platform` is now a nullable string.\n\nThe CDE changelog also mentions that `location_extent_extraprostatic_extension` and `seminal_vesicle_invasion` (although it misspells it \"vessicle\") have two new enumerated values, however in Sickbay these are simply strings, so there's no need to change anything.\n\n\n### 1.2.0\n\nThis release contains some incompatible changes to accommodate CDE updates from 2022-01-20 through 2022-01-31 See [the CDE changelog](https://mcl.nci.nih.gov/resources/standards/mcl_cdedictionaries_changelog_v6.xlsx) for details. However, given the moribund nature of the Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions, these changes are simplified for the following reasons:\n\n-   The project has concluded and we must intake any form of outstanding data presented (as [Kristen Anton](https://github.com/kristenanton) said: \"MCL is ended, we should take what data we can.\")\n-   No one actually writes queries for the relational database or uses the query interface of the ORM.\n-   The user interface just wants plain text over JSON anyway.\n\nGiven that, this and all future changes no longer models 1-to-many relationships as traditional relational database structures of 1-table-row-to-multiple-other-table-rows. Instead, we just use plain text and expect pipe (`|`) separated strings. This is what the input to this database is (pipe-separated cells in a spreadsheet) and what the UI expects, so the Herculean overhead of making the tables and ORM models to support this is ultimately fatuous.\n\nThe changes in this release include:\n\n-   The enumeration `GroupStage8` now has an additional value, `unknown`. This is not currently reflected in the [Lung CDEs](https://mcl.nci.nih.gov/resources/standards/lung_v2_31jan2022.xlsx) at this time, but we're not concerned.\n-   In the `LungOrgan` class:\n    -   The following values are now string types instead of enumerations:\n        -   `primary_adenocarcinoma_differentiation_type`\n        -   `prior_treatment`\n    -   The `ajcc_8_lung_pathologic_m` has an error; the enumeration name was duplicated as `metastasis_enum`; it's now `metastasis_enum8`.\n    -   The changelog for CDEs says that all 14 AJCC fields are now optional; but this was already the case for Sickbay since 1.1.0.\n-   In the `ProstateOrgan` class, the following values are now string types instead of enumerations:\n    -   `location_dominant_nodule`\n    -   `location_secondary_nodule`\n    -   `location_extent_extraprostatic_extension`\n    -   `location_nature_positive_margins`\n    -   `summed_length_positive_margin`\n    -   `seminal_vesicle_invasion`\n\n\n### 1.1.0\n\nThis release contains some incompatible changes in order to accommodate CDE updates from 2021-08-26 through 2021-11-18. Please [see the CDE changelog](https://mcl.nci.nih.gov/resources/standards/mcl_cdedictionaries_changelog-4.xlsx) for highly pedantic details of these updates. The changes to the software include:\n\n-   On class `Organ`:\n    -   `histopathology_precancer_type` was a 1-to-many attribute of `LungOrgan` only; now it belongs to _all_ organs as 1-to-many.\n    -   This base class now has the following optional attributes:\n        -   `ajcc_clinical_m`\n        -   `ajcc_clinical_n`\n        -   `ajcc_clinical_t`\n        -   `ajcc_clinical_stage`\n        -   `ajcc_pathologic_m`\n        -   `ajcc_pathologic_n`\n        -   `ajcc_pathologic_t`\n        -   `ajcc_pathologic_stage`\n        -   `lymph_nodes_tested`\n        -   `lymph_node_location`\n-   On the class `LungOrgan`:\n    -   There are _numerous_ changes. For one, the `ajcc_staging_system_edition` indicates whether the entire record uses the AJCC Staging edition 7 or 8, and depending on this, it tells which set of attributes to use.\n        -   The attributes are:\n            -   `ajcc_7_lung_clinical_m`\n            -   `ajcc_7_lung_clinical_n`\n            -   `ajcc_7_lung_clinical_t`\n            -   `ajcc_7_lung_disease_stage`\n            -   `ajcc_7_lung_pathologic_m`\n            -   `ajcc_7_lung_pathologic_n`\n            -   `ajcc_7_lung_pathologic_t`\n            -   `ajcc_8_lung_clinical_m`\n            -   `ajcc_8_lung_clinical_n`\n            -   `ajcc_8_lung_clinical_t`\n            -   `ajcc_8_lung_disease_stage`\n            -   `ajcc_8_lung_pathologic_m`\n            -   `ajcc_8_lung_pathologic_n`\n            -   `ajcc_8_lung_pathologic_t`\n        -   Note that all of these attributes are _optional_; this is because it's also possible that `ajcc_staging_system_edition` is `unknown` or `not_reported`, in which case we can't enforce that a specific set of the above attributes are actually used.\n    -   Lungs also have a new attribute: `lymph_nodes_positive`, an optional integer.\n-   On the class `ProstateOrgan`, these attributes have moved \"up\" into the superclass `Organ`:\n    -   `lymph_nodes_tested`\n    -   `lymph_node_location`\n    -   `ajcc_clinical_m`\n    -   `ajcc_clinical_n`\n    -   `ajcc_clinical_t`\n    -   `ajcc_clinical_stage`\n    -   `ajcc_pathologic_m`\n    -   `ajcc_pathologic_n`\n    -   `ajcc_pathologic_t`\n    -   `ajcc_pathologic_stage`\n-   In class `Biospecimen`, these attributes were required and are now optional:\n        -   `days_to_collection`\n        -   `time_excision_to_processing`\n        -   `days_to_storage`\n-   The following enumerated types have changed:\n    -   `TStage7` no longer includes the terms `t1c` or `t1mi`\n    -   `ClinicalMStage7` has dropped the terms `M1c` and `pM1`\n    -   For `GroupStage7`, the following permissible values are no longer permissible:\n        -   `ia1`\n        -   `ia2`\n        -   `ia3`\n        -   `iva`\n        -   `ivb`\n    -   `Precancers` now includes a `normal` kind\n    -   `Fixatives` now supports a `not_applicable` value\n    -   When it comes to `Storage` you now have two new options\n        -   `room_temperature_then_refrigerated`\n        -   `frozen_at__20c`\n    -   `SlideCharges` has made these values impermissible: `cm0`, `cm1`, `pm1`, `pm1a`, `pm1b`, `pm1c`\n    -   We now finally have a blessed description for `Treatment` instead of the kind contrived by a mere software developer\n    -   At long last an expert has realized that `cannot_be_determine` should be `cannot_be_determined` in `Necrosis`\n    -   The following new enumerations are ready for use:\n        -   `ClinicalMStage8` with 8 values\n        -   `ClinicalNStage8` with 7 values\n        -   `GroupStage8` with 17 values\n        -   `AJCCMetastasisStage8` with 8 values\n-   Removal of [zc.buildout](http://www.buildout.org/en/latest/). We cannot recommend this tool less. Just use virtual environments like everyone else.\n\n\n### 1.0.2\n\nFor issue https://github.com/EDRN/MCL-metadata/issues/22\n\n-   Additional permissible value on `sequencing_platform` (enum `GenomicAnalyzer`), namely `illumina_hiseq_1500`.\n-   Changed the `read_length` from numeric to a string (10)\n-   Note that we do not have schema migrations set up so these steps must be run manually:\n    -   `ALTER TABLE \"genomics\" ALTER \"read_length\" SET DATA TYPE CHARACTER VARYING(10)`\n    -   `ALTER TYPE \"genomic_analyzier_enum\" ADD VALUE 'illumina_hiseq_1500' AFTER 'illumina_genome_analyzer_iix'`\n\n\n### 1.0.1\n\n- This version adds the human-readable label plus the token value to all enumerations over the JSON; see https://github.com/MCLConsortium/mcl.sickbay/issues/16 for more information.\n\n\n### 1.0.0\n\n- A \"more official\" release.\n\n\n### 0.0.10\n\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/1:\n\n-   On `ClinicalCore`:\n    -   The `race` attribute is now a 1-to-many mapping to `CoreRace` via `core_races`\n    -   The `type_tobacco_used` is now a 1-to-many mapping to `CoreTobacco` via `core_tobaccos`\n    -   The attribute `days_to_birth` is now required\n-   On `Biospecimen`:\n    -   The enumeration for `Precancers` has a whole bunch of new permitted values\n-   On `BreastOrgan`:\n    -   The enumeration for `PrecancerousHistopathology` contains values for \"unknown\" and \"data not available\"\n    -   The enumeration for `BreastSite` now has an `unknown` value\n    -   A new value `pending` is available for `GeneticTestingAnswer`, `TestResults`, `EstrogenTestResults`\n    -   The enumeration `HER2Results` adds `pending` and `unknown` values\n    -   The enumeration `BreastImagingWorkup` adds an `unknown` value\n    -   The enumeration `BIRADSTissues` adds values for \"unknown\" and \"data not available\"\n-   New `LungOrgan` plus (bogus) test data for it\n-   New `PancreasOrgan` plus (bogus) test data for it\n-   Updated `ProstateOrgan`\n    -   Previously, this was just a placeholder to test multiple inheritance from the common `Organ` class in terms of both Python class hierachy and database hierarchy\n    -   Now it's completely filled out with the `v0` prostate common data elements with its numerous controlled vocabularies\n-   Expanded enumerations: `ClinicalMStage7`, `TStage7`, `ClinicalNStage7`, `GroupStage7`, `MarginalStatus`\n-   New enumerations, far too many to enumerate üòè\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/4:\n\n-   All fields in `LabCASMetadata` are now `String`.\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/3:\n\n-   `inscribed_clinicalCore_participant_ID` is a new field on `PriorLesion`, `CoreRace`, and `CoreTobacco`\n-   `inscribed_biospecimen_identifier` is a new field on `AdjacentSpecimen`\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/5:\n\n-   The following updates diverge from the [data dictionaries](https://mcl.nci.nih.gov/resources/standards/mcl-cdes) of the common data elements:\n    -   `participant_ID` is now 50 characters (along with foreign keys and `inscribed` fields), up from 14\n    -   `specimen_ID` is now 50 characters (along with foreign keys and `inscribed` fields), up from 16\n\nAnd finally, for issue https://github.com/MCLConsortium/mcl.sickbay/issues/6 ‚Ä¶ we add `unknown` to all enumerations that didn't have it already.\n\n\n\n### 0.0.9\n\n-   Rename `inscribed_participant_ID` ‚Üí `inscribed_clinicalCore_participant_ID`\n-   Rename `inscribed_specimen_ID` ‚Üí `inscribed_biospecimen_specimen_ID`\n\n\n### 0.0.8\n\n-   Addresses https://github.com/MCLConsortium/mcl.sickbay/issues/2 by:\n    -   Adding `inscribed_participant_ID` and `inscribed_specimen_ID` to `Genomics`\n    -   Adding `inscribed_participant_ID` and `inscribed_specimen_ID` to `Imaging`\n    -   Adding `inscribed_participant_ID` to `Biospecimen`\n    -   (It also adds some test data to these fields.)\n\n\n### 0.0.7\n\nIn this release:\n\n-   The `labcasFileURL` field is now just `labcasID`; everything else is the same except the name (and the semantics; it no longer is used to hold URLs)\n-   The `Organ` class now has an `inscribed_participant_ID` field you can use to note a future participant ID association with a `ClinicalCore`\n-   All enumerations now use [advanced enumerations](https://pypi.org/project/aenum/) for their base class.\n-   All enumerations now have a case-insensitive lookup.\n\nThe implications of that last bullet mean:\n\n```python\n>>> from mcl.sickbay.model.enums import Race\n>>> Race.black_or_african_american == Race('Black or African American')\nTrue\n>>> Race.black_or_african_american == Race['Black or African American']\nTrue\n>>> Race.black_or_african_american == Race['black or african american']\nTrue\n>>> Race('black or african american')\nTraceback (most recent call last):\n...\nValueError: 'black or african american' is not a valid Race\n```\n\nSo if you want case-insensitive lookups, use brackets, not parentheses.\n\n\n### 0.0.6\n\nIn this release:\n\n-   Base metadata for all classes now includes:\n    -   `consortium`, a nullable string that can be used to contain an RDF URI to the consortium that originated the data, such as `https://mcl.nci.nih.gov/` for the Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions.\n    -   `protocolID`, a nullable integer that tells the research protocol that generated the data.\n-   Kristen's sample data (`--add-sample-data`) includes these consortium and protocol IDs\n\n\n### 0.0.5\n\nThis release fixes:\n\n-   In `BreastOrgan`, the field `her2_in_situ_hybridization` was the wrong enumerated type. It should've been `HER2InSituHybridization`.\n-   In the enums, add the type `HER2InSituHybridization`.\n-   Add test data from `12_78_BreastCore_20200625_0`.\n-   Removed foreign key constraint from `Biospecimen.specimen_parent_ID` because the parent ID may be either another biospecimen or could be a participant (clinical core) object.\n-   New class `AdjacentSpecimen` to work around circular dependency problem of having adjacent specimens directly on `Biospeciment`.\n-   New JSON serialization for `adjacent_specimens` on `Biospecimen`\n-   Misspelled enumeration `AnatomicalSite`: `pancrease` ‚Üí `pancreas`\n-   Change `create-demo-db` to `create-clinical-db` since this is no longer a demo but the real deal\n-   Transition from old style `setup.py` to everything in `setup.cfg`\n\nIn this release, 0.0.5, we also finally start keeping a changelog üòÆ\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MCLConsortium/mcl.sickbay",
    "keywords": "rest api web clinical data lesions cancer orm model database",
    "license": "ALv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcl.sickbay",
    "package_url": "https://pypi.org/project/mcl.sickbay/",
    "platform": null,
    "project_url": "https://pypi.org/project/mcl.sickbay/",
    "project_urls": {
      "Homepage": "https://github.com/MCLConsortium/mcl.sickbay"
    },
    "release_url": "https://pypi.org/project/mcl.sickbay/1.2.1/",
    "requires_dist": [
      "psycopg2 (==2.8.5)",
      "sqlalchemy (==1.3.19)",
      "aenum (==2.2.4)"
    ],
    "requires_python": "",
    "summary": "ü§¢ Sickbay: Clinical data model for the Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15554966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6242c0c517178e6b4bc156b3b450fd7d30622ad6ec683661d6d6fb91c31947a",
        "md5": "62ad1d4f2acf6be4a80cc7b59627b489",
        "sha256": "5fb912a373d0872cde8ee8cff2edb875efadead879237adfe7cc9a2ead84ca5f"
      },
      "downloads": -1,
      "filename": "mcl.sickbay-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62ad1d4f2acf6be4a80cc7b59627b489",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 52511,
      "upload_time": "2022-04-25T20:32:59",
      "upload_time_iso_8601": "2022-04-25T20:32:59.520486Z",
      "url": "https://files.pythonhosted.org/packages/e6/24/2c0c517178e6b4bc156b3b450fd7d30622ad6ec683661d6d6fb91c31947a/mcl.sickbay-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2db18eb1d5dacaacb332021a781d2affdbdcac9b653ba1d88a7108d2ab0aa8af",
        "md5": "e89b349ec0ec4717b7a6c464e4e539b8",
        "sha256": "c6441e29c28ea73e8208cdd13022846d47b91dd5d34e6c951a4deccd88d46467"
      },
      "downloads": -1,
      "filename": "mcl.sickbay-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e89b349ec0ec4717b7a6c464e4e539b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 55438,
      "upload_time": "2022-04-25T20:33:01",
      "upload_time_iso_8601": "2022-04-25T20:33:01.104880Z",
      "url": "https://files.pythonhosted.org/packages/2d/b1/8eb1d5dacaacb332021a781d2affdbdcac9b653ba1d88a7108d2ab0aa8af/mcl.sickbay-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}