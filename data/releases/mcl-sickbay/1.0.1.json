{
  "info": {
    "author": "Sean Kelly",
    "author_email": "sean.kelly@jpl.nasa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Buildout",
      "Intended Audience :: Developers",
      "Intended Audience :: Healthcare Industry",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Database",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# 👩‍⚕️ MCL Sickbay\n\n\"MCL Sickbay\" is the data model and object-relational mapping for the clinical data application of the [Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions](https://mcl.nci.nih.gov/).\n\n\n## 🏃‍♀️ Getting Started\n\nThe \"Sickbay\" software provides a [Python](https://python.org/) based API into a data model (a series of related classes) and takes advantage of [SQLAlchemy](https://www.sqlalchemy.org/) as the object-relational mapper. This section will help you get started.\n\n\n### 📀 The Database\n\nFor this project, we're using [PostgreSQL](https://www.postgresql.org). You can create a PostgreSQL database to use with this software as follows:\n\n```console\ndropdb --if-exists clinical_data\ndropuser --if-exists mcl\n\ncreateuser \\\n    --createdb \\\n    --inherit \\\n    --login \\\n    --no-createrole \\\n    --no-superuser \\\n    mcl\n\n\ncreatedb --encoding=UTF8 --owner=mcl clinical_data\n```\n\n\n### 🖥 The Software\n\nTo use this software, simply add `mcl.sickbay` as a dependency to your project or install it into your Python virtual environment.\n\nYou can develop, build, and test the package locally as follows:\n\n```console\npython3 bootstrap.py\nbin/buildout\nbin/test\n```\n\nYou can run `bin/create-demo-db` to populate a PostgreSQL database with the schema of the Sickbay data model. Add ``-add-test-data`` to include some test data.\n\nTo publish this software, try [Twine](https://twine.readthedocs.io/).\n\n\n### 🔢 Versioning\n\nWe use the [SemVer](https://semver.org/) philosophy for versioning this software. For versions available, see the [release history](https://pypi.org/project/mcl.sickbay/#history).\n\n\n## 📦 Additional Resources\n\nSome resources that provide further context for this software are as follows:\n\n-   [Sample data, presentations, mockups, etc.](https://drive.google.com/drive/folders/1oXqRl-Aw2TSF70D9sPJaW99F9hyPiFHY?usp=sharing)\n-   [Common Data Elements](https://mcl.nci.nih.gov/resources/standards/mcl-cdes)\n\n\n## 👥 Contributing\n\nWell it's wide open right now, but later you might look at [open issues](https://github.com/MCLConsortium/mcl.sickbay/issues), forking the project, and submitting a pull request.\n\n\n## 📃 License\n\nThe project is licensed under the [Apache version 2](LICENSE.txt) license.\n\n\n\n## 📜 Changelog\n\nThis documents the changes from release to release.\n\n\n### 1.0.1\n\n- This version adds the human-readable label plus the token value to all enumerations over the JSON; see https://github.com/MCLConsortium/mcl.sickbay/issues/16 for more information.\n\n\n### 1.0.0\n\n- A \"more official\" release.\n\n\n### 0.0.10\n\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/1:\n\n-   On `ClinicalCore`:\n    -   The `race` attribute is now a 1-to-many mapping to `CoreRace` via `core_races`\n    -   The `type_tobacco_used` is now a 1-to-many mapping to `CoreTobacco` via `core_tobaccos`\n    -   The attribute `days_to_birth` is now required\n-   On `Biospecimen`:\n    -   The enumeration for `Precancers` has a whole bunch of new permitted values\n-   On `BreastOrgan`:\n    -   The enumeration for `PrecancerousHistopathology` contains values for \"unknown\" and \"data not available\"\n    -   The enumeration for `BreastSite` now has an `unknown` value\n    -   A new value `pending` is available for `GeneticTestingAnswer`, `TestResults`, `EstrogenTestResults`\n    -   The enumeration `HER2Results` adds `pending` and `unknown` values\n    -   The enumeration `BreastImagingWorkup` adds an `unknown` value\n    -   The enumeration `BIRADSTissues` adds values for \"unknown\" and \"data not available\"\n-   New `LungOrgan` plus (bogus) test data for it\n-   New `PancreasOrgan` plus (bogus) test data for it\n-   Updated `ProstateOrgan`\n    -   Previously, this was just a placeholder to test multiple inheritance from the common `Organ` class in terms of both Python class hierachy and database hierarchy\n    -   Now it's completely filled out with the `v0` prostate common data elements with its numerous controlled vocabularies\n-   Expanded enumerations: `ClinicalMStage7`, `TStage7`, `ClinicalNStage7`, `GroupStage7`, `MarginalStatus`\n-   New enumerations, far too many to enumerate 😏\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/4:\n\n-   All fields in `LabCASMetadata` are now `String`.\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/3:\n\n-   `inscribed_clinicalCore_participant_ID` is a new field on `PriorLesion`, `CoreRace`, and `CoreTobacco`\n-   `inscribed_biospecimen_identifier` is a new field on `AdjacentSpecimen`\n\nFor issue https://github.com/MCLConsortium/mcl.sickbay/issues/5:\n\n-   The following updates diverge from the [data dictionaries](https://mcl.nci.nih.gov/resources/standards/mcl-cdes) of the common data elements:\n    -   `participant_ID` is now 50 characters (along with foreign keys and `inscribed` fields), up from 14\n    -   `specimen_ID` is now 50 characters (along with foreign keys and `inscribed` fields), up from 16\n\nAnd finally, for issue https://github.com/MCLConsortium/mcl.sickbay/issues/6 … we add `unknown` to all enumerations that didn't have it already.\n\n\n\n### 0.0.9\n\n-   Rename `inscribed_participant_ID` → `inscribed_clinicalCore_participant_ID`\n-   Rename `inscribed_specimen_ID` → `inscribed_biospecimen_specimen_ID`\n\n\n### 0.0.8\n\n-   Addresses https://github.com/MCLConsortium/mcl.sickbay/issues/2 by:\n    -   Adding `inscribed_participant_ID` and `inscribed_specimen_ID` to `Genomics`\n    -   Adding `inscribed_participant_ID` and `inscribed_specimen_ID` to `Imaging`\n    -   Adding `inscribed_participant_ID` to `Biospecimen`\n    -   (It also adds some test data to these fields.)\n\n\n### 0.0.7\n\nIn this release:\n\n-   The `labcasFileURL` field is now just `labcasID`; everything else is the same except the name (and the semantics; it no longer is used to hold URLs)\n-   The `Organ` class now has an `inscribed_participant_ID` field you can use to note a future participant ID association with a `ClinicalCore`\n-   All enumerations now use [advanced enumerations](https://pypi.org/project/aenum/) for their base class.\n-   All enumerations now have a case-insensitive lookup.\n\nThe implications of that last bullet mean:\n\n```python\n>>> from mcl.sickbay.model.enums import Race\n>>> Race.black_or_african_american == Race('Black or African American')\nTrue\n>>> Race.black_or_african_american == Race['Black or African American']\nTrue\n>>> Race.black_or_african_american == Race['black or african american']\nTrue\n>>> Race('black or african american')\nTraceback (most recent call last):\n...\nValueError: 'black or african american' is not a valid Race\n```\n\nSo if you want case-insensitive lookups, use brackets, not parentheses.\n\n\n### 0.0.6\n\nIn this release:\n\n-   Base metadata for all classes now includes:\n    -   `consortium`, a nullable string that can be used to contain an RDF URI to the consortium that originated the data, such as `https://mcl.nci.nih.gov/` for the Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions.\n    -   `protocolID`, a nullable integer that tells the research protocol that generated the data.\n-   Kristen's sample data (`--add-sample-data`) includes these consortium and protocol IDs\n\n\n### 0.0.5\n\nThis release fixes:\n\n-   In `BreastOrgan`, the field `her2_in_situ_hybridization` was the wrong enumerated type. It should've been `HER2InSituHybridization`.\n-   In the enums, add the type `HER2InSituHybridization`.\n-   Add test data from `12_78_BreastCore_20200625_0`.\n-   Removed foreign key constraint from `Biospecimen.specimen_parent_ID` because the parent ID may be either another biospecimen or could be a participant (clinical core) object.\n-   New class `AdjacentSpecimen` to work around circular dependency problem of having adjacent specimens directly on `Biospeciment`.\n-   New JSON serialization for `adjacent_specimens` on `Biospecimen`\n-   Misspelled enumeration `AnatomicalSite`: `pancrease` → `pancreas`\n-   Change `create-demo-db` to `create-clinical-db` since this is no longer a demo but the real deal\n-   Transition from old style `setup.py` to everything in `setup.cfg`\n\nIn this release, 0.0.5, we also finally start keeping a changelog 😮\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MCLConsortium/mcl.sickbay",
    "keywords": "rest api web clinical data lesions cancer orm model database",
    "license": "ALv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcl.sickbay",
    "package_url": "https://pypi.org/project/mcl.sickbay/",
    "platform": "",
    "project_url": "https://pypi.org/project/mcl.sickbay/",
    "project_urls": {
      "Homepage": "https://github.com/MCLConsortium/mcl.sickbay"
    },
    "release_url": "https://pypi.org/project/mcl.sickbay/1.0.1/",
    "requires_dist": [
      "psycopg2 (==2.8.5)",
      "sqlalchemy (==1.3.19)",
      "aenum (==2.2.4)"
    ],
    "requires_python": "",
    "summary": "🤢 Sickbay: Clinical data model for the Consortium for Molecular and Cellular Characterization of Screen-Detected Lesions.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15554966,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2284a834106754b21d7ce3c8f94c8bbb43488033141bf85aba4ef637cfcfd8f1",
        "md5": "0070ab26ae7c0311002ff26a2d170cf0",
        "sha256": "9aa2b6305d9723bf42e2c65449557dfbea6affa7a020bbbe02e8bb39740cc039"
      },
      "downloads": -1,
      "filename": "mcl.sickbay-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0070ab26ae7c0311002ff26a2d170cf0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 49364,
      "upload_time": "2021-04-27T02:23:22",
      "upload_time_iso_8601": "2021-04-27T02:23:22.897037Z",
      "url": "https://files.pythonhosted.org/packages/22/84/a834106754b21d7ce3c8f94c8bbb43488033141bf85aba4ef637cfcfd8f1/mcl.sickbay-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85e2247094384789d67c30cfa9b8d0bc33d251e361d4b5d44b7262337ebf4c49",
        "md5": "7835a46ae0d3fc1f533531000cbdee5c",
        "sha256": "361c3fa2cf132ac85b44d36cb98cce8174b97e9c12c283a49cb9a8ef009774db"
      },
      "downloads": -1,
      "filename": "mcl.sickbay-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7835a46ae0d3fc1f533531000cbdee5c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46668,
      "upload_time": "2021-04-27T02:23:24",
      "upload_time_iso_8601": "2021-04-27T02:23:24.088197Z",
      "url": "https://files.pythonhosted.org/packages/85/e2/247094384789d67c30cfa9b8d0bc33d251e361d4b5d44b7262337ebf4c49/mcl.sickbay-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}