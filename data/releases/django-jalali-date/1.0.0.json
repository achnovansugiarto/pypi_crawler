{
  "info": {
    "author": "Arman Roomana",
    "author_email": "roomana.arman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![PyPi Version](https://img.shields.io/pypi/v/django-jalali-date.svg)](https://pypi.python.org/pypi/django-jalali-date)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/django-jalali-date.svg)](https://pypistats.org/packages/django-jalali-date)\n[![GitHub stars](https://img.shields.io/github/stars/a-roomana/django-jalali-date.svg?style=social)](https://github.com/a-roomana/django-jalali-date)\n# django-jalali-date\n\nJalali Date support for user interface. Easy conversion of DateTimeFiled to JalaliDateTimeField within the admin site, view and templates.\n\n\n## Dependency\n\nTo use this module you need to install jdatetime(and of course you need django) and pytz module which you can install it with easy_install or pip\n\n\n## Version Compatibility\n#### Python\n- python 3.8 and below is  compatible with 0.3.2 and below\n- python 3.X and above is compatible with 1.0.0 and above\n\n#### Django\nI tested the latest version on some Django versions on python 3.8\n- django == 3.2.8\n- django == 2.2.24\n\nI think it will work properly on other versions as well.\n\nIf you plan to use it in Django 1.X, install version 0.3.2\n\n\n\n## Install\n\n    pip install django-jalali-date   \n\n\n## Usage\n\n**settings.py**\n\n- don't forget to make sure you've also added `jalali_date` to your `INSTALLED_APPS`.\n- any global settings for a Django Jalali Date are kept in a single configuration dictionary named `JALALI_DATE_DEFAULTS`\n  - you can change the default display of dates by override `Strftime`\n  - you can use your own date picker by override `Static` \n```python\nINSTALLED_APPS = [\n\t'django_apps',\n\t\n\t'jalali_date',\n\t\n\t'my_apps',\n]\n\n# default settings\nJALALI_DATE_DEFAULTS = {\n   'Strftime': {\n        'date': '%y/%m/%d',\n        'datetime': '%H:%M:%S _ %y/%m/%d',\n    },\n    'Static': {\n        'js': [\n            # loading datepicker\n            'admin/js/django_jalali.min.js',\n            # OR\n            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.core.js',\n            # 'admin/jquery.ui.datepicker.jalali/scripts/calendar.js',\n            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc.js',\n            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc-fa.js',\n            # 'admin/js/main.js',\n        ],\n        'css': {\n            'all': [\n                'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css',\n            ]\n        }\n    },\n}\n```\n\n**views.py**\n```python\nfrom jalali_date import datetime2jalali, date2jalali\n\ndef my_view(request):\n\tjalali_join = datetime2jalali(request.user.date_joined).strftime('%y/%m/%d _ %H:%M:%S')\n```\n**forms.py**\n```python\nfrom django import forms\nfrom jalali_date.fields import JalaliDateField, SplitJalaliDateTimeField\nfrom jalali_date.widgets import AdminJalaliDateWidget, AdminSplitJalaliDateTime\n\n\nclass TestForm(forms.ModelForm):\n    class Meta:\n        model = TestModel\n        fields = ('name', 'date', 'date_time')\n\n    def __init__(self, *args, **kwargs):\n        super(TestForm, self).__init__(*args, **kwargs)\n        self.fields['date'] = JalaliDateField(label=_('date'), # date format is  \"yyyy-mm-dd\"\n            widget=AdminJalaliDateWidget # optional, to use default datepicker\n        )\n\n        # you can added a \"class\" to this field for use your datepicker!\n        # self.fields['date'].widget.attrs.update({'class': 'jalali_date-date'})\n\n        self.fields['date_time'] = SplitJalaliDateTimeField(label=_('date time'), \n            widget=AdminSplitJalaliDateTime # required, for decompress DatetimeField to JalaliDateField and JalaliTimeField\n        )\n```\n**template.html**\n```html    \n{% load jalali_tags %}\n\n<p>{{ request.user.date_joined|to_jalali:'%y/%m/%d _ %H:%M:%S' }}</p>\n\n<form method=\"post\">{% csrf_token %}\n    {{ form.as_p }}\n    <input type=\"submit\">\n</form>\n\n<!-- By default, Datepicker using jQuery, you need to set your script after loading jQuery! -->\n\t<!-- loading directly -->\n\t\t<link rel=\"stylesheet\" href=\"{% static 'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css' %}\">\n\t\t<script src=\"{% static 'admin/js/django_jalali.min.js' %}\"></script>\n\t<!-- OR -->\n\t<!-- loading by form (if used AdminJalaliDateWidget) -->\n\t\t{{ form.media }}\n```\n![example-template-form](http://bayanbox.ir/view/4091856023129600494/photo-2019-04-06-11-11-03-min.jpg)\n\n**admin.py**\n```python\nfrom django.contrib import admin\nfrom jalali_date import datetime2jalali, date2jalali\nfrom jalali_date.admin import ModelAdminJalaliMixin, StackedInlineJalaliMixin, TabularInlineJalaliMixin\t\n    \nclass MyInlines1(TabularInlineJalaliMixin, admin.TabularInline):\n\tmodel = SecendModel\n\nclass MyInlines2(StackedInlineJalaliMixin, admin.StackedInline):\n\tmodel = ThirdModel\n\t\n@admin.register(FirstModel)\nclass FirstModelAdmin(ModelAdminJalaliMixin, admin.ModelAdmin):\n\t# show jalali date in list display \n\tlist_display = ['some_fields', 'get_created_jalali']\n\t\n\tinlines = (MyInlines1, MyInlines2, )\n\traw_id_fields = ('some_fields', )\n\treadonly_fields = ('some_fields', 'date_field',)\n\t# you can override formfield, for example:\n\tformfield_overrides = {\n\t    JSONField: {'widget': JSONEditor},\n\t}\n\t\n\tdef get_created_jalali(self, obj):\n\t\treturn datetime2jalali(obj.created).strftime('%y/%m/%d _ %H:%M:%S')\n\t\n\tget_created_jalali.short_description = 'تاریخ ایجاد'\n\tget_created_jalali.admin_order_field = 'created'\n```\n![example-admin](http://bayanbox.ir/view/2877111068605695571/Screenshot-from-2016-07-26-01-37-07.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/django-jalali-date/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/a-roomana/django-jalali-date",
    "keywords": "django jalali date",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jalali-date",
    "package_url": "https://pypi.org/project/django-jalali-date/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-jalali-date/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/django-jalali-date/",
      "Homepage": "http://github.com/a-roomana/django-jalali-date"
    },
    "release_url": "https://pypi.org/project/django-jalali-date/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Jalali Date support for user interface. Easy conversion of DateTimeFiled to JalaliDateTimeField within the admin site, views, forms and templates.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12292400,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb0a7637605aa6e9c071dea9b466a3754e5698fb1920c497e24f21aff791e172",
        "md5": "06ad05f5d176f962ddb1c6c1ca097727",
        "sha256": "87dbd96465b8c51ca7582f42b957f49af7ac03bfa85aa676702dce47f7bd6932"
      },
      "downloads": -1,
      "filename": "django-jalali-date-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "06ad05f5d176f962ddb1c6c1ca097727",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 277806,
      "upload_time": "2021-10-22T12:03:09",
      "upload_time_iso_8601": "2021-10-22T12:03:09.435003Z",
      "url": "https://files.pythonhosted.org/packages/cb/0a/7637605aa6e9c071dea9b466a3754e5698fb1920c497e24f21aff791e172/django-jalali-date-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}