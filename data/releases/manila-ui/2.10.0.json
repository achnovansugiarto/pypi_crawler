{
  "info": {
    "author": "OpenStack",
    "author_email": "openstack-dev@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: OpenStack",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "========================\nTeam and repository tags\n========================\n\n.. image:: http://governance.openstack.org/badges/manila-ui.svg\n    :target: http://governance.openstack.org/reference/tags/index.html\n\n.. Change things from this point on\n\n===============================\nmanila-ui\n===============================\n\nManila Management Dashboard\n\n* Free software: Apache license\n\n.. Uncomment these bullet items when the project is integrated into OpenStack\n.. item * Documentation: http://docs.openstack.org/developer/manila-ui\n\n* Source: http://git.openstack.org/cgit/openstack/manila-ui\n* Bugs: http://bugs.launchpad.net/manila-ui\n\n\nInstallation instructions\n-------------------------\n\nFor Manila UI installation in RDO, see:\n`Installing Manila UI in RDO`_. For other distributions, begin by\ncloning the Horizon and Manila UI repositories::\n\n    git clone https://github.com/openstack/horizon\n    git clone https://github.com/openstack/manila-ui\n\nCreate a virtual environment and install Horizon dependencies::\n\n    cd horizon\n    python tools/install_venv.py\n\nSet up your ``local_settings.py`` file::\n\n    cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py\n\nOpen up the copied ``local_settings.py`` file in your preferred text\neditor. You will want to customize several settings:\n\n-  ``OPENSTACK_HOST`` should be configured with the hostname of your\n   OpenStack server. Verify that the ``OPENSTACK_KEYSTONE_URL`` and\n   ``OPENSTACK_KEYSTONE_DEFAULT_ROLE`` settings are correct for your\n   environment. (They should be correct unless you modified your\n   OpenStack server to change them.)\n\n\nInstall Manila UI with all dependencies in your virtual environment::\n\n    tools/with_venv.sh pip install -e ../manila-ui/\n\nAnd enable it in Horizon::\n\n    cp ../manila-ui/manila_ui/local/enabled/_*.py openstack_dashboard/local/enabled\n    cp ../manila-ui/manila_ui/local/local_settings.d/_90_manila_*.py openstack_dashboard/local/local_settings.d\n\n\nStarting the app\n----------------\n\nIf everything has gone according to plan, you should be able to run::\n\n    ./run_tests.sh --runserver 0.0.0.0:8080\n\nand have the application start on port 8080. The horizon dashboard will\nbe located at http://localhost:8080/\n\nInstalling Manila UI in RDO\n---------------------------\n\nIn order to install Manila UI in [RDO](https://www.rdoproject.org),\nplease follow the steps below (you may need to use `sudo` privileges\nif you are not root)::\n\n# yum install -y openstack-manila-ui\n# systemctl restart httpd\n# systemctl restart memcached\n\nManila UI will now be available through OpenStack Horizon; look for\nthe Shares tab under Project > Compute. You can access Horizon with\nManila UI using the same URL and port as before.\n\n_`Configuration`\n----------------\n\nIt is possible to enable or disable some Manila UI features. To do so,\nlook for files located in \"manila_ui/local/local_settings.d/\" directory,\nwhere you can redefine the values of the OPENSTACK_MANILA_FEATURES dict::\n\n    * enable_share_groups\n    * enable_replication\n    * enable_migration\n    * enable_public_share_type_creation\n    * enable_public_share_group_type_creation\n    * enable_public_shares\n    * enabled_share_protocols\n\nBy default, enabled_share_protocols within the OPENSTACK_MANILA_FEATURES\ndict contains a list with all the supported protocols. The operator can\nchange this to display to users only those protocols that has been deployed\nand are available to use. E.g. if only NFS is available, the operator is\nexpected to redefine enabled_share_protocols as follows:\n\n.. code-block:: python\n\n    OPENSTACK_MANILA_FEATURES = {\n       'enable_share_groups': True,\n       'enable_replication': True,\n       'enable_migration': True,\n       'enable_public_share_type_creation': True,\n       'enable_public_share_group_type_creation': True,\n       'enable_public_shares': True,\n       'enabled_share_protocols': ['NFS'],\n    }\n\nContributing\n------------\n\nWhen implementing a new feature, you may think about making it optional,\nso it could be enabled or disabled in different deployments.\n\nHow to use it:\n\n.. code-block:: python\n\n    from django.conf import settings\n    manila_config = getattr(settings, 'OPENSTACK_MANILA_FEATURES', {})\n    manila_config.get('your_new_config_option', 'value_of_config_option')\n\nSee `Configuration`_ section for more configuration details.\n\nIt is also expected that each addition of new logic to Manila UI is covered by\nunit tests.\n\nTest modules should be located under \"manila_ui/tests\", satisfying\nthe following template when tests are written for a specific module::\n\n    manila_ui[/tests]/path/to/[test_]modulename.py\n\nHowever, when testing the flow between different modules (using test app),\nthe tests can be added to a test module that can satisfy\nthe following template::\n\n    manila_ui[/tests]/path/to/directory/tests.py\n\nManila UI tests use the mock library for testing.\n\nRunning unit tests\n------------------\n\nThe unit tests can be executed directly from within this Manila UI plugin\nproject directory by using::\n\n    $ cd ../manila-ui\n    $ tox\n\nThis is made possible by the dependency in test-requirements.txt upon the\nhorizon source, which pulls down all of the horizon and openstack_dashboard\nmodules that the plugin uses.\n\nTo run only py27 unit tests, use following command::\n\n    $ tox -e py27\n\nTo run only py34 unit tests, use following command::\n\n    $ tox -e py34\n\nTo run unit tests using specific Django version use the following::\n\n    $ tox -e py27dj17\n    $ tox -e py27dj18\n    $ tox -e py27dj19\n    $ tox -e py27dj110\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://launchpad.net/manila-ui",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "manila-ui",
    "package_url": "https://pypi.org/project/manila-ui/",
    "platform": "",
    "project_url": "https://pypi.org/project/manila-ui/",
    "project_urls": {
      "Homepage": "http://launchpad.net/manila-ui"
    },
    "release_url": "https://pypi.org/project/manila-ui/2.10.0/",
    "requires_dist": [
      "Babel (>=2.3.4,!=2.4.0)",
      "Django (>=1.8,<2.0)",
      "django-compressor (>=2.0)",
      "django-openstack-auth (>=3.1.0)",
      "iso8601 (>=0.1.11)",
      "oslo.utils (>=3.20.0)",
      "pbr (!=2.1.0,>=2.0.0)",
      "python-keystoneclient (>=3.8.0)",
      "python-manilaclient (>=1.12.0)",
      "six (>=1.9.0)"
    ],
    "requires_python": "",
    "summary": "Manila Management Dashboard",
    "version": "2.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17397528,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43301c692cfff9799221136d5f913e475d95cea9941ebc997a2fb66d20d99bc7",
        "md5": "98ed8cac2b06797a81e1b96c7fae3593",
        "sha256": "1ec5c7bce403a0e3c6849e286d8eb98821ee35cef3822173588fb1dab38eff00"
      },
      "downloads": -1,
      "filename": "manila_ui-2.10.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "98ed8cac2b06797a81e1b96c7fae3593",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 358938,
      "upload_time": "2017-07-27T21:12:42",
      "upload_time_iso_8601": "2017-07-27T21:12:42.984995Z",
      "url": "https://files.pythonhosted.org/packages/43/30/1c692cfff9799221136d5f913e475d95cea9941ebc997a2fb66d20d99bc7/manila_ui-2.10.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9b7f4206a78f0b32fe861be3f4dd23b554d1a53f9108982bab562077c27d8e2",
        "md5": "27989f4f8d0c5218659fd9dffb114229",
        "sha256": "5cbde9ef1239b8e657f722a88bea621329696a11beebc7ab0d7e1f0fcc3e091c"
      },
      "downloads": -1,
      "filename": "manila-ui-2.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "27989f4f8d0c5218659fd9dffb114229",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 193998,
      "upload_time": "2017-07-27T21:12:46",
      "upload_time_iso_8601": "2017-07-27T21:12:46.095867Z",
      "url": "https://files.pythonhosted.org/packages/e9/b7/f4206a78f0b32fe861be3f4dd23b554d1a53f9108982bab562077c27d8e2/manila-ui-2.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}