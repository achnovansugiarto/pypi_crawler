{
  "info": {
    "author": "General Aeronautics",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MAVdataflash\nRead, analyze and visualize *.bin flight data logs recorded by ArduPilot\n\n## Installation\n#### Installing via [PyPI](https://pypi.org/project/MAVdataflash/)\nInstall the latest version with:\n```\n$ pip install MAVdataflash\n```\n#### Installing via [GitHub](https://github.com/generalaeronautics/MAVdataflash)\nInstall directly from the source code:\n\n    $ pip install https://github.com/generalaeronautics/MAVdataflash/archive/refs/heads/latest.zip\n\nIf you have git installed, you can also try:\n\n    $ pip install git+https://github.com/generalaeronautics/MAVdataflash.git\n\nYou can also install by cloning or downloading the repo:\n\n    $ git clone https://github.com/generalaeronautics/MAVdataflash\n    $ cd MAVdataflash\n    $ pip install .\n\nIf you get any installation or compilation errors, make sure you have the latest pip and setuptools::\n\n    $ pip install --upgrade pip setuptools\n\n## Usage\n```python\nfrom MAVdataflash import DataFlash\n```\n```python\n# Create a new instance with DataFlash class\nanalysis = DataFlash(\"flight_data.bin\")\n```\n\n```python\n# Return data in pandas dataframe\nanalysis.GetData('GPS')\n\n# Return data in polars dataframe\nanalysis.GetData('GPS', in_polars=True)\n```\n\n```python\n# Plot any Parameter and Subparameter VS Time\nanalysis.Plot('GPS', 'Alt')\n\n# Plot with instance, if parameter data type has more than 1 instance\nanalysis.Plot('IMU', 'GyrX', instance=1)\n```\n\n```python\n# Return the pandas dataframe of EV(Events) data type with Message\nanalysis.GetEvents()\n\n# Return in polars dataframe\nanalysis.GetEvents(in_polars=True)\n```\n\n```python\n# Return the pandas dataframe of MODE(Modes) data type with Message\nanalysis.GetModes()\n\n# Return in polars dataframe\nanalysis.GetModes(in_polars=True)\n```\n\n```python\n# Return the pandas dataframe of PARM(Commands) with Values\nanalysis.GetPARAMS()\n\n# Return Params in dictionary data type\nanalysis.GetPARAMS(in_dict=True)\n\n# Return in polars dataframe\nanalysis.GetPARAMS(in_polars=True)\n```\n\n```python\n# Return PARM(Command) with Value\nanalysis.GetPARAM('EK3_IMU_MASK')\n```\n\n```python\n# Return the list of Subparameter(Columns) of the Parameter data type\nanalysis.GetColumns('GPS')\n```\n\n```python\n# Return True if Parameter data type is plottable otherwise return as False\nanalysis.isPlotable('GPS')\nanalysis.isPlotable('GPS', column='Alt')\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/generalaeronautics/MAVdataflash",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MAVdataflash",
    "package_url": "https://pypi.org/project/MAVdataflash/",
    "platform": null,
    "project_url": "https://pypi.org/project/MAVdataflash/",
    "project_urls": {
      "Homepage": "https://github.com/generalaeronautics/MAVdataflash"
    },
    "release_url": "https://pypi.org/project/MAVdataflash/2.4.1/",
    "requires_dist": [
      "pymavlink (<=2.4.37)",
      "polars (<=0.14.29)",
      "pandas",
      "pyarrow",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Read, analyze and visualize *.bin flight data logs recorded by ArduPilot",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17461159,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b57625a256dd107209bf3074d89a70f830ca8c2d97d85587844f22081aa4f001",
        "md5": "e57bf48a3212a4beb8b7eb2c8b447ab4",
        "sha256": "617c53c842a88f81c8c4150ac1b4ac5684054d3d23abb6d56963e7b2307153e0"
      },
      "downloads": -1,
      "filename": "MAVdataflash-2.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e57bf48a3212a4beb8b7eb2c8b447ab4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19276,
      "upload_time": "2022-11-30T13:54:42",
      "upload_time_iso_8601": "2022-11-30T13:54:42.899082Z",
      "url": "https://files.pythonhosted.org/packages/b5/76/25a256dd107209bf3074d89a70f830ca8c2d97d85587844f22081aa4f001/MAVdataflash-2.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ebe8be645fc241a7c56255fad30b1bf3018ccce26c1088c8a076a3e24143fc87",
        "md5": "94d8d4831fa4e0d183e6b7cf8a4cf00e",
        "sha256": "dbe69477ff4188cc2cd4cc7147501ffda6f3fc6bfcf24dc60c70bd63e5123e6e"
      },
      "downloads": -1,
      "filename": "MAVdataflash-2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "94d8d4831fa4e0d183e6b7cf8a4cf00e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18735,
      "upload_time": "2022-11-30T13:54:45",
      "upload_time_iso_8601": "2022-11-30T13:54:45.240506Z",
      "url": "https://files.pythonhosted.org/packages/eb/e8/be645fc241a7c56255fad30b1bf3018ccce26c1088c8a076a3e24143fc87/MAVdataflash-2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}