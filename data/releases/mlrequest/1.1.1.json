{
  "info": {
    "author": "Mathieu Rodrigue",
    "author_email": "support@mlrequest.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Getting started\nmlrequest-python is a Python client for the [mlrequest](https://mlrequest.com) machine learning API. The client allows you to do a few significant things with minimal code.\n\n* Deploy latency-routed **scikit-learn** and **online** machine learning models to 5 data centers around the world, providing < 60ms global response time and automatic failover.\n* Get thousands of model predictions per second\n* Train online models with thousands of training examples per second\n\nYou will need an API key to get started with mlrequest-python. You can obtain one for free that provides 5,000 monthly model transactions at https://mlrequest.com/signup.html. The free plan is limited to the deployment of a single online learning model or scikit-learn model file less than 1 MB in size. Scikit-learn model transactions are prioritized for paid accounts, and will generally receive up to 50ms faster response time than free accounts.\n\nFor more transactions, larger scikit-learn model files (up to 100 MB), more models, and faster scikit-learn response times, see our paid plans at https://mlrequest.com/pricing.html. Check out our [documentation](https://docs.mlrequest.com) for more information.\n\n## Install\n```\npip install mlrequest\n```\n\n## Scikit-Learn\n### Create and Deploy a Scikit-Learn Model\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom mlrequest import SKLearn\n\nclf = RandomForestClassifier()\nclf.fit(X, y)\n\nsklearn = SKLearn('your-api-key')\nsklearn.deploy('my-rf-classifier', clf)\n\n#Make predictions\npred = sklearn.predict('my-rf-classifier')\n```\n\n## Online learning\n### Create a Model\nModels are created automatically by calling one of the model endpoints below.\n\n### Classifier\nCurrently classification is limited to logistic regression. Email support@mlrequest.com to request other online classifier models.\n```python\nfrom mlrequest import Classifier\nclassifier = Classifier('your-api-key')\n\n# Learn single\ntraining_data = {'features': {'feature1': 23.1, 'feature2': 'some-value'}, 'label': 1}\n# Learn batch\ntraining_data = [{'features': {'feature1': 23.1, 'feature2': 'some-value'}, 'label': 1}, ...]\n\nr = classifier.learn(training_data=training_data, model_name='my-model', class_count=2)\nr.content # A single response or list of responses\n\n# Predict single\nfeatures = {'feature1': 23.1, 'feature2': 'some-value'}\n# Predict batch\nfeatures = [{'feature1': 23.1, 'feature2': 'some-value'}, ...]\n\nr = classifier.predict(features=features, model_name='my-model', class_count=2)\nr.predict_result # A single predicted class or a list of predicted classes\n```\n\n### Regression\nCurrently regression is limited to linear regression. Email support@mlrequest.com to request other online regression models.\n```python\nfrom mlrequest import Regression\nregression = Regression('your-api-key')\n\n# Learn single\ntraining_data = {'features': {'feature1': 23.1, 'feature2': 'some-value'}, 'label': 1.25}\n# Learn batch\ntraining_data = [{'features': {'feature1': 23.1, 'feature2': 'some-value'}, 'label': 1.25}, ...]\n\nr = regression.learn(training_data=training_data, model_name='my-model')\nr.content # A single response or list of responses\n\n# Predict single\nfeatures = {'feature1': 23.1, 'feature2': 'some-value'}\n# Predict batch\nfeatures = [{'feature1': 23.1, 'feature2': 'some-value'}, ...]\n\nr = regression.predict(features=features, model_name='my-model')\nr.predict_result # A single predicted value or a list of predicted values\n```\n\n### Reinforcement Learning\n```python\nfrom mlrequest import RL\nrl = RL('your-api-key')\n\n# Predict\n# Note: epsilon, and action_list fields are optional - see the docs at https://docs.mlrequest.com for more information\nfeatures = {'feature1': 23.1, 'feature2': 'some-value'}\n\nr = rl.predict(features=features, model_name='my-model', session_id='some-session-id', negative_reward=0, action_count=2)\nr.predict_result # A list of actions, ordered by rank (choose r.predict_data[0] for the best action)\n\n# Reward - important note: only the first action from predict_data should be rewarded. Other actions can be used but should not be rewarded.\nr = rl.reward(model_name=model_name, session_id='some_session', reward=1)\nr.content # A single response\n```\n\n## Account\n```python\nfrom mlrequest import Account\naccount = Account('your-api-key')\n\n# Get account information\nr = account.get_details()\nr.content # Account info response\n\n# Delete a model\nr = account.delete_model(model_name='some-model')\nr.content # Delete success response\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mlrequest/mlrequest-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlrequest",
    "package_url": "https://pypi.org/project/mlrequest/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlrequest/",
    "project_urls": {
      "Homepage": "https://github.com/mlrequest/mlrequest-python"
    },
    "release_url": "https://pypi.org/project/mlrequest/1.1.1/",
    "requires_dist": [
      "requests-futures",
      "requests",
      "sklearn-json"
    ],
    "requires_python": ">=3.5",
    "summary": "Python client for the mlrequest machine learning API.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6145521,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e022b22e45fcd8dc89a19b2e8a4821d4826cad5c75a6b8128afd64c60d46e887",
        "md5": "cd2cfe5670f65db969b2b6999b10ec74",
        "sha256": "829cabacda7cf1bc9c49367792431b2f2897a76fff9f93385bf855edb0a0eea6"
      },
      "downloads": -1,
      "filename": "mlrequest-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd2cfe5670f65db969b2b6999b10ec74",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 9529,
      "upload_time": "2019-11-11T20:02:51",
      "upload_time_iso_8601": "2019-11-11T20:02:51.723659Z",
      "url": "https://files.pythonhosted.org/packages/e0/22/b22e45fcd8dc89a19b2e8a4821d4826cad5c75a6b8128afd64c60d46e887/mlrequest-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5647704751800d14f7700a0d48b9ab3da265f23018d2193373310253b9e3904",
        "md5": "845ad412519efd133819433ef6740773",
        "sha256": "a278d23cd11171a80370422b750eb3a9d4bf8d4b8d3b4e297a2857b93489a39c"
      },
      "downloads": -1,
      "filename": "mlrequest-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "845ad412519efd133819433ef6740773",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 5926,
      "upload_time": "2019-11-11T20:02:56",
      "upload_time_iso_8601": "2019-11-11T20:02:56.014366Z",
      "url": "https://files.pythonhosted.org/packages/b5/64/7704751800d14f7700a0d48b9ab3da265f23018d2193373310253b9e3904/mlrequest-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}