{
  "info": {
    "author": "Alex Kavanaugh",
    "author_email": "kavanaugh.development@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "django-ewiz\n%%%%%%%%%%%\n\nA non-relational Django database backend that utilizes EnterpriseWizard's REST interface.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:Version:           1.5.1\n:Dependencies:      Python 3.4+, Django>=1.5, djangotoolbox>=1.6.2, requests>=2.2.0\n:Home page:         https://github.com/kavdev/django-ewiz\n:Author:            Alex Kavanaugh <kavanaugh.development@outlook.com>\n:License:           GNU LGPL (http://www.gnu.org/licenses/lgpl.html)\n\n*NOTE:* Versions 1.3+ will work with the EnterpriseWizard anti-sql block. In order to achieve this, regular expression and case-insensitive query operations were removed.\n\nInstallation\n============\n\nRun ``pip install django-ewiz``\n\nAdd *django_ewiz* to ``INSTALLED_APPS``\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'django_ewiz',\n        ...\n    )\n\nUsage\n============\n\nBasic Usage\n-----------\n\nIn the ``DATABASES`` settings dictionary, simply use *django_ewiz* as the ENGINE key.\n\n.. code:: python\n\n    'default': {\n        'ENGINE': 'django_ewiz',\n        'NAME': '',  # The name of the knowlegebase\n        'USER': '',  # The name of the user\n        'PASSWORD': '',  # The user's password\n        'HOST': '',  # EnterpriseWizard's REST base url, generally 'www.example.com/ewws/'. Don't include the protocol string (e.g. 'http://').\n        'PORT': '',  # Either 80 or 443 (HTTP or HTTPS requests only)\n        'NUM_CONNECTIONS': '', # Default: 1, Allows multiple concurrent connections to be used when retrieving multiple tickets in a query. \n    },\n\nThat's it! All database operations performed will be abstracted and should function as the usual engines do (unless what you wish to do conflicts with the options below).\n\n\n*The following query operations are supported:*\n\n* iexact\n* icontains\n* in\n* gt\n* gte\n* lt\n* lte\n* istartswith\n* iendswith\n* range\n* year\n* isnull\n\n*The following query operations will be converted to their respective case-insensitive forms:* `(version 1.3+)`\n\n* exact\n* contains\n* startswith\n* endswith\n\n*The following query operations are no longer supported:* `(version 1.3+)`\n\n* regex\n* iregex\n\n*NOTE:* Not all ticket fields can be changed via REST. Add ``editable=False`` as a model option to remove DatabaseErrors.\n\n\nRelated Fields\n--------------\n\nEnterpriseWizard supports foreign table relationships in it's REST API. To mark a field as related, simply add ``help_text=':'`` as a model field option.\n\n.. code:: python\n\n    requestor_username = CharField(help_text=':', db_column='submitter_username')\n\nSurprisingly many fields are related fields. If a DatabaseError is raised and you aren't sure why, try making the field related.\n\n\nFile Uploads\n------------\n\ndjango-ewiz does support file uploads - just not in a direct manner (binary uploads to the file field won't work [more research on abstracting that will be done later])\n\nTo mark a field as a file field, add ``help_text='file'`` as a model field option. Since trying to modify the field directly won't work, adding ``editable=False`` is recommended to avoid confusion.\n\n.. code:: python\n\n    file_field = CharField(help_text='file', editable=False, db_column='attached_files')\n\nTo upload a file, use the provided EwizAttacher class (``from django_ewiz import EwizAttacher``) with the following parameters:\n\n* `settingsDict` - the DATABASES dictionary that contains ewiz connection settings. e.g. settings.DATABASES['default']\n* `model` - the model instance  to which a file should be uploaded (the model must include one and only one file field). e.g. models.AccountRequest.objects.get(ticket_id = 1)\n* `file_reference` - a Python file object. If the file is coming from a django form, grab it via request.FILES['form_field_name'].file\n* `file_name` - the desired file name. If the file is coming from a django form, you can grab its name via request.FILES['form_field_name'].name\n\n\nFile Upload Example\n===================\n\n\n`forms.py`\n\n.. code:: python\n\n    from django.forms import Form, FileField\n\n    class EwizUploadForm(Form):\n        uploaded_file = FileField(required=True)\n\n\n`models.py`\n\n.. code:: python\n\n    from django.db.models import Model, AutoField, CharField\n\n    class AccountRequest(Model):\n        ticket_id = AutoField(primary_key=True, db_column='id')\n        subject_username = CharField(help_text=':')\n\n        # Use this field only in conjunction with EwizAttacher - do not attempt to directly populate it\n        file_field = CharField(help_text='file', editable=False, db_column='attached_files')\n\n        class Meta:\n            db_table = u'account_request'\n            managed = False\n            verbose_name = u'Account Request'\n\n`views.py`\n\n.. code:: python\n\n    from django.conf import settings\n    from django.views.generic.edit import FormView\n\n    from django_ewiz import EwizAttacher\n\n    from .forms import EwizUploadForm\n    from .models import AccountRequest\n\n    class UploadDemoView(FormView):\n        template_name = \"ewizdemo.html\"\n        form_class = EwizUploadForm\n\n        def form_valid(self, form):\n            # Create a new account request\n            ticket = AccountRequest(subject_username=self.request.user.username)\n            ticket.save()\n\n            # Grab the file\n            file_reference = self.request.FILES['uploaded_file'].file\n\n            # Upload the file\n            EwizAttacher(settings_dict=settings.DATABASES['default'], model=ticket, file_reference=file_reference, file_name=self.request.user.username + u'.pdf').attach_file()",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kavdev/django-ewiz",
    "keywords": "django ewiz enterprise wizard srs",
    "license": "GNU LGPL (http://www.gnu.org/licenses/lgpl.html)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-ewiz",
    "package_url": "https://pypi.org/project/django-ewiz/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-ewiz/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/kavdev/django-ewiz"
    },
    "release_url": "https://pypi.org/project/django-ewiz/1.5.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A non-relational Django database backend that utilizes EnterpriseWizard's REST interface.",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4691718,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29ef197705cffcdd431db3de4907aa1a91253ead2b7ab18554f37ad268eb79d6",
        "md5": "70aff8fc0321a0c26d7f956552ce987c",
        "sha256": "26d0ab01a2959eb54257d7b1bfcd62be79eba879d739dd17741520d80433cd2f"
      },
      "downloads": -1,
      "filename": "django_ewiz-1.5.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70aff8fc0321a0c26d7f956552ce987c",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 18599,
      "upload_time": "2015-11-05T21:03:16",
      "upload_time_iso_8601": "2015-11-05T21:03:16.832668Z",
      "url": "https://files.pythonhosted.org/packages/29/ef/197705cffcdd431db3de4907aa1a91253ead2b7ab18554f37ad268eb79d6/django_ewiz-1.5.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7587c2e1254237208deb11edffc79e101232929087dd503746edfb01ad3d7296",
        "md5": "117c4900a7387b008c1f014c718da7ea",
        "sha256": "dd8a06223c35b06aa5602670f5031ef0e7b55cf22875fda54e01b2b5017081e6"
      },
      "downloads": -1,
      "filename": "django-ewiz-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "117c4900a7387b008c1f014c718da7ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28274,
      "upload_time": "2015-11-05T21:03:01",
      "upload_time_iso_8601": "2015-11-05T21:03:01.812169Z",
      "url": "https://files.pythonhosted.org/packages/75/87/c2e1254237208deb11edffc79e101232929087dd503746edfb01ad3d7296/django-ewiz-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}