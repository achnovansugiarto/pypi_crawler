{
  "info": {
    "author": "Tarcadia",
    "author_email": "dont@email.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# ==Dynascii==\n\n## What it is?\n\nDynascii is a light-weighted utility or application to casting things to a stream. It is implemented in Python and aimed to deploy quickly and easily on a server with a proper environment.\n\n## Can I have a preview?\n\nDemos can be found at [_telnet dynascii.tarcadia.net 6023_](telnet://dynascii.tarcadia.net:6023) for Still Alive and at [_telnet dynascii.tarcadia.net 6024_](telnet://dynascii.tarcadia.net:6024) for Bad Apple.\n\n## How it comes?\n\nDynascii is an idea rooted in two things, that i. my willing to make a light-weighted, old-school web service and ii. errorer's super eye-catching video of playing Still Alive on an EL terminal [用80年代EL显示屏终端机播放《传送门》主题曲Still Alive](https://www.bilibili.com/video/BV1cU4y1A7ud). I was working on telnet protocols that time and when errorer published this video I suddenly realized that it may not be necessary to make a BBS or something like that. A telnet video stream that sparks you with a 1900s wind could satisfy me and many other people, and anyone who can access this stream can feel the joy of rediscovering history. An early version of the prototype of Dynascii can be found in [Tarcadia/Telnet-Cast-Portal_StillAlive](https://github.com/Tarcadia/Telnet-Cast-Portal_StillAlive), as a fork from [errorer/Portal_StillAlive_Python](https://github.com/errorer/Portal_StillAlive_Python).m Use of code is authorised by errorer.\n\n## How it is designed?\n\nThis project is designed to be a small project, that any unnecessary codes and unnecessary intern relations should be avoided. So the projet codes are separately organized. Parameters are used to set properties for the main file, and it use informal imports which can be propertied by input parameters to access implementations which are separate files.\n\nThese implementations may cause some difficulty to read the code and to debug. But it provides a super flexibility to add components and reconfiguration the deployed application. By ensuring the stabiliy of these several lines of codes, I think this is a most balanced position between project managment, code reliability, and deployment flexibility.\n\n## How to use?\n\nRun the _badapple.sh_ or _stillalive.sh_ to start a server, where all configs can be found and modified.\n\nUse python3 -m dynascii --help_ for help:\n\n- --log log_file                : str, path to log file\n- --log-level log_level = INFO  : str, name of logging level\n- -6                            : flag, use of IPv6\n- --host host                   : str, hostname of server\n- --port port = 23              : uint16, port of server\n- --blocking-io                 : flag, use of blocking IO\n- --no-blocking-io              : flag, use of blocking IO, flagged for not using\n- --blocking-timeout blocking_timeout = 3   : uint, time of blocking IO timeout, 0 for no timeout\n- --no-blocking-delay no_blocking_delay = 1 : uint, time of non-blocking IO inter-polling delay\n- --backlogs backlogs = 16                  : uint, backlogs of server\n- --poolsize pool_size = 32                 : uint, size of server thread pool\n- --shell shell = nullshell                 : module, name of shell module\n- -- --xxx xxx --yyy yyy                    : extra params for shell\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tarcadia/Dynascii",
    "keywords": "Dynascii,ASCII,ASCII Art,TELNET,Tarcadia",
    "license": "GNU GENERAL PUBLIC LICENSE VERSION 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynascii",
    "package_url": "https://pypi.org/project/dynascii/",
    "platform": null,
    "project_url": "https://pypi.org/project/dynascii/",
    "project_urls": {
      "Bug Reports": "https://github.com/Tarcadia/Dynascii/issues",
      "Homepage": "https://github.com/Tarcadia/Dynascii",
      "Source": "https://github.com/Tarcadia/Dynascii"
    },
    "release_url": "https://pypi.org/project/dynascii/1.4.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Dynascii is a light-weighted utility or application to casting things to a stream. It is implemented in Python and aimed to deploy quickly and easily on a server with a proper environment.",
    "version": "1.4.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15973471,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abd19ca111d1233b382c6a60123232fbbae7db783f03bbc9f470fcb47b37ce09",
        "md5": "c157ead389deff2b0b57e411203dc72d",
        "sha256": "ab59eaa537ea6b0941bfaff470386906240257160eb32bd194444a4ad8372245"
      },
      "downloads": -1,
      "filename": "dynascii-1.4.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c157ead389deff2b0b57e411203dc72d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 22239,
      "upload_time": "2022-11-17T19:17:59",
      "upload_time_iso_8601": "2022-11-17T19:17:59.819260Z",
      "url": "https://files.pythonhosted.org/packages/ab/d1/9ca111d1233b382c6a60123232fbbae7db783f03bbc9f470fcb47b37ce09/dynascii-1.4.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}