{
  "info": {
    "author": "UNKNOWN",
    "author_email": "admin@arteria.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "django-compat\n=============\n[![Build Status](https://travis-ci.org/arteria/django-compat.svg?branch=master)](https://travis-ci.org/arteria/django-compat)\n[![Stories in Ready](https://badge.waffle.io/arteria/django-compat.png?label=ready&title=Ready)](https://waffle.io/arteria/django-compat)\n\nFor- and backwards compatibility layer for Django 1.4, 1.7 and 1.8\n\n~~Consider [django-compat](https://github.com/arteria/django-compat) as an experiment based on the discussion [on reddit](http://redd.it/2jrr4l). Let's see where it goes.~~\n\nWhat startet as an experiment based on [this discussion on reddit](http://redd.it/2jrr4l) has proven to be true in real life. django-compat is [currently being discussed](https://groups.google.com/d/msg/django-developers/ASnZ5Uyol6Y/yIPUK2SWJekJ) on the django-developer mailing list. \n\ndjango-compat is under active development. To learn about other features, bug fixes, and changes, please refer to the [changelog](https://github.com/arteria/django-compat#changelog). \n\n# Who uses django-compat\n\nTwo popular examples of open source reusable app that uses django-compat are [django-hijack](https://github.com/arteria/django-hijack/) and [django-background-tasks](https://github.com/arteria/django-background-tasks).   \nWant to have yours listed here? Send us a PR. \n\n# Why use django-compat\n\n* Be able to use the LTS versions of Django and support newer versions in your app\n* Use features from newer Django versions in an old one\n* Manage and master the gap between different framework versions\n\n# How to use django-compat\n\nInstall compat from the [PyPI](https://pypi.python.org/pypi/django-compat) or download and install manually. All relevant  releases are listed [here under releases](https://github.com/arteria/django-compat/releases).\n\nUsing one of the compatible objects is easy. For example\n\n\tfrom compat import patterns, url\n\n\turlpatterns = patterns('ABC.views',\n    \t\turl(r'^abc/$', 'abc', name='abc-link'),\n   \t...\n\t\nSee a full example [here](https://github.com/arteria/django-hijack/blob/4966d8865e7e829a562ff2724771628c6590f841/hijack/urls.py#L1).\n\n\n\n# Compatible objects\n\n* add_to_builtins\n* atomic or commit_on_success (commit_on_success replaced by atomic in Django >=1.8)\n* BytesIO\n* clean_manytomany_helptext\n* conditional_escape\n* EmailValidator\n* force_text\n* format_html\n* GenericForeignKey\n* get_ident\n* get_model_name\n* get_user_model\n* get_username_field\n* handler404\n* handler500\n* HttpResponseBase\n* import_module\n* import_string\n* include\n* JsonResponse\n* parse_qs\n* patterns\n* python_2_unicode_compatible\n* simplejson\n* slugify\n* smart_text\n* SortedDict\n* StringIO\n* unquote_plus\n* url\n* urlencode\n* urlparse\n* urlunparse\n* URLValidator\n* user_model_label\n* VariableNode\n* View\n* resolve_url\n\n# Manual adjustments\n\n## ``url`` template tag \n\nThe  ``url`` template tag works different in Django 1.4, see the [release notes](https://docs.djangoproject.com/en/1.4/releases/1.3/#changes-to-url-and-ssi) for more info. \n\n### Old, Django 1.4\n\n\t{% url url_name %} \n\t{% url url_name argument1 argument2 %}\n\t\n### New, Django 1.4 + using forwards compatibility.\n\t\n\t{% load url from future %}\n\t... \n\t{% url 'url_name' %} \n\t{% url 'url_name' argument1 argument2 %}\n\t\nThe following ``sed`` command can be used to update your templates. Note that the ``{% load url from future %}`` is missing and must be added manually.\n\t\n\tsed -i -r \"s#\\{% url ([a-zA-Z0-9_.:-]+)#\\{% url '\\1'#g\" template.html\n\n\nThe inplace editing works great on Linux. If your are working on a Mac and you get the following error \n    \n    \t\"\\1 not defined in the RE\"\n\ntry the following command:\n\n\tTMP_FILE=`mktemp /tmp/sed.XXXXXXXXXX`\n\tsed -E \"s#\\{% url ([a-zA-Z0-9_.:-]+)#\\{% url '\\1'#g\" template.html > $TMP_FILE\n\tmv $TMP_FILE template.html\n\nSource: [stackoverflow, Migrate url tags to Django 1.5](http://stackoverflow.com/a/13592772/485361)\n\n\n# Resources and references \n\n## Resources \n* https://github.com/ubernostrum/django-compat-lint\n* https://docs.djangoproject.com/en/dev/misc/api-stability/\n* https://docs.djangoproject.com/en/dev/topics/python3/\n* http://andrewsforge.com/presentation/upgrading-django-to-17/ \n \n## compat.py\n\nBits and bites of the following projects were re-used to build [django-compat](https://github.com/arteria/django-compat).\n\n- [x] https://github.com/lukaszb/django-guardian/blob/devel/guardian/compat.py\n- [X] https://github.com/evonove/django-oauth-toolkit/blob/master/oauth2_provider/compat.py\n- [X] https://github.com/toastdriven/django-tastypie/blob/master/tastypie/compat.py\n- [X] https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/compat.py\n\t- [ ] TODO: MinValueValidator, MaxValueValidator et al. (other relevant bits are included) Django 1.8\n- [X] https://gist.github.com/theskumar/ff8de60ff6a33bdacaa8\n- [ ] https://github.com/kennethreitz/requests/blob/master/requests/compat.py\n- [ ] https://github.com/mitsuhiko/jinja2/blob/master/jinja2/_compat.py\n- [ ] https://github.com/jaraco/setuptools/blob/master/setuptools/compat.py \n- [ ] https://github.com/mariocesar/sorl-thumbnail/blob/master/sorl/thumbnail/compat.py\n\n\n# Changelog\n\n### 2015/07/15\n\n* ``add_to_builtins`` was added \n\n### 2015/07/08 \n* ``get_query_set``/``get_queryset`` support was dropped again (see [#29](https://github.com/arteria/django-compat/issues/29))",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-compat",
    "package_url": "https://pypi.org/project/django-compat/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-compat/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/django-compat/1.0.7/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "For- and backwards compatibility layer for Django 1.4, 1.7 and 1.8",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3386478,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08fcfbed63e9664ea635f0b2c95171d8c0ab323f72d53fa7e54a933b79274fc1",
        "md5": "28a55b4a853788acae33763464b7b591",
        "sha256": "c79eb137b3fde83f8c6d1257a57f6898bce97061c562c239273cf550069d0e8b"
      },
      "downloads": -1,
      "filename": "django-compat-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "28a55b4a853788acae33763464b7b591",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12441,
      "upload_time": "2015-08-17T09:41:20",
      "upload_time_iso_8601": "2015-08-17T09:41:20.373610Z",
      "url": "https://files.pythonhosted.org/packages/08/fc/fbed63e9664ea635f0b2c95171d8c0ab323f72d53fa7e54a933b79274fc1/django-compat-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}