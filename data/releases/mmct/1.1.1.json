{
  "info": {
    "author": "Chris Walther Andersen",
    "author_email": "cvvand@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mmct\n\nProvides functionality for performing multinomial tests using monte carlo simulation\n\n## Background\n\nThis library contain python code that can be used to test whether a given set of observations are likely to be drawn from a multinomial distribution with a given set of parameters \\(probabilities for each case\\). Specifically, let X = \\(x1,x2,...,xk\\), where xi is the number of times we observed outcome i. We want to test whether X is taken from a multinomial distribution with probabilities p1, p2,...,pk, where p1,+p2+...+pk = 1. As is standard we quantify the test with a p-value, i.e. the probability of, by pure randomness, to get a result that is as bad or worse than X.\n\nTo measure what we mean by \"as bad or worse\" we use the log-likelihood ratio, LLR (default), or the multinomial probability function. This is explained in the context of multinomial tests in an equivalent package for the R programming language [here](https://cran.r-project.org/web/packages/XNomial/vignettes/XNomial.html). Basically, a variable that _exactly_ follows the hypothesised distribution will get a LLR of 0. Any other distribution will have an LLR smaller than 0, with more unlikely distributions getting smaller and smaller. E.g., rolling three times with a fair dice you could roll two ones and a six. That would get you an LLR of -3.47. Rolling three ones would score an LLR of -5.38.\n\nIn order to perform the test we generate a bunch of random samples from the null-hypothesis distribution, each with the same number of total observations as the item under test \\(N = x1+x2+...+xk\\). We order all of these random samples according to their log-likelihood ratio, LLR and compare with the LLR of the item under test. The p-value is simply the fraction of the random samples with an LLR smaller than that of the item under test.\n\nThe library is inspired by [met](https://pypi.org/project/met/), which achieve the same objective as mmct, but does so by painstakingly enumerating every possible case for the given multinomial distribution and calculating the p-value exactly. While this is certainly preferable, it becomes very slow very quickly, so for performing many tests or tests with a large parameter space, a monte carlo approximation may be good enough. As already mentioned, mmct has also drawn inspiration from the [XNomial](https://cran.r-project.org/web/packages/XNomial/vignettes/XNomial.html) package, which performs an identical task in the R programming language.\n\n## Usage\n\nThe package is most easlily installed via pip:\n\n```text\npip install mmct\n```\n\nThe source code is also available on GitHub and is free for use and modification: [mmct on GitHub](https://github.com/cwand/mmct/)\n\nWhen the package has been installed, a test can be performed following the example below, in which we test whether a set of dice rolls could have been generated from rolling two fair dice 20 times and adding the eyes:\n\n```text\nimport mmct\nimport numpy as np\n#     Eyes    2  3  4  5  6  7  8  9 10 11 12\nx = np.array([0, 0, 2, 4, 5, 2, 3, 1, 0, 1, 2])\n# Hypothsised probabilities:\np = np.array([1/36, 2/36, 3/36, 4/36, 5/36, 6/36, 5/36, 4/36, 3/36, 2/36, 1/36])\n# Initialise tester:\nt = mmct.mt_tester() # Use the multithreaded tester class\n# Set number of Monte Carlo samples to generate\nt.n_samples = 100000\npval = t.do_test(x,p)\n```\n\nThe result of the test will of course vary \\(unless the random simulator is seeded\\), but should in general result in a p-value around 0.31, i.e. we cannot reject the hypothesis that the numbers above are taken from a fair dice rolling \\(which they actually are\\).\n\nFor more in-depth explanation and code documentation, see the [GitHub Pages](https://cwand.github.io/mmct/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cwand/mmct",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmct",
    "package_url": "https://pypi.org/project/mmct/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmct/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cwand/mmct/issues",
      "Homepage": "https://github.com/cwand/mmct"
    },
    "release_url": "https://pypi.org/project/mmct/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Multinomial Monte Carlo testing",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10154889,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02d31da5aebcd85072e3189e8c7aea10dd8a6b660783fc6b45efae756f8492b7",
        "md5": "31ab348833fcae295aa019e2bd87993b",
        "sha256": "ff6a3061ffbabbf406faa85e5b78fcdcd2f2bbb8e3c08de52fa8ea6066025792"
      },
      "downloads": -1,
      "filename": "mmct-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31ab348833fcae295aa019e2bd87993b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6456,
      "upload_time": "2021-04-23T20:15:46",
      "upload_time_iso_8601": "2021-04-23T20:15:46.674872Z",
      "url": "https://files.pythonhosted.org/packages/02/d3/1da5aebcd85072e3189e8c7aea10dd8a6b660783fc6b45efae756f8492b7/mmct-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5062c1de2c4369ea7e568b59d6ffc83fc8ee14147ed7184388b59f3af0b6502d",
        "md5": "3f99b7d91fc578c822e5ecd04dc8eca3",
        "sha256": "d951b7ce98bad27012050e0138c9eca1a007ac4aa71ba6ae0eca717e921f13a3"
      },
      "downloads": -1,
      "filename": "mmct-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3f99b7d91fc578c822e5ecd04dc8eca3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6681,
      "upload_time": "2021-04-23T20:15:53",
      "upload_time_iso_8601": "2021-04-23T20:15:53.838956Z",
      "url": "https://files.pythonhosted.org/packages/50/62/c1de2c4369ea7e568b59d6ffc83fc8ee14147ed7184388b59f3af0b6502d/mmct-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}