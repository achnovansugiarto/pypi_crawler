{
  "info": {
    "author": "Steinwurf ApS",
    "author_email": "contact@steinwurf.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Testing"
    ],
    "description": "============\nIntroduction\n============\n\n|PyPi| |Waf Python Tests| |Black| |Flake8| |Pip Install|\n\n.. |PyPi| image:: https://badge.fury.io/py/dummynet-python.svg\n    :target: https://badge.fury.io/py/dummynet-python\n\n.. |Waf Python Tests| image:: https://github.com/steinwurf/dummynet-python/actions/workflows/python-waf.yml/badge.svg\n   :target: https://github.com/steinwurf/dummynet-python/actions/workflows/python-waf.yml\n\n.. |Flake8| image:: https://github.com/steinwurf/dummynet-python/actions/workflows/flake.yml/badge.svg\n    :target: https://github.com/steinwurf/dummynet-python/actions/workflows/flake.yml\n\n.. |Black| image:: https://github.com/steinwurf/dummynet-python/actions/workflows/black.yml/badge.svg\n      :target: https://github.com/steinwurf/dummynet-python/actions/workflows/black.yml\n\n.. |Pip Install| image:: https://github.com/steinwurf/dummynet-python/actions/workflows/pip.yml/badge.svg\n      :target: https://github.com/steinwurf/dummynet-python/actions/workflows/pip.yml\n\n\ndummynet-python is a tool for working with dummy-networks in python on Linux\nmachines. By dummy-networks we refer to setups with network namespaces, virtual\nethernets, etc.\n\nThe Dummynet class is a python wrapper for the linux 'ip netns' and 'ip link'\ntools. The methods of the class parse args directly to the command-line in your\nlinux OS.\n\nSo far, Ubuntu and Debian are supported, but please make sure, that you\nhave the iproute2 linux-package installed with::\n\n    apt-get install iproute2\n\nOther Linux operating systems have not been tested, but feel free to open an\nissue if support is needed.\n\n.. contents:: Table of Contents:\n   :local:\n\nInstallation\n============\n\nTo install dummynet-python::\n\n    pip install dummynet-python\n\nUsage\n=====\n\n::\n\n    import dummynet\n\n    def main():\n\n        with dummynet.host() as shell:\n\n            demo0 = shell.netns_add(name=\"namespace1\")\n            demo1 = shell.netns_add(name=\"namespace2\")\n\n            shell.link_veth_add(p1_name=\"peer1\", p2_name=\"peer2\")\n\nFor a complete example of a local network setup see the test in\n'test/test_dummynet.py'.\n\nYou can try playing around with the class methods in dummynet.py and call the\ncommands in self.shell.run(cmd) from the command-line. This can give a better\nidea of the functionality.\n\n\nRelease new version\n===================\n\n1. Edit NEWS.rst and wscript (set correct VERSION)\n2. Run ::\n\n    ./waf upload\n\nSource code\n===========\n\nThe main functionality is found in ``src/dummy_net.py`` and the\ncorresponding unit test is in ``test/test_dummynet.py`` if you\nwant to play/modify/fix the code this would, in most cases, be the place\nto start.\n\nDeveloper Notes\n===============\n\nWe try to make our projects as independent as possible of a local system setup.\nFor example with our native code (C/C++) we compile as much as possible from\nsource, since this makes us independent of what is currently installed\n(libraries etc.) on a specific machine.\n\nTo \"fetch\" sources we use Waf (https://waf.io/) augmented with dependency\nresolution capabilities: https://github.com/steinwurf/waf\n\nThe goal is to enable a work-flow where running::\n\n    ./waf configure\n    ./waf build --run_tests\n\nConfigures, builds and runs any available tests for a given project, such that\nyou as a developer can start hacking at the code.\n\nFor Python project this is a bit unconventional, but we think it works well.\n\nTests\n=====\n\nThe tests will run automatically by passing ``--run_tests`` to waf::\n\n    ./waf --run_tests\n\nThis follows what seems to be \"best practice\" advise, namely to install the\npackage in editable mode in a virtualenv.\n\nNotes\n=====\n\n* Why use an ``src`` folder (https://hynek.me/articles/testing-packaging/).\n  tl;dr you should run your tests in the same environment as your users would\n  run your code. So by placing the source files in a non-importable folder you\n  avoid accidentally having access to resources not added to the Python\n  package your users will install...\n* Python packaging guide: https://packaging.python.org/distributing/\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/steinwurf/dummynet-python",
    "keywords": "dummynet,network,namespace",
    "license": "BSD 3-clause \"New\" or \"Revised\" License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dummynet",
    "package_url": "https://pypi.org/project/dummynet/",
    "platform": "",
    "project_url": "https://pypi.org/project/dummynet/",
    "project_urls": {
      "Homepage": "https://github.com/steinwurf/dummynet-python"
    },
    "release_url": "https://pypi.org/project/dummynet/1.0.0/",
    "requires_dist": [
      "docker"
    ],
    "requires_python": "",
    "summary": "A tool for creating dummy networks using network namespaces.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16387613,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "839291c9ca1b3c15d088884c56943af9ed32b25c5e833621b2cfd3f1bc80532b",
        "md5": "7fd0ec99740cc35c35c33a2dacfb19a7",
        "sha256": "72209fefe80ab7d7215ab633d5d3bbf83d9fecaf06bba2a61f42ddcbd390d8cc"
      },
      "downloads": -1,
      "filename": "dummynet-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7fd0ec99740cc35c35c33a2dacfb19a7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8995,
      "upload_time": "2021-12-16T10:17:19",
      "upload_time_iso_8601": "2021-12-16T10:17:19.215231Z",
      "url": "https://files.pythonhosted.org/packages/83/92/91c9ca1b3c15d088884c56943af9ed32b25c5e833621b2cfd3f1bc80532b/dummynet-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}