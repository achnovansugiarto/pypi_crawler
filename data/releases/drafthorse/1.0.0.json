{
  "info": {
    "author": "Raphael Michel",
    "author_email": "michel@rami.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "drafthorse -- Basic ZUGFeRD implementation in Python\n====================================================\n\n.. image:: https://travis-ci.com/pretix/python-drafthorse.svg?branch=master\n   :target: https://travis-ci.com/pretix/python-drafthorse\n\n.. image:: https://codecov.io/gh/pretix/python-drafthorse/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/pretix/drafthorse\n\n.. image:: http://img.shields.io/pypi/v/drafthorse.svg\n   :target: https://pypi.python.org/pypi/drafthorse\n\nThis is a low-level python implementation of the ZUGFeRD XML format. ZUGFeRD is a German\nformat for sending digital invoices. ZUGFeRD XML files are to be attached to a PDF\nfile. This library can be used to generate or parse the contents of this XML file as well as\nattach it to a PDF. We do not support parsing PDF files (for now).\n\nBy low-level, we mean that this library models the ZUGFeRD data model 1:1 without any further\nabstractions or simplifications. You can set and parse all parameters defined in ZUGFeRD 1.0.\n\nAll output is validated against the official XSDs, but no validation of profile levels (basic, comfort, extended) is performed.\n\nUsage\n-----\n\nParsing::\n\n    >>> from drafthorse.models.document import Document\n    >>> samplexml = open(\"sample.xml\", \"rb\").read()\n    >>> doc = Document.parse(samplexml)\n    >>> str(doc.trade.agreement.seller.name)\n    'Lieferant GmbH'\n\nGenerating::\n\n    >>> from datetime import date\n    >>> from drafthorse.models.document import Document\n    >>> from drafthorse.models.note import IncludedNote\n\n    >>> doc = Document()\n    >>> doc.context.guideline_parameter.id = \"urn:ferd:CrossIndustryDocument:invoice:1p0:comfort\"\n    >>> doc.header.id = \"RE1337\"\n    >>> doc.header.name = \"RECHNUNG\"\n    >>> doc.header.type_code = \"380\"\n    >>> doc.header.issue_date_time.value = date.today()\n    >>> doc.header.languages.add(\"de\")\n    >>> note = IncludedNote()\n    >>> note.content.add(\"Test Node 1\")\n    >>> doc.header.notes.add(n)\n    >>> doc.trade.agreement.seller.name = \"Lieferant GmbH\"\n\n    >>> xml = doc.serialize()\n    >>> xml\n    b'<?xml version=\"1.0\" encoding=\"UTF-8\"?><rsm:CrossIndustryDocument â€¦'\n\n    >>> new_pdf_bytes = attach_xml(original_pdf_bytes, xml, 'BASIC')\n\n\n\n\nDevelopment\n-----------\n\nTo run the included tests::\n\n    pip install -r requirements_dev.txt\n    py.test tests\n\nTo automatically sort your Imports as required by CI::\n\n    pip install isort\n    isort -rc .\n\n\nCredits and License\n-------------------\n\nMaintainer: Raphael Michel <michel@rami.io>\n\nLicense: Apache License 2.0\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pretix/pretix-drafthorse",
    "keywords": "xml banking sepa",
    "license": "Apache License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drafthorse",
    "package_url": "https://pypi.org/project/drafthorse/",
    "platform": "",
    "project_url": "https://pypi.org/project/drafthorse/",
    "project_urls": {
      "Homepage": "https://github.com/pretix/pretix-drafthorse"
    },
    "release_url": "https://pypi.org/project/drafthorse/1.0.0/",
    "requires_dist": [
      "lxml",
      "PyPDF2"
    ],
    "requires_python": "",
    "summary": "Python ZUGFeRD XML implementation",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16652336,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f67ccc5ec08c5dec22743a16f3e68f3814274d76d25c3e09b834cb8db3aa9fb",
        "md5": "bbec94fbc67471fb60f0d0bb551dbf4b",
        "sha256": "7d92552c7d9dc32f94753f356344549e262f674e94576480a7a02b667258341c"
      },
      "downloads": -1,
      "filename": "drafthorse-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bbec94fbc67471fb60f0d0bb551dbf4b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 79138,
      "upload_time": "2018-10-27T21:25:33",
      "upload_time_iso_8601": "2018-10-27T21:25:33.676105Z",
      "url": "https://files.pythonhosted.org/packages/1f/67/ccc5ec08c5dec22743a16f3e68f3814274d76d25c3e09b834cb8db3aa9fb/drafthorse-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55ea579e6271781c75d2608f037573f9faa43c9f70dd69ceef31689889abc35d",
        "md5": "f70d21698228d36ef64d71db5ea50aca",
        "sha256": "83828afd05c8c4394943bf2e85c8f06c9daf86a600dc18409a9b480e7a3815e1"
      },
      "downloads": -1,
      "filename": "drafthorse-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f70d21698228d36ef64d71db5ea50aca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 72632,
      "upload_time": "2018-10-27T21:25:35",
      "upload_time_iso_8601": "2018-10-27T21:25:35.362873Z",
      "url": "https://files.pythonhosted.org/packages/55/ea/579e6271781c75d2608f037573f9faa43c9f70dd69ceef31689889abc35d/drafthorse-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}