{
  "info": {
    "author": "Raphael Michel",
    "author_email": "michel@rami.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "drafthorse -- Basic ZUGFeRD implementation in Python\n====================================================\n\n.. image:: https://travis-ci.com/pretix/python-drafthorse.svg?branch=master\n   :target: https://travis-ci.com/pretix/python-drafthorse\n\n.. image:: https://codecov.io/gh/pretix/python-drafthorse/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/pretix/drafthorse\n\n.. image:: http://img.shields.io/pypi/v/drafthorse.svg\n   :target: https://pypi.python.org/pypi/drafthorse\n\nThis is a low-level python implementation of the ZUGFeRD XML format. ZUGFeRD is a German\nformat for sending digital invoices. ZUGFeRD XML files are to be attached to a PDF\nfile. This library can be used to generate or parse the contents of this XML file as well as\nattach it to a PDF. We do not support parsing PDF files (for now).\n\nBy low-level, we mean that this library tries to model the ZUGFeRD data model 1:1 without any\nfurther abstractions or simplifications. You can set and parse all parameters defined in ZUGFeRD\n2.2.\n\nAll output is validated against the official XSDs, but no validation of profile levels\n(basic, comfort, extended) is performed.\n\nUsage\n-----\n\nParsing::\n\n    from drafthorse.models.document import Document\n    samplexml = open(\"sample.xml\", \"rb\").read()\n    doc = Document.parse(samplexml)\n    print(doc.trade.agreement.seller.name)\n\nGenerating::\n\n    import os\n    from datetime import date\n    from decimal import Decimal\n\n    from drafthorse.models.accounting import ApplicableTradeTax\n    from drafthorse.models.document import Document\n    from drafthorse.models.note import IncludedNote\n    from drafthorse.models.tradelines import LineItem\n    from drafthorse.pdf import attach_xml\n\n    # Build data structure\n    doc = Document()\n    doc.context.guideline_parameter.id = \"urn:cen.eu:en16931:2017#conformant#urn:factur-x.eu:1p0:extended\"\n    doc.header.id = \"RE1337\"\n    doc.header.type_code = \"380\"\n    doc.header.name = \"RECHNUNG\"\n    doc.header.issue_date_time = date.today()\n    doc.header.languages.add(\"de\")\n\n    note = IncludedNote()\n    note.content.add(\"Test Node 1\")\n    doc.header.notes.add(note)\n\n    doc.trade.agreement.seller.name = \"Lieferant GmbH\"\n    doc.trade.settlement.payee.name = \"Kunde GmbH\"\n\n    doc.trade.agreement.buyer.name = \"Kunde GmbH\"\n    doc.trade.settlement.invoicee.name = \"Kunde GmbH\"\n\n    doc.trade.settlement.currency_code = \"EUR\"\n    doc.trade.settlement.payment_means.type_code = \"ZZZ\"\n\n    li = LineItem()\n    li.document.line_id = \"1\"\n    li.product.name = \"Rainbow\"\n    li.agreement.gross.amount = Decimal(\"999.00\")\n    li.agreement.gross.basis_quantity = (Decimal(\"1.0000\"), \"C62\")  # C62 == pieces\n    li.agreement.net.amount = Decimal(\"999.00\")\n    li.agreement.net.basis_quantity = (Decimal(\"999.00\"), \"EUR\")\n    li.delivery.billed_quantity = (Decimal(\"1.0000\"), \"C62\")  # C62 == pieces\n    li.settlement.trade_tax.type_code = \"VAT\"\n    li.settlement.trade_tax.category_code = \"E\"\n    li.settlement.trade_tax.rate_applicable_percent = Decimal(\"0.00\")\n    li.settlement.monetary_summation.total_amount = Decimal(\"999.00\")\n    doc.trade.items.add(li)\n\n    trade_tax = ApplicableTradeTax()\n    trade_tax.calculated_amount = Decimal(\"0.00\")\n    trade_tax.basis_amount = Decimal(\"999.00\")\n    trade_tax.type_code = \"VAT\"\n    trade_tax.category_code = \"E\"\n    trade_tax.rate_applicable_percent = Decimal(\"0.00\")\n    doc.trade.settlement.trade_tax.add(trade_tax)\n\n    doc.trade.settlement.monetary_summation.line_total = Decimal(\"999.00\")\n    doc.trade.settlement.monetary_summation.charge_total = Decimal(\"0.00\")\n    doc.trade.settlement.monetary_summation.allowance_total = Decimal(\"0.00\")\n    doc.trade.settlement.monetary_summation.tax_basis_total = Decimal(\"999.00\")\n    doc.trade.settlement.monetary_summation.tax_total = Decimal(\"0.00\")\n    doc.trade.settlement.monetary_summation.grand_total = Decimal(\"999.00\")\n    doc.trade.settlement.monetary_summation.due_amount = Decimal(\"999.00\")\n\n    # Generate XML file\n    xml = doc.serialize(schema=\"FACTUR-X_EXTENDED\")\n\n    # Attach XML to an existing PDF.\n    # Note that the existing PDF should be compliant to PDF/A-3!\n    # You can validate this here: https://www.pdf-online.com/osa/validate.aspx\n    with open(\"input.pdf\", \"rb\") as original_file:\n        new_pdf_bytes = attach_xml(original_file.read(), xml, 'EXTENDED')\n\n    with open(\"output.pdf\", \"wb\") as f:\n        f.write(new_pdf_bytes)\n\n\nDevelopment\n-----------\n\nTo run the included tests::\n\n    pip install -r requirements_dev.txt\n    py.test tests\n\nTo automatically sort your Imports as required by CI::\n\n    pip install isort\n    isort -rc .\n\nTo validate files using mustang::\n\n    git clone https://github.com/ZUGFeRD/mustangproject.git\n    cd mustangproject\n    git checkout core-2.5.1\n    ./mvnw clean package\n    java -jar Mustang-CLI/target/Mustang-CLI-2.5.1-SNAPSHOT.jar --action validate --source invoice.pdf\n\n\nCredits and License\n-------------------\n\nMaintainer: Raphael Michel <michel@rami.io>\n\nLicense of the Python code: Apache License 2.0\n\nThe PDF handling (drafthorse/pdf.py) is based on the code of factur-x, Copyright 2016-2018, Alexis de Lattre <alexis.delattre@akretion.com>,\nreleased under a BSD license.\n\nThe packages includes schemas and samples of the ZUGFeRD specification (.xsd and .xml files) which are owned by the *Forum für elektronische Rechnungen bei der AWV e.V („FeRD“)* and are released under a proprietary license that allows bundling them together with other software for free.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pretix/python-drafthorse",
    "keywords": "xml banking sepa",
    "license": "Apache License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drafthorse",
    "package_url": "https://pypi.org/project/drafthorse/",
    "platform": null,
    "project_url": "https://pypi.org/project/drafthorse/",
    "project_urls": {
      "Homepage": "https://github.com/pretix/python-drafthorse"
    },
    "release_url": "https://pypi.org/project/drafthorse/2.2.1/",
    "requires_dist": [
      "lxml",
      "PyPDF2"
    ],
    "requires_python": "",
    "summary": "Python ZUGFeRD XML implementation",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16652336,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d5dd58ea300b6b0db92423c206ed0a2bd7c778da88f608f736648b2d81d0fdf",
        "md5": "b9353e494d986158c2c33866d8639c17",
        "sha256": "d21e11cb75acd731fcebc896f5ac06fee9b3f7836450f31889f6d765aab8b489"
      },
      "downloads": -1,
      "filename": "drafthorse-2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9353e494d986158c2c33866d8639c17",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 69799,
      "upload_time": "2023-02-01T15:38:51",
      "upload_time_iso_8601": "2023-02-01T15:38:51.244063Z",
      "url": "https://files.pythonhosted.org/packages/0d/5d/d58ea300b6b0db92423c206ed0a2bd7c778da88f608f736648b2d81d0fdf/drafthorse-2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a545753c9e43387a62d209838e8bfd1a517a1d579cf8cc08d7272deb7710df4c",
        "md5": "8cbd7657d601565c6a75532f1e85f606",
        "sha256": "6fafdae1e4bab0d0f96cdda527708bb36560a560673d485527eb39ee97289bc0"
      },
      "downloads": -1,
      "filename": "drafthorse-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8cbd7657d601565c6a75532f1e85f606",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 57113,
      "upload_time": "2023-02-01T15:38:53",
      "upload_time_iso_8601": "2023-02-01T15:38:53.188587Z",
      "url": "https://files.pythonhosted.org/packages/a5/45/753c9e43387a62d209838e8bfd1a517a1d579cf8cc08d7272deb7710df4c/drafthorse-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}