{
  "info": {
    "author": "Greg Brown",
    "author_email": "greg@gregbrown.co.nz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-baseclasses is a small set of helpers and abstract base model\nclasses for django.\n\nInstallation\n============\n\n::\n\n    python ./setup.py install\n\nOr with pip:\n\n::\n\n    pip install django-baseclasses\n\nAbstract classes provided in ``baseclasses.models``\n===================================================\n\n``DateAuditModel``\n------------------\n\nStores a record of when the model was created and last changed, in the\n``creation_date`` and ``last_updated`` fields, orders on\n``creation_date``, and provides ``get_next`` and ``get_prev`` methods\nrespecting the ordering.\n\n``BaseContentModel``\n--------------------\n\nExtends ``DateAuditModel``, adding ``is_live`` and ``pub_date`` fields,\nand provides a ``live`` method on the default manager which returns only\nobjects with ``is_live`` set and a non-future ``pub_date``. Also orders\nby ``pub_date``, and provides ``next_live`` and ``prev_live`` methods\nwhich only cycle through \"live\" objects.\n\n``BaseImageModel``\n------------------\n\nProvides ``caption``, ``image`` and ``sort_order`` fields. Orders on\n``sort_order``.\n\n``BaseModelWithImages``\n-----------------------\n\nParent model for use with a ``BaseImageModel`` with a ForeignKey to this\nmodel. Provides ``primary_image`` property which returns the first\nrelated image object, or ``None``. The ForeignKey's ``related_name``\nmust be \"image\\_set\"\n\n``BaseHierarchyModel``\n----------------------\n\nProvides ``parent`` field to create a simple hierarchy system, i.e.\ncategories and subcategories. Provides get\\_hierarchy method, which\nreturns a list of objects in the tree, from the top level to the\ncurrent.\n\nModel fields\n============\n\n``baseclasses.fields.ConstrainedImageField``\n--------------------------------------------\n\nResizes the image on upload and overwrites the original. Use\n``max_dimensions`` argument to determine the resize behaviour.\n\nHelpers\n=======\n\n``baseclasses.util.next_or_prev_in_order``\n------------------------------------------\n\nArguments: ``(instance, prev=False, qs=None, loop=False)``\n\nGet the next (or previous with prev=True) item for an instance, from the\ngiven queryset (which is assumed to contain instance), respecting\nqueryset ordering. If loop is True, return the first/last item when the\nend/start is reached.\n\nExample:\n========\n\n::\n\n    # models.py\n\n    from django.db import models\n    from baseclasses.models import BaseContentModel, BaseModelWithImages, \\\n                                   BaseImageModel\n\n\n    class Article(BaseContentModel, BaseModelWithImages):\n        title = models.CharField(max_length=190) \n        text = models.TextField()\n        \n     \n    class ArticleImage(BaseImageModel):\n        article = models.ForeignKey(Article, related_name='image_set')\n        \n\nWith the above model definition, you can do the following:\n\n::\n\n    articles = Article.objects.live() # get queryset of all live articles\n    article = articles[0]\n    article.primary_image # get primary image (model instance) for the article\n    article.next_live # get next live article",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gregplaysguitar/django-baseclasses",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-baseclasses",
    "package_url": "https://pypi.org/project/django-baseclasses/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-baseclasses/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/gregplaysguitar/django-baseclasses"
    },
    "release_url": "https://pypi.org/project/django-baseclasses/1.0.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A set of reusable base classes and helpers for django",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2833289,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c272a94c782bc0b89bc211202249a068e82d7c7b6fff6ef4cb0ed6fea2214a5b",
        "md5": "2820cf0d83f03e33861eeb6d72a519ae",
        "sha256": "4b4293ba04126b240a103b1d54232f712834d3b33e51f0529504011578aef12a"
      },
      "downloads": -1,
      "filename": "django-baseclasses-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2820cf0d83f03e33861eeb6d72a519ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6517,
      "upload_time": "2016-09-09T02:43:15",
      "upload_time_iso_8601": "2016-09-09T02:43:15.124376Z",
      "url": "https://files.pythonhosted.org/packages/c2/72/a94c782bc0b89bc211202249a068e82d7c7b6fff6ef4cb0ed6fea2214a5b/django-baseclasses-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}