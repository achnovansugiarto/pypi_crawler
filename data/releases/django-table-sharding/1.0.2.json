{
  "info": {
    "author": "Raymond Hernandez",
    "author_email": "bizong@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "=====================\nDjango-Table-Sharding\n=====================\n\nDjango table sharding is an app that will allow you to shard your database tables in the\nsame database using a shard key or shard suffix.\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"django_table_sharding\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'django_table_sharding',\n    ]\n\nEvery time migrations are run it will copy changes from the source\ntable to the sharded tables.\n\nSet the model manager to the models you want to shard into their own tables.\nExample::\n\n    objects = ShardManager()\n\nThe migration process will automatically find all sharded models and apply the\nnew migrations.\n\nSharded models can have ForeignKeys, but other models cannot foreign key to the sharded\nmodels because original table is not used.\n\nSharded models cannot contain OneToOneField, or ManyToManyField, for same reason.\n\nWhen running migrations the normal migration will run as normal, and then changes to source table,\nwill be applied to all shards in the database.\n\nBefore deploying to production please make sure everything fits your needs.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rayhern/django-table-sharding",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-table-sharding",
    "package_url": "https://pypi.org/project/django-table-sharding/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-table-sharding/",
    "project_urls": {
      "Homepage": "https://github.com/rayhern/django-table-sharding"
    },
    "release_url": "https://pypi.org/project/django-table-sharding/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django app to automatically handle sharding model tables in MySQL.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7640973,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "264d0e6707ce49d4dde0aa227b8527e75228d4cf598e02aba05a52f5d2dc0dfb",
        "md5": "efb278d116f99c5d9d2257bbf802e398",
        "sha256": "798e21621580f23f8926b75919bb9cab16bf4702e9098a182ddda426b285e54c"
      },
      "downloads": -1,
      "filename": "django-table-sharding-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "efb278d116f99c5d9d2257bbf802e398",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15253,
      "upload_time": "2020-07-05T07:52:04",
      "upload_time_iso_8601": "2020-07-05T07:52:04.467660Z",
      "url": "https://files.pythonhosted.org/packages/26/4d/0e6707ce49d4dde0aa227b8527e75228d4cf598e02aba05a52f5d2dc0dfb/django-table-sharding-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}