{
  "info": {
    "author": "Fang Li",
    "author_email": "surivlee+djsaml2auth@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=====================================\nDjango SAML2 Authentication Made Easy\n=====================================\n\n:Author: Fang Li\n:Version: 1.0.3\n\n.. image:: https://img.shields.io/pypi/pyversions/django-saml2-auth.svg\n    :target: https://pypi.python.org/pypi/django-saml2-auth\n\n.. image:: https://img.shields.io/pypi/v/django-saml2-auth.svg\n    :target: https://pypi.python.org/pypi/django-saml2-auth\n\n.. image:: https://img.shields.io/pypi/dm/django-saml2-auth.svg\n        :target: https://pypi.python.org/pypi/django-saml2-auth\n\nThis project aim to provide a dead simple way to integrate your Django powered app with SAML2 Authentication.\nTry it now, and get rid of the complicated configuration of saml.\n\nAny SAML2 based SSO(Single-Sign-On) with dynamic metadata configuration was supported by this django plugin, Such as okta.\n\n\n\nDependencies\n============\n\nThis plugin compatiable with Django 1.6/1.7/1.8/1.9, Python module `pysaml2` required.\n\n\n\nInstall\n=======\n\nYou can install this plugin via `pip`:\n\n.. code-block:: bash\n\n    # pip install django_saml2_auth\n\nor from source:\n\n.. code-block:: bash\n\n    # git clone https://github.com/fangli/django-saml2-auth\n    # cd django-saml2-auth\n    # python setup.py install\n\n\n\nWhat does this plugin do?\n=========================\n\nThis plugin takes over django's login page and redirect user to SAML2 SSO authentication service. While a user \nlogged in and redirected back, it will check if this user is already in system. If not, it will create the user using django's default UserModel,\notherwise redirect the user to the last visited page.\n\n\n\nHow to use?\n===========\n\n#. Override the default login page in root urls.py, by adding these lines **BEFORE** any `urlpatterns`:\n\n    .. code-block:: python\n\n        # This is the SAML2 related URLs, you can change \"^saml2_auth/\" to any path you want, like \"^sso_auth/\", \"^sso_login/\", etc. (required)\n        url(r'^saml2_auth/', include('django_saml2_auth.urls')),\n\n        # If you want to replace the default user login with SAML2, just use the following line (optional)\n        url(r'^accounts/login/$', 'django_saml2_auth.views.signin'),\n\n        # If you want to replace the admin login with SAML2, use the following line (optional)\n        url(r'^admin/login/$', 'django_saml2_auth.views.signin'),\n\n#. Add 'django_saml2_auth' to INSTALLED_APPS\n\n    .. code-block:: python\n\n        INSTALLED_APPS = [\n            '...',\n            'django_saml2_auth',\n        ]\n\n#. In settings.py, add SAML2 related configuration.\n\n    Please note only **METADATA_AUTO_CONF_URL** is required. The following block just shows the full featured configuration and their default values.\n\n    .. code-block:: python\n\n        SAML2_AUTH = {\n            # Required\n            'METADATA_AUTO_CONF_URL': '[The auto(dynamic) metadata configuration URL of SAML2]',\n\n            # Following optional\n            'NEW_USER_PROFILE': {\n                'USER_GROUPS': [],  # The default group name when a new user logged in\n                'ACTIVE_STATUS': True,  # The default active status of new user\n                'STAFF_STATUS': True,  # The staff status of new user\n                'SUPERUSER_STATUS': False,  # The superuser status of new user\n            },\n            'ATTRIBUTES_MAP': {  # Change Email/UserName/FirstName/LastName to corresponding SAML2 userprofile attributes.\n                'email': 'Email',\n                'username': 'UserName',\n                'first_name': 'FirstName',\n                'last_name': 'LastName',\n            },\n            'TRIGGER': {\n                'CREATE_USER': 'path.to.your.new.user.hook.method',\n                'BEFORE_LOGIN': 'path.to.your.login.hook.method',\n            },\n        }\n\n#. In your SAML2 SSO service provider, set Single-sign-on URL and Audience URI(SP Entity ID) to http://your-domain/saml2_auth/acs/\n\n\nExplanation\n-----------\n\n**METADATA_AUTO_CONF_URL** Auto SAML2 metadata configuration URL\n\n**NEW_USER_PROFILE** Everytime when a new user login, we will create the user with this default options in system.\n\n**ATTRIBUTES_MAP** map django user attributes to SAML2 user attributes.\n\n**TRIGGER** If you want to do some additional actions, just use trigger.\n\n**TRIGGER.CREATE_USER** Dot-separated style string, path to a method which receiving ONE dict parameter. This method will be triggered when a **new**\nuser login, before we logged in this user, after we created the user with default options. You may want to run some new-user-related tasks in this trigger.\n\n**TRIGGER.BEFORE_LOGIN** Similar to CREATE_USER, but will be triggered only when an **existed** user login, before we logged in this user, after we got \nattributes from okta. You may want to update user information before a user logged-in in this trigger.\n\n\n\n\nCustomize\n=========\n\nYou are allowed to override the default permission `denied` page and new user `welcome` page.\n\nJust put a template named 'django_saml2_auth/welcome.html' or 'django_saml2_auth/denied.html' under your project's template folder.\n\nIn case of 'django_saml2_auth/welcome.html' existed, when a new user logged in, we'll show this template instead of redirecting user to the \nprevious visited page. So you can have some first-visit notes and welcome words in this page. You can get user context in the template by \nusing `user` context.\n\nBy the way, we have a built-in logout page as well, if you want to use it, just add the following lines into your urls.py, before any \n`urlpatterns`:\n\n.. code-block:: python\n\n    # If you want to replace the default user logout with plugin built-in page, just use the following line (optional)\n    url(r'^accounts/logout/$', 'django_saml2_auth.views.signout'),\n\n    # If you want to replace the admin logout with SAML2, use the following line (optional)\n    url(r'^admin/logout/$', 'django_saml2_auth.views.signout'),\n\nIn a similar way, you can customize this logout template by added a template 'django_saml2_auth/signout.html'.\n\n\nBy default, we assume your SAML2 service provided user attribute Email/UserName/FirstName/LastName. Please change it to the correct \nuser attributes mapping.\n\n\n\nFor okta Users\n==============\n\nI created this plugin original for okta.\n\nYou can find the METADATA_AUTO_CONF_URL under saml2 app's `Sign On` tab, in the Settings box, you will see \n\n`Identity Provider metadata is available if this application supports dynamic configuration.`\n\nJust use the link in text \"Identity Provider metadata\".\n\n\nHow to Contribute\n=================\n\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.\n#. Fork `the repository`_ on GitHub to start making your changes to the **master** branch (or branch off of it).\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\n#. Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to AUTHORS_.\n\n.. _`the repository`: http://github.com/fangli/django-saml2-auth\n.. _AUTHORS: https://github.com/fangli/django-saml2-auth/blob/master/AUTHORS.rst",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fangli/django-saml2-auth",
    "keywords": "Django SAML2 Authentication Made Easy,integrate with SAML2 SSO such as Okta easily",
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-saml2-auth",
    "package_url": "https://pypi.org/project/django-saml2-auth/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-saml2-auth/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/fangli/django-saml2-auth"
    },
    "release_url": "https://pypi.org/project/django-saml2-auth/1.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django SAML2 Authentication Made Easy, integrate with SAML2 SSO such as Okta easily",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4735454,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bde1208ce4ce0e807868691ca3cb0fc6f105a811a18b1d0a5ede7bc94b181bb6",
        "md5": "454d952578f56f7f6bd2dd5f9bfc5470",
        "sha256": "a05b63138071f7ce84e0fa18f13ea625dbccad049fc825e61a82ab3b2d35997a"
      },
      "downloads": -1,
      "filename": "django_saml2_auth-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "454d952578f56f7f6bd2dd5f9bfc5470",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 10909,
      "upload_time": "2016-04-15T07:30:19",
      "upload_time_iso_8601": "2016-04-15T07:30:19.965540Z",
      "url": "https://files.pythonhosted.org/packages/bd/e1/208ce4ce0e807868691ca3cb0fc6f105a811a18b1d0a5ede7bc94b181bb6/django_saml2_auth-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}