{
  "info": {
    "author": "Martin Brochhaus",
    "author_email": "mbrochh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django Libs\n===========\n\nThis project aims to provide commonly used building blocks for Django projects\nand applications.\n\n**Current features**:\n\n* A custom testrunner that uses django-nose for discovering tests and\n  django-coverage for automatically generating a coverage report on each test\n  run\n* A factory for creating User objects\n* TestCase mixins to ease the process of testing views via ``self.client.get``\n* A JSONResponseMixin\n* New generic class based view DetailViewWithPostAction which is able to\n  handle custom post actions.\n* Template filter to provide field's verbose names\n* Template tag for displaying the currently selected main navigation item\n* Custom test_email_backend that sends emails to your own address no matter\n  who the recepient is\n* Functions to test callable or non-callable views\n* Dummy views to test your 404 and 500 templates\n* RapidPrototypingView to render any template even when it has no view hooked\n  up in ``urls.py``.\n* AjaxRedirectMiddleware for jQuery AJAX calls that return 301 redirects\n* AjaxResponseMixin for views that can return their normal template or a\n  partial template when it is an ajax call\n* AccessMixin which allows to use views with the ``login_required`` decorator\n  based on a setting.\n* A context processor to add your analytics tracking code to your template\n  context.\n* A decorator ``lockfile`` for wrapping ``handle`` methods of admin commands\n  so that they never run twice at the same time.\n* A ``getCookie`` js function that can be used to retrieve the csrf token\n  for AJAX POST requests.\n* A templatetag ``call`` which allows to call any method with params.\n* A ``SimpleTranslationMixin`` which adds a ``get_translaion`` method to a\n  model that is registered with ``simple-translation``.\n* A ``SimpleTranslationMixin`` which makes it easier to write factories for\n  models that are registered with ``simple-translation``.\n* Utilities for loading classes from a string like ``myproject.models.Foobar``.\n* Form, which add field labels as placeholder attributes.\n* Function to convert html code into formatted plain text.\n* Amazon S3 storage + django-compressor support files.\n* An AJAX View to display paginated comments for every possible object.\n\n**Coming soon**:\n\n* View mixins to make class based views private for authenticated users\n* Extensive fabfile for checking pep8 compliancy, running tests, importing\n  and exporting the database and locale files, dumping and loading fixtures\n  etc.\n* Useful shell scripts to be installed on the server for various maintenance\n  and deployment tasks\n* Smart urlpatterns to serve static and media files when you set DEBUG=False\n  locally, no need to setup Apache on your development machine\n* A set of templates for django-registration and some partials for rendering\n  forms compatible with Twitter Bootstrap.\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi::\n\n    $ pip install django-libs\n\nTo get the latest commit from GitHub::\n\n    $ pip install -e git://github.com/bitmazk/django-libs.git#egg=django_libs\n\nUsage\n-----\n\nSee the docs folder for descriptions of the different tools this project\nprovides.\n\nOr read the docs here: http://django-libs.readthedocs.org/en/latest/\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps::\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-libs\n    $ pip install -r requirements.txt\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    $ git add . && git commit\n    $ git push -u origin feature_branch\n    # Send us a pull request for your feature branch",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitmazk/django-libs",
    "keywords": "django,common,reusable,kickstart",
    "license": "The MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-libs",
    "package_url": "https://pypi.org/project/django-libs/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-libs/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bitmazk/django-libs"
    },
    "release_url": "https://pypi.org/project/django-libs/1.59.6/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A collection of things that we re-use in every Django project, such as\ncustom middlewares, testrunner, templates, templatetags, test mixins,\ntest factories etc...",
    "version": "1.59.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6829315,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7ca9a02be28f45b5cbc453dcc3539500289d8c941faf3dc92764e6a52e366e1",
        "md5": "6dcded6bc254080c11f39229ed407f09",
        "sha256": "479846467e8ad660af07c4c085290563aea51a4b1740e14fff3677860ebbf5f3"
      },
      "downloads": -1,
      "filename": "django-libs-1.59.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6dcded6bc254080c11f39229ed407f09",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 54608,
      "upload_time": "2014-08-13T14:55:35",
      "upload_time_iso_8601": "2014-08-13T14:55:35.986221Z",
      "url": "https://files.pythonhosted.org/packages/a7/ca/9a02be28f45b5cbc453dcc3539500289d8c941faf3dc92764e6a52e366e1/django-libs-1.59.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}