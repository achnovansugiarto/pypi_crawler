{
  "info": {
    "author": "PeopleDoc",
    "author_email": "rd@people-doc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "================\ndjango-chunkator\n================\n\n\nChunk large QuerySets into small chunks, and iterate over them without killing\nyour RAM.\n\n.. image:: https://travis-ci.org/novafloss/django-chunkator.svg\n\nUsage\n=====\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.all(), 200):\n        do_something(item)\n\nThis tool is intended to work on Django querysets.\n\nYour model **must** define a ``pk`` field (this is done by default, but\nsometimes it can be overridden) and this pk has to be unique. ``django-\nchunkator`` has been tested with PostgreSQL and SQLite, using regular PKs and\nUUIDs as primary keys.\n\nYou can also use ``values()``:\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.values('pk', 'name'), 200):\n        do_something(item)\n\n.. important::\n\n    If you're using ``values()`` you **have** to add at least your \"pk\" field\n    to the values, otherwise, the chunkator will throw a\n    ``MissingPkFieldException``.\n\n.. warning::\n\n    This will not **accelerate** your process. Instead of having one BIG query,\n    you'll have several small queries. This will save your RAM instead, because\n    you'll not load a huge queryset result before looping on it.\n\n\nLicense\n=======\n\nMIT License.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/novafloss/django-chunkator",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-chunkator",
    "package_url": "https://pypi.org/project/django-chunkator/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-chunkator/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/novafloss/django-chunkator"
    },
    "release_url": "https://pypi.org/project/django-chunkator/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Chunk large QuerySets into small chunks, and iterate over them without killing your RAM.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12696312,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7112bff962272d820ed573a23deddb1c6064a0e367ad469fe0b32439ed3cc7e",
        "md5": "c8394c18b9b1e79d987c8940afb50fca",
        "sha256": "96ff34628b650afe7424870ded1281cab85f8b2283453c7e72335a9c7b1ac6c3"
      },
      "downloads": -1,
      "filename": "django_chunkator-1.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8394c18b9b1e79d987c8940afb50fca",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 4570,
      "upload_time": "2016-06-23T12:44:17",
      "upload_time_iso_8601": "2016-06-23T12:44:17.145316Z",
      "url": "https://files.pythonhosted.org/packages/e7/11/2bff962272d820ed573a23deddb1c6064a0e367ad469fe0b32439ed3cc7e/django_chunkator-1.0.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f65c2f87fe01d3d362211330e427b82ea82585a72bbe6c602a73083ea6c8ace",
        "md5": "87e12575dec06d6d18dc71b825912e5f",
        "sha256": "a9b386836825d58ecc038efd95c2f72adbcbf9461b8af49e786d2aa512b97142"
      },
      "downloads": -1,
      "filename": "django-chunkator-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "87e12575dec06d6d18dc71b825912e5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3208,
      "upload_time": "2016-06-23T12:44:11",
      "upload_time_iso_8601": "2016-06-23T12:44:11.056537Z",
      "url": "https://files.pythonhosted.org/packages/2f/65/c2f87fe01d3d362211330e427b82ea82585a72bbe6c602a73083ea6c8ace/django-chunkator-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}