{
  "info": {
    "author": "PeopleDoc",
    "author_email": "rd@people-doc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "================\ndjango-chunkator\n================\n\n\nChunk large QuerySets into small chunks, and iterate over them without killing\nyour RAM.\n\n.. image:: https://travis-ci.org/novafloss/django-chunkator.svg\n\nUsage\n=====\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.all(), 200):\n        do_something(item)\n\nThis tool is intended to work on Django querysets.\n\nYour model **must** define a ``pk`` field (this is done by default, but\nsometimes it can be overridden) and this pk has to be unique. ``django-\nchunkator`` has been tested with PostgreSQL and SQLite, using regular PKs and\nUUIDs as primary keys.\n\nYou can also use ``values()``:\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.values('pk', 'name'), 200):\n        do_something(item)\n\n.. important::\n\n    If you're using ``values()`` you **have** to add at least your \"pk\" field\n    to the values, otherwise, the chunkator will throw a\n    ``MissingPkFieldException``.\n\n.. warning::\n\n    This will not **accelerate** your process. Instead of having one BIG query,\n    you'll have several small queries. This will save your RAM instead, because\n    you'll not load a huge queryset result before looping on it.\n\n\nLicense\n=======\n\nMIT License.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/novafloss/django-chunkator",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-chunkator",
    "package_url": "https://pypi.org/project/django-chunkator/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-chunkator/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/novafloss/django-chunkator"
    },
    "release_url": "https://pypi.org/project/django-chunkator/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Chunk large QuerySets into small chunks, and iterate over them without killing your RAM.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12696312,
  "urls": [
    {
      "comment_text": "built for Linux-3.13.0-113-generic-x86_64-with-glibc2.4",
      "digests": {
        "blake2b_256": "91ef0d6c20a90540dd28eb1f0502184bf2fdc9bcbdea3ac84b3fedc1cef1adec",
        "md5": "fd5a9f60f4659be4316ddc4eee121f36",
        "sha256": "c1ec4f1174ddd222b6f7f927e419d202a4cffcb68bab6dba135c14c477190a53"
      },
      "downloads": -1,
      "filename": "django-chunkator-1.1.0.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "fd5a9f60f4659be4316ddc4eee121f36",
      "packagetype": "bdist_dumb",
      "python_version": "any",
      "requires_python": null,
      "size": 3091,
      "upload_time": "2017-03-25T11:03:20",
      "upload_time_iso_8601": "2017-03-25T11:03:20.542453Z",
      "url": "https://files.pythonhosted.org/packages/91/ef/0d6c20a90540dd28eb1f0502184bf2fdc9bcbdea3ac84b3fedc1cef1adec/django-chunkator-1.1.0.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e91455e0abcf76546772fa2449509256da2886f67a52a3e4025b74b42b08bab6",
        "md5": "465eeaae6b9170cfa8c518a1128710de",
        "sha256": "06163a27d77152717b6c608d75e02030e4f1e5d2b23c8d5a67a0267d0d8cb97e"
      },
      "downloads": -1,
      "filename": "django_chunkator-1.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "465eeaae6b9170cfa8c518a1128710de",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 4672,
      "upload_time": "2017-03-25T11:03:23",
      "upload_time_iso_8601": "2017-03-25T11:03:23.010956Z",
      "url": "https://files.pythonhosted.org/packages/e9/14/55e0abcf76546772fa2449509256da2886f67a52a3e4025b74b42b08bab6/django_chunkator-1.1.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b41ec3eada3b4f6d39a505beb67e1d1aeb39c4296e945ad02584fefe2f080442",
        "md5": "6cd4bad207485a8cc31d5e2fbfe9a14b",
        "sha256": "bad039bcbfdd61825ed5e0ab585714841eb28f221b3a08db5d6d22a168417eb1"
      },
      "downloads": -1,
      "filename": "django-chunkator-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6cd4bad207485a8cc31d5e2fbfe9a14b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3318,
      "upload_time": "2017-03-25T11:03:17",
      "upload_time_iso_8601": "2017-03-25T11:03:17.642213Z",
      "url": "https://files.pythonhosted.org/packages/b4/1e/c3eada3b4f6d39a505beb67e1d1aeb39c4296e945ad02584fefe2f080442/django-chunkator-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}