{
  "info": {
    "author": "PeopleDoc",
    "author_email": "rd@people-doc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "================\ndjango-chunkator\n================\n\n\nChunk large QuerySets into small chunks, and iterate over them without killing\nyour RAM.\n\n.. image:: https://travis-ci.org/novafloss/django-chunkator.svg\n\nUsage\n=====\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.all(), 200):\n        do_something(item)\n\nThis tool is intended to work on Django querysets.\n\nYour model **must** define a ``pk`` field (this is done by default, but\nsometimes it can be overridden) and this pk has to be unique. ``django-\nchunkator`` has been tested with PostgreSQL and SQLite, using regular PKs and\nUUIDs as primary keys.\n\nYou can also use ``values()``:\n\n.. code:: python\n\n    from chunkator import chunkator\n    for item in chunkator(LargeModel.objects.values('pk', 'name'), 200):\n        do_something(item)\n\n.. important::\n\n    If you're using ``values()`` you **have** to add at least your \"pk\" field\n    to the values, otherwise, the chunkator will throw a\n    ``MissingPkFieldException``.\n\n.. warning::\n\n    This will not **accelerate** your process. Instead of having one BIG query,\n    you'll have several small queries. This will save your RAM instead, because\n    you'll not load a huge queryset result before looping on it.\n\nIf you want to manipulate the pages directly, you can use `chunkator_page`:\n\n.. code:: python\n\n    from chunkator import chunkator_page\n    queryset = LargeModel.objects.all().values('pk')\n    for page in chunkator_page(queryset, 200):\n        launch_some_task([item['pk'] for item in page])\n\nLicense\n=======\n\nMIT License.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/novafloss/django-chunkator",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-chunkator",
    "package_url": "https://pypi.org/project/django-chunkator/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-chunkator/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/novafloss/django-chunkator"
    },
    "release_url": "https://pypi.org/project/django-chunkator/1.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Chunk large QuerySets into small chunks, and iterate over them without killing your RAM.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12696312,
  "urls": [
    {
      "comment_text": "built for Linux-3.13.0-123-generic-x86_64-with-glibc2.4",
      "digests": {
        "blake2b_256": "e7e2a2f98e53896a87cca07ee8a5c9d36907c8885022a04c5a4bd95129734e93",
        "md5": "627b03fc2e76ba61c0018becead68783",
        "sha256": "456a0cd3d09b9606150248becd8ecab0eb21291fdbcb9dd26ff956473c3db5dc"
      },
      "downloads": -1,
      "filename": "django-chunkator-1.2.0.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "627b03fc2e76ba61c0018becead68783",
      "packagetype": "bdist_dumb",
      "python_version": "any",
      "requires_python": null,
      "size": 3519,
      "upload_time": "2017-07-03T13:11:19",
      "upload_time_iso_8601": "2017-07-03T13:11:19.080903Z",
      "url": "https://files.pythonhosted.org/packages/e7/e2/a2f98e53896a87cca07ee8a5c9d36907c8885022a04c5a4bd95129734e93/django-chunkator-1.2.0.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77e7def685ca777eadc5732859b33f279dc009eaf753e43a0d24ea5f84707ac8",
        "md5": "17ab1b4d43a20495ce2b3e84cb9baf0b",
        "sha256": "353601d6bb153df242386f3358d01e5fff2b67a9a82020516b7a7ae77ccfa497"
      },
      "downloads": -1,
      "filename": "django_chunkator-1.2.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "17ab1b4d43a20495ce2b3e84cb9baf0b",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 5033,
      "upload_time": "2017-07-03T13:11:21",
      "upload_time_iso_8601": "2017-07-03T13:11:21.493709Z",
      "url": "https://files.pythonhosted.org/packages/77/e7/def685ca777eadc5732859b33f279dc009eaf753e43a0d24ea5f84707ac8/django_chunkator-1.2.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "323adc39d857ef3d6221d51d986ee9fc087fadd1a9a5a13141a63393dcb909f8",
        "md5": "3c7d2c9fad637073d276df808fc22d32",
        "sha256": "09a026ede35fa48bcef0f916add40be57e2753229ac4cecb5c7a3aed68e9944e"
      },
      "downloads": -1,
      "filename": "django-chunkator-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3c7d2c9fad637073d276df808fc22d32",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3584,
      "upload_time": "2017-07-03T13:11:16",
      "upload_time_iso_8601": "2017-07-03T13:11:16.781862Z",
      "url": "https://files.pythonhosted.org/packages/32/3a/dc39d857ef3d6221d51d986ee9fc087fadd1a9a5a13141a63393dcb909f8/django-chunkator-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}