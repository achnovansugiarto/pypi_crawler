{
  "info": {
    "author": "Paul Wilhelm",
    "author_email": "anfrage@paulwilhelm.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "\nMagnetiCalc\n===========\n\n[![License: ISC](https://img.shields.io/badge/License-ISC-blue.svg)](https://opensource.org/licenses/ISC)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=TN6YTPVX36YHA&source=url)\n[![API Documentation](https://img.shields.io/badge/Documentation-API-orange)](https://shredengineer.github.io/MagnetiCalc/)\n[![PyPI version](https://img.shields.io/pypi/v/MagnetiCalc?label=PyPI)](https://pypi.org/project/MagnetiCalc/)\n\n**What does MagnetiCalc do?**\n\nMagnetiCalc calculates the magnetic field of arbitrary air coils, examples included.\nInside a VisPy/OpenGL-accelerated PyQt5 GUI, the static magnetic flux density (B-field due to DC currents) is displayed\nin interactive 3D, using multiple metrics for highlighting this field's properties.\nAll parameters and presets can interactively be changed inside the GUI.\n\n**Who needs MagnetiCalc?**\n\nMagnetiCalc does its job for hobbyists, students, engineers and researchers of magnetic phenomena.\nI designed MagnetiCalc from scratch, because I didn't want to mess around\nwith expensive and/or overly complex simulation software\nwhenever I needed to solve a magnetostatic problem.\n\n**How does it work?**\n\nThe field calculation is implemented using the Biot-Savart law [1], employing multiprocessing techniques.\nThe use of easily constrainable \"sampling volumes\" allows for selective calculation over\narbitrary shapes.\n\nThe shape of any wire is modeled as a 3D piecewise linear curve.\nArbitrary loops of wire are sliced into differential current elements,\neach of which contributes to the total magnetic flux density\n<img src=\"https://render.githubusercontent.com/render/math?math=\\vec{B}\">\nat some fixed 3D grid point.\n\nAt each grid point, the field is displayed using colored arrows and/or dots;\nfield color and alpha transparency are individually mapped using one of the various available metrics.\n\n[1]: Jackson, Klassische Elektrodynamik, 5. Auflage, S. 204, (5.4).\n\nScreenshot\n----------\n\n![Screenshot](https://raw.githubusercontent.com/shredEngineer/MagnetiCalc/master/docs/Screenshot.png)\n\n(Screenshot taken from the latest GitHub release.)\n\nInstallation\n------------\nTested with Python 3.8 in Ubuntu 20.04.\n\nIf you have trouble installing MagnetiCalc,\nmake sure to file an [issue](https://github.com/shredEngineer/MagnetiCalc/issues)\nso I can help you get it up and running!\n\n### Prerequisites\n\nThe following dependency packages have to be installed first (Ubuntu 20.04):\n```shell\nsudo apt install python3-dev\nsudo apt install libxcb-xinerama0 --reinstall\n```\n\n### Option A: Automatic install via pip\n**Note:** On some systems, it may be necessary to upgrade pip first:\n```shell\npython3 -m pip install pip --upgrade\n```\n\nInstall MagnetiCalc to the user site-packages directory and start it from there: \n```shell\npip3 install magneticalc\npython3 -m magneticalc\n```\n\nThis will automatically install all dependency packages.\n\n### Option B: Manual download\nFirst, manually install all dependency packages (upgrading each to the latest version):\n```shell\npip3 install PyQt5 qtawesome vispy matplotlib numpy colorit si-prefix --upgrade\n```\n\nClone the latest version of MagnetiCalc from GitHub and start it directly: \n```shell\ngit clone https://github.com/shredEngineer/MagnetiCalc\ncd MagnetiCalc\npython3 -m magneticalc\n```\n\nFor debugging, you may now also install (uninstall) the package in a virtual environment:\n```shell\npip install .\n…\npip uninstall magneticalc -y\n``` \n\nToDo\n----\n* Improve Windows support; add installation instructions, ensure consistent PyQt5 look and feel.\n* Add support for adding, editing and removing sampling volume constraints;\n  the SamplingVolume module already supports constraints, but the GUI currently doesn't.\n  This will also require changes to the way the field labels are currently distributed (relying on a *complete* grid).\n* Add support for selective display over a portion of the metric range, in order to get a kind of iso-contour display. \n* Add support for calculation of compensation factor, i.e. the ratio of total vector sum to metric limits.\n* Add support for calculation of self-inductance;\n  a loop detector creates polygons over which the B-field is integrated,\n  yielding the loop magnetic flux <img src=\"https://render.githubusercontent.com/render/math?math=\\Phi=L\\cdot I\">.\n* Add support for different media with arbitrary geometry and permeability.\n* Add support for multiple wires, study mutual induction.\n* Add support for vector potential (A-field) and electric E-field calculation.\n* Move the field and metric calculations directly to the OpenGL shader engines,\n  thus most likely drastically shortening overall computation time.\n\nContribute\n----------\nYou are invited to contribute to MagnetiCalc in any way you like! :)\n\nIf this software has been helpful to you in some way or another, please let me and others know!\n\nLicense\n-------\nCopyright © 2020, Paul Wilhelm, M. Sc. <[anfrage@paulwilhelm.de](mailto:anfrage@paulwilhelm.de)>\n\n<b>ISC License</b>\n\nPermission to use, copy, modify, and/or distribute this software for any<br>\npurpose with or without fee is hereby granted, provided that the above<br>\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES<br>\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF<br>\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR<br>\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES<br>\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN<br>\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF<br>\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\nVideo Demo\n----------\nHere is a very short demo of an earlier version of MagnetiCalc in action:\n\n[![Magnetic Field Calculation with Python (MagnetiCalc)](https://raw.githubusercontent.com/shredEngineer/MagnetiCalc/master/docs/Video-Thumb.png)](https://www.youtube.com/watch?v=rsVbu5uF0eU)\n\nLinks\n-----\nIf you want to comment on the project or see additional info, please visit my personal website:\nhttps://paulwilhelm.de/magneticalc/\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shredEngineer/MagnetiCalc",
    "keywords": "",
    "license": "ISC License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MagnetiCalc",
    "package_url": "https://pypi.org/project/MagnetiCalc/",
    "platform": "any",
    "project_url": "https://pypi.org/project/MagnetiCalc/",
    "project_urls": {
      "Homepage": "https://github.com/shredEngineer/MagnetiCalc"
    },
    "release_url": "https://pypi.org/project/MagnetiCalc/1.6.2/",
    "requires_dist": [
      "PyQt5",
      "qtawesome",
      "vispy",
      "matplotlib",
      "numpy",
      "colorit",
      "si-prefix"
    ],
    "requires_python": ">=3.6",
    "summary": "MagnetiCalc calculates the magnetic field of arbitrary loops of wire.",
    "version": "1.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14294492,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9761f10dd2534942d90c5f780a0074cae1186d85465d47fc8a689fde492bbb6f",
        "md5": "48db1e385720055087a01617cf340bf7",
        "sha256": "3f547920995e19f3c40631cb16bc6550fb22771911ddabeb9e1e403a74c33703"
      },
      "downloads": -1,
      "filename": "MagnetiCalc-1.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "48db1e385720055087a01617cf340bf7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 66336,
      "upload_time": "2020-10-30T15:33:34",
      "upload_time_iso_8601": "2020-10-30T15:33:34.090793Z",
      "url": "https://files.pythonhosted.org/packages/97/61/f10dd2534942d90c5f780a0074cae1186d85465d47fc8a689fde492bbb6f/MagnetiCalc-1.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3e6992a5758356c63c1a5c43a897f1c662efc066c671f15bcd2a7a0547c526b",
        "md5": "7575ef1ab22cc3321216fb72ffce7250",
        "sha256": "0c8c99beeca874f913ffc188323df1c7a66ac8a784a2cc52ae5dfc7f64215a1e"
      },
      "downloads": -1,
      "filename": "MagnetiCalc-1.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7575ef1ab22cc3321216fb72ffce7250",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39692,
      "upload_time": "2020-10-30T15:33:35",
      "upload_time_iso_8601": "2020-10-30T15:33:35.532754Z",
      "url": "https://files.pythonhosted.org/packages/d3/e6/992a5758356c63c1a5c43a897f1c662efc066c671f15bcd2a7a0547c526b/MagnetiCalc-1.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}