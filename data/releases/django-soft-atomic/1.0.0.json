{
  "info": {
    "author": null,
    "author_email": "Mariusz Okulanis <mariusz.okulanis@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django-soft-atomic\n\nA more forgiving variation of `django`'s `atomic`, allowing you to pass some\nexceptions through atomic block without rollback.\n\n## Rationale\n\nIn big applications you may end up relying on exceptions mechanism to pass information\nabout failure up the stack. Unfortunately, if your business logic involves operations on\ndatabase, there is no easy way to wind up execution through atomic block without\nrolling back entire transaction. `django-soft-atomic` tries to solves this problem\nby allowing certain exceptions to exit atomic block just like sucessful execution\n(still maintaining the raised exception).\n\n## Requirements\n\n * Python 3.6+\n * Django 3.12+\n\n## Installation\n\n### With PIP\n\nExecute: `pip install django-soft-atomic`\n\n### Manual\n\nCopy `django_soft_atomic.py` to your codebase and simply start using it.\n\n## Usage (docs)\n\nThis \"package\" constists of single function/decorator/context-manager:\n\n`soft_atomic(using=None, savepoint=True, durable=False, *, safe_exceptions=(Exception,))`\n\n * `using` (default Django parameter) - database name to use,\n * `savepoint` (default Django parameter) - TODO,\n * `durable` (default Django parameter) - TODO,\n * `safe_exceptions` - collection (e.g. `tuple`) of exceptions which are allowed to pass through `soft_atomic` block without rollback. Typical DB errors (like `IntegrityError`) will still throw. Defaults to: `(Exception,)`.\n\n## Example\n\n```\nfrom django_soft_atomic import soft_atomic\n\nclass PaymentProcessingException(Exception):\n    pass\n\nclass PaymentRequest(models.Model):\n    payment_id = models.TextField()\n    success = models.BooleanField()\n\n@soft_atomic(safe_exceptions=(PaymentProcessingException,))\ndef process_payment(payment_details):\n    payment_id, success = payment_gateway.process_payment(payment_details)\n    PaymentRequest.objects.create(payment_id=payment_id, success=success)\n    if not success:\n        raise PaymentProcessingException(\"Payment was not sucessful\")\n\ndef payment_endpoint(payment_details):\n    try:\n        process_payment(payment_details)\n    except PaymentProcessingException:\n        ...  # handle a failure\n    else:\n        ...  # payment was successful\n    # in either case the `PaymentRequest` record was created in the database\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": "MIT License\n        \n        Copyright (c) 2022 Mariusz Okulanis\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_soft_atomic",
    "package_url": "https://pypi.org/project/django_soft_atomic/",
    "platform": null,
    "project_url": "https://pypi.org/project/django_soft_atomic/",
    "project_urls": {
      "Bug Tracker": "https://github.com/maniek2332/django_soft_atomic/issues",
      "Homepage": "https://github.com/maniek2332/django_soft_atomic"
    },
    "release_url": "https://pypi.org/project/django_soft_atomic/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A more forgiving variation of `django`'s `atomic`, allowing you to pass some exceptions through atomic block without rollback.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15231550,
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "a30e8bee5a0c90e685c7c830471713060967110f5b37c2c962a3c538714cf6d5",
        "md5": "0ddb436cfad404136e5f9c8eb86fb4bf",
        "sha256": "df72f42edc75712dd013371ce14f93f4037c69ba6674bd69e4390f8e455c004b"
      },
      "downloads": -1,
      "filename": "django_soft_atomic-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ddb436cfad404136e5f9c8eb86fb4bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4825,
      "upload_time": "2022-09-21T17:47:52",
      "upload_time_iso_8601": "2022-09-21T17:47:52.021671Z",
      "url": "https://files.pythonhosted.org/packages/a3/0e/8bee5a0c90e685c7c830471713060967110f5b37c2c962a3c538714cf6d5/django_soft_atomic-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "d3467d200405174c4f084a413ba9b20850ecf060523fcc5aad093f73b5287681",
        "md5": "7eb9eb1e65b3a6f9b1fe6ec6afdd1d68",
        "sha256": "46f237dbb0100ca208c14d31ce716f66885fcdedc84549bd7823ade47cdc0c41"
      },
      "downloads": -1,
      "filename": "django_soft_atomic-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7eb9eb1e65b3a6f9b1fe6ec6afdd1d68",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3008,
      "upload_time": "2022-09-21T17:47:48",
      "upload_time_iso_8601": "2022-09-21T17:47:48.329150Z",
      "url": "https://files.pythonhosted.org/packages/d3/46/7d200405174c4f084a413ba9b20850ecf060523fcc5aad093f73b5287681/django_soft_atomic-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}