{
  "info": {
    "author": "MMM Intelligence UG",
    "author_email": "info@mmmint.ai.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Registration Recognition Python SDK\n\n## Registration Recognition by mmmint.ai\n\nVisit [mmmint.ai/solutions/fahrzeugschein](https://api.mmmint.ai/fahrzeugschein/v1/docs).\n\n### 1. Handle your credentials\n\nCreate an environment variable to store the api key - reach out to [support@mmmint.ai](mailto:support@mmmint.ai).\n\n```bash\nexport API_KEY=\"yourapikey\"\n```\n\n### 2. Use the python sdk to call the API\n\nCreate an python file and insert the following to load the credentials:\n\n```bash\napikey = os.environ.get(\"API_KEY\", \"\")\n```\n\nCreate an Endpoint with your Credentials\n\n```python\nfrom mmmint.registration_recognition.sdk import Client\nclient = Client(apikey)\n```\n\nPost fahrzeugschein from local Image\n\n```python\nimage_path = \"4.jpg\"\nclient.new_fahrzeugschein(image_path)\n```\n\nAlternative you can post an image url to the API with:\n\n```python\nimage_url = \"https://deinautoguide.de/wp-content/uploads/2020/06/Fahrzeugschein-Aventador.jpg\"\nclient.new_fahrzeugschein_url(image_url)\n```\n\nGet Status of Calculation and Results\n\n```python\nfrom mmmint.registration_recognition.sdk import Client\nwhile client.status ==  Status.STARTED.value:\n    client.get_fahrzeugschein_status()\n    time.sleep(2)\n\nif client.status == Status.FINISHED.value:\n    client.get_fahrzeugschein()\n\n    for i in client.fahrzeugschein:\n        print(i, \": \", client.fahrzeugschein[i])\nelse:\n    print(\"Aborted\")\n```\n\nGet the detections:\n\n```python\nclient.get_detection_bounding_boxes()\nclient.get_detection_image()\nclient.get_detection_cropped_image()\n```\n\n## Full Example\n\n```python\nfrom mmmint.registration_recognition.sdk import Client, Status\n\napikey = os.environ.get(\"API_KEY\", \"\")\n\n# Create an Endpoint with your Credentials\nclient = Client(apikey)\n\n# Post Fahrzeugschein from local Image\nimage_path = \"4.jpg\"\nclient.new_fahrzeugschein(image_path)\nprint(client.session)\n\n# Post Fahrzeugschein from URL\nimage_url = \"https://deinautoguide.de/wp-content/uploads/2020/06/Fahrzeugschein-Aventador.jpg\"\nclient.new_fahrzeugschein_url(image_url)\n\n# Or use an existing one\nclient.get_sessions_finished()[0][\"session_id\"]\nclient.session = client.get_sessions_finished()[0][\"session_id\"]\n\n\nprint(client.session)\n\n# Get Status of Calculation\nwhile client.status == Status.STARTED.value:\n    client.get_fahrzeugschein_status()\n    time.sleep(2)\n\n# Get Results of Fahrzeugschein\nif client.status == Status.FINISHED.value:\n    client.get_fahrzeugschein()\n\n    for i in client.fahrzeugschein:\n        print(i, \": \", client.fahrzeugschein[i])\n\n    bb = client.get_detection_bounding_boxes()\n    di = client.get_detection_image()\n    ci = client.get_detection_cropped_image()\n    print(bb)\n    print(di)\n    print(ci)\n\nclient.edit_fahrzeugschein()\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://api.mmmint.ai/fahrzeugschein/v1/docs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmmint-registration-recognition",
    "package_url": "https://pypi.org/project/mmmint-registration-recognition/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmmint-registration-recognition/",
    "project_urls": {
      "Homepage": "https://api.mmmint.ai/fahrzeugschein/v1/docs"
    },
    "release_url": "https://pypi.org/project/mmmint-registration-recognition/2.0.6/",
    "requires_dist": [
      "requests",
      "click"
    ],
    "requires_python": ">=3.7",
    "summary": "An interface to execute Fahrzeugschein API commands using Python",
    "version": "2.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12459002,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "100f98f8c38c31545b6ba12a526e101d2709eb81ef04b94a74ae58a84a8f1f3b",
        "md5": "3c2c1191d78b36d7ff7ee042e2d1ac81",
        "sha256": "9e1a2d32a41a539e26b4e47aada2a70e20d56c3bd28392ee42738437d6a7ffb4"
      },
      "downloads": -1,
      "filename": "mmmint_registration_recognition-2.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3c2c1191d78b36d7ff7ee042e2d1ac81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6095,
      "upload_time": "2021-02-13T14:20:17",
      "upload_time_iso_8601": "2021-02-13T14:20:17.526863Z",
      "url": "https://files.pythonhosted.org/packages/10/0f/98f8c38c31545b6ba12a526e101d2709eb81ef04b94a74ae58a84a8f1f3b/mmmint_registration_recognition-2.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d087b16cb005655219d6c2bd632dfbbe8a14b398ebe2eecdff4a0c8e11169c2",
        "md5": "8c9b5641524547e3c9bafbabe7d8bb84",
        "sha256": "a2ea634bec23fba4047ee587cadf74066b3c58afe55de6dda9e99e72b231127c"
      },
      "downloads": -1,
      "filename": "mmmint_registration_recognition-2.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "8c9b5641524547e3c9bafbabe7d8bb84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6423,
      "upload_time": "2021-02-13T14:20:18",
      "upload_time_iso_8601": "2021-02-13T14:20:18.301402Z",
      "url": "https://files.pythonhosted.org/packages/2d/08/7b16cb005655219d6c2bd632dfbbe8a14b398ebe2eecdff4a0c8e11169c2/mmmint_registration_recognition-2.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}