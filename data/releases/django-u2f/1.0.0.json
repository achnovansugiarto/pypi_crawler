{
  "info": {
    "author": "Gavin Wahl",
    "author_email": "gavinwahl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Security",
      "Topic :: Security :: Cryptography"
    ],
    "description": "Django U2F\n----------\n\n.. image:: https://travis-ci.org/gavinwahl/django-u2f.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/gavinwahl/django-u2f\n\ndjango-u2f provides support for FIDO U2F security tokens in Django. The\nfunctionality is similar to the `Security Key two-factor authentication that\nGoogle recently announced\n<http://googleonlinesecurity.blogspot.com/2014/10/strengthening-2-step-verification-with.html>`_,\nand uses the same tokens.\n\ndjango-u2f isn't yet production ready, but is a working proof of\nconcept. There are many TODOs sprinkled around the code that should be\nfixed before relying on it.\n\nInstallation\n============\n\n::\n\n    $ pip install django-u2f\n\nAdd ``django_u2f`` to ``INSTALLED_APPS`` and include\n``django_u2f.urls`` somewhere in your url patterns. Set ``LOGIN_URL\n= 'u2f:login'``. Make sure that Django's built in login\nview does not not have a urlpattern, because it will authenticate users\nwithout their second factor. django-u2f provides its own login view to\nhandle that.\n\nDemo\n====\n\nTo see a demo, use the test project included in the repo and perform the \nfollowing steps (using virtualenv is optional)::\n\n   git clone https://github.com/gavinwahl/django-u2f\n   cd django-u2f\n   virtualenv -p python3 venv\n   source venv/bin/activate\n   pip install -e .\n   cd testproj\n   pip install -r requirements.txt\n   python manage.py migrate\n   python manage.py createsuperuser\n\n   # finally create a self-signed certificate and start the webserver\n   ./mkcert.sh  \n   python manage.py runserver_plus --cert localhost\n\nFor now the only supported browser is Chrome, version 41 or higher.\nU2F also requires that the page is served over a secure connection.\n\n\nStart by going to https://localhost:8000/u2f/login. Since you\nhaven't added any security keys yet, you will be logged in with just a\nusername and password. Once logged in, click 'Add another key' on the\nkey management page and follow the instructions. Now your account is\nprotected by two factor authentication, and when you log in again your\nU2F token will be required.\n\nYou can administrate the keys attached to your account on the key\nmanagement page as well, at the URL https://localhost:8000/u2f/keys.\n\nUsing U2F keys on linux\n=======================\n\nSome distros don't come with udev rules to make USB HID /dev/\nnodes accessible to normal users. If your key doesn't light up\nand start flashing when you expect it to, this might be what is\nhappening. See https://github.com/Yubico/libu2f-host/issues/2 and\nhttps://github.com/Yubico/libu2f-host/blob/master/70-u2f.rules for some\ndiscussion of the rule to make it accessible. If you just want a quick\ntemporary fix, you can run ``sudo chmod 666 /dev/hidraw*`` every time\nafter you plug in your key (The files disappear after unplugging).\n\n\nHelpful links\n=============\n\n- The code to actually implement the crypto in python:\n  https://github.com/Yubico/python-u2flib-server\n- A description of the process from a developer's perspective from Yubico:\n  https://developers.yubico.com/U2F/Libraries/Using_a_library.html",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gavinwahl/django-u2f",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-u2f",
    "package_url": "https://pypi.org/project/django-u2f/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-u2f/",
    "project_urls": {
      "Homepage": "https://github.com/gavinwahl/django-u2f"
    },
    "release_url": "https://pypi.org/project/django-u2f/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "FIDO U2F security token support for Django",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14693076,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27b17c2c08742f813e5a5208a5f8746879895aee79a161c642e1d9fcda917205",
        "md5": "5405464711657702680f0661b80ec6bb",
        "sha256": "35566c73e4a8561b954badef52cf62918b81df1a63cba6f4f80b6c712ea71ee9"
      },
      "downloads": -1,
      "filename": "django-u2f-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5405464711657702680f0661b80ec6bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18559,
      "upload_time": "2022-01-14T19:45:56",
      "upload_time_iso_8601": "2022-01-14T19:45:56.977826Z",
      "url": "https://files.pythonhosted.org/packages/27/b1/7c2c08742f813e5a5208a5f8746879895aee79a161c642e1d9fcda917205/django-u2f-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}