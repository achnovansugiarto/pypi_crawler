{
  "info": {
    "author": "Dmitriy Ferens",
    "author_email": "ferensdima@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "====================\ndjango-classsettings\n====================\n\n.. image:: https://travis-ci.org/dferens/django-classsettings.png?branch=master\n    :target: https://travis-ci.org/dferens/django-classsettings\n\n.. image:: https://coveralls.io/repos/dferens/django-classsettings/badge.png?branch=master\n    :target: https://coveralls.io/r/dferens/django-classsettings?branch=master\n\nAdds ability to define Django settings with classes.\n\nAs many text editors and IDEs indexes code symbols, with such approach you can\neasily navigate to any group and any line of your settings file.\n\nSettings class\n--------------\n\nExports defined variables into module's scope:\n\n.. code-block:: python\n\n    from classsettings import Settings\n    \n    class Administration(Settings):\n        def ADMINS(self): return (\n            ('Your Name', 'your_email@example.com'),\n        )\n        def DEBUG(self): return False\n        def TEMPLATE_DEBUG(self): return self.DEBUG()\n\nWill result in\n\n.. code-block:: python\n\n    ADMINS = (\n        ('Your Name', 'your_email@example.com'),\n    )\n    DEBUG = False\n    TEMPLATE_DEBUG = False\n\nConfig class\n------------\n\nInjects dictionary if variables into module's scope:\n\n.. code-block:: python\n\n    from classsettings import Config\n    \n    class REST_FRAMEWORK(Config):\n        def DEFAULT_FILTER_BACKENDS(self): return (\n            'rest_framework.filters.DjangoFilterBackend',\n        )\n\nWill result in\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        'DEFAULT_FILTER_BACKENDS': (\n            'rest_framework.filter.DjangoFilterBackend',\n        )\n    }\n\nDecorators\n----------\n\nSome decorators may be found usefull:\n\n.. code-block:: python\n\n    from classsettings import Settings, from_env\n    \n    class MySettingsGroup(Settings):\n        # Will look for `EMAIL_HOST` key in `os.environ`\n        # and use `smtp.gmail.com` if such key was not found\n        @from_env\n        def EMAIL_HOST(self): return 'smtp.gmail.com'\n        \n        # Will raise Django's `ImproperlyConfigured` exception\n        # if such key was not found\n        @from_env\n        def SECRET_KEY(self): pass\n\n        # Will look for specified key\n        @from_env(key='CUSTOM_ENV_VAR_NAME')\n        def variable(self): pass\n\n        # Will apply `through` callable to result\n        @from_env(through=dj_database_url.parse)\n        def DATABASE_URL(self): return 'sqlite://'",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/django-classsettings",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dferens/django-classsettings",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-classsettings",
    "package_url": "https://pypi.org/project/django-classsettings/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/django-classsettings/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/django-classsettings",
      "Homepage": "https://github.com/dferens/django-classsettings"
    },
    "release_url": "https://pypi.org/project/django-classsettings/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Adds ability to define Django settings with classes/functions and navigate each of them easily",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1068434,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcdf89b9906c4b47a1b3025be962b9cf9caf5f23a6c24d014b63f9a0dc277e42",
        "md5": "eca3cc8b3af62f880bb88ef787074c34",
        "sha256": "a5554148d2131278057ef878764fcd4aa527bc0cf886a6f1b7315bd7d4dec0e4"
      },
      "downloads": -1,
      "filename": "django-classsettings-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eca3cc8b3af62f880bb88ef787074c34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3835,
      "upload_time": "2014-03-09T00:10:22",
      "upload_time_iso_8601": "2014-03-09T00:10:22.744796Z",
      "url": "https://files.pythonhosted.org/packages/fc/df/89b9906c4b47a1b3025be962b9cf9caf5f23a6c24d014b63f9a0dc277e42/django-classsettings-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}