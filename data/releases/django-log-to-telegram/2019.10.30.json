{
  "info": {
    "author": "Luigi Mazari Villanova",
    "author_email": "luigi.mazari@cnr.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Scientific/Engineering"
    ],
    "description": "======================\nDjango Log to Telegram\n======================\n\nThis is a simple logger that sends 500 exceptions to a Telegram bot of your choice.\n\nQuick start\n-----------\n\nInstall django-log-to-telegram:\n\n.. code:: bash\n\n    pip install -e 'git+https://github.com/thela/django_log_to_telegram.git#egg=django_log_to_telegram'\n\n1. register a bot on Telegram (`with BotFather <https://core.telegram.org/bots#6-botfather>`_), start a chat with it and put\nthe Api token in settings.py:\n\n.. code:: python\n\n    LOG_TO_TELEGRAM_BOT_TOKEN = '12345678:replace-me-with-real-token'\n\nDifferent errors will be fired if the BOT_TOKEN is not active or if there is no chat active with it.\n\n2. add the 'django_log_to_telegram' to your INSTALLED_APPS setting:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_log_to_telegram',\n        ...\n    ]\n\n3. add the `django_log_to_telegram.log.AdminTelegramHandler` to your app's logging configuration, for example:\n\n.. code:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'filters': {\n            'require_debug_false': {\n                '()': 'django.utils.log.RequireDebugFalse'\n            }\n        },\n        'handlers': {\n            'telegram_log': {\n                'level': 'ERROR',\n                'filters': ['require_debug_false'],\n                'class': 'django_log_to_telegram.log.AdminTelegramHandler',\n                'bot_token': LOG_TO_TELEGRAM_BOT_TOKEN,\n            }\n        },\n        'loggers': {\n            'django.request': {\n                'handlers': ['telegram_log'],\n                'level': 'ERROR',\n                'propagate': True,\n            },\n        },\n    }\n\nif you want to test this logger in a debug environment, just remove the `filters': ['require_debug_false'],` line in the\n'handlers' dictionary.\n\n4. Run `python manage.py migrate` to create the django_log_to_telegram models.\n\nIf everything went well, you bot will then begin sendind messages on 500 exceptions.\n\nThere is a *very basic* test app provided in the folder test_app. It is configured to send errors to telegram even with\nDEBUG active, so that it can be useful with just a\n\n.. code:: python\n\n    ./manage.py runserver\n\nIt does not provide any database configuration, and most of Django basic settings are stripped out, so any use of it\noutside the very basic testing of the django_log_to_telegram mechanism is deprecated to say the least.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-log-to-telegram",
    "package_url": "https://pypi.org/project/django-log-to-telegram/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-log-to-telegram/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-log-to-telegram/2019.10.30/",
    "requires_dist": [
      "Django (>1.9)",
      "requests"
    ],
    "requires_python": "",
    "summary": "a simple logger that sends 500 exceptions to a Telegram bot of your choice.",
    "version": "2019.10.30",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6506832,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7da73304b124f52af9a0c2d5531434e4e9e542731752fa612b357dd7c337c98",
        "md5": "da576122ed58a08266a46b38e9b07606",
        "sha256": "375cb453f395d2f1d03c16bbfa97dbde00892747dd48fc18828f8ed45236ce2a"
      },
      "downloads": -1,
      "filename": "django_log_to_telegram-2019.10.30-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da576122ed58a08266a46b38e9b07606",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17893,
      "upload_time": "2020-01-08T11:14:55",
      "upload_time_iso_8601": "2020-01-08T11:14:55.404691Z",
      "url": "https://files.pythonhosted.org/packages/e7/da/73304b124f52af9a0c2d5531434e4e9e542731752fa612b357dd7c337c98/django_log_to_telegram-2019.10.30-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ad17b50c3f1fc75931e86baf41a085b793126c737a38387effefa6b5f8ef601",
        "md5": "ed04c15f6f83b3988d8cde5a8acb6db9",
        "sha256": "8e19941481f0f088f99d4c6cae3f70460df651ca7f176e0a1c68aba0094e02a0"
      },
      "downloads": -1,
      "filename": "django-log-to-telegram-2019.10.30.tar.gz",
      "has_sig": false,
      "md5_digest": "ed04c15f6f83b3988d8cde5a8acb6db9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17940,
      "upload_time": "2020-01-08T11:14:57",
      "upload_time_iso_8601": "2020-01-08T11:14:57.236426Z",
      "url": "https://files.pythonhosted.org/packages/8a/d1/7b50c3f1fc75931e86baf41a085b793126c737a38387effefa6b5f8ef601/django-log-to-telegram-2019.10.30.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}