{
  "info": {
    "author": "Luigi Mazari Villanova",
    "author_email": "luigi.mazari@cnr.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Scientific/Engineering"
    ],
    "description": "======================\nDjango Log to Telegram\n======================\n\nThis is a simple logger that sends 500 exceptions to a Telegram bot of your choice.\n\nQuick start\n-----------\n\nInstall django-log-to-telegram:\n\n.. code:: bash\n\n    pip install -e django_log_to_telegram\n\n1. register a bot on Telegram (`with BotFather <https://core.telegram.org/bots#6-botfather>`_), start a chat with it and put\nthe Api token in settings.py:\n\n.. code:: python\n\n    LOG_TO_TELEGRAM_BOT_TOKEN = '12345678:replace-me-with-real-token'\n\nDifferent errors will be fired if the BOT_TOKEN is not active or if there is no chat active with it.\n\n2. add the 'django_log_to_telegram' to your INSTALLED_APPS setting:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_log_to_telegram',\n        ...\n    ]\n\n3. add the `django_log_to_telegram.log.AdminTelegramHandler` to your app's logging configuration, for example:\n\n.. code:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'filters': {\n            'require_debug_false': {\n                '()': 'django.utils.log.RequireDebugFalse'\n            }\n        },\n        'handlers': {\n            'telegram_log': {\n                'level': 'ERROR',\n                'filters': ['require_debug_false'],\n                'class': 'django_log_to_telegram.log.AdminTelegramHandler',\n                'bot_token': LOG_TO_TELEGRAM_BOT_TOKEN,\n            }\n        },\n        'loggers': {\n            'django.request': {\n                'handlers': ['telegram_log'],\n                'level': 'ERROR',\n                'propagate': True,\n            },\n        },\n    }\n\nif you want to test this logger in a debug environment, just remove the `filters': ['require_debug_false'],` line in the\n'handlers' dictionary.\n\n4. Run `python manage.py migrate` to create the django_log_to_telegram models.\n\n#TODO creare un primo modello\n\nIf everything went well, you bot will then begin sending messages on 500 exceptions.\n\nThere is a *very basic* test app provided in the folder test_app. It is configured to send errors to telegram even with\nDEBUG active, so that it can be useful with just a\n\n.. code:: python\n\n    ./manage.py runserver\n\nIt does not provide any database configuration, and most of Django basic settings are stripped out, so any use of it\noutside the very basic testing of the django_log_to_telegram mechanism is deprecated to say the least.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-log-to-telegram",
    "package_url": "https://pypi.org/project/django-log-to-telegram/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-log-to-telegram/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-log-to-telegram/2020.1.23/",
    "requires_dist": [
      "Django (>1.9)",
      "requests"
    ],
    "requires_python": "",
    "summary": "a simple logger that sends 500 exceptions to a Telegram bot of your choice.",
    "version": "2020.1.23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6506832,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ff2b9024920e24416b69468f62ee5874f96b0fe46907a22d09dcbfa2bdf6499",
        "md5": "9f506fdf3aa055a8f926e1769465d5f2",
        "sha256": "b855fde3471b3bea57a7efe5f6ea4b0e438127838abbfe1f084fe21fdb088491"
      },
      "downloads": -1,
      "filename": "django_log_to_telegram-2020.1.23-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f506fdf3aa055a8f926e1769465d5f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19195,
      "upload_time": "2020-01-23T14:30:25",
      "upload_time_iso_8601": "2020-01-23T14:30:25.892852Z",
      "url": "https://files.pythonhosted.org/packages/8f/f2/b9024920e24416b69468f62ee5874f96b0fe46907a22d09dcbfa2bdf6499/django_log_to_telegram-2020.1.23-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abe57660ad070369c4e072061173dada68c70a928ce48da55af44e1f3b0c2070",
        "md5": "447bdbb3a9243131264393d14eb7e878",
        "sha256": "a305c4b826cccd0620fc4f3516dcb49549d53029f9dd9e0e8c8f4fc912b3fcd8"
      },
      "downloads": -1,
      "filename": "django-log-to-telegram-2020.1.23.tar.gz",
      "has_sig": false,
      "md5_digest": "447bdbb3a9243131264393d14eb7e878",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18307,
      "upload_time": "2020-01-23T14:30:27",
      "upload_time_iso_8601": "2020-01-23T14:30:27.871744Z",
      "url": "https://files.pythonhosted.org/packages/ab/e5/7660ad070369c4e072061173dada68c70a928ce48da55af44e1f3b0c2070/django-log-to-telegram-2020.1.23.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}