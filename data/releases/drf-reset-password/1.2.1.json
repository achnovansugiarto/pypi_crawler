{
  "info": {
    "author": "linnify",
    "author_email": "info@linnify.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "******************\nDRF Reset Password\n******************\n\nThis is an easy to include library that takes care of managing the reset password part of your application.\nIt offers 3 endpoints used for creating, validating and submitting the password change. The user if offered\nthe liberty to chose how the reset password link is sent to the user and where it will redirect the user.\n\nRequirements\n############\n\nPython >= 3.7\nDjango >=3.0\n\nWe highly recommend and only officially support the latest patch release of each Python and Django series\n\nInstallation\n############\n\nThe command to install the package from pypi using pip:\n\n```\npip install drf-reset-password\n```\n\nAdd ``reset-password`` to your ``INSTALLED_APPS`` in settings\n\n::\n\n    INSTALLED_APPS=[\n        ...,\n        'reset_password',\n        ]\n\nConfiguration\n#############\n\nYou can configure the library from the variable `DRF_RESET_EMAIL` that you will set in your settings.\n\n::\n\n    {\n        'RESET_PASSWORD_EMAIL_TITLE': 'Reset Password',\n        'RESET_PASSWORD_EMAIL_TEMPLATE': 'reset_email.html',\n        'EMAIL_EXPIRATION_TIME': 24,\n        'REDIRECT_LINK': 'dsa',\n        'APP_NAME': 'test',\n        'EMAIL_PROVIDER': 'reset_password.models.EmailProvider',\n        'EMAIL_FIELD': 'email',\n    }\n\n``RESET_PASSWORD_EMAIL_TITLE`` - Sets the title of the email sent. ``RESET_PASSWORD_EMAIL_TITLE`` is on default on Reset Password.\n\n``RESET_PASSWORD_EMAIL_TEMPLATE`` -  You can change the default template with your own template.``RESET_PASSWORD_EMAIL_TEMPLATE`` is on default on our default template.\n\n``EMAIL_EXPIRATION_TIME`` - The amount of time it takes for the email to expire. ``EMAIL_EXPIRATION_TIME`` is on default on 24 hours.\n\n``REDIRECT_LINK`` - The url of your redirect link inside the email (you can access it inside your own template with the variable ``link``).\n\n``APP_NAME`` - The name of you app that will be mentioned inside the email.\n\n``EMAIL_PROVIDER`` - The class which will be called to send the email (The class has to extend the class EmailProvider and implement the method send_email).\n\n``EMAIL_FIELD`` - This is the field on the user that contains the email. If you are using django a user model\nyou should always have it on email. ``EMAIL_FIELD`` is on default on email.\n\n\n\nTemplate Creation\n#################\n\nThis is an example on how your template should look we give you 3 variables that you can access. Which are\n``app_name``, ``link`` and ``email`` (this is the email of the user which had his password changed).\n\n\n::\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    </head>\n    <body>\n      <p>Hello,</p>\n      <p>Follow this link to reset your {{ app_name }} password for your {{ email }} account.</p>\n      <p><a href='{{ link }}'>{{ link }}%</a></p>\n      <p>If you didnâ€™t ask to reset your password, you can contact us.</p>\n      <p>Thanks,</p>\n      <p>Your {{ app_name }} team</p>\n    </body>\n    </html>\n\nFinal steps for set up\n######################\n\nWhen you are done with configuring your reset_password app you can add it to your urls and start making calls.\n\n::\n\n    from django.conf.urls import url\n    from django.urls import include\n    from rest_framework import routers\n    from reset_password.views import ResetPasswordView\n\n    router = routers.DefaultRouter(trailing_slash=False)\n    router.register(\"reset-password\", ResetPasswordView, basename=\"reset_password\")\n    urlpatterns = [\n        ...,\n        url(r\"^\", include(router.urls)),\n    ]\n\nEndpoints\n#########\n\nThe app has 3 endpoints: one for generating the email for reset password, one for validating the token inside \nthe email and one for changing the password.\n\nCreate Endpoint\n###############\n\nThis endpoint receives the email address and creates and calls for the ``EMAIL_PROVIDER`` to send the email to the\nuser.\n\n::\n\n    reset-password/ -> POST\n\n\n::\n\n    {\n      \"email\": \"example@google.com\"\n    }\n\nIt has an empty response with 201 if successful and 400 if email is not valid.\n\nToken Validation\n################\n\nThis endpoint receives the token through the query param ``token`` and it verifies if it is valid.\n\n::\n\n    reset-password/token-validation -> POST\n\n\n::\n\n    {\n\n    }\n\nIt has an empty response with 200 if successful and 400 if token is not valid.\n\n\nChange Password\n###############\n\nThis endpoint receives the token through the query param ``token`` and it verifies if it is valid. and then changes\nthe user's password with the one sent in the body\n\n::\n\n    reset-password/submit -> POST\n\n::\n\n    {\n      \"password\": \"password\"\n    }\n\nIt has an empty response with 200 if successful and 400 if token is not valid or the password sent.\n\n\n\nGood luck using it and if you have any question or suggestions please contact us\n\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linnify/drf-reset-password",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-reset-password",
    "package_url": "https://pypi.org/project/drf-reset-password/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-reset-password/",
    "project_urls": {
      "Homepage": "https://github.com/linnify/drf-reset-password"
    },
    "release_url": "https://pypi.org/project/drf-reset-password/1.2.1/",
    "requires_dist": [
      "Django (>=3.0)",
      "djangorestframework (>=3.11)"
    ],
    "requires_python": "",
    "summary": "Description",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10827304,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5982474bf7026c37d70326484b95b84d17ba3b9f87d92c45fef9c8862f85c72e",
        "md5": "06a40a435e6d061ab70ce939737adc03",
        "sha256": "a01fda4c00b21c1681668600fff882b6961447fcd42fbb2b50e8f78153305297"
      },
      "downloads": -1,
      "filename": "drf_reset_password-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06a40a435e6d061ab70ce939737adc03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10032,
      "upload_time": "2020-08-10T13:23:49",
      "upload_time_iso_8601": "2020-08-10T13:23:49.460538Z",
      "url": "https://files.pythonhosted.org/packages/59/82/474bf7026c37d70326484b95b84d17ba3b9f87d92c45fef9c8862f85c72e/drf_reset_password-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b14316bcd3b90a6554d02d8a284e620f26a37626e694dbe59b61b4fab5a5e82",
        "md5": "075887b5728d28258af2febe4058d8b6",
        "sha256": "c63d5b0ca1aca937dc08821de41a980498857187f29d815e5b7acef5495e518b"
      },
      "downloads": -1,
      "filename": "drf-reset-password-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "075887b5728d28258af2febe4058d8b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7578,
      "upload_time": "2020-08-10T13:23:50",
      "upload_time_iso_8601": "2020-08-10T13:23:50.718442Z",
      "url": "https://files.pythonhosted.org/packages/5b/14/316bcd3b90a6554d02d8a284e620f26a37626e694dbe59b61b4fab5a5e82/drf-reset-password-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}