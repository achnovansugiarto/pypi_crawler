{
  "info": {
    "author": "Can H. Tartanoglu",
    "author_email": "canhtart@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# mextractor: media metadata extractor\n\nVideos and images can be large. \n\n## Installation\n\nDownload and install from PyPi with `pip`:\n\n```shell\npip install mextractor\n```\nIf you are extracting metadata from videos, install additional dependencies:\n```shell\npip install mextractor[video-extract]\n```\n\n## Usage\nPlease back up your files before using them with the package, things might break during runtime causing corruption.\n\n### Command line interface (CLI)\n\nCopy directory to a new directory while extracting media info and a single frame from videos in subdirectories:\n```shell\nmextractor video-subdirs <path_to_root>\n```\n\n### Programmatically\nThese functions are useful when integrating mextractor to your own package. You can also use it for quick scripts, see the `mextractor.workflows` submodule for inspiration.\n\n#### Extract and dump metadata\n\n##### Video\n\n```python\nfrom mextractor.workflow import extract_and_dump_video\n\nmetadata = extract_and_dump_video(dump_dir, path_to_video, include_image, greyscale, lossy_compress_image)\n```\n\n##### Image\n\n```python\nfrom mextractor.workflow import extract_and_dump_image\n\nmetadata = extract_and_dump_image(dump_dir, path_to_image, include_image, greyscale, lossy_compress_image)\n```\n\n#### Load media\n\n##### Video\n\n```python\nimport mextractor\n\nvideo_metadata = mextractor.load(mextractor_dir)\n\nprint(video_metadata.average_fps)\nprint(video_metadata.frames)\nprint(video_metadata.resolution)\nprint(video_metadata.video_length_in_seconds)\n```\n\n##### Image\n\n```python\nimport mextractor\n\nimage_metadata = mextractor.load(mextractor_dir)\n\nprint(image_metadata.resolution)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/mextractor/",
    "keywords": "pydantic,metadata,video,image,bigdata",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mextractor",
    "package_url": "https://pypi.org/project/mextractor/",
    "platform": null,
    "project_url": "https://pypi.org/project/mextractor/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/mextractor/",
      "Repository": "https://github.com/caniko/media-metadata-extractor"
    },
    "release_url": "https://pypi.org/project/mextractor/2.2.0/",
    "requires_dist": [
      "setuptools",
      "numpy; python_version >= \"3.8\" and python_version < \"3.11\"",
      "numpy (>=1.21.0,<2.0.0); python_version >= \"3.7\" and python_version < \"3.8\"",
      "pydantic (>=1.9.2,<2.0.0)",
      "pydantic-numpy (>=1.3.0,<2.0.0)",
      "ruamel.yaml (>=0.17.21,<0.18.0)",
      "opencv-python (>=4.6.0,<5.0.0)",
      "ffmpeg-python (>=0.2.0,<0.3.0); extra == \"video-extract\"",
      "numba (>=0.56.0,<0.57.0)",
      "click (>=8.1.3,<9.0.0)"
    ],
    "requires_python": ">=3.7,<3.11",
    "summary": "mextractor can extract media metadata to YAML and read them",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15527089,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "beae3abb2082048cc213504fa13dce93645a83f29bcc75f52d886766787ac740",
        "md5": "a222acbd944d4d79139db4dc8966b457",
        "sha256": "a326d2f36f88ff9a3eb435710f5e50eec45253758e0caac27b059c225fbcedc7"
      },
      "downloads": -1,
      "filename": "mextractor-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a222acbd944d4d79139db4dc8966b457",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<3.11",
      "size": 6545,
      "upload_time": "2022-10-25T19:20:29",
      "upload_time_iso_8601": "2022-10-25T19:20:29.707643Z",
      "url": "https://files.pythonhosted.org/packages/be/ae/3abb2082048cc213504fa13dce93645a83f29bcc75f52d886766787ac740/mextractor-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c6762372c87c30c6dfe38ea07f2ce2338900593da4dab87c936ae93591b1acd",
        "md5": "6388634ecec8a8827e812cc43e8af686",
        "sha256": "9cbaa638738049d3cf195c312c426246b68fe0df850d5a09c4bf8de2ede05a02"
      },
      "downloads": -1,
      "filename": "mextractor-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6388634ecec8a8827e812cc43e8af686",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<3.11",
      "size": 5456,
      "upload_time": "2022-10-25T19:20:31",
      "upload_time_iso_8601": "2022-10-25T19:20:31.179530Z",
      "url": "https://files.pythonhosted.org/packages/8c/67/62372c87c30c6dfe38ea07f2ce2338900593da4dab87c936ae93591b1acd/mextractor-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}