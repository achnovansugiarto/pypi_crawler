{
  "info": {
    "author": "Matthew Gamble",
    "author_email": "git@matthewgamble.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Software Distribution"
    ],
    "description": "======================\nDocker Registry Client\n======================\n\n|ci| |codecov| |pypi| |license|\n\nA Python REST client for Docker Registries. Pronounced ``dee-redge client``.\n\nIt's useful for automating image tagging and untagging\n\n.. |ci| image:: https://github.com/djmattyg007/dreg-client/workflows/CI/badge.svg?branch=main\n   :target: https://github.com/djmattyg007/dreg-client/actions?query=branch%3Amain+workflow%3ACI\n   :alt: Build status\n.. |codecov| image:: https://codecov.io/gh/djmattyg007/dreg-client/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/djmattyg007/dreg-client\n   :alt: Code coverage\n.. |pypi| image:: https://img.shields.io/pypi/v/dreg-client.svg\n   :target: https://pypi.org/project/dreg-client\n   :alt: Latest version released on PyPI\n.. |license| image:: https://img.shields.io/pypi/l/dreg-client.svg\n   :target: https://pypi.org/project/dreg-client\n   :alt: Apache License 2.0\n\nUsage\n=====\n\nMost people will primarily use the ``Registry`` class:\n\n.. code-block:: python\n\n    from dreg_client import Registry\n\n    registry = Registry.build_with_manual_client(\"https://registry.example.com/v2/\")\n\n    namespaces = registry.namespaces()  # a sequence of strings\n    repositories = registry.repositories()  # a mapping of repository names to Repository objects\n    ns_repositories = registry.repositories(\"testns\")  # a mapping of repository names to Repository objects,\n                                                       # but only for those repositories in the \"testns\" namespace\n    test_repo = registry.repository(\"testrepo\", \"testns\")  # a Repository object\n    test_repo = registry.repository(\"testns/testrepo\")  # an identical repository object\n\nThe ``Repository`` class has several methods for interacting with individual repositories:\n\n.. code-block:: python\n\n    from dreg_client import Repository, Manifest\n\n    assert isinstance(test_repo, Repository)\n    assert test_repo.name == \"testns/testrepo\"\n\n    tags = test_repo.tags()  # a sequence of strings\n\n    manifest = test_repo.get_manifest(tags[0])  # a Manifest object\n    assert isinstance(manifest, Manifest)\n\n    test_repo.delete_manifest(manifest.digest)  # manifests can only be deleted by digest, not by tag\n\n    # At the moment, retrieving and deleting blobs returns a requests Response object directly\n    get_blob_response = test_repo.get_blob(\"sha256:ce17d456b9373523c40fe294e8918a10059f63c54edd2c8ead1f3079f7fbb22a\")\n    delete_blob_response = test_repo.delete_blob(\"sha256:ce17d456b9373523c40fe294e8918a10059f63c54edd2c8ead1f3079f7fbb22a\")\n\nHowever, you're probably going to want to use the high-level ``get_image()`` method, which returns an ``Image`` object:\n\n.. code-block:: python\n\n    from dreg_client import Image, Platform\n\n    test_image = test_repo.get_image(tags[0])\n    assert isinstance(test_image, Image)\n\n    assert test_image.repo == \"testns/testrepo\"\n    assert test_image.tag == tags[0]\n\n    assert test_image.platforms == {\n        Platform.from_name(\"linux/amd64\"),\n        Platform.from_name(\"linux/arm64\"),\n        Platform.from_name(\"linux/arm/v7\"),\n    }\n\n    platform_image = test_image.get_platform_image(Platform.from_name(\"linux/amd64\"))\n\nHistory\n=======\n\ndreg-client is a fork of a project named `docker-registry-client <https://github.com/yodle/docker-registry-client>`_.\nWhile it looked good, development has stalled, with approved PRs remaining unmerged. The code design was also hostile\nto strict type checking. I forked it to make some improvements, add type hints, and to resolve several outstanding\nproblems at the time.\n\nThis fork is not a drop-in replacement for ``docker-registry-client``. Major changes from upstream include:\n\n- Complete removal of python2 support\n- Complete removal of support for v1 registries\n- A re-work of class names\n- A re-work of the requests integration and registry auth service\n- More higher-level abstractions, to avoid needing to dive into manifest dictionaries\n\nAlternatives\n============\n\n* `python-dxf <https://pypi.org/project/python-dxf>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/djmattyg007/dreg-client",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dreg-client",
    "package_url": "https://pypi.org/project/dreg-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/dreg-client/",
    "project_urls": {
      "Homepage": "https://github.com/djmattyg007/dreg-client",
      "Issues": "https://github.com/djmattyg007/dreg-client/issues",
      "Source": "https://github.com/djmattyg007/dreg-client"
    },
    "release_url": "https://pypi.org/project/dreg-client/1.2.0/",
    "requires_dist": [
      "requests (<3.0.0,>=2.27.1)",
      "requests-toolbelt (<0.10.0,>=0.9.1)",
      "build ; extra == 'build'",
      "twine ; extra == 'build'",
      "wheel ; extra == 'dev'",
      "invoke ; extra == 'dev'",
      "black ; extra == 'dev'",
      "check-manifest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "flake8-annotations-complexity ; extra == 'dev'",
      "flake8-black ; extra == 'dev'",
      "flake8-breakpoint ; extra == 'dev'",
      "flake8-bugbear ; extra == 'dev'",
      "flake8-builtins ; extra == 'dev'",
      "flake8-comprehensions ; extra == 'dev'",
      "flake8-eradicate ; extra == 'dev'",
      "flake8-expression-complexity ; extra == 'dev'",
      "flake8-isort ; extra == 'dev'",
      "flake8-pytest-style ; extra == 'dev'",
      "flake8-requirements ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pep8-naming ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "types-freezegun ; extra == 'dev'",
      "types-requests ; extra == 'dev'",
      "coverage[toml] (<6.0,>=5.5) ; extra == 'dev'",
      "docker (<6.0.0,>=5.0.2) ; extra == 'dev'",
      "freezegun ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "responses ; extra == 'dev'",
      "black ; extra == 'lint'",
      "check-manifest ; extra == 'lint'",
      "flake8 ; extra == 'lint'",
      "flake8-annotations-complexity ; extra == 'lint'",
      "flake8-black ; extra == 'lint'",
      "flake8-breakpoint ; extra == 'lint'",
      "flake8-bugbear ; extra == 'lint'",
      "flake8-builtins ; extra == 'lint'",
      "flake8-comprehensions ; extra == 'lint'",
      "flake8-eradicate ; extra == 'lint'",
      "flake8-expression-complexity ; extra == 'lint'",
      "flake8-isort ; extra == 'lint'",
      "flake8-pytest-style ; extra == 'lint'",
      "flake8-requirements ; extra == 'lint'",
      "isort ; extra == 'lint'",
      "pep8-naming ; extra == 'lint'",
      "coverage[toml] (<6.0,>=5.5) ; extra == 'test'",
      "docker (<6.0.0,>=5.0.2) ; extra == 'test'",
      "freezegun ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "responses ; extra == 'test'",
      "mypy ; extra == 'typecheck'",
      "types-freezegun ; extra == 'typecheck'",
      "types-requests ; extra == 'typecheck'"
    ],
    "requires_python": ">=3.8",
    "summary": "API client for Docker Registries",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12586703,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e333716789d53977284ed8167318371aafe121d40fbb68d473196006dda97a67",
        "md5": "2afee832c36fb29a1b7c08c20145e796",
        "sha256": "e7ef54ac7e99da639ef729f576f0064aa06a467057df2080e640b74c5a1dad13"
      },
      "downloads": -1,
      "filename": "dreg_client-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2afee832c36fb29a1b7c08c20145e796",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17756,
      "upload_time": "2022-01-16T04:35:14",
      "upload_time_iso_8601": "2022-01-16T04:35:14.239697Z",
      "url": "https://files.pythonhosted.org/packages/e3/33/716789d53977284ed8167318371aafe121d40fbb68d473196006dda97a67/dreg_client-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e77dc0627e4e49b2e93f343b97da3d2b7bae62758df3a767fac1432b690cb78",
        "md5": "cd998bb142d955b5edfb1f2439beb008",
        "sha256": "81c179eab9846ae4873668b6a68a76579e39a7bcdc325c37a4392c0c83a0f021"
      },
      "downloads": -1,
      "filename": "dreg-client-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cd998bb142d955b5edfb1f2439beb008",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 29418,
      "upload_time": "2022-01-16T04:35:15",
      "upload_time_iso_8601": "2022-01-16T04:35:15.911437Z",
      "url": "https://files.pythonhosted.org/packages/2e/77/dc0627e4e49b2e93f343b97da3d2b7bae62758df3a767fac1432b690cb78/dreg-client-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}