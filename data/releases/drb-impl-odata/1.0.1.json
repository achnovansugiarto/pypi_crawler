{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# OData CSC implementation\nThis drb-impl-odata module implements the OData protocol access\nfollowing the Copernicus Space Component schema (**CSC**) with DRB\ndata model. It is able to navigate among Product entities of a OData\n**CSC** service.\n\n# Nodes\n### ODataServiceNode\nRepresents the OData **CSC** service. This node has no attribute and\nhas as children Product entities of the service defined by\n`ProductNode`.\nA specific `ProductNode` can be retrieved during the bracket and\nslash navigation by his *Name*(str) or by his *Id*(UUID).\n\n**CSC** OData services required can be access using the second (optional)\nparameter __auth__ of _ODataServiceNode_, this parameter must be an\n_requests.auth.AuthBase_ object, see\n[requests documentation](https://docs.python-requests.org/en/latest/user/authentication)\nfor more details.\n### ODataProductNode\nRepresents a *Product* entity of the OData **CSC** service. This\nnode has as attribute properties of the associated entity and has\nfor unique child a `ProductAttributeNode`\n### ODataProductAttributeNode\nThis node allowing to represent the navigation link between the\n*Product* entity and its attributes. It has no attribute and has as\nchildren *Attribute* entities associated to the *Product* entity,\ndefined by `AttributeNode`\n### ODataAttributeNode\nRepresents an *Attribute* entity. This node has no child and has as\nattribute properties associated to the *Attribute* entity.\n\n# Predicate\n### ODataCustomQuery\nThis predicate allows to retrieve a specific subset of children of an\n_ODataServiceNode_.\n\n\n# Cache set up\n\nSome cache has been implemented to limit the number of requests to the server. \nThese cache evicts cache entries based on both time and space.\nthe time and the cache size can be changed by adding these two variables to the runtime environment.\n```python\nDRB_ODATA_NODE_REQUEST_CACHE_EXPIRE_TIME_SEC = 120\nDRB_ODATA_NODE_REQUEST_CACHE_MAX_ELEMENTS = 32\n```\n\nHere are all the queries that use a cache\n```\ndef req_svc(odata: OdataNode) -> dict:\ndef req_svc_products(odata: OdataNode, **kwargs) -> list:\ndef req_product_by_uuid(odata: OdataNode, prd_uuid: str) -> dict:\ndef req_product_attributes(odata: OdataNode, prd_uuid: str) -> List[dict]:\n```\n\nThe time of the cache eviction can be change by calling `reset_cache_expiration_time(sec=1) `: \n```\nreq_svc_products.reset_expiration_time(sec=1)\n```\n\n# Installation\n```\npip install drb-impl-odata\n```\n# Examples\n\n```python\nfrom uuid import UUID\nfrom requests.auth import HTTPBasicAuth\nfrom drb_impl_odata import ODataServiceNode, \\\n    ODataProductNode, ODataAttributeNode, ODataQueryPredicate\n\n# generate ODataServiceNode without authentication\nodata = ODataServiceNode('https://my.csc.odata.com')\n# generate ODataServiceNode with authentication mechanism\nodata = ODataServiceNode('https://my.csc.odata.com',\n                         auth=HTTPBasicAuth('usr', 'pwd'))\n\n# total number of children\nproduct_count = len(odata)\n\n# retrieve first ODataProductNode\nnode_idx = odata[0]\n\n# retrieve last ODataProductNode\nnode_idx = odata[-1]\n\n# retrieve 10 first products\nproducts = odata.children[:10]\n\n# retrieve Product by name\nname = 'S2B_OPER_MSI_L0__GR_EPAE_..._D05_N02.06.tar'\nnode_name_list = odata[name]  # returns a list\nnode_name = odata[name]  # returns first occurrence of the list\n\n# retrieve Product by UUID\nuuid = UUID('0723d9bf-02a2-3e99-b1b3-f6d81de84b62')\nnode_uuid = odata[uuid]\n\n\n# get product attributes\nprd_node = odata[uuid]\nattr_node = prd_node['Attributes']['Footprint']\n\nattr_type = attr_node.get_attribute('ValueType')\nattr_value = attr_node.value\n\n# filter and order products\nfiltered_children = odata / ODataQueryPredicate(filter=\"startswith(Name,'S1')\",\n                                                order=\"ContentLength desc\")\n\n```\n\nThe same example with DHus catalog (https://scihub.copernicus.eu/dhus/odata/v2)\n\nThe only change is\n\n```python\n\n# get product attributes\n# For DhuS ValueType not exist in Attributes...\nattr_type = attr_node.get_attribute('ContentType')\n\n```\n\nA similar example with ONDA-DIAS catalog (https://catalogue.onda-dias.eu/dias-catalogue)\n\n```python\nimport uuid\nfrom drb_impl_odata import ODataServiceNode, ODataQueryPredicate\n\nsvc_url = 'https://catalogue.onda-dias.eu/dias-catalogue'\n\n# generate ODataServiceNode without authentication\nodata = ODataServiceNode(svc_url)\n\n# retrieve Product by UUID\nuuid_node = uuid.UUID('34a0a4ed-0246-4a57-827d-70350b96d03d')\nnode_uuid = odata[uuid_node]\n\nattr_node = node_uuid['Attributes']\nchildren = attr_node.children\nfoot_print = node_uuid.get_attribute('footprint')\nprint(foot_print)\nprint(attr_node['Online quality check'].value)\n\n# search by product type limited two the 2 first result\nfiltered_children = odata / ODataQueryPredicate(\n            search='\"(platformName:Sentinel-2) AND (productType:S2MSI2A)\"',\n            top=\"2\")\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/impl/odata",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-impl-odata",
    "package_url": "https://pypi.org/project/drb-impl-odata/",
    "platform": "",
    "project_url": "https://pypi.org/project/drb-impl-odata/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/impl/odata"
    },
    "release_url": "https://pypi.org/project/drb-impl-odata/1.0.1/",
    "requires_dist": [
      "drb (<1.1.0,>=1.0.1)",
      "drb-impl-http (==1.0.1)",
      "defusedxml (>=0.7.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB OData CSC implementation",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15067409,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "504a61faa17788dab64e8574880aa03138575434c50017dd3ff4e9eed83764e1",
        "md5": "554dd927d636cad9c83c8f4532953675",
        "sha256": "e582bf4393732fc2d8c846741fa6aadf4ba751c67129f54c808b568238b9000b"
      },
      "downloads": -1,
      "filename": "drb_impl_odata-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "554dd927d636cad9c83c8f4532953675",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11981,
      "upload_time": "2022-02-11T13:45:07",
      "upload_time_iso_8601": "2022-02-11T13:45:07.211795Z",
      "url": "https://files.pythonhosted.org/packages/50/4a/61faa17788dab64e8574880aa03138575434c50017dd3ff4e9eed83764e1/drb_impl_odata-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a622eede34f30a9b389d545b4770933075a2496ddd0ca43e0d528d61a747413",
        "md5": "6cbfdf57f03660a222e81bd7dba8ffae",
        "sha256": "ef4b7c4801823973f7420fc0a0669eb725291206d84b02db77f66aa3067f03be"
      },
      "downloads": -1,
      "filename": "drb-impl-odata-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6cbfdf57f03660a222e81bd7dba8ffae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 28481,
      "upload_time": "2022-02-11T13:45:08",
      "upload_time_iso_8601": "2022-02-11T13:45:08.393377Z",
      "url": "https://files.pythonhosted.org/packages/2a/62/2eede34f30a9b389d545b4770933075a2496ddd0ca43e0d528d61a747413/drb-impl-odata-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}