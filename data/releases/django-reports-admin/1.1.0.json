{
  "info": {
    "author": "G Adventures",
    "author_email": "software@gadventures.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "django-reports-admin\n====================\n\nA Django Admin add-on which adds functionality to export data in\ncustomized forms of output.\n\nRequirements\n------------\n\nDjango Reports Admin requires ``Django 1.10`` or later, and is written\nfor ``Python 3.5`` or later.\n\nInstallation\n------------\n\n**NOTE:** Although enabled by default, you’ll want to ensure that\n``django.contrib.contenttypes`` is within ``INSTALLED_APPS``.\n\n.. code:: sh\n\n   pip install django-reports-admin\n\nThen, amend your Django ``settings.INSTALLED_APPS``:\n\n.. code:: python\n\n   INSTALLED_APPS = (\n       ...\n       'reports',\n       ...\n   )\n\nUsage\n-----\n\nCreating reports requires subclassing the ``ModelReport`` class and\nidentifying a report. This can be done with a few lines of code if you\nsimply want to extract the admin list view for verbatim. For example:\n\n.. code:: python\n\n   # This file can be named anything, but it lives well within the admin.py or\n   # models.py as it'll ensure your register() command is run.\n   # yourapp/reports.py -- This file can be named anything\n\n   from reports.base import ModelReport\n\n   class MyReport(ModelReport)\n       name = \"Report - My Report\"\n\nThen, register the ``ModelReport`` against a model:\n\n.. code:: python\n\n   # yourapp/admin.py\n\n   from .reports import MyReport\n   from .models import MyModel\n\n   reports.register(MyModel, MyReport)\n\nUpon registration, you’ll see a new action with the Django Admin for\nthat Model, with whatever name you’ve provided in the ``name``\nattribute.\n\nFor advanced report modification, subclass the following functions\nwithin your ``ModelReport`` class:\n\n``get_field_lookups`` returns a list of column name-value/callback\ntuples. This function is a great way to modify the columns of the\nreport, and the exact output of each field. It is useful if you wish to\ncreate a calculated field, or format a date field.\n\n``get_row_data`` returns a dictionary of the data to be entered for each\nrow. Generally you should not need to modify this as\n``get_field_lookups`` will be sufficient.\n\n``generate_output`` can be modified to adjust the type of output. By\ndefault, a CSV file is generated.\n\nUsage In Shell And Tests\n------------------------\n\nIt may be useful for you to test a report via code, either as a test or\na quick shell script. This is done without much stress:\n\n.. code:: python\n\n   # Assuming a defined ModelReport\n   from reports.base import ModelReport\n   from .models import MyModel\n\n   class MyReport(ModelReport):\n       queryset = MyModel.objects.all()\n\n   # Instantiate the report, and run it through various means\n\n   report = MyReport()\n\n   # Create a SavedReport instance\n   report.run_report()\n\n   # Raw output of the report (as CSV, by default)\n   report.generate_output()\n\n   # Output list of OrderedDicts\n   report.collect_data()\n\nTesting\n-------\n\nTests are run using ``pytest``, and the test suite can be executed using\nthe MakeFile\n\n.. code:: sh\n\n   make test\n\n\nChangelog\n=========\n\n1.1.0 (2021-02-06)\n------------------\n\n* 58bece6_ - Migration for change to ``SavedReport.run_by``\n* fae699c_ - Full code base format + commit of change to ``SavedReport.run_by``.\n  Modified to add the ``on_delete=models.SET_NULL``\n\n.. _58bece6: https://github.com/gadventures/django-reports-admin/commit/58bece6\n.. _fae699c: https://github.com/gadventures/django-reports-admin/commit/fae699c\n\n1.0.4 (2017-02-28)\n------------------\n\n* a0dc5a0_ - Return ``None`` on error when calling ``ModelReport``\n\n.. _a0dc5a0: https://github.com/gadventures/django-reports-admin/commit/a0dc5a0\n\n1.0.3 (2017-02-27)\n------------------\n\n* 21ca6a5_ - Refactor calling to report runner\n* fba6bf1_ - Allow queryset to be passed within __init__ method\n* 5f0ef05_ - Add simple test case for ModelReport, refine misc.\n* 3d7d587_ - Document shell usage in README, add more type hints\n* 5268739_ - Adjust signature of run_report, easing usage in shell\n\n.. _21ca6a5: https://github.com/gadventures/django-reports-admin/commit/21ca6a5\n.. _fba6bf1: https://github.com/gadventures/django-reports-admin/commit/fba6bf1\n.. _5f0ef05: https://github.com/gadventures/django-reports-admin/commit/5f0ef05\n.. _3d7d587: https://github.com/gadventures/django-reports-admin/commit/3d7d587\n.. _5268739: https://github.com/gadventures/django-reports-admin/commit/5268739\n\n1.0.2 (2017-02-10)\n------------------\n\n* fa46174_ Adjust user messaging in admin.\n* Update README\n\n.. _fa46174: https://github.com/gadventures/django-reports-admin/commit/fa46174\n\n1.0.1 (2017-02-10)\n------------------\n\n* First pypi release\n\n1.0.0 (2017-02-09)\n------------------\n\n* Initial commit",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gadventures/django-reports-admin",
    "keywords": "django reports admin",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-reports-admin",
    "package_url": "https://pypi.org/project/django-reports-admin/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-reports-admin/",
    "project_urls": {
      "Homepage": "https://github.com/gadventures/django-reports-admin"
    },
    "release_url": "https://pypi.org/project/django-reports-admin/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django Admin add-on which adds functionality to export data in customized forms of output.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9446670,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6b5bc5ce1d797911d8f764394d475c08fa0da26cf98fa5319c0e930dda511f2",
        "md5": "f552d0bf93b5fd98a50c68ea99c78fe8",
        "sha256": "d0db67b9ba220c4a649b8ff413323b7a7c0a7422440a7a8fe88be5b6f5eefbe2"
      },
      "downloads": -1,
      "filename": "django-reports-admin-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f552d0bf93b5fd98a50c68ea99c78fe8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13795,
      "upload_time": "2021-02-06T16:58:13",
      "upload_time_iso_8601": "2021-02-06T16:58:13.076879Z",
      "url": "https://files.pythonhosted.org/packages/a6/b5/bc5ce1d797911d8f764394d475c08fa0da26cf98fa5319c0e930dda511f2/django-reports-admin-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}