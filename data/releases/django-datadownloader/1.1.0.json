{
  "info": {
    "author": "Philippe Lafaye",
    "author_email": "lafaye@emencia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=====================\ndjango-datadownloader\n=====================\n\nDescription\n***********\n\nThis django app is an app tool that add an admin interface to manage archives\nof database's json dumps and/or media datas.\n\nPackages can be download with\n`django-sendfile <https://pypi.python.org/pypi/django-sendfile>`_.\n\nInstall\n*******\n\nYou can retrieve it via pip: ::\n\n    pip install django-datadownloader\n\nUsage\n*****\n\nYou need to add two libraries in your ``INSTALLED_APPS``: ::\n\n    INSTALLED_APPS = (\n        ...\n        'drdump',\n        'datadownloader',\n        ...\n    )\n\nAdd this to your URLs: ::\n\n    urlpatterns = [\n        ...\n        url(r'^admin/datadownloader/', include('datadownloader.urls')),\n        ...\n    ]\n\nYou can add a few options: ::\n\n    DATA_DOWNLOADER_PATH = join(VAR_PATH, 'protected_medias/datas')\n    DRDUMP_OTHER_APPS = True\n    DRDUMP_MAP_FILE = join(BASE_DIR, 'drdump.json')\n    DRDUMP_EXCLUDE_APPS = ['auth', 'sessions', 'contenttypes']\n\nSee DrDump documentation for more: https://github.com/emencia/dr-dump\n\nLinks\n*****\n\n* Pypi page: https://pypi.python.org/pypi/django-datadownloader\n* Github page: https://github.com/emencia/django-datadownloader\n\n\nRunning tests\n*************\n\nTo run the tests, run the django test management command with the settings\nfound inside ``datadownloader.tests.settings``: ::\n\n    $ django-admin test --pythonpath=. --settings=datadownloader.tests.settings\n\nYou must install mock if you run python2 or python < 3.4.\n\nChangelog\n=========\n\n1.1.0 - 2021/06/08\n------------------\n\nPackage now depends on \"six\" instead of using the deprecated embedded \"six\" module from\nDjango which are not available anymore since Django 3.0.\n\n1.x will be the last serie to support Python 2 and Django<2.2 versions, new serie 2.x\nwill only support recent Python3 and Django versions.\n\nAlso did some cleaning in package setup and dependancies to fit to supported versions:\n\n* six\n* django>=1.8\n* dr-dump>=1.1.0\n* django-sendfile>=0.3.11\n\n\n1.0.0 - 2018/09/26\n------------------\n\nRewrite version.\n\nPreviously only release on a private package mirror, it have been release publicy to\nofficial Pypi on 2021/06/07.\n\n0.2.2\n-----\n\n* add some information into main page\n* fix bug in uwsgi execution env\n\n0.2.1\n-----\n\n* Forgot to update MANIFEST.in on 0.2.0 release\n\n0.2.0\n-----\n\n* Refactoring code\n* Adding tests\n\n0.1.1\n-----\n\n* Use rst syntax for doc/descriptions rather markdown.\n\n0.1.0\n-----\n\n* First version.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/django-datadownloader",
    "keywords": "",
    "license": "GNU Affero General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-datadownloader",
    "package_url": "https://pypi.org/project/django-datadownloader/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-datadownloader/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/django-datadownloader"
    },
    "release_url": "https://pypi.org/project/django-datadownloader/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Admin interface to manage archives of db's json dumps and/or media datas",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13195306,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "004e81c74af82af55dded3c0d87c542036e69afd4f6653a09bc0440fa7228544",
        "md5": "6706bdb21fff152d0d4e32458681ccf1",
        "sha256": "30318f70b7caf7eba2abb16c33b5b1e8d1f8e3690fcaf8c6c4a926b4a7f6a8ae"
      },
      "downloads": -1,
      "filename": "django-datadownloader-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6706bdb21fff152d0d4e32458681ccf1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19835,
      "upload_time": "2021-06-08T00:33:55",
      "upload_time_iso_8601": "2021-06-08T00:33:55.297205Z",
      "url": "https://files.pythonhosted.org/packages/00/4e/81c74af82af55dded3c0d87c542036e69afd4f6653a09bc0440fa7228544/django-datadownloader-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}