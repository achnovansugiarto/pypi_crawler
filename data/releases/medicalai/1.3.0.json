{
  "info": {
    "author": "Vinayaka Jyothi - For AiBharata",
    "author_email": "contact@aibharata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<p align=\"center\">\r\n  <a href=\"https://aibharata.github.io/medicalAI/\"><img src=\"https://raw.githubusercontent.com/aibharata/medicalAI/master/logo/logo.png\" alt=\"MedicalAI\"></a>\r\n</p>\r\n<p align=\"center\">\r\n    <em>Medical-AI is a AI framework for rapid protyping for Medical Applications</em>\r\n</p>\r\n\r\n\r\n---\r\n\r\n**Documentation**: <a href=\"https://aibharata.github.io/medicalAI/\" target=\"_blank\">https://aibharata.github.io/medicalAI/</a>\r\n\r\n**Source Code**: <a href=\"https://github.com/aibharata/medicalai\" target=\"_blank\">https://github.com/aibharata/medicalai</a>\r\n\r\n**Youtube Tutorial**: <a href=\"https://www.youtube.com/V4nCX-kLACg\" target=\"_blank\">https://www.youtube.com/V4nCX-kLACg</a>\r\n\r\n---\r\n\r\n\r\n[![Downloads](https://pepy.tech/badge/medicalai)](https://pepy.tech/project/medicalai) [![Downloads](https://pepy.tech/badge/medicalai/month)](https://pepy.tech/project/medicalai/month) [![Documentation Status](https://readthedocs.org/projects/medicalai/badge/?version=latest)](https://medicalai.readthedocs.io/en/latest/?badge=latest) [![Gitter](https://badges.gitter.im/aibh-medicalAI/devteam.svg)](https://gitter.im/aibh-medicalAI/devteam?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) \r\n\r\n\r\nMedical-AI is a AI framework  for rapid prototyping of AI for Medical Applications.\r\n\r\n## Installation\r\n\r\n<div class=\"termy\">\r\n\r\n```py\r\npip install medicalai\r\n```\r\n\r\n</div>\r\n## Requirements\r\nPython Version : 3.5-3.7 (Doesn't Work on 3.8 Since Tensorflow does not support 3.8 yet.\r\n\r\nDependencies: Numpy, Tensorflow, Seaborn, Matplotlib, Pandas\r\n\r\n    NOTE: Dependency libraries are automatically installed. No need for user to install them manually.\r\n\r\n## Usage\r\n### Getting Started Tutorial: Google Colab [Google Colab Notebook Link](https://colab.research.google.com/drive/1Wma4i5f11oyYrrkz0Y-3FOyPGmIpwKdD)\r\n\r\n### Importing the Library\r\n```py \r\nimport medicalai as ai\r\n```\r\n\r\n## Using Templates\r\nYou can use the following templates to perform specific Tasks\r\n\r\n### Load Dataset From Folder\r\nSet the path of the dataset and set the target dimension of image that will be input to AI network.\r\n```py \r\ntrainSet,testSet,labelNames =ai.datasetFromFolder(datasetFolderPath, targetDim = (96,96)).load_dataset()\r\n```\r\n    - trainSet contains 'data' and 'labels' accessible by trainSet.data and trainSet.labels\r\n    - testSet contains 'data' and 'labels' accessible by testSet.data and testSet.labels\r\n    - labelNames contains class names/labels\r\n\r\n### Check Loaded Dataset Size\r\n```py \r\nprint(trainSet.data.shape)\r\nprint(trainSet.labels.shape)\r\n```\r\n\r\n### Run Training and Save Model\r\n```py\r\ntrainer = ai.TRAIN_ENGINE()\r\ntrainer.train_and_save_model(AI_NAME= 'tinyMedNet', MODEL_SAVE_NAME='PATH_WHERE_MODEL_IS_SAVED_TO', trainSet, testSet, OUTPUT_CLASSES, RETRAIN_MODEL= True, BATCH_SIZE= 32, EPOCHS= 10, LEARNING_RATE= 0.001)\r\n```\r\n\r\n\r\n### Plot Training Loss and Accuracy\r\n```py\r\ntrainer.plot_train_acc_loss()\r\n```\r\n\r\n### Generate a comprehensive evaluation PDF report \r\n```py\r\ntrainer.generate_evaluation_report()\r\n```\r\nPDF report will be generated with model sensitivity, specificity, accuracy, confidence intervals,\r\nROC Curve Plot, Precision Recall Curve Plot, and Confusion Matrix Plot for each class.\r\nThis function can be used when evaluating a model with Test or Validation Data Set.\r\n\r\n### Explain the Model on a sample\r\n```py\r\ntrainer.explain(testSet.data[0:1], layer_to_explain='CNN3')\r\n```\r\n\r\n\r\n### Loading Model for Prediction \r\n```py\r\ninfEngine = ai.INFERENCE_ENGINE(modelName = 'PATH_WHERE_MODEL_IS_SAVED_TO')\r\n```\r\n\r\n\r\n### Predict With Labels \r\n```py\r\ninfEngine.predict_with_labels(testSet.data[0:2], top_preds=3)\r\n```\r\n### Get Just Values of Prediction without postprocessing\r\n```py\r\ninfEngine.predict(testSet.data[0:2])\r\n```\r\n\r\n### Alternatively, use a faster prediction method in production\r\n```py\r\ninfEngine.predict_pipeline(testSet.data[0:1])\r\n```\r\n## Advanced Usage\r\n\r\n### Code snippet for Training Using Medical-AI \r\n```py\r\n## Setup AI Model Manager with required AI. \r\nmodel = ai.modelManager(AI_NAME= AI_NAME, modelName = MODEL_SAVE_NAME, x_train = train_data, OUTPUT_CLASSES = OUTPUT_CLASSES, RETRAIN_MODEL= RETRAIN_MODEL)\r\n\r\n# Start Training\r\nresult = ai.train(model, train_data, train_labels, BATCH_SIZE, EPOCHS, LEARNING_RATE, validation_data=(test_data, test_labels), callbacks=['tensorboard'])\r\n\r\n# Evaluate Trained Model on Test Data\r\nmodel.evaluate(test_data, test_labels)\r\n\r\n# Plot Accuracy vs Loss for Training\r\nai.plot_training_metrics(result)\r\n\r\n#Save the Trained Model\r\nai.save_model_and_weights(model, outputName= MODEL_SAVE_NAME)\r\n```\r\n\r\n## Automated Tests\r\nTo Check the tests\r\n\r\n        pytest\r\n\r\nTo See Output of Print Statements\r\n\r\n        pytest -s \r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/aibharata/medicalAI/archive/v1.2.8-rc.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aibharata/medicalAI",
    "keywords": "AI Framework,Medical AI,Tensorflow,radiology AI",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "medicalai",
    "package_url": "https://pypi.org/project/medicalai/",
    "platform": null,
    "project_url": "https://pypi.org/project/medicalai/",
    "project_urls": {
      "Download": "https://github.com/aibharata/medicalAI/archive/v1.2.8-rc.zip",
      "Homepage": "https://github.com/aibharata/medicalAI"
    },
    "release_url": "https://pypi.org/project/medicalai/1.3.0/",
    "requires_dist": [
      "pandas",
      "tf-explain",
      "numpy",
      "pillow",
      "tqdm",
      "cmapy",
      "albumentations",
      "matplotlib",
      "seaborn",
      "sklearn",
      "pydicom",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.5, <3.9",
    "summary": "Medical-AI is a AI framework specifically for Medical Applications",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16009272,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4161c7dd5c1f4951f46a900f38b86555e538a60506f0514d8aa73ca9403e660a",
        "md5": "cf94c52e72825e2beb4f05c63411ec04",
        "sha256": "00c0e5abc32bf560651569f767ebd5b6b2764d93d2bd14a9a53d1adceee76e78"
      },
      "downloads": -1,
      "filename": "medicalai-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf94c52e72825e2beb4f05c63411ec04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <3.9",
      "size": 67464,
      "upload_time": "2022-12-06T14:50:36",
      "upload_time_iso_8601": "2022-12-06T14:50:36.111515Z",
      "url": "https://files.pythonhosted.org/packages/41/61/c7dd5c1f4951f46a900f38b86555e538a60506f0514d8aa73ca9403e660a/medicalai-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae078ac6df0fe6f392d1482c790eba3910447c787ce561de719edd7997fae577",
        "md5": "1328c51dd3378e512673c91c4ee35ff2",
        "sha256": "00a1081367558fa18bb0b4ef7576d5f8c30ab981eb8bc47a6c8505eae1237480"
      },
      "downloads": -1,
      "filename": "medicalai-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1328c51dd3378e512673c91c4ee35ff2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <3.9",
      "size": 48136,
      "upload_time": "2022-12-06T14:50:38",
      "upload_time_iso_8601": "2022-12-06T14:50:38.527986Z",
      "url": "https://files.pythonhosted.org/packages/ae/07/8ac6df0fe6f392d1482c790eba3910447c787ce561de719edd7997fae577/medicalai-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}