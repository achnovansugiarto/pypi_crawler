{
  "info": {
    "author": "Rui Pereira",
    "author_email": "r4g3baby@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# money-lib\n\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/r4g3baby/money-lib/Test)\n![PyPI - Version](https://img.shields.io/pypi/v/money-lib.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/money-lib.svg)\n![PyPI - License](https://img.shields.io/pypi/l/money-lib.svg)\n\nPython 3 money lib with decimal precision and currency exchange support.\n\n## Installation\n\nInstall the latest release with:\n```\npip install money-lib\n```\n\n## Usage\n\nA Currency object can be created with a *currency_code* (must be a string and valid ISO 4217 format: `^[A-Z]{3}$`).\n\n```python\n>>> from money import Currency\n>>> currency = Currency('USD')\n>>> currency\nCurrency('USD')\n```\n\nA Money object can be created with an *amount* (can be any valid value in `decimal.Decimal(value)`) and a *currency* (can be a string or a `Currency(code)` object).\n\n```python\n>>> from money import Money\n>>> money = Money('7.37', 'USD')\n>>> money\nMoney(Decimal('7.37'), 'USD')\n```\n\nMoney objects are immutable by convention and hashable. Once created, you can use read-only properties *amount* (decimal.Decimal) and *currency* (Currency) to access its internal components.\nThe *amount* property returns the amount rounded to the correct number of decimal places for the currency.\n\n```python\n>>> money = Money('6.831', 'USD')\n>>> money.amount\nDecimal('6.83')\n>>> money.currency\nCurrency('USD')\n```\n\nMoney can apply most arithmetic and comparison operators between money objects, integers (int) and decimal numbers (decimal.Decimal).\n\n```python\n>>> money = Money('5', 'USD')\n>>> money / 2\nMoney(Decimal('2.5'), 'USD')\n>>> money + Money('10', 'USD')\nMoney(Decimal('15'), 'USD')\n```\n\nAll comparison and arithmetic operators support automatic currency conversion as long as you have a [currency exchange backend](#currency-exchange) setup.\nThe currency of the leftmost object has priority.\n\n```python\n# Assuming the rate from USD to EUR is 2\n>>> money = Money('7.50', 'USD')\n>>> money + Money('5', 'EUR')\nMoney(Decimal('10.00'), 'USD')\n```\n\nMoney supports formatting for different locales.\n```python\n>>> money = Money('13.65', 'USD')\n>>> money.format()\n'$13.65'\n>>> money.format('pt_PT')\n'13,65 US$'\n```\n\n## Currency exchange\n\nCurrency exchange works by setting a backend class that implements the abstract base class `money.exchange.BaseBackend`.\nIts API is exposed through `money.xrates`, along with `xrates.backend` and `xrates.backend_name`.\n\nA simple proof-of-concept backend `money.exchange.SimpleBackend` is included.\n\n```python\n>>> from decimal import Decimal\n>>> from money import Money, xrates\n\n>>> xrates.backend = 'money.exchange.SimpleBackend'\n>>> xrates.base = 'USD'\n>>> xrates.setrate('AAA', Decimal('2'))\n>>> xrates.setrate('BBB', Decimal('8'))\n\n>>> a = Money('1', 'AAA')\n>>> b = Money('1', 'BBB')\n\n>>> assert a.to('BBB') == Money('4', 'BBB')\n>>> assert b.to('AAA') == Money('0.25', 'AAA')\n>>> assert a + b == Money('1.25', 'AAA')\n```\n\n## Django integration\n\nModel fields usage:\n\n```python\n>>> from django.db import models\n>>> from money import Money\n>>> from money.django.fields import MoneyField\n\n>>> class Product(models.Model):\n...     price = MoneyField(max_digits=19, decimal_places=4, default=Money('10', 'USD'))\n```\n\nModel queries usage:\n\n```python\n# MoneyField creates another field (MoneyField name + '_currency') to store the currency\n>>> Product.objects.create(price=Money('10', 'USD'))\n>>> Product.objects.create(price='10', price_currency='USD')\n\n# Get all products where price is greater than 4 and the currency equals 'USD'\n>>> product = Product.objects.filter(price__gt=4, price_currency='USD').first()\n>>> product.price\nMoney(Decimal('10.0000'), 'USD')\n```\n\n## Credits\n\nCurrency exchange support based on [carlospalol/money](https://github.com/carlospalol/money/blob/master/money/exchange.py).\n\nDjango model field with multiple database columns by [miracle2k](https://blog.elsdoerfer.name/2008/01/08/fuzzydates-or-one-django-model-field-multiple-database-columns/).\n\nCurrency data and formatting is powered by [Babel](https://github.com/python-babel/babel).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/r4g3baby/money-lib",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "money-lib",
    "package_url": "https://pypi.org/project/money-lib/",
    "platform": "",
    "project_url": "https://pypi.org/project/money-lib/",
    "project_urls": {
      "Homepage": "https://github.com/r4g3baby/money-lib"
    },
    "release_url": "https://pypi.org/project/money-lib/3.0.0/",
    "requires_dist": [
      "Babel (>=2.5.0)",
      "Django (>=2.2) ; extra == 'django'"
    ],
    "requires_python": ">=3",
    "summary": "Python 3 money lib with decimal precision and currency exchange support.",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8528422,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5613324ac55b02342bf13986fc2ef369ed42dcee88a2c4a27213f3c4be6651f",
        "md5": "3fd73b172f7ef1a3155c83d7991fe817",
        "sha256": "c723ea7628bee3d01ac33fad3c710b3dbf6b439963a4c040fae1b01923e634c1"
      },
      "downloads": -1,
      "filename": "money_lib-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3fd73b172f7ef1a3155c83d7991fe817",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 9553,
      "upload_time": "2020-10-08T13:43:58",
      "upload_time_iso_8601": "2020-10-08T13:43:58.477488Z",
      "url": "https://files.pythonhosted.org/packages/e5/61/3324ac55b02342bf13986fc2ef369ed42dcee88a2c4a27213f3c4be6651f/money_lib-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ef598d476d643bb096939d5704ef79b32b095a0a861a21561dee634db066f30",
        "md5": "0017c62436dd28d9efa152801213f369",
        "sha256": "75b63d46e3a855cffb104fd3d52ab9bfc2554632e77d007c28fb6dcd8c3f5ede"
      },
      "downloads": -1,
      "filename": "money-lib-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0017c62436dd28d9efa152801213f369",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 8917,
      "upload_time": "2020-10-08T13:44:00",
      "upload_time_iso_8601": "2020-10-08T13:44:00.094779Z",
      "url": "https://files.pythonhosted.org/packages/5e/f5/98d476d643bb096939d5704ef79b32b095a0a861a21561dee634db066f30/money-lib-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}