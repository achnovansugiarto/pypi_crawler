{
  "info": {
    "author": "Rui Pereira",
    "author_email": "r4g3baby@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# money-lib\n\n![PyPI - Version](https://img.shields.io/pypi/v/money-lib.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/money-lib.svg)\n![PyPI - License](https://img.shields.io/pypi/l/money-lib.svg)\n\nPython 3 money lib with decimal precision and currency exchange support.\n\n## Installation\n\nInstall the latest release with:\n```\npip install money-lib\n```\n\n## Usage\n\nA Currency object can be created with a *currency_code* (must be a string and valid ISO 4217 format: `^[A-Z]{3}$`).\n\n```python\n>>> from money.currency import Currency\n>>> currency = Currency('USD')\n>>> currency\nUSD\n```\n\nA Money object can be created with an *amount* (can be any valid value in `decimal.Decimal(value)`) and a *currency* (can be a string or a `Currency(code)` object).\n\n```python\n>>> from money.money import Money\n>>> money = Money('7.37', 'USD')\n>>> money\nUSD 7.37\n```\n\nMoney objects are immutable by convention and hashable. Once created, you can use read-only properties *real* (decimal.Decimal), *amount* (decimal.Decimal) and *currency* (Currency) to access its internal components.\nThe *real* property returns the stored amount used for calculations and *amount* returns the amount rounded to the correct number of decimal places for the currency.\n\n```python\n>>> money = Money('6.831', 'USD')\n>>> money.real\nDecimal('6.831')\n>>> money.amount\nDecimal('6.83')\n>>> money.currency\nUSD\n```\n\nMoney emulates a numeric type and you can apply most arithmetic and comparison operators between money objects, integers (int) and decimal numbers (decimal.Decimal).\n\n```python\n>>> money = Money('5', 'USD')\n>>> money / 2\nUSD 2.50\n>>> money + Money('10', 'USD')\nUSD 15.00\n```\n\nAll arithmetic operators support automatic currency conversion as long as you have a [currency exchange backend](#currency-exchange) setup.\nThe currency of the leftmost object has priority.\n\n```python\n# Assuming the rate from USD to EUR is 2\n>>> money = Money('7.50', 'USD')\n>>> money + Money('5', 'EUR')\nUSD 10.00\n```\n\n## Currency exchange\n\nCurrency exchange works by setting a backend class that implements the abstract base class `money.exchange.BaseBackend`.\nIts API is exposed through `money.xrates`, along with `xrates.backend` and `xrates.backend_name`.\n\nA simple proof-of-concept backend `money.exchange.SimpleBackend` is included.\n\n```python\nfrom decimal import Decimal\nfrom money.money import Money, xrates\n\nxrates.backend = 'money.exchange.SimpleBackend'\nxrates.base = 'USD'\nxrates.setrate('AAA', Decimal('2'))\nxrates.setrate('BBB', Decimal('8'))\n\na = Money(1, 'AAA')\nb = Money(1, 'BBB')\n\nassert a.to('BBB') == Money('4', 'BBB')\nassert b.to('AAA') == Money('0.25', 'AAA')\nassert a + b == Money('1.25', 'AAA')\n```\n\n## Credits\n\nMost of the code is based of https://github.com/carlospalol/money.\n\nCurrency data and formatting is powered by [Babel](http://babel.pocoo.org).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/R4G3_BABY/money-lib",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "money-lib",
    "package_url": "https://pypi.org/project/money-lib/",
    "platform": "",
    "project_url": "https://pypi.org/project/money-lib/",
    "project_urls": {
      "Homepage": "https://gitlab.com/R4G3_BABY/money-lib"
    },
    "release_url": "https://pypi.org/project/money-lib/1.1.0/",
    "requires_dist": [
      "Babel (>=2.5.0)"
    ],
    "requires_python": ">=3",
    "summary": "Python 3 money lib with decimal precision and currency exchange support.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8528422,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7512e6dfbda46ae6c30cc9889419be034d9408e8fe6a9445e2b7ed2038edf52b",
        "md5": "df4e3ba183695435de2ac2f1652fe0e0",
        "sha256": "f81356bae6f2bf476734e2abce8aa33f31d0aa653b1a3fafea423f7d900ec6dd"
      },
      "downloads": -1,
      "filename": "money_lib-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df4e3ba183695435de2ac2f1652fe0e0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 6161,
      "upload_time": "2018-08-10T22:16:12",
      "upload_time_iso_8601": "2018-08-10T22:16:12.813708Z",
      "url": "https://files.pythonhosted.org/packages/75/12/e6dfbda46ae6c30cc9889419be034d9408e8fe6a9445e2b7ed2038edf52b/money_lib-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a434d0343644bbcf45c6df7ea5c541c9ce92d8181ac32c3dfd0a9b2f6e548abf",
        "md5": "2ed563cfcac65f2f867f8ad2f9960246",
        "sha256": "ba1c918094e1a03ccc68a96dbf5ab8079ecca8bfd2ed152eec968999a81d6271"
      },
      "downloads": -1,
      "filename": "money-lib-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2ed563cfcac65f2f867f8ad2f9960246",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 5062,
      "upload_time": "2018-08-10T22:16:14",
      "upload_time_iso_8601": "2018-08-10T22:16:14.046421Z",
      "url": "https://files.pythonhosted.org/packages/a4/34/d0343644bbcf45c6df7ea5c541c9ce92d8181ac32c3dfd0a9b2f6e548abf/money-lib-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}