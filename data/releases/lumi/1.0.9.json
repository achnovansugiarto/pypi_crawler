{
  "info": {
    "author": "Tanmoy Sarkar",
    "author_email": "ts741127@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Lumi 💧 <a href=\"https://hits.seeyoufarm.com\"><img src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FTanmoy741127%2Flumi&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false\"/></a>\n\n<img align=\"right\" src=\"https://raw.githubusercontent.com/Tanmoy741127/cdn/main/lumi/lumi-logo.png\" height=\"100px\"/>\n\nLumi is a nano framework to convert your python functions into a REST API without any extra headache.\n\n* This library is created by taking the concept of **RPC** and blended with **REST API** specs. \n* We need to just register the function and it will be available as a REST API. \n* Web-server written with **Gunicorn**\n* Local development server provided for rapid development and prototyping.\n\n## Installation\n\n```bash\npip install lumi\n```\n\n## Function <--> API mapping\n![function - API mapping](https://raw.githubusercontent.com/Tanmoy741127/cdn/main/lumi/function-api-map.png)\n\n\n## How to use 🤔\n\nLet's create a simple function to add two numbers.\n\n```python\ndef add(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n```\n\nNow, we want to expose this function as a REST API. We can do this by registering the function with Lumi.\n\n```python\n# app.py\n\nfrom lumi import Lumi\n\napp = Lumi()\n\napp.register(add) # Registering the function\napp.register(subtract)\n\napp.runServer(host=\"127.0.0.1\", port=8080)\n```\n\nNoice 🎉🎉  API has been generated\n\nRun the sever by\n```\npython app.py\n```\nYou are going to see this in your terminal \n```\n[2022-11-24 17:32:08 +0530] [10490] [INFO] Starting gunicorn 20.1.0\n[2022-11-24 17:32:08 +0530] [10490] [INFO] Listening at: http://127.0.0.1:8080 (10490)\n[2022-11-24 17:32:08 +0530] [10490] [INFO] Using worker: sync\n[2022-11-24 17:32:08 +0530] [10492] [INFO] Booting worker with pid: 10492\n...\n...\n[2022-11-24 17:32:08 +0530] [10500] [INFO] Booting worker with pid: 10500\n```\n\nCongratulations 👏. Our Server is online. \n\n\nThe above code will generate a REST API with the following details.\n\n- Endpoint : `127.0.0.1:8080`\n- Route : `/add`\n- Method : `POST`\n- Sample Request Body : `{\"a\": 1, \"b\": 2}`\n\nLet's run the API and test it.\n\n```curl\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"a\": 1, \"b\": 2}' http://127.0.0.1:8080/add\n```\n\nOutput\n\n```json\n{\n    \"exit_code\": 0, \n    \"status_code\": 200, \n    \"result\": 3, \n    \"error\": \"\"\n}\n```\n\n## Custom Routing\nNow you may think, the function name will be always same as the route. But, you can change the route by passing the route parameter.\n\n```python\napp.register(add, route=\"/addition\")\n```\n## Custom Request Method\nBy default, the request method is `POST`. But, you can change it by passing the method parameter. Currently, it supports `POST`, `PUT` and `PATCH` methods.\n\n```python\nfrom lumi import Lumi, RequestMethod\n\napp = Lumi()\n\ndef add(a, b):\n    return a+b\n\n\napp.register(add, request_method=RequestMethod.PUT) # Register function for PUT method\napp.register(add, request_method=RequestMethod.PATCH) # Register function for PATCH method\n\napp.runServer()\n```\n\n## Status Codes\n\n| Status Code | Description |\n| --- | --- |\n| 200 | Request successfully executed and No Error happened during function execution |\n| 500 | Request was received but there was an error during function execution |\n| 400 | Bad Request (Possible Reason - The required parameters for the function has not provided) |\n| 405 | Method Not Allowed (Lumi only supports **POST** request) |\n| 404 | The route has no function associated with that |\n\n\n## Exit Codes\n| Exit Code | Description |\n| --- | --- |\n| 0 | No Error |\n| 1 | Error |\n\n> Note : If the function has some error , you can expect the exit code to be 1 and the error message in the response.\n\n## Task Lists\n- [x] Base System\n- [x] Add support for default parameters that is provided in the function\n- [ ] Make available GET request for the function\n- [x] Provide option to override POST with PUT if the user wants\n- [ ] Add support to send file directly to user\n- [ ] Add support to serve files through a public folder [Customizable]\n- [ ] Add suport for middleware integration\n- [ ] Support nested routing of urls\n- [ ] For local development, create an file observer that can automatically reload the server when the file is changed.\n- [ ] Add support for object serialization and deserialization based on argument types of function\n\n## Contributing\n\nContributions are always welcome!\n## Our community\n\n<!-- readme: contributors -start -->\n<table>\n<tr>\n    <td align=\"center\">\n        <a href=\"https://github.com/Tanmoy741127\">\n            <img src=\"https://avatars.githubusercontent.com/u/57363826?v=4\" width=\"100;\" alt=\"Tanmoy741127\"/>\n            <br />\n            <sub><b>Tanmoy Sarkar</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/AmirMGhanem\">\n            <img src=\"https://avatars.githubusercontent.com/u/55459991?v=4\" width=\"100;\" alt=\"AmirMGhanem\"/>\n            <br />\n            <sub><b>Amir M. Ghanem</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/matheusfelipeog\">\n            <img src=\"https://avatars.githubusercontent.com/u/50463866?v=4\" width=\"100;\" alt=\"matheusfelipeog\"/>\n            <br />\n            <sub><b>Matheus Felipe</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/0xflotus\">\n            <img src=\"https://avatars.githubusercontent.com/u/26602940?v=4\" width=\"100;\" alt=\"0xflotus\"/>\n            <br />\n            <sub><b>0xflotus</b></sub>\n        </a>\n    </td></tr>\n</table>\n<!-- readme: contributors -end -->\n\n## Support\n<a href=\"https://www.buymeacoffee.com/tanmoysarkar\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" alt=\"Buy Me A Coffee\" style=\"height: 60px !important;width: 217px !important;\" ></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tanmoy741127/lumi",
    "keywords": "rpc rest api web backend framework",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumi",
    "package_url": "https://pypi.org/project/lumi/",
    "platform": null,
    "project_url": "https://pypi.org/project/lumi/",
    "project_urls": {
      "Homepage": "https://github.com/Tanmoy741127/lumi"
    },
    "release_url": "https://pypi.org/project/lumi/1.0.9/",
    "requires_dist": [
      "nanoid (==2.0.0)",
      "waitress (==2.1.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Convert your Python functions into REST API without any extra effort 🔥",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16183087,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf1edd932d0dc9bd8c6d06448f698e3b53b6b6c54681a3bb2f6b488fe2d7ea7b",
        "md5": "04bf480324f61dd5a0e5347e9297c56b",
        "sha256": "3e39e96260b6eaa167c5dff13e371707e73d16e336175379628f3dbecc4bee5c"
      },
      "downloads": -1,
      "filename": "lumi-1.0.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04bf480324f61dd5a0e5347e9297c56b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 7737,
      "upload_time": "2022-12-16T02:40:28",
      "upload_time_iso_8601": "2022-12-16T02:40:28.021179Z",
      "url": "https://files.pythonhosted.org/packages/bf/1e/dd932d0dc9bd8c6d06448f698e3b53b6b6c54681a3bb2f6b488fe2d7ea7b/lumi-1.0.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fae727fcc24c0836641ffcb041f12be6521b4a25bb86f80688744d93ec27d0bf",
        "md5": "28305f380f71c77ac9e925937663b42a",
        "sha256": "0fdfb64ae8ca85d1da4538389695feb37145ef5a7ffe206da61ad2b3a6a9dca8"
      },
      "downloads": -1,
      "filename": "lumi-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "28305f380f71c77ac9e925937663b42a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7563,
      "upload_time": "2022-12-16T02:40:30",
      "upload_time_iso_8601": "2022-12-16T02:40:30.639712Z",
      "url": "https://files.pythonhosted.org/packages/fa/e7/27fcc24c0836641ffcb041f12be6521b4a25bb86f80688744d93ec27d0bf/lumi-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}