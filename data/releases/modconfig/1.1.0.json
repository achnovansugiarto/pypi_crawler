{
  "info": {
    "author": "Kirill Klenov",
    "author_email": "horneds@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "modconfig\n#########\n\n.. _description:\n\n**modconfig** -- Simple hierarchic configuration manager for apps\n\n.. _badges:\n\n.. image:: https://github.com/klen/modconfig/workflows/tests/badge.svg\n    :target: https://github.com/klen/modconfig/actions\n    :alt: Tests Status\n\n.. image:: https://img.shields.io/pypi/v/modconfig\n    :target: https://pypi.org/project/modconfig/\n    :alt: PYPI Version\n\n.. _motivation:\n\nMotivation\n==========\n\nApplications (especially web services) often require certain configuration\noptions to depend on the environment an application runs in (development,\ntesting, production, etc.). For instance, a database address config option may\ndefault to a local database server during development, a mock database server\nduring testing, and yet another database server during production. It may also\nneed to be customizable via an environment variable. `modconfig` approaches\nscenarios like this and, allows to specify default configuration options for\nvarious environments and optionally override them by custom environment\nvariables.\n\n`modconfig` uses python modules for keep the configuration options. You are\nnot locked by format (json, yaml, ini) restrictions and able to use any python\nstatements/modules to tune your configuration as a pro. It keeps the\nflexability and make your configuration very declarative without any magic.\n\n.. _contents:\n\n.. contents::\n\n.. _requirements:\n\nRequirements\n=============\n\n- python >= 3.6\n\n.. _installation:\n\nInstallation\n=============\n\n**modconfig** should be installed using pip: ::\n\n    pip install modconfig\n\n.. _usage:\n\nUsage\n=====\n\nFor example you have the structure in your app:\n\n.. code::\n\n   |- myapp/\n   |  |- __init__.py\n   |  |- config/\n   |  |  |- __init__.py\n   |  |  |- defaults.py\n   |  |  |- production.py\n   |  |  |- stage.py\n   |  |  |- tests.py\n   |  | ...\n\nSee https://github.com/klen/modconfig/tree/develop/example as a simple reference.\n\nInitialize the config in your app and use it anywhere:\n\n.. code:: python\n\n   from modconfig import Config\n\n   cfg = Config('myapp.config.production', ANY_OPTION1=\"VALUE\", ANY_OPTION2=\"VALUE\")  # instead an import path it could be the module itself\n\n   assert cfg.DATABASE\n   assert cfg.ANY_OPTION1\n\n\nFallbacks\n---------\n\nIf you provide a several modules, `modconfig` will be using the first available:\n\n.. code:: python\n\n   from modconfig import Config\n\n   cfg = Config('myapp.config.local', 'myapp.config.production', ANY_OPTION1=\"VALUE\")\n\n   assert cfg.DATABASE\n   assert cfg.ANY_OPTION1\n\n\nEnviroments\n-----------\n\nThe module path may be set as ENV variable:\n\n.. code:: python\n\n   import os\n   from modconfig import Config\n\n   # Let's define an env var\n   os.environ['MODCONFIG'] = 'myapp.config.production'\n\n   cfg = Config('env:MODCONFIG', 'myapp.config.local')\n   assert cfg.DATABASE\n\n\nCustom Environment Variables\n----------------------------\n\nAny option may be redifened with ENV variables. By default the `modconfig`\ntries to parse value as a JSON which allows us to set complex values (dict,\nlist, etc). If value is not JSON it would be parsed as str.\n\nAny ENV variables which names are not contained in source module would be\nignored.\n\nSee https://github.com/klen/modconfig/tree/develop/tests.py for more examples.\n\n.. _bugtracker:\n\nBug tracker\n===========\n\nIf you have any suggestions, bug reports or\nannoyances please report them to the issue tracker\nat https://github.com/klen/modconfig/issues\n\n.. _contributing:\n\nContributing\n============\n\nDevelopment of the project happens at: https://github.com/klen/modconfig\n\n.. _license:\n\nLicense\n========\n\nLicensed under a `MIT license`_.\n\n\n.. _links:\n\n\n.. _klen: https://github.com/klen\n\n.. _MIT license: http://opensource.org/licenses/MIT\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/klen/modconfig",
    "keywords": "settings,configuration",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modconfig",
    "package_url": "https://pypi.org/project/modconfig/",
    "platform": "",
    "project_url": "https://pypi.org/project/modconfig/",
    "project_urls": {
      "Documentation": "https://github.com/klen/modconfig",
      "Homepage": "https://github.com/klen/modconfig",
      "Issue tracker": "https://github.com/klen/modconfig/issues",
      "Source code": "https://github.com/klen/modconfig"
    },
    "release_url": "https://pypi.org/project/modconfig/1.1.0/",
    "requires_dist": [
      "pytest ; extra == 'tests'",
      "pytest-mypy ; extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "Simple hierarchic configuration manager for apps",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13734215,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "184c1a6dddfa57302be90d1fbedd90c39773a951de6b7012d47fcc2cf5843375",
        "md5": "e5d8cc87d127266b246791196bc75a02",
        "sha256": "3ba38e98325f84db98f14c3aeb09b3f95b686cfb77b19d2740c79ff83db74aa5"
      },
      "downloads": -1,
      "filename": "modconfig-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5d8cc87d127266b246791196bc75a02",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5519,
      "upload_time": "2021-05-22T17:15:22",
      "upload_time_iso_8601": "2021-05-22T17:15:22.714238Z",
      "url": "https://files.pythonhosted.org/packages/18/4c/1a6dddfa57302be90d1fbedd90c39773a951de6b7012d47fcc2cf5843375/modconfig-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bf79d7e0e1610004011bd2727fcc29710946e0ae41f7e3002ab170bc1283357",
        "md5": "a016abbcb6b182ad24666d60549b7159",
        "sha256": "8fb184f5e652e7245bc0151fe19fddeb5d47c2b0f8cf3e16c7368785a99d9818"
      },
      "downloads": -1,
      "filename": "modconfig-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a016abbcb6b182ad24666d60549b7159",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5709,
      "upload_time": "2021-05-22T17:15:23",
      "upload_time_iso_8601": "2021-05-22T17:15:23.975555Z",
      "url": "https://files.pythonhosted.org/packages/4b/f7/9d7e0e1610004011bd2727fcc29710946e0ae41f7e3002ab170bc1283357/modconfig-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}