{
  "info": {
    "author": "tibOin",
    "author_email": "tiboin@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: System :: Operating System",
      "Topic :: Utilities"
    ],
    "description": "# macos_speech\nEver wanted to leverage the macOS builtin speech synthesis directly into python ? Or just make your code to talk...<br>\nWith the Python macos_speech package you can do it in a pythonic way. Easy and zen.\n\n### Getting Started:\n\n#### Installation\n`pip install macos_speech`\n\nor\n\n```\ngit clone https://github.com/tibOin/macos_speech.git\ncd macos_speech\npip install .\n```\n\n#### Requirements\nmacOS 10.x or for oldest OS X <br>\nFor now, this package only works on Python >= 2.6 and Python >= 3.6.x <br>\nOnly tested on Python 2.7.10 and >= 3.7.2.\n\n#### Basic usage\n```python\nfrom macos_speech import Synthesizer\n\nspeaker = Synthesizer(voice='Alex', device='Built-in')\n\nspeaker.text = \"\"\"How my God! I can make my python code to talk!\n\nAnd I can even send multiple lines! Awesome.\n\"\"\"\n\nspeaker.talk()\n```\n\n#### Some informations\n\n```python\nfrom macos_speech import Synthesizer\n\nspeaker = Synthesizer()\n\nprint '''Voices:\nNAME    LANGUAGE    DESCRIPTION\n'''\nfor voice in speaker.voices:\n  print '{} {} {}'.format(voice.name, voice.lang, voice.desc)\n\nprint ''\n\nprint 'Audio devices:'\nfor device in speaker.devices:\n  print 'ID: {}, NAME: {}'.format(device.id, device.name)\n\nprint ''\n\nprint '''Output file possible formats:\nID    NAME    FILE_EXT    DATA_FORMATS    BIT_RATES\n'''\nfor format in speaker.formats:\n  print '{}Â {} ({}) [{}] [{}]'.format(format.id, format.name,\n                                      ','.join(format.exts),\n                                      ','.join(format.formats),\n                                      ','.join(format.bitrates))\n\n```\n\n#### Synthesizer Properties\n```python\nfrom macos_speech import Synthesizer\n\nsynthe = Synthesizer()\n\n# Helper properties\nsynthe.devices\nsynthe.voices\nsynthe.formats\n\n# Configuration properties\n\n# File IO (takes absolute pathes strings)\nsynthe.infile  # A file containing text to say (mutually exclusive with self.text - high priority)\nsynthe.outfile # The output audio file (default should be 'output.aiff'\n               # but you can specify file and data formats)\n\n# Simple configs (takes strings)\nsynthe.rate    # The speech rate\nsynthe.quality # The audio quality (between 0 and 127 both included)\nsynthe.text    # The text to say (mutually exclusive with self.infile - low priority)\n\n# Pythonified configs (takes macos_speech.CustomClasses)\nsynthe.format  # The audio output file/data format : macos_speech.AudioFormat\n               # (Works only with self.outfile populated)\n\nsynthe.device  # The audio output device           : macos_speech.AudioDevice\n               #                                 (or 'name' or 'id' on Python 3)\n               # (Only used if no self.outfile)\n\nsynthe.voice   # The voice to use                  : macos_speech.Voice\n               #                                   (or 'name' on Python 3)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tibOin/macos_speech/",
    "keywords": "macos,say,speech synthesis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "macos-speech",
    "package_url": "https://pypi.org/project/macos-speech/",
    "platform": "",
    "project_url": "https://pypi.org/project/macos-speech/",
    "project_urls": {
      "Homepage": "https://github.com/tibOin/macos_speech/"
    },
    "release_url": "https://pypi.org/project/macos-speech/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Leverage the macOS `say` command into you scripts",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7469839,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c80ea810a62e74dd488caf4951c1567db64443041ff9f08e384315f1719fccd",
        "md5": "c56c9b3319e7864b707579d589d11fa6",
        "sha256": "43eccb2689d0424752bd079bc524f287c7297a085bd890a26de17f456632129f"
      },
      "downloads": -1,
      "filename": "macos_speech-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c56c9b3319e7864b707579d589d11fa6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5240,
      "upload_time": "2020-06-11T09:17:31",
      "upload_time_iso_8601": "2020-06-11T09:17:31.837869Z",
      "url": "https://files.pythonhosted.org/packages/0c/80/ea810a62e74dd488caf4951c1567db64443041ff9f08e384315f1719fccd/macos_speech-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2e62d99572f43dd61edd8eced5361e3d0c33db3a2f05ebbeb519534a3951f8e",
        "md5": "95cef896790bf141d0e0f1290935b0e2",
        "sha256": "fa7e6c240600ebaef3563aef17a12cfd72b0568c9821283354b8f004f29e69f3"
      },
      "downloads": -1,
      "filename": "macos_speech-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "95cef896790bf141d0e0f1290935b0e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4464,
      "upload_time": "2020-06-11T09:17:33",
      "upload_time_iso_8601": "2020-06-11T09:17:33.065395Z",
      "url": "https://files.pythonhosted.org/packages/a2/e6/2d99572f43dd61edd8eced5361e3d0c33db3a2f05ebbeb519534a3951f8e/macos_speech-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}