{
  "info": {
    "author": "Tim Kuhlman",
    "author_email": "tim.kuhlman@hp.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Topic :: System :: Monitoring"
    ],
    "description": "Team and repository tags\n========================\n\n[![Team and repository tags](https://governance.openstack.org/badges/monasca-notification.svg)](https://governance.openstack.org/reference/tags/index.html)\n\n<!-- Change things from this point on -->\n\n# Notification Engine\n\nThis engine reads alarms from Kafka and then notifies the customer using their configured notification method.\nMultiple notification and retry engines can run in parallel up to one per available Kafka partition.  Zookeeper\nis used to negotiate access to the Kafka partitions whenever a new process joins or leaves the working set.\n\n# Architecture\nThe notification engine generates notifications using the following steps:\n1. Reads Alarms from Kafka, with no auto commit. - KafkaConsumer class\n2. Determine notification type for an alarm. Done by reading from mysql. - AlarmProcessor class\n3. Send Notification. - NotificationProcessor class\n4. Successful notifications are added to a sent notification topic. - NotificationEngine class\n5. Failed notifications are added to a retry topic. - NotificationEngine class\n6. Commit offset to Kafka - KafkaConsumer class\n\nThe notification engine uses three Kafka topics:\n1. alarm_topic: Alarms inbound to the notification engine.\n2. notification_topic: Successfully sent notifications.\n3. notification_retry_topic: Unsuccessful notifications.\n\nA retry engine runs in parallel with the notification engine and gives any\nfailed notification a configurable number of extra chances at succeess.\n\nThe retry engine generates notifications using the following steps:\n1. Reads Notification json data from Kafka, with no auto commit. - KafkaConsumer class\n2. Rebuild the notification that failed. - RetryEngine class\n3. Send Notification. - NotificationProcessor class\n4. Successful notifictions are added to a sent notification topic. - RetryEngine class\n5. Failed notifications that have not hit the retry limit are added back to the retry topic. - RetryEngine class\n6. Failed notifications that have hit the retry limit are discarded. - RetryEngine class\n6. Commit offset to Kafka - KafkaConsumer class\n\nThe retry engine uses two Kafka topics:\n1. notification_retry_topic: Notifications that need to be retried.\n2. notification_topic: Successfully sent notifications.\n\n## Fault Tolerance\nWhen reading from the alarm topic no committing is done. The committing is done only after processing. This allows\nthe processing to continue even though some notifications can be slow. In the event of a catastrophic failure some\nnotifications could be sent but the alarms not yet acknowledged. This is an acceptable failure mode, better to send a\nnotification twice than not at all.\n\nThe general process when a major error is encountered is to exit the daemon which should allow the other processes to\nrenegotiate access to the Kafka partitions.  It is also assumed the notification engine will be run by a process\nsupervisor which will restart it in case of a failure. This way any errors which are not easy to recover from are\nautomatically handled by the service restarting and the active daemon switching to another instance.\n\nThough this should cover all errors there is risk that an alarm or set of alarms can be processed and notifications\nsent out multiple times. To minimize this risk a number of techniques are used:\n\n- Timeouts are implemented with all notification types.\n- An alarm TTL is utilized. Any alarm older than the TTL is not processed.\n\n# Operation\nYaml config file by default is in '/etc/monasca/notification.yaml', a sample is in this project.\n\n## Monitoring\nstatsd is incorporated into the daemon and will send all stats to statsd server launched by monasca-agent.\nDefault host and port points at **localhost:8125**.\n\n- Counters\n    - ConsumedFromKafka\n    - AlarmsFailedParse\n    - AlarmsNoNotification\n    - NotificationsCreated\n    - NotificationsSentSMTP\n    - NotificationsSentWebhook\n    - NotificationsSentPagerduty\n    - NotificationsSentFailed\n    - NotificationsInvalidType\n    - AlarmsFinished\n    - PublishedToKafka\n- Timers\n    - ConfigDBTime\n    - SendNotificationTime\n\n# Future Considerations\n- More extensive load testing is needed\n  - How fast is the mysql db? How much load do we put on it. Initially I think it makes most sense to read notification\n    details for each alarm but eventually I may want to cache that info.\n  - How expensive are commits to Kafka for every message we read?  Should we commit every N messages?\n  - How efficient is the default Kafka consumer batch size?\n  - Currently we can get ~200 notifications per second per NotificationEngine instance using webhooks to a local \n    http server.  Is that fast enough?\n  - Are we putting too much load on Kafka at ~200 commits per second?\n\n# License\n\nCopyright (c) 2014 Hewlett-Packard Development Company, L.P.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stackforge/monasca-notification",
    "keywords": "openstack monitoring email",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "monasca-notification",
    "package_url": "https://pypi.org/project/monasca-notification/",
    "platform": "",
    "project_url": "https://pypi.org/project/monasca-notification/",
    "project_urls": {
      "Homepage": "https://github.com/stackforge/monasca-notification"
    },
    "release_url": "https://pypi.org/project/monasca-notification/1.11.0/",
    "requires_dist": [
      "pbr (!=2.1.0,>=2.0.0)",
      "monasca-statsd (>=1.1.0)",
      "requests (>=2.14.2)",
      "PyYAML (>=3.10.0)",
      "six (>=1.9.0)",
      "monasca-common (>=1.4.0)",
      "jira; extra == 'jira_plugin'",
      "jinja2; extra == 'jira_plugin'"
    ],
    "requires_python": "",
    "summary": "Reads alarms from Kafka and then notifies the customer using their configured notification method.",
    "version": "1.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17397522,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad5cc2a376460d2f2c451e8e72e1bff7b0fac0366827e5869823f03d98622847",
        "md5": "31552188438cc0ef597f3a13e0bcb679",
        "sha256": "03dfb1cf386bc4eef468a065f6daf73d9e2d49d99545dafa3005c726365bd5c5"
      },
      "downloads": -1,
      "filename": "monasca_notification-1.11.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31552188438cc0ef597f3a13e0bcb679",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 46177,
      "upload_time": "2017-10-26T14:58:48",
      "upload_time_iso_8601": "2017-10-26T14:58:48.959362Z",
      "url": "https://files.pythonhosted.org/packages/ad/5c/c2a376460d2f2c451e8e72e1bff7b0fac0366827e5869823f03d98622847/monasca_notification-1.11.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35f6fb1942a97ca42680aaaab2e47b582534c1e4f6c7677493efa1d20214c075",
        "md5": "00a8a723f5023fb2e57ff1f567d87fb8",
        "sha256": "4732ed869eba3b8996321c21fe28355c942878a032fa417518b82d196cd89cb6"
      },
      "downloads": -1,
      "filename": "monasca-notification-1.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "00a8a723f5023fb2e57ff1f567d87fb8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49194,
      "upload_time": "2017-10-26T14:58:52",
      "upload_time_iso_8601": "2017-10-26T14:58:52.505890Z",
      "url": "https://files.pythonhosted.org/packages/35/f6/fb1942a97ca42680aaaab2e47b582534c1e4f6c7677493efa1d20214c075/monasca-notification-1.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}