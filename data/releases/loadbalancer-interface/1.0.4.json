{
  "info": {
    "author": "Cory Johns",
    "author_email": "cory.johns@canonical.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# `loadbalancer` Interface Protocol API Library\n\nThis library provides an API for requesting and providing load balancers or\ningress endpoints from one charm to another. It can be used in either charms\nwritten in the newer [Operator Framework][] or older charms still using the\n[charms.reactive Framework][].\n\n\n## Installation / Setup\n\nInclude this library as a dependency for your charm, either in\n`requirements.txt` for Operator Framework charms, or `wheelhouse.txt` for\nreactive charms:\n\n```\nloadbalancer_interface\n```\n\n## Usage\n\n### Requesting Load Balancers\n\nRequesting a load balancer from a provider is done via the `LBProvider` class.\nThe general pattern for using the class is:\n\n  * Wait for the provider to become available\n  * Get a `Request` object via the `get_request(name)` method\n  * Set the appropriate fields on the request object\n  * Send the `Request` via the `send_request(request)` method\n  * Wait for the `Response` to be provided (or updated)\n  * Get the `Response` object via either the `get_response(name)` method or\n    via the `new_responses` property\n  * Confirm that the request was successful and use the provided LB's address\n  * Acknowledge the `Response` via `ack_response(response)`\n\nThere are examples in the repo for how to do this in [an operator charm][requires-operator]\nor in [a reactive charm][requires-reactive].\n\n\n### Providing Load Balancers\n\nProviding a load balancer to consumers is done via the `LBConsumers` class.  The\ngeneral pattern for using the class is:\n\n  * Wait for new or updated requests to come in\n  * Iterate over each request object in the `new_requests` property\n  * Create a load balancer according to the request's fields\n  * Set the appropriate fields on the request's `response` object\n  * Send the request's response via the `send_response(request)` method\n\nThere are examples in the repo for how to do this in [an operator charm][provides-operator]\nor in [a reactive charm][provides-reactive].\n\n## API Reference\n\nSee the [API docs][] for detailed reference on the API.\n\n\n<!-- Links -->\n\n[Operator Framework]: https://github.com/canonical/operator/\n[charms.reactive Framework]: https://charmsreactive.readthedocs.io/\n[requires-operator]: https://github.com/juju-solutions/loadbalancer-interface/blob/master/examples/requires-operator/\n[requires-reactive]: https://github.com/juju-solutions/loadbalancer-interface/blob/master/examples/requires-reactive/\n[provides-operator]: https://github.com/juju-solutions/loadbalancer-interface/blob/master/examples/provides-operator/\n[provides-reactive]: https://github.com/juju-solutions/loadbalancer-interface/blob/master/examples/provides-reactive/\n[API docs]: https://github.com/juju-solutions/loadbalancer-interface/blob/master/docs/api.md",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juju-solutions/loadbalancer-interface",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loadbalancer-interface",
    "package_url": "https://pypi.org/project/loadbalancer-interface/",
    "platform": "",
    "project_url": "https://pypi.org/project/loadbalancer-interface/",
    "project_urls": {
      "Homepage": "https://github.com/juju-solutions/loadbalancer-interface"
    },
    "release_url": "https://pypi.org/project/loadbalancer-interface/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "'loadbalancer' interface protocol API library",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15860344,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bfe591abf7a4def080fa6a671517c7681cf6ac9d89ab40752ab4af55cb62a74f",
        "md5": "21c68727d927d04ab961425b126a5a6d",
        "sha256": "af1c377499ff5051437c81989757e07a94aa95e8bdd6289927e07e8051b0e3ca"
      },
      "downloads": -1,
      "filename": "loadbalancer_interface-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "21c68727d927d04ab961425b126a5a6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8719,
      "upload_time": "2021-02-22T18:33:26",
      "upload_time_iso_8601": "2021-02-22T18:33:26.299689Z",
      "url": "https://files.pythonhosted.org/packages/bf/e5/91abf7a4def080fa6a671517c7681cf6ac9d89ab40752ab4af55cb62a74f/loadbalancer_interface-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}