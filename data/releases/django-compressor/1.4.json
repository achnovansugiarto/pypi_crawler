{
  "info": {
    "author": "Jannis Leidel",
    "author_email": "jannis@leidel.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Django Compressor\n=================\n\n.. image:: https://coveralls.io/repos/django-compressor/django-compressor/badge.png?branch=develop \n  :target: https://coveralls.io/r/django-compressor/django-compressor?branch=develop\n\n.. image:: https://pypip.in/v/django_compressor/badge.png\n        :target: https://pypi.python.org/pypi/django_compressor\n\n.. image:: https://pypip.in/d/django_compressor/badge.png\n        :target: https://pypi.python.org/pypi/django_compressor\n\n.. image:: https://secure.travis-ci.org/django-compressor/django-compressor.png?branch=develop\n    :alt: Build Status\n    :target: http://travis-ci.org/django-compressor/django-compressor\n\nDjango Compressor combines and compresses linked and inline Javascript\nor CSS in a Django template into cacheable static files by using the\n``compress`` template tag.\n\nHTML in between ``{% compress js/css %}`` and ``{% endcompress %}`` is\nparsed and searched for CSS or JS. These styles and scripts are subsequently\nprocessed with optional, configurable compilers and filters.\n\nThe default filter for CSS rewrites paths to static files to be absolute\nand adds a cache busting timestamp. For Javascript the default filter\ncompresses it using ``jsmin``.\n\nAs the final result the template tag outputs a ``<script>`` or ``<link>``\ntag pointing to the optimized file. These files are stored inside a folder\nand given a unique name based on their content. Alternatively it can also\nreturn the resulting content to the original template directly.\n\nSince the file name is dependent on the content these files can be given\na far future expiration date without worrying about stale browser caches.\n\nThe concatenation and compressing process can also be jump started outside\nof the request/response cycle by using the Django management command\n``manage.py compress``.\n\nConfigurability & Extendibility\n-------------------------------\n\nDjango Compressor is highly configurable and extendible. The HTML parsing\nis done using lxml_ or if it's not available Python's built-in HTMLParser by\ndefault. As an alternative Django Compressor provides a BeautifulSoup_ and a\nhtml5lib_ based parser, as well as an abstract base class that makes it easy to\nwrite a custom parser.\n\nDjango Compressor also comes with built-in support for `CSS Tidy`_,\n`YUI CSS and JS`_ compressor, `yUglify CSS and JS`_ compressor, the Google's\n`Closure Compiler`_, a Python port of Douglas Crockford's JSmin_, a Python port\nof the YUI CSS Compressor cssmin_ and a filter to convert (some) images into\n`data URIs`_.\n\nIf your setup requires a different compressor or other post-processing\ntool it will be fairly easy to implement a custom filter. Simply extend\nfrom one of the available base classes.\n\nMore documentation about the usage and settings of Django Compressor can be\nfound on `django-compressor.readthedocs.org`_.\n\nThe source code for Django Compressor can be found and contributed to on\n`github.com/django-compressor/django-compressor`_. There you can also file tickets.\n\nThe in-development version of Django Compressor can be installed with\n``pip install http://github.com/django-compressor/django-compressor/tarball/develop``.\n\n.. _BeautifulSoup: http://www.crummy.com/software/BeautifulSoup/\n.. _lxml: http://lxml.de/\n.. _html5lib: http://code.google.com/p/html5lib/\n.. _CSS Tidy: http://csstidy.sourceforge.net/\n.. _YUI CSS and JS: http://developer.yahoo.com/yui/compressor/\n.. _yUglify CSS and JS: https://github.com/yui/yuglify\n.. _Closure Compiler: http://code.google.com/closure/compiler/\n.. _JSMin: http://www.crockford.com/javascript/jsmin.html\n.. _cssmin: https://github.com/zacharyvoase/cssmin\n.. _data URIs: http://en.wikipedia.org/wiki/Data_URI_scheme\n.. _django-compressor.readthedocs.org: http://django-compressor.readthedocs.org/en/latest/\n.. _github.com/django-compressor/django-compressor: https://github.com/django-compressor/django-compressor",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://django-compressor.readthedocs.org/en/latest/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-compressor",
    "package_url": "https://pypi.org/project/django-compressor/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-compressor/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://django-compressor.readthedocs.org/en/latest/"
    },
    "release_url": "https://pypi.org/project/django-compressor/1.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Compresses linked and inline JavaScript or CSS into single cached files.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16520855,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e90262d35aa46729e9cb9146601589bdc23c428f3ae6659a95e5f801be34980",
        "md5": "904e81d37a03c7af407acd8132f3ce69",
        "sha256": "504e441967ac78604ab35f030018fc9a6fa270e6a6e98471d2311fd77f70674b"
      },
      "downloads": -1,
      "filename": "django_compressor-1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "904e81d37a03c7af407acd8132f3ce69",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 114992,
      "upload_time": "2014-05-20T17:54:18",
      "upload_time_iso_8601": "2014-05-20T17:54:18.595659Z",
      "url": "https://files.pythonhosted.org/packages/6e/90/262d35aa46729e9cb9146601589bdc23c428f3ae6659a95e5f801be34980/django_compressor-1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52d15571be2f370a853c221ea9f52e1f82deaca1cd6d5b83651853a0896bddd1",
        "md5": "dc050f1a85f83f927f94bcb09e8bdd0f",
        "sha256": "b26034230efcef7d60e5267890eda656dfc49c567f27125d907eee4fe7f9a6ec"
      },
      "downloads": -1,
      "filename": "django_compressor-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dc050f1a85f83f927f94bcb09e8bdd0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 106778,
      "upload_time": "2014-05-19T22:36:04",
      "upload_time_iso_8601": "2014-05-19T22:36:04.419853Z",
      "url": "https://files.pythonhosted.org/packages/52/d1/5571be2f370a853c221ea9f52e1f82deaca1cd6d5b83651853a0896bddd1/django_compressor-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}