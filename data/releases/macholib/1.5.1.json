{
  "info": {
    "author": "Ronald Oussoren",
    "author_email": "ronaldoussoren@mac.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "macholib can be used to analyze and edit Mach-O headers, the executable\nformat used by Mac OS X.\n\nIt's typically used as a dependency analysis tool, and also to rewrite dylib\nreferences in Mach-O headers to be @executable_path relative.\n\nThough this tool targets a platform specific file format, it is pure python\ncode that is platform and endian independent.\n\n\nRelease history\n===============\n\nmacholib 1.5.1\n--------------\n\n* There were no 'classifiers' in the package metadata due to \n  a bug in setup.py.\n\nmacholib 1.5\n--------------\n\nmacholib 1.5 is a minor feature release\n\n* No longer use 2to3 to provide Python 3 support\n\n  As a side-effect of this macholib no longer supports\n  Python 2.5 and earlier.\n\n* Adds suppport for some new macho load commands\n\n* Fix for py3k problem in macho_standalone.py\n\n  Patch by Guanqun Lu.\n\n* Fix for some issues in macho_dump.py\n\n  Patch by Nam Nguyen\n\n* Issue #10: Fix for LC_DATA_IN_CODE linker commands, without \n  this fix py2app cannot build application bundles when\n  the source binaries have been compiled with Xcode 4.5.\n\n* Issue #6: Fix for LC_ENCRYPTION_INFO linker commands\n\n* Use the mach header information to print the cpu type of a\n  binary, instead of trying to deduce that from pointer width\n  and endianness. \n\n  Changed the code because of issue #6, in which a user tries to\n  dump a iOS binary which results in bogus output in the previous\n  releases.\n\n* The mapping ``macholib.macho_dump.ARCH_MAP`` is undocumented\n  and no longer used by macholib itself. It will be removed\n  in the next release.\n\n\n* The command-line tools ``macho_find``, ``macho_dump`` and\n  ``macho_standalone`` are deprecated. Use \"python -mmacholib\" \n  instead. That is::\n\n   $ python -mmacholib dump /usr/bin/grep\n   \n   $ python -mmacholib find ~\n\n   $ python -mmacholib standalone myapp.app\n\n  This makes it clearer which version of the tools are used.\n\nmacholib 1.4.3\n--------------\n\nmacholib 1.4.3 is a minor feature release\n\n* Added strings for 'x86_64' and 'ppc64' to\n  macholib.mach_o.CPU_TYPE_NAMES.\n\n* macho_find and macho_dump were broken in the 1.4.2 release\n\n* added 'macholib.util.NOT_SYSTEM_FILES', a list of\n  files that aren't system path's even though they are\n  located in system locations.\n\n  Needed to work around a bug in PySide (see issue #32 in the\n  py2app tracker)\n \n\n\nmacholib 1.4.2\n--------------\n\nmacholib 1.4.2 is a minor bugfix release\n\n* The support for new load commands that was added in 1.4.1 \n  contained a typo that caused problems on OSX 10.7 (Lion).\n\nmacholib 1.4.1\n--------------\n\nmacholib 1.4.1 is a minor feature release\n\nFeatures:\n\n- Add support for a number of new MachO load commands that were added\n  during the lifetime of OSX 10.6: ``LC_LOAD_UPWARD_DYLIB``,\n  ``LC_VERSION_MIN_MACOSX``, ``LC_VERSION_MIN_IPHONEOS`` and\n  ``LC_FUNCTION_STARTS``.\n\nmacholib 1.4\n-------------\n\nmacholib 1.4 is a feature release\n\nFeatures:\n\n- Documentation is now generated using `sphinx <http://pypi.python.org/pypi/sphinx>`_\n  and can be viewed at <http://packages.python.org/macholib>.\n\n- The repository has moved to bitbucket\n\n- There now is a testsuite\n\n- Private functionality inside modules was renamed to\n  a name starting with an underscore. \n\n  .. note:: if this change affects your code you are relying on undefined\n     implementation features, please stop using private functions.\n\n- The basic packable types in ``macholib.ptypes`` were renamed to better\n  represent the corresponding C type. The table below lists the old\n  an new names (the old names are still available, but are deprecated and\n  will be removed in a future release).\n\n  +--------------+--------------+\n  | **Old name** | **New name** |\n  +==============+==============+\n  | p_byte       | p_int8       |\n  +--------------+--------------+\n  | p_ubyte      | p_uint8      |\n  +--------------+--------------+\n  | p_short      | p_int16      |\n  +--------------+--------------+\n  | p_ushort     | p_uint16     |\n  +--------------+--------------+\n  | p_int        | p_int32      |\n  +--------------+--------------+\n  | p_uint       | p_uint32     |\n  +--------------+--------------+\n  | p_long       | p_int32      |\n  +--------------+--------------+\n  | p_ulong      | p_uint32     |\n  +--------------+--------------+\n  | p_longlong   | p_int64      |\n  +--------------+--------------+\n  | p_ulonglong  | p_uint64     |\n  +--------------+--------------+\n\n  ``Macholib.ptypes.p_ptr`` is no longer present as it had an unclear \n  definition and isn't actually used in the codebase.\n\n\nBug fixes:\n\n- The semantics of ``dyld.dyld_default_search`` were changed a bit,\n  it now first searches the framework path (if appropriate) and then\n  the linker path, irrespective of the value of the ``DYLD_FALLBACK*``\n  environment variables.\n  \n  Previous versions would change the search order when those variables\n  was set, which is odd and doesn't correspond with the documented\n  behaviour of the system dyld.\n\n- It is once again possible to install using python2.5\n\n- The source distribution includes all files, this was broken\n  due to the switch to mercurial (which confused setuptools)\n\nmacholib 1.3\n------------\n\nmacholib 1.3 is a feature release.\n\nFeatures:\n\n- Experimental Python 3.x support\n\n  This version contains lightly tested support for Python 3.\n\nmacholib 1.2.2\n--------------\n\nmacholib 1.2.2 is a bugfix release.\n\nBug fixes:\n\n- Macholib should work better with 64-bit code\n  (patch by Marc-Antoine Parent)",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/macholib/",
    "download_url": "http://pypi.python.org/pypi/macholib",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/ronaldoussoren/macholib",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "macholib",
    "package_url": "https://pypi.org/project/macholib/",
    "platform": "any",
    "project_url": "https://pypi.org/project/macholib/",
    "project_urls": {
      "Download": "http://pypi.python.org/pypi/macholib",
      "Homepage": "http://bitbucket.org/ronaldoussoren/macholib"
    },
    "release_url": "https://pypi.org/project/macholib/1.5.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Mach-O header analysis and editing",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15206304,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9122a830b5f3e024c50e051f5563eb4fcd61450661d1e41109d6024c8306217",
        "md5": "2665525cdc9edaf4d1de5566bb004c56",
        "sha256": "7a1b50204d27ecec94660e3dbefd8e32d17388002cf7dc1e42f0b60ceb3c8d80"
      },
      "downloads": -1,
      "filename": "macholib-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2665525cdc9edaf4d1de5566bb004c56",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 454873,
      "upload_time": "2013-02-04T10:00:08",
      "upload_time_iso_8601": "2013-02-04T10:00:08.844168Z",
      "url": "https://files.pythonhosted.org/packages/f9/12/2a830b5f3e024c50e051f5563eb4fcd61450661d1e41109d6024c8306217/macholib-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}