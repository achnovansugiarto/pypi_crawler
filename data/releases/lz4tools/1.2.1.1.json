{
  "info": {
    "author": "Christopher Jackson",
    "author_email": "darkdragn.cj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "==================\nLZ4tools and LZ4f\n==================\n\n.. image:: https://travis-ci.org/darkdragn/lz4file.svg?branch=master\n\nOverview\n--------\nThis package consists of two parts:\n\n1. lz4f - bindings for all lz4frame functions\n\n2. lz4tools - a zipfile-like file wrapper class and tarfile-like class for lz4 compressed files. \n\nUsage\n-----\nI would recommend against using lz4f directly except in debug/testing situations. If necessary, a compress or decompress operation first needs a context that will be used with all lz4f functions:\n\nlz4f compression the hard way:\n    >>> import lz4f\n    >>> inputFile = open('fileIn', 'rb')\n    >>> cCtx = lz4f.createCompressionContext\n    >>> header = lz4f.compressBegin(cCtx)\n    >>> data = lz4f.compressUpdate(inputFile.read(), cCtx)\n    >>> end = lz4f.compressEnd(cCtx)\n    >>> with open('output.lz4', 'wb') as out:\n    ...     out.write(header)\n    ...     out.write(data)\n    ...     out.write(end)\n    ...     out.flush()\n    ...     out.close()\n    >>> lz4f.freeCompContext(cCtx)\n    >>> inputFile.close()\n    >>> del header, data, end\n    \nlz4f compression the easy way:\n    >>> import lz4f\n    >>> with open('output.lz4', 'wb') as out:\n    ...     with open('fileIn', 'rb') as inFile:\n    ...         out.write(lz4f.compressFrame(inFile.read())\n    ...     out.flush()\n    ...     out.close()\n    \nAdvantages and disadvantages: The easy way takes more ram. It reads the contents of the file into a buffer, passes it and compresses it all in one go. With the hard way you can have it read as little or as much as you like. For instance, you can break up the input into 64k chunks. Each chunk could be read, compressed and dropped to disk to conserve ram.\n\nThe lz4file class is currently read only. Right now it is a bit rough around the edges, however over the next couple of weeks, I will finish adding some document strings, and such to make it more user friendly. As soon as I get a chance I will make it write capable. The easiest way to use it is with either the open or openTar methods. That's right! There is a lz4Tar class in the module that is a subclass of tarfile. \n\nlz4tools tar example:\n    >>> import lz4tools\n    >>> lz4tools.compressTarDefault('src')\n    >>> testTar = lz4tools.openTar('src.tar.lz4')\n    >>> testTar.list()\n    -rwxr-xr-x darkdragn/darkdragn          0 2014-10-02 23:06:09 src/\n    -rw-r--r-- darkdragn/darkdragn      29905 2014-09-16 18:29:45 src/lz4hc.c\n    -rw-r--r-- darkdragn/darkdragn       6781 2014-09-16 18:29:45 src/xxhash.h\n    -rw-r--r-- darkdragn/darkdragn      25662 2014-09-16 18:29:45 src/xxhash.c\n    -rw-rw-r-- darkdragn/darkdragn      13894 2014-10-02 20:22:09 src/lz4frame.h\n    -rw-rw-r-- darkdragn/darkdragn      46241 2014-10-02 20:22:09 src/lz4.c\n    -rw-r--r-- darkdragn/darkdragn       8832 2014-09-16 18:29:45 src/lz4hc.h\n    -rw-rw-r-- darkdragn/darkdragn      11734 2014-10-02 23:06:08 src/python-lz4f.c\n    -rw-rw-r-- darkdragn/darkdragn       2554 2014-10-02 20:22:09 src/python-lz4f.h\n    -rw-r--r-- darkdragn/darkdragn      14882 2014-09-18 01:28:06 src/lz4.h\n    -rw-rw-r-- darkdragn/darkdragn      50141 2014-10-02 23:04:05 src/lz4frame.c\n    \nlz4tools file example:\n    >>> import lz4tools\n    >>> lz4tools.compressFileDefault('setup.py')\n    >>> testFile = lz4tools.open('setup.py.lz4')\n    >>> testFile.blkDict\n    {0: {'decomp_e': 1445, 'compressed_begin': 7, 'blkSize': 923}}\n    >>> testFile.seek(1002)\n    >>> print testFile.read()\n        test_suite = \"nose.collector\",\n        keywords = ['lz4', 'lz4frame', 'lz4file', 'lz4tar'],\n        classifiers=[\n            'Development Status :: 5 - Production/Stable',\n            'License :: OSI Approved :: BSD License',\n            'Intended Audience :: Developers',\n            'Programming Language :: C',\n            'Programming Language :: Python',\n            'Programming Language :: Python :: 2.6',\n            'Programming Language :: Python :: 2.7',\n        ],\n    )\n\nAnd thus ends the brief tutoral.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/darkdragn/lz4file",
    "keywords": "lz4,lz4frame,lz4file,lz4tar",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lz4tools",
    "package_url": "https://pypi.org/project/lz4tools/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lz4tools/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/darkdragn/lz4file"
    },
    "release_url": "https://pypi.org/project/lz4tools/1.2.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "LZ4Frame Bindings and tools for Python",
    "version": "1.2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1911908,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b40e396ef3626a55b15c049d112b972eb50d9850f6564c0cb52f5925299ea730",
        "md5": "c7c07f07fcc80cc12c6fd7f9a2ab2bc0",
        "sha256": "428e135cb658dd4b8610ad7c149b072d6faa0388205d8ac22300539618bd16f9"
      },
      "downloads": -1,
      "filename": "lz4tools-1.2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c7c07f07fcc80cc12c6fd7f9a2ab2bc0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 53590,
      "upload_time": "2014-10-06T06:24:46",
      "upload_time_iso_8601": "2014-10-06T06:24:46.692577Z",
      "url": "https://files.pythonhosted.org/packages/b4/0e/396ef3626a55b15c049d112b972eb50d9850f6564c0cb52f5925299ea730/lz4tools-1.2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}