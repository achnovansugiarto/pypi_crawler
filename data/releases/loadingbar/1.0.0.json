{
  "info": {
    "author": "Sylvain Carlioz",
    "author_email": "sylvain.carlioz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Python Loading Bar\n=====================\n![Travis Test](https://travis-ci.org/theeko74/loadingbar.svg?branch=master)\n\nPython module to display a nice loading bar in a terminal window.\n\nInstall\n-------\nGo to the module directory and run:\n```\n$ pip install setup.py\n```\n\nOr:\n```\n$ python3 setup.py install\n```\n\n\nGetting Started\n---------------\n\nThere are 3 different loading bar:\n1. Standard loading bar\n2. Loading bar with size loaded, speed and remaining time\n3. Loading bar with infos above plus a custom message (usefull to display a verbose loading bar)\n\n## Option 1\n\nStandard loading bar without any other infos.\n\n![Loading bar option 1](screenshots/Option1.png)\n\n```python\nimport loading\ntotal_file_size = 1000\n# Create a loading bar object with total_file_size in bytes\nlb = loadingbar.LoadingBar(total_file_size)\n\n# For every piece of file\nfor chunk in file:\n  # Update the loading bar with the len of new data\n  lg.update(len(chunk))\n\n# When finished, display a 100% loading bar\nlg.done()\n```\n\n## Option 2\n\nStandard loading bar with infos such as size downloaded, speed, eta.\n\n![Loading bar option 2](screenshots/Option2.png)\n\n```python\nimport loading\ntotal_file_size = 1000\nlb = loadingbar.InfoLoadingBar(total_file_size)\n# Run as above\n```\n\n## Option 3\n\nThis special `InternetLoadingBar` smooth the speed calculation by taking the overall average time rather than a instant speed.\n\n```python\nimport loading\ntotal_file_size = 1000\nlb = loadingbar.InternetLoadingBar(total_file_size)\n# Run as above\n```\n\n## Option 4\n\nLoading bar that displays a message, like for example the filename that it is downloaded. Two options:\n* `loadingbar.MessageLoadingBar`\n* `loadingbar.VerboseLoadingBar`\n\n![Loading bar option 3](screenshots/Option3.png)\n\n```python\nimport loading\ntotal_file_size = 1000\nlb = loadingbar.VerboseLoadingBar(total_file_size)\n\n# For every piece of file\nfor chunk in file:\n  # Update the loading bar with the len of new data\n  lg.update(len(chunk), \"Message to be displayed, such as filename, etc.\")\n\n# When finished, display a 100% loading bar\nlg.done()\n```\n\n## Option 5\n\nAdd a percentage after the loading bar.\n\n* `loadingbar.PercentageLoadingBar(tot_size)`\n![Loading bar option 5-1](screenshots/Option5-0.png)\n\n* `loadingbar.PercentageInfoLoadingBar(tot_size)`\n![Loading bar option 5-2](screenshots/Option5-1.png)\n\n## Option 6\n\nAdd a percentage after the loading bar.\n\n* `loadingbar.PercentageBeforeLoadingBar(tot_size)`\n![Loading bar option 6-0](screenshots/Option6-0.png)\n\n* `loadingbar.PercentageBeforeLoadingBarAndInfo(tot_size)`\n![Loading bar option 6-1](screenshots/Option6-1.png)\n\nCustomization\n-------------\n\nIf a new and custom loading bar is needed, you can implement a new one by inheriting from the LoadingBar class or the abstract class ILoadingBar.\nSee loading > loading_bar.py for examples.\n\nLicense\n-------\nMIT license.\nFeel free to use, share, or improve it.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theeko74/loading",
    "keywords": "loading,loading bar,terminal",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loadingbar",
    "package_url": "https://pypi.org/project/loadingbar/",
    "platform": "",
    "project_url": "https://pypi.org/project/loadingbar/",
    "project_urls": {
      "Homepage": "https://github.com/theeko74/loading"
    },
    "release_url": "https://pypi.org/project/loadingbar/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library to display a loading bar in a terminal.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3813125,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19483b53f63c720fbf2b662d6b1cd29730486aa282ecec1f3574e8fea0e465bf",
        "md5": "a4cbe36bd1cb5da38828a280d1ef0308",
        "sha256": "cc5fab9695c1c6e8636b8675a04bbbfbd68bd1ca70f82dbaed26098c166d3d17"
      },
      "downloads": -1,
      "filename": "loadingbar-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4cbe36bd1cb5da38828a280d1ef0308",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8074,
      "upload_time": "2018-04-27T07:15:17",
      "upload_time_iso_8601": "2018-04-27T07:15:17.750541Z",
      "url": "https://files.pythonhosted.org/packages/19/48/3b53f63c720fbf2b662d6b1cd29730486aa282ecec1f3574e8fea0e465bf/loadingbar-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}