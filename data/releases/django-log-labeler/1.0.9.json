{
  "info": {
    "author": "Hermann",
    "author_email": "hermann.ntsamo@vcontractor.co.za",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "django-log-labeler\n=====================\n\n**Django middleware and log filter to attach values from the headers to every log message generated as part of a request.**\n\n**Author:** Hermann Stephane Ntsamo\n\nExample\n-------\n\n```\nDEBUG [340d34bb4bb91ed4f45c414808a03a65] myproject.apps.myapp.views: Some log message\nDEBUG [340d34bb4bb91ed4f45c414808a03a65] myproject.apps.myapp.forms: Some other log message\n```\n\n\nInstallation and usage\n----------------------\n\nFirst, install the package: `pip install django-log-labeler`\n\nAdd the middleware to your `MIDDLEWARE_CLASSES` setting.\n\n```python\nMIDDLEWARE_CLASSES = (\n    'log_labeler.middleware.HeaderToLabelMiddleware',\n    # ... other middleware goes here\n)\n```\n\nAdd the `log_labeler.filters.HeaderToLabelFilter` to your `LOGGING` setting. Update your `formatters` to include the header names you want appearing in the log message. Add a handler to output the messages (eg to the console), and finally attach the handler to your application's logger.\n\nAn example `LOGGING` setting is below:\n\n```python\nDEFAULT_LOG_LEVEL = os.getenv('LOGGING_LEVEL', 'INFO')\n\nLOG_LABEL_REQUEST_SETTING = {\n    \"correlation_id\": \"HTTP_NIM_CORRELATION_ID\",\n    \"session_id\": \"HTTP_NIM_SESSION_ID\",\n    \"app_id\": \"HTTP_NIM_APP_ID\",\n    \"nim_user\": \"HTTP_NIM_USER\",\n    \"app_version\": \"HTTP_NIM_APP_VERSION\",\n}\n\nLOG_LABEL_EXCLUDE_LOG_LIST = [\n    \"\",\n    \"django\"\n]\n\nLOG_LABEL_OBFUSCATE = {\n    \"headers\": [\"Authorization\"],\n    \"body\": {\n        \"(?i)(\\\\<(\\\\w+\\\\:)?password.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?password.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(\\\\<(\\\\w+\\\\:)?session.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?session.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(\\\\<(\\\\w+\\\\:)?token.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?token.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.*\\\\??password([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??token([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??session([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.+\\\\\\\".*session.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.+\\\\\\\".*token.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.+\\\\\\\".*password.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n    },\n    \"response\": {\n        \"(?i)(\\\\<(\\\\w+\\\\:)?password.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?password.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(\\\\<(\\\\w+\\\\:)?session.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?session.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(\\\\<(\\\\w+\\\\:)?token.*\\\\>).+(\\\\<\\\\/(\\\\w+\\\\:)?token.*\\\\>)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.*\\\\??password([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??token([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??session([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.+\\\\\\\".*session.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.+\\\\\\\".*token.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n        \"(?i)(.+\\\\\\\".*password.*\\\\\\\"\\\\s*\\\\:\\\\s*\\\\\\\")(.+)(\\\\\\\"(\\\\,|\\\\}).*)\": r\"\\1[--HIDDEN--]\\3\",\n    },\n    \"url\": {\n        \"(?i)(.*\\\\??password([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??token([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n        \"(?i)(.*\\\\??session([^=]*)=)([^\\\\&]*)(.*)\": r\"\\1[--HIDDEN--]\\4\",\n    }\n}\n\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'request_id': {\n            '()': 'log_labeler.filters.HeaderToLabelFilter'\n        }\n    },\n    'formatters': {\n        'json': {\n              '()': 'pythonjsonlogger.jsonlogger.JsonFormatter',\n              'format': '%(message)s'\n          }\n    },\n    'handlers': {\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'filters': ['request_id'],\n            'formatter': 'json',\n        },\n    },\n    'loggers': {\n        'log_labeler.middleware': {\n            'handlers': ['console'],\n            'level': 'DEBUG',\n            'propagate': False,\n        },\n        'gunicorn.access': {\n            'handlers': ['console'],\n            'level': 'INFO',\n            'propagate': False,\n        },\n    }\n}\n\nNIM_DJANGO_REQUEST_LOG_LEVEL_NAME = \"HTTP_NIM_DJANGO_REQUEST_LOG_LEVEL\"\nMAX_REQUEST_RESPONSE_SIZE = os.getenv('MAX_REQUEST_RESPONSE_SIZE', 'OFF')\n```\n\nYou can then output log messages as usual:\n\n```python\nimport logging\nlogger = logging.getLogger(__name__)\nlogger.debug(\"Hello world!\")\n```\n\nSettings Description:\n---------------------\n\n######DEFAULT_LOG_LEVEL\nThe default log level to apply on the logger if not other log level is specified\n\n######LOG_LABEL_REQUEST_SETTING\nThe list of key/value pair that maps an HTTP header to a log entry\n\n######LOG_LABEL_EXCLUDE_LOG_LIST\nThe list of loggers to ignore when dynamically changing log levels\n\n######LOG_LABEL_OBFUSCATE\nThe dictionary with expected key headers, body, response and URL\n\n######NIM_DJANGO_REQUEST_LOG_LEVEL_NAME\nThe name of the header to use to change the logging level. EG: DEBUG, INFO, ERROR...\n\n######MAX_REQUEST_RESPONSE_SIZE\nThe maximum allowed size for request and responses in case they are successful. Error message are not truncated.\n\n\nLicense\n-------\n\nCopyright Â© 2012-2018, DabApps.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without \nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this \nlist of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this \nlist of conditions and the following disclaimer in the documentation and/or \nother materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://psbl102zatcrh.vodacom.corp/nimble-backend/Vodacom-Django-Log-Labeler/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-log-labeler",
    "package_url": "https://pypi.org/project/django-log-labeler/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-log-labeler/",
    "project_urls": {
      "Homepage": "https://psbl102zatcrh.vodacom.corp/nimble-backend/Vodacom-Django-Log-Labeler/"
    },
    "release_url": "https://pypi.org/project/django-log-labeler/1.0.9/",
    "requires_dist": [
      "django (>=1.9.2)",
      "requests (>=2.22.0)",
      "twine (==3.1.1)"
    ],
    "requires_python": "",
    "summary": "Django middleware and log filter to attach a unique ID to every log message generated as part of a request",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12092279,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed7177e0a0cc3043c3abc1e7256f8150bd94ad6c779284e8b2e48b6be81d9c18",
        "md5": "bc5c19f3cf40e9451682bf8fa214397f",
        "sha256": "56fdc46ffd1eefd936faf0ffc0bd714900b607889b03a083fb4c3abb83d8cca8"
      },
      "downloads": -1,
      "filename": "django_log_labeler-1.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc5c19f3cf40e9451682bf8fa214397f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15429,
      "upload_time": "2020-04-01T08:37:57",
      "upload_time_iso_8601": "2020-04-01T08:37:57.948463Z",
      "url": "https://files.pythonhosted.org/packages/ed/71/77e0a0cc3043c3abc1e7256f8150bd94ad6c779284e8b2e48b6be81d9c18/django_log_labeler-1.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41808265f2551cb20ce18e05d583fb7efaa141aa63043fa639e130988d204c2f",
        "md5": "1bbffc5e01005c306c517c1413ce1147",
        "sha256": "228d8f244209811a80f977e979ea91beb81e89c9bbad48eeff6c8114db67544c"
      },
      "downloads": -1,
      "filename": "django-log-labeler-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "1bbffc5e01005c306c517c1413ce1147",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12355,
      "upload_time": "2020-04-01T08:37:59",
      "upload_time_iso_8601": "2020-04-01T08:37:59.582519Z",
      "url": "https://files.pythonhosted.org/packages/41/80/8265f2551cb20ce18e05d583fb7efaa141aa63043fa639e130988d204c2f/django-log-labeler-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}