{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Audit Field Changes on Django Models\n\n[![tests][tests_badge]][tests_link]\n[![coverage][coverage_badge]][coverage_link]\n[![pypi package][pypi_badge]][pypi_link]\n\n[tests_badge]: https://github.com/dimagi/django-field-audit/actions/workflows/tests.yml/badge.svg\n[tests_link]: https://github.com/dimagi/django-field-audit/actions/workflows/tests.yml\n[coverage_badge]: https://github.com/dimagi/django-field-audit/raw/coverage-badge/coverage.svg\n[coverage_link]: https://github.com/dimagi/django-field-audit/actions/workflows/coverage.yml\n[pypi_badge]: https://badge.fury.io/py/django-field-audit.svg\n[pypi_link]: https://pypi.org/project/django-field-audit/\n\nA Django app for auditing field changes on database models.\n\n## Installation\n```\npip install django-field-audit\n```\n\n## Documentation\n\n<!--\nThe [django-field-audit documentation][docs] shows how to use this library to\naudit field changes on Django Models.\n\n[docs]: https://dimagi.github.io/django-field-audit/\n-->\n\n### Django Settings\n\nTo enable the app, add it to your Django `INSTALLED_APPS` configuration and run\nmigrations. Settings example:\n\n```python\nINSTALLED_APPS = [\n    # ...\n    \"field_audit\",\n]\n```\n\nThe \"auditor chain\" (see `FIELD_AUDIT_AUDITORS` in the **Custom settings** table\nbelow) is configured out of the box with the default auditors. If\n`change_context` auditing is desired for authenticated Django requests, add the\napp middleware to your Django `MIDDLEWARE` configuration. For example:\n\n```python\nMIDDLEWARE = [\n    # ...\n    \"field_audit.middleware.FieldAuditMiddleware\",\n]\n```\n\nThe audit chain can be updated to use custom auditors (subclasses of\n`field_audit.auditors.BaseAuditor`). If `change_context` auditing is not\ndesired, the audit chain can be cleared to avoid extra processing:\n\n```python\nFIELD_AUDIT_AUDITORS = []\n```\n\n#### Custom settings details\n\n| Name                              | Description                                                    | Default value when unset\n|:----------------------------------|:---------------------------------------------------------------|:------------------------\n| `FIELD_AUDIT_AUDITEVENT_MANAGER`  | A custom manager to use for the `AuditEvent` Model.            | `field_audit.models.DefaultAuditEventManager`\n| `FIELD_AUDIT_AUDITORS`            | A custom list of auditors for acquiring `change_context` info. | `[\"field_audit.auditors.RequestAuditor\", \"field_audit.auditors.SystemUserAuditor\"]`\n\n### Model Auditing\n\nTo begin auditing Django models, import the `field_audit.audit_fields` decorator\nand decorate models specifying which fields should be audited for changes.\nExample code:\n\n```python\n# flight/models.py\n\nfrom django.db import models\nfrom field_audit import audit_fields\n\n\n@audit_fields(\"tail_number\", \"make_model\", \"operated_by\")\nclass Aircraft(models.Model):\n    id = AutoField(primary_key=True)\n    tail_number = models.CharField(max_length=32, unique=True)\n    make_model = models.CharField(max_length=64)\n    operated_by = models.CharField(max_length=64)\n```\n\n### Using with SQLite\n\nThis app uses Django's `JSONField` which means if you intend to use the app with\na SQLite database, the SQLite `JSON1` extension is required. If your system's\nPython `sqlite3` library doesn't ship with this extension enabled, see\n[this article]((https://code.djangoproject.com/wiki/JSON1Extension)) for details\non how to enable it.\n\n\n## Contributing\n\nAll feature and bug contributions are expected to be covered by tests.\n\n### Setup for developers\n\nCreate/activate a python virtualenv and install the required dependencies.\n\n```shell\ncd django-field-audit\nmkvirtualenv django-field-audit  # or however you choose to setup your environment\npip install django nose flake8 coverage\n```\n\n### Running tests\n\n**Note**: By default, local tests use an in-memory SQLite database. Ensure that\nyour local Python's `sqlite3` library ships with the `JSON1` extension enabled\n(see [Using with SQLite](#using-with-sqlite)).\n\n- Tests\n  ```shell\n  nosetests\n  ```\n\n- Style check\n  ```shell\n  flake8 --config=setup.cfg\n  ```\n\n- Coverage\n  ```shell\n  coverage run -m nose\n  coverage report -m\n  ```\n\n### Adding migrations\n\nThe example `manage.py` is available for making new migrations.\n\n```shell\npython example/manage.py makemigrations field_audit\n```\n\n### Uploading to PyPI\n\nPackage and upload the generated files.\n\n```shell\npip install -r pkg-requires.txt\n\npython setup.py sdist bdist_wheel\ntwine upload dist/*\n```\n\n## TODO\n\n- Write backfill migration utility / management command.\n- Add support for `QuerySet` write operations (`update()`, etc).\n- Write full library documentation using github.io.\n- Switch to `pytest` to support Python 3.10.\n- Write `test_library.py` functional test module for entire library.\n\n### Backlog\n\n- Add to optimization for `instance.save(save_fields=[...])` [maybe].\n- Support adding new audit fields on the same model at different times (instead\n  of raising `AlreadyAudited`) [maybe].\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dimagi/django-field-audit",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "Joel Miller",
    "maintainer_email": "jmiller@dimagi.com",
    "name": "django-field-audit",
    "package_url": "https://pypi.org/project/django-field-audit/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-field-audit/",
    "project_urls": {
      "Homepage": "https://github.com/dimagi/django-field-audit"
    },
    "release_url": "https://pypi.org/project/django-field-audit/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Audit Field Changes on Django Models",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17148414,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd9909fcafb49a6a02d48b1199fa76139fda42ebc5f31ff4d5e8abf19652387d",
        "md5": "2144bec9bfc432ba9423456fa6da2fd5",
        "sha256": "e327b761e2157fe31665a6e496c7efe0bdfd5451e2dcfdc4d580cf66b18251f8"
      },
      "downloads": -1,
      "filename": "django_field_audit-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2144bec9bfc432ba9423456fa6da2fd5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13529,
      "upload_time": "2022-07-25T12:53:02",
      "upload_time_iso_8601": "2022-07-25T12:53:02.943547Z",
      "url": "https://files.pythonhosted.org/packages/bd/99/09fcafb49a6a02d48b1199fa76139fda42ebc5f31ff4d5e8abf19652387d/django_field_audit-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82210cbb8cf7050462ce21b6c05d8e96a6e89786b1810b4e26ffed5aef0899b7",
        "md5": "f1c184cce5333eee9ff97a3019682f79",
        "sha256": "ab460ddadf42e41c66e37e472b5c7a959940c0c2347f30e1fdb1b141fc277aef"
      },
      "downloads": -1,
      "filename": "django-field-audit-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1c184cce5333eee9ff97a3019682f79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11388,
      "upload_time": "2022-07-25T12:53:04",
      "upload_time_iso_8601": "2022-07-25T12:53:04.238978Z",
      "url": "https://files.pythonhosted.org/packages/82/21/0cbb8cf7050462ce21b6c05d8e96a6e89786b1810b4e26ffed5aef0899b7/django-field-audit-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}