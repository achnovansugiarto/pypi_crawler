{
  "info": {
    "author": "Joohwan Oh",
    "author_email": "joohwan.oh@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Utilities"
    ],
    "description": "Features\n========\n\n**dtags** is a lightweight command line tool which lets you:\n\n-  Tag and un-tag directories\n-  Run commands in multiple directories in parallel\n-  Change directories quickly via tag names\n-  Use shell variables to reference directories\n-  Easily manage git repositories, vagrant machines etc.\n\n\nInstallation\n============\n\nCheck requirements:\n\n-  Python 2.7+ or 3.4+\n-  Recent version of `pip <https://pip.pypa.io>`__\n-  Recent version of Bash, Zsh or Fish with tab-completion enabled\n\nInstall the package:\n\n.. code:: bash\n\n    # You may need to sudo depending on your setup\n    ~$ pip install --upgrade dtags\n\nAdd the following line at the end of your shell runtime configuration and reload the shell:\n\n.. code:: bash\n\n    # For zsh, place in ~/.zshrc:\n    command -v dtags-activate > /dev/null 2>&1 && eval \"`dtags-activate zsh`\"\n\n    # For bash, place in ~/.bashrc (or ~/.bash_profile for OS X):\n    command -v dtags-activate > /dev/null 2>&1 && eval \"`dtags-activate bash`\"\n\n    # For fish, place in ~/.config/fish/config.fish:\n    command -v dtags-activate > /dev/null 2>&1; and dtags-activate fish | source\n\nOnce installed, you will have the following at your disposal:\n\n-  Utility commands ``t``, ``u``, ``d``, ``e``, ``p``\n-  Main command ``dtags``\n\nAll commands come with tab-completion.\n\n\nUsage\n=====\n\nTag directories with ``t``:\n\n.. code:: bash\n\n    ~$ t ~/app dev work     # tag ~/app with 'dev' and 'work'\n    ~$ t ~/app              # tag ~/app with its basename, 'app'\n\nUn-tag directories with ``u``:\n\n.. code:: bash\n\n    ~$ u ~/app dev          # remove tag 'dev' from ~/app\n    ~$ u ~/app              # remove all tags from ~/app\n\nChange directories with ``d`` (designed to fully replace ``cd``!):\n\n.. code:: bash\n\n    ~$ d                    # go to the user's home directory\n    ~$ d -                  # go to the last directory\n    ~$ d app                # go to the directory tagged 'app'\n    ~$ d ~/app              # go to directory ~/app\n\nExecute commands in one or more directories with ``e``:\n\n.. code:: bash\n\n    ~$ e app git status     # execute 'git status' in all directories tagged 'app'\n    ~$ e ~/vm vagrant halt  # regular directory paths are accepted as well\n    ~$ e app,~/vm,~/foo ls  # multiple tags and/or paths can be specified using commas\n    ~$ e -i app myalias     # use -i (interactive shell) to use functions, aliases etc.\n\nExecute commands in parallel with ``p`` (same interface as ``e``):\n\n.. code:: bash\n\n    ~$ p app git pull       # execute 'git pull' in all directories tagged 'app' in parallel\n    ~$ p -i app myalias     # again, use -i for interactive shell (read below for caveats)\n\nDisplay, search and manage tags with ``dtags``:\n\n.. code:: bash\n\n    ~$ dtags                # display the directories-to-tags mapping\n    ~$ dtags list ~ ~/vm    # list the tags and directories associated with ~ and ~/vm\n    ~$ dtags list foo bar   # list the tags and directories associated with 'foo' or 'bar'\n    ~$ dtags reverse        # list the tags-to-directories (reverse) mapping\n    ~$ dtags edit           # edit tags and directories via editor\n    ~$ dtags clean          # remove invalid or stale tags and directories\n    ~$ dtags commands       # display all available dtags commands (e.g. t, u, d, e, p)\n\n\nIf a tag points to a single directory, shell variables are automatically created:\n\n.. code:: bash\n\n    ~$ t ~/some/dir foo     # shell variable '$foo' is automatically created\n    ~$ ls $foo/sub/dir      # $foo can now be used to denote the tagged directory ~/some/dir\n    ~$ rm $foo/file.sh      # $foo can now be used to denote the tagged directory ~/some/dir\n\nYou can always use the ``--help`` option to find out more about each command!\n\nMore Examples\n=============\n\nStreamline your Git workflows:\n\n.. code:: bash\n\n    # Tag your git directories\n    ~$ t ~/project/mobile app\n    ~$ t ~/project/backend app\n    ~$ t ~/project/frontend app\n    ~$ t ~/project/config app\n\n    # Save yourself some time!\n    ~$ e app git status\n    ~$ p app git pull\n    ~$ e app git checkout v1.7.2\n\nControl multiple vagrant machines at the same time:\n\n.. code:: bash\n\n    # Tag all the things\n    ~$ t ~/machines/web vm\n    ~$ t ~/machines/redis vm\n    ~$ t ~/machines/mysql vm\n    ~$ t ~/machines/compute vm\n\n    # Profit!\n    ~$ p vm vagrant status\n    ~$ p vm vagrant up\n\n\nTechnical Notes\n===============\n\n-  The directory-to-tags mapping is stored in ``~/.dtags/mapping``\n-  Tags are also stored on their own in ``~/.dtags/tags`` for tab-completion\n-  ``p`` is currently not fully supported on Windows\n-  ``p`` cannot execute interactive commands that wait on input\n-  ``p`` spawns child processes and redirects all output to temp files and then to stdout\n-  ``p`` does not retain font colors due to shell limitations\n-  ``p`` sends *sigterm* to its child processes when killed\n-  ``e`` (or ``p``) uses environment variable **$SHELL** to guess which shell is in use\n-  ``e`` (or ``p``) redirects stderr to stdout and always returns an exit status of 0\n-  Using ``-i`` (interactive shell) has caveats:\n\n   -  The shell runtime configuration must be \"sourced\" for every command execution\n   -  The performance is affected by the shell startup time (beware oh-my-zsh users)\n   -  Any errors thrown during the \"sourcing\" will be displayed in the output\n\n-  ``dtags edit`` uses environment variable **$EDITOR**\n-  ``d`` prefers tags over subdirectories when there are name conflicts\n\n   -  To go to the subdirectory, put ``/`` after the directory name\n\n-  ``d`` expects ``~/.dtags/mapping`` to be correctly formatted:\n\n   -  Refrain from editing ``~/.dtags/mapping`` directly.\n   -  Instead, use ``dtags edit`` which does the validation and formatting for you\n\n-  Tab-completion expects ``~/.dtags/tags`` to be correctly formatted:\n\n   -  Refrain from touching this file\n   -  This file is auto-generated whenever a dtags command is run.\n-  A shell variable is created only if its name does not conflict with environment variables\n-  When shell variables are created, any hyphens in the name are replaced with underscores",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joowani/dtags",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dtags",
    "package_url": "https://pypi.org/project/dtags/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dtags/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/joowani/dtags"
    },
    "release_url": "https://pypi.org/project/dtags/3.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Directory Tags for Lazy Programmers",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9998631,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9413608cfcd9c77117afd84f9606b8cd8fa203f4a58486f1af63747c86f315b8",
        "md5": "e175c5ca100f9253483ab2181399cf55",
        "sha256": "ebe373165743bdfbb4dc6502a828b72f71b02be8ebd6b914815183995c18c3e3"
      },
      "downloads": -1,
      "filename": "dtags-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e175c5ca100f9253483ab2181399cf55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15445,
      "upload_time": "2016-05-14T00:44:32",
      "upload_time_iso_8601": "2016-05-14T00:44:32.861784Z",
      "url": "https://files.pythonhosted.org/packages/94/13/608cfcd9c77117afd84f9606b8cd8fa203f4a58486f1af63747c86f315b8/dtags-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}