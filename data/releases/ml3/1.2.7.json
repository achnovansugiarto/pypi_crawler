{
  "info": {
    "author": "Jiao Shuai",
    "author_email": "jiaoshuaihit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ML3\n-----\n\nIntroduction\n------------\n\nML3是TechYoung课程辅助工具包.\n\n+-------------------------------+\n| ## Distribution               |\n+-------------------------------+\n| Run the following commands to |\n| register, build and upload    |\n| the package to PYPI.          |\n+-------------------------------+\n| python3 setup.py sdist upload |\n+-------------------------------+\n| The home page on PYPI is:     |\n| https://pypi.org/project/wcc/ |\n+-------------------------------+\n\nInstall\n-------\n\n::\n\n    sudo pip3 install ml3\n\n--------------\n\nUsage\n-----\n\nAfter installation, run the following command:\n\n::\n\n    import ml3\n\nMethods:\n~~~~~~~~\n\nplot.histplot(data, column\\_name, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_name:*** column name of dataframe, 例如 \"hr\\_mean\"\n\n-  ***kwargs:*** \"xmin\", \"xmax\"\n\nplot.gmmplot(data, column\\_names, k\\_range, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_names:*** list of columns name of dataframe, 例如\n   [\"hr\\_mean\", \"hr\\_std\"]\n\n-  ***k\\_range:*** the range of components (k), 例如 [2, 11] or (2, 11)\n\n-  ***kwargs:*** \"xmin\", \"xmax\", \"ymax\", \"bins\"\n\nplot.kmeansplot(data, column\\_names, k\\_range, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_names:*** list of columns name of dataframe, 例如\n   [\"hr\\_mean\", \"hr\\_std\"]\n\n-  ***k\\_range:*** the range of clusters (k), 例如 [2, 11] or (2, 11)\n\n-  ***kwargs:*** \"xmin\", \"xmax\" \"ymax\", \"bins\"\n\nplot.metricplot(n\\_clusters\\_range, scores, scores2=[], \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***n\\_clusters\\_range：*** tuple or list of range，例如 (2, 10)\n\n-  ***scores:*** list of score\n\n-  ***scores:*** list of score2 (option)\n\n-  ***kwargs:*** \"x\\_label\", \"y\\_label\"\n\nplot.errorbarplot(data, x, y=[], y2=[], \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***x:*** x-axis column name，例如 \"ctime\"\n\n-  ***y:*** y column name，例如 [\"hr\\_mean\", \"hr\\_std\"]\n\n-  ***y2:*** y2 column name，例如 [\"br\\_mean\", \"br\\_std\"] (option)\n\n-  ***kwargs:*** \"X\\_LABEL\", \"Y\\_LABEL\", \"TITLE\", \"LIMIT\"\n\nplot.pcaplot(data, column\\_names, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_names:*** list of columns name of dataframe, 例如\n   [\"hr\\_mean\", \"hr\\_std\"]\n\n-  ***kwargs:*** \"n\\_components\"\n\nplot.tsenplot(data, column\\_names, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_names:*** list of columns name of dataframe, 例如\n   [\"hr\\_mean\", \"hr\\_std\"]\n\n-  ***kwargs:*** \"n\\_components\"\n\nplot.kalmanplot(data, column\\_names, dim\\_x=2, dim\\_z=1, x=[], p=[], f=[], q=[], h=[], r=1, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ***data:*** dataframe\n\n-  ***column\\_names:*** list of columns name of rawdata dataframe, 例如\n   [\"hr\"]\n\n-  ***dim\\_x:*** the size of the state vector，状态空间维度\n\n   -  默认为2\n\n-  ***dim\\_z:*** the size of the measurement vector，观测矩阵维度\n\n   -  默认为1\n\n-  ***x:*** filter state estimate，初始状态预测矩阵\n\n   -  默认为[1, 0.1]，分别为心率和心率变化率\n\n-  ***p:*** covariance matrix，协方差矩阵\n\n   -  默认为[[1, 0.1], [0.1,\n      1]]，心率变化率和人的心率是一定的关系，根据运动状态或者濒死会有很明显的差别，选择0.1代表有一定关系，但是不关系大\n\n-  ***q:*** process\n   uncertainty/noise，噪声矩阵，此矩阵不能为0，否则数据会异常\n\n   -  默认为[[0.0001, 0], [0,\n      0.0001]]，因为数据都是在cpu中进行，不会产生噪音\n\n-  ***r:*** measurement uncertainty/noise，测量误差\n\n   -  默认为1，测量误差，医疗器械心率误差规定为+-1\n\n-  ***h:*** measurement function\n\n   -  Sometimes certain states are measured, when others are not. For\n      example, the first, third and fifth states of a five-dimensional\n      state vector are measurable, while second and fourth states are\n      not measurable H = [[1, 0, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0,\n      1]]\n\n-  ***f:*** state transistion matrix，状态转移矩阵\n\n   -  默认为[[1, 0.5], [0, 1]]，此矩阵不能对称，否则会计算异常\n\n-  ***kwargs:*** None\n\nseaborn.boxplot(x, y, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n此函数需要ml4进行对原始数据进行窗口化分类\n\n-  ***x:*** the UNIX timestamp list from ml4\n\n-  ***y:*** the data list from ml4\n\n-  ***kwargs:*** \"X\\_LABEL\", \"Y\\_LABEL\", \"TITLE\"\n\nseaborn.violinplot(x, y, \\*\\*kwargs):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n此函数需要ml4进行对原始数据进行窗口化分类\n\n-  ***x:*** the UNIX timestamp list from ml4\n\n-  ***y:*** the data list from ml4\n\n-  ***kwargs:*** \"X\\_LABEL\", \"Y\\_LABEL\", \"TITLE\"\n\nExample\n~~~~~~~\n\n.. code:: python\n\n    import ml3\n    import ml4\n    import pandas as pd\n\n    data = pd.read_csv(\"feature.csv\")\n    # histogram\n    ml3.plot.histplot(data, \"hr_mean\")\n    # error bar\n    ml3.plot.errorbarplot(data, \"ctime\", [\"hr_mean\", \"hr_std\"], [\"br_mean\", \"br_std\"])\n    # single feature\n    ml3.plot.kmeansplot(data, \"hr_mean\", (2, 10))\n    ml3.plot.gmmplot(data, \"hr_mean\", (2, 10))\n    # multiple features\n    ml3.plot.gmmplot(data, [\"hr_mean\", \"hr_std\", \"br_mean\", \"br_std\", \"mo_mean\", \"mo_std\"], (2, 10))\n    ml3.plot.kmeansplot(data, [\"hr_mean\", \"hr_std\", \"br_mean\", \"br_std\", \"mo_mean\", \"mo_std\"], (2, 10))\n    # two scores metricplot\n    scores = [110704, 75304, 60731, 52297, 45675, 41231, 37744, 35247, 33263]\n    scores2 = [0.05, 0.09, 0.15, 0.2, 0.3, 0.5, 0.6, 0.9, 1]\n    ml3.plot.metricplot((2, 11), scores, scores2)\n    # boxplot and violoinplot\n    x, y = ml4.ml4.getWindowData(data, \"ctime\", \"hr\")\n    timeList = []\n    for i in x:\n        tmp = datetime.fromtimestamp(i)\n        timeList.append(tmp.strftime(\"%H:%M\"))\n    ml3.seaborn.boxplot(timeList, y)\n    ml3.seaborn.violinplot(timeList, y)\n\n\n    data = pd.read_csv(\"rawdata.csv\")\n    ml3.plot.kalmanplot(data, [\"hr\"])\n\n    data[\"log1p\"] = np.log1p(data[\"br_std\"])\n    ml3.plot.kmeansplot(data, [\"log1p\"], (2, 10), ymax=15, bins=0.01)\n\nNote\n----\n\n版本里的1.2.4是旧的版本。1.2.5和以后的版本是用于函数计算的版本。\n1.2.5以及以后版本将去掉wcc自动框架.\n目录下的子目录：libwebp-0.4.1-linux-x86-64\n需要从网上下载，然后把里面的bin下的gif2webp放到/usr/bin里。这样就可以在wcc里调用了.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://ml3.techyoung.cn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ml3",
    "package_url": "https://pypi.org/project/ml3/",
    "platform": "",
    "project_url": "https://pypi.org/project/ml3/",
    "project_urls": {
      "Homepage": "http://ml3.techyoung.cn"
    },
    "release_url": "https://pypi.org/project/ml3/1.2.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TechYoung Machine Learning ToolKit",
    "version": "1.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7023946,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7f56b2461ab97809acd71d4da13b62f3d7397e92c773bd57dca0cd30eb7016c",
        "md5": "67e1c40b748229c6a431facfc703dd81",
        "sha256": "a503aa7be912ab76e826053109c45833bec4f756fb290be2abae5a699baac67f"
      },
      "downloads": -1,
      "filename": "ml3-1.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "67e1c40b748229c6a431facfc703dd81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12386,
      "upload_time": "2020-04-15T11:07:45",
      "upload_time_iso_8601": "2020-04-15T11:07:45.912971Z",
      "url": "https://files.pythonhosted.org/packages/d7/f5/6b2461ab97809acd71d4da13b62f3d7397e92c773bd57dca0cd30eb7016c/ml3-1.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}