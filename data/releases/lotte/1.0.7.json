{
  "info": {
    "author": "Frederik Arnold",
    "author_email": "frederik.arnold@hu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Readme\n\n## Overview\nLotte is a tool to find quotations in two texts, called source and target. If known, the source text should be the one that is quoted by the target text. This allows the algorithm to handle things like ellipsis in quotations, e.g.\n~~~\n0\t52\tThis is a long Text and the long test goes on and on\n0\t45\tThis is a long Text [...] test goes on and on\n~~~\n\n## Installation\n~~~\npip install Lotte\n~~~\n\n## Usage\nThere are two ways to use the algorithm. The following two sections describe the use of the algorithm in code and from the command line.\n\n### In code\nThe algorithm can be found in the package `lotte`. To use it create a `Lotte` object which expects the following arguments:\n- The length of the shortest match (default: 5)\n- The number of tokens to skip when looking backwards (default: 10)\n- The number of tokens to skip when looking ahead (default: 3)\n- The maximum distance in tokens between to matches considered for merging (default: 2)\n- The maximum distance in tokens between two matches considered for merging where the target text contains an ellipsis between the matches (default: 10)\n\n\nThen call the `compare` method on the object which expects two texts to be compared.\nThe method returns a list with the following structure: `List[Match]`. `Match` stores two `MatchSegments`. One for the source text and one for the target text. `MatchSegment` stores the `character_start_pos` and `character_end_pos` for the matching segments in the source and target text.\n\n### Command line\nThe `lotte compare` command provides a command line interface to the algorithm.\n\n~~~\nusage: LotteCLI.py compare [-h] [--text | --no-text]\n                           [--output-type {json,text}]\n                           [--output-folder-path OUTPUT_FOLDER_PATH]\n                           [--min-match-length MIN_MATCH_LENGTH]\n                           [--look-back-limit LOOK_BACK_LIMIT]\n                           [--look-ahead-limit LOOK_AHEAD_LIMIT]\n                           [--max-merge-distance MAX_MERGE_DISTANCE]\n                           [--max-merge-ellipsis-distance MAX_MERGE_ELLIPSIS_DISTANCE]\n                           [--create-dated-subfolder | --no-create-dated-subfolder]\n                           source-file-path target-path\n\nLotte compare allows the user to find quotations in two texts, a source text\nand a target text. If known, the source text should be the one that is quoted\nby the target text. This allows the algorithm to handle things like ellipsis\nin quotations.\n\npositional arguments:\n  source-file-path      Path to the source text file\n  target-path           Path to the target text file or folder\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --text, --no-text     Include matched text in the returned data structure\n                        (default: True)\n  --output-type {json,text}\n                        The output type\n  --output-folder-path OUTPUT_FOLDER_PATH\n                        The output folder path. If this option is set the\n                        output will be saved to a file created in the\n                        specified folder.\n  --min-match-length MIN_MATCH_LENGTH\n                        The length of the shortest match (>= 3, default: 5)\n  --look-back-limit LOOK_BACK_LIMIT\n                        The number of tokens to skip when looking backwards\n                        (>= 0, default: 10), (Very rarely needed)\n  --look-ahead-limit LOOK_AHEAD_LIMIT\n                        The number of tokens to skip when looking ahead (>= 0,\n                        default: 3)\n  --max-merge-distance MAX_MERGE_DISTANCE\n                        The maximum distance in tokens between two matches\n                        considered for merging (>= 0, default: 2)\n  --max-merge-ellipsis-distance MAX_MERGE_ELLIPSIS_DISTANCE\n                        The maximum distance in tokens between two matches\n                        considered for merging where the target text contains\n                        an ellipsis between the matches (>= 0, default: 10)\n  --create-dated-subfolder, --no-create-dated-subfolder\n                        Create a subfolder named with the current date to\n                        store the results (default: False)\n~~~\n\nBy default, the result is returned as a json structure: `List[Match]`. `Match` stores two `MatchSegments`. One for the source text and one for the target text. `MatchSegment` stores the `character_start_pos` and `character_end_pos` for the matching segments in the source and target text.\nFor example,\n\n~~~\n[\n  {\n    \"source_match_segment\": {\n      \"character_start_pos\": 0,\n      \"character_end_pos\": 52,\n      \"text\": \"This is a long Text and the long test goes on and on\"\n    },\n    \"target_match_segment\": {\n      \"character_start_pos\": 0,\n      \"character_end_pos\": 45,\n      \"text\": \"This is a long Text [...] test goes on and on\"\n    }\n  }\n]\n~~~\n\nAlternatively, the result can be printed in a human-readable text format, e.g.:\n\n~~~\n0\t52\tThis is a long Text and the long test goes on and on\n0\t45\tThis is a long Text [...] test goes on and on \n~~~\n\nIn case the matching text is not needed, the option --no-text allows to exclude the text from the output.\n\n## Visualization\nThe package `visualization` contains code to create the content for a web page to visualize the result of the algorithm.\nFor the website, see [LotteVizEx](/../../../../lottevizex/).\n\n### Usage\n~~~\nusage: LotteCLI.py visualize [-h] [--title TITLE] [--author AUTHOR]\n                             [--year YEAR]\n                             source-file-path target-folder-path\n                             matches-folder-path output-folder-path\n\nLotte visualize allows the user to create the files needed for a website that\nvisualizes the lotte algorithm results.\n\npositional arguments:\n  source-file-path     Path to the source text file\n  target-folder-path   Path to the target texts folder path\n  matches-folder-path  Path to the folder with the match files\n  output-folder-path   Path to the output folder\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --title TITLE        Title of the work\n  --author AUTHOR      Author of the work\n  --year YEAR          Year of the work\n~~~\n\n## Technical Background\nSee [Verfahren zur Entdeckung und Charakterisierung von Schlüsselstellen (Poster)](https://doi.org/10.5281/zenodo.4737131)\n\n## Acknowledgement\nThe algorithm is inspired by _sim_text_ by Dick Grune [^1]\nand _Similarity texter: A text-comparison web tool based on the “sim_text” algorithm_ by Sofia Kalaidopoulou (2016) [^2]\n\n[^1]: https://dickgrune.com/Programs/similarity_tester/ (Stand: 12.04.2021)\n\n[^2]: https://people.f4.htw-berlin.de/~weberwu/simtexter/522789_Sofia-Kalaidopoulou_bachelor-thesis.pdf (Stand: 12.04.2021)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://scm.cms.hu-berlin.de/schluesselstellen/lotte",
    "keywords": "quotation detection,literal citation extraction,key passages,natural language processing,nlp,text reuse",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Lotte",
    "package_url": "https://pypi.org/project/Lotte/",
    "platform": "",
    "project_url": "https://pypi.org/project/Lotte/",
    "project_urls": {
      "Homepage": "https://scm.cms.hu-berlin.de/schluesselstellen/lotte",
      "Source": "https://scm.cms.hu-berlin.de/schluesselstellen/lotte"
    },
    "release_url": "https://pypi.org/project/Lotte/1.0.7/",
    "requires_dist": [
      "numpy (>=1.20.1)",
      "yattag (>=1.14.0)",
      "rapidfuzz (>=1.3.3)",
      "datasketch (>=1.5.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "Lotte is a tool to find quotations in texts and to visualize the matching segments.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13686211,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b07e9b53eba99a4148aa326037e181870ed599597a27d7d96b5ffc6557117f58",
        "md5": "e6c6d666aaa32d106e1bbec735394b09",
        "sha256": "8cd3ced3103512bdfdb21d5621d6277d271d72032a18085f7368dd57167766de"
      },
      "downloads": -1,
      "filename": "Lotte-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6c6d666aaa32d106e1bbec735394b09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 28741,
      "upload_time": "2021-05-28T10:38:18",
      "upload_time_iso_8601": "2021-05-28T10:38:18.175492Z",
      "url": "https://files.pythonhosted.org/packages/b0/7e/9b53eba99a4148aa326037e181870ed599597a27d7d96b5ffc6557117f58/Lotte-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18261ac79307d4ab9ab4e8e2af118eab019347f4e0d1501bfc3073659a639a3c",
        "md5": "6676301e0451aac2c02efaa73868600e",
        "sha256": "a2ac91e2c993fcb2e6db2223dd26992818e87339a747f5d758b89edf9bc11d1c"
      },
      "downloads": -1,
      "filename": "Lotte-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "6676301e0451aac2c02efaa73868600e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 23820,
      "upload_time": "2021-05-28T10:38:19",
      "upload_time_iso_8601": "2021-05-28T10:38:19.350781Z",
      "url": "https://files.pythonhosted.org/packages/18/26/1ac79307d4ab9ab4e8e2af118eab019347f4e0d1501bfc3073659a639a3c/Lotte-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}