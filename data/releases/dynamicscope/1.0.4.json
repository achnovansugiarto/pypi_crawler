{
  "info": {
    "author": "Alexander Kozhevnikov",
    "author_email": "mentalisttraceur@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Dynamic Scope in Python\n=======================\n\nThis module implements dynamic scope for Python: it allows Python code\nto get and set variables defined anywhere in its call stack, searching\nfirst its own local variables, then its caller's local variables, and\nso on, until it finds a variable with the desired name.\n\nIt is strongly recommended to only use this module for education, fun\nparty tricks, and write-only throw-away code which no one will ever\nneed to reuse or maintain.\n\n\nVersioning\n----------\n\nThis library's version numbers follow the `SemVer 2.0.0\nspecification <https://semver.org/spec/v2.0.0.html>`_.\n\n\nInstallation\n------------\n\n::\n\n    pip install dynamicscope\n\n\nUsage\n-----\n\nImport:\n\n.. code:: python\n\n    from dynamicscope import DYNAMIC_SCOPE\n\nTo get a variable named ``x`` in the current dynamic scope:\n\n.. code:: python\n\n    DYNAMIC_SCOPE.x\n\n(**Note:** dynamic scope starts with *your* stack frame, not your caller's\nstack frame, so if you have a variable named ``x`` in the local scope,\n``DYNAMIC_SCOPE.x`` will refer to that ``x``, not bypass it.)\n\nTo overwrite a existing variable named ``x`` in the current dynamic scope:\n\n.. code:: python\n\n    DYNAMIC_SCOPE.x = 'foo'\n\nTo delete a variable named ``x`` found in the current dynamic scope:\n\n.. code:: python\n\n    del DYNAMIC_SCOPE.x\n\n(**DANGER:** reaching up from a lower scope to delete variables in\ncallers is a GOTO-level crime under international software law.)\n\nIf a variable is not found in dynamic scope, an ``AttributeError`` is raised:\n\n.. code::\n\n    AttributeError: 'x' not found in dynamic scope\n\n(It is an ``AttributeError`` and not a ``NameError`` because dynamic scope\nis accessed with attribute access - returning the standard error for\nattribute access composes better with existing code and builtins like\n``hasattr``, ``getattr``, and ``delattr``.)\n\nGetting and setting variables with dynamic scope is not always possible\nin Python. Two errors, both subclasses of ``RuntimeError``, are defined\nto help you detect when it cannot be done:\n\n* If the stack cannot be inspected to find variables during either\n  a get, set, or delete: a ``dynamicscope.ReadError`` is raised.\n\n* If the stack cannot be modified during a set or delete:\n  a ``dynamicscope.WriteError`` is raised.\n\nCaution\n~~~~~~~\n\n**Most languages do not have dynamic scope for really good reason.**\n\nIn a world where dynamic scope is used, *your local variables are part\nof your observable interface*, and the only thing protecting two\npieces of code from trampling over or shadowing each others' variables\nis conventions about how things are named. For example:\n\n* ``{{your module name}}_foo`` for any variable that you intend for\n  your users to set or get through dynamic scope, and\n\n* ``_{{your module name}}_foo`` for any variable that you intend for\n  your code to privately set or get through dynamic scope.\n\nDetails\n~~~~~~~\n\n``dynamicscope`` works by using Python's stack frame inspection, specifically\n|currentframe|_ and the ``f_locals`` attribute of `frame objects\n<https://docs.python.org/3/reference/datamodel.html#frame-objects>`_.\n\n.. |currentframe| replace:: ``inspect.currentframe()``\n.. _currentframe:\n    https://docs.python.org/3/library/inspect.html#inspect.currentframe\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mentalisttraceur/python-dynamicscope",
    "keywords": "",
    "license": "0BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamicscope",
    "package_url": "https://pypi.org/project/dynamicscope/",
    "platform": null,
    "project_url": "https://pypi.org/project/dynamicscope/",
    "project_urls": {
      "Homepage": "https://github.com/mentalisttraceur/python-dynamicscope"
    },
    "release_url": "https://pypi.org/project/dynamicscope/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Emulate dynamic scope in Python.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14323734,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1131d6cb7091dffc4859fb1a6a754b78af36f4f5066613b1231b1f95f2f958ac",
        "md5": "77ade9b870eb629dce8f561c3fa2a00d",
        "sha256": "729ac8ef26557609352a48df8b1a4130dad45cc4a03bff06a16330cf464c8c8f"
      },
      "downloads": -1,
      "filename": "dynamicscope-1.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77ade9b870eb629dce8f561c3fa2a00d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 4720,
      "upload_time": "2022-07-03T19:52:10",
      "upload_time_iso_8601": "2022-07-03T19:52:10.693073Z",
      "url": "https://files.pythonhosted.org/packages/11/31/d6cb7091dffc4859fb1a6a754b78af36f4f5066613b1231b1f95f2f958ac/dynamicscope-1.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f3eb9ec7111b061110054baa8e40fd2a4b7fb58f02e6b547fda8c7330d88016",
        "md5": "fc39c335a75418d42b9839bc7a25e0c2",
        "sha256": "8b5ffd2cb880ed220c44be1323c279669da7dd0adb8f224eb2b575cbad500b3f"
      },
      "downloads": -1,
      "filename": "dynamicscope-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fc39c335a75418d42b9839bc7a25e0c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4481,
      "upload_time": "2022-07-03T19:52:12",
      "upload_time_iso_8601": "2022-07-03T19:52:12.987674Z",
      "url": "https://files.pythonhosted.org/packages/2f/3e/b9ec7111b061110054baa8e40fd2a4b7fb58f02e6b547fda8c7330d88016/dynamicscope-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}