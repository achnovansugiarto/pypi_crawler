{
  "info": {
    "author": "Caleb Hattingh",
    "author_email": "caleb.hattingh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "dockerctx\n=========\n\n`dockerctx` is a context manager for managing the lifetime of a docker container.\n\nThe main use case is for setting up scaffolding for running tests, where you want\nsomething a little broader than *unit tests*, but less heavily integrated than,\nsay, what you might write using `Robot framework`_.\n\n.. _Robot framework: http://robotframework.org/\n\nInstall\n-------\n\n.. code-block:: bash\n\n    $ pip install dockerctx\n\nFor dev, you have to use flit_:\n\n.. code-block:: bash\n\n    $ pip install flit\n    $ flit install\n\nThe development-specific requirements will be installed automatically.\n\n.. _flit: https://flit.readthedocs.io/en/latest/\n\nDemo\n----\n\nThis is taken from one of the tests:\n\n.. code-block:: python\n\n    import time\n    import redis\n    import pytest\n    from dockerctx import new_container\n\n    # First make a pytest fixture\n\n    @pytest.fixture(scope='function')\n    def f_redis():\n\n        # This is the new thing! It's pretty clear.  The `ready_test` provides\n        # a way to customize what \"ready\" means for each container. Here,\n        # we simply pause for a bit.\n\n        with new_container(\n                image_name='redis:latest',\n                ports={'6379/tcp': 56379},\n                ready_test=lambda: time.sleep(0.5) or True) as container:\n            yield container\n\n    # Here is the test.  Since the fixture is at the \"function\" level, a fully\n    # new Redis container will be created for each test that uses this fixture.\n    # After the test completes, the container will be removed.\n\n    def test_redis_a(f_redis):\n        # The container object comes from the `docker` python package. Here we\n        # access only the \"name\" attribute, but there are many others.\n        print('Container %s' % f_redis.name)\n        r = redis.StrictRedis(host='localhost', port=56379, db=0)\n        r.set('foo', 'bar')\n        assert r.get('foo') == b'bar'\n\nNote that a brand new Redis container is created here, used within the\ncontext of the context manager (which is wrapped into a *pytest* fixture\nhere), and then the container is destroyed after the context manager\nexits.\n\n\nIn the src, there is another, much more elaborate test which\n\n#. runs a *postgres* container;\n#. waits for postgres to begin accepting connections;\n#. creates a database;\n#. creates tables (using the SQLAlchemy_ ORM);\n#. performs database operations;\n#. tears down and removes the container afterwards.\n\n.. _SQLAlchemy: http://www.sqlalchemy.org/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cjrh/dockerctx",
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "dockerctx",
    "package_url": "https://pypi.org/project/dockerctx/",
    "platform": null,
    "project_url": "https://pypi.org/project/dockerctx/",
    "project_urls": {
      "Homepage": "https://github.com/cjrh/dockerctx"
    },
    "release_url": "https://pypi.org/project/dockerctx/2017.3.5/",
    "requires_dist": [
      "docker",
      "typing; python_version < '3.5'"
    ],
    "requires_python": null,
    "summary": "A context manager for a docker container.",
    "version": "2017.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4488189,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8251a6f35b16af5f281a7103aff3c397bfdd983467500a69487948f3de3c6007",
        "md5": "b64b53360eef521630213ed8f67ea6ad",
        "sha256": "04e0be66d7f790b2e6a242738c11fa23aad7b59b2f124a1af151a0af4d887885"
      },
      "downloads": -1,
      "filename": "dockerctx-2017.3.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b64b53360eef521630213ed8f67ea6ad",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7258,
      "upload_time": "2017-03-25T04:09:28",
      "upload_time_iso_8601": "2017-03-25T04:09:28.294385Z",
      "url": "https://files.pythonhosted.org/packages/82/51/a6f35b16af5f281a7103aff3c397bfdd983467500a69487948f3de3c6007/dockerctx-2017.3.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}