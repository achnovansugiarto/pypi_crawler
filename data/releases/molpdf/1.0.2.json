{
  "info": {
    "author": "Suliman Sharif",
    "author_email": "sharifsuliman1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "MolPDF: A PDF Document Generator for SMILES!\n============================================\n\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)\n![Python](https://img.shields.io/badge/python-3.6-blue.svg)\n[![PyPI version](https://badge.fury.io/py/molpdf.svg)](https://badge.fury.io/py/molpdf)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![DOI](https://zenodo.org/badge/256060429.svg)](https://zenodo.org/badge/latestdoi/256060429)\n\n\nWelcome to MolPDF! The document generator for cheminformatics! MolPDF does one thing right now and is convert a list of 1D \nSMILES to a 2D image into a PDF! It's super lightweight and only requires python 3.4 >+. \n\nMolPDF is super new and under heavy development so if there are any bugs then please report them! Eventually, I will be able \nto get some docs, jupyter notebooks, and some asciis but in the meantime check out the source code and play around. \n\nAnnouncements\n=============\n\n-   June 7th 2020 First version 0.1.0 is released to the public\n-   June 19th 2020 Second version 0.2.0 is released to the public with MolPDFParser\n-   September 30th 2021 Fourth version with patches 0.4.2 is released to the public with redesign of MolPDF\n\nInstallation \n============\n\nMolPDF is going to be distribute via PyPi and as the content store grows we can expand it to other pieces of software\nmaking it accessible to all regardless of what you use. Alternatively, you could have a glance at the source code and copy/paste\nit yourself.\n\n```\n\n    pip install molpdf\n\n```\n\nQuickStart\n==========\n\nGenerate a PDF of SMILES\n\n```\n    from molpdf import MolPDF\n    \n    common_organic_solvents_smiles = {\n            'acetic acid': 'CC(=O)O',\n            'acetone' : 'CC(=O)C',\n            'acetonitrile': 'CC#N',\n            'benzene': 'C1=CC=CC=C1',\n            'tert-butyl alcohol': 'CC(C)(C)O',\n        \n    }\n    \n    smiles_list = list(list(common_organic_solvents_smiles.values()))\n    labels = list(list(common_organic_solvents_smiles.keys()))\n    document = MolPDF(name='common_organic_solvents.pdf')\n    document.add_title('Common Organic Solvents')\n    document.add_spacer()\n    document.generate(smiles=smiles_list, labels=labels, include_failed_smiles=True)\n\n```\n\n<p align=\"center\">\n  <img width=\"800\" height=\"600\" src=\"images/example_common_organic_solvents.png\">\n</p>\n\nRead a MolPDF Generated File into SMILES\n\n```\n\n    document = MolPDFParser('example.pdf')\n    smiles_list = document.extract_smiles()\n    print (smiles_list)\n    >>> ['C(CNC(C(C)N)=O)(=O)O', 'C(CNC(C(C)N)=O)(=O)O', 'C(CNC(C(C)N)=O)(=O)O']\n\n```\n\n\nGenerate a List a PDF of Amino Acids\n\n```\n\n    # Turning an Amino Acid List into a PDF\n    \n\n    amino_acid_side_chains = {\n        \"alanine\": \"C\",  \"arginine\": \"CCCCNC(N)=N\", \"asparagine\": \"CCC(N)=O\", \"aspartic acid\": \"CC(O)=O\",\n        \"cysteine\": \"CS\", \"glutamic acid\": \"CCC(O)=O\", \"glutamine\": \"CCC(N)=O\", \"glycine\": \"[H]\",\n        \"histidine\": \"CC1=CNC=N1\", \"isoleucine\": \"C(CC)([H])C\", \"leucine\": \"CC(C)C\", \"lysine\": \"CCCCN\",\n        \"methionine\": \"CCSC\", \"phenylalanine\": \"CC1=CC=CC=C1\", \"proline\": \"C2CCCN2\", \"serine\": \"CO\",\n        \"threonine\": \"C(C)([H])O\", \"tryptophan\": \"CCC1=CNC2=C1C=CC=C2\", \"tyrosine\": \"CC1=CC=C(O)C=C1\",\n        \"valine\": \"C(C)C\"\n    }\n\n    document = MolPDF(name='amino_acids.pdf')\n    document.add_title('Chemical Library Test')\n    document.add_spacer()\n\n    smiles_amino_acids = list(amino_acid_side_chains.values())\n    document.generate(smiles=smiles_amino_acids, include_failed_smiles=True)\n    \n```\n\nPerformance\n===========\n\nGenerating the 2D images into a PDF can be cumbersome if you have a large chemical library - below \nI have some average time statistics of how fast a PDF can be generated and parsed using MolPDF and MolPDFParser.\n\n\nMethod: 'MolPDF.generate()'\n\nLength of Smiles: 10 | Time to execute: ~ 0.19 seconds\nLength of Smiles: 100 | Time to execute: ~ 1.29 seconds\nLength of Smiles: 1000 | Time to execute: ~ 12.17 seconds\nLength of Smiles: 10000 | Time to execute: ~ 178.88 seconds\n\n\nStructure of MolPDF\n=======================\n\nCurrently, the main subpackages are:\n\n- **molpdf**: molpdf main class. \n\n\nGenesis\n=======\n\nMolPDF was developed so I could publish chemical libraries in an easy supporting information minable data for publications. \nI hope to make it easy for folk by making it a solely lightweight python package with only requirements to be reportlab. \n\n- Lead Developer [Suliman sharif](http://sulstice.github.io/)\n\n* * * * *\n\nExternal links\n==============",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/Sulstice/molpdf",
    "keywords": "pdf molecules smiles publication",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molpdf",
    "package_url": "https://pypi.org/project/molpdf/",
    "platform": null,
    "project_url": "https://pypi.org/project/molpdf/",
    "project_urls": {
      "Homepage": "https://www.github.com/Sulstice/molpdf"
    },
    "release_url": "https://pypi.org/project/molpdf/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14569961,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2912f94185519e45cdf221ef5dbd16571c2d151c68cc37407fc39a8d148625af",
        "md5": "4a18a9bc531c35777e37a9b701bfbcb9",
        "sha256": "fba08aa3161cd7ba2f5b1ea0f776427e9ef7ecab3f2c01db6da71db5437da662"
      },
      "downloads": -1,
      "filename": "molpdf-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4a18a9bc531c35777e37a9b701bfbcb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11121,
      "upload_time": "2022-07-27T20:45:07",
      "upload_time_iso_8601": "2022-07-27T20:45:07.479477Z",
      "url": "https://files.pythonhosted.org/packages/29/12/f94185519e45cdf221ef5dbd16571c2d151c68cc37407fc39a8d148625af/molpdf-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}