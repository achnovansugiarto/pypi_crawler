{
  "info": {
    "author": "李强",
    "author_email": "1206709430@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dvadmin_third\r\n\r\n#### 介绍\r\ndvadmin-third 插件是dvadmin的一个第三方用户管理插件，支持微信、企业微信、钉钉、飞书、H5页面扫码登录，支持扩展微信、企业微信、钉钉、飞书等用户信息类，以及SSO单点登录等功能(部分功能开发中)。\r\n\r\n## 功能支持项\r\n\r\n- [ ] 扫码登录\r\n  - [x] H5扫码登录\r\n  - [x] 微信扫码登录\r\n  - [x] 微信公众号扫码登录\r\n  - [ ] 企业微信扫码登录\r\n  - [ ] 钉钉扫码登录\r\n  - [ ] 飞书扫码登录\r\n  - [ ] \r\n  - [ ] \r\n- [ ] 支持用户扩展信息类(开发中)\r\n  - [ ] 微信用户信息\r\n  - [ ] 企业微信信息\r\n  - [ ] 钉钉信息\r\n  - [ ] 飞书信息\r\n- [ ] SSO单点登录(开发中)\r\n\r\n\r\n\r\n## 使用说明\r\n\r\n安装前端 dvadmin-third-web 插件进行配合使用\r\n```shell\r\nnpm install dvadmin-third-web\r\n```\r\n\r\n使用pip安装软件包：\r\n\r\n```shell\r\npip install dvadmin-third\r\n```\r\n\r\n目录结构：<br>\r\n```javascript\r\ndvadmin-third\r\n|   dvdadmin_third\r\n|   |   fixtures // 初始化文件\r\n|   |   |   __init__.py\r\n|   |   |   init_menu.json\r\n|   |   |   init_systemconfig.json\r\n|   |   |   initialize.py\r\n|   |   migrations\r\n|   |   templates\r\n|   |   |   dvadmin_third // uniapp项目目录\r\n|   |   |   h5 // 登录样式静态页面目录（编译后的，不建议修改）\r\n|   |   views\r\n|   |   |   __init__.py\r\n|   |   |   third_users.py\r\n|   |   __init__.py\r\n|   |   admin.py\r\n|   |   apps.py\r\n|   |   models.py\r\n|   |   settings.py\r\n|   |   urls.py\r\n|   setup.py\r\n```\r\n<br><br>\r\n### 方式一: 一键导入注册配置(不推荐不推荐，因为有大量的需要自定义的配置，如果需要一键导入，则要修改 dvadmin_third/settings.py)\r\n在 application / settings.py 插件配置中下导入默认配置\r\n```python\r\n...\r\nfrom dvadmin_third.settings import *\r\n```\r\n<br>\r\n\r\n### 方式二: 手动配置(推荐)\r\n在INSTALLED_APPS 中注册app（注意先后顺序）\r\n```python\r\nINSTALLED_APPS = [\r\n    ...\r\n    'dvadmin_third'\r\n]\r\n```\r\n\r\n在 application / urls.py 中注册url地址\r\n\r\n```python\r\nurlpatterns = [\r\n    ...\r\n    path(r'api/dvadmin_third/', include('dvadmin_third.urls')),\r\n]\r\n```\r\n\r\n如果没有系统redis，请启动redis并添加配置 (./conf/env.example.py 及 ./conf/env.py中添加如下配置)\r\n\r\n```python\r\n# redis 配置\r\nREDIS_PASSWORD = '' # 如果没密码就为空\r\nREDIS_HOST = '127.0.0.1'\r\nREDIS_URL = f'redis://:{REDIS_PASSWORD or \"\"}@{REDIS_HOST}:6379'\r\n\r\n```\r\n\r\n在 application / settings.py 下添加配置\r\n\r\n```python\r\n...\r\nCACHES = { # 配置缓存\r\n    \"default\": {\r\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\r\n        \"LOCATION\": f'{REDIS_URL}/1', # 库名可自选1~16\r\n        \"OPTIONS\": {\r\n            \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\",\r\n        }\r\n    },\r\n}\r\n\r\nTHIRD_TYPE_CONFIG = {\r\n    \"wx_official\": { # 微信公众号扫码登录配置\r\n        \"dev\": False, # 是否开启开发模式，开发模式需要另启一个uniapp服务\r\n        \"uniapp_address\": \"\", # 如果dev是True，则该键值必须填写\r\n        \"appid\": \"你的微信公众号appid\",\r\n        \"appsecret\": \"你的微信公众号appsecret\",\r\n        # 获取微信公众号登录授权的地址\r\n        \"api\": \"https://open.weixin.qq.com/connect/oauth2/authorize?appid={appid}&redirect_uri={redirect_uri}&response_type=code&scope={scope}&state={state}#wechat_redirect\",\r\n        # 登录方式，snsapi_base不弹窗直接登录(默认)|snsapi_userinfo弹窗用户确认登录\r\n        \"scope\": \"snsapi_base\",\r\n        # 确认登录后（默认自动确认）跳转的地址（后端的地址），就是上面的 redirect_uri 参数\r\n        \"confirm\": \"http://{local_ip}/api/dvadmin_third/confirm/wx_official_confirm_login/\",\r\n        # 用户确认登录后（默认自动确认），获取用户token的地址\r\n        \"token_api\": \"https://api.weixin.qq.com/sns/oauth2/access_token?appid={appid}&secret={secret}&code={code}&grant_type=authorization_code\",\r\n        # 拿到token后拉取用户信息的地址\r\n        \"userinfo_api\": \"https://api.weixin.qq.com/sns/userinfo?access_token={access_token}&openid={openid}&lang={lang}\",\r\n        # 拉取用户信息的语言，zh_CN简中(默认)|zh_TW繁中|en英文\r\n        \"userinfo_lang\": \"zh_CN\",\r\n\r\n        # 登录后的提示跳转地址（开发时的配置，address 参数就是uniapp的地址+端口）\r\n        \"loginStatusDev\": {\r\n            # 登录成功提示地址\r\n            \"success\": \"http://{address}/#/pages/loginstatus/success/\",\r\n            # 登录失败提示地址ess/\",\r\n            \"fail\": \"http://{address}/#/pages/loginstatus/fail/\",\r\n            # 无效二维码提示地址\r\n            \"invalid\": \"http://{address}/#/pages/loginstatus/invalidcode/\",\r\n            # 过期二维码提示地址\r\n            \"pastdue\": \"http://{address}/#/pages/loginstatus/pastduecode/\",\r\n            # 二维码已扫过提示地址\r\n            \"scanned\": \"http://{address}/#/pages/loginstatus/scannedcode/\",\r\n        },\r\n        # 登录后的提示跳转地址（uniapp编译后的配置，静态文件地址）（后端的地址）\r\n        \"loginStatus\": {\r\n            # 登录成功提示地址\r\n            \"success\": \"/api/dvadmin_third/index/#/pages/loginstatus/success/\",\r\n            # 登录失败提示地址ess/\",\r\n            \"fail\": \"/api/dvadmin_third/index/#/pages/loginstatus/fail/\",\r\n            # 无效二维码提示地址\r\n            \"invalid\": \"/api/dvadmin_third/index/#/pages/loginstatus/invalid/\",\r\n            # 过期二维码提示地址\r\n            \"pastdue\": \"/api/dvadmin_third/index/#/pages/loginstatus/pastdue/\",\r\n            # 二维码已扫过提示地址\r\n            \"scanned\": \"/api/dvadmin_third/index/#/pages/loginstatus/scanned/\",\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n### 进行迁移及初始化\r\n\r\n```shell\r\npython3 manage.py makemigrations \r\npython3 manage.py migrate \r\n# 注意备份初始化信息\r\npython3 manage.py init -y \r\n```\r\n\r\n### 扫码登录时序图（通用）\r\n![](./wx_official.jpg)\r\n\r\n## 开发注意\r\n先了解上面的时序图<br>\r\n扫码跳转相关的地址尽量用域名，在电脑里做本地域名解析（域名解析可以解析为任意ip）<br>\r\nAPP跳转不支持附带端口的操作（如127.0.0.1可以但127.0.0.1:80不可以；除非用的是域名而不是ip地址）<br>\r\n跳转的本质就是使用用户APP端内置的浏览器来进行跳转到目标地址，所以开发中的后端服务都用80端口<br>\r\n（微信扫码登录除外，其他所有的第三方扫码登录都是80或433端口）\r\n### 配置本地域名解析\r\n修改域名解析比如windows系统可以修改 C:\\Windows\\System32\\drivers\\etc\\hosts 文件，使用记事本打开<br>\r\n添加的代码格式是 （127.0.0.1 aaa.bbb.com）不能加端口,意思是把 aaa.bbb.com 域名解析到本地的 127.0.0.1 上<br>\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/huge-dream/dvadmin-third",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvadmin-third",
    "package_url": "https://pypi.org/project/dvadmin-third/",
    "platform": null,
    "project_url": "https://pypi.org/project/dvadmin-third/",
    "project_urls": {
      "Homepage": "https://gitee.com/huge-dream/dvadmin-third"
    },
    "release_url": "https://pypi.org/project/dvadmin-third/4.0.0/",
    "requires_dist": [
      "netifaces (>=0.11.0)",
      "django-redis (>=5.0.0)"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "dvadmin-third 插件是dvadmin的一个第三方用户管理插件，支持微信、企业微信、钉钉、飞书、H5页面扫码登录，支持扩展微信、企业微信、钉钉、飞书等用户信息类，以及SSO单点登录等功能(部分功能开发中)。",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17142575,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "801ed8dcb3b37cb5fdf1a830590a8141e283c67ad1d2b41df42a5fd8f6835458",
        "md5": "70dbf0a72e87cd1dc24dd8b4508f631a",
        "sha256": "a0cd623789d6b5157d3f585bf4eac8e639b8e7859d983920f2ffbedf8e834c0a"
      },
      "downloads": -1,
      "filename": "dvadmin_third-4.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70dbf0a72e87cd1dc24dd8b4508f631a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 809686,
      "upload_time": "2023-03-03T10:50:02",
      "upload_time_iso_8601": "2023-03-03T10:50:02.584951Z",
      "url": "https://files.pythonhosted.org/packages/80/1e/d8dcb3b37cb5fdf1a830590a8141e283c67ad1d2b41df42a5fd8f6835458/dvadmin_third-4.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "827eacf107662e4ed93e138ae852e311d078caca0358fafa7f571182973b42bf",
        "md5": "825917e3d6b6935584e55e52bd64f33c",
        "sha256": "68556ef66a34d05baf97f273d0540a38697c76fa9ae6c4be10e421d692ad60ff"
      },
      "downloads": -1,
      "filename": "dvadmin-third-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "825917e3d6b6935584e55e52bd64f33c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 774737,
      "upload_time": "2023-03-03T10:50:05",
      "upload_time_iso_8601": "2023-03-03T10:50:05.046963Z",
      "url": "https://files.pythonhosted.org/packages/82/7e/acf107662e4ed93e138ae852e311d078caca0358fafa7f571182973b42bf/dvadmin-third-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}