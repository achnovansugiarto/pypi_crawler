{
  "info": {
    "author": "Mindey",
    "author_email": "mindey@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![pypi](https://badge.fury.io/py/metadrive.svg)](https://badge.fury.io/py/metadrive)\n\n# Metadrive\n![alt txt](https://wiki.mindey.com/shared/screens/drivers.jpg)\n\nMetadrive helps users gather the information from different Internet resources (e.g. [Linkedin](https://linkedin.com), [HTH Worldwide](https://hthworldwide.com), etc). It provides one API to rule them all. To gather the information from this or that resource there must be so called driver written especially for the resource. There are drivers which already exist. For example,\n* Halfbakery: [halfbakery_driver](https://github.com/drivernet/halfbakery_driver)\n* HTH Worldwide: [hthworld_driver](https://github.com/drivernet/hthworld_driver)\n* Kompass: [kompass_driver](https://github.com/drivernet/kompass_driver)\n* Linkedin: [linkedin_driver](https://github.com/drivernet/linkedin_driver)\n* Metaculus: [metaculus_driver](https://github.com/drivernet/metaculus_driver)\n* ResearchGate: [researchgate_driver](https://github.com/drivernet/researchgate_driver)\n* Versli Lietuva: [verslilietuva_driver](https://github.com/drivernet/verslilietuva_driver)\n\nSome of the drivers are awaiting to be implemented. Studying the Metadrive API will help developers to write the drivers for those resources which are needed them right now. A unified API is the killer feature of Metadrive and allows writing drivers to have a unified UI to the whole world.\n\n## Prepare machine\n```\nsudo apt install virtualenv python3.7 python3.7-dev build-essential chromium-browser chromium-chromedriver\n```\n\n## Installation\n\nThe guide provides for the instructions on how to install Metadrive to a virtual environment, so create and activate it first, running the following commands:\n\n```\nvirtualenv -p python3.7 metadrive-env\n. ./metadrive-env/bin/activate\n```\n\nThen, install Metadrive from its source code\n\n```\ngit clone https://github.com/wefindx/metadrive.git\ncd metadrive\npip install -e .\n```\n\nor from its package\n\n```\npip install metadrive\n```\n\nFinally, run Metadrive, executing\n\n```\nprovide\n```\n\nThe command above will ask you to type your GitHub username. When you are done, the `.metadrive/config` will be created in your home directory and the server will start. The example of how `.metadrive/config` may look like:\n\n```\n[GITHUB]\nusername = mindey\n\n[API]\nhost = 0.0.0.0\nport = 7000\n\n[CONSOLE]\nhost = 0.0.0.0\nport = 7000\n\n[DRIVER_BACKENDS]\nchrome = /usr/bin/chromedriver\n```\n\nHowever, `provide` does not auto-reload and requires re-running, so if you want to run Metadrive for the development purposes, interrupt the `provide` process and execute the following command\n\n```\nuvicorn metadrive.api:app --debug\n```\n\n### Installing drivers\n\nAfter finishing the Metadrive installation you may check the drivers available right now.\n\n```\n$ curl http://127.0.0.1:7000/drivers\n[]\n```\n\nSo, there are no drivers and it's ok since they have to be installed separately.\n\nChoose one of the above-mentioned drivers. Let's say it's `linkedin_driver`. Execute the following command to install it\n\n```\npip install linkedin_driver\n```\n\nand run the second-to-last command one more time\n\n```\n$ curl http://127.0.0.1:7000/drivers\n[{\"id\":\"http://0.0.0.0:7000/driver/linkedin-driver\",\"site\":\"https://www.linkedin.com\",\"package\":\"linkedin-driver==0.1.8\"}]\n```\n\nHere's the driver which has just been installed.\n\n## Android\n\nIf installed on Termux (Android), needs:\n```\npkg i clang\npkg i make\npkg i python-dev\npkg i libcrypt-dev\npkg i libffi-dev\npkg i openssl\npkg i openssl-dev\npkg i openssl-tool\npkg i libjpeg-turbo-dev\nLDFLAGS=\"-L/system/lib/\" CFLAGS=\"-I/data/data/com.termux/files/usr/include/\" pip install Pillow\nOR LIBRARY_PATH=\"/system/lib\" CPATH=\"$PREFIX/include\" pip install pillow\n```\n## Extras\n\nAs a plugin, data normalization package is available, to use it, install:\n```\npip install -U --extra-index-url https://pypi.wefindx.io/ metaform --no-cache\n```\n\nthen, pass `?normalize=true` as URL parameter as part of `POST` requests. The data `results` key will be normalized.\n\n## Authors\n\nSee [AUTHORS](AUTHORS.md).\n\n## Licensing\n\nmetadrive is available under the [Apache License, Version 2.0](LICENSE).\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/wefindx/metadrive",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metadrive",
    "package_url": "https://pypi.org/project/metadrive/",
    "platform": "",
    "project_url": "https://pypi.org/project/metadrive/",
    "project_urls": {
      "Homepage": "https://gitlab.com/wefindx/metadrive"
    },
    "release_url": "https://pypi.org/project/metadrive/1.4.10.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Integration of controllers to drive tools.",
    "version": "1.4.10.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14757728,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb0bd92c25fdec372e3b81e915fa5a5995a700201db86702207982ce2bd952d7",
        "md5": "fba83ac81862f5ca172876e54ef73a87",
        "sha256": "fb8170e44fd5926a8fb88071e249bd0e901e3704024b60ea3c8091041c1299dc"
      },
      "downloads": -1,
      "filename": "metadrive-1.4.10.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fba83ac81862f5ca172876e54ef73a87",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 660096,
      "upload_time": "2019-04-22T05:58:33",
      "upload_time_iso_8601": "2019-04-22T05:58:33.233125Z",
      "url": "https://files.pythonhosted.org/packages/cb/0b/d92c25fdec372e3b81e915fa5a5995a700201db86702207982ce2bd952d7/metadrive-1.4.10.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}