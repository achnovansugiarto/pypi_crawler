{
  "info": {
    "author": "Mindey",
    "author_email": "mindey@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Metadrive\n\n## Prepare machine\n```\nsudo apt install virtualenv python3.7 python3.7-dev build-essential chromium-browser chromium-chromedriver\n```\n\n## Develop\n```\ngit clone git@github.com:wefindx/metadrive.git && cd metadrive\nvirtualenv -ppython3.7 .env && . .env/bin/activate\npip install -e .\n```\n### First run\n```\n$ provide\n```\n\n```\nuvicorn metadrive.api:app --debug\n```\n\n### Default ~/.metadrive/.config example:\n`docker run -d -p 4444:4444 selenium/standalone-chrome`\n\n```\n[GITHUB]\nusername = mindey\n\n[API]\nhost = 0.0.0.0\nport = 7000\n\n[CONSOLE]\nhost = 0.0.0.0\nport = 7001\n\n[DRIVER_BACKENDS]\nchrome = http://0.0.0.0:4444/wd/hub\n\n[GPG]\nkey = 5AFDB16B89805133F450688BDA580D1D5F5CC7AD\n\n[PROXIES]\nhttp =\nhttps =\n```\n\n\n## Usage\n\nBasic Installation:\n```\npip install metadrive\n```\n\n(check installation requirements for specific systems at the bottom)\n\n## Driver package structure:\n```\n.\n├── driver_name\n│   ├── __init__.py   # _login(), and an items generator function _harvest()\n│   └── api.py        # classes, that define methods _get() and _filter() generators.\n├── README.md\n└── setup.py\n```\n\n### Defualt files structure\n\n```\n__init__.py file:\n=====================\n _login(): authentication function\n\n _harvest(): default downloading function\n\napi.py file:\n============\n Classes represent data types available in data source of driver package.\n Methods represent way to query for objects in the data source.\n\n @classmethod\n _filter(): Returns a generator of the objects of the class.\n\n @classmethod\n _get(): Returns a method to retrieve a single object.\n\n @classmethod\n _update(): A method to update or delete the object in source by ID.\n```\n\n1. Publish drivers on `PyPI`.\n\n2. Reference them on `-` wikis on GitHub (example: [https://github.com/mindey/-/wiki/topic#halfbakery](https://github.com/mindey/-/wiki/topic#halfbakery).\n\n3. Use, like `harvest https://github.com/mindey/-/wiki/topic#halfbakery -o my_data`.\n\nAlternatively, to database:\n`harvest https://github.com/user/-/wiki/concept\\#source --db mongodb://username:password@hostname:27017/db_name/collection`\n\nMore advanced usage will be covered in the future.\n\n## About\n\nThe package that introduces simple generic interfaces to the objects within web APIs, allowing for generation (searching), and management of items on the web systems.\n\nThe drivers listed in [drivers.py](https://github.com/wefindx/metadrive/blob/master/metadrive/drivers.py) shall define controllers services and machines, to serialize data in [MFT-1](https://book.mindey.com/metaformat/0002-data-object-format/0002-data-object-format.html), making them convenient to automatically operate with [metaform](https://pypi.org/project/metaform/)). This list of drivers is to be provided in a distributed fashion, i.e., with GunDB.\n\nWhen writing drivers, optionally define `login()` function, and some generator function `harvest(limit=limit)` function in `__init__.py`. The generator function needs to return elements, where `-` key is the URL of the items.\n\nInstallation may require `ncurses`.\n\n`$ harvest <resource>`\nThe first command allows to crawl custom source.\n\n`$ provide`\nThe second command serves the API to the APIs and data.\n\n`$ console`\nStarts console application with `get(), list(), update()` methods to manage index of all available controllers ( drivers ), and get data.\n\n`$ consume`\nStarts a GUI-based application to manage index of all available controllers ( drivers ), and interact with data objects visually.\n\n\n# TODO\n\n## Web information services\n\n**Industrial and Medical Equipment**\n**Metal printers** ([https://www.aniwaa.com/best-of/3d-printers/best-metal-3d-printer/#The_best_metal_3D_printers_in_2018](https://www.aniwaa.com/best-of/3d-printers/best-metal-3d-printer/#The_best_metal_3D_printers_in_2018)), **CNC Machines** ( [https://github.com/Nikolay-Kha/PyCNC#readme](https://github.com/Nikolay-Kha/PyCNC#readme), [https://mmi-direct.com/machines/search/?make_id=&page=brand](https://mmi-direct.com/machines/search/?make_id=&page=brand)).\n\n**Products**\nTaobao, 天猫, Alibaba, Amazon, EBay,...\n\n**Business data**\n￼\nFlights ( flightradar24.com ), Skyscanner ( skyscanner.com ), Weather ( windy.com ), Human ( biodigital.com ), Ships ( marinetraffic.com ), Deaths ( https://www.cdc.gov/nchs/data_access/vitalstatsonline.htm ), Companies ( opencorporates.com, etc.), Oil Miners ( http://aleph.openoil.net/ ),...\n\n**Common services**\nGmail API ( get all your mails ), LinkedIn, Google Plus, Twitter, Weibo, Telegram, WeChat, Kik, KakoTalk, Line, WhatsApp, Quora, Kr36, MeetUp, 知乎, Huodongxing, YouTube, YouKu, Vimeo,...\n\n## Private PyPI repository of drivers\n## Private organization '-' repository\n\n# Installation requirements\n\n## Android\n\nIf installed on Termux (Android), needs:\n```\npkg i clang\npkg i make\npkg i python-dev\npkg i libcrypt-dev\npkg i libffi-dev\npkg i openssl\npkg i openssl-dev\npkg i openssl-tool\npkg i libjpeg-turbo-dev\nLDFLAGS=\"-L/system/lib/\" CFLAGS=\"-I/data/data/com.termux/files/usr/include/\" pip install Pillow\nOR LIBRARY_PATH=\"/system/lib\" CPATH=\"$PREFIX/include\" pip install pillow\n```\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/wefindx/metadrive",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metadrive",
    "package_url": "https://pypi.org/project/metadrive/",
    "platform": "",
    "project_url": "https://pypi.org/project/metadrive/",
    "project_urls": {
      "Homepage": "https://gitlab.com/wefindx/metadrive"
    },
    "release_url": "https://pypi.org/project/metadrive/1.2.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Integration of controllers to drive tools.",
    "version": "1.2.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14757728,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ff29cd09714d1799e3c9cc5710110840aba464dd306c5432f9d097670d146f4",
        "md5": "434789cf78b3515675aed227a329f0f0",
        "sha256": "578231a532d203ae7b1e00dfa335ed3479b6dc6db5339ee63d975f2babf4fdd8"
      },
      "downloads": -1,
      "filename": "metadrive-1.2.9.tar.gz",
      "has_sig": false,
      "md5_digest": "434789cf78b3515675aed227a329f0f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43249,
      "upload_time": "2019-03-22T09:27:25",
      "upload_time_iso_8601": "2019-03-22T09:27:25.087537Z",
      "url": "https://files.pythonhosted.org/packages/2f/f2/9cd09714d1799e3c9cc5710110840aba464dd306c5432f9d097670d146f4/metadrive-1.2.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}