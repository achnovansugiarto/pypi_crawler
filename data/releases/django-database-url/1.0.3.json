{
  "info": {
    "author": "Rati Matchavariani",
    "author_email": "rati.matchavariani@hellotend.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "DJ-Database-URL\n~~~~~~~~~~~~~~~\n\n.. image:: https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fjacobian%2Fdj-database-url%2Fbadge&style=for-the-badge\n   :target: https://actions-badge.atrox.dev/jacobian/dj-database-url/goto\n\nThis simple Django utility allows you to utilize the\n`12factor <http://www.12factor.net/backing-services>`_ inspired\n``DATABASE_URL`` environment variable to configure your Django application.\n\nThe ``dj_database_url.config`` method returns a Django database connection\ndictionary, populated with all the data specified in your URL. There is\nalso a `conn_max_age` argument to easily enable Django's connection pool.\n\nIf you'd rather not use an environment variable, you can pass a URL in directly\ninstead to ``dj_database_url.parse``.\n\nSupported Databases\n-------------------\n\nSupport currently exists for PostgreSQL, PostGIS, MySQL, MySQL (GIS),\nOracle, Oracle (GIS), Redshift, and SQLite.\n\nInstallation\n------------\n\nInstallation is simple::\n\n    $ pip install dj-database-url\n\nUsage\n-----\n\nConfigure your database in ``settings.py`` from ``DATABASE_URL``::\n\n    import dj_database_url\n\n    DATABASES['default'] = dj_database_url.config(conn_max_age=600)\n\nProvide a default::\n\n    DATABASES['default'] = dj_database_url.config(default='postgres://...')\n\nParse an arbitrary Database URL::\n\n    DATABASES['default'] = dj_database_url.parse('postgres://...', conn_max_age=600)\n\nThe ``conn_max_age`` attribute is the lifetime of a database connection in seconds\nand is available in Django 1.6+. If you do not set a value, it will default to ``0``\nwhich is Django's historical behavior of using a new database connection on each\nrequest. Use ``None`` for unlimited persistent connections.\n\nURL schema\n----------\n\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| Engine      | Django Backend                                | URL                                              |\n+=============+===============================================+==================================================+\n| PostgreSQL  | ``django.db.backends.postgresql`` [1]_        | ``postgres://USER:PASSWORD@HOST:PORT/NAME`` [2]_ |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| PostGIS     | ``django.contrib.gis.db.backends.postgis``    | ``postgis://USER:PASSWORD@HOST:PORT/NAME``       |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| MSSQL       | ``sql_server.pyodbc``                         | ``mssql://USER:PASSWORD@HOST:PORT/NAME``         |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| MySQL       | ``django.db.backends.mysql``                  | ``mysql://USER:PASSWORD@HOST:PORT/NAME``         |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| MySQL (GIS) | ``django.contrib.gis.db.backends.mysql``      | ``mysqlgis://USER:PASSWORD@HOST:PORT/NAME``      |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| SQLite      | ``django.db.backends.sqlite3``                | ``sqlite:///PATH`` [3]_                          |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| SpatiaLite  | ``django.contrib.gis.db.backends.spatialite`` | ``spatialite:///PATH`` [3]_                      |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| Oracle      | ``django.db.backends.oracle``                 | ``oracle://USER:PASSWORD@HOST:PORT/NAME`` [4]_   |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| Oracle (GIS)| ``django.contrib.gis.db.backends.oracle``     | ``oraclegis://USER:PASSWORD@HOST:PORT/NAME``     |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n| Redshift    | ``django_redshift_backend``                   | ``redshift://USER:PASSWORD@HOST:PORT/NAME``      |\n+-------------+-----------------------------------------------+--------------------------------------------------+\n\n.. [1] The django.db.backends.postgresql backend is named django.db.backends.postgresql_psycopg2 in older releases. For\n       backwards compatibility, the old name still works in newer versions. (The new name does not work in older versions).\n.. [2] With PostgreSQL, you can also use unix domain socket paths with\n       `percent encoding <http://www.postgresql.org/docs/9.2/interactive/libpq-connect.html#AEN38162>`_:\n       ``postgres://%2Fvar%2Flib%2Fpostgresql/dbname``.\n.. [3] SQLite connects to file based databases. The same URL format is used, omitting\n       the hostname, and using the \"file\" portion as the filename of the database.\n       This has the effect of four slashes being present for an absolute file path:\n       ``sqlite:////full/path/to/your/database/file.sqlite``.\n.. [4] Note that when connecting to Oracle the URL isn't in the form you may know\n       from using other Oracle tools (like SQLPlus) i.e. user and password are separated\n       by ``:`` not by ``/``. Also you can omit ``HOST`` and ``PORT``\n       and provide a full DSN string or TNS name in ``NAME`` part.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tend/dj-database-url",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-database-url",
    "package_url": "https://pypi.org/project/django-database-url/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-database-url/",
    "project_urls": {
      "Homepage": "https://github.com/tend/dj-database-url"
    },
    "release_url": "https://pypi.org/project/django-database-url/1.0.3/",
    "requires_dist": [
      "django (>3.2)"
    ],
    "requires_python": "",
    "summary": "Use Database URLs in your Django Application.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14202282,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37d52ae1392790cdecaa49f330acfc39983e4a4021f2da407e634930ded9ba2a",
        "md5": "1e60e412159b9882574309046c7e7000",
        "sha256": "d2e652fd9f4435b80725ad15691d7ea33ead56950614b9acc451c778f8bd2a1f"
      },
      "downloads": -1,
      "filename": "django_database_url-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e60e412159b9882574309046c7e7000",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5669,
      "upload_time": "2022-01-11T15:28:13",
      "upload_time_iso_8601": "2022-01-11T15:28:13.661928Z",
      "url": "https://files.pythonhosted.org/packages/37/d5/2ae1392790cdecaa49f330acfc39983e4a4021f2da407e634930ded9ba2a/django_database_url-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca3aae60cee85877e634b2e48807942bdc0959fe12f26db6b3da365a3f1d2c01",
        "md5": "fdcfa91de4e40026269bf5c4f8d434c8",
        "sha256": "141077780995d38c4a68a0d32d5affb016f288f54ff4f6296a9f1fee9e44aae3"
      },
      "downloads": -1,
      "filename": "django-database-url-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fdcfa91de4e40026269bf5c4f8d434c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5547,
      "upload_time": "2022-01-11T15:28:15",
      "upload_time_iso_8601": "2022-01-11T15:28:15.386186Z",
      "url": "https://files.pythonhosted.org/packages/ca/3a/ae60cee85877e634b2e48807942bdc0959fe12f26db6b3da365a3f1d2c01/django-database-url-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}