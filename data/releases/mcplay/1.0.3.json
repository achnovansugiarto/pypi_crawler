{
  "info": {
    "author": "Michael Tatton",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Terminals"
    ],
    "description": "\n                            .__\n        _____   ____ ______ |  | _____  ___.__.\n       /     \\_/ ___\\\\____ \\|  | \\__  \\<   |  |\n      |  Y Y  \\  \\___|  |_> >  |__/ __ \\\\___  |\n      |__|_|  /\\___  >   __/|____(____  / ____|\n            \\/     \\/|__|             \\/\\/\n      \n      ---== mcplayer ==---\n      music console player \n        mmxxii edition \n      ---== ------- ===---\n        \n![MCPLAYER SCREEN](https://raw.githubusercontent.com/mtatton/mcplay/master/mcplay.png)\n\nDescription:\n\n        play is a curses front-end for various audio players, based on\n        cplay. It aims to provide a power-user-friendly interface with\n        simple filelist and playlist control. play is written in\n        Python and can use either pyncurses or the standard curses\n        module.\n\nUsage:\n\n        play [-nrRv] [ file | dir | playlist | url ] ...\n\n        When in doubt, press 'h' for a friendly help page.\n\nKeyboard controls:\n\n        Global                               t, T  : tag current/regex\n        ------                               u, U  : untag current/regex\n        Up, Down, k, j, C-p, C-n,            Sp, i : invert current/all\n        PgUp, PgDn, K, J,                    !, ,  : shell, macro\n        Home, End, g, G : movement\n        Enter           : chdir or play      Filelist\n        Tab             : filelist/playlist  --------\n        n, p            : next/prev track    a     : add (tagged) to playlist\n        z, x            : toggle pause/stop  s     : recursive search\n                                             BS, o : goto parent/specified dir\n        Left, Right,                         m, '  : set/get bookmark\n        C-f, C-b    : seek forward/backward\n        C-a, C-e    : restart/end track      Playlist\n        C-s, C-r, / : isearch                --------\n        C-g, Esc    : cancel                 d, D  : delete (tagged) tracks/playlist\n        1..9, +, -  : volume control         m, M  : move tagged tracks after/before\n        c, v        : counter/volume mode    r, R  : toggle repeat/Random mode\n        <, >        : horizontal scrolling   s, S  : shuffle/Sort playlist\n        C-l, l      : refresh, list mode     w, @  : write playlist, jump to active\n        h, q, Q     : help, quit?, Quit!     X     : stop playlist after each track\n\nMiscellaneous:\n\n        In order for either mp3info (ID3) or ogginfo to work, both\n        corresponding python modules have to be installed. Play can\n        use 'id3-py' or 'pyid3lib' for MP3 tags, and 'pyvorbis' for\n        OGG tags.\n\n        A playlist can contain URLs, but the playlist itself will have\n        to be local. For mpeg streaming use splay or mplayer.\n\n        It is also possible to pipe a playlist to play, as stdin will\n        be reopened on startup unless it is attached to a tty.\n\n        Remote control is available through /tmp/play-control-$USER.\n\nAuthors:\n\n        play is being maintained by Adrian C. After waiting over 2\n        years for cplay's home, and code, to resurface it was finally\n        forked. This exceptional software, originally written by Ulf\n        Betlehem, should not be forgotten.\n\n        MPlayer support was added to play from the excellent work done\n        by Tom Adams and Tomi Pievilainen on GitHub.com.\n\n        I basically just ripped it from\n        http://git.sysphere.org/play/\n        and modified it and put it on my github for convenience. I got tired\n        of it not working the way I wanted it to. That is using only mplayer\n        and then maybe to add gif/jpeg support again which I had working in\n        a copy somewhere .... no credit to me what so ever.\n        gusten@dindinoh.net\n\n        20220115 Some basic conversion to python3 has been done. I tested\n        just several functions on Python 3.7. It does read the directory,\n        it does play the m3u. More testing to be done. (dev@null)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mtatton/mcplay",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcplay",
    "package_url": "https://pypi.org/project/mcplay/",
    "platform": null,
    "project_url": "https://pypi.org/project/mcplay/",
    "project_urls": {
      "Homepage": "https://github.com/mtatton/mcplay"
    },
    "release_url": "https://pypi.org/project/mcplay/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Music Console Player",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13347723,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7173c785eecb39b2e8e36f00e6d420b1c3e09c4f692cc77220cc05dc6987c4fa",
        "md5": "d39de6db454af143f2a8879544341f2f",
        "sha256": "92a54cd174dde0bf977d37a21cd2983bc619c715ba22a0ea56d171f117ec9f3c"
      },
      "downloads": -1,
      "filename": "mcplay-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d39de6db454af143f2a8879544341f2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25293,
      "upload_time": "2022-03-30T14:46:23",
      "upload_time_iso_8601": "2022-03-30T14:46:23.064138Z",
      "url": "https://files.pythonhosted.org/packages/71/73/c785eecb39b2e8e36f00e6d420b1c3e09c4f692cc77220cc05dc6987c4fa/mcplay-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}