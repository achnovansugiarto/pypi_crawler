{
  "info": {
    "author": "Mohamad Rezaie",
    "author_email": "m.rezaie94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DRF User Activity Tracker Mongodb\n## _Log All User Activities_\n\n![version](https://img.shields.io/badge/version-1.3.4-blue.svg)\n[![Open Source](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://opensource.org/)\n<a href=\"https://github.com/bigmo94/drf-user-activity-tracker-mongodb\"><img src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\" alt=\"GitHub\"/></a>\n\nAn API Logger of User Activity for your Django Rest Framework project.\n\nIt logs all the API information for content type \"application/json\" in mongo database.\n\nNote: It logs just API information for registered user. (Anonymous User Activities are ignored. But It's possible to log api without user id by add their url names in DRF_ACTIVITY_TRACKER_DONT_SKIP_URL_NAME attribute in settings.py) \n\n1. User_ID\n2. URL_PATH\n3. URL_NAME\n4. Request Body\n5. Request Headers\n6. Request Method\n7. API Response\n8. Status Code\n9. API Call Time\n10. Server Execution Time\n11. Client IP Address\n12. Client Country Name\n\nYou can log API information into the database or listen to the logger signals for different use-cases, or you can do both.\n\n* The logger usage a separate thread to run, so it won't affect your API response time.\n\n## Requirements\n* Django\n* Django Rest Framework\n* Simple JWT\n* Pymongo\n* pygeoip\n\n## Installation\n\nInstall or add drf-user-activity-tracker.\n```shell script\npip install drf-user-activity-tracker-mongodb\n```\n\nAdd in INSTALLED_APPS\n```python\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'drf_user_activity_tracker_mongodb',  #  Add here\n]\n```\n\nAdd in MIDDLEWARE\n```python\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\n    'drf_user_activity_tracker_mongodb.middleware.activity_tracker_middleware.ActivityTrackerMiddleware', # Add here\n]\n```\n\n#### * Add these lines in Django settings file.\nNote: `The user_id must be in the access token's payload. and 'access' key must be in login response data.`\n## Store logs into the database\nLog every request into the database.\n```python\nDRF_ACTIVITY_TRACKER_DATABASE = True  # Default to False\n```\n\n* Logs will be available in Django Admin Panel.\n\n* The search bar will search in Request Body, Response, Headers and API URL.\n\n\nNote: You don't need to migrate if you don't want use history api'.\n\n## Set Mongodb settings\nSpecify the mongodb config:\n```\nDRF_ACTIVITY_TRACKER_MONGO_DB_NAME = 'database_name'\nDRF_ACTIVITY_TRACKER_MONGO_DB_COLLECTION_NAME = 'collection_name'\nDRF_ACTIVITY_TRACKER_MONGO_CONNECTION = 'mongodb://{username}:{password}@{host}'\n```\n## Limit rows of django admin per page\nAdd this line to settings.py:\n```\nDRF_ACTIVITY_TRACKER_DJANGO_ADMIN_LIMIT = 50 , # Default is 50\n```\n## To listen for the logger signals.\nListen to the signal as soon as any API is called. So you can log the API data into a file or for different use-cases.\n```python\nDRF_ACTIVITY_TRACKER_SIGNAL = True  # Default to False\n```\nExample code to listen to the API Logger Signal.\n```python\n\"\"\"\nImport ACTIVITY_TRACKER_SIGNAL\n\"\"\"\nfrom drf_user_activity_tracker import ACTIVITY_TRACKER_SIGNAL\n\n\n\"\"\"\nCreate a function that is going to listen to the API logger signals.\n\"\"\"\ndef listener_one(**kwargs):\n    print(kwargs)\n\ndef listener_two(**kwargs):\n    print(kwargs)\n\n\"\"\"\nIt will listen to all the API logs whenever an API is called.\nYou can also listen signals in multiple functions.\n\"\"\"\nACTIVITY_TRACKER_SIGNAL.listen += listener_one\nACTIVITY_TRACKER_SIGNAL.listen += listener_two\n\n\"\"\"\nUnsubscribe to signals.\n\"\"\"\n\nACTIVITY_TRACKER_SIGNAL.listen -= listener_one\n```\n\n### Queue\n\nDRF ACTIVITY TRACKER usage queue to hold the logs before inserting into the database. Once queue is full, it bulk inserts into the database.\n\nSpecify the queue size.\n```python\nDRF_ACTIVITY_TRACKER_QUEUE_MAX_SIZE = 50  # Default to 50 if not specified.\n```\n\n### Interval\n\nDRF ACTIVITY TRACKER also waits for a period of time. If queue is not full and there are some logs to be inserted, it inserts after interval ends.\n\nSpecify an interval (In Seconds).\n```python\nDRF_ACTIVITY_TRACKER_INTERVAL = 10  # In Seconds, Default to 10 seconds if not specified.\n```\nNote: The API call time (created_time) is a timezone aware datetime object. It is actual time of API call irrespective of interval value or queue size.\n### Skip namespace\nYou can skip the entire app to be logged into the database by specifying namespace of the app as list.\n```python\nDRF_ACTIVITY_TRACKER_SKIP_NAMESPACE = ['APP_NAMESPACE1', 'APP_NAMESPACE2']\n```\n\n### Skip URL Name\nYou can also skip any API to be logged by using url_name of the API.\n```python\nDRF_ACTIVITY_TRACKER_SKIP_URL_NAME = ['url_name1', 'url_name2']\n```\n\n### DON'T Skip URL Name\nYou can also set `DRF_ACTIVITY_TRACKER_DONT_SKIP_URL_NAME` in settings.py to logs api that does not have a user id.\n```python\nDRF_ACTIVITY_TRACKER_DONT_SKIP_URL_NAME = ['url_name1', 'url_name2']\n```\n\nNote: It does not log Django Admin Panel API calls and history logs list API calls.\n\n### Hide Sensitive Data From Logs\nYou may wish to hide sensitive information from being exposed in the logs. \nYou do this by setting `DRF_ACTIVITY_TRACKER_EXCLUDE_KEYS` in settings.py to a list of your desired sensitive keys. \nThe default is\n```python\nDRF_ACTIVITY_TRACKER_EXCLUDE_KEYS = ['password', 'token', 'access', 'refresh']\n# Sensitive data will be replaced with \"***FILTERED***\".\n```\n\n### Want to log only selected request methods? (Optional)\nYou can log only selected methods by specifying `DRF_ACTIVITY_TRACKER_METHODS` in settings.py.\n```python\nDRF_ACTIVITY_TRACKER_METHODS = ['GET', 'POST', 'DELETE', 'PUT']  # Default to empty list (Log all the requests).\n```\n\n### Want to see the API information in local timezone? (Optional)\nYou can also change the timezone by specifying `DRF_ACTIVITY_TRACKER_TIMEDELTA` in settings.py.\nIt won't change the Database timezone. It will still remain UTC or the timezone you have defined.\n```python\nDRF_ACTIVITY_TRACKER_TIMEDELTA = 330 # UTC + 330 Minutes = IST (5:Hours, 30:Minutes ahead from UTC) \n# Specify in minutes.\n```\n```python\n# Yoc can specify negative values for the countries behind the UTC timezone.\nDRF_ACTIVITY_TRACKER_TIMEDELTA = -30  # Example\n```\n\n### API with or without Host\nYou can specify an endpoint of API should have absolute URI or not by setting this variable in DRF settings.py file.\n```python\nDRF_ACTIVITY_TRACKER_PATH_TYPE = 'ABSOLUTE'  # Default to ABSOLUTE if not specified\n# Possible values are ABSOLUTE, FULL_PATH or RAW_URI\n```\n\nConsidering we are accessing the following URL: http://127.0.0.1:8000/api/v1/?page=123\nDRF_ACTIVITY_TRACKER_PATH_TYPE possible values are:\n1. ABSOLUTE (Default) :   \n\n    Function used ```request.build_absolute_uri()```\n    \n    Output: ```http://127.0.0.1:8000/api/v1/?page=123```\n    \n2. FULL_PATH\n\n    Function used ```request.get_full_path()```\n    \n    Output: ```/api/v1/?page=123```\n    \n3. RAW_URI\n\n    Function used ```request.get_raw_uri()```\n    \n    Output: ```http://127.0.0.1:8000/api/v1/?page=123```\n    \n    Note: Similar to ABSOLUTE but skip allowed hosts protection, so may return an insecure URI.\n\n\n\n### API Call For History Of Activities By Users Or Admin \n\nAdd in your_project_root/project_name/urls.py\n```\nurlpatterns = [\n    path('service_admin_zone/', admin.site.urls),\n    path('activity-logs/', include('drf_user_activity_tracker.urls')),\n]\n```\n##### Access to this API by following URL:\n{{ your_base_url }}/activity-logs/user-history/\n{{ your_base_url }}/activity-logs/admin-history/\n\n`for calling admin history api; you must have 'can view avtivity log' permission. or add DRF_ACTIVITY_TRACKER_PERMISSION in settings.py and add your permission in a string format.`\n```\nDRF_ACTIVITY_TRACKER_PERMISSION = 'customers.can_view_logs'\n```\n##### The response includes these:\n\n1. id\n2. event_name\n3. client_ip_address\n4. created_time\n\n\n##### available query param filters\n* created_time_after\n* created_time_before\n* limit\n* offset\n\n#### Set event names\n\nBy default event name is url_name. You can also change the event name by specifying `DRF_ACTIVITY_TRACKER_EVENT_NAME` in settings.py.\nyou can run this command to get dictionary of all urls name:\n```\npython manage.py get_url_names\n```\nand then copy the dictionary to settings.py:\n```python\nDRF_ACTIVITY_TRACKER_EVENT_NAME = {\n        'user_register': 'Registeration',\n        'orders-redeem': 'Redeem Card',\n}\nDRF_ACTIVITI_API_LIMIT = 100  #for count of api results, default is 100.\n```\n#### Prevent user to see some activities in history endpoint\nBy default all activities are shown in user history endpoint. you can add specific url name that you don't want to show to the user in `DRF_ACTIVITI_API_UNNECESSARY_URL_NAME` attribute in settings.py and then the user can not be able to see them. \nNote: This attribute must be a list.\n\n#### Excluding specific url names in django admin panel\nNote: In django admin panel you can filter logs by url name. some url name do not appear in filter list. you can set `DRF_ACTIVITY_TRACKER_URL_NAMES` in settings with the list of url names that you want to be filtered by.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bigmo94/drf-user-activity-tracker-mongodb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-user-activity-tracker-mongodb",
    "package_url": "https://pypi.org/project/drf-user-activity-tracker-mongodb/",
    "platform": null,
    "project_url": "https://pypi.org/project/drf-user-activity-tracker-mongodb/",
    "project_urls": {
      "Homepage": "https://github.com/bigmo94/drf-user-activity-tracker-mongodb"
    },
    "release_url": "https://pypi.org/project/drf-user-activity-tracker-mongodb/1.3.5/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A Django app to logs users activities in mongodb database.",
    "version": "1.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15742775,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "caa4e81bf1b2f8c0f5134dd65009991775ca6bcec23fcda50584f282ed87d7dd",
        "md5": "55099dfe129447e1add0ee5fa01a2f3a",
        "sha256": "bb3ec384a2fa0de4d8b78d7927b9e5bcb878a82373ff89bca873dbf2fe58c1f5"
      },
      "downloads": -1,
      "filename": "drf-user-activity-tracker-mongodb-1.3.5.tar.gz",
      "has_sig": false,
      "md5_digest": "55099dfe129447e1add0ee5fa01a2f3a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 2415825,
      "upload_time": "2022-11-12T07:44:46",
      "upload_time_iso_8601": "2022-11-12T07:44:46.288805Z",
      "url": "https://files.pythonhosted.org/packages/ca/a4/e81bf1b2f8c0f5134dd65009991775ca6bcec23fcda50584f282ed87d7dd/drf-user-activity-tracker-mongodb-1.3.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}