{
  "info": {
    "author": "Martin Sandstr√∂m",
    "author_email": "martin@marteinn.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Utilities"
    ],
    "description": "|Build Status|\n\nDjango-Log-Trigger\n==================\n\nA django app for simulating exceptions and logging calls of various\nlevels through http. Its perfect when you want to try out your LOGGING\nsettings.\n\nInstalling\n----------\n\nStable\n~~~~~~\n\n``pip install django-log-trigger``\n\nDevelop\n~~~~~~~\n\n``pip install git+git://github.com/marteinn/django-log-trigger.git@develop``\n\nGetting started\n---------------\n\n1. Add ``log_trigger`` to installed apps\n\n   ::\n\n       INSTALLED_APPS = [\n           'pages',\n           'pizza',\n           ...\n           'log_trigger',\n       ]\n\n2. Add ``log_trigger.urls`` to your ``urls.py``\n\n   ::\n\n       import log_trigger\n\n       urlpatterns = [\n           url(r'^api/', include('api.urls')),\n           url(r'^log-trigger/', include(log_trigger.urls)),\n           ...\n\n3. Done!\n\nUsage\n-----\n\nOpen your browser and visit any of these urls.\n\nExceptions\n~~~~~~~~~~\n\n-  ``/log-trigger/system-exception/``: Trigger system exception\n-  ``/log-trigger/unhandled-exception/``: Trigger unhandled exception\n\nLogging\n~~~~~~~\n\n-  ``/log-trigger/debug-logging/``: Debug logging\n-  ``/log-trigger/info-logging/``: Info logging\n-  ``/log-trigger/warn-logging/``: Warn logging\n-  ``/log-trigger/error-logging/``: Error logging\n-  ``/log-trigger/critical-logging/``: Critical logging\n\nConfiguration\n-------------\n\n``LOG_TRIGGER_LOGGER_NAME``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: ``log_trigger.views``\n\nThe logger you want to use when testing the logging endpoints.\n\n``LOG_TRIGGER_SECRET``\n~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: Empty\n\nUse the param if you want to secure your testing endpoints, the secret\nare passed along as a get variable. Example:\n``/debug-logging/?secret=mysecret``\n\nContributing\n------------\n\nWant to contribute? Awesome. Just send a pull request.\n\nLicense\n-------\n\nDjango-Log-Trigger is released under the `MIT\nLicense <http://www.opensource.org/licenses/MIT>`__.\n\n.. |Build Status| image:: https://travis-ci.org/marteinn/django-log-trigger.svg?branch=master\n   :target: https://travis-ci.org/marteinn/django-log-trigger",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marteinn/django-log-trigger",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-log-trigger",
    "package_url": "https://pypi.org/project/django-log-trigger/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-log-trigger/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/marteinn/django-log-trigger"
    },
    "release_url": "https://pypi.org/project/django-log-trigger/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Simulate exceptions and logging calls in django through http",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3878355,
  "urls": [],
  "vulnerabilities": []
}