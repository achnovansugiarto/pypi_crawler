{
  "info": {
    "author": "MOBIO",
    "author_email": "contact@mobio.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# m-formatter-logging là thư viện python để write log cho các module BackEnd-Mobio\n\n#### Version:\nPhiên bản hiện tại `1.0.4`\n\n#### Cài đặt:\n`pip3 install m-formatter-logging`\n\n#### Sử dụng:\n1. Gọi func log tương ứng với level mong muốn.\n- Sử dụng tham số `sensitive=True` (default=False) trong trường hợp dữ liệu log có data nhạy cảm (Ví dụ: thông tin PII của profile, mật khẩu của user, mã voucher,...).\n- Sử dụng key extra để log thêm thông tin (chỉ show trên hệ thống ELK).\n```\nif __name__ == '__main__':\n    def test():\n        MobioLogging().info('app_test_lib_logging::test():info', sensitive=True, extra={\"key1\": \"value1\"})\n        try:\n            a = 1 / 0\n            MobioLogging().info('__init__::test():a: %s' % a)\n        except Exception as ex1:\n            MobioLogging().error('app_test_lib_logging::test():error: %s' % ex1, sensitive=True)\n\n        MobioLogging().debug('app_test_lib_logging::test():debug')\n        MobioLogging().warning('app_test_lib_logging::test():warning', sensitive=False)\n\n    test()\n```\n\n\n2. Sử dụng file custom config:\n```\nconfig_file_path = 'path/to/config/file'\nMobioLogging().file_config(self, config_file_path)\n```\n\n\n3. Sử dụng custom filter để xử lý cụ thể 1 trường hợp log:\n```\nclass CustomizeFilterRecords():\n    def filter(self, record):\n        if record.key1 == 'value1':\n            return False # no log\n        return True\n\nMobioLogging().logger.addFilter(CustomizeFilterRecords())\n```\n\n#### Changelog:\n\n##### v1.0.4:\n* Cập nhật lại mô tả trong README.\n\n##### v1.0.3:\n* Phiên bản đầu tiên.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m-formatter-logging",
    "package_url": "https://pypi.org/project/m-formatter-logging/",
    "platform": null,
    "project_url": "https://pypi.org/project/m-formatter-logging/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/m-formatter-logging/1.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "MobioLogging",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17427481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "157768f477648b6819c00a88d1a00bf62a87d3847174b50742db78dd83d84fbc",
        "md5": "9b52d68f091ba98c86a9e9d08be7c6e8",
        "sha256": "e15607c0d05a92d6a1dafd412308a311a62b770082b235f2c06e69e3a85c9039"
      },
      "downloads": -1,
      "filename": "m-formatter-logging-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9b52d68f091ba98c86a9e9d08be7c6e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4474,
      "upload_time": "2023-03-24T06:51:50",
      "upload_time_iso_8601": "2023-03-24T06:51:50.789096Z",
      "url": "https://files.pythonhosted.org/packages/15/77/68f477648b6819c00a88d1a00bf62a87d3847174b50742db78dd83d84fbc/m-formatter-logging-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}