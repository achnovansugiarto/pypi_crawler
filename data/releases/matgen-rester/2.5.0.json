{
  "info": {
    "author": "nscc.gz",
    "author_email": "\"nscc.gz\" <matgen@nscc-gz.cn>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# matgen_rester\r\nA python wrapper for Matgen DFT API. This code requires a python version >= 3.6\r\n\r\n## Prerequisites\r\n\r\nThe following python library must be installed to run the script\r\n\r\n* [requests](https://requests.readthedocs.io/en/master/)\r\n* [PyYaml](https://pypi.org/project/PyYAML/)\r\n* [numpy](https://pypi.org/project/numpy/)\r\n\r\n## installation\r\n`pip install matgen-rester`\r\n\r\n## Usage\r\n### 1. import matgen_rester module\r\n`import matgen_rester as mr`\r\n\r\n#### example\r\n```\r\nwith mr.MatgenRester(username=\"test\",password=\"only for example\") as q:\r\n   ##return list with one structure\r\n   structure = q.get_structure_by_id(targetId='mat_16680',idType=\"matid\",fields=[\"structure.matid\",\"structure.formula\"])\r\n   ##return list of data\r\n   list = q.get_structure_with_filter(filter={\r\n    \"in\": \"Na-O\",\r\n    \"not\": \"C\",\r\n    \"searchType\": \"all\",\r\n    \"crystalSystem\": [\r\n      \"cubic\",\r\n      \"hexagonal\",\r\n      \"monoclinic\",\r\n      \"orthorhombic\",\r\n      \"tetragonal\",\r\n      \"triclinic\",\r\n      \"trigonal\"\r\n    ],\r\n    \"pointGroup\": [\r\n      \"-1\",\r\n      \"-3\",\r\n      \"-3m\",\r\n      \"-4\",\r\n      \"-42m\",\r\n      \"-43m\",\r\n      \"-6\",\r\n      \"-6m2\",\r\n      \"1\",\r\n      \"2\",\r\n      \"2/m\",\r\n      \"222\",\r\n      \"23\",\r\n      \"3\",\r\n      \"32\",\r\n      \"3m\",\r\n      \"4\",\r\n      \"4/m\",\r\n      \"4/mmm\",\r\n      \"422\",\r\n      \"432\",\r\n      \"4mm\",\r\n      \"6\",\r\n      \"6/m\",\r\n      \"6/mmm\",\r\n      \"622\",\r\n      \"6mm\",\r\n      \"m\",\r\n      \"m-3\",\r\n      \"m-3m\",\r\n      \"mm2\",\r\n      \"mmm\"\r\n    ],\r\n    \"spaceGroup\": [\r\n      \"Aea2\",\r\n      \"Aem2\",\r\n      \"R3m\"\r\n    ],\r\n    \"volume\": [\r\n      0,\r\n      10000\r\n    ],\r\n    \"properties\": [\r\n      \"cif\",\r\n      \"xrd.x\"\r\n    ],\r\n    \"ifIcsdid\": True\r\n   }, fields=['structure.matid','structure.formula'], size=5, page=0)\r\n```\r\n\r\n#### attributes\r\n1. `username, password`: matgen account\r\n2. `token`: user can get token key after logged in from [matgen](https://matgen.nscc-gz.cn)\r\n3. `id`: the target id of the structure\r\n4. `idType`: type of the target id, such as matid\r\n5. `fields`: return data fields, such as \"structure\",\"bandStructure\",\"densityOfStates\",\"cif\", \"elasticProperty\",\"fermiSurface\",\"magneticProperty\",\"pdf\",\"xrd\"\r\n6. `filter`: filter dic for searching structure, such as \"in\", \"not\",\"searchType\"\r\n7. `size`: the size of return records\r\n8. `pindex`: the page index after pagination\r\n\r\n### 2. used in command line\r\n\r\n#### example\r\n`python matgenrester.py -id mat_3 -idType matid`\r\n\r\n#### optional arguments:\r\n```\r\n  -h, --help            show this help message and exit\r\n  -idType IDTYPE, --idType IDTYPE\r\n                        specify the idType for search, such as matid, icsd_id,\r\n                        cod_id, oqmd_id\r\n  -id ID, --id ID       find the structure with the target id,such as mat_8886\r\n                        as matid\r\n  -size SIZE, --size SIZE\r\n                        specify the number of return data\r\n  -pindex PINDEX, --pindex PINDEX\r\n                        specify the page index after pagination\r\n  -in IN, --in IN       find the structures that contain the specific\r\n                        elements, for more than one elements, connect elements\r\n                        by '-', ex. Ba-S\r\n  -not NOT, --not NOT   find the structures that don't contain the specific\r\n                        elements, for more than one elements, connect elements\r\n                        by '-', ex. Ba-S\r\n  -searchType SEARCHTYPE, --searchType SEARCHTYPE\r\n                        specify the search type for searching structures,\r\n                        'only' means finding the structures that only contain\r\n                        the specific elements, 'all' means finding the\r\n                        structures that not only contain the specific\r\n                        elements, but also, sometimes, other elements\r\n  -crystalSystem CRYSTALSYSTEM, --crystalSystem CRYSTALSYSTEM\r\n                        filter data by its crystal_system, such as cubic,tetra\r\n                        gonal,hexagonal,trigonal,orthorhombic,monoclinic,tricl\r\n                        inic,amorphous\r\n  -pointGroup POINTGROUP, --pointGroup POINTGROUP\r\n                        filter data by its point_group, such as cubic,tetragon\r\n                        al,hexagonal,trigonal,orthorhombic,monoclinic,triclini\r\n                        c,amorphous\r\n  -spacegroup SPACEGROUP, --spacegroup SPACEGROUP\r\n                        filter data by its spacegroup, specify space group\r\n                        type, such as P1,P-1,P2,P21,C2,Pm,Pc,Cm,Cc,P2/m,P21m,P\r\n                        2/c,P21c,C2/m,C2/c,P222,P2221,P21212,P212121,C222,C222\r\n                        1,F222,I222,I212121,Pmm2,Pmc21,Pcc2,Pma2,Pca21,Pnc2,Pm\r\n                        n21,Pba2,Pna21,Pnn2,Cmm2,Cmc21,Ccc2,Amm2,Abm2,Ama2,Aba\r\n                        2,Fmm2,Fdd2,Imm2,Iba2,Ima2,Pmmm,Pnnn,Pccm,Pban,Pmma,Pn\r\n                        na,Pmna,Pcca,Pbam,Pccn,Pbcm,Pnnm,Pmmn,Pbcn,Pbca,Pnma,C\r\n                        mmm,Cmcm,Cmca,Cccm,Cmma,Ccca,Fmmm,Fddd,Immm,Ibam,Ibcm,\r\n                        Imma,P4,P41,P42,P43,I4,I41,P-4,I-4,P4/m,P42/m,P4/n,P42\r\n                        /n,I4/m,I41/a,P422,P4212,P4122,P41212,P4222,P42212,P43\r\n                        22,P43212,I422,I4212,P4mm,P4bm,P42cm,P42nm,P4cc,P4nc,P\r\n                        42mc,P42bc,I4mm,I4cm,I41md,I41cd,P-42m,P-42c,P-421m,P-\r\n                        421c,I-42m,I-42d,P-4m2,P-4c2,P-4b2,P-4n2,I-4m2,I-4c2,P\r\n                        4/mmm,P4/mcc,P4/nbm,P4/nnc,P4/mbm,P4/mnc,P4/nmm,P4/ncc\r\n                        ,P42/mmc,P42/mcm,P42/nbc,P42/nnm,P42/mbc,P42/mcm,P42/n\r\n                        mc,P42/ncm,I4/mmm,I4/mcm,I41/amd,I41/acd,P3,P31,P32,R3\r\n                        ,P-3,R-3,P312,P3112,P3212,P321,P3121,P3221,R32,P31m,P3\r\n                        1c,P3m1,P3c1,R3m,R3c,P-31m,P-31c,P-3m1,P-3c1,R-3m,R-3c\r\n                        ,P6,P61,P62,P63,P64,P65,P-6,P6/m,P63/m,P622,P6122,P622\r\n                        2,P6322,P6422,P6522,P6mm,P6cc,P63cm,P63mc,P-6m2,P-6c2,\r\n                        P-62m,P62c,P6/mmm,P6/mcc,P63/mcm,P63/mmc,P23,P213,F23,\r\n                        I23,I213,Pm-3,Pn-3,Pa-3,Fm-3,Fd-3,Im-3,Ia-3,P432,P4232\r\n                        ,P4332,P4132,F432,F4132,I432,I4132,P-43m,P-43n,F-43m,F\r\n                        -43c,I-43m,I-43d,Pm-3m,Pn-3n,Pm-3n,Pn-3m,Fm-3m,Fm-3m,F\r\n                        d-3m,Fd-3c,Im-3m,Ia-3d\r\n  -volume VOLUME, --volume VOLUME\r\n                        filter data by its volume, specify volume scope, such\r\n                        as '0,100'\r\n  -density DENSITY, --density DENSITY\r\n                        filter data by its density, specify volume scope, such\r\n                        as '0,100'\r\n  -icsdid ICSDID, --icsdid ICSDID\r\n                        filter data if it contains a icsdid\r\n  -codid CODID, --codid CODID\r\n                        filter data if it contains a codid\r\n  -oqmdid OQMDID, --oqmdid OQMDID\r\n                        filter data if it contains a oqmdid\r\n  -fields FIELDS, --fields FIELDS\r\n                        specify return data fields, such as 'structure',\r\n                        'bandStructure', 'densityOfStates', 'cif',\r\n                        'elasticProperty', 'fermiSurface', 'magneticProperty',\r\n                        'pdf', 'xrd'\r\n  -o O                  set file for downloading\r\n  -token TOKEN, --token TOKEN\r\n                        upload matgen token for seaching```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matgen-rester",
    "package_url": "https://pypi.org/project/matgen-rester/",
    "platform": null,
    "project_url": "https://pypi.org/project/matgen-rester/",
    "project_urls": {
      "Bug Tracker": "https://pypi.org/manage/project/matgen-rester/issues",
      "Homepage": "https://pypi.org/manage/project/matgen-rester"
    },
    "release_url": "https://pypi.org/project/matgen-rester/2.5.0/",
    "requires_dist": [
      "PyYaml",
      "numpy",
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A python wrapper for matgen dft API",
    "version": "2.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15967117,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1194e936399e669eb42bfce661c90fee743e0ed3376b16a85ab610f53a82d990",
        "md5": "147ecc12d8b5cf59782ba03509aabf6d",
        "sha256": "5d11558a5d84f570b0b6ccd37526c9cf4cafa5267a12565f8b5877f316e84dca"
      },
      "downloads": -1,
      "filename": "matgen_rester-2.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "147ecc12d8b5cf59782ba03509aabf6d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19442,
      "upload_time": "2022-12-02T07:30:13",
      "upload_time_iso_8601": "2022-12-02T07:30:13.646041Z",
      "url": "https://files.pythonhosted.org/packages/11/94/e936399e669eb42bfce661c90fee743e0ed3376b16a85ab610f53a82d990/matgen_rester-2.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}