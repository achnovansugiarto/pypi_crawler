{
  "info": {
    "author": "nscc.gz",
    "author_email": "test@mail.nscc.gz",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# matgen_rester\nA python wrapper for Matgen DFT API. This code requires a python version >= 3.6\n\n## Prerequisites\n\nThe following python library must be installed to run the script\n\n* [requests](https://requests.readthedocs.io/en/master/)\n* [PyYaml](https://pypi.org/project/PyYAML/)\n* [numpy](https://pypi.org/project/numpy/)\n\n## installation\n`pip install -i https://test.pypi.org/simple/ matgen-rester`\n\n## Usage\n### 1. import matgen_rester module\n`import matgen_rester as mr`\n\n#### example \n```\nwith mr.MatgenRester(username=\"test\",password=\"only for example\") as m:\n   ##return one structure\n   structure = q.get_structure_by_matid(matid='mat_3',fields=[\"matid\",\"formula\"])\n   ##return list of data\n   list = q.get_structure_with_filter(elements=\"Ba-S\", filter={\"_nelements\":\"O-Ti\"}, fields=['matid'], pages=5, pageno=0)\n   list2 =q.get_structure_with_filter(elements=\"Ba-S\", filter={\"_voume\":[0,100],\"_crystal_system\":[\"cubic\",\"tetragonal\",\"hexagonal\",\"trigonal\",\"orthorhombic\",\"monoclinic\",\"triclinic\",\"amorphous\"]}, fields=['matid'], pages=5, pageno=0)\n```\n\n#### attributes\n1. `username, password`: matgen account\n2. `token`: user can get token key after logged in from [matgen](https://matgen.nscc-gz.cn)\n3. `matid`: matgen id of the structure\n4. `fields`: return data fields, such as matid, icsd_id, formula, conventional_cell, conventional_cell_site, primitive_cell, primitive_cell_site, crystal_system, point_group,density, cif_data, magnetization, bandStructure, densityOfStates, poscar_cc, poscar_pc, same_file, poscar, kpoints_relax, kpoints_scf, kpath\n5. `elements`: the set of elements that the compound must have ','\n6. `_nelements`: the set of excluded elements that the compound must have ','\n\n### 2. used in command line\n\n#### example\n`python matgenrester.py -id mat_3`\n\n#### optional arguments:\n```\n  -h, --help           show this help message and exit\n  -e E, --elements E    find the structures that contain the specific\n                        elements, for more than one elements, connect elements\n                        by '-', ex. Ba-S\n  -ne NE, --nelements NE\n                        find the structures that do not contain the specific\n                        elements,for more than one elements, connect elements\n                        by '-', ex. Ba-S\n  -id ID, --matid ID    find structures that have the same matid,ex.mat_1\n  -p P                  specify the number of return data\n  -s S                  specify the page index after pagination\n  -cs CS, --crystalSystem CS\n                        filter data by its crystal system, such as cubic,tetra\n                        gonal,hexagonal,trigonal,orthorhombic,monoclinic,tricl\n                        inic,amorphous\n  -sg SG, --spaceGroup SG\n                        filter data by its space group, specify space group\n                        type, such as P1,P-1,P2,P21,C2,Pm,Pc,Cm,Cc,P2/m,P21m,P\n                        2/c,P21c,C2/m,C2/c,P222,P2221,P21212,P212121,C222,C222\n                        1,F222,I222,I212121,Pmm2,Pmc21,Pcc2,Pma2,Pca21,Pnc2,Pm\n                        n21,Pba2,Pna21,Pnn2,Cmm2,Cmc21,Ccc2,Amm2,Abm2,Ama2,Aba\n                        2,Fmm2,Fdd2,Imm2,Iba2,Ima2,Pmmm,Pnnn,Pccm,Pban,Pmma,Pn\n                        na,Pmna,Pcca,Pbam,Pccn,Pbcm,Pnnm,Pmmn,Pbcn,Pbca,Pnma,C\n                        mmm,Cmcm,Cmca,Cccm,Cmma,Ccca,Fmmm,Fddd,Immm,Ibam,Ibcm,\n                        Imma,P4,P41,P42,P43,I4,I41,P-4,I-4,P4/m,P42/m,P4/n,P42\n                        /n,I4/m,I41/a,P422,P4212,P4122,P41212,P4222,P42212,P43\n                        22,P43212,I422,I4212,P4mm,P4bm,P42cm,P42nm,P4cc,P4nc,P\n                        42mc,P42bc,I4mm,I4cm,I41md,I41cd,P-42m,P-42c,P-421m,P-\n                        421c,I-42m,I-42d,P-4m2,P-4c2,P-4b2,P-4n2,I-4m2,I-4c2,P\n                        4/mmm,P4/mcc,P4/nbm,P4/nnc,P4/mbm,P4/mnc,P4/nmm,P4/ncc\n                        ,P42/mmc,P42/mcm,P42/nbc,P42/nnm,P42/mbc,P42/mcm,P42/n\n                        mc,P42/ncm,I4/mmm,I4/mcm,I41/amd,I41/acd,P3,P31,P32,R3\n                        ,P-3,R-3,P312,P3112,P3212,P321,P3121,P3221,R32,P31m,P3\n                        1c,P3m1,P3c1,R3m,R3c,P-31m,P-31c,P-3m1,P-3c1,R-3m,R-3c\n                        ,P6,P61,P62,P63,P64,P65,P-6,P6/m,P63/m,P622,P6122,P622\n                        2,P6322,P6422,P6522,P6mm,P6cc,P63cm,P63mc,P-6m2,P-6c2,\n                        P-62m,P62c,P6/mmm,P6/mcc,P63/mcm,P63/mmc,P23,P213,F23,\n                        I23,I213,Pm-3,Pn-3,Pa-3,Fm-3,Fd-3,Im-3,Ia-3,P432,P4232\n                        ,P4332,P4132,F432,F4132,I432,I4132,P-43m,P-43n,F-43m,F\n                        -43c,I-43m,I-43d,Pm-3m,Pn-3n,Pm-3n,Pn-3m,Fm-3m,Fm-3m,F\n                        d-3m,Fd-3c,Im-3m,Ia-3d\n  -v V, --volume V      filter data by its volume, specify volume scope, such\n                        as 0,100\n  -f F                  specify return data fields, such as matid, icsd_id,\n                        formula, conventional_cell, conventional_cell_site, pr\n                        imitive_cell,primitive_cell_site,crystal_system,point_\n                        group,density,cif_data,magnetization, bandStructure,de\n                        nsityOfStates,poscar_cc,poscar_pc,same_file,poscar,\n                        kpoints_relax, kpoints_scf,kpath\n  -o O                  set file for downloading\n  -t T                  upload matgen token for seaching```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matgen-rester",
    "package_url": "https://pypi.org/project/matgen-rester/",
    "platform": "",
    "project_url": "https://pypi.org/project/matgen-rester/",
    "project_urls": {
      "Homepage": "https://github.com"
    },
    "release_url": "https://pypi.org/project/matgen-rester/1.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python wrapper for matgen dft API",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15967117,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d353fb1d2eecd3580ba0812e057915f7369b9a70d3127761b9dcff6c1cba4fb",
        "md5": "d3a6501248735740d804051d87218da0",
        "sha256": "fa16636992fb8d802ee6c57b843ebb57434b9ca517c49661542b9ece2b1c79a4"
      },
      "downloads": -1,
      "filename": "matgen_rester-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d3a6501248735740d804051d87218da0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7669,
      "upload_time": "2020-10-20T03:33:22",
      "upload_time_iso_8601": "2020-10-20T03:33:22.520098Z",
      "url": "https://files.pythonhosted.org/packages/9d/35/3fb1d2eecd3580ba0812e057915f7369b9a70d3127761b9dcff6c1cba4fb/matgen_rester-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}