{
  "info": {
    "author": "Afsal Salim",
    "author_email": "afsals@qburst.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Django Server Config Generator\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-server-config-generator) ![PyPI - License](https://img.shields.io/pypi/l/django-server-config-generator)\n\nDjango server config generator is a simple django extension which generates apache config by running a management command, It automatically detects document root, static root/url, media root/url, and also the path to the current running virtual environment.\n\n## Installation\n\n```bash\n$ pip install django-server-config-generator\n```\n\n## Requirements\n - Python3.6+\n - Apache2.4\n## Usage\n\n - Add server_config_generator to the installed app in the settings file, \n\n```python\n\tINSTALLED_APPS = (\n\t# other apps\n\t\"server_config_generator\",\n    )\n```\n\n - Run **python manage.py generate_apache_config**, \n```bash\n\t$ python manage.py generate_apache_config \n```\n - User will be prompted to enter the type of virtual hosting, \n```bash\n\tPlease enter name based or IP based hosting (name/ip):?\n```\n - Enter a valid option and press 'Enter' key\n - Then the user will be prompted to enter the server name or the ip address based on the previous input, \n```bash\n\tEnter the server name:\n```\nOR\n```bash\n\tEnter your IP: \n```\n - Enter a valid server name or ip address\n - Then the user will be prompted to enter port number, default value for which will be 80, \n```bash\n\tEnter the port (default:80):\n```\n - Enter the required port number and press the 'Enter' key. In the case of the default value just press 'Enter' key\n- If STATIC_URL/STATIC_ROOT or MEDIA_URL/MEDIA_ROOT is not configured, then the user will be notified with a warning message and the system will wait for the user confirmation, \n```bash\n\tWarning: Static root/url not configured\n\tWarning: Media root/url not configured\n\n\t 1. Press q to quit \n\t 2. Press any key to continue \n```\n - Press 'Enter' key to continue, else press \"q\" and press 'Enter' key\n - Then the user will be prompted for https configuration,\n```bash\n\tDo you want https ? \n\n \t 1. Press 'n' for no \n \t 2. Press any key to continue \n```\n - To configure https, user can press on any key else press 'n' and enter key on keyboard\n - Then the user will prompted of an automatic redirect from http to https\n```bash\n\tDo you automatic http to https redirect?\n\n\t 1. Press 'n' for no \n \t 2. Press any key to continue\n```\n - To configure autoredirect, user can press on any key else press 'n' and enter key on keyboard\n - User will be prompted to enter the path for certificate file\n```bash\n\tEnter certificate path:\n```\n- After specifying the path to the certificate file, user will be prompted to enter the path to the key file\n```bash\n\tEnter certificate key path:\n```\n - After specifying the path to the key file, user will be prompted to enter the path to the chain file\n```bash\n\tEnter chain file path or press enter if no chain file\n```\n - After entering the path to the chain file, user will be prompted to specify the https port\n```bash\n\tEnter the port (default:443):\n```\n - If a different port is in use than the default port, enter the port and press enter key\n - Verify the Apache config file generated in root folder with name as <your_projectname.conf>\n - Copy the the conf file to the Apache site-available folder\n - Run configtest command\n - Enable the site\n - Reload Apache\n## Communication\n - If you **find a bug**, open an issue.\n - If you **have a feature request**, open an issue.\n - If you **want to contribute**, submit a pull request.\n\n## Author\n\nAfsal Salim, afsals@qburst.com\n\n## License\n\nDjango Server Config Generator is available under the MIT license. See the LICENSE file for more info.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Afsal-qburst/django-server-config-generator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-server-config-generator",
    "package_url": "https://pypi.org/project/django-server-config-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-server-config-generator/",
    "project_urls": {
      "Homepage": "https://github.com/Afsal-qburst/django-server-config-generator"
    },
    "release_url": "https://pypi.org/project/django-server-config-generator/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple Django app to create server config",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5922270,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a57a207465cb562dac73cf02ac7541c192659f63d5440ba9a7a57bd7b60a9439",
        "md5": "038cd3624bd810be45783784b762b3cd",
        "sha256": "46f03c441488c41ed49e9d63f51ba7704949b2ad75c0b50a2570b3f3752246b6"
      },
      "downloads": -1,
      "filename": "django_server_config_generator-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "038cd3624bd810be45783784b762b3cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10037,
      "upload_time": "2019-10-03T08:10:58",
      "upload_time_iso_8601": "2019-10-03T08:10:58.684103Z",
      "url": "https://files.pythonhosted.org/packages/a5/7a/207465cb562dac73cf02ac7541c192659f63d5440ba9a7a57bd7b60a9439/django_server_config_generator-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3751c57779480eb604e4d15a9118fa6749c8b848ef71eb1bce1e29ecdc93d48",
        "md5": "369496019d818aa3d79c0f6b5ab72fd3",
        "sha256": "3a34f530d0c2f246272c1f57fa23f5ed7f3ff43143f20c841da7854dc5e61ef7"
      },
      "downloads": -1,
      "filename": "django-server-config-generator-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "369496019d818aa3d79c0f6b5ab72fd3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7813,
      "upload_time": "2019-10-03T08:11:00",
      "upload_time_iso_8601": "2019-10-03T08:11:00.805521Z",
      "url": "https://files.pythonhosted.org/packages/a3/75/1c57779480eb604e4d15a9118fa6749c8b848ef71eb1bce1e29ecdc93d48/django-server-config-generator-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}