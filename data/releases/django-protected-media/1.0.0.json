{
  "info": {
    "author": "Cobus Carstens",
    "author_email": "cobus.carstens@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "![Build Status](https://www.travis-ci.org/cobusc/django-protected-media.svg?branch=master)\n\n\nDjango Protected Media\n======================\n\nDjango Protected Media is a Django app that manages media that are considered\nsensitive in a protected fashion.\n\nNot only does the media get stored in a separate filesystem location, but authorisation\nis also required to access it.\n\nThe application allows for setups where Django performs the authorisation, but\nhands off the serving of the file to a web server, like Nginx.\n\nQuick start\n-----------\n\n1. Add \"protected_media\" to your INSTALLED_APPS setting like this:\n```python\nINSTALLED_APPS = [\n    ...\n    'protected_media',\n]\n```\n\n2. Include the URLconf in your project urls.py like this::\n```\nurl(r'^protected/', include('protected_media.urls')),\n```\n\n3. Add the following settings to `settings.py` if the defaults need to be tweaked:\n```python\nPROTECTED_MEDIA_ROOT = \"%s/protected/\" % BASE_DIR\nPROTECTED_MEDIA_URL = \"/protected\"\nPROTECTED_MEDIA_SERVER = \"nginx\"  # Defaults to \"django\"\nPROTECTED_MEDIA_LOCATION_PREFIX = \"/internal\"  # Prefix used in nginx config\nPROTECTED_MEDIA_AS_DOWNLOADS = False  # Controls inclusion of a Content-Disposition header\n```\n\n4. Use the new field classes in your models:\n```python\ndef SomeModel(models.Model):\n    document = ProtectedFileField(upload_to=\"uploads/\")\n    picture = ProtectedImageField(upload_to=\"uploads/\")\n    # Files will be stored under PROTECTED_MEDIA_ROOT + upload_to\n```\n\nOverview\n--------\n\nDjango manages media based on the following definitions:\n```python\nBASE_DIR = \"/some/application/dir/\"\nMEDIA_ROOT = \"%s/media/\" % BASE_DIR\nMEDIA_URL = \"/media/\"\n```\n\nFile- and image fields are typically defined as:\n```python\ndocument = models.FileField(upload_to=\"uploads/\")\npicture = models.ImageField(upload_to=\"uploads/\")\n# Files will be stored under MEDIA_ROOT + upload_to\n```\n\nIn a typical production environment one would let `nginx` (or some other server) serve the media:\n```\n# Publicly accessible media\nlocation ^~ /media/ {\n    alias /some/application/dir/media\n}\n```\n\nThis works well when the media should be publically accessible. However, if the media should be protected, we need a way for Django to check whether the request for the media should only be allowed for logged in (or more stringent criteria) users.\n\nThe `protected_media` application\n--------------------------------\nThe `protected_media` application consists of\n* new `settings.py` attributes,\n* a customized FileSystemStorage class,\n* a custom handler for the protected media URL and\n* additional web server configuration if serving via `nginx` or something similar.\n\nProtected media is stored in a different physical location to publically accessible media. The following settings can be specified in `settings.py`:\n```python\nPROTECTED_MEDIA_ROOT = \"/some/application/dir/protected/\"\nPROTECTED_MEDIA_URL = \"/protected\"\nPROTECTED_MEDIA_SERVER = \"nginx\"  # Defaults to \"django\"\nPROTECTED_MEDIA_LOCATION_PREFIX = \"/internal\"  # Prefix used in nginx config\n```\n\nWhen defining a file or image field that needs to be protected, we use one of the\nclasses provided by the `protected_media` application:\n* `ProtectedFileField`\n* `ProtectedImageField`\n\nProtected file- and image fields are typically defined as:\n```python\ndocument = ProtectedFileField(upload_to=\"uploads/\")\npicture = ProtectedImageField(upload_to=\"uploads/\")\n# Files will be stored under PROTECTED_MEDIA_ROOT + upload_to\n```\n\nThese classes have a custom storage backend `ProtectedFileSystemStorage` which mananges the filesystem location and URLs associated with protected media.\n\nWhen `nginx` is used, the configuration must be updated to look like this:\n```\n# Publicly accessible media\nlocation /media  {\n    alias /some/application/dir/media;\n}\n\n# Protected media\nlocation /internal  {\n    internal;\n    alias /some/application/dir/protected;\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.example.com/",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-protected-media",
    "package_url": "https://pypi.org/project/django-protected-media/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-protected-media/",
    "project_urls": {
      "Homepage": "https://www.example.com/"
    },
    "release_url": "https://pypi.org/project/django-protected-media/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple Django app to serve protected media",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16257126,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34efb568e9fb8460008b1b60c0854bdb28df83cb7327a756deb31e999c29da4e",
        "md5": "9dd49899898aa8a05c4dbf366a0759a2",
        "sha256": "1992e87da5d52472a37c030c4cbc8b1fb3b1fe47c658a1a4f3f96dfbd3df30c1"
      },
      "downloads": -1,
      "filename": "django-protected-media-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9dd49899898aa8a05c4dbf366a0759a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5948,
      "upload_time": "2020-09-21T05:50:35",
      "upload_time_iso_8601": "2020-09-21T05:50:35.304159Z",
      "url": "https://files.pythonhosted.org/packages/34/ef/b568e9fb8460008b1b60c0854bdb28df83cb7327a756deb31e999c29da4e/django-protected-media-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}