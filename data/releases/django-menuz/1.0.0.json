{
  "info": {
    "author": "Eka Putra",
    "author_email": "ekaputra@balitechy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "DJANGO MENUZ\n============\n**Note**: If you want to use current stable version of Django Menuz, please use ver-1.0.0 and support only django 1.3.\n\nDjango Menuz is another menu app for Django.\n\nIt mainly inspired by how easy menu creation ini WordPress. Django Menuz provides\ntemplate tags to call menu in specified location.\n\nWith it's drag and drop features, now its easy to assign menu items for specified location in template drag and drop it if you want to re-order the menu item position.\n\nINSTALLATION AND USAGE:\n-----------------------\nOnce you install it via setup.py, easy_install or pip.\n\n* add **menuz** into your **INSTALLED_APPS** Django settings.py file.\n\n* add codes below into your project **urls.py** :\n\n::\n\n    from menuz import registry\n    registry.autodiscover()\n\n* Also add url config below into projects urls configuration.\n\n::\n\n    url(r'', include('menuz.urls')),\n\n* Register all available menu positions in project **settings.py** by adding **AVAILABLE_MENUS** parameter. example:\n\n::\n\n    AVAILABLE_MENUS = (\n    {\n        'id': 'top_menu',\n        'title': _('Top Menu'),\n        'type': 'UL',          #optional, default UL. alternative 'OL'\n        'class': 'someclass',  #optional, output: <ul class=\"ul_toplevel someclass\">\n        'before_link': 'BBB',  #optional, can be text or html tag. output: <li>BBB<a href=\"...\">Title</a></li>\n        'after_link': 'AAA',   #optional, can be text or html tag. output: <li><a href=\"...\">Title</a>AAA</li>\n    },\n\n    {\n        'id': 'footer_menu',\n        'title': _('Footer Menu'),\n        'type': 'UL',\n        'class': None,\n    },\n\n    {\n        'id': 'left_menu',\n        'title': _('Left Menu'),\n        'type': 'OL',\n        'class': None,\n    },\n    )\n\n* If you have few fix/static url into your application and want to include so it's will be selectable as a menu items, add **AVAILABLE_INNERLINKS** in your project **settings.py**.\n\n::\n\n    AVAILABLE_INNERLINKS = (\n        ('/this_page/', 'This Page'),\n        ('/that_page/', 'That Page'),\n        ('/categories/', 'Categories Page'),\n        ('/collections/', 'Collections Page'),\n        ...\n        ...\n        etc.\n    )\n\n* Above links must inbound link, not links to other sites(outbound link).\n* For Outbound link menu, use Custom link in menu creation admin page.\n\n* To create a menu based on Django model items, simply create **menu.py** in application directory, this is in the same level as application urls.py and register our model as following example (file: menu.py).\n\n::\n\n    # file: menu.py\n    from menuz.registry import menuz\n    from catalog.models import Product\n\n    menuz.register(Product)\n\n* Or if you want to do some filtering before registering it into menuz do as follows (file: menu.py).\n\n::\n\n    from menuz.registry import menuz\n    from catalog.models import Product\n\n    def active_product():\n        return Product.objects.filter(active=True)\n\n    menuz.register(Product, custom_source=active_product)\n\nWe registering extra callback that will be called when menuz will display selectable menu items in admin area,\nthat way, the menu item selector will not display all available products, but will display active products only.\n\nIMPORTANT:\n----------\nTo make Model menu items links correctly to its url, your model must utilize **get_absolute_url()** function. Because this is the only standard way to retrieve object urls, at least for django-menuz.\n\nexample:\n\n::\n\n    from django.db import models\n\n    class Page(models.Model):\n        title = models.CharField(max_length=50)\n        slug = models.SlugField()\n\n        @models.permalink\n        def get_absolute_url(self):\n            return ('some_page', None, {'slug': self.slug})\n\n\nCALLING MENU ITEMS IN TEMPLATE\n------------------------------\n**example calling menu items as html list**::\n\n    {% load menuz_tags %}\n    {% list_menu top_menu %}\n\n**example calling menu items as template context**\n\nThis implementation does not support hierarchical menu, please use \"list_menu\" tag if you need that feature.\n::\n\n    {% load menuz_tags %}\n    {% get_menu top_menu as tmenu %}\n\n    <h2>{{tmenu_title}}</h2>\n    <ul>\n        {% for item in tmenu %}\n        <li><a href=\"{{item.url}}\">{{item.title}}</a></li>\n        {% endfor %}\n    </ul>\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/ekaputra07/django-menuz/downloads",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ekaputra07/django-menuz",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-menuz",
    "package_url": "https://pypi.org/project/django-menuz/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-menuz/",
    "project_urls": {
      "Download": "https://github.com/ekaputra07/django-menuz/downloads",
      "Homepage": "https://github.com/ekaputra07/django-menuz"
    },
    "release_url": "https://pypi.org/project/django-menuz/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Drag and drop menu manager for Django.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1016086,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a24485111eb1ce271802d040da03a79288596fb3520b97424bc66f3c0b712304",
        "md5": "be8afc9d8a0bae2b54f00c722a914f2e",
        "sha256": "577e6165a0af2146b93e0436af57f3f97fb475c22c78f0560afc37b96d7bffb5"
      },
      "downloads": -1,
      "filename": "django-menuz-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be8afc9d8a0bae2b54f00c722a914f2e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 83434,
      "upload_time": "2012-08-13T10:20:42",
      "upload_time_iso_8601": "2012-08-13T10:20:42.803510Z",
      "url": "https://files.pythonhosted.org/packages/a2/44/85111eb1ce271802d040da03a79288596fb3520b97424bc66f3c0b712304/django-menuz-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}