{
  "info": {
    "author": "Nj Nafir",
    "author_email": "njnafir@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Django Onepage Application\n\n## Project description\n\nDjango Onepage is set of functionality that can help you to convert your django application to onepage application. \nThese include table listing for every model under respective module, hierarchical navbar for module and model management, \nOnepage add, change, delete operations without page loading with good interaction.\n\n\n## Settings\n\nDjango Onepage is a package that can reduce your page loading by 90%++, Just need to install the package, \nadd package to your settings INSTALLED_APPS and update TEMPLATES tag to APP_DIRS is True\n\n    INSTALLED_APPS = [\n        ...\n        'onepage',\n        '''\n    ]\n\n    TEMPLATES = [\n        {\n            ...\n            'APP_DIRS': True,\n            ...\n        },\n    ]\n\n\n## Add Model to Onepage Pattern\n\nAdd pattern for your model in any urls file, that can map your model for Onepage CRUD.\nwe suggest to use django ModelForm instead of django Form for add and change entry.\nSee django model form documentation to know more about django form binding for model.\nWe use this forms to add and change database entry from your onepage table, example bellow,\n    \n    # https://docs.djangoproject.com/en/3.2/topics/forms/modelforms/\n\n    from onepage.urls import patterns, add_pattern\n    from .models import Book, Consumer\n    from .forms import BookAddUpdateForm, ConsumerAddForm, ConsumerUpdateForm\n\n    # If you don't pass any form for change entry, form for add entry will be execute for change entry\n    # You can pass a validator optionally to check in every action from onepage\n\n    # add_pattern(model_name, form_for_add_entry, form_for_change_entry, validator)\n\n    add_pattern(Book, BookAddUpdateForm)\n    add_pattern(Consumer, ConsumerAddForm, ConsumerUpdateForm)\n\n    urlpatterns = [\n        ...\n    ] + patterns\n\n\n## Add Pattern to your template\n\nIn your base template include onepage/nav.html or you can use onepage/base.html also to get job done.\nThis nav will generate and give you basic navbar to click and enjoy the simplicity.\n\nIn your base template include nav file as like\n\n    {% include 'onepage/nav.html' %}\n\nOr you can simply use onepage base template, it will include your nav.html also\n\n    {% include 'onepage/base.html' %}\n\n\n## Custom Navigation & Links\n\nIf you don't want to add onepage rendered navigation bar through onepage/nav.html, you can right custom\nnavigation and links to handle onepage application. Let's look at the topic below to more about this.\n\nhere {{module_name}} is your app name which containing your desired model, and model_name is your \ndesired model name, which you want to initialize.\n\n### View Reference\n\nView reference like admin panel CRUD for model can be created by doing this,\n\n    <li id=\"{{module_name}}-view-{{model_name}}\" class=\"ajax-four-act-handler\"\n        data-props=\"{{module_name}}-view-{{model_name}}\" data-r-kwargs=\"\" data-keys=\"id,field_1,field_2\"\n    >Model Verbose Name</li>\n\n### Create Reference\n\nCreate reference for getting executed and show a create window for model,\n\n    <button data-props=\"{{module_name}}-add-{{model_name}}\"\n        class=\"btn btn-info-soft w-100p mb-2 me-1 ajax-four-act-handler-call-add-change-{{model_name}}\"\n    >Add New {{model_name}}</button>\n\n### Update Reference\n\nUpdate reference for getting executed and show an edit window for model, you have to \nfollow a hierarchical guidelines.\n\n    <tr data-id=\"{{ item_id }}\">\n        <a data-method=\"GET\"\n            class=\"btn btn-success-soft btn-sm ajax-four-act-handler-call-add-change-{{model_name}}\" \n             data-props=\"{{module_name}}-change-{{model_name}}\"\n        >Edit</a>\n    </tr>\n\n### Delete Reference\n\nDelete reference for getting executed, also have to follow a hierarchical guidelines.\n\n    <tr data-id=\"{{ item_id }}\">\n        <a data-method=\"GET\"\n           class=\"btn btn-danger-soft btn-sm ajax-four-act-handler-call-add-change-{{model_name}}\"\n            data-props=\"{{module_name}}-delete-{{model_name}}\"\n        >Delete</a>\n    </tr>\n\n## Validator\n\nValidator is used to validate query request from user, when you pass any validator to add_pattern.\nThis validator will be called in view function for add, change, view, delete.\n\n\n    from onepage.validator import BasicValidator\n\n    class CustomValidator(BasicValidator):\n        def is_valid(self):\n            return False\n\n    add_pattern(Book, BookAddUpdateForm, validator=CustomValidator)\n\n\n## Author\n\ndjango-onepage is an open source library for Python.\nInitially developed by Nj Nafir [Nj Nafir Github](https://github.com/njNafir)\n\n\n## Contribute\n- Issue Tracker: [django-onepage Issues](https://github.com/njNafir/django-onepage/issues)\n- Source Code: [django-onepage Sources](https://github.com/njNafir/django-onepage)\n\n\n## Support\n\nIf you are having issues, please let us know.\nWe have a mailing list located at: njnafir@gmail.com\n\n\n## License\nThe project licensed under the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/njnafir/django-onepage",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-onepage",
    "package_url": "https://pypi.org/project/django-onepage/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-onepage/",
    "project_urls": {
      "Homepage": "https://github.com/njnafir/django-onepage"
    },
    "release_url": "https://pypi.org/project/django-onepage/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Onepage Application Management",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15301613,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5bb74153827fa47f3bb6ef6f634e93e5cfc487a4f4f849353dc0755c9f01b638",
        "md5": "23f72bcc44fecbfbe5912fccc72259ad",
        "sha256": "5a35d65dd9b5b43e8cddf0e22cd33ddc2b3b23389b94e4d5480aeff4266a3fb6"
      },
      "downloads": -1,
      "filename": "django_onepage-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23f72bcc44fecbfbe5912fccc72259ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1296678,
      "upload_time": "2021-08-08T12:33:20",
      "upload_time_iso_8601": "2021-08-08T12:33:20.513493Z",
      "url": "https://files.pythonhosted.org/packages/5b/b7/4153827fa47f3bb6ef6f634e93e5cfc487a4f4f849353dc0755c9f01b638/django_onepage-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7131b9d2c6b8ce87a2ab187322b040ead46e40e4749d0ca08f5d1366e41a714c",
        "md5": "2c297bdba6e52c220d08e219abe84895",
        "sha256": "f8bc1694e20be2c2a794e3c7c69e0c285a9b0aa1be88124c2764cb543b401a70"
      },
      "downloads": -1,
      "filename": "django-onepage-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2c297bdba6e52c220d08e219abe84895",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1270945,
      "upload_time": "2021-08-08T12:33:23",
      "upload_time_iso_8601": "2021-08-08T12:33:23.652065Z",
      "url": "https://files.pythonhosted.org/packages/71/31/b9d2c6b8ce87a2ab187322b040ead46e40e4749d0ca08f5d1366e41a714c/django-onepage-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}