{
  "info": {
    "author": "Aldo Cortesi",
    "author_email": "aldo@corte.si",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Console :: Curses",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet",
      "Topic :: Internet :: Proxy Servers",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Security",
      "Topic :: Software Development :: Testing"
    ],
    "description": "mitmproxy\n^^^^^^^^^\n\n|travis| |appveyor| |coverage| |latest_release| |python_versions|\n\nThis repository contains the **mitmproxy** and **pathod** projects.\n\n``mitmproxy`` is an interactive, SSL-capable intercepting proxy with a console\ninterface.\n\n``mitmdump`` is the command-line version of mitmproxy. Think tcpdump for HTTP.\n\n``mitmweb`` is a web-based interface for mitmproxy.\n\n``pathoc`` and ``pathod`` are perverse HTTP client and server applications\ndesigned to let you craft almost any conceivable HTTP request, including ones\nthat creatively violate the standards.\n\n\nDocumentation & Help\n--------------------\n\n\nGeneral information, tutorials, and precompiled binaries can be found on the mitmproxy\nand pathod websites.\n\n|mitmproxy_site|\n\nThe latest documentation for mitmproxy is also available on ReadTheDocs.\n\n|mitmproxy_docs|\n\n\nJoin our discussion forum on Discourse to ask questions, help\neach other solve problems, and come up with new ideas for the project.\n\n|mitmproxy_discourse|\n\n\nJoin our developer chat on Slack if you would like to contribute to mitmproxy itself.\n\n|slack|\n\n\nInstallation\n------------\n\nThe installation instructions are `here <http://docs.mitmproxy.org/en/stable/install.html>`__.\nIf you want to contribute changes, keep on reading.\n\nContributing\n------------\n\nAs an open source project, mitmproxy welcomes contributions of all forms. If you would like to bring the project forward,\nplease consider contributing in the following areas:\n\n- **Maintenance:** We are *incredibly* thankful for individuals who are stepping up and helping with maintenance. This includes (but is not limited to) triaging issues, reviewing pull requests and picking up stale ones, helping out other users in our forums_, creating minimal, complete and verifiable examples or test cases for existing bug reports, updating documentation, or fixing minor bugs that have recently been reported.\n- **Code Contributions:** We actively mark issues that we consider are `good first contributions`_. If you intend to work on a larger contribution to the project, please come talk to us first.\n\nDevelopment Setup\n-----------------\n\nTo get started hacking on mitmproxy, please follow the `advanced installation`_ steps to install mitmproxy from source, but stop right before running ``pip3 install mitmproxy``. Instead, do the following:\n\n.. code-block:: text\n\n    git clone https://github.com/mitmproxy/mitmproxy.git\n    cd mitmproxy\n    ./dev.sh  # \"powershell .\\dev.ps1\" on Windows\n\n\nThe *dev* script will create a `virtualenv`_ environment in a directory called \"venv\"\nand install all mandatory and optional dependencies into it. The primary\nmitmproxy components - mitmproxy and pathod - are installed as\n\"editable\", so any changes to the source in the repository will be reflected\nlive in the virtualenv.\n\nThe main executables for the project - ``mitmdump``, ``mitmproxy``,\n``mitmweb``, ``pathod``, and ``pathoc`` - are all created within the\nvirtualenv. After activating the virtualenv, they will be on your $PATH, and\nyou can run them like any other command:\n\n.. code-block:: text\n\n    . venv/bin/activate  # \"venv\\Scripts\\activate\" on Windows\n    mitmdump --version\n\nTesting\n-------\n\nIf you've followed the procedure above, you already have all the development\nrequirements installed, and you can run the full test suite (including tests for code style and documentation) with tox_:\n\n.. code-block:: text\n\n    tox\n\nFor speedier testing, we recommend you run `pytest`_ directly on individual test files or folders:\n\n.. code-block:: text\n\n    cd test/mitmproxy/addons\n    pytest --cov mitmproxy.addons.anticache --looponfail test_anticache.py\n\nAs pytest does not check the code style, you probably want to run ``tox -e lint`` before committing your changes.\n\nPlease ensure that all patches are accompanied by matching changes in the test\nsuite. The project tries to maintain 100% test coverage and enforces this strictly for some parts of the codebase.\n\nDocumentation\n-------------\n\nThe mitmproxy documentation is build using Sphinx_, which is installed\nautomatically if you set up a development environment as described above. After\ninstallation, you can render the documentation like this:\n\n.. code-block:: text\n\n    cd docs\n    make clean\n    make html\n    make livehtml\n\nThe last command invokes `sphinx-autobuild`_, which watches the Sphinx directory and rebuilds\nthe documentation when a change is detected.\n\nCode Style\n----------\n\nKeeping to a consistent code style throughout the project makes it easier to\ncontribute and collaborate. Please stick to the guidelines in\n`PEP8`_ and the `Google Style Guide`_ unless there's a very\ngood reason not to.\n\nThis is automatically enforced on every PR. If we detect a linting error, the\nPR checks will fail and block merging. You can run our lint checks yourself\nwith the following command:\n\n.. code-block:: text\n\n    tox -e lint\n\n\n.. |mitmproxy_site| image:: https://shields.mitmproxy.org/api/https%3A%2F%2F-mitmproxy.org-blue.svg\n    :target: https://mitmproxy.org/\n    :alt: mitmproxy.org\n\n.. |mitmproxy_docs| image:: https://shields.mitmproxy.org/api/docs-latest-brightgreen.svg\n    :target: http://docs.mitmproxy.org/en/latest/\n    :alt: mitmproxy documentation\n\n.. |mitmproxy_discourse| image:: https://shields.mitmproxy.org/api/https%3A%2F%2F-discourse.mitmproxy.org-orange.svg\n    :target: https://discourse.mitmproxy.org\n    :alt: Discourse: mitmproxy\n\n.. |slack| image:: http://slack.mitmproxy.org/badge.svg\n    :target: http://slack.mitmproxy.org/\n    :alt: Slack Developer Chat\n\n.. |travis| image:: https://shields.mitmproxy.org/travis/mitmproxy/mitmproxy/master.svg?label=travis%20ci\n    :target: https://travis-ci.org/mitmproxy/mitmproxy\n    :alt: Travis Build Status\n\n.. |appveyor| image:: https://shields.mitmproxy.org/appveyor/ci/mhils/mitmproxy/master.svg?label=appveyor%20ci\n    :target: https://ci.appveyor.com/project/mhils/mitmproxy\n    :alt: Appveyor Build Status\n\n.. |coverage| image:: https://shields.mitmproxy.org/codecov/c/github/mitmproxy/mitmproxy/master.svg?label=codecov\n    :target: https://codecov.io/gh/mitmproxy/mitmproxy\n    :alt: Coverage Status\n\n.. |latest_release| image:: https://shields.mitmproxy.org/pypi/v/mitmproxy.svg\n    :target: https://pypi.python.org/pypi/mitmproxy\n    :alt: Latest Version\n\n.. |python_versions| image:: https://shields.mitmproxy.org/pypi/pyversions/mitmproxy.svg\n    :target: https://pypi.python.org/pypi/mitmproxy\n    :alt: Supported Python versions\n\n.. _`advanced installation`: http://docs.mitmproxy.org/en/latest/install.html#advanced-installation\n.. _virtualenv: https://virtualenv.pypa.io/\n.. _`pytest`: http://pytest.org/\n.. _tox: https://tox.readthedocs.io/\n.. _Sphinx: http://sphinx-doc.org/\n.. _sphinx-autobuild: https://pypi.python.org/pypi/sphinx-autobuild\n.. _PEP8: https://www.python.org/dev/peps/pep-0008\n.. _`Google Style Guide`: https://google.github.io/styleguide/pyguide.html\n.. _forums: https://discourse.mitmproxy.org/\n.. _`good first contributions`: https://github.com/mitmproxy/mitmproxy/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-contribution",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mitmproxy.org",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mitmproxy",
    "package_url": "https://pypi.org/project/mitmproxy/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mitmproxy/",
    "project_urls": {
      "Homepage": "http://mitmproxy.org"
    },
    "release_url": "https://pypi.org/project/mitmproxy/2.0.2/",
    "requires_dist": [
      "blinker (<1.5,>=1.4)",
      "brotlipy (<0.7,>=0.5.1)",
      "certifi (>=2015.11.20.1)",
      "click (<7,>=6.2)",
      "construct (>=2.8,<2.9)",
      "cryptography (>=1.3,<1.9)",
      "cssutils (<1.1,>=1.0.1)",
      "h2 (>=2.5.1,<3)",
      "html2text (>=2016.1.8,<=2016.9.19)",
      "hyperframe (>=4.0.1,<5)",
      "jsbeautifier (>=1.6.3,<1.7)",
      "kaitaistruct (<0.7,>=0.6)",
      "passlib (>=1.6.5,<1.8)",
      "pyOpenSSL (>=16.0,<17.0)",
      "pyasn1 (<0.3,>=0.1.9)",
      "pyparsing (<2.3,>=2.1.3)",
      "pyperclip (>=1.5.22,<1.6)",
      "requests (>=2.9.1,<3)",
      "ruamel.yaml (<0.14,>=0.13.2)",
      "setuptools (!=29.0.0,>=11.3)",
      "sortedcontainers (>=1.5.4,<1.6)",
      "tornado (>=4.3,<4.5)",
      "urwid (>=1.3.1,<1.4)",
      "watchdog (>=0.8.3,<0.9)",
      "pydivert (<2.1,>=2.0.3); sys_platform == \"win32\"",
      "Flask (<0.13,>=0.10.1); extra == 'dev'",
      "flake8 (>=3.2.1,<3.4); extra == 'dev'",
      "mypy (>=0.471,<0.480); extra == 'dev'",
      "pytest (>=3,<3.1); extra == 'dev'",
      "pytest-cov (<3,>=2.2.1); extra == 'dev'",
      "pytest-faulthandler (<2,>=1.3.0); extra == 'dev'",
      "pytest-timeout (<2,>=1.0.0); extra == 'dev'",
      "pytest-xdist (<2,>=1.14); extra == 'dev'",
      "rstcheck (>=2.2,<4.0); extra == 'dev'",
      "sphinx (>=1.3.5,<1.6); extra == 'dev'",
      "sphinx-autobuild (<0.7,>=0.5.2); extra == 'dev'",
      "sphinx-rtd-theme (<0.2,>=0.1.9); extra == 'dev'",
      "sphinxcontrib-documentedlist (<0.6,>=0.5.0); extra == 'dev'",
      "tox (<3,>=2.3); extra == 'dev'",
      "Pillow (>=3.2,<4.1); extra == 'examples'",
      "beautifulsoup4 (<4.6,>=4.4.1); extra == 'examples'",
      "pytz (<=2016.10,>=2015.07.0); extra == 'examples'"
    ],
    "requires_python": "",
    "summary": "An interactive, SSL-capable, man-in-the-middle HTTP proxy for penetration testers and software developers.",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15625866,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0765a536cb3a77f973c904cae9c9f1fc83e2352b73007bf45682fe376e456723",
        "md5": "aedc88e2892e84ff0450c2334b0f3534",
        "sha256": "88a90ed3dfb518e1af84bb5e49ce8e45833eee08a2b5260d8ec723cd767d753c"
      },
      "downloads": -1,
      "filename": "mitmproxy-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aedc88e2892e84ff0450c2334b0f3534",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1410037,
      "upload_time": "2017-04-28T12:40:48",
      "upload_time_iso_8601": "2017-04-28T12:40:48.399930Z",
      "url": "https://files.pythonhosted.org/packages/07/65/a536cb3a77f973c904cae9c9f1fc83e2352b73007bf45682fe376e456723/mitmproxy-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2018-14505",
        "GHSA-6m53-c78q-7qmg"
      ],
      "details": "mitmweb in mitmproxy v4.0.3 allows DNS Rebinding attacks, related to tools/web/app.py.",
      "fixed_in": [
        "4.0.4"
      ],
      "id": "PYSEC-2018-56",
      "link": "https://osv.dev/vulnerability/PYSEC-2018-56",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39214",
        "GHSA-22gh-3r9q-xf38"
      ],
      "details": "mitmproxy is an interactive, SSL/TLS-capable intercepting proxy. In mitmproxy 7.0.2 and below, a malicious client or server is able to perform HTTP request smuggling attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While a smuggled request is still captured as part of another request's body, it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization. Unless one uses mitmproxy to protect an HTTP/1 service, no action is required. The vulnerability has been fixed in mitmproxy 7.0.3 and above.",
      "fixed_in": [
        "7.0.3"
      ],
      "id": "PYSEC-2021-328",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-328",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-24766",
        "GHSA-gcx2-gvj7-pxv3"
      ],
      "details": "mitmproxy is an interactive, SSL/TLS-capable intercepting proxy. In mitmproxy 7.0.4 and below, a malicious client or server is able to perform HTTP request smuggling attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization. Unless mitmproxy is used to protect an HTTP/1 service, no action is required. The vulnerability has been fixed in mitmproxy 8.0.0 and above. There are currently no known workarounds.",
      "fixed_in": [
        "8.0.0"
      ],
      "id": "PYSEC-2022-170",
      "link": "https://osv.dev/vulnerability/PYSEC-2022-170",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2021-39214"
      ],
      "details": "### Impact\n\nIn mitmproxy 7.0.2 and below, a malicious client or server is able to perform [HTTP request smuggling](https://en.wikipedia.org/wiki/HTTP_request_smuggling) attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization.\n\nUnless you use mitmproxy to protect an HTTP/1 service, no action is required.\n\n\n### Patches\n\nThe vulnerability has been fixed in mitmproxy 7.0.3 and above.\n\n\n### Acknowledgements\n\nWe thank João Sobral (@chinchila) for responsibly disclosing this vulnerability to the mitmproxy team.\n\n\n### Timeline\n\n- **2021-09-08**: Received initial report for mitmproxy <= 6.0.2.\n- **2021-09-08**: Requested clarification if 7.x is affected.\n- **2021-09-10**: Received additional details, 7.x situation still unclear.\n- **2021-09-13**: Internally determined that 7.x is also affected.\n- **2021-09-13**: Shared initial fix with researcher.\n- **2021-09-14**: Received confirmation that fix is working, but H2.TE/H2.CL should also be looked at.\n- **2021-09-14**: Shared revised fix that includes additional H2.TE mitigations.\n- **2021-09-14**: Received confirmation that revised fix is working.\n- **2021-09-16**: Completed internal patch review.\n- **2021-09-16**: Published patch release and advisory.",
      "fixed_in": [
        "7.0.3"
      ],
      "id": "GHSA-22gh-3r9q-xf38",
      "link": "https://osv.dev/vulnerability/GHSA-22gh-3r9q-xf38",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2018-14505"
      ],
      "details": "mitmweb in mitmproxy before v4.0.4 allows DNS Rebinding attacks, related to tools/web/app.py.",
      "fixed_in": [
        "4.0.4"
      ],
      "id": "GHSA-6m53-c78q-7qmg",
      "link": "https://osv.dev/vulnerability/GHSA-6m53-c78q-7qmg",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2022-24766"
      ],
      "details": "### Impact\n\nIn mitmproxy 7.0.4 and below, a malicious client or server is able to perform [HTTP request smuggling](https://en.wikipedia.org/wiki/HTTP_request_smuggling) attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization.\n\nUnless you use mitmproxy to protect an HTTP/1 service, no action is required.\n\n\n### Patches\n\nThe vulnerability has been fixed in mitmproxy 8.0.0 and above.\n\n\n### Acknowledgements\n\nWe thank Zeyu Zhang (@zeyu2001) for responsibly disclosing this vulnerability to the mitmproxy team.\n\n\n### Timeline\n\n- **2022-03-15**: Received initial report.\n- **2022-03-15**: Verified report and confirmed receipt.\n- **2022-03-16**: Shared patch with researcher.\n- **2022-03-16**: Received confirmation that patch is working.\n- **2022-03-19**: Published patched release and advisory.",
      "fixed_in": [
        "8.0.0"
      ],
      "id": "GHSA-gcx2-gvj7-pxv3",
      "link": "https://osv.dev/vulnerability/GHSA-gcx2-gvj7-pxv3",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}