{
  "info": {
    "author": "fritill",
    "author_email": "mahmoud.nasser@fritill.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Model Translation\n\n## Configuration\n\n### in settings.py file\n```python\nINSTALLED_APPS = [\n  ...,\n 'rest_framework',\n 'translation'\n]\n\nMAIN_LANGUAGE = 'ar' #you could add any language could you want\n```\n\n### in urls\n```python\nurlpatterns = [\n    ....\n    path('', include('translation.urls', namespace='translation'))\n]\n```\n\n\n## usage\n\n### In model:\n\n* Use ```from translation.translation import TranslatableModel```  instead of ``` django.db.models.Model ```\n* Use ``` django.db.models.JSONField ``` for every translatable field\n* define \"translatable\" property which defines the translatable fields in the model\n* translatable is a dictionary that references the translatable fields in any table\n    * translatable key is field name\n    * translatable value is a dictionary that can take two items **form field** and **form field widget**\n    * the default widget is ```forms.TextInput```\n* you can access the current locale of certain field by using ``` model.translated_field```\n  for example if ```model``` has field ```name``` to get translated value to current locale\n  use ``` model.translated_name ```\n\n**Example**\n\n```python\nfrom django import forms\nfrom django.db import models\nfrom translation.models import  TranslatableModel\n\n\nclass Foo(TranslatableModel):\n    ...\n    # define translatable \n    translatable = {\n        'name': {\"field\": forms.CharField},\n        'bio': {\"field\": forms.CharField, \"widget\": forms.Textarea},\n    }\n\n    ...\n    # define your fields here\n    name = models.JSONField(blank=True, null=True)\n    bio = models.JSONField(blank=True, null=True)\n\n    ...\n\n```\n\n### In Forms:\n\nUse ```from translation.translation import TranslatableModelForm```  instead of ``` django.forms.ModelForm ```\n\n### TranslationURl\n\nTo use translation form for any model just redirect to this url\n\n**please note** \"next\" query parameter is mandatory parameter\n\n```python\nfrom django.urls import reverse\n\nnext_url = '/any/url/you/want/to/redirect/to/after/translation'\n\nreverse(\"{yourpath}:translate\", kwargs={\n    \"app_label\": \"app_label\",\n    \"model\": \"model\",\n    \"pk\": \"pk\"\n}) + '?next={}'.format(next_url)\n```\n\n### In Serializer\n\nUse ```utils.serializers.TranslatableModelSerializer``` instead of ``` rest_framework.serializers.ModelSerializer ```\n\n```python\nfrom translation.serializers import  TranslatableModelSerializer\n\n\nclass FooSerializer(TranslatableModelSerializer):\n    class Meta:\n        fields = '__all__'\n        model = TranslatableTestModel\n\n\n...\n\ndata = {\n    \"title\": {\n        \"en\": \"en_title\",\n        \"ar\": \"ar_title\"\n    },\n    \"description\": {\n        \"en\": \"en_title\",\n        \"ar\": \"ar_title\"\n    }\n}\n\nserializer = FooSerializer(data=data)\nserializer.is_valid()\nserializer.save()\n```\n\n<ins>```.to_representation(self, instance)```</ins>\n\n* it returns value by current locale ``` serializer.data[\"title\"] ```\n  => ```\"en_title\"``` if current locale is ```en```\n\n* when current does not exist it returns value by fallback locale\n\n<ins>```.to_internal_value(self, data)```</ins>\n\n* it accepts single value and set it by current locale\n    * ``` data = {\"title\": \"foo title\"} ``` => ``` {\"title\": {\"en\": \"foo title\"}} ``` if ``` en ``` is current locale\n* it accepts json value and set it as it is\n    * ``` data = {\"title\": {\"en\": \"en foo title\", \"ar\": \"ar foo title\"}} ```\n      => ``` {\"title\": {\"en\": \"en foo title\", \"ar\": \"ar foo title\"}} ```\n    * it raises validation error when add language code that doe not exists in supported languages\n\n### In templates\n\n<ins>```get_field_original_translation```</ins>\n\nto get original field translation \"main language\" use filter for example\n\nEX:\n\n   ```  name|get_field_original_translation ```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fritill-team/django_translation.git",
    "keywords": "django translation custom",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-translation",
    "package_url": "https://pypi.org/project/django-translation/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-translation/",
    "project_urls": {
      "Homepage": "https://github.com/fritill-team/django_translation.git"
    },
    "release_url": "https://pypi.org/project/django-translation/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "this is an application for model translation",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13349499,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "972f88c87287693013fc7217d11e5ac97c88f9b0e216eb828ae779a13b2380a6",
        "md5": "24702630b5cc13f853412c12816411eb",
        "sha256": "ca97b4232b27c4be1e0cc3da137c13c78c455ff97bea18159e4bf03b44e3a160"
      },
      "downloads": -1,
      "filename": "django-translation-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "24702630b5cc13f853412c12816411eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14105,
      "upload_time": "2022-03-30T16:20:40",
      "upload_time_iso_8601": "2022-03-30T16:20:40.624848Z",
      "url": "https://files.pythonhosted.org/packages/97/2f/88c87287693013fc7217d11e5ac97c88f9b0e216eb828ae779a13b2380a6/django-translation-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}