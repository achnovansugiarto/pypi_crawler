{
  "info": {
    "author": "Thomas Moreau",
    "author_email": "thomas.moreau.2010@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "Reusable Process Pool Executor\n==============================\n|Build Status| |Build status| |codecov|\n\n\nGoal\n~~~~\n\nThe aim of this project is to provide a robust, cross-platform and\ncross-version implementation of the :class:`~concurrent.futures.ProcessPoolExecutor` class of\n:mod:`concurrent.futures`. It notably features:\n\n-  **Deadlock free implementation**: one of the major concern in standard :class:`multiprocessing.pool.Pool` and in :class:`concurrent.futures.ProcessPoolExecutor` is their ability to handle crashes of worker processes. This library intends to fix those possible deadlocks and send back meaningful errors.\n\n-  **Consistent spawn behavior**: All processes are started using fork/exec on POSIX systems. This ensures safer interactions with third party libraries.\n\n-  **Reusable executor**: strategy to avoid re-spawning a complete executor every time. A singleton executor instance can be reused (and dynamically resized if necessary) across consecutive calls to limit spawning and shutdown overhead. The worker processes can be shutdown automatically after a configurable idling timeout to free system resources.\n\n-  **Transparent :mod:`cloudpickle` integration**: to call interactively defined functions and lambda expressions in parallel. It is also possible to register a custom pickler implementation to handle inter-process communications.\n\n-  **No need for ``if __name__ == \"__main__\":`` in scripts**: thanks to the use of :mod:`cloudpickle <https://github.com/cloudpipe/cloudpickle>` to call functions defined in the :mod:`__main__` module, it is not required to protect the code calling parallel functions under Windows.\n\nUsage\n~~~~~\n\nThe basic usage of :mod:`loky` relies on the :func:`~loky.get_reusable_executor`, which internally manages a custom :class:`~concurrent.futures.ProcessPoolExecutor` object, which is reused or re-spawned depending on the context.\n\n.. code:: python\n\n    import os\n    from time import sleep\n    from loky import get_reusable_executor\n\n\n    def say_hello(k):\n        pid = os.getpid()\n        print(\"Hello from {} with arg {}\".format(pid, k))\n        sleep(.01)\n        return pid\n\n\n    # Create an executor with 4 worker processes, that will\n    # automatically shutdown after idling for 2s\n    executor = get_reusable_executor(max_workers=4, timeout=2)\n\n    res = executor.submit(say_hello, 1)\n    print(\"Got results:\", res.result())\n\n    results = executor.map(say_hello, range(50))\n    n_workers = len(set(results))\n    print(\"Number of used processes:\", n_workers)\n    assert n_workers == 4\n\n\nAcknowledgement\n~~~~~~~~~~~~~~~\n\nThis work is supported by the Center for Data Science, funded by the\nIDEX Paris-Saclay, ANR-11-IDEX-0003-02\n\n\n.. |Build Status| image:: https://travis-ci.org/tomMoral/loky.svg?branch=master\n   :target: https://travis-ci.org/tomMoral/loky\n.. |Build status| image:: https://ci.appveyor.com/api/projects/status/oifqilb5sb0p7fdp/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/tomMoral/loky/branch/master\n.. |codecov| image:: https://codecov.io/gh/tomMoral/loky/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/tomMoral/loky\n\n.. _cloudpickle: https://github.com/cloudpipe/cloudpickle\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tommoral/loky/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loky",
    "package_url": "https://pypi.org/project/loky/",
    "platform": "any",
    "project_url": "https://pypi.org/project/loky/",
    "project_urls": {
      "Homepage": "https://github.com/tommoral/loky/"
    },
    "release_url": "https://pypi.org/project/loky/2.1.0/",
    "requires_dist": [
      "cloudpickle"
    ],
    "requires_python": "",
    "summary": "A robust implementation of concurrent.futures.ProcessPoolExecutor",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15106700,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b704425331cdfce8a3cbe1484397de241610033d0eca70e0eebbe2ddf9517a1",
        "md5": "df951f3ca34a47114775310ef9a1f9d9",
        "sha256": "372adc958daf437c53100a435a0bc651539914f11f9403ca3795225d071f4a40"
      },
      "downloads": -1,
      "filename": "loky-2.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df951f3ca34a47114775310ef9a1f9d9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 56555,
      "upload_time": "2018-04-11T15:53:32",
      "upload_time_iso_8601": "2018-04-11T15:53:32.177432Z",
      "url": "https://files.pythonhosted.org/packages/6b/70/4425331cdfce8a3cbe1484397de241610033d0eca70e0eebbe2ddf9517a1/loky-2.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "581ecc0fcc4ac18f67dd89d523723c99209573caa12c417a6d09d84576afd780",
        "md5": "8af59abfb22ecac90a973a7c9f4c78eb",
        "sha256": "13e64fe60fa6bb98fa66dbf6de1d184259616d18d1b92180a98e91ef07c44531"
      },
      "downloads": -1,
      "filename": "loky-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8af59abfb22ecac90a973a7c9f4c78eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 76081,
      "upload_time": "2018-04-11T15:53:33",
      "upload_time_iso_8601": "2018-04-11T15:53:33.507727Z",
      "url": "https://files.pythonhosted.org/packages/58/1e/cc0fcc4ac18f67dd89d523723c99209573caa12c417a6d09d84576afd780/loky-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}