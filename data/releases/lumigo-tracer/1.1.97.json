{
  "info": {
    "author": "Lumigo LTD (https://lumigo.io)",
    "author_email": "support@lumigo.io",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![CircleCI](https://circleci.com/gh/lumigo-io/python_tracer/tree/master.svg?style=svg&circle-token=421fefe82bcad1c17c4116f154e25e32ebc90f2c)\n![Version](https://badge.fury.io/py/lumigo-tracer.svg)\n![codecov](https://codecov.io/gh/lumigo-io/python_tracer/branch/master/graph/badge.svg?token=6EgXIlefwG)\n\nSupported Runtimes: 3.6, 3.7, 3.8\n\n# How To Use\n## With Lambda Layers:\n* Use the latest ARN version [from these tables](https://github.com/lumigo-io/python_tracer/tree/master/layers)\n## With Serverless framework:\n* Install the [**serverless-lumigo-plugin**](https://github.com/lumigo-io/serverless-lumigo-plugin/blob/master/README.md)\n## Manually\n* install with `pip install lumigo_tracer` <br/> \n* import using `from lumigo_tracer import lumigo_tracer`\n* wrap you lambda function using `@lumigo_tracer` or `@lumigo_tracer(token='XXX')`. As an example, your lambda should look like: \n```\n@lumigo_tracer(token='XXX')\ndef my_lambda(event, context):\n    print('I can finally troubleshoot!')\n```\n\n## Configuration\n* You can turn on the debug logs by setting the environment variable `LUMIGO_DEBUG=true`\n* You can prevent lumigo from sending keys that answer specific regexes by defining `LUMIGO_SECRET_MASKING_REGEX=[\"regex1\", \"regex2\"]`. By default, we use the default regexes `[\".*pass.*\", \".*key.*\"]`. All the regexes are case-insensitive.\n* Similarly, you can prevent lumigo from sending the entire headers and body of specific domains using the environment variable `LUMIGO_DOMAINS_SCRUBBER=[\".*secret.*\"]` (give it a list which is a json parsable), or by specify the list of regexes with the key `domains_scrubber` in the tracer's decorator. By default, we will use `[\"secretsmanager\\..*\\.amazonaws\\.com\", \"ssm\\..*\\.amazonaws\\.com\", \"kms\\..*\\.amazonaws\\.com\"]`.\n* In case of need, there is a kill switch, that stops all the interventions of lumigo immediately, without changing the code. Simply add an environment variable `LUMIGO_SWITCH_OFF=true`.\n\n### Logging Programmatic Errors\nYou can use `report_error` function to write logs which will be visible in the platform.<br/>\nAdd `from lumigo_tracer import report_error`.<br/>\n\nThen use `report_error(\"<msg>\")` from anywhere in your lambda code.\n\n### Adding Execution Tags\nYou can use `add_execution_tag` function to add an execution_tag with a dynamic value.<br/>\nThis value can be searched within the Lumigo platform.<br/>\n\nAdd `from lumigo_tracer import add_execution_tag`.<br/>\nThen use `add_execution_tag(\"<key>\", \"<value>\")` from anywhere in your lambda code.<br/>\nLimitation:\n* The maximum number of tags is 50.\n* Key and value length should be between 1 and 50.\n\n\n### Step Functions\nIf this function is part of a step function, you can add the flag `step_function=True` or environment variable `LUMIGO_STEP_FUNCTION=True`, and we will track the states in the step function as a single transaction.\n```\n@lumigo_tracer(token='XXX', step_function=True)\ndef my_lambda(event, context):\n    print('Step function visibility!')\n```\nNote: we will add the key `\"_lumigo\"` to the return value of the function. \n\nIf you override the `\"Parameters\"` configuration, simply add `\"_lumigo.$\": \"$._lumigo\"`. <br/>\nFor example:\n```\n\"States\": {\n    \"state1\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:ACCOUNT:function:FUNCTION_NAME\",\n      \"Parameters\": {\n          \"Changed\": \"parameters\",\n          \"_lumigo.$\": \"$._lumigo\"\n        },\n      \"Next\": \"state2\"\n    },\n    \"state2\": {\n      \"Type\": \"pass\",\n      \"End\": true\n    }\n}\n```\n\n\n# Frameworks\n## Chalice\n* In chalice, you should add the following lines to the your file:\n```\nfrom lumigo_tracer import LumigoChalice\n...\napp = Chalice(app_name='chalice')\napp = LumigoChalice(app, token=\"XXX\")\n```\n\n## Sentry/Raven Lambda Integration\nAdd our decorator beneath the Raven decorator\n```\nfrom lumigo_tracer import lumigo_tracer\n...\n@RavenLambdaWrapper()\n@lumigo_tracer(token='XXX')\ndef lambda_handler (event, context):  return  {\n 'statusCode' :  200,\n 'body' : json.dumps( 'Hi!' ) }\n```\n# How To Contribute\nPrepare your machine\n----\n* Create a virtualenv `virtualenv venv -p python3`\n* Activate the virtualenv by running `. venv/bin/activate`\n* Run `pip install -r requirements.txt` to install dependencies.\n* `cd src` and `python setup.py develop`.\n* If you use pycharm, make sure to change its virtualenv through the PyCharm -> Preferences -> Project -> Interpreter under the menu\n* Run `pre-commit install` in your repository to install pre-commits hooks.\n\nTest\n----\n* To run the unit tests, run `py.test` in the root folder.\n* To deploy the services for the component tests, move to the root test directory and run `sls deploy`. This can be performed only once if the resources doesn't change.\n* To run the component tests, run `py.test --all`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lumigo-io/python_tracer.git",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumigo-tracer",
    "package_url": "https://pypi.org/project/lumigo-tracer/",
    "platform": "",
    "project_url": "https://pypi.org/project/lumigo-tracer/",
    "project_urls": {
      "Homepage": "https://github.com/lumigo-io/python_tracer.git"
    },
    "release_url": "https://pypi.org/project/lumigo-tracer/1.1.97/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lumigo Tracer for Python v3.6 / v3.7 runtimes",
    "version": "1.1.97",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17261988,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "596aa467260bb76c59b37f77cf2b5fa5d499a10792b47b3548097055dbc7080e",
        "md5": "3d6a0c07ea4296ba24177faa58851596",
        "sha256": "99312b53751fc0b922df60b2290cd79650ba767303a9228811c1faa263251278"
      },
      "downloads": -1,
      "filename": "lumigo_tracer-1.1.97-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d6a0c07ea4296ba24177faa58851596",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 45113,
      "upload_time": "2020-07-07T12:34:16",
      "upload_time_iso_8601": "2020-07-07T12:34:16.828387Z",
      "url": "https://files.pythonhosted.org/packages/59/6a/a467260bb76c59b37f77cf2b5fa5d499a10792b47b3548097055dbc7080e/lumigo_tracer-1.1.97-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}