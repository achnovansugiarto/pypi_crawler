{
  "info": {
    "author": "Lucas Weyne",
    "author_email": "weynelucas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "        \r\r\n        # django-db-adapter\r\r\n        A configurable database backend for Oracle\r\r\n        \r\r\n        ## Requirements\r\r\n        django-db-adapter was tested with the following requirements:\r\r\n        \r\r\n        - [Python](https://www.python.org/) (3+)\r\r\n        - [Django](https://docs.djangoproject.com/) (1.11)\r\r\n        - [cx_Oracle](http://cx-oracle.readthedocs.io/en/latest/) (5.2+)\r\r\n        \r\r\n        The following packages are optional:\r\r\n        - [progressbar2](https://pypi.python.org/pypi/progressbar2) (3.34.0+) - Used only to display progress during `sqlmigrateall` command\r\r\n        \r\r\n        ## Installation\r\r\n        Install using pip, including any optional packages you want...\r\r\n        \r\r\n        ```\r\r\n        pip install django-db-adapter\r\r\n        ```\r\r\n        \r\r\n        ...or clone the project from github.\r\r\n        \r\r\n        ```\r\r\n        git clone https://github.com/weynelucas/django-db-adapter.git\r\r\n        ```\r\r\n        \r\r\n        Add `'db_adapter'` at the top of your `INSTALLED_APPS` setting.\r\r\n        \r\r\n        ```python\r\r\n        INSTALLED_APPS = (\r\r\n            ...,\r\r\n            'db_adapter'\r\r\n        )\r\r\n        ```\r\r\n        \r\r\n        ## Quickstart\r\r\n        Any global settings for a django-db-adapter are kept in a single configuration dictionary named `DB_ADAPTER`\r\r\n        \r\r\n        ```python\r\r\n        DB_ADAPTER = {\r\r\n            'SCHEMA': 'CONN_ORCL',\r\r\n            'ALLOWED_BACKENDS': ['oracle'],\r\r\n            'PREFIX': {\r\r\n                'TABLE': 'tb_',\r\r\n                'FOREIGN_KEY': 'ce_',\r\r\n                'INDEX': 'ix_',\r\r\n                'UNIQUE': 'ct_',\r\r\n                'TRIGGER': 'tg_',\r\r\n                'SEQUENCE': 'sq_'\r\r\n            }\r\r\n        }\r\r\n        ```\r\r\n        \r\r\n        You must setting the connection parameter `ENGINE` from `DATABASES` with the custom oracle database backend to apply your `DB_ADAPTER` settings.\r\r\n        \r\r\n        ```python\r\r\n        DATABASES = {\r\r\n            'default': {\r\r\n                'ENGINE': 'db_adapter.db.backends.oracle',\r\r\n                'NAME': 'mydatabase',\r\r\n                'USER': 'mydatabaseuser',\r\r\n                'PASSWORD': 'mypassword',\r\r\n                'HOST': '127.0.0.1',\r\r\n                'PORT': '1521'\r\r\n            }\r\r\n        }\r\r\n        ```\r\r\n        \r\r\n        ## Settings\r\r\n        Configuration for django-db-adapter is all namespaced inside a single Django setting, named `DB_ADAPTER`.\r\r\n        \r\r\n        If you need to access the values of `db_adapter` settings in your project, you should use the `settings` object. For example.\r\r\n        \r\r\n        ```python\r\r\n        from db_adapter.config import settings\r\r\n        \r\r\n        print settings.SCHEMA\r\r\n        print settings.PREFIX['TABLE']\r\r\n        ```\r\r\n        \r\r\n        ### Global settings\r\r\n        \r\r\n        #### `SCHEMA`\r\r\n        **Default:**  `None`\r\r\n        \r\r\n        String with user schema name of you database connection. This value will be appended to all database queries.\r\r\n        \r\r\n        #### `ALLOWED_BACKENDS`\r\r\n        **Default:** `[ '*' ]`\r\r\n        \r\r\n        List of database backends names allowed to perform non-oracle actions. Add table prefixes and the command `sqlmigrateall` are actions that not require a oracle backend. If a backend are not present on list, theese action will not be performed.\r\r\n        \r\r\n        Options are: `'mysql'`, `'oracle'`, `'postgresql'`, `'postgresql_psycopg2'`, `'sqlite'` or `*` for allow all backends to perform non-oracle actions\r\r\n        \r\r\n        \r\r\n        #### `PREFIX`\r\r\n        **Default:**\r\r\n        ```python\r\r\n        {\r\r\n            'TABLE': 'tb_',\r\r\n            'FOREIGN_KEY': 'fk_',\r\r\n            'INDEX': 'ix_',\r\r\n            'UNIQUE': 'uniq_',\r\r\n            'TRIGGER': 'tg_',\r\r\n            'SEQUENCE': 'sq_'\r\r\n        }\r\r\n        ```\r\r\n        \r\r\n        Default prefix mapping for all database objects. This configuration allow backend to create DDL commands applying theese prefixes for each database object. \r\r\n        \r\r\n        ```sql\r\r\n        CREATE TABLE \"TB_PERSON\" (\"ID\" NUMBER(11) NOT NULL PRIMARY KEY, \"NAME\" NVARCHAR2(255) NULL);\r\r\n        \r\r\n        DECLARE\r\r\n            i INTEGER;\r\r\n        BEGIN\r\r\n            SELECT COUNT(1) INTO i FROM USER_SEQUENCES\r\r\n                WHERE SEQUENCE_NAME = 'SQ_PERSON';\r\r\n            IF i = 0 THEN\r\r\n                EXECUTE IMMEDIATE 'CREATE SEQUENCE \"SQ_PERSON\"';\r\r\n            END IF;\r\r\n        END;\r\r\n        /;\r\r\n        ```\r\r\n        \r\r\n        ## Release Notes\r\r\n        \r\r\n        - 1.0.0 - 16/04/2018 - First release\r\r\n        - 1.0.1 - 16/04/2018 - Rename package and fix setup issues\r\nKeywords: django database schema editor oracle django-db-adapter\r\nPlatform: UNKNOWN\r\nClassifier: Development Status :: 5 - Production/Stable\r\nClassifier: Framework :: Django\r\nClassifier: Intended Audience :: Developers\r\nClassifier: Topic :: Internet :: WWW/HTTP\r\nClassifier: License :: OSI Approved :: MIT License\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.3\r\nClassifier: Programming Language :: Python :: 3.4\r\nClassifier: Programming Language :: Python :: 3.5\r\nClassifier: Programming Language :: Python :: 3.6\r\nDescription-Content-Type: text/markdown\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/weynelucas/django-db-adapter/archive/1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/weynelucas/django-db-adapter/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-db-adapter",
    "package_url": "https://pypi.org/project/django-db-adapter/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-db-adapter/",
    "project_urls": {
      "Download": "https://github.com/weynelucas/django-db-adapter/archive/1.0.1.tar.gz",
      "Homepage": "https://github.com/weynelucas/django-db-adapter/"
    },
    "release_url": "https://pypi.org/project/django-db-adapter/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A configurable database backend for Oracle",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9844026,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "257069b48ff5c8791425db9ec7ed89197f846f768e61da754a76e8805304ba53",
        "md5": "4d0b3e6b40e7ab0f69dd09b9120f4699",
        "sha256": "0e06c00df89f4dcba6af10fbcf4da41f695a268c0f1fa57fa5d8adc12313eec8"
      },
      "downloads": -1,
      "filename": "django-db-adapter-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4d0b3e6b40e7ab0f69dd09b9120f4699",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6204,
      "upload_time": "2018-04-16T19:46:05",
      "upload_time_iso_8601": "2018-04-16T19:46:05.434143Z",
      "url": "https://files.pythonhosted.org/packages/25/70/69b48ff5c8791425db9ec7ed89197f846f768e61da754a76e8805304ba53/django-db-adapter-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}