{
  "info": {
    "author": "Mike Fogel",
    "author_email": "mike@fogel.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "django-timezone-field\n=====================\n\n.. image:: https://img.shields.io/travis/mfogel/django-timezone-field.svg\n   :target: https://travis-ci.org/mfogel/django-timezone-field/\n\n.. image:: https://img.shields.io/coveralls/mfogel/django-timezone-field.svg\n   :target: https://coveralls.io/r/mfogel/django-timezone-field/\n\n.. image:: https://img.shields.io/pypi/dm/django-timezone-field.svg\n   :target: https://pypi.python.org/pypi/django-timezone-field/\n\nA Django app providing database and form fields for `pytz`__ timezone objects.\n\nExamples\n--------\n\nDatabase Field\n~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import pytz\n    from django.db import models\n    from timezone_field import TimeZoneField\n\n    class MyModel(models.Model):\n        tz1 = TimeZoneField(default='Europe/London')            # defaults supported\n        tz2 = TimeZoneField()                                   # in ModelForm displays like \"America/Los Angeles\"\n        tz3 = TimeZoneField(choices_display='WITH_GMT_OFFSET')  # in ModelForm displays like \"GMT-08:00 America/Los Angeles\"\n\n    my_model = MyModel(\n        tz1='America/Los_Angeles',    # assignment of a string\n        tz2=pytz.timezone('Turkey'),  # assignment of a pytz.DstTzInfo\n        tz3=pytz.UTC,                 # assignment of pytz.UTC singleton\n    )\n    my_model.full_clean() # validates against pytz.common_timezones by default\n    my_model.save()       # values stored in DB as strings\n    my_model.tz1          # values retrieved as pytz objects: <DstTzInfo 'America/Los_Angeles' PST-1 day, 16:00:00 STD>\n\n\nForm Field\n~~~~~~~~~~\n\n.. code:: python\n\n    from django import forms\n    from timezone_field import TimeZoneFormField\n\n    class MyForm(forms.Form):\n        tz = TimeZoneFormField()                                    # displays like \"America/Los Angeles\"\n        tz2 = TimeZoneFormField(choices_display='WITH_GMT_OFFSET')  # displays like \"GMT-08:00 America/Los Angeles\"\n\n    my_form = MyForm({'tz': 'America/Los_Angeles'})\n    my_form.full_clean()        # validates against pytz.common_timezones by default\n    my_form.cleaned_data['tz']  # values retrieved as pytz objects: <DstTzInfo 'America/Los_Angeles' PST-1 day, 16:00:00 STD>\n\n\nREST Framework Serializer Field\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import pytz\n    from rest_framework import serializers\n    from timezone_field.rest_framework import TimeZoneSerializerField\n\n    class MySerializer(serializers.Serializer):\n        tz1 = TimeZoneSerializerField()\n        tz2 = TimeZoneSerializerField()\n\n    my_serializer = MySerializer(data={\n        'tz1': 'America/Argentina/Buenos_Aires',\n        'tz2': pytz.timezone('America/Argentina/Buenos_Aires'),\n    })\n    my_serializer.is_valid()            # true\n    my_serializer.validated_data['tz1'] # <DstTzInfo 'America/Argentina/Buenos_Aires' LMT-1 day, 20:06:00 STD>\n    my_serializer.validated_data['tz2'] # <DstTzInfo 'America/Argentina/Buenos_Aires' LMT-1 day, 20:06:00 STD>\n\n\nInstallation\n------------\n\n#.  From `pypi`__ using `pip`__:\n\n    .. code:: sh\n\n        pip install django-timezone-field\n\n#.  Add `timezone_field` to your `settings.INSTALLED_APPS`__:\n\n    .. code:: python\n\n        INSTALLED_APPS = (\n            ...\n            'timezone_field',\n            ...\n        )\n\nChangelog\n------------\n\n*   4.1.2 (2021-03-17)\n\n    *   Avoid `NonExistentTimeError` during DST transition (`#70`__)\n\n*   4.1.1 (2020-11-28)\n\n    *   Don't import `rest_framework` from package root (`#67`__)\n\n*   4.1 (2020-11-28)\n\n    *   Add Django REST Framework serializer field\n    *   Add new `choices_display` kwarg with supported values `WITH_GMT_OFFSET` and `STANDARD`\n    *   Deprecate `display_GMT_offset` kwarg\n\n*   4.0 (2019-12-03)\n\n    *   Add support for django 3.0, python 3.8\n    *   Drop support for django 1.11, 2.0, 2.1, python 2.7, 3.4\n\n*   3.1 (2019-10-02)\n\n    *   Officially support django 2.2 (already worked)\n    *   Add option to display TZ offsets in form field `#46`__\n\n*   3.0 (2018-09-15)\n\n    *   Support django 1.11, 2.0, 2.1\n    *   Add support for python 3.7\n    *   Change default human-readable timezone names to exclude underscores\n        (`#32`__ & `#37`__)\n\n*   2.1 (2018-03-01)\n\n    *   Add support for django 1.10, 1.11\n    *   Add support for python 3.6\n    *   Add wheel support\n    *   Support bytes in DB fields (`#38`__ & `#39`__)\n\n*   2.0 (2016-01-31)\n\n    *   Drop support for django 1.7, add support for django 1.9\n    *   Drop support for python 3.2, 3.3, add support for python 3.5\n    *   Remove tests from source distribution\n\n*   1.3 (2015-10-12)\n\n    *   Drop support for django 1.6, add support for django 1.8\n    *   Various `bug fixes`__\n\n*   1.2 (2015-02-05)\n\n    *   For form field, changed default list of accepted timezones from\n        `pytz.all_timezones` to `pytz.common_timezones`, to match DB field\n        behavior.\n\n*   1.1 (2014-10-05)\n\n    *   Django 1.7 compatibility\n    *   Added support for formatting `choices` kwarg as `[[<str>, <str>], ...]`,\n        in addition to previous format of `[[<pytz.timezone>, <str>], ...]`.\n    *   Changed default list of accepted timezones from `pytz.all_timezones` to\n        `pytz.common_timezones`. If you have timezones in your DB that are in\n        `pytz.all_timezones` but not in `pytz.common_timezones`, this is a\n        backward-incompatible change. Old behavior can be restored by\n        specifying `choices=[(tz, tz) for tz in pytz.all_timezones]` in your\n        model definition.\n\n*   1.0 (2013-08-04)\n\n    *   Initial release as `timezone_field`.\n\n\nRunning the Tests\n-----------------\n\n#.  Install `tox`__.\n\n#.  From the repository root, run\n\n    .. code:: sh\n\n        tox\n\n    Postgres will need to be running locally, and sqlite will need to be\n    installed in order for tox to do its job.\n\nFound a Bug?\n------------\n\nTo file a bug or submit a patch, please head over to `django-timezone-field on github`__.\n\nCredits\n-------\n\nOriginally adapted from `Brian Rosner's django-timezones`__. The full list of contributors is available on `github`__.\n\n\n__ http://pypi.python.org/pypi/pytz/\n__ http://pypi.python.org/pypi/django-timezone-field/\n__ http://www.pip-installer.org/\n__ https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps\n__ https://github.com/mfogel/django-timezone-field/issues/70\n__ https://github.com/mfogel/django-timezone-field/issues/67\n__ https://github.com/mfogel/django-timezone-field/issues/46\n__ https://github.com/mfogel/django-timezone-field/issues/32\n__ https://github.com/mfogel/django-timezone-field/issues/37\n__ https://github.com/mfogel/django-timezone-field/issues/38\n__ https://github.com/mfogel/django-timezone-field/issues/39\n__ https://github.com/mfogel/django-timezone-field/issues?q=milestone%3A1.3\n__ https://tox.readthedocs.org/\n__ https://github.com/mfogel/django-timezone-field/\n__ https://github.com/brosner/django-timezones/\n__ https://github.com/mfogel/django-timezone-field/graphs/contributors\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/mfogel/django-timezone-field/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-timezone-field",
    "package_url": "https://pypi.org/project/django-timezone-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-timezone-field/",
    "project_urls": {
      "Homepage": "http://github.com/mfogel/django-timezone-field/"
    },
    "release_url": "https://pypi.org/project/django-timezone-field/4.1.2/",
    "requires_dist": [
      "django (>=2.2)",
      "pytz",
      "djangorestframework (>=3.0.0) ; extra == 'rest_framework'"
    ],
    "requires_python": ">=3.5",
    "summary": "A Django app providing database and form fields for pytz timezone objects.",
    "version": "4.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12835210,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcbb6a90733e590dd908312427e9502c9ef7c5baeb55df2e7336992dea9de591",
        "md5": "3b8883032adeace7576a1397fa77e9c7",
        "sha256": "897c06e40b619cf5731a30d6c156886a7c64cba3a90364832148da7ef32ccf36"
      },
      "downloads": -1,
      "filename": "django_timezone_field-4.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b8883032adeace7576a1397fa77e9c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 9572,
      "upload_time": "2021-03-17T19:04:14",
      "upload_time_iso_8601": "2021-03-17T19:04:14.259931Z",
      "url": "https://files.pythonhosted.org/packages/fc/bb/6a90733e590dd908312427e9502c9ef7c5baeb55df2e7336992dea9de591/django_timezone_field-4.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dceba24bb9b0b33243a829836a3f18ce030e5d0738965faf01fb84942688c80",
        "md5": "ba038235861b50e7533c66b52e84b26a",
        "sha256": "cffac62452d060e365938aa9c9f7b72d70d8b26b9c60243bce227b35abd1b9df"
      },
      "downloads": -1,
      "filename": "django-timezone-field-4.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ba038235861b50e7533c66b52e84b26a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8419,
      "upload_time": "2021-03-17T19:04:16",
      "upload_time_iso_8601": "2021-03-17T19:04:16.137083Z",
      "url": "https://files.pythonhosted.org/packages/3d/ce/ba24bb9b0b33243a829836a3f18ce030e5d0738965faf01fb84942688c80/django-timezone-field-4.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}