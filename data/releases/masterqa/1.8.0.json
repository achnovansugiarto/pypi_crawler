{
  "info": {
    "author": "Michael Mintz",
    "author_email": "mdmintz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MasterQA\n\n[![pypi](https://img.shields.io/pypi/v/masterqa.svg)](https://pypi.python.org/pypi/masterqa) [![Build Status](https://github.com/masterqa/MasterQA/workflows/CI%20build/badge.svg)](https://github.com/masterqa/MasterQA/actions)\n\n### MasterQA combines SeleniumBase automation with manual verification to greatly improve the productivity and sanity of QA teams.\n\n## (NOTE: **[MasterQA is now part of SeleniumBase!](https://github.com/seleniumbase/SeleniumBase/tree/master/seleniumbase/masterqa)**)\n\n![](https://seleniumbase.io/cdn/img/mqa_hybrid.png \"MasterQA\")\n\n### Run the example test:\n\n```bash\npip install masterqa\n\ngit clone https://github.com/masterqa/MasterQA.git\n\ncd MasterQA/examples\n\npytest masterqa_test.py  # (Default browser: Chrome)\n```\n\n![](https://seleniumbase.io/cdn/gif/masterqa6.gif \"MasterQA\")\n\n### Follow the [example](https://github.com/masterqa/MasterQA/blob/master/examples/masterqa_test.py) to write your own tests:\n\n```python\nfrom seleniumbase import MasterQA\n\nclass MasterQATests(MasterQA):\n    def test_xkcd(self):\n        self.open(\"https://xkcd.com/1512/\")\n        for i in range(4):\n            self.click('a[rel=\"next\"]')\n        for i in range(3):\n            self.click('a[rel=\"prev\"]')\n        self.verify()\n\n        self.open(\"https://xkcd.com/1520/\")\n        for i in range(2):\n            self.click('a[rel=\"next\"]')\n        self.verify(\"Can you find the moon?\")\n\n        self.click('a[rel=\"next\"]')\n        self.verify(\"Do the drones look safe?\")\n\n        self.open(\"https://seleniumbase.io/devices/\")\n        self.type(\"input#urlInput\", \"seleniumbase.io/error_page\\n\")\n        self.verify(\"Do you see Octocat in a Jedi knight robe?\")\n\n        self.open(\"https://xkcd.com/213/\")\n        for i in range(5):\n            self.click('a[rel=\"prev\"]')\n        self.verify(\"Does the page say 'Abnormal Expressions'?\")\n```\n\nYou'll notice that tests are written based on [SeleniumBase](https://seleniumbase.io), with the key difference of using a different import: ``from masterqa import MasterQA`` rather than ``from seleniumbase import BaseCase``. Now the test class will import ``MasterQA`` instead of ``BaseCase``.\n\nTo add a manual verification step, use ``self.verify()`` in the code after each part of the script that needs manual verification. If you want to include a custom question, add text inside that call (in quotes). Example:\n\n```python\nself.verify()\n\nself.verify(\"Can you find the moon?\")\n```\n\nMasterQA is powered by [SeleniumBase](https://seleniumbase.io), the most advanced open-source automation platform on the [Planet](https://en.wikipedia.org/wiki/Earth).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/masterqa/MasterQA",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Michael Mintz",
    "maintainer_email": "",
    "name": "masterqa",
    "package_url": "https://pypi.org/project/masterqa/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/masterqa/",
    "project_urls": {
      "Homepage": "https://github.com/masterqa/MasterQA"
    },
    "release_url": "https://pypi.org/project/masterqa/1.8.0/",
    "requires_dist": [
      "seleniumbase (>=4.12.6)",
      "pdbp (>=1.2.8)",
      "tabcompleter (>=1.1.0)",
      "sbvirtualdisplay (>=1.2.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Automation-Assisted Manual Testing - https://masterqa.com",
    "version": "1.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16722558,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a7d7b82f1bd29c76905ab40eba0b5f404ad6d7aa4a89fe2e5dd98dace4bf14f",
        "md5": "7b196ed4f82904c50069e8aa752edd4a",
        "sha256": "eae5c0d5795447dd5587effd051927e21a0d35ffd567b4c5ca5f8468802fd4da"
      },
      "downloads": -1,
      "filename": "masterqa-1.8.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b196ed4f82904c50069e8aa752edd4a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8587,
      "upload_time": "2023-02-06T20:20:11",
      "upload_time_iso_8601": "2023-02-06T20:20:11.225817Z",
      "url": "https://files.pythonhosted.org/packages/0a/7d/7b82f1bd29c76905ab40eba0b5f404ad6d7aa4a89fe2e5dd98dace4bf14f/masterqa-1.8.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c8ccd999ce0c10c0f0e79ea4397174455e4ce7f448051221df89987a558e5b0",
        "md5": "8818937a2d2a963b7616392bee39ff99",
        "sha256": "653743ecea92e810d32c9ca14b562a81cf3171de87dc83e191ad68ec543c1a30"
      },
      "downloads": -1,
      "filename": "masterqa-1.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8818937a2d2a963b7616392bee39ff99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10622,
      "upload_time": "2023-02-06T20:20:13",
      "upload_time_iso_8601": "2023-02-06T20:20:13.306696Z",
      "url": "https://files.pythonhosted.org/packages/9c/8c/cd999ce0c10c0f0e79ea4397174455e4ce7f448051221df89987a558e5b0/masterqa-1.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}