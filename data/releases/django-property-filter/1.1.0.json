{
  "info": {
    "author": "Eric Ziethen",
    "author_email": "ericziethen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django Property Filter\n\nDjango-property-filter is an extension to [django-filter](https://pypi.org/projhttps://pypi.org/project/django-filter/ect/django-filter/) and provides functionality to filter querysets by class properties.\n\nIt does so by providing sub-classes for Filters and Filtersets to keep existing django-filter functionality.\n\n<table>\n    <tr>\n        <td>License</td>\n        <td><img src='https://img.shields.io/pypi/l/django-property-filter.svg'></td>\n        <td>Version</td>\n        <td><img src='https://img.shields.io/pypi/v/django-property-filter.svg'></td>\n    </tr>\n    <tr>\n        <td>Github Action</td>\n        <td><img src='https://github.com/ericziethen/django-property-filter/workflows/CI/badge.svg'></td>\n        <td>Coverage</td>\n        <td><img src='https://codecov.io/gh/ericziethen/django-property-filter/branch/master/graph/badge.svg'></td>\n    </tr>\n    <tr>\n        <td>Wheel</td>\n        <td><img src='https://img.shields.io/pypi/wheel/django-property-filter.svg'></td>\n        <td>Implementation</td>\n        <td><img src='https://img.shields.io/pypi/implementation/django-property-filter.svg'></td>\n    </tr>\n    <tr>\n        <td>Status</td>\n        <td><img src='https://img.shields.io/pypi/status/django-property-filter.svg'></td>\n        <td>Downloads</td>\n        <td><img src='https://img.shields.io/pypi/dm/django-property-filter.svg'></td>\n    </tr>\n    <tr>\n        <td>Supported versions</td>\n        <td><img src='https://img.shields.io/pypi/pyversions/django-property-filter.svg'></td>\n    </tr>\n</table>\n\nFor more details and examples check the [documentation](https://django-property-filter.readthedocs.io/en/stable/).\n\n## Requirements\n\n* Python: 3.6, 3.7, 3.8, 3.9\n* Django: 2.2, 3.0, 3.1\n* Django-filter: 2.3+\n\n## Limitations\n\n### Performance\nBecause this app preserved Django Filtersets and filters them agains fields that are not Database fields all filtering happens in memory.\nCompared with direct sql optimized queries that might be slower and more memory intensive.\n\n### Limit on returned results\nIn theory there is no limit for most databases how many results can be returned from a filter query unless the database implements a limit which will impact how many results django-property-filter can return.\nSqlite3 defines different limits depending on the version used.\nFor further details see the documentation for [limitations](https://django-property-filter.readthedocs.io/en/stable/guide/overview.html#limitations)\n\n## Installation\n\nInstall using pip:\n\n```python\npip install django-property-filter\n```\n\nThen add 'django_property_filter' to your INSTALLED_APPS.\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_property_filter',\n]\n```\n\n## Usage\n\n### Example Model\n\nOur Model\n\n```python\nfrom django.db import models\n\nclass BookSeries(models.Model):\n    name = models.CharField(max_length=255)\n\n    @property\n    def book_count(self):\n      return Book.objects.filter(series=self).count()\n\nclass Book(models.Model):\n    title = models.CharField(max_length=255)\n    price = models.DecimalField()\n    discount_percentage = models.IntegerField()\n    author = models.TextField()\n    series = models.ForeignKey(BookSeries)\n\n    @property\n    def discounted_price(self):\n      return self.price * self.discount_percentage \\ 100\n```\n\n### Implicit Filter Creation\n\nIf we want to filter by discounted price as well as number of books in a series,\nwhich both are properties and not fields in the database, we would do the\nfollowing.::\n\n```python\nfrom django_property_filter import PropertyFilterSet, PropertyNumberFilter\n\nclass BookFilterSet(PropertyFilterSet):\n\n  class Meta:\n      model = Book\n      exclude = ['price']\n      property_fields = [\n        ('discounted_price', PropertyNumberFilter, ['lt', 'exact']),\n        ('series.book_count.', PropertyNumberFilter, ['gt', 'exact']),\n      ]\n```\n\nThis will create 4 Filters\n    1.) A \"less than\" and an \"exact\" filter for the \"discounted_price\" property\n        of the Book Model\n    2.) A \"greater than\" and an \"exact\" filter for the \"book_count\" property\n        of the related Model \"series\".\n\nSince PropertyFilterSet is and extension to django-filter's Filterset which\nrequires either the Meta attribute \"fields\" or \"exclude\" to be set we excluded\nthe \"price\" field. If we had instead used::\n    fields = ['price']\n\nIt would also have created an \"exact\" filter for the book price.\n\nThe only difference to using a normal FilterSet from django-filter is the\n\"property_fields\" field.\n\nThe \"property_fields\" is a list of tuples with 3 values.\n    1.) The property name. \n        If the property is on a related Model it should be separated by \"__\",\n        and can span multiple levels e.g. fk__fk__fk__property\n    2.) The specific Property Filter to use.\n        This is necessary since it can't be determined what the return type\n        of the property will be in all cases\n    3.) The list of lookup expressions.\n\n### Explicit Filter Creation\n\nIt is also possible to create Filters explicitely.\n\n```python\nfrom django_property_filter import PropertyNumberFilter, PropertyFilterSet\n\nclass BookFilterSet(PropertyFilterSet):\n    prop_number = PropertyNumberFilter(field_name='discounted_price', lookup_expr='gte')\n\n    class Meta:\n        model = NumberClass\n        fields = ['prop_number']\n```\n\nThis creates a \"greater than or equel\" filter for the discounted_price property\n\n## Development\n\n# Run the Django Test Project to see the filters in action\n\n* go to \"tests\\django_test_proj\"\n* run \"python manage.py runserver\"\n\n## Issue Raising ##\n\nRaising bugs, feature requests and questions is possible via the public repository <a href=\"https://github.com/ericziethen/django-property-filter-issue-reporting\" target=\"_blank\">django-property-filter-issue-reporting</a>\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ericziethen/django-property-filter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-property-filter",
    "package_url": "https://pypi.org/project/django-property-filter/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-property-filter/",
    "project_urls": {
      "Documentation": "https://django-property-filter.readthedocs.io/en/stable/",
      "Homepage": "https://github.com/ericziethen/django-property-filter",
      "Public Issue Reporting": "https://github.com/ericziethen/django-property-filter-issue-reporting"
    },
    "release_url": "https://pypi.org/project/django-property-filter/1.1.0/",
    "requires_dist": [
      "Django (>=3.0)",
      "django-filter (>=2.3.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Django Filter extension to support filtering by Properties",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16155706,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5866c38d839063ae97760d3782ba6346b4ef0ee8b141c882c05b0528a015b071",
        "md5": "0ff69dc9711e815ff331d27bc4dc1acc",
        "sha256": "226d7cc2bee7a98b760c89c599e3cc00cf79f98968340963e552b810c1e6b7b2"
      },
      "downloads": -1,
      "filename": "django_property_filter-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ff69dc9711e815ff331d27bc4dc1acc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 16014,
      "upload_time": "2021-03-26T11:02:29",
      "upload_time_iso_8601": "2021-03-26T11:02:29.007253Z",
      "url": "https://files.pythonhosted.org/packages/58/66/c38d839063ae97760d3782ba6346b4ef0ee8b141c882c05b0528a015b071/django_property_filter-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "657c95e4859c05609035ef1f5bebe8a0663a3d53fa37c308cf4710cc61473786",
        "md5": "f141ae3cfd0c3d70670f34aeafc40e02",
        "sha256": "5c05375b4e2e0c4235da11bbedf01e38832153393f4bd3d0416ee8015227fc0f"
      },
      "downloads": -1,
      "filename": "django-property-filter-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f141ae3cfd0c3d70670f34aeafc40e02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15178,
      "upload_time": "2021-03-26T11:02:29",
      "upload_time_iso_8601": "2021-03-26T11:02:29.935200Z",
      "url": "https://files.pythonhosted.org/packages/65/7c/95e4859c05609035ef1f5bebe8a0663a3d53fa37c308cf4710cc61473786/django-property-filter-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}