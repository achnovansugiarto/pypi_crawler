{
  "info": {
    "author": "Christoph Gohlke",
    "author_email": "cgohlke@cgohlke.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Molecular mass calculations\r\n===========================\r\n\r\nMolmass is a Python library, console script, and web application to calculate\r\nthe molecular mass (average, nominal, and isotopic pure), the elemental\r\ncomposition, and the mass distribution spectrum of a molecule given by its\r\nchemical formula, relative element weights, or sequence.\r\n\r\nCalculations are based on the isotopic composition of the elements. Mass\r\ndeficiency due to chemical bonding is not taken into account.\r\n\r\nThe library includes a database of physicochemical and descriptive properties\r\nof the chemical elements.\r\n\r\n:Author: `Christoph Gohlke <https://www.cgohlke.com>`_\r\n:License: BSD 3-Clause\r\n:Version: 2022.12.9\r\n:DOI: 10.5281/zenodo.7135495\r\n\r\nQuickstart\r\n----------\r\n\r\nInstall the molmass package and all dependencies from the\r\nPython Package Index::\r\n\r\n    python -m pip install -U molmass[all]\r\n\r\nPrint the console script usage::\r\n\r\n    python -m molmass --help\r\n\r\nRun the web application::\r\n\r\n    python -m molmass --web\r\n\r\nThe molmass library is documented via docstrings.\r\n\r\nSee `Examples`_ for using the programming interface.\r\n\r\nSource code and support are available on\r\n`GitHub <https://github.com/cgohlke/molmass>`_.\r\n\r\nRequirements\r\n------------\r\n\r\nThis release has been tested with the following requirements and dependencies\r\n(other versions may work):\r\n\r\n- `CPython 3.8.10, 3.9.13, 3.10.9, 3.11.1 <https://www.python.org>`_\r\n- `Flask 2.2.2 <https://pypi.org/project/Flask/>`_ (optional)\r\n- `Pandas 1.5.2 <https://pypi.org/project/pandas/>`_ (optional)\r\n- `wxPython 4.2.0 <https://pypi.org/project/wxPython/>`_ (optional)\r\n\r\nRevisions\r\n---------\r\n\r\n2022.12.9\r\n\r\n- Fix split_charge formula with trailing ]] (#11).\r\n\r\n2022.10.18\r\n\r\n- Several breaking changes.\r\n- Add experimental support for ion charges (#5).\r\n- Change Element, Isotope, and Particle to dataclass (breaking).\r\n- Change types of Spectrum and Composition (breaking).\r\n- Add functions to export Spectrum and Composition as Pandas DataFrames.\r\n- Replace lazyattr with functools.cached_property.\r\n- Rename molmass_web to web (breaking).\r\n- Change output of web application (breaking).\r\n- Run web application using Flask if installed.\r\n- Add options to specify URL of web application and not opening web browser.\r\n- Convert to Google style docstrings.\r\n- Add type hints.\r\n- Remove support for Python 3.7.\r\n\r\n2021.6.18\r\n\r\n- Add Particle types to elements (#5).\r\n- Fix molmass_web failure on WSL2 (#9).\r\n- Fix elements_gui layout issue.\r\n- Remove support for Python 3.6.\r\n\r\n2020.6.10\r\n\r\n- Fix elements_gui symbol size on WSL2.\r\n- Support wxPython 4.1.\r\n\r\n2020.1.1\r\n\r\n- Update elements atomic weights and isotopic compositions from NIST.\r\n- Move element descriptions into separate module.\r\n- Remove support for Python 2.7 and 3.5.\r\n\r\n2018.8.15\r\n\r\n- Move modules into molmass package.\r\n\r\n2018.5.29\r\n\r\n- Add option to start web interface from console.\r\n- Separate styles from content and use CSS flex layout in molmass_web.\r\n\r\n2018.5.25\r\n\r\n- Style and docstring fixes.\r\n- Make from_fractions output deterministic.\r\n- Accept Flask request.args in molmass_web.\r\n- Style and template changes in molmass_web.\r\n\r\n2016.2.25\r\n\r\n- Fix some elements ionization energies.\r\n\r\n2005.x.x\r\n\r\n- Initial release.\r\n\r\nExamples\r\n--------\r\n\r\nCalculate the molecular mass, elemental composition, and mass distribution of\r\na molecule from its chemical formula:\r\n\r\n>>> from molmass import Formula\r\n>>> f = Formula('C8H10N4O2')  # Caffeine\r\n>>> f\r\nFormula('C8H10N4O2')\r\n>>> f.formula  # hill notation\r\n'C8H10N4O2'\r\n>>> f.empirical\r\n'C4H5N2O'\r\n>>> f.mass  # average mass\r\n194.1909...\r\n>>> f.nominal_mass  # == f.isotope.massnumber\r\n194\r\n>>> f.monoisotopic_mass  # == f.isotope.mass\r\n194.0803...\r\n>>> f.atoms\r\n24\r\n>>> f.charge\r\n0\r\n>>> f.composition().dataframe()\r\n         Count  Relative mass  Fraction\r\nElement...\r\nC            8      96.085920  0.494801\r\nH           10      10.079410  0.051905\r\nN            4      56.026812  0.288514\r\nO            2      31.998810  0.164780\r\n>>> f.spectrum(min_intensity=0.01).dataframe()\r\n             Relative mass  Fraction  Intensity %         m/z\r\nMass number...\r\n194             194.080376  0.898828   100.000000  194.080376\r\n195             195.082873  0.092625    10.305100  195.082873\r\n196             196.084968  0.008022     0.892492  196.084968\r\n197             197.087214  0.000500     0.055681  197.087214\r\n\r\nAccess physicochemical and descriptive properties of the chemical elements:\r\n\r\n>>> from molmass import ELEMENTS, Element\r\n>>> e = ELEMENTS['C']\r\n>>> e\r\nElement(\r\n    6, 'C', 'Carbon',\r\n    group=14, period=2, block='p', series=1,\r\n    mass=12.01074, eleneg=2.55, eleaffin=1.262118,\r\n    covrad=0.77, atmrad=0.91, vdwrad=1.7,\r\n    tboil=5100.0, tmelt=3825.0, density=3.51,\r\n    eleconfig='[He] 2s2 2p2',\r\n    oxistates='4*, 2, -4*',\r\n    ionenergy=(\r\n        11.2603, 24.383, 47.877, 64.492, 392.077,\r\n        489.981,\r\n    ),\r\n    isotopes={\r\n        12: Isotope(12.0, 0.9893, 12),\r\n        13: Isotope(13.00335483507, 0.0107, 13),\r\n    },\r\n)\r\n>>> e.number\r\n6\r\n>>> e.symbol\r\n'C'\r\n>>> e.name\r\n'Carbon'\r\n>>> e.description\r\n'Carbon is a member of group 14 of the periodic table...'\r\n>>> e.eleconfig\r\n'[He] 2s2 2p2'\r\n>>> e.eleconfig_dict\r\n{(1, 's'): 2, (2, 's'): 2, (2, 'p'): 2}\r\n>>> str(ELEMENTS[6])\r\n'Carbon'\r\n>>> len(ELEMENTS)\r\n109\r\n>>> sum(e.mass for e in ELEMENTS)\r\n14693.181589001004\r\n>>> for e in ELEMENTS:\r\n...     e.validate()\r\n...     e = eval(repr(e))\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.cgohlke.com",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molmass",
    "package_url": "https://pypi.org/project/molmass/",
    "platform": "any",
    "project_url": "https://pypi.org/project/molmass/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cgohlke/molmass/issues",
      "Homepage": "https://www.cgohlke.com",
      "Source Code": "https://github.com/cgohlke/molmass"
    },
    "release_url": "https://pypi.org/project/molmass/2022.12.9/",
    "requires_dist": [
      "Flask ; extra == 'all'",
      "pandas ; extra == 'all'",
      "wxPython (>=4.0) ; extra == 'gui'"
    ],
    "requires_python": ">=3.8",
    "summary": "Molecular mass calculations",
    "version": "2022.12.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16041744,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f08e85a1c487faebe6634c06e63cf0d47defb2a5dc3244a015248def98b90c9c",
        "md5": "8eedcc912089c42b5ce8555242da0f29",
        "sha256": "d880ed76f8e54fc5da200f280574b8c44a0c386e853db2430ef2539f13011045"
      },
      "downloads": -1,
      "filename": "molmass-2022.12.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8eedcc912089c42b5ce8555242da0f29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 74022,
      "upload_time": "2022-12-09T00:27:03",
      "upload_time_iso_8601": "2022-12-09T00:27:03.215862Z",
      "url": "https://files.pythonhosted.org/packages/f0/8e/85a1c487faebe6634c06e63cf0d47defb2a5dc3244a015248def98b90c9c/molmass-2022.12.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b82947bb5e6285420697342541056f87c87b6b9a5e7f0b028e85b447799cbd24",
        "md5": "218d3a89b65025783d1d3039666b2a3b",
        "sha256": "cee9373b745faf13cd6f48f705a8472fdcf1fb0dbd85a171b7f8906c1c5c301e"
      },
      "downloads": -1,
      "filename": "molmass-2022.12.9.tar.gz",
      "has_sig": false,
      "md5_digest": "218d3a89b65025783d1d3039666b2a3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 74104,
      "upload_time": "2022-12-09T00:27:06",
      "upload_time_iso_8601": "2022-12-09T00:27:06.311786Z",
      "url": "https://files.pythonhosted.org/packages/b8/29/47bb5e6285420697342541056f87c87b6b9a5e7f0b028e85b447799cbd24/molmass-2022.12.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}