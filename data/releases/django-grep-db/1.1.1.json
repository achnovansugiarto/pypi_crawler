{
  "info": {
    "author": "Michael Blatherwick",
    "author_email": "michael.blatherwick@exeter.oxon.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=============\ndjango_grepdb\n=============\n\ndjango_grepdb is a simple command-line app to provide basic grep-like searching of\nDjango model fields using the ORM. Written to facilitate searching for a tag,\nfilter, named url etc in templates in the database, but can also be used to quickly\nfind model instances from the command line.\n\n\nQuick start\n-----------\n\n1. Add \"django_grepdb\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = (\n        ...\n        'django_grepdb',\n    )\n\n   or, if you have a separate settings file for development in which you\n   extend your global settings, like this::\n\n    INSTALLED_APPS = INSTALLED_APPS + ('django_grepdb',) \n\n2. Run::\n\n    $ python manage.py grepdb <pattern> <app_label.Model.field_name>\n\n\nUsage\n-----\n\nFind instances of ``{% custom_template_tag.*%}`` in all text fields on the\nmodel ``EmailAction`` from app ``sprinkle``, show lines containing matches,\nand generate admin links (if ``django.contrib.admin`` is installed)::\n\n    $ python manage.py grepdb \"{% custom_template_tag.*%}\" sprinkle.EmailAction\n    <class 'sprinkle.models.EmailAction'> text_field\n\n    User registered (pk=13)\n    localhost:8000/admin/sprinkle/emailaction/13/\n    <p>Hi {% custom_template_tag user.get_full_name %},</p>\n\n    Password reset request (pk=24)\n    localhost:8000/admin/sprinkle/emailaction/24/\n    <p>Hi, {% custom_template_tag user.get_full_name %}</p>\n\n\nOptions\n-------\n\nOptions are listed using ``$ python manage.py grepdb --html`` but here are some of the things\nyou can do with ``django_grepdb``.\n\nSearch multiple models::\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction cms.MarkdownNode\n\nSpecify fields instead of finding all text fields::\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction.body sprinkle.EmailAction.subject\n\nFind all instances of CharField instead of TextField::\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction -c\n\nShow the whole field of a match rather than just the line::\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction -sa\n\nChange the hostname of the admin links::\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction -l https://dev.example.com\n\nSpecify hostname key-value pairs in settings::\n\n    DJANGO_GREPDB_SITES = {\n        'default': 'https://staging.example.com'\n        'dev': 'https://dev.example.com',\n    }\n\n    $ python manage.py grepdb <pattern> sprinkle.EmailAction -l dev\n\nSpecify preset configurations in settings::\n\n    DJANGO_GREPDB_PRESETS = {\n        'users': dict(identifiers=['auth.user', 'projects.userprofile'],\n                      field_type=['CharField', 'TextField'],\n                      ignore_case=True),\n        'templates': dict(identifiers=['sprinkle.EmailAction', 'cms.HTMLNode', 'cms.TextNode', 'cms.MarkdownNode'])\n\n    $ python manage.py grepdb <pattern> -p templates",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/exonian/django-grep-db",
    "keywords": "django search grep cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-grep-db",
    "package_url": "https://pypi.org/project/django-grep-db/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-grep-db/",
    "project_urls": {
      "Homepage": "https://github.com/exonian/django-grep-db"
    },
    "release_url": "https://pypi.org/project/django-grep-db/1.1.1/",
    "requires_dist": [
      "colorama (>=0.3.3)",
      "django (>=1.8)",
      "termcolor (>=1.1.0)"
    ],
    "requires_python": "",
    "summary": "A simple Django app for command-line searching via the ORM",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1806723,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8150693e7f0f74855afacc744c7df60b469f8c7f85b989618f8b853aa9420b02",
        "md5": "d9976cecfbc504541b69661b00d41e38",
        "sha256": "13edfbacf013e73a8e75e8e33fa1fb53246ed114d275986ae240683535e45c4b"
      },
      "downloads": -1,
      "filename": "django_grep_db-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9976cecfbc504541b69661b00d41e38",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 16533,
      "upload_time": "2015-11-08T16:06:33",
      "upload_time_iso_8601": "2015-11-08T16:06:33.815859Z",
      "url": "https://files.pythonhosted.org/packages/81/50/693e7f0f74855afacc744c7df60b469f8c7f85b989618f8b853aa9420b02/django_grep_db-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2e877f6d62c2eee8d3a3b139f502a5fcf4d16581435f88595c05fd5c8f25e17",
        "md5": "4dbb801e19087660afbf92277ce99120",
        "sha256": "ef17163096096b0fff6a9ebd636b6d040c94189e5179724775bfddbbd02fa50a"
      },
      "downloads": -1,
      "filename": "django-grep-db-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4dbb801e19087660afbf92277ce99120",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11033,
      "upload_time": "2015-11-08T16:06:40",
      "upload_time_iso_8601": "2015-11-08T16:06:40.789982Z",
      "url": "https://files.pythonhosted.org/packages/e2/e8/77f6d62c2eee8d3a3b139f502a5fcf4d16581435f88595c05fd5c8f25e17/django-grep-db-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}