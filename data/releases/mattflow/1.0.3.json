{
  "info": {
    "author": "Thanasis Mattas",
    "author_email": "atmattas@physics.auth.gr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MattFlow\n\nMattFlow is a CFD python package for the shallow water equations.  \nIt simulates drops or stones falling on the surface of the water.\n___\n\n\n| requirements      | os        |\n| ----------------  | --------- |\n| python 3          | GNU/Linux |\n| numpy 1.16.4      | Windows   |\n| matplotlib 3.1.1  |           |\n| ffmpeg (optional) |           |\n\n\n## How to run MattFlow\n\n1. pip\n\n```bash\n$ mkdir mattflow\n$ cd mattflow\n$ pip install numpy matplotlib\n$ pip install mattflow\n$ mattflow\n```\n\n2. venv (python>=3.3)\n\n```bash\n$ mkdir mattflow\n$ cd mattflow\n$ python3 -m venv mattflow_env\n$ source mattflow_env/bin/activate\n$ pip install numpy matplotlib\n$ pip install mattflow\n$ mattflow\n```\n\n3. anaconda environment  \n   (this is prefered, because anaconda handles low level libs required from\n   matplotib animation)\n\n```bash\n$ conda create --name mattflow pip numpy matplotlib\n$ conda activate mattflow\n$ mkdir mattflow\n$ cd mattflow\n$ pip install mattflow\n$ mattflow\n```\n\n\n## Swallow Water Equations\n\nSWE is a simpified CFD problem which models the surface of the water, with the  \nassumption that the horizontal length scale is much greater than the vertical  \nlength scale.\n\nSWE is a coupled system of 3 hyperbolic partial deferential equations, that  \nderive from conservation of mass and conservation of linear momentum (Navier-  \nStokes) equations, in case of a horizontal steam bed, with no Coriolis, frictional  \nor viscours forces ([wiki]).  \n\n<img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/9b9d481407c0c835525291740de8d1c446265ce2\" class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"vertical-align: -9.671ex; width:49.229ex; height:20.509ex;\" alt=\"{\\displaystyle {\\begin{aligned}{\\frac {\\partial (\\rho \\eta )}{\\partial t}}&amp;+{\\frac {\\partial (\\rho \\eta u)}{\\partial x}}+{\\frac {\\partial (\\rho \\eta v)}{\\partial y}}=0,\\\\[3pt]{\\frac {\\partial (\\rho \\eta u)}{\\partial t}}&amp;+{\\frac {\\partial }{\\partial x}}\\left(\\rho \\eta u^{2}+{\\frac {1}{2}}\\rho g\\eta ^{2}\\right)+{\\frac {\\partial (\\rho \\eta uv)}{\\partial y}}=0,\\\\[3pt]{\\frac {\\partial (\\rho \\eta v)}{\\partial t}}&amp;+{\\frac {\\partial (\\rho \\eta uv)}{\\partial x}}+{\\frac {\\partial }{\\partial y}}\\left(\\rho \\eta v^{2}+{\\frac {1}{2}}\\rho g\\eta ^{2}\\right)=0.\\end{aligned}}}\">\n\nwhere:  \n_η_ : height  \n_u_ : velocity along the x axis  \n_υ_ : velocity along the y axis  \n_ρ_ : density  \n_g_ : gravity acceleration\n\n\n## MattFlow structure\n\n0. configuration of the simulation via a config file\n1. pre-process  \nstructured/cartesian mesh\n2. solution  \n   supported solvers:  \n   - [Lax-Friedrichs] Reiman\n   &nbsp;&nbsp;                | O(Δt, Δx<sup>2</sup>, Δy<sup>2</sup>)  \n   - 2-stage [Rugne-Kutta]\n   &nbsp; &nbsp; &nbsp;        | O(Δt<sup>2</sup>, Δx<sup>2</sup>, Δy<sup>2</sup>)\n   &ensp;| default  \n   - [MacCormack]\n   &emsp; &emsp; &emsp; &emsp; | O(Δt<sup>2</sup>, Δx<sup>2</sup>, Δy<sup>2</sup>)\n   &ensp;| experimental\n3. post-processing  \n   matplotlib animation\n\n\n## Additional configurations\n\n- mesh sizing\n- domain sizing\n- simulation mode (single drop, multiple drops, rain)\n- solver\n- boundary conditions (currently: reflective)\n- plotting style\n- animation options\n\nCurrently, you can configure the simulation at the config file\n\n\n## TODO\n\n1. mattflow_exceptions\n2. tests\n3. Simple API to configure the simulation\n4. Implementation of higher order schemes\n5. Addition of source terms\n6. Addition of viscous models\n7. Support moving objects inside the domain\n8. Unstructured mesh\n9. Extent to 3D CFD\n\n\n***Start the flow!***\n\n>(C) 2019, Thanasis Mattas  \n>atmattas@physics.auth.gr\n\n\n[//]: # \"links\"\n\n[wiki]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\n[Lax-Friedrichs]: <https://en.wikipedia.org/wiki/Lax%E2%80%93Friedrichs_method>\n[Rugne-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\n[Lax-Wendroff]: <https://en.wikipedia.org/wiki/Lax%E2%80%93Wendroff_method>\n[MacCormack]: <https://en.wikipedia.org/wiki/MacCormack_method>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ThanasisMattas/mattflow.git",
    "keywords": "",
    "license": "GNU GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mattflow",
    "package_url": "https://pypi.org/project/mattflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/mattflow/",
    "project_urls": {
      "Homepage": "https://github.com/ThanasisMattas/mattflow.git"
    },
    "release_url": "https://pypi.org/project/mattflow/1.0.3/",
    "requires_dist": [
      "numpy (>=1.17.0)",
      "matplotlib (>=3.1.1)",
      "cycler (>=0.10.0)",
      "kiwisolver (>=1.1.0)",
      "pyparsing (>=2.4.2)",
      "python-dateutil (>=2.8.0)",
      "six (>=1.12.0)",
      "ffmpeg ; extra == 'write_video'"
    ],
    "requires_python": "",
    "summary": "A CFD python package for the shallow water equations",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10759201,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d52dd5c717b2f4b844d41fb2a6f8cedeeda1131a006619ea89cec5fd6db6ad50",
        "md5": "3628656db5db8372c2688c3399943258",
        "sha256": "9d82d87ec86e8ad46fc812493e72b62315fa2507c13e39b66ebb3597dc717ec9"
      },
      "downloads": -1,
      "filename": "mattflow-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3628656db5db8372c2688c3399943258",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 33277,
      "upload_time": "2019-08-08T19:55:31",
      "upload_time_iso_8601": "2019-08-08T19:55:31.950800Z",
      "url": "https://files.pythonhosted.org/packages/d5/2d/d5c717b2f4b844d41fb2a6f8cedeeda1131a006619ea89cec5fd6db6ad50/mattflow-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "228212708887f1bdf17f290364406e0ca980c6174e0317666b3871da51637e34",
        "md5": "178b182cda56a40616311f822f8c7db8",
        "sha256": "5cd91cd628acdeebaf09e011deeb072ea476e4fa088d3197c276863d827d3930"
      },
      "downloads": -1,
      "filename": "mattflow-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "178b182cda56a40616311f822f8c7db8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16039,
      "upload_time": "2019-08-08T19:55:34",
      "upload_time_iso_8601": "2019-08-08T19:55:34.569590Z",
      "url": "https://files.pythonhosted.org/packages/22/82/12708887f1bdf17f290364406e0ca980c6174e0317666b3871da51637e34/mattflow-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}