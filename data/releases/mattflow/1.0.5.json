{
  "info": {
    "author": "Thanasis Mattas",
    "author_email": "atmattas@physics.auth.gr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MattFlow\n\nA CFD python package for the shallow water equations.\n\nMattFlow simulates the surface of the water after any initial conditions, such as drops or stones falling on.\n\n<img src=\"https://media.giphy.com/media/jpVKPxzBiGoSvNYUrY/giphy.gif\" width=\"265\" height=\"150\" /> <img src=\"https://media.giphy.com/media/VJNqBY7uKP3r0AvCcp/giphy.gif\" width=\"265\" height=\"150\" /> <img src=\"https://media.giphy.com/media/QxYpANpE5snKSrdLJ5/giphy.gif\" width=\"265\" height=\"150\" />\n\n___\n\n| requirements      | os        |\n| ----------------  | --------- |\n| python 3          | GNU/Linux |\n| numpy 1.16.4      | Windows   |\n| matplotlib 3.1.1  |           |\n| ffmpeg (optional) |           |\n\n## How to install & run MattFlow\n\n1. anaconda environment (recomended)\n\n```bash\n$ mkdir mattflow\n$ cd mattflow\n$ conda create --name mattflow python=3 matplotlib\n$ conda activate mattflow\n$ pip install mattflow\n$ mattflow\n```\n\n2. venv (python>=3.3)  \n\n```bash\n$ mkdir mattflow\n$ cd mattflow\n$ python3 -m venv mattflow_env\n$ source mattflow_env/bin/activate\n$ pip install mattflow\n$ mattflow\n```\n\n3. pip\n\n```bash\n$ mkdir mattflow\n$ cd mattflow\n$ pip install --user mattflow\n$ mattflow\n```\n\n\n## Swallow Water Equations\n\nSWE is a simpified CFD problem which models the surface of the water, with the assumption  \nthat the horizontal length scale is much greater than the vertical length scale.  \n\nSWE is a coupled system of 3 hyperbolic partial deferential equations, that derive from  \nconservation of mass and conservation of linear momentum (Navier-Stokes) equations, in  \ncase of a horizontal stream bed, with no Coriolis, frictional or viscours forces ([wiki]).\n\n<img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/9b9d481407c0c835525291740de8d1c446265ce2\" class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"vertical-align: -18ex; width:46ex; height:19ex;\" alt=\"{\\displaystyle {\\begin{aligned}{\\frac {\\partial (\\rho \\eta )}{\\partial t}}&amp;+{\\frac {\\partial (\\rho \\eta u)}{\\partial x}}+{\\frac {\\partial (\\rho \\eta v)}{\\partial y}}=0,\\\\[3pt]{\\frac {\\partial (\\rho \\eta u)}{\\partial t}}&amp;+{\\frac {\\partial }{\\partial x}}\\left(\\rho \\eta u^{2}+{\\frac {1}{2}}\\rho g\\eta ^{2}\\right)+{\\frac {\\partial (\\rho \\eta uv)}{\\partial y}}=0,\\\\[3pt]{\\frac {\\partial (\\rho \\eta v)}{\\partial t}}&amp;+{\\frac {\\partial (\\rho \\eta uv)}{\\partial x}}+{\\frac {\\partial }{\\partial y}}\\left(\\rho \\eta v^{2}+{\\frac {1}{2}}\\rho g\\eta ^{2}\\right)=0.\\end{aligned}}}\">\n\nwhere:  \n_η_ : height  \n_u_ : velocity along the x axis  \n_υ_ : velocity along the y axis  \n_ρ_ : density  \n_g_ : gravity acceleration\n\n\n## MattFlow structure\n&emsp;**More details at this [jupyter notebook]**\n\n0. configuration of the simulation via a config file\n1. pre-process  \nstructured/cartesian mesh\n2. solution  \n   supported solvers:  \n   - [Lax-Friedrichs] Reiman\n   &nbsp;&nbsp;                | O(Δt, Δx<sup>2</sup>, Δy<sup>2</sup>)  \n   - 2-stage [Rugne-Kutta]\n   &nbsp; &nbsp; &nbsp;        | O(Δt<sup>2</sup>, Δx<sup>2</sup>, Δy<sup>2</sup>)\n   &ensp;| default  \n   - [MacCormack]\n   &emsp; &emsp; &emsp; &emsp; | O(Δt<sup>2</sup>, Δx<sup>2</sup>, Δy<sup>2</sup>)\n   &ensp;| experimental\n3. post-processing  \n   matplotlib animation\n\n## Additional configurations\n\n- mesh sizing\n- domain sizing\n- initial conditions (single drop, multiple drops, rain)\n- boundary conditions (currently: reflective)\n- solver\n- plotting style\n- animation options\n\nCurrently, you can configure the simulation at the _config_ module  \n\n## TODO\n\n1. exceptions\n2. pytest\n3. linting\n4. Simple API to configure the simulation\n5. Implementation of higher order schemes\n6. Addition of source terms\n7. Addition of viscous models\n8. Moving core to C++, Cython or Numba\n9. Support moving objects inside the domain\n10. Unstructured mesh\n11. Extent to 3D CFD\n\n***Start the flow!***\n\n>(C) 2019, Thanasis Mattas  \n>atmattas@physics.auth.gr\n\n\n[//]: # \"links\"\n\n[wiki]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\n[Lax-Friedrichs]: <https://en.wikipedia.org/wiki/Lax%E2%80%93Friedrichs_method>\n[Rugne-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\n[Lax-Wendroff]: <https://en.wikipedia.org/wiki/Lax%E2%80%93Wendroff_method>\n[MacCormack]: <https://en.wikipedia.org/wiki/MacCormack_method>\n[jupyter notebook]: <https://colab.research.google.com/github/ThanasisMattas/mattflow/blob/master/notebooks/mattflow_notebook.ipynb#scrollTo=sqSJYpEwmJN3>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ThanasisMattas/mattflow.git",
    "keywords": "",
    "license": "GNU GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mattflow",
    "package_url": "https://pypi.org/project/mattflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/mattflow/",
    "project_urls": {
      "Homepage": "https://github.com/ThanasisMattas/mattflow.git"
    },
    "release_url": "https://pypi.org/project/mattflow/1.0.5/",
    "requires_dist": [
      "numpy (>=1.16.4)",
      "matplotlib (>=3.1.1)",
      "ffmpeg ; extra == 'write_video'"
    ],
    "requires_python": "",
    "summary": "A CFD python package for the shallow water equations",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10759201,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adb398dd116906956c6192cc9c9b38a92559f9463d9863a1a4509c6c5b260423",
        "md5": "6070a31ea02d173792c085b3436700f3",
        "sha256": "b2d1179830265821279a92a6031dbaeb0dd72ead98cc90073f9ac3cd8f576a70"
      },
      "downloads": -1,
      "filename": "mattflow-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6070a31ea02d173792c085b3436700f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 33727,
      "upload_time": "2019-08-11T20:01:49",
      "upload_time_iso_8601": "2019-08-11T20:01:49.035131Z",
      "url": "https://files.pythonhosted.org/packages/ad/b3/98dd116906956c6192cc9c9b38a92559f9463d9863a1a4509c6c5b260423/mattflow-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1941e3c2fb0b0b11a19df6628674bed7a5d2f32dd557e304d6b4c572df530b0f",
        "md5": "2edd8f51fd763973438c16052aa6f5c9",
        "sha256": "8b55dd4da2f267f5502e951bab9495c2a118ec395a8eb6e57db3e83dc5b1ad53"
      },
      "downloads": -1,
      "filename": "mattflow-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2edd8f51fd763973438c16052aa6f5c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16707,
      "upload_time": "2019-08-11T20:01:51",
      "upload_time_iso_8601": "2019-08-11T20:01:51.138645Z",
      "url": "https://files.pythonhosted.org/packages/19/41/e3c2fb0b0b11a19df6628674bed7a5d2f32dd557e304d6b4c572df530b0f/mattflow-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}