{
  "info": {
    "author": "Ubiwhere",
    "author_email": "urbanplatform@ubiwhere.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Topic :: Security"
    ],
    "description": "# [WIP] Django Keycloak Authorization\n\nMiddleware to allow authorization using Keycloak and Django for DRF and Graphene based projects. \nThis package can only be used for projects started from scratch since they override the users management.\n\n## Installation\n\n1. Add `django_keycloak` to the Django `INSTALLED_APPS`\n3. Add `django_keycloak.middleware.KeycloakMiddleware` to the Django `MIDDLEWARE\n4. Change Django `AUTHENTICATION_BACKENDS` to:\n\n    ```json\n    AUTHENTICATION_BACKENDS = ('django_keycloak.backends.KeycloakAuthenticationBackend',)\n    ```\n5. Add the following configuration to Django settings and replace the values by your own values: \n\n    ```json\n    KEYCLOAK_CONFIG = {\n        'SERVER_URL': '<PUBLIC_SERVER_URL>',\n        'INTERNAL_URL': <INTERNAL_SERVER_URL>'',\n        'REALM': '<REALM_NAME>',\n        'CLIENT_ID': '<CLIENT_ID>',\n        'CLIENT_SECRET_KEY': '<CLIENT_SECRET_KEY>',\n        'CLIENT_ADMIN_ROLE': '<CLIENT_ADMIN_ROLE>',\n        'REALM_ADMIN_ROLE': '<REALM_ADMIN_ROLE>',\n        'EXEMPT_URIS': [],  # URIS to be ignored by the package\n        'GRAPHQL_ENDPOINT': 'graphql/'  # Default graphQL endpoint\n    }\n    ```\n6. Override the Django user model on settings:\n \n     ```json\n    AUTH_USER_MODEL = \"django_keycloak.KeycloakUserAutoId\"\n    ```\n\n7. If using graphene add the `GRAPHQL_ENDPOINT` to settings and `KeycloakGrapheneMiddleware` to the graphene `MIDDLEWARE`.\n    \n\n8. Configure Django Rest Framework authentication classes with `django_keycloak.authentication.KeycloakAuthentication`:\n\n    ```json\n    REST_FRAMEWORK = {\n        'DEFAULT_AUTHENTICATION_CLASSES': [\n            'django_keycloak.authentication.KeycloakAuthentication'\n        ],\n        'DEFAULT_RENDERER_CLASSES': [\n            'rest_framework.renderers.JSONRenderer',\n        ],\n        'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n        'PAGE_SIZE': 100,  # Default to 20\n        'PAGINATE_BY_PARAM': 'page_size',\n        # Allow client to override, using `?page_size=xxx`.\n        'MAX_PAGINATE_BY': 100,\n        # Maximum limit allowed when using `?page_size=xxx`.\n        'TEST_REQUEST_DEFAULT_FORMAT': 'json'\n    }\n    ```\n    \n## DRY Permissions\nThe permissions must be set like in other projects. You must set the\npermissions configuration for each model. Example:\n\n```json\n@staticmethod\n@authenticated_users\ndef has_read_permission(request):\n    roles = request.remote_user.get('client_roles')\n\n    return True if 'ADMIN' in roles else False\n```\n\n## Keycloak users synchronization\n\nThe management command `sync_keycloak_users` must be ran periodically. In\norder to remove from the local users the ones that are no longer available at\nkeycloak. This command can be called using the task named `sync_users_with_keycloak`,\nusing celery. Fot that you just need to:\n \n* Add the task to the `CELERY_BEAT_SCHEDULE` Ã¬ns Django settings:\n\n  ```json\n  CELERY_BEAT_SCHEDULE = {\n      'sync_users_with_keycloak': {\n          'task': 'django_keycloak.tasks.sync_users_with_keycloak',\n          'schedule': timedelta(hours=24),\n          'options': {'queue': 'sync_users'}\n      },\n  }\n  ```\n\n* Add the `sync_users` queue to the docker-compose celery service:\n\n  `command: celery worker -A citibrain_base -B -E -l info -Q backup,celery,sync_users --autoscale=4,1`\n\n**Attention:** This task is only responsible to delete users from local\nstorage. The creation of new users, that are on keycloak, is done when they\ntry to login.\n\n## Notes\n\nSupport for celery 5: from version 0.7.4 on we should use celery 5 for the user sync. This implies running celery with celery -A app worker ... instead of celery worker -A app ...\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/urbanplatform/django-keycloak-auth",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-uw-keycloak",
    "package_url": "https://pypi.org/project/django-uw-keycloak/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-uw-keycloak/",
    "project_urls": {
      "Homepage": "https://github.com/urbanplatform/django-keycloak-auth"
    },
    "release_url": "https://pypi.org/project/django-uw-keycloak/1.0/",
    "requires_dist": [
      "Django (>=\"2.2\")"
    ],
    "requires_python": "",
    "summary": "Middleware to allow authorization using Keycloak and Django",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16500693,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1609f9162c72f6350f7d4f33c9e00da9b3d8609bf39bfc20c33836243df0df77",
        "md5": "91b18a2e794d83e72eefdc3a88c904e6",
        "sha256": "14de4a4f29b6afe5b74a789784eef77582f7bb3a35e6b79cab03f409fa5392c6"
      },
      "downloads": -1,
      "filename": "django_uw_keycloak-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91b18a2e794d83e72eefdc3a88c904e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21042,
      "upload_time": "2022-01-31T15:11:55",
      "upload_time_iso_8601": "2022-01-31T15:11:55.207675Z",
      "url": "https://files.pythonhosted.org/packages/16/09/f9162c72f6350f7d4f33c9e00da9b3d8609bf39bfc20c33836243df0df77/django_uw_keycloak-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4440972c84ec7dbd7e4eeb65b7778187b68241d6f312c34bb50cf2f98ead5e59",
        "md5": "0e9253b27c76f65405bbfd5115601d03",
        "sha256": "9c97e331fd7c31a415f42358f87e8dbd6fdcf123188eb81b5473f9c1ab9e099c"
      },
      "downloads": -1,
      "filename": "django_uw_keycloak-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0e9253b27c76f65405bbfd5115601d03",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15038,
      "upload_time": "2022-01-31T15:11:56",
      "upload_time_iso_8601": "2022-01-31T15:11:56.305001Z",
      "url": "https://files.pythonhosted.org/packages/44/40/972c84ec7dbd7e4eeb65b7778187b68241d6f312c34bb50cf2f98ead5e59/django_uw_keycloak-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}