{
  "info": {
    "author": "Sridhar Eswaran",
    "author_email": "mail2sridhare@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# mf4-parser\nTo extract set of signals from a MDF4 (mf4) files\n\n## Features\n\t* Create __mdfSubset__ in two ways\n\t\t* Instantiate with a list of 'asammdf.Signals'\n\t\t* Create a new subset from a larger MDF(.mf4) file with a list of signals in csv \n\t* Concatinate two mdfSubsets to create a new file (joins the each signals)\n\t* Get timestamps (start,end) of a mdfSubset object\n\t* Get the name of the signals in the mdfSubset\n\t* Get the sample size of a signal in the mdfSubset\n\t* Resample the signals in the mdfSubset to a different timestep\n\t* Create a list of pandas-series objects (timestamps,samples) with the signals in the mdfSubset\n\t* Create a data table with signals in the mdfSubset\n\t* Export signals in the mdfSubset to a csv file \n\n## Requirements\n\t- Python >=3.7\n\n## Installation\n\n### pip \n\tpip install mf4parser\n\n### git \n\tclone the repo [mf4parser](https://github.com/sridhar-eswaran/mf4-parser.git)\n\n## Examples\n\n`\n\n\t#Create a subset from a larger MF4 file\n\tfrom mf4parser import mdfSubset as ms\n\t#select mf4 file\n\tmf4_file1 = r'C:\\users\\sridhar\\files\\measurementFile01.MF4'\n\tmf4_file2 = r'C:\\users\\sridhar\\files\\measurementFile02.MF4'\n\t#select the signal list (csv) file containg list of signals to be extracted (sample can be found in repo)\n\tsignalList = r'C:\\users\\sridhar\\files\\signalList.csv'\n\t# create a subset\n\tsubset1 = ms.createSubset(mf4_file1,signalList)\n`\n\n\t#to get the info of a subset\n\tsubset1.getTimestamps()\n`\n\tOUTPUT:\n\t[0.060000000, 299.900000000]\n`\n\n\tsubset1.getSignalNames()\n`\n\tOUTPUT:\n\t['Vx',\n\t'Vy',\n\t'Ax',\n\t'Ay']\n`\n\n\tsubset1.getSamplesize('Ax')\n`\n\tOUTPUT:\n\t2500\n`\n\n\t#create another subset\n\tsubset2 = ms.createSubset(mf4_file2,signalList)\n\t## to get the info of a subset\n\tsubset2.getTimestamps()\n`\n\tOUTPUT:\n\t[299.910000000, 600.100000000]\n`\n\n\tsubset2.getSignalNames()\n`\n\tOUTPUT:\n\t['Vx',\n\t'Vy',\n\t'Ax',\n\t'Ay']\n`\n\n\tsubset2.getSamplesize('Ax')\n`\n\tOUTPUT:\n\t2508\n`\n\n\t# concatinate subset files\n\tsubset12 = ms.mdfConcat(subset1,subset2,'newSubsetname')\n`\n\n\t## Concatinated subset info\n\tsubset12.getTimestamps()\n`\n\tOUTPUT:\n\t[0.060000000, 600.100000000]\n`\n\n\tsubset12.getSignalNames()\n`\n\tOUTPUT:\n\t['Vx',\n\t'Vy',\n\t'Ax',\n\t'Ay']\n`\n\n\tsubset12.getSamplesize('Ax')\n`\n\tOUTPUT:\n\t5008\n`\n\n\t# create data series from a subset (creates a pandas series of signals (TimeStamps Vs SampleValue)\n\tdataseries = subset12.createDataSeries()\n\n\t# Create data table from a subset (creates a pandas data frame (Timestamps | signal1 | signal2 | signal3))\n\ttimestep_to_resample = 0.02 # 20milliseconds\n\tdataTable = subset12.createDataTable(timestep_to_resample) \n\n\t# export subset to a csv\n\tsubset12.exportCSV(timestep_to_resample,'csvFile.csv')\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sridhar-eswaran/mf4-parser.git",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mf4parser",
    "package_url": "https://pypi.org/project/mf4parser/",
    "platform": "",
    "project_url": "https://pypi.org/project/mf4parser/",
    "project_urls": {
      "Homepage": "https://github.com/sridhar-eswaran/mf4-parser.git"
    },
    "release_url": "https://pypi.org/project/mf4parser/1.1.1/",
    "requires_dist": [
      "asammdf",
      "pandas",
      "numpy"
    ],
    "requires_python": "",
    "summary": "A Python package to extract signals from MDF4 files.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10720137,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d8179f2362a5351a446bdbc8a8ea336832c4f43a243904a32a9260013d12d11",
        "md5": "e60b18e18da4e1627282ec58c4f087cf",
        "sha256": "2a6da2d22fc787c1978eccf9930dc1697d4d936d87a33884f9095202a2915bca"
      },
      "downloads": -1,
      "filename": "mf4parser-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e60b18e18da4e1627282ec58c4f087cf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18916,
      "upload_time": "2021-04-13T14:07:26",
      "upload_time_iso_8601": "2021-04-13T14:07:26.650393Z",
      "url": "https://files.pythonhosted.org/packages/8d/81/79f2362a5351a446bdbc8a8ea336832c4f43a243904a32a9260013d12d11/mf4parser-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0aac1c6487bc2fef9c3c81e70444d69f338f69367669e646a14d263437b4505",
        "md5": "a21d7ad8d7a66fc72d14259cabee8ed1",
        "sha256": "a885ad107503d24cfad8718b1372886be5d84c0d9091401811a3c6e84cf39504"
      },
      "downloads": -1,
      "filename": "mf4parser-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a21d7ad8d7a66fc72d14259cabee8ed1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4365,
      "upload_time": "2021-04-13T14:07:28",
      "upload_time_iso_8601": "2021-04-13T14:07:28.241047Z",
      "url": "https://files.pythonhosted.org/packages/d0/aa/c1c6487bc2fef9c3c81e70444d69f338f69367669e646a14d263437b4505/mf4parser-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}