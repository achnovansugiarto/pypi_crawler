{
  "info": {
    "author": "Tom Christie",
    "author_email": "tom@tomchristie.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "<div class=\"badges\">\n    <a href=\"http://travis-ci.org/marshmallow-code/django-rest-marshmallow\">\n        <img src=\"https://badgen.net/travis/marshmallow-code/django-rest-marshmallow/master\"\n        alt=\"Travis CI\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/django-rest-marshmallow\">\n        <img src=\"https://badgen.net/pypi/v/django-rest-marshmallow\"\n        alt=\"django-rest-marshmallow on PyPI\">\n    </a>\n    <a href=\"https://marshmallow.readthedocs.io/en/latest/upgrading.html\">\n        <img src=\"https://badgen.net/badge/marshmallow/2,3?list=1\"\n        alt=\"marshmallow 3 compatible\">\n    </a>\n</div>\n\n---\n\n# [django-rest-marshmallow](https://marshmallow-code.github.io/django-rest-marshmallow/)\n\n[Marshmallow schemas][marshmallow] for Django REST framework.\n\n---\n\n## Overview\n\n`django-rest-marshmallow` provides an alternative serializer implementation to the built-in serializers, by using the python [marshmallow] library, but exposing the same API as REST framework's `Serializer` class.\n\n## Requirements\n\n* Python (2.7, 3.5+)\n* Django REST framework (3.8+)\n* Marshmallow (2.15+ and 3.0.0b18+)\n\n## Installation\n\nInstall using `pip`...\n\n```bash\n$ pip install django-rest-marshmallow\n```\n\n---\n\n## Usage\n\nDefine your schemas as you would with marshmallow, but importing the `Schema` class from `rest_marshmallow` instead.\n\n```python\nfrom rest_marshmallow import Schema, fields\n\nclass CustomerSchema(Schema):\n    name = fields.String()\n    email = fields.Email()\n    created_at = fields.DateTime()\n```\n\nThe Schema class has the same interface as a Django REST framework serializer, so you can use it in your generic views...\n\n```python\nclass CustomerListView(generics.ListAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSchema\n```\n\nOr use the serializer API directly, for either serialization...\n\n```python\nserializer = CustomerSchema(queryset, many=True)\nreturn Response(serializer.data)\n```\n\nOr for validation...\n\n```python\nserializer = CustomerSchema(data=request.data)\nserializer.is_valid(raise_exception=True)\nserializer.validated_data\n```\n\n#### Instance create and update\n\nIf you want to support `serializer.save()` you'll need to define the `.create()` and/or `.update()` methods explicitly.\n\n```python\nclass CustomerSchema(Schema):\n    name = fields.String()\n    email = fields.Email()\n    created_at = fields.DateTime()\n\n    def create(self, validated_data):\n        return Customer.objects.create(**validated_data)\n\n    def update(self, instance, validated_data):\n        for key, value in validated_data.items():\n            setattr(instance, key, value)\n        instance.save()\n        return instance\n```\n\nYou can now use `.save()` from your view codeâ€¦\n\n```python\nserializer = CustomerSchema(data=request.data)\nserializer.is_valid(raise_exception=True)\nserializer.save()\nreturn Response(serializer.data, status=status.HTTP_201_CREATED)\n```\n\nOr use the schema together with generic views that create or update instances...\n\n```python\nclass CustomerListView(generics.ListCreateAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSchema\n```\n\nNote that you should always use the `create()` and `update()` methods instead of overriding the `make_object()` marshmallow method.\n\n#### Nested representations\n\nFor nested representations, use marshmallow's standard `Nested` field as usual.\n\n```python\nfrom rest_marshmallow import fields, Schema\n\nclass ArtistSchema(Schema):\n    name = fields.String()\n\nclass AlbumSchema(Schema):\n    title = fields.String()\n    release_date = fields.Date()\n    artist = fields.Nested(ArtistSchema)\n```\n\n#### Excluding fields\n\nThe marshmallow `only` and `exclude` arguments are also valid as serializer arguments:\n\n```python\nserializer = CustomerSchema(queryset, many=True, only=('name', 'email'))\nreturn Response(serializer.data)\n```\n\n---\n\n## Testing\n\nInstall testing requirements.\n\n```bash\n$ pip install -r requirements.txt\n```\n\nRun with runtests.\n\n```bash\n$ ./runtests.py\n```\n\nYou can also use the excellent [tox](http://tox.readthedocs.org/en/latest/) testing tool to run the tests against all supported versions of Python and Django. Install tox globally, and then simply run:\n\n```bash\n$ tox\n```\n\n## Documentation\n\nTo build the documentation, you'll need to install `mkdocs`.\n\n```bash\n$ pip install mkdocs\n```\n\nTo preview the documentation:\n\n```bash\n$ mkdocs serve\nRunning at: http://127.0.0.1:8000/\n```\n\nTo build the documentation:\n\n```bash\n$ mkdocs build\n```\n\n\n[marshmallow]: https://marshmallow.readthedocs.org/en/latest/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marshmallow-code/django-rest-marshmallow",
    "keywords": "",
    "license": "BSD",
    "maintainer": "Steven Loria",
    "maintainer_email": "sloria1@gmail.com",
    "name": "django-rest-marshmallow",
    "package_url": "https://pypi.org/project/django-rest-marshmallow/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-marshmallow/",
    "project_urls": {
      "Homepage": "https://github.com/marshmallow-code/django-rest-marshmallow"
    },
    "release_url": "https://pypi.org/project/django-rest-marshmallow/4.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Marshmallow schemas for Django REST framework",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7015661,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b65812091dc0607da44c37f9b7eafa9e618610b4355510007a102a11633a29f9",
        "md5": "c5e25defb88d5a4b54d75675da8c5298",
        "sha256": "8646aeff382ad91270ca5508f17cf7e9c39e689b50e699a23837f3f9e3cfd9ce"
      },
      "downloads": -1,
      "filename": "django_rest_marshmallow-4.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c5e25defb88d5a4b54d75675da8c5298",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 4799,
      "upload_time": "2019-02-14T21:50:04",
      "upload_time_iso_8601": "2019-02-14T21:50:04.679756Z",
      "url": "https://files.pythonhosted.org/packages/b6/58/12091dc0607da44c37f9b7eafa9e618610b4355510007a102a11633a29f9/django_rest_marshmallow-4.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56f982bb2c1ab8750fe3794ed4cecd2762390abf26a8bc572ca71f37bf43a996",
        "md5": "f82ec08df658ae110df7b8063bbd66d9",
        "sha256": "15b3fea9cb5cb93bb50c5eb9e71e74c17192b09d5a821e6be6ee257c584dc1fc"
      },
      "downloads": -1,
      "filename": "django-rest-marshmallow-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f82ec08df658ae110df7b8063bbd66d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5308,
      "upload_time": "2019-02-14T21:50:05",
      "upload_time_iso_8601": "2019-02-14T21:50:05.979068Z",
      "url": "https://files.pythonhosted.org/packages/56/f9/82bb2c1ab8750fe3794ed4cecd2762390abf26a8bc572ca71f37bf43a996/django-rest-marshmallow-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}