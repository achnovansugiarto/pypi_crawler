{
  "info": {
    "author": "DataKitchen",
    "author_email": "info@datakitchen.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# DKUtils\n\n\nThis python package is intended to house utility functions and classes that are used in DataKitchen recipes.\n\nBuilding and testing this module is conveniently done using Make. Issue the `make` command to see a list\nof available targets (shown below for convenience). Note that any target can be suffixed with `-ext` to \nrun that target inside a Docker container. This allows testing and development in a standard and portable\nenvironment. To develop inside a running docker container, use the `bash-ext` target. This will drop the \nuser into a bash shell inside a running container.\n\n    Add '-ext' to any target to run it inside a docker container\n\n    Versioning:\n        bump/major bump/minor bump/patch - bump the version\n\n    Utilities:\n        bash         run bash - typically used in conjunction with -ext to enter a docker container\n        scan_secrets scan source code for sensitive information\n\n    Linting:\n        lint         run flake8 and yapf\n        flake8       run flake8\n        yapf         run yapf and correct issues in-place\n        yapf-diff    run yapf and display diff between existing code and resolution if in-place is used\n\n    Testing:\n        test         run all unit tests\n        test_unit    run all unit tests\n        clean_unit   remove files from last test run (e.g. report_dir, .coverage, etc.)\n        tox          run unit tests in python 2 and 3\n        clean_tox    clean tox files (e.g. .tox)\n\n    Documentation:\n        docs         generate Sphinx documentation\n        docs/html    generate Sphinx documentation\n        docs/clean   remove generated Sphinx documentation\n\n    Build and Upload:\n        build        generate distribution archives (i.e. *.tar.gz and *.whl)\n        upload       upload distribution archives to PyPI\n        clean_build  remove all the build files (i.e. build, dist, *.egg-info)\n\n    Cleanup:\n        clean        run all the clean targets in one go\n        clean_pyc    remove all *.pyc files\n\n[Pre-commit](https://pre-commit.com/) is also included to validate and flag commits that contain code \nthat does not pass [Flake8](http://flake8.pycqa.org/en/latest/) and [YAPF](https://github.com/google/yapf). \nTo use, first install the python package `pip install pre-commit` and then run `pre-commit install`. All \nfuture commits will run these tools and deny commits that don't pass. When running YAPF, `pre-commit` will\nmake in-place corrections to your code. Therefore, if it fails the YAPF validation on the first commit \nattempt, simply review the changed files, add, and commit again to resolve.  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DataKitchen/DKUtils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DKUtils",
    "package_url": "https://pypi.org/project/DKUtils/",
    "platform": "",
    "project_url": "https://pypi.org/project/DKUtils/",
    "project_urls": {
      "Documentation": "https://datakitchen.github.io/DKUtils",
      "Download": "https://pypi.org/project/DKUtils",
      "Homepage": "https://github.com/DataKitchen/DKUtils",
      "Source Code": "https://github.com/DataKitchen/DKUtils"
    },
    "release_url": "https://pypi.org/project/DKUtils/1.12.1/",
    "requires_dist": [
      "dataclasses (>=0.6)",
      "jira (>=2.0.0)",
      "pandas (>=1.1.2)",
      "paramiko (>=2.7.2)",
      "scp (>=0.13.2)",
      "Sphinx (>=3.0.1)",
      "sphinx-rtd-theme (>=0.4.3)",
      "google-api-python-client (>=1.10.1)",
      "google-auth-httplib2 (>=0.0.4)",
      "google-auth-oauthlib (>=0.4.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "DataKitchen Utils Library",
    "version": "1.12.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16124202,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9810c19a65385db6018ef840f0b745445b37c2e9d3bd9a1973291a0e28eb676b",
        "md5": "d280b762dea16ba7b6ce6b3f35eea37b",
        "sha256": "2f65fe51cef9304800dbce6deb114ef1297cea02d66b3ee19f9a1b8bc477160a"
      },
      "downloads": -1,
      "filename": "DKUtils-1.12.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d280b762dea16ba7b6ce6b3f35eea37b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 54635,
      "upload_time": "2021-12-23T10:31:14",
      "upload_time_iso_8601": "2021-12-23T10:31:14.187831Z",
      "url": "https://files.pythonhosted.org/packages/98/10/c19a65385db6018ef840f0b745445b37c2e9d3bd9a1973291a0e28eb676b/DKUtils-1.12.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9934b59b47bba545dd657885ecd728b15808c80e70d6a491538f135b358d7661",
        "md5": "a4f2df3c9fce4929196dda8f8fc4610c",
        "sha256": "031d642b9071dafbd3e0b0f28879a3a298e2ac03e31a8d115f924fe90aba0312"
      },
      "downloads": -1,
      "filename": "DKUtils-1.12.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a4f2df3c9fce4929196dda8f8fc4610c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 37518,
      "upload_time": "2021-12-23T10:31:15",
      "upload_time_iso_8601": "2021-12-23T10:31:15.917047Z",
      "url": "https://files.pythonhosted.org/packages/99/34/b59b47bba545dd657885ecd728b15808c80e70d6a491538f135b358d7661/DKUtils-1.12.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}