{
  "info": {
    "author": "José Antonio Perdiguero López",
    "author_email": "perdy.hh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=============\nDjango Status\n=============\n\n:Version: 2.2.1\n:Status: Production/Stable\n:Author: José Antonio Perdiguero López\n\nDjango Status is an application that provides an API to check the status of some parts and some utilities like ping\nrequests. This application can works as standalone or included in a Django project.\n\nQuick start\n===========\n\n#. Install this package using pip::\n\n    pip install django-status\n\n\n#. Add *PROJECT_PATH* to your django settings module.\n#. Add *status* to your **INSTALLED_APPS** settings like this::\n\n    INSTALLED_APPS = (\n        ...\n        'status',\n    )\n\n#. Add **Django-status** urls to your project urls::\n\n    urlpatterns = [\n        ...\n        url(r'^status/', include('status.urls')),\n    ]\n\nCheck Providers\n===============\nDjango Status provides a mechanism to add new custom check functions through **check providers**. Each check provider\nwill generate a new API method with an URL that uses the name of the provider. These functions must accept \\*args and\n\\*\\*kwargs and will return a JSON-serializable object through json.dumps() method, for example a ping function::\n\n    def ping(*args, **kwargs):\n        return {'pong': True}\n\nBy default **Django status** provides the follow checks:\n\nPing\n    A ping to application.\n    URL: /api/health/ping\n\nDatabases\n    Check if databases are running.\n    URL: /api/health/databases\n\nCaches\n    Check if caches are running.\n    URL: /api/health/caches\n\nCelery\n    Check if celery workers defined in settings are running.\n    URL: /api/health/celery\n\nDatabases stats\n    Show stats for all databases.\n    URL: /api/stats/databases\n\nCelery stats\n    Show celery worker stats.\n    URL: /api/stats/celery\n\nCode\n    Source code stats such as current active branch, last commit, if debug is active...\n    URL: /api/stats/code\n\nDjango Status website\n=====================\nA website that shows Django Status data is available in this application. It's possible access to follow URLs to get a\ndetailed view of your system status. Those three pages will show results of providers configured (as explained in\nsettings section)::\n\n    http://www.website.com/status/\n    http://www.website.com/status/health/\n    http://www.website.com/status/stats/\n\nDjango Status API\n=================\nDjango Status API can be used as a standalone application including only their urls::\n\n    urlpatterns = [\n        ...\n        url(r'^status/', include('status.api.urls')),\n    ]\n\nThis API have a single url for each provider, that are grouped by resources.\nEach provider can be queried alone, returning his current status::\n\n    http://your_domain/status/api/health/ping\n\nAlso there is a resource view that will return the status of all providers::\n\n    http://your_domain/status/api/health\n\nFor last, there is a root view that will return the status of all providers from all resources::\n\n    http://your_domain/status/api\n\nDjango management commands\n==========================\nDjango Status provides a django management command to query current status of a resource. This command can be call as::\n\n    python manage.py status <resource> [options]\n\nTo get current status of health checks, and exit with an error if some check is failing::\n\n    python manage.py status health -e\n\nEach resource has its own set of options that can be displayed through command help::\n\n    python manage.py status -h\n\nCommand\n=======\nPrevious Django command can be used in standalone mode as::\n\n    django_status <resource> [options]\n\nSettings\n========\nSTATUS_CHECK_PROVIDERS\n----------------------\nList of additional check providers. Each provider consists in a tuple of name, function complete path, args and kwargs.\nExample::\n\n    STATUS_PROVIDERS = {\n        'resource': (\n            ('test', 'application.module.test_function', [1, 2], {'foo': 'bar'}),\n        )\n    }\n\nDefault::\n\n    PROVIDERS = getattr(settings, 'STATUS_PROVIDERS', {\n        'health': (\n            ('ping', 'status.providers.health.ping', None, None),\n            ('databases', 'status.providers.django.health.databases', None, None),\n            ('caches', 'status.providers.django.health.caches', None, None),\n        ),\n        'stats': (\n            ('databases', 'status.providers.django.stats.databases', None, None),\n            ('code', 'status.providers.stats.code', None, None),\n        )\n    }\n\nSTATUS_CELERY_WORKERS\n---------------------\nList of hostname from celery workers to be checked. If any worker is defined, two additional providers listed previously\nwill be added to default set.\nDefault::\n\n    STATUS_CELERY_WORKERS = ()",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/PeRDy/django-status",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PeRDy/django-status",
    "keywords": "python django database cache celery status check",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-status",
    "package_url": "https://pypi.org/project/django-status/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-status/",
    "project_urls": {
      "Download": "https://github.com/PeRDy/django-status",
      "Homepage": "https://github.com/PeRDy/django-status"
    },
    "release_url": "https://pypi.org/project/django-status/2.2.1/",
    "requires_dist": [
      "GitPython (>=1.0)",
      "pyyaml (>=3.12)",
      "bumpversion; extra == 'dev'",
      "nosetox; extra == 'dev'",
      "pip; extra == 'dev'",
      "pre-commit; extra == 'dev'",
      "prospector; extra == 'dev'",
      "setuptools; extra == 'dev'",
      "twine; extra == 'dev'",
      "wheel; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Application that provides an API to check the status of some parts and some utilities like ping.",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2660422,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93deb88996d261fccb93ef33ab3e1ee6290ffc088b8357017527b87d05af5ea7",
        "md5": "61a805d9cb78603e9d09e73e76e1b873",
        "sha256": "b4f77fe565c2813f179d917b7024de333d794b92fe8c780846a1499ec976c776"
      },
      "downloads": -1,
      "filename": "django_status-2.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61a805d9cb78603e9d09e73e76e1b873",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 928936,
      "upload_time": "2017-02-22T12:54:19",
      "upload_time_iso_8601": "2017-02-22T12:54:19.743333Z",
      "url": "https://files.pythonhosted.org/packages/93/de/b88996d261fccb93ef33ab3e1ee6290ffc088b8357017527b87d05af5ea7/django_status-2.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f2c80a183a46b33afa965f01d39ef5b29a57563d85e0759ca66987230d22a3b",
        "md5": "e6fc937dc7db914fb1cd99496b5a8e22",
        "sha256": "7a62715663060c4f3937273383fe65f56efd4182e0274581ac78851288292e5b"
      },
      "downloads": -1,
      "filename": "django-status-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e6fc937dc7db914fb1cd99496b5a8e22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 899449,
      "upload_time": "2017-02-22T12:54:23",
      "upload_time_iso_8601": "2017-02-22T12:54:23.003798Z",
      "url": "https://files.pythonhosted.org/packages/1f/2c/80a183a46b33afa965f01d39ef5b29a57563d85e0759ca66987230d22a3b/django-status-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}