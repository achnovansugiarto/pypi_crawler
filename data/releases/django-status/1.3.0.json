{
  "info": {
    "author": "José Antonio Perdiguero López",
    "author_email": "perdy.hh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=============\nDjango Status\n=============\n\n:Version: 1.2.1\n:Status: Production/Stable\n:Author: José Antonio Perdiguero López\n\nDjango Status is a application for Django projects that provides an API to check the status of some parts and some\nutilities like ping requests.\n\nQuick start\n===========\n\n#. Install this package using pip::\n\n    pip install django-status\n\n\n#. Add *PROJECT_PATH* to your django settings module.\n#. Add *status* to your **INSTALLED_APPS** settings like this::\n\n    INSTALLED_APPS = (\n        ...\n        'status',\n    )\n\n#. Add **Django-status** urls to your project urls::\n\n    urlpatterns = [\n        ...\n        url(r'^status/', include('status.urls')),\n    ]\n\nAPI\n===\nDjango Status API can be used as a standalone application including only their urls::\n\n    urlpatterns = [\n        ...\n        url(r'^status/', include('status.api.urls')),\n    ]\n\nCheck Providers\n===============\nDjango Status provides a mechanism to add new custom check functions through **check providers**. Each check provider\nwill generate a new API method with an URL that uses the name of the provider. These functions must accept \\*args and\n\\*\\*kwargs and will return a JSON-serializable object through json.dumps() method, for example a ping function::\n\n    def ping(*args, **kwargs):\n        return {'pong': True}\n\nBy default **Django status** provides the follow checks:\n\nPing\n    A ping to application.\n    URL: /api/ping\n\nCode\n    Source code stats such as current active branch, last commit, if debug is active...\n    URL: /api/code\n\nDatabases\n    Check if databases are running.\n    URL: /api/databases\n\nDatabases stats\n    Show stats for all databases.\n    URL: /api/databases/stats\n\nCaches\n    Check if caches are running.\n    URL: /api/caches\n\nCelery\n    Check if celery workers defined in settings are running.\n    URL: /api/celery\n\nCelery stats\n    Show celery worker stats.\n    URL: /api/celery/stats\n\nSettings\n========\nSTATUS_CHECK_PROVIDERS\n----------------------\nList of additional check providers. Each provider consists in a tuple of name, function complete path, args and kwargs.\nExample::\n\n    STATUS_CHECK_PROVIDERS = (\n        ('test', 'application.module.test_function', [1, 2], {'foo': 'bar'}),\n    )\n\nDefault::\n\n    STATUS_CHECK_PROVIDERS = (\n        ('ping', 'status.check_providers.ping', None, None),\n        ('code', 'status.check_providers.code', None, None),\n        ('databases', 'status.check_providers.databases', None, None),\n        ('databases/stats', 'status.check_providers.databases_stats', None, None),\n        ('caches', 'status.check_providers.caches', None, None),\n    )\n\nSTATUS_CELERY_WORKERS\n---------------------\nList of hostname from celery workers to be checked.\nDefault::\n\n    STATUS_CELERY_WORKERS = ()",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/PeRDy/django-status",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PeRDy/django-status",
    "keywords": "python django database cache celery status check",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-status",
    "package_url": "https://pypi.org/project/django-status/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-status/",
    "project_urls": {
      "Download": "https://github.com/PeRDy/django-status",
      "Homepage": "https://github.com/PeRDy/django-status"
    },
    "release_url": "https://pypi.org/project/django-status/1.3.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Application that provides an API to check the status of some parts and some utilities like ping.",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2660422,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f56f43bee7fc5ec77925efe509429761167b35ef59228e5c23c800e488988202",
        "md5": "6bdc2a228cdf292fd142c306fbd82a26",
        "sha256": "fb4a197eb9b13c1ee118003203cd4c16e23b94c2a2a7b884d1939987260d92f6"
      },
      "downloads": -1,
      "filename": "django_status-1.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6bdc2a228cdf292fd142c306fbd82a26",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 16751,
      "upload_time": "2016-08-31T13:40:51",
      "upload_time_iso_8601": "2016-08-31T13:40:51.724958Z",
      "url": "https://files.pythonhosted.org/packages/f5/6f/43bee7fc5ec77925efe509429761167b35ef59228e5c23c800e488988202/django_status-1.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e02f774ee874ae4974d106bb946c863767d8c8e4b250193798d46e839d084cb",
        "md5": "8dcb583b62ecba3285d943b14eb40af7",
        "sha256": "4bf017d623fb3b7e19aef63abb835db289f9853eea8bda928b6c1295f5e0ef44"
      },
      "downloads": -1,
      "filename": "django-status-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8dcb583b62ecba3285d943b14eb40af7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11187,
      "upload_time": "2016-08-31T13:40:49",
      "upload_time_iso_8601": "2016-08-31T13:40:49.431951Z",
      "url": "https://files.pythonhosted.org/packages/9e/02/f774ee874ae4974d106bb946c863767d8c8e4b250193798d46e839d084cb/django-status-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}