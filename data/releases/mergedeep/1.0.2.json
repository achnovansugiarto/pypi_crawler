{
  "info": {
    "author": "Travis Clarke",
    "author_email": "travis.m.clarke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# [mergedeep](https://mergedeep.readthedocs.io/en/latest/)\n\n[![PyPi release](https://img.shields.io/pypi/v/mergedeep.svg)](https://pypi.org/project/mergedeep/)\n[![PyPi versions](https://img.shields.io/pypi/pyversions/mergedeep.svg)](https://pypi.org/project/mergedeep/)\n[![Downloads](https://pepy.tech/badge/mergedeep)](https://pepy.tech/project/mergedeep)\n[![Documentation Status](https://readthedocs.org/projects/mergedeep/badge/?version=latest)](https://mergedeep.readthedocs.io/en/latest/?badge=latest)\n\nA deep merge function for 🐍.\n\n[Check out the mergedeep docs](https://mergedeep.readthedocs.io/en/latest/)\n\n## Installation\n\n```bash\n$ pip install mergedeep\n```\n\n## Usage\n\n```text\nmerge(target: Map[KT, VT], *sources: Map[KT, VT], strategy: Strategy = Strategy.REPLACE) -> Map[KT, VT]\n```\n\nDeep merge without mutating the source dicts.\n\n```python\nfrom mergedeep import merge\n\na = {\"keyA\": 1}\nb = {\"keyB\": {\"sub1\": 10}}\nc = {\"keyB\": {\"sub2\": 20}}\n\nmerged = merge({}, a, b, c) \n\nprint(merged)\n# {\"keyA\": 1, \"keyB\": {\"sub1\": 10, \"sub2\": 20}}\n```\n\nDeep merge into an existing dict.\n```python\nfrom mergedeep import merge\n\na = {\"keyA\": 1}\nb = {\"keyB\": {\"sub1\": 10}}\nc = {\"keyB\": {\"sub2\": 20}}\n\nmerge(a, b, c) \n\nprint(a)\n# {\"keyA\": 1, \"keyB\": {\"sub1\": 10, \"sub2\": 20}}\n```\n\n### Merge strategies:\n1. Replace (*default*)\n```python\n# Strategy.REPLACE\n# When `target` and `source` values are the same, replace the `target` value with one from `source` (default).\n# Note: with multiple sources, the `last` source value with be what appears in the merged result. \n\nfrom mergedeep import merge, Strategy\n\ntarget = {\"key\": [1, 2]}\nsource = {\"key\": [3, 4]}\n\nmerge(target, source, strategy=Strategy.REPLACE) \n# same as: merge(target, source)\n\nprint(target)\n# {\"key\": [3, 4]}\n```\n\n2. Additive\n```python\n# Strategy.ADDITIVE\n# When `target` and `source` values are both either `list` or `set`, extend/update `target` with values from `source` collection.\n\nfrom mergedeep import merge, Strategy\n\ntarget = {\"key\": [1, 2]}\nsource = {\"key\": [3, 4]}\n\nmerge(target, source, strategy=Strategy.ADDITIVE) \n\nprint(target)\n# {\"key\": [1, 2, 3, 4]}\n```\n\n3. Typesafe\n```python\n# Strategy.TYPESAFE\n# When `target` and `source` values are of different types, raise `TypeError`.\n\nfrom mergedeep import merge, Strategy\n\ntarget = {\"key\": [1, 2]}\nsource = {\"key\": {3, 4}}\n\nmerge(target, source, strategy=Strategy.TYPESAFE) \n# TypeError: target type: <class 'list'> differs from source type: <class 'set'> for key: \"key\"\n```\n\n## License\n\nMIT &copy; [**Travis Clarke**](https://blog.travismclarke.com/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/clarketm/mergedeep",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mergedeep",
    "package_url": "https://pypi.org/project/mergedeep/",
    "platform": "",
    "project_url": "https://pypi.org/project/mergedeep/",
    "project_urls": {
      "Homepage": "https://github.com/clarketm/mergedeep"
    },
    "release_url": "https://pypi.org/project/mergedeep/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A deep merge function for 🐍.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9331857,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8f90539e1d417d6a24b0483bd028f85ae74ece04d9253ffcea4276dc88649ac",
        "md5": "b8ea234ae87791d1f553cbed80565e62",
        "sha256": "99b8f8fe970899ba335cabfc5fa55911119cce5f7b3c4b23489a4ab50f09e438"
      },
      "downloads": -1,
      "filename": "mergedeep-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8ea234ae87791d1f553cbed80565e62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5302,
      "upload_time": "2019-02-11T21:26:31",
      "upload_time_iso_8601": "2019-02-11T21:26:31.065237Z",
      "url": "https://files.pythonhosted.org/packages/b8/f9/0539e1d417d6a24b0483bd028f85ae74ece04d9253ffcea4276dc88649ac/mergedeep-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f57374328ffb4c800d368985110e528b32b0275bc8854631791660d191627602",
        "md5": "9f4b383688dc82d8163c0fe909b67987",
        "sha256": "542cf4b0361e529113ddf5eb46fbe0b6dca33caed9ad2cad72d79817e693b103"
      },
      "downloads": -1,
      "filename": "mergedeep-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9f4b383688dc82d8163c0fe909b67987",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3893,
      "upload_time": "2019-02-11T21:26:32",
      "upload_time_iso_8601": "2019-02-11T21:26:32.353359Z",
      "url": "https://files.pythonhosted.org/packages/f5/73/74328ffb4c800d368985110e528b32b0275bc8854631791660d191627602/mergedeep-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}