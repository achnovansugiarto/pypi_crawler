{
  "info": {
    "author": "Florian Scherf",
    "author_email": "f.scherf@pengutronix.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Framework :: Django",
      "Framework :: Pytest",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Unix",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": ".. image:: doc/content/logo.svg\n    :alt: Lona logo\n    :height: 200px\n    :width: 200px\n.. image:: https://img.shields.io/pypi/l/lona.svg\n    :alt: license MIT\n    :target: https://pypi.org/project/lona\n.. image:: https://img.shields.io/pypi/pyversions/lona.svg\n    :alt: python 3\n    :target: https://pypi.org/project/lona\n.. image:: https://img.shields.io/pypi/v/lona.svg\n    :alt: latest version\n    :target: https://pypi.org/project/lona\n.. image:: https://github.com/lona-web-org/lona/actions/workflows/ci.yml/badge.svg\n    :alt: ci status\n    :target: https://github.com/lona-web-org/lona/actions/workflows/ci.yml\n.. image:: https://img.shields.io/codecov/c/github/lona-web-org/lona.svg\n    :alt: code coverage\n    :target: https://codecov.io/gh/lona-web-org/lona/\n\n\nLona is a web application framework, designed to write responsive web apps in\n**full** Python.\n\n**Demos:** `lona-web.org/demos <https://lona-web.org/demos/index.html>`_\n\n**FAQ:** `lona-web.org/faq <http://lona-web.org/faq.html>`_\n\n**Documentation:** `lona-web.org <http://lona-web.org>`_\n\n**Changelog:** `lona-web.org/changelog <http://lona-web.org/changelog.html>`_\n\n**Reddit:** `reddit.com/r/lona_web_org/ <https://www.reddit.com/r/lona_web_org/>`_\n\nWeb is a solved problem in Python since ages, but traditionally Python handles\nonly the server side. If you want to have client side interaction like\nclick events or you want update content live, you have to write an additional\nJavascript application.\n\nLona handles the server side and the client side, and provides a simple,\npythonic API to write self contained views.\n\n.. code-block:: text\n\n    # pip install lona\n\n.. code-block:: python\n\n    from lona.html import HTML, Button, Div, H1\n    from lona import LonaApp, LonaView\n\n    app = LonaApp(__file__)\n\n    @app.route('/')\n    class MyView(LonaView):\n        def handle_request(self, request):\n            message = Div('Button not clicked')\n            button = Button('Click me!')\n\n            html = HTML(\n                H1('Click the button!'),\n                message,\n                button,\n            )\n\n            self.show(html)\n\n            # this call blocks until the button was clicked\n            input_event = self.await_click(button)\n\n            if input_event.node == button:\n                message.set_text('Button clicked')\n\n            return html\n\n\n    app.run(port=8080)\n\n**More information:**\n`Getting Started <http://lona-web.org/end-user-documentation/getting-started.html>`_\n\n\nHow does it work?\n-----------------\n\nLona comes with a Javascript based browser library that speaks a specialized\nprotocol with the backend.\nThis protocol specifies messages like \"hey frontend, please show $HTML\" and\n\"hey backend, someone clicked on node XY\".\n\n**More information:**\n`Basic Concept <https://lona-web.org/basic-concept.html>`_",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lona-web-org/lona",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lona",
    "package_url": "https://pypi.org/project/lona/",
    "platform": "",
    "project_url": "https://pypi.org/project/lona/",
    "project_urls": {
      "Homepage": "https://github.com/lona-web-org/lona"
    },
    "release_url": "https://pypi.org/project/lona/1.8.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Write responsive web apps in full python",
    "version": "1.8.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17540311,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6631a0b859affc06a3c49704d3367d0782f015e444c5df3d71e3878f8255093",
        "md5": "d7f61c3a5c6a041f3f1c6a5960ae9c39",
        "sha256": "b72dca3b1ef444f13ad264bcc95be6c27467591a135006586bac98b4b43fcfe7"
      },
      "downloads": -1,
      "filename": "lona-1.8.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d7f61c3a5c6a041f3f1c6a5960ae9c39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 71309,
      "upload_time": "2021-11-22T10:32:47",
      "upload_time_iso_8601": "2021-11-22T10:32:47.385767Z",
      "url": "https://files.pythonhosted.org/packages/d6/63/1a0b859affc06a3c49704d3367d0782f015e444c5df3d71e3878f8255093/lona-1.8.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}