{
  "info": {
    "author": "Patrick Samson",
    "author_email": "maxcom@laposte.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Communications :: Email"
    ],
    "description": ".. django-postman documentation master file, created by\n   sphinx-quickstart on Fri Nov 26 09:32:49 2010.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to django-postman's documentation!\n==========================================\n\nThis is an application for `Django <http://www.djangoproject.com>`_-powered websites.\n\nBasically, the purpose is to allow authenticated users of a site to exchange private **messages**\nwithin the site.  In this documentation, the word *user* is to be understood as an instance of a User,\nin the django.contrib.auth context.\n\nSo it is mainly for a User-to-User exchange.\nBut it may be beneficial for a subscriber to receive inquiries from any visitor, ie even if non authenticated.\nFor instance, a subscriber as a service provider wants an ask-me-details form on a presentation page\nto facilitate possible business contacts.\nIn this case, the visitor is presented a compose message form with an additional field to give\nan email address for the reply. The email is obfuscated to the recipient.\n\nWhat is a message ? Roughly a piece of text, about a subject, sent by a sender to a recipient.\nEach user has access to a collection of messages, stored in folders:\n\n    | **Inbox** for incoming messages\n    | **Sent** for sent messages\n    | **Archives** for archived messages\n    | **Trash** for messages marked as deleted\n\nIn folders, messages can be presented in two modes:\n\n* by **conversation**, for a compact view: the original message and its replies are grouped in a set\n  to constitute one sole entry.\n  The lastest message (based on the time) is the representative of the set.\n* by **message**, for an expanded view: each message is considered by itself.\n\nHere is a summary of features:\n\n* A non-User (email is undisclosed) can write to a User and get a reply\n  (can be disabled by configuration)\n* Exchanges can be moderated (with auto-accept and auto-reject plug-ins)\n* Optional recipient filter plug-ins\n* Optional exchange filtering plug-ins (blacklists)\n* Multi-recipient writing is possible (can be disabled by configuration)\n  with min/max constraints\n* Messages are managed by conversations\n* Messages in folders are sortable by sender|recipient|subject|date\n* 'Archives' folder in addition to classic Inbox, Sent and Trash folders\n* A Quick-Reply form to only ask for a response text\n* A cleanup management command to clear the old deleted messages\n\nIt has support for optional additional applications:\n\n* Autocomplete recipient field (default is 'django-ajax-selects'),\n  with multiple recipient management\n* New message notification (default is `django-notification`_)\n* Asynchronous mailer (default is `django-mailer`_)\n\n.. _`django-notification`: http://github.com/jtauber/django-notification/\n.. _`django-mailer`: http://github.com/jtauber/django-mailer/\n\nModeration\n----------\nAs an option, messages may need to be validated by a moderator before to be visible\nto the recipient.  Possible usages are:\n\n* to control there is no unwanted words in the text fields.\n* to make sure that no direct contact informations are exchanged when the site is an intermediary\n  and delivers services based on subscription fees.\n\nMessages are first created in a *pending* state. A moderator is in charge to change them to\na *rejected* or *accepted* state.  This operation can be done in two ways:\n\n* By a person, through the Admin site. A specially simplified change view is provided,\n  with one-click buttons to accept or reject the message.\n* Automatically, through one or more auto-moderator functions.\n\nFilters\n-------\nAs options, custom filters can disallow messages, in two ways:\n\n* **user filter**: a user is not in a state to act as a recipient\n* **exchange filter**: criteria for a message between a specific sender\n  and a specific recipient are not fulfilled",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/psam/django-postman/overview",
    "keywords": "django messages messaging email moderation",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-postman",
    "package_url": "https://pypi.org/project/django-postman/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-postman/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://bitbucket.org/psam/django-postman/overview"
    },
    "release_url": "https://pypi.org/project/django-postman/2.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "User-to-User messaging system for Django, with gateway to AnonymousUser, moderation and thread management, user & exchange filters, inbox/sent/archives/trash folders, support for apps: auto-complete, notification, mailer.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15496360,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea88bab4fb8a64b8620df9397ddebe2926c4fe407244b3199b084e8f1961cfbe",
        "md5": "01bffe1d9b6a1b43700c6d2dacfff8e2",
        "sha256": "a9ec5ca4c0d0a4a46a8a8da91dc7f202b78739b2d29df3af47c1389879690fb0"
      },
      "downloads": -1,
      "filename": "django-postman-2.0.0.zip",
      "has_sig": false,
      "md5_digest": "01bffe1d9b6a1b43700c6d2dacfff8e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 186347,
      "upload_time": "2012-08-16T11:50:25",
      "upload_time_iso_8601": "2012-08-16T11:50:25.736780Z",
      "url": "https://files.pythonhosted.org/packages/ea/88/bab4fb8a64b8620df9397ddebe2926c4fe407244b3199b084e8f1961cfbe/django-postman-2.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}