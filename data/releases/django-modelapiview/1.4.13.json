{
  "info": {
    "author": "Tiphaine LAURENT",
    "author_email": "tip.lau@hotmail.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django_APIView\n\nImplement a base generic view for handling model RESTful endpoints\n\n## Usage\n\n```py\n# models.py\n\nfrom django.db import models\n\nfrom django_modelapiview import JSONMixin\n\nclass MyModel(JSONMixin, models.Model):\n    \"\"\"\n    Declare your model as you usually do but\n    add a json_fields list\n    \"\"\"\n\n    json_fields:list[str] = ['text', 'image', 'fk', 'fk_reverse', 'm2m', 'my_method']\n\n    text = models.TextField()\n    image = models.ImageField()\n\n    fk = models.ForeignKey(...)\n    # fk_reverse\n    m2m = models.ManyToManyField(...)\n\n    def my_method(self):\n        return \"my custom value\"\n```\n\n```py\n# views.py\n\nfrom django_modelapiview import APIView\nfrom django_modelapiview.responses import APIResponse\n\nfrom .models import MyModel\n\nclass MyView(APIView):\n    # Required\n    route:str = \"myroute\" # The url to access your view\n\n    # Optional\n    enforce_authentification:bool = True # Should this model be restricted with Token access\n    def get(self, request, *args, **kwargs) -> APIResponse:... # One of head, options, get...\n```\n\n```py\n# views.py\n\nfrom django_modelapiview import ModelAPIView\n\nfrom .models import MyModel\n\nclass MyModelView(ModelAPIView):\n    # Required\n    model:JSONMixin = MyModel # Your model\n    route:str = \"mymodels\" # The url to access your collection\n\n    # Optional\n    queryset:QuerySet = MyModel.objects.all() # A custom base queryset (will be affected by query filters)\n    singular_name:str = \"my model\" # Singular name of your model for reason message\n    plural_name:str = \"my models\" # Plural name of your model for reason message\n    enforce_authentification:bool = True # Should this model be restricted with Token access\n    query_parameters:list[tuple[str, Callable[[QuerySet, object], QuerySet]]] = [\n        ('order_by', lambda queryset, field_names: queryset.order_by(*field_names.split(\",\")) if field_names else queryset),\n        ('limit', lambda queryset, limit: queryset[:int(limit)] if limit else queryset), # Should be last since sliced QuerySet can't be filtered anymore\n    ]\n    def get(self, request, *args, **kwargs) -> APIResponse:... # One of head, options, get...\n```\n\n```py\n# urls.py\n\nfrom django.urls import path, include\n\nfrom . import views\n\nurlpatterns = [\n    path(\"\", include(\"django_routeview\")), # Django RouteView are used as based class for APIView in order to automatically register them\n]\n```\n\n```sh\n# You can use query parameters like order_by or limit (or customs):\nhttps://myhost.com/api/mymodel/?order_by=-id&limit=1 # Will inverse order by id and limit to one : get the last id\n\n# Or you can use Django defined filters:\nhttps://myhost.com/api/mymodel/?id__in=1,2,3&foreignkey__id__in=2,3&field__lte=5\n\n# And finally both:\nhttps://myhost.com/api/mymodel/?manytomany__in=2,3&field__lte=5&limit=10\n```\n\nIt also supports translation:\n\nFirst enable it as an app\n```py\n#settings.py\n\nINSTALLED_APPS = [\n    ...\n    'django_modelapiview',\n    ...\n]\n```\n\nThen change the language using GET parameters:\n```sh\n#Currently supports : enlish(en)(default), franÃ§ais(fr)\nhttps://myhost.com/api/mymodel/?lang=fr\n```\n\n## Using base views\n\nDjango ModelAPIView provides 2 base views:\n* LoginView: to handle authentification (using the default Django authentification system)\n* URLsView: to list the urls availables\n\n### Usage\n\n```py\n# urls.py\n\nfrom django.urls import path\n\nfrom django_modelapiview.views import LoginView, URLsView # Importing them is enough\n```\n\n## Errors\n\nIf you get a \"Verb not implemented\" reason from your endpoint but you are sure to have defined it.\nYou probable just forgot the `-> APIResponse` return type hint.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TiphaineLAURENT/Django_APIView",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-modelapiview",
    "package_url": "https://pypi.org/project/django-modelapiview/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-modelapiview/",
    "project_urls": {
      "Homepage": "https://github.com/TiphaineLAURENT/Django_APIView"
    },
    "release_url": "https://pypi.org/project/django-modelapiview/1.4.13/",
    "requires_dist": [
      "Django (>=3.1)",
      "django-routeview (>=1.1.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "Two view classes to handle API endpoints",
    "version": "1.4.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9297898,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc51900fbb3fdd59ee92c3d0e4406a7b8f16273fe5e4bdf488b695bece719db0",
        "md5": "2fe9042ce5fab642740e8fabd9575518",
        "sha256": "0b27581cc5e504b2808f4335dea66793cb98e1fb5a6a39d8f4b670e877d05f10"
      },
      "downloads": -1,
      "filename": "django_modelapiview-1.4.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2fe9042ce5fab642740e8fabd9575518",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 14698,
      "upload_time": "2020-11-28T18:26:25",
      "upload_time_iso_8601": "2020-11-28T18:26:25.361230Z",
      "url": "https://files.pythonhosted.org/packages/bc/51/900fbb3fdd59ee92c3d0e4406a7b8f16273fe5e4bdf488b695bece719db0/django_modelapiview-1.4.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "393bf505645a36ff0cd7a8f94e4d6d8c8fd9bd69f18fdc86622767dea3a93986",
        "md5": "da3ec7c72219fddcd22227ecb2f91c95",
        "sha256": "6b547ac3a42898752d9794d4a905681b815efe41d4e7f81a6857440bba6980cf"
      },
      "downloads": -1,
      "filename": "django_modelapiview-1.4.13.tar.gz",
      "has_sig": false,
      "md5_digest": "da3ec7c72219fddcd22227ecb2f91c95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 12871,
      "upload_time": "2020-11-28T18:26:26",
      "upload_time_iso_8601": "2020-11-28T18:26:26.797304Z",
      "url": "https://files.pythonhosted.org/packages/39/3b/f505645a36ff0cd7a8f94e4d6d8c8fd9bd69f18fdc86622767dea3a93986/django_modelapiview-1.4.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}