{
  "info": {
    "author": "Saxo Publish",
    "author_email": "publish@saxo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "django-thema\n============\n\nA `Django <https://www.djangoproject.com/>`__ application that provides\n`EDItEUR Thema categories <http://www.editeur.org/151/Thema/>`__. It\nsupplies translation to all languages EDItEUR supports, so if you are\nusing Django's internationalization in your project you will also get\ntranslation.\n\nRequirements\n------------\n\nThis application requires:\n\n::\n\n    django,\n    mock,\n    polib,\n    xlrd,\n\nInstallation\n------------\n\nInstall the application from Pypi:\n\n``$ pip install django-thema``\n\nAdd the application to your Django project:\n\n::\n\n\n    INSTALLED_APPS = [\n        ...\n        'thema',\n        ...\n    ]\n\nMigrate the application\n\n::\n\n    $ ./manage.py thema\n\nYou should populate the model with the data in EDItEUR database, for\nthis use the command ``populate_thema_categories``\n\n::\n\n    $ ./manage.py populate_thema_categories\n\nAlso, please make sure the tests passed smoothly\n\n::\n\n    $ ./manage.py test thema\n\nIf any test fails, then you could end up with missing data in your\ndatabase or malfunction of the application.\n\nHow it works\n------------\n\n``django-thema`` offers a model ``ThemaCategory``, each instance is a\nThema category. The model looks like:\n\n::\n\n    class ThemaCategory(models.Model):\n        \"\"\"Model that represents the Thema categories.\n\n        The field `header` contains the heading in English.\n        \"\"\"\n        ...\n        code: The code of the Thema category,\n        header: The heading of the Thema category (description),\n        parent: A ForeignKey to the parent category.\n        ...\n        \n        @property\n        def local_header(self):\n            \"\"\"Return the header translated to the activated language.\"\"\"\n            return _(self.header)\n\nThe content of ``header`` is in English, but you can get its translation\nto your local language using the property\n``ThemaCategory.local_header``. To see all supported languages check\nSupported Languages section.\n\n::\n\n    ...\n    >>> from thema.models import ThemaCategory\n    >>> thema_aba = ThemaCategory.objects.get(code='ABA')\n    >>> thema_aba.header\n    'Theory of art'\n    ...\n\nGetting translation:\n\n::\n\n    ...\n    >>> from django.utils.translation import activate\n    >>> activate('es')\n    >>> thema_aba.local_header\n    'Teoría del arte'\n    >>> activate('da')\n    >>> thema_aba.local_header\n    'Kunstteori'\n    ...\n\n*Note: the translation will work only if you have enabled `Django's\ninternationalization <https://docs.djangoproject.com/en/1.10/topics/i18n/>`__\nin your project.*\n\nGetting the parent category:\n\n::\n\n    ...\n    >>> thema_aba.parent\n    <ThemaCategory: AB>\n    ...\n\nSupported language\n==================\n\nThe application supports the languages covered by EDItEUR:\n\n-  Arabic\n-  Danish\n-  English\n-  Spanish\n-  French\n-  German\n-  Hungarian\n-  Italian\n-  Japanese\n-  Lithuanian\n-  Norwegian\n-  Polish\n-  Portuguese\n-  Swedish\n-  Turkish\n\nWe don't do any translation, we just use the data provided by EDItEUR,\nso if you find a missing translation or a translation error, please\n`contact EDItEUR directly <http://www.editeur.org/42/Contact/>`__.\n\nAuthors\n=======\n\n- Dannier Trinchet\n- Mikkel Munch\n- Vladir Parrado\n- Søren Howe\n- Tobias Ley\n\nMaintenance\n===========\n\nTo submit bugs, feature requests, submit patches, please use `the\nofficial repository <https://saxo.githost.io/publish/django-thema/>`__.\n\nCopyright and licensing information\n===================================\n\nBSD License 2.0, 3-clause license.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://saxo.githost.io/publish/django-thema",
    "keywords": "django,thema,EDItEUR",
    "license": "BSD License 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-thema",
    "package_url": "https://pypi.org/project/django-thema/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-thema/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://saxo.githost.io/publish/django-thema"
    },
    "release_url": "https://pypi.org/project/django-thema/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Application that provides EDItEUR Thema categories, and translations for the headers.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3671688,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85ecbadba17bc9e85003076856b76661bec1dd186cd6afae84fa0e3cdcdff200",
        "md5": "72ff1628bc437399f6899dddf7ab04b6",
        "sha256": "ebf08e305de730b281ce414ae9eb683d8a79367b30a9eb30ec6adc9a3db68c4f"
      },
      "downloads": -1,
      "filename": "django-thema-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "72ff1628bc437399f6899dddf7ab04b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14640896,
      "upload_time": "2017-05-09T18:11:56",
      "upload_time_iso_8601": "2017-05-09T18:11:56.969710Z",
      "url": "https://files.pythonhosted.org/packages/85/ec/badba17bc9e85003076856b76661bec1dd186cd6afae84fa0e3cdcdff200/django-thema-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}