{
  "info": {
    "author": "Eason Smith",
    "author_email": "uniquecolesmith@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===\ndjango-wechat-web\n===\n\ndjango-wechat-web is a simple Django app to conduct Wechat-web-based helper. For each\nquestion, visitors can choose between a fixed number of answers.\n\nDetailed documentation is in the 'docs' directory.\n\nQuick start\n-----------\n\n1. Add 'django_wechat_web' to to your INSTALLED_APPS setting like this::\n   \n   INSTALLED_APPS = [\n        ...\n        'django_wechat_web',\n   ]\n\n2. Add WECHAT to your settings file::\n\n   WECHAT = {\n        'appid': 'YOUR APPID',\n        'appsecret': 'YOUR APP Secret',\n   }\n\n3. Run `python manage.py makemigrations django_wechat_web; python manage.py migrate` to create the django_wechat_web models.\n\n4. In your app view where your need get wechat user openid, do like this::\n\n   from django_wechat_web import WechatView\n\n   class YourViewName(WechatView):\n        '''\n            Extends WechatView and over get method\n            Here WechatView extends django.views.generic.View\n        '''\n        scope = 'snsapi_base' # default\n\n        ...\n\n\n        def get(self, request, *args, **kwargs):\n            # your code ....\n\n        ...\n\n5. Now you can do anything the same as `django.views.generic.View`.\n\n6. More:\n   django_wechat_web:\n    model:\n        WechatBase\n        WechatUserInfo\n\n    wechat:\n        WechatView\n# django-wechat-web \n\n### 2016-05-01\n* reconstruct WechatView\n\n```\n// \n1. openid ---session存在--> 3\n          ---session不存在--> 2\n\n2. 跳转 令STATE=SCOPE.replace('_', '')\n\n3. 获取STATE, 如果STATE=snsapibase, 则获取openid;\n    如果STATE=snsapiuserinfo, 则获取openid和userinfo\n\n4. 结束\n```\n\n### 2016-04-30\n* version 0.0.15\n    * fix wechat.py need field: openid\n* version 0.0.14\n    * WechatUserInfo Model add objects field, add new Manager method: empty_json\n\n### 2016-04-29\n* Fix Bug:\n    * save_userinfo_or_not 应该保存在session中，并且使用userinfo完要将其置为False，防止重复获取userinfo\n* Fix Bug:\n    * 问题: 第一次授权的时候就去哪用户信息导致奔溃\n    * 解决: 设置一个是否存储用户信息的变量save_userinfo_or_not, 默认为False, 只有满足需要获取userinfo的条件时才设为True; 然后save_userinfo_or_not为True, 才获取用户信息\n* Fix Bug\n    * error function args\n* update WechatView\n    * scope设置为snsapi_userinfo 时，说明希望保留用户详细信息\n    * 但是, 又不希望用户多次snsapi_userinfo方式授权, 所以过程是这样的\n\n```\n    -> 1.默认snsapi_base方式跳转 \n    -> 2.拿到code, 获取openid, 将openid存到session \n    -> 3.如果openid存在并且openid对应的WechatUserInfo模型数据不存在并且scope为snsapi_userinfo, 则将再次跳转到snsapi_userinfo方式; 如果openid不存在, 或者openid存在，但WechatUserInfo数据存在, 或者 openid存在，但是scope不是snsapi_userinfo, 则跳转第五步\n    -> 4.跳回步骤2\n    -> 5. 授权结束, 接下来执行你的动作\n```\n\n### 2016-04-27\n* update WechatView\n  * add class boolean attr: swicth\n    * `swicth=True` (default): open wechat redirect/authentication\n    * `swicth=False` : The same as django.views.generic.View",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-wechat-web",
    "package_url": "https://pypi.org/project/django-wechat-web/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-wechat-web/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/django-wechat-web/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple Django app to conduct Web-based.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2096616,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2611628ddba3d9177c874c180342b2e0e3f543bc770537aaaf252f444cbdd66",
        "md5": "a955823adab09eea6b5f717fc8e8eded",
        "sha256": "918e51c013202ffb3bd37583b20c2f570e2ec3cfb2e7a064c0456e1c7dda7719"
      },
      "downloads": -1,
      "filename": "django-wechat-web-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a955823adab09eea6b5f717fc8e8eded",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10538,
      "upload_time": "2016-05-01T06:30:29",
      "upload_time_iso_8601": "2016-05-01T06:30:29.761608Z",
      "url": "https://files.pythonhosted.org/packages/f2/61/1628ddba3d9177c874c180342b2e0e3f543bc770537aaaf252f444cbdd66/django-wechat-web-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}