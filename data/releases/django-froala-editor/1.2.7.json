{
  "info": {
    "author": "Dipesh Acharya",
    "author_email": "xtranophilist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "======================\ndjango-froala-editor\n======================\n\ndjango-froala-editor package helps integrate `Froala WYSIWYG HTML editor <https://froala.com/wysiwyg-editor/>`_ with Django.\n\n\nGetting started\n====================\n\n1. Install the package::\n\n    pip install django-froala-editor\n\nOR\n\nAdd the directory `froala_editor` from this repo to your Python path.\n\n2. Add ``froala_editor`` to INSTALLED_APPS in ``settings.py``.\n\n3. Add the following line to ``urlpatterns`` in your application's ``urls.py``.\n\n\n.. code-block:: python\n\n    url(r'^froala_editor/', include('froala_editor.urls')),\n\nSkip this url inclusion if you don't want image upload inside WYSIWYG editor. Images from URLs can still be embedded.\n\nUsage\n==============\n\n.. code-block:: python\n\n    from django.db import models\n    from froala_editor.fields import FroalaField\n\n    class Page(models.Model):\n        content = FroalaField()\n\n``FroalaField`` uses ``froala_editor.widgets.FroalaEditor`` as its widget. You may directly use this widget with any of your forms.py:\n\n.. code-block:: python\n\n    from django import forms\n    from froala_editor.widgets import FroalaEditor\n\n    class PageForm(forms.ModelForm):\n        content = forms.CharField(widget=FroalaEditor)\n\n\nUsage outside admin\n^^^^^^^^^^^^^^^^^^^^^^\n\nWhen used outside the Django admin, the media files are to be manually included in the template. Inside the ``<head>`` section or before the form is rendered, include:\n\n.. code-block:: python\n\n    {{ form.media }}\n\n\nIn case of jQuery conflict (when your project template already has jQuery), you need to include the following files instead of ``{{ form.media }}`` plus the static files for theme (if not default) and required plugins.\n\n.. code-block:: python\n\n    <link href=\"{{STATIC_URL}}froala_editor/css/font-awesome.min.css\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n    <link href=\"{{STATIC_URL}}froala_editor/css/froala_editor.min.css\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n    <link href=\"{{STATIC_URL}}froala_editor/css/froala_style.min.css\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n    <script type=\"text/javascript\" src=\"{{STATIC_URL}}froala_editor/js/froala_editor.min.js\"></script>\n\n\nIf you don't want to use jQuery from this package, you may use the following in your `settings.py`:\n\n.. code-block:: python\n\n    FROALA_INCLUDE_JQUERY = False\n\n\n\nCustomization\n==============\n\n\n``FroalaField`` and ``FroalaEditor`` take in the following arguments:\n\noptions\n^^^^^^^^^\n\nFroala Editor provides several options for customizing the editor. See https://froala.com/wysiwyg-editor/docs for all available options.\nYou can provide a dictionary of these options as ``FROALA_EDITOR_OPTIONS`` setting in ``settings.py``. These options would then be used for all instances of the WYSIWYG editor in the project.\n\nOptions for individual field can also be provided via ``FroalaField`` or ``FroalEditor`` class. This overrides any options set via ``FROALA_EDITOR_OPTIONS``.:\n\n.. code-block:: python\n\n    from django.db import models\n    from froala_editor.fields import FroalaField\n\n    class Page(models.Model):\n        content = FroalaField(options={\n            'inlineMode': True,\n        })\n\n.. code-block:: python\n\n    from django import forms\n    from froala_editor.widgets import FroalaEditor\n\n    class PageForm(forms.ModelForm):\n        content = forms.TextField(widget=FroalaEditor(options={\n            'inlineMode': True,\n        }        ))\n\n\ntheme\n^^^^^^^^^\n\nYou may provide the name of the theme to be used as ``theme`` argument to ``FroalaField`` or ``FroalaEditor``.\n\n\n.. code-block:: python\n\n    from django.db import models\n    from froala_editor.fields import FroalaField\n\n    class Page(models.Model):\n        content = FroalaField(theme='dark')\n\n\n``FROALA_EDITOR_THEME`` can be set in ``settings.py`` making all instances of the editor to use a theme. However, ``theme`` argument in ``FroalaField`` and ``FroalaEditor`` overrides ``FROALA_EDITOR_THEME``. Using a theme named 'dark' would require the existence of the file ``froala_editor/static/froala_editor/css/themes/dark.min.css``. Available themes are: 'dark', 'gray' and 'red'.\n\n\nplugins\n^^^^^^^^^^\nFroala Editor comes with the plugins: block style, text & background colors, font size, font family, insert video, insert table, media manager, lists and file upload. By default, all plugins are enabled by default in this package. See `https://froala.com/wysiwyg-editor/docs/plugins <https://froala.com/wysiwyg-editor/docs/plugins>`_ for all available plugins.\n\n``FROALA_EDITOR_PLUGINS`` can be set in ``settings.py`` to tell which plugins should all instances of Froala Editor be using. By default, it is\n\n.. code-block:: python\n\n    FROALA_EDITOR_PLUGINS = ('font_size', 'font_family', 'colors', 'block_styles', 'video', 'tables', 'media_manager', 'lists', 'file_upload', 'char_counter', 'urls', 'fullscreen', 'inline_styles', 'entities')\n\nThe usage of ``plugins`` argument with ``FroalaEditor`` or ``FroalaField`` overrides this for that particular instance.\n\n\n.. code-block:: python\n\n    from django.db import models\n    from froala_editor.fields import FroalaField\n\n    class Page(models.Model):\n        content = FroalaField(plugins=('font_size', 'font_family',))\n\n\nimage_upload\n^^^^^^^^^^^^^^\n``FroalaEditor`` and ``FroalaField`` optionally take in a boolean value for ``image_upload`` argument to enable or disable image uploads. Image uploads are enabled by default if the urls of this package are included in your urls.py.\n\nYou can use ``FROALA_UPLOAD_PATH`` setting in ``settings.py`` to change the path where uploaded files are stored within the ``MEDIA_ROOT``. By default, ``uploads/froala_editor/images`` is used for storing uploaded images.\n\n\ninclude_jquery\n^^^^^^^^^^^^^^^\njQuery is included by default in form media. If you don't want to include jQuery, you may pass ``include_jquery=False`` to ``FroalaEditor`` or ``FroalaField``. ``FROALA_INCLUDE_JQUERY`` can be also set in ``settings.py`` for project wide effects.\n\nLicense\n===============\n\nThis package is available under BSD License.\nSee https://froala.com/wysiwyg-editor/pricing for licensing the Froala Editor.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/froala/django-froala-editor/",
    "keywords": "froala,django,admin,wysiwyg,editor,text,html,editor,rich,web",
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-froala-editor",
    "package_url": "https://pypi.org/project/django-froala-editor/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-froala-editor/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/froala/django-froala-editor/"
    },
    "release_url": "https://pypi.org/project/django-froala-editor/1.2.7/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "django-froala-editor package helps integrate Froala WYSIWYG HTML editor with Django.",
    "version": "1.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17414871,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "168c1daf04292ac56e1fb5ef16ea99f7ca9541d77f05296b6ff78104f299140e",
        "md5": "28d6e9cc237a8b911d0b18882ba5cd8b",
        "sha256": "eabdb96bd580b2c1d248d047a8215cebd40532caa24d126ecc9627b5826e1880"
      },
      "downloads": -1,
      "filename": "django-froala-editor-1.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "28d6e9cc237a8b911d0b18882ba5cd8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 495869,
      "upload_time": "2015-05-14T11:00:22",
      "upload_time_iso_8601": "2015-05-14T11:00:22.985694Z",
      "url": "https://files.pythonhosted.org/packages/16/8c/1daf04292ac56e1fb5ef16ea99f7ca9541d77f05296b6ff78104f299140e/django-froala-editor-1.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}