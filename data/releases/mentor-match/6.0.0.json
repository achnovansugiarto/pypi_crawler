{
  "info": {
    "author": "Jonathan Kerr",
    "author_email": "jonathan.drew.kerr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Mentor Match\n\nThis is a package to help match mentees and mentors.\n\nIt uses [this implementation of Munkres](https://github.com/bmc/munkres) to find the most effective pairings. The Munkres algorithm works on a grid of scores.\n\n## Scoring\n\nFull details of how the matches are calculated can be read in the code itself. Customisable configurations are on the\nroadmap but are not planned for any upcoming releases.\n\n## Installation\n\nYou can install this project with `python -m pip install mentor-match`\n\n## Use\n\nTo use this library, first install it (see above). You may need to munge your data for the system to be happy with it.\nUse the [example CSV file](example.csv) as guides for your mentor and mentee data, then put them together in the same folder.\n\nThe software will run as many matching exercises as you pass `list[AbstractRule]`. So you'll need to come up with\nsome rules as to how you want your mentors and mentees to be matched. For more information on rules, see [Rules](#rules).\n\nHere is a snippet that outlines a minimal use in a Python project:\n\n```python\nfrom matching import process\nfrom pathlib import Path\nfrom matching.rules.rule import Generic\n\ndata_folder = Path(\"Documents/mentoring-data\")\nmentors, mentees = process.conduct_matching_from_file(\n    path_to_data=data_folder,\n    rules=[[Generic({True: 3, False: 0}, lambda match: match.mentee.organisation != match.mentor.organisation)]]\n)\n\noutput_folder = data_folder / \"output\"\nprocess.create_mailing_list(mentors, output_folder)\nprocess.create_mailing_list(mentees, output_folder)\n```\nThis weights matches where mentors and mentees are in different organisations. For more on rules, see [Rules](#rules).\nThe system then creates a mailing list according to a set template, ready for processing by your\nfavourite/enterprise mandated email solution\n\n## Rules\n\nAll rules are subclassed from the `AbstractRule` class. They need an `evaluate` method, which should take a `Match`\nobject and return a `boolean`, and an `apply` method, which takes a `Match` object, evaluates it, and changes the\ninternal state of the `Match` object.\n\nI've included a couple of pre-defined rules to help start you off:\n\n### Grade\n`Grade` needs a target difference in grades between mentors and mentees, an operator to compare them, and a score to\ngive if the operation is true or if it's false. So `Grade(2, operator.gt, {True: 3, False: 0})` will create a rule\nthat gives 3 points to a grade difference between the mentor and the mentee that's greater than 2.\n\n### UnmatchedBonus\n`UnmatchedBonus` only needs an integer value to add to the Match score. It'll add it if either the mentor or the\nmentee doesn't have any connections. This is helpful if you run multiple rounds, as it'll give the edge to\nmentors/mentees who haven't been successfully matched yet.\n\n### Disqualify\n`Disqualify` needs to be passed a function that takes a `Match` object and returns a `bool`. It's an anti-rule: if the\ncondition evaluates to `True`, then that `Match` is disqualified for this round. Two `Disqualify` rules are\npre-defined on the `Match` object - a `Match` is disqualified if both `Mentor` and `Mentee` are the same person, or\nif they've already been matched once.\n\n### Generic\n`Generic`, like `Disqualify`, takes a function with the signature `[[Match], bool]`. It also takes a dictionary,\nlike `Grade`, where you define what score to be given to the `Match` if the function evaluates to true, or indeed if\nit evaluates to false!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mentor-match",
    "package_url": "https://pypi.org/project/mentor-match/",
    "platform": null,
    "project_url": "https://pypi.org/project/mentor-match/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mentor-match/6.0.0/",
    "requires_dist": [
      "munkres"
    ],
    "requires_python": "",
    "summary": "A series of classes to match mentors and mentees",
    "version": "6.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14966841,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64511b22b1f2537d1473c1f23f3067884c610d3e77d76e57652b8a82d6e052d8",
        "md5": "5ab36e11cfbd44fcb88a7722314b929d",
        "sha256": "a84054b159c24d49977886eacf5af38a38052b90cb55b20aa871ed6288b8cb63"
      },
      "downloads": -1,
      "filename": "mentor_match-6.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ab36e11cfbd44fcb88a7722314b929d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10147,
      "upload_time": "2022-05-14T13:04:45",
      "upload_time_iso_8601": "2022-05-14T13:04:45.790233Z",
      "url": "https://files.pythonhosted.org/packages/64/51/1b22b1f2537d1473c1f23f3067884c610d3e77d76e57652b8a82d6e052d8/mentor_match-6.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f572b2dc3af0d059f44f1a41f459096673b00a04006191e32b5b9df182d1f773",
        "md5": "3585d22d98e73e53d0cbe7fd16a18f91",
        "sha256": "ddbb4b45f640c9ecd810af60093dbd1ec4420af04ae2a39a18ebd1dab41c847a"
      },
      "downloads": -1,
      "filename": "mentor-match-6.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3585d22d98e73e53d0cbe7fd16a18f91",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9507,
      "upload_time": "2022-05-14T13:04:47",
      "upload_time_iso_8601": "2022-05-14T13:04:47.377121Z",
      "url": "https://files.pythonhosted.org/packages/f5/72/b2dc3af0d059f44f1a41f459096673b00a04006191e32b5b9df182d1f773/mentor-match-6.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}