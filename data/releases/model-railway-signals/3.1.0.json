{
  "info": {
    "author": "johnrm174",
    "author_email": "johnrm17418@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# model-railway-signalling\n\nA DCC model railway signalling system written in Python. Primarily intended for the Raspberry Pi, but \nwill also run on other platforms (albeit without some of the Raspberry-Pi specific interfacing functions). \nMost types of colour light signals, semaphore signals, and ground signals are supported.\n* Interfaces with the Pi-SPROG DCC command station to drive the signals and points out on the layout\n* Uses the Raspberry Pi GPIO inputs to provide train detection in support of signalling automation\n\n## Layout editor\n\nFrom Release 3.0.0, the schematic editor application enables automated and interlocked layout signalling \nschemes to be designed and configured without the need to write any code. Note that the editor is in\nactive development so any comments and suggestions for future features are welcome.\n\nWhat's supported in Release 3.1.0:\n* Draw your layout schematic with lines, points, signals and track occupancy sections\n* Define the DCC acommand sequences to drive the signals and points out on the layout\n* Configure the signals and points to implement protototypical interlocking schemes\n* Configure GPIO sensors and track sections to provide a 'mimic' display of the layout\n* Save and load your layout schematic and state between running sessions\n\nWhat's coming soon:\n* Undo/redo for layout editing functions\n* Support for block section instruments\n* MQTT networking (for linking layouts)\n* Application documentation\n\nAny bug reports and feedback you may have would be gratefully appreciated - specifically:\n* What aspects are intuitive? What aspects aren't?\n* What aspects do you particularly like?\n* What aspects particularly irritate you?\n\nThere are some example layout files in the 'configuration_examples' folder.\n\n![Example Screenshot](https://github.com/johnrm174/model-railway-signalling/blob/main/README_screenshot2.png)\n## Library functions\n\nAll of the functions for creating and managing 'signals', 'points', 'sections', 'sensors' and 'block instruments' \nhave been developed as a Python Package to promote re-use across other layouts. This includes functions to support \nthe interlocking of signals, points and block instruments, enabling fully prototypical signalling schemes to be \ndeveloped in code.\n\nAn interface to a SPROG DCC Command station enables control of the signals and points out on the layout. \nThe signals and points can be mapped to one or more DCC addresses in a manner that should be compatible with \nthe majority of DCC signal/points decoders currently on the market. A GPIO interface allows external train \ndetectors to be connected in via opto-isolators. These sensors can be configured to trigger 'signal approached' \nor 'signal passed' events, enabling full automatic control of the layout signalling. A MQTT interface enables \nmultiple signalling applications to be networked together so that complex layouts can be split into different \nsignalling sections/areas, with communication between them.\n\n![Example Screenshot](https://github.com/johnrm174/model-railway-signalling/blob/main/README_screenshot1.png)\n\n## Installation\n\nFor a first time installation use:\n<pre>\n$ python3 -m pip install model-railway-signals \n</pre>\nTo upgrade to the latest version use:\n<pre>\n$ python3 -m pip install --upgrade model-railway-signals \n</pre>\nIf you want to use Block Instruments with full sound enabled (bell rings and telegraph key sounds)\nthen you will also need to install the 'simpleaudio' package. Note that for Windows it has a dependency \non Microsoft Visual C++ 14.0 or greater (so you will need to ensure Visual Studio 2015 is installed first).\nIf 'simpleaudio' is not installed then the software will still function correctly (just without sound).\n<pre>\n$ python3 -m pip install simpleaudio\n</pre>\n\n## Using the layout editor\n\nTo run the editor application:\n\nThe python package should be run as a module (note underscores):\n<pre>\n$ python3 -m model_railway_signals \n</pre>\n\n## Using the library functions\n\nTo use the public API functions for developing your own layout signalling system:\n<pre>\nfrom model_railway_signals import * \n</pre>\nFor details of the API and code examples see the seperate 'PUBLIC_API.md' file.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johnrm174/model-railway-signalling",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE Version 2, June 1991",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-railway-signals",
    "package_url": "https://pypi.org/project/model-railway-signals/",
    "platform": null,
    "project_url": "https://pypi.org/project/model-railway-signals/",
    "project_urls": {
      "Homepage": "https://github.com/johnrm174/model-railway-signalling"
    },
    "release_url": "https://pypi.org/project/model-railway-signals/3.1.0/",
    "requires_dist": [
      "paho-mqtt",
      "pyserial"
    ],
    "requires_python": "",
    "summary": "Create your own DCC model railway signalling scheme",
    "version": "3.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16064626,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6fdcf9a6c7af6df6ebfd9801427bfd0b20c0d1b4ede0fbe5caeb65625214303",
        "md5": "bc1ff2d3b5609cec4c3665596d763aa0",
        "sha256": "4e7a10a3c883d9c5ca05532d4185dc1a080bee770e50efae8981ce328b91a340"
      },
      "downloads": -1,
      "filename": "model_railway_signals-3.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc1ff2d3b5609cec4c3665596d763aa0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 496130,
      "upload_time": "2022-12-11T12:21:26",
      "upload_time_iso_8601": "2022-12-11T12:21:26.714369Z",
      "url": "https://files.pythonhosted.org/packages/a6/fd/cf9a6c7af6df6ebfd9801427bfd0b20c0d1b4ede0fbe5caeb65625214303/model_railway_signals-3.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fc770285d690423b91c8c2abdc49188f35fdaecae1cdff2d64bb8347ab415ac",
        "md5": "d8c035d563827b5924da3558788f1652",
        "sha256": "91430fe3c01b2b5b59efa01074401f19715e9ba55d4c174d584fae9e7f7cfe99"
      },
      "downloads": -1,
      "filename": "model-railway-signals-3.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d8c035d563827b5924da3558788f1652",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 459897,
      "upload_time": "2022-12-11T12:21:29",
      "upload_time_iso_8601": "2022-12-11T12:21:29.161572Z",
      "url": "https://files.pythonhosted.org/packages/4f/c7/70285d690423b91c8c2abdc49188f35fdaecae1cdff2d64bb8347ab415ac/model-railway-signals-3.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}