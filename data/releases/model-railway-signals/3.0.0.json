{
  "info": {
    "author": "johnrm174",
    "author_email": "johnrm17418@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# model-railway-signalling\n\n## Library functions\n\nA DCC model railway signalling library written in Python. Primarily intended for the Raspberry Pi, but \nwill also run on other platforms (albeit without some of the Raspberry-Pi specific interfacing functions).\n\nAll of the functions for creating and managing 'signals', 'points', 'sections', 'sensors' and 'block instruments' \nhave been developed as a Python Package to promote re-use across other layouts. This includes functions to support \nthe interlocking of signals, points and block instruments, enabling fully prototypical signalling schemes to be \ndeveloped. Most types of colour light signals, semaphore signals, and ground signals are supported.\n\nAn interface to a SPROG DCC Command station enables control of the signals and points out on the layout. \nThe signals and points can be mapped to one or more DCC addresses in a manner that should be compatible with \nthe majority of DCC signal/points decoders currently on the market. A GPIO interface allows external train \ndetectors to be connected in via opto-isolators. These sensors can be configured to trigger 'signal approached' \nor 'signal passed' events, enabling full automatic control of the layout signalling. A MQTT interface enables \nmultiple signalling applications to be networked together so that complex layouts can be split into different \nsignalling sections/areas, with communication between them.\n\n![Example Screenshot](https://github.com/johnrm174/model-railway-signalling/blob/main/README_screenshot1.png)\n\n## Layout editor\n\nFrom Release 3.0.0, a basic schematic editor application has been added to enable signalling schemes to\nbe designed and developed without the need to write your own code. Note that this should be considered a \nbeta release and at a \"Minimum Viable Product\" stage so don't expect a polished/stable application just yet.\n\nThere are some example layout files in the 'configuration_examples' folder.\n\nWhat's supported in the MVP:\n* Schematic editing - points, signals and lines\n* SPROG interface - DCC control of signals and points\n* Basic interlocking of signals and points\n* Save and load of layout schematic and state\n\nWhat's coming soon:\n* Interlocking - of distant signals with the home signals ahead\n* Schematic editing - Track sections and block instruments\n* Automation - sensor events and integration with track sections and signals\n* Application documentation\n* MQTT networking\n\nAny bug reports and feedback you may have would be gratefully appreciated - specifically:\n* What aspects are intuitive? What aspects aren't?\n* What aspects do you particularly like?\n* What aspects particularly irritate you?\n* what features would you like to see next?\n\n![Example Screenshot](https://github.com/johnrm174/model-railway-signalling/blob/main/README_screenshot2.png)\n\n## Installation\n\nFor a first time installation use:\n<pre>\n$ python3 -m pip install model-railway-signals \n</pre>\nTo upgrade to the latest version use:\n<pre>\n$ python3 -m pip install --upgrade model-railway-signals \n</pre>\nIf you want to use Block Instruments with full sound enabled (bell rings and telegraph key sounds)\nthen you will also need to install the 'simpleaudio' package. Note that for Windows it has a dependency \non Microsoft Visual C++ 14.0 or greater (so you will need to ensure Visual Studio 2015 is installed first).\nIf 'simpleaudio' is not installed then the software will still function correctly (just without sound).\n<pre>\n$ python3 -m pip install simpleaudio\n</pre>\n\n## Using the layout editor\n\nTo run the editor application:\n\nThe python package should be run as a module (note underscores):\n<pre>\n$ python3 -m model_railway_signals \n</pre>\n\n## Using the library functions\n\nTo use the public API functions for developing your own layout signalling system:\n<pre>\nfrom model_railway_signals import * \n</pre>\nFor details of the API and code examples see the seperate 'PUBLIC_API.md' file.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johnrm174/model-railway-signalling",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE Version 2, June 1991",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-railway-signals",
    "package_url": "https://pypi.org/project/model-railway-signals/",
    "platform": null,
    "project_url": "https://pypi.org/project/model-railway-signals/",
    "project_urls": {
      "Homepage": "https://github.com/johnrm174/model-railway-signalling"
    },
    "release_url": "https://pypi.org/project/model-railway-signals/3.0.0/",
    "requires_dist": [
      "paho-mqtt",
      "pyserial"
    ],
    "requires_python": "",
    "summary": "Create your own DCC model railway signalling scheme",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16064626,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccb6134ef7d5ef6c723494f75933f5a5c5d236f7472973c28ad73e50279b8d23",
        "md5": "0a69ca71f3b93341b33881a9cb331e3b",
        "sha256": "5ef52030417257131ce2c65a9b4c341d8fd8dc8b7d88e1f3b0693fd40a5617cb"
      },
      "downloads": -1,
      "filename": "model_railway_signals-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a69ca71f3b93341b33881a9cb331e3b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 465822,
      "upload_time": "2022-07-14T13:34:54",
      "upload_time_iso_8601": "2022-07-14T13:34:54.867737Z",
      "url": "https://files.pythonhosted.org/packages/cc/b6/134ef7d5ef6c723494f75933f5a5c5d236f7472973c28ad73e50279b8d23/model_railway_signals-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9a5d3b037f52ca4cef83450ce2045cbf2ff5eeeb830765668d2fa50958b2ce0",
        "md5": "5d128a01a59ce25bfddf091406bc7ff1",
        "sha256": "59a81a9d216aa776528e55d7fcd446398779e725dc20c4960c70ecdc4cc32d9d"
      },
      "downloads": -1,
      "filename": "model-railway-signals-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d128a01a59ce25bfddf091406bc7ff1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 441968,
      "upload_time": "2022-07-14T13:35:03",
      "upload_time_iso_8601": "2022-07-14T13:35:03.493040Z",
      "url": "https://files.pythonhosted.org/packages/b9/a5/d3b037f52ca4cef83450ce2045cbf2ff5eeeb830765668d2fa50958b2ce0/model-railway-signals-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}