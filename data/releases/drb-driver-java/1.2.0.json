{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# JavaNode driver\nThe drb-driver-java python module aims to wrap Java version of DRB model. It is\nable to navigates among java nodes content.\n\nSee [documentation]() for details.\n# Library usage \n**Java** (JDK) must be present in the system and the `JAVA_HOME` environment\nvariable must be set.\n\n## Installation\nInstalling this library with execute the following in a terminal\n```shell\npip install drb-driver-java\n```\n\n## Configuration\n### Automatic\nThe classpath is initialized retrieving Java libraries using a specific entry\npoint `drb.driver.java` where:\n - name: represent the Java library package extension (e.g. jar)\n - value: represent the package where Java libraries are stocked\n\nThe following example will retrieve all `jar` files resources from the Python\npackage `my.package.classpath`:\n```python\nfrom setuptools import setup\n\nsetup(\n    entry_points={\n        'drb.driver.java': 'jar = my.package.classpath'\n    },\n    # Other setuptools.setup parameters\n)\n```\n\n### Manual\nTo add custom Java libraries to the JVM classpath, please configure\n``CLASSPATH_ADDON`` environment variable. It contains absolute path of\nadditional Java libraries\n```shell\nexport CLASSPATH_ADDON=$CLASSPATH_ADDON:/path/to/my/custom/java/lib\n```\n\n## Java Factory and Java Node\nThe module implements the basic factory model defined in DRB in its node resolver. Based on the python entry point mechanism, this module can be dynamically imported into applications.\n\nThe entry point group reference is `drb.driver`.<br/>\nThe driver name is `java`.<br/>\nThe factory class `DrbJavaFactory` is encoded into `drb.drivers.factory`\n\nThe java factory creates a JavaNode from an existing java content. It uses a base node to access the content data using a streamed implementation from the base node.\n\nThe base node can be a DrbFileNode, DrbHttpNode, DrbTarNode or any other nodes able to provide streamed (`BufferedIOBase`, `RawIOBase`, `IO`) java content.\n## limitations\nThe current version does not manage child modification and insertion. JavaNode is currently read only.\n## Using this module\nTo include this module into your project, the `drb-driver-java` module shall be referenced into `requirements.txt` file, or the following pip line can be run:\n```commandline\npip install drb-driver-java\n```\nSet eventually environment variable ``CLASSPATH_ADDON`` and ``JAVA_HOME``\n\n[documentation]: https://drb-python.gitlab.io/impl/java\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/impl/java",
    "keywords": "",
    "license": "LGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-driver-java",
    "package_url": "https://pypi.org/project/drb-driver-java/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-driver-java/",
    "project_urls": {
      "Documentation": "https://drb-python.gitlab.io/impl/java",
      "Homepage": "https://gitlab.com/drb-python/impl/java",
      "Source": "https://gitlab.com/drb-python/impl/java'"
    },
    "release_url": "https://pypi.org/project/drb-driver-java/1.2.0/",
    "requires_dist": [
      "cython",
      "drb (~=2.0.3)",
      "pyjnius (>=1.4.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB Java Driver",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16993307,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1db63664560057fd3d7493665ff1d13a13fb60a2144067a3ba10b6ef3fa6aca0",
        "md5": "314b2e9bc1a73a73d7f53aa1bdea6813",
        "sha256": "c5d53ba413d26f020e5d4a4b84aa0bbc4af230a7ab9ccba4b8086db26388111a"
      },
      "downloads": -1,
      "filename": "drb_driver_java-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "314b2e9bc1a73a73d7f53aa1bdea6813",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 27262434,
      "upload_time": "2023-02-23T13:19:29",
      "upload_time_iso_8601": "2023-02-23T13:19:29.046108Z",
      "url": "https://files.pythonhosted.org/packages/1d/b6/3664560057fd3d7493665ff1d13a13fb60a2144067a3ba10b6ef3fa6aca0/drb_driver_java-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "921b8dd3a4b29f2ba56a62502bde8ef6ce4ce239b8c7e8c0b645bdd2d669d234",
        "md5": "ab2d3cca530d705e855a03c2482633ab",
        "sha256": "21ac461b63e68f4ffef4f8aad33acebec622a97bb1c7c0408188831322c3346b"
      },
      "downloads": -1,
      "filename": "drb-driver-java-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ab2d3cca530d705e855a03c2482633ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 27279671,
      "upload_time": "2023-02-23T13:19:33",
      "upload_time_iso_8601": "2023-02-23T13:19:33.882393Z",
      "url": "https://files.pythonhosted.org/packages/92/1b/8dd3a4b29f2ba56a62502bde8ef6ce4ce239b8c7e8c0b645bdd2d669d234/drb-driver-java-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}