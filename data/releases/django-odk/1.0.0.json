{
  "info": {
    "author": "Patrick HOUBEN",
    "author_email": "p.houben@cra.wallonie.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "# django-odk\nDjango data collection tool using [ODK-collect](https://play.google.com/store/apps/details?id=org.odk.collect.android&hl=en_US&gl=US) mobile app.\n\n\n## Prerequisite\n- Django web site up and running\n- Smartphone or tablet with [ODK-Collect installed](https://play.google.com/store/apps/details?id=org.odk.collect.android&hl=en_US&gl=US)\n- Set of forms in [Xforms](https://xlsform.org/en/) format available in xml. Use https://getodk.org/xlsform/ to validate and export your forms in xml format.\n\nNEW from version 0.3.3 (xls2xml & create final model)\n- Since most of Xforms are using `geopoint`, the database must be set up **with vector geodatabase functionality**: PostGIS, Oracle Spatial, SQLite/SpatiaLite\n- **Java Runtime Environment (JRE)** installed `$ sudo apt install default-jre` for XForm validation used by [xlsconv](https://github.com/wq/xlsform-converter)\n\n\n## Installation\n* Run\n\n```bash\n$ pip install django-odk\n$ python manage.py migrate\n$ python manage.py createsuperuser\n```\n\n* Add odk and odkdata to your INSTALLED_APPS settings\n```py\nINSTALLED_APPS = (\n    ...\n    'odk',\n    'odkdata',\n)\n```\n\n* Add LOCALE_PATHS and appropriate language_code in settings\n\n```py\nLOCALE_PATHS = [os.path.join(BASE_DIR, 'odk', 'locale')]\n\nLANGUAGE_CODE = 'en'\n# LANGUAGE_CODE = 'fr'\n# possible LANGUAGE_CODE on 05/10/2021 are: en, fr\n```\n\n* Add appropriate AUTH_USER_MODEL in settings.py\n```py\nAUTH_USER_MODEL = 'auth.user'\n```\n\n* For a more interactive app, configure **logging** as explained in [Lincoln Loop](https://lincolnloop.com/blog/django-logging-right-way/) and **messages** as explained in [Django](https://docs.djangoproject.com/en/4.0/ref/contrib/messages/)\n\n\n* Add **is_odk_admin** property to your AUTH_USER_MODEL (django.contrib.auth.models file or specific accounts.models)\n```py\n    @property\n    def is_odk_admin(self):\n        return self.groups.filter(name='odk-admin').exists()\n```\n\n\n* Add odk.urls to the main urls.py file:\n```py\nurlpatterns = [\n    ...\n    path('odk/', include('odk.urls'), name='odk'),\n]\n```\n\n* Add menu or buttons to access **Available form**\n```py\n# bootstrap5 menu item example\n<li><a class=\"dropdown-item\" href=\"{% url 'odk:xform_list' %}\">{% trans \"ODK available forms\" %}</a></li>\n```\n\n* Add menu or buttons to access **Submitted form**\n```py\n# bootstrap5 menu item example\n<li><a class=\"dropdown-item\" href=\"{% url 'odk:xformsubmit_list' %}\">{% trans \"ODK submitted forms\" %}</a></li>\n```\n\n## Connect to the Django admin site\n* create a group 'odk-admin' with create, read, update access on odk objects\n* Associate this group to the appropriate users\n\n## Available form: Build, Upload, Convert, Create\nConnect to django-odk => **Available form** => Add and follow 4 steps:\n\n1. **Build** an XLSForm file with 3 tabs 'survey', 'choices', 'settings' [Cfr documentation](https://docs.getodk.org/xlsform/). Do not forget to add 'today' & 'username' fields in Survey tab!\n\n2. **Upload** xlsx file (XForm) by clicking on 'Choose file' and Save\n\n3. **Convert** xlsx file to xml XForm compatible file [Thanks pyxform!](https://github.com/XLSForm/pyxform)\n\nFrom this point, you are ready to go with form encoding on your smartphone!\n\n> Follow [ODK instructions](https://docs.getodk.org/collect-connect/#configure-server-manually) to configure the connexion to the server\n\n> Get, fill-in and submit data [using ODK Collect](https://docs.getodk.org/collect-using/)\n\n4. **Create** Model in odkdata to get submitted data in a model formatted like xlsx form. [Thanks xlsconv!](https://github.com/wq/xlsform-converter)! Model creation is done into App `odkdata` with table name followed by `_orig` suffix when converted by xlsconv.\n\n## Submitted form\nGo to **Submitted form** menu of your server to see submitted data in XML format. On record view, click on `Insert` button to insert submitted XML data into `odkdata.models` created on step 4 hereabove.\n\nSeveral record insert is available through admin interface. Select appropriate records (ie: those without insert date) and choose `Insert in odkdata model` from action dropdown list and click on 'Send' button.\n\n# What next?\nCreate a new app in you project like `odkdata2` with `templates, views` (importing odkdata.models info) and `urls` to manage display/map/export-xls/update/analyse submitted data from ODK-Collect!\n\nComments/Improvements welcome!\n\nInvestigate [WQ Framework](https://wq.io/) but I still don't see how to deploy offline forms on smartphone.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openHBP/django-odk",
    "keywords": "",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-odk",
    "package_url": "https://pypi.org/project/django-odk/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/django-odk/",
    "project_urls": {
      "Homepage": "https://github.com/openHBP/django-odk"
    },
    "release_url": "https://pypi.org/project/django-odk/1.0.0/",
    "requires_dist": [
      "django (<4.0,>=2.2)",
      "django-braces (<2.0,>=1.11)",
      "pyxform (<2.0,>=1.10.0)",
      "xlsconv (<2.0,>=1.3.0)",
      "pillow (<9.9,>=9.1.1)",
      "lxml (<9.0.0,>=4.9.0)"
    ],
    "requires_python": "",
    "summary": "Django Data Collection tool using ODK Collect mobile App",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14481321,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47a517ae165917c058f240ebf36a4906d6561ed101d6525555e1318ae4130b30",
        "md5": "5fdf0e9eb018e0b1b6d605ed2b083a83",
        "sha256": "33a57ede5f81eb26a7d2be66f32d57652c3c130bfdf5e3764529bbfccce3d02b"
      },
      "downloads": -1,
      "filename": "django_odk-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fdf0e9eb018e0b1b6d605ed2b083a83",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 54019,
      "upload_time": "2022-06-21T13:49:59",
      "upload_time_iso_8601": "2022-06-21T13:49:59.064066Z",
      "url": "https://files.pythonhosted.org/packages/47/a5/17ae165917c058f240ebf36a4906d6561ed101d6525555e1318ae4130b30/django_odk-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d81eb2149615f09001874a4b388aa6d1bb4b868ebdb341b24806cbad2319693a",
        "md5": "733274bf030471c5cacf566a795234ff",
        "sha256": "495cd78b4946d9b9462a3e4783956285456c014596c52302d3521cb627efe4af"
      },
      "downloads": -1,
      "filename": "django-odk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "733274bf030471c5cacf566a795234ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43439,
      "upload_time": "2022-06-21T13:50:02",
      "upload_time_iso_8601": "2022-06-21T13:50:02.473287Z",
      "url": "https://files.pythonhosted.org/packages/d8/1e/b2149615f09001874a4b388aa6d1bb4b868ebdb341b24806cbad2319693a/django-odk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}