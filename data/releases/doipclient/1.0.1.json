{
  "info": {
    "author": "Jacob Schaer",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"
    ],
    "description": "python-doipclient\n#################\n\n.. image:: https://travis-ci.org/jacobschaer/python-doipclient.svg?branch=main\n    :target: https://travis-ci.org/jacobschaer/python-doipclient\n\ndoipclient is a pure Python 3 Diagnostic over IP (DoIP) client which can be used\nfor communicating with modern ECU's over automotive ethernet. It implements the\nmajority of ISO-13400 (2019) from the perspective of a short-lived synchronous\nclient. The primary use case is to serve as a transport layer implementation for\nthe `udsoncan <https://github.com/pylessard/python-udsoncan>`_ library. The code\nis published under MIT license on GitHub (jacobschaer/python-doipclient).\n\nDocumentation\n-------------\n\nThe documentation is available here : https://python-doipclient.readthedocs.io/\n\nRequirements\n------------\n\n - Python 3.6+\n\nInstallation\n------------\n\nusing pip::\n\n    pip install doipclient\n\nRunning Tests from source\n-------------------------\n\nusing pytest::\n\n    pip install pytest\n    pytest\n\nExample\n-------\nUpdated version of udsoncan's example using python_doip instead of IsoTPSocketConnection\n\n.. code-block:: python\n\n   import SomeLib.SomeCar.SomeModel as MyCar\n\n   import udsoncan\n   from doipclient import DoIPClient\n   from doipclient.connectors import DoIPClientUDSConnector\n   from udsoncan.client import Client\n   from udsoncan.exceptions import *\n   from udsoncan.services import *\n\n   udsoncan.setup_logging()\n\n   ecu_ip = '127.0.0.1'\n   ecu_logical_address = 0x00E0\n   doip_client = DoIPClient(ecu_ip, ecu_logical_address)\n   conn = DoIPClientUDSConnector(doip_client)\n   with Client(conn,  request_timeout=2, config=MyCar.config) as client:\n      try:\n         client.change_session(DiagnosticSessionControl.Session.extendedDiagnosticSession)  # integer with value of 3\n         client.unlock_security_access(MyCar.debug_level)                                   # Fictive security level. Integer coming from fictive lib, let's say its value is 5\n         client.write_data_by_identifier(udsoncan.DataIdentifier.VIN, 'ABC123456789')       # Standard ID for VIN is 0xF190. Codec is set in the client configuration\n         print('Vehicle Identification Number successfully changed.')\n         client.ecu_reset(ECUReset.ResetType.hardReset)                                     # HardReset = 0x01\n      except NegativeResponseException as e:\n         print('Server refused our request for service %s with code \"%s\" (0x%02x)' % (e.response.service.get_name(), e.response.code_name, e.response.code))\n      except InvalidResponseException, UnexpectedResponseException as e:\n         print('Server sent an invalid payload : %s' % e.response.original_payload)\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jacobschaer/python-doipclient",
    "keywords": "uds,14229,iso-14229,diagnostic,automotive,13400,iso-13400,doip",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doipclient",
    "package_url": "https://pypi.org/project/doipclient/",
    "platform": "",
    "project_url": "https://pypi.org/project/doipclient/",
    "project_urls": {
      "Homepage": "https://github.com/jacobschaer/python-doipclient"
    },
    "release_url": "https://pypi.org/project/doipclient/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Diagnostic over IP (DoIP) client implementing ISO-13400-2.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15075253,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58f4c822f708b179d1d6223dcb42b6661afc02ba4d88f1c9b1728028cd87c828",
        "md5": "9b81844f50690b68d74f84256eb93674",
        "sha256": "b8b6646dada9adbe2bc7f90bb62d13fbd0073e119ec8eef8ed3ee57b13d8dbaf"
      },
      "downloads": -1,
      "filename": "doipclient-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b81844f50690b68d74f84256eb93674",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17344,
      "upload_time": "2021-01-03T06:40:03",
      "upload_time_iso_8601": "2021-01-03T06:40:03.605167Z",
      "url": "https://files.pythonhosted.org/packages/58/f4/c822f708b179d1d6223dcb42b6661afc02ba4d88f1c9b1728028cd87c828/doipclient-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d89872bbe668336fe129ab95a3c240a5951fb33cd99f9e6c764cbef30fe556e",
        "md5": "304e6041aab4dd53a85e117910a3457a",
        "sha256": "8cb6fadf47ababe8e0ab0f0aa56fdcbe0cace2856ba7eb65a873ff4a3335528a"
      },
      "downloads": -1,
      "filename": "doipclient-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "304e6041aab4dd53a85e117910a3457a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14710,
      "upload_time": "2021-01-03T06:40:05",
      "upload_time_iso_8601": "2021-01-03T06:40:05.140852Z",
      "url": "https://files.pythonhosted.org/packages/9d/89/872bbe668336fe129ab95a3c240a5951fb33cd99f9e6c764cbef30fe556e/doipclient-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}