{
  "info": {
    "author": "Simon Brunning",
    "author_email": "simon@brunningonline.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: Jython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# mbtest\n\nPython wrapper & utils for the [Mountebank](http://www.mbtest.org/) over the wire test double tool.\n\nIncludes [pytest](https://pytest.org) fixture and [PyHamcrest](https://pyhamcrest.readthedocs.io) matchers.\n\n[![Build Status](https://travis-ci.org/brunns/mbtest.svg?branch=master)](https://travis-ci.org/brunns/mbtest)\n\n## Setup\n\nInstall with pip:\n\n    pip install mbtest\n\n(As usual, use of a [venv](https://docs.python.org/3/library/venv.html) or [virtualenv](https://virtualenv.pypa.io) is recommended.) Also requires [Mountebank](http://www.mbtest.org/) to have been installed:\n\n    npm install mountebank@1.14.1 --production\n\n## Basic example\n\n```python\nimport pytest\nimport requests\nfrom hamcrest import assert_that, is_\nfrom brunns.matchers.response import response_with\nfrom mbtest.matchers import had_request\nfrom mbtest.imposters import Imposter, Predicate, Response, Stub\n\n@pytest.mark.usefixtures(\"mock_server\")\ndef test_request_to_mock_server(mock_server):\n    # Set up mock server with required behavior\n    imposter = Imposter(Stub(Predicate(path=\"/test\"), \n                             Response(body=\"sausages\")), \n                        record_requests=True)\n\n    with mock_server(imposter) as server:\n        # Make request to mock server\n        response = requests.get(\"{}/test\".format(imposter.url))\n\n        assert_that(\"We got the expected response\", \n                    response, is_(response_with(status_code=200, body=\"sausages\")))\n        assert_that(\"The mock server recorded the request\", \n                    server, had_request(path=\"/test\", method=\"GET\"))\n```\n\nNeeds a [pytest fixture](https://docs.pytest.org/en/latest/fixture.html), most easily defined in [`conftest.py`](https://docs.pytest.org/en/latest/fixture.html#conftest-py-sharing-fixture-functions):\n\n```python\nimport pytest\nfrom mbtest import server\n\n@pytest.fixture(scope=\"session\")\ndef mock_server(request):\n    return server.mock_server(request)\n```\n\nExamples of more complex predicates can be found in the [integration tests](https://github.com/brunns/mbtest/tree/master/tests/integration/).\n\n## Developing\n\nRequires [tox](https://tox.readthedocs.io). Run `make precommit` tells you if you're OK to commit. For more options, run:\n\n    make help\n\n## Releasing\n\nRequires [hub](https://hub.github.com/), [setuptools](https://setuptools.readthedocs.io) and [twine](https://twine.readthedocs.io). To release `n.n.n`:\n\n    version=\"n.n.n\" # Needs to match new version number in setup.py.\n    git commit -am\"Release $version\" && git push # If not already all pushed, which it should be.\n    hub release create $version -m\"Release $version\"\n    python setup.py sdist\n    twine upload dist/`ls -t dist/ | head -n1`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brunns/mbtest/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mbtest",
    "package_url": "https://pypi.org/project/mbtest/",
    "platform": "",
    "project_url": "https://pypi.org/project/mbtest/",
    "project_urls": {
      "Homepage": "https://github.com/brunns/mbtest/"
    },
    "release_url": "https://pypi.org/project/mbtest/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Python wrapper & utils for the Mountebank over the wire test double tool.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17060831,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c15c997a03bb91df5edb436c45c89346d3b1fc3c24b9c6a26240613b221c37d9",
        "md5": "da7d35f05e613ec7121ed74a2cc0e1c0",
        "sha256": "8889b7a77cb51cf94754148b201c93e946ba02c9e9bebd96f519f5a4865564af"
      },
      "downloads": -1,
      "filename": "mbtest-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "da7d35f05e613ec7121ed74a2cc0e1c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 8825,
      "upload_time": "2018-08-25T16:37:02",
      "upload_time_iso_8601": "2018-08-25T16:37:02.493719Z",
      "url": "https://files.pythonhosted.org/packages/c1/5c/997a03bb91df5edb436c45c89346d3b1fc3c24b9c6a26240613b221c37d9/mbtest-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}