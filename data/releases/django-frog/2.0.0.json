{
  "info": {
    "author": "Brett Dixon",
    "author_email": "theiviaxx@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python"
    ],
    "description": "Frog\r\n====\r\n\r\nFrog is released under the MIT license. It is simple and easy to understand and places almost no restrictions on what\r\nyou can do with Frog.\r\n[More Information](http://en.wikipedia.org/wiki/MIT_License)\r\n\r\nFrog is a Server solution for hosting and serving media files.  The initial build was intended\r\nfor creative studios, but could be used for anything, even a home solution.  It was not meant for a front facing tool\r\nas the bandwidth costs would be outrageous.\r\n\r\nThe client side has been rewritten for 2.0.0 to use [Angular2](https://angular.io/) in the\r\n[frog_ng](https://github.com/theiviaxx/frog_ng) project.  Please see that to build the front end for Frog.\r\n\r\n[Documentation](http://frog.readthedocs.org/en/latest/index.html)\r\n\r\n[Quickstart](http://frog.readthedocs.org/en/latest/admin/quickstart.html)\r\n\r\nWith Frog there are a few key points that make it a perfect solution for your team(s) creative uses.\r\n\r\nAccessibility\r\n-------------\r\n\r\nFirst and foremost, Frog is easy to use and easy to add media files to.  It has a straight forward API so integrating\r\nit into any other app or tool is trivial.  Users can upload and view media instantly and the entire team benefits.  For\r\nexample, an artist could be working in Photoshop and simply hit a hotkey or panel button that would send a PNG and\r\nlayered source PSD to Frog.  The artist doesn't have to break his workflow just to share images with the rest of the\r\nteam.\r\n\r\nSince Frog is web based, everyone can get to it wherever they are.  The viewer is done in HTML5 canvas which makes it\r\neven more accessible due to no flash or other plugin requirements.\r\n\r\nVisibility\r\n----------\r\n\r\nOne of the biggest problems I see in creative studios is that their media is usually hosted on a network drive\r\nsomewhere and, if you're lucky, organized in folders.  Searching is slow, brosing is near impossible, and sharing is\r\na nightmare.  One unseen benefit with Frog is just having everything visible at one time.  Being able to browse all\r\nmedia in one place makes discovery a snap.  There is also a sense of progress and users can see a history of the\r\nproject's art over time.\r\n\r\nSearch and Filter\r\n-----------------\r\n\r\nThe search solution can be configured to use a full featured engine such a Solr or it can use the search capabilities\r\nfo the database.  Filtering is done byt he use of Tags.  Tags can be easily added to or removed from a set of images.\r\nUsers can quickly search and filter a set of images, then send that link to others.  For example, you could have a set\r\nof filters for a certain artist and a specific character.  Share that link and you'll always have an up-to-date set of\r\nimages meeting that criteria.\r\n\r\nAs mentioned before, when media is stored in a network folder, browsing is cumbersome.  If Google has tought us\r\nanything, its that search is the only means of finding something when the numbers of items gets too large.  So no\r\nmatter how organized the folder structure is, search will always be faster and more accissible to users.\r\n\r\nOpen\r\n----\r\n\r\nFrog is all open sourced and under the MIT license.  So feel free to modify it to fit your specific needs.  Because it\r\nuses Django, it is easy to add features.  The auth system included with Frog is pretty simple.  In fact it's almost\r\n100% honor system due to the site's internal focus.  But adding a more sophisticated authentication system is trivial\r\n that to Django.\r\n\r\nHacking on Frog\r\n---------------\r\n\r\nFrog uses setuptools to build and generate a python package. The easiest way to hack on Frog is to use the develop\r\nmode shipped with setuptools.\r\n\r\n1. git clone https://github.com/theiviaxx/Frog.git\r\n2. cd Frog\r\n3. python setup.py develop\r\n\r\n\r\n######Made with PyCharm\r\n\r\n[![alt text](https://github.com/theiviaxx/Frog/raw/master/docs/source/_static/logo_PyCharm.png \"PyCharm\")](https://www.jetbrains.com/pycharm/)\r\n\r\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theiviaxx/frog",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-frog",
    "package_url": "https://pypi.org/project/django-frog/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-frog/",
    "project_urls": {
      "Homepage": "https://github.com/theiviaxx/frog"
    },
    "release_url": "https://pypi.org/project/django-frog/2.0.0/",
    "requires_dist": [
      "Django (==1.10)",
      "Pillow (==4.3.0)",
      "django-contrib-comments (==1.8.0)",
      "django-haystack (==2.5.1)",
      "path.py (==8.1.2)",
      "psd-tools (==1.4)",
      "pytz (==2015.2)",
      "six (==1.9.0)",
      "urllib3 (==1.10.2)"
    ],
    "requires_python": "",
    "summary": "Media server built on django",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3580454,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df8392f876d7dd10e0cec466e155fd96306ba7780f1a52390538c5767bca74dc",
        "md5": "f696cb48e60f26dc4b75be1703b5e642",
        "sha256": "02e67ae4586c21bd034bcdf91c484eb2cce9c4d6593e30e53f46f6c8a483e5de"
      },
      "downloads": -1,
      "filename": "django_frog-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f696cb48e60f26dc4b75be1703b5e642",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 607386,
      "upload_time": "2017-11-01T15:22:25",
      "upload_time_iso_8601": "2017-11-01T15:22:25.933343Z",
      "url": "https://files.pythonhosted.org/packages/df/83/92f876d7dd10e0cec466e155fd96306ba7780f1a52390538c5767bca74dc/django_frog-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ce85018490e9d776258cc5fa8dd44ae66ba3b9a3712de48c00f58e7555bb692",
        "md5": "ab900c5c42f93242d494322642441c5a",
        "sha256": "a037721c761d33d303be519b02b6667c85d0d98cc56d783926203bf285f3b24d"
      },
      "downloads": -1,
      "filename": "django-frog-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ab900c5c42f93242d494322642441c5a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 553166,
      "upload_time": "2017-11-01T15:22:27",
      "upload_time_iso_8601": "2017-11-01T15:22:27.822409Z",
      "url": "https://files.pythonhosted.org/packages/0c/e8/5018490e9d776258cc5fa8dd44ae66ba3b9a3712de48c00f58e7555bb692/django-frog-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}