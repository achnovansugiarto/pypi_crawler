{
  "info": {
    "author": "Duke Effiom",
    "author_email": "effiomduke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# DRF NESTED FORMS\n\nA library that parses nested json or form data to python object.\n\n[![Build Status](https://travis-ci.com/emperorDuke/nested_formdata.svg?branch=master)](https://travis-ci.com/emperorDuke/nested_formdata)\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/emperorDuke/nested_formdata)](https://github.com/emperorDuke/nested_formdata/releases)\n[![PyPI - License](https://img.shields.io/pypi/l/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n[![PyPI - Django Version](https://img.shields.io/pypi/djversions/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n[![PyPI](https://img.shields.io/pypi/v/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n\n\n# Overview\n\nSPA's, sometimes send nested form data or json as requests encoded by some javascript libraries like [json-form-data](https://github.com/hyperatom/json-form-data#readme) which can be difficult to handle due to the key naming conventions. This library helps to eliminate that difficulty, by parsing that nested requests into a more predictable python object that can be used by libraries like [drf_writable_nested](https://github.com/beda-software/drf-writable-nested#readme) or used directly in the code.\n\n# Installation\n\nIt is available via pypi:\n\n```\npip install drf_nested_forms\n```\n\n# Usage\n\nThe utiliy class can be used directly in any part of the code.\n\n```python\n\nfrom drf_nested_forms.utils import NestedForms\n\ndata = {\n    'item[attribute][0][user_type]': 'size',\n    'item[attribute][1][user_type]': '',\n    'item[verbose][]': '',\n    'item[variant][vendor_metric]': '[]',\n    'item[variant][metric_verbose_name]': 'Large',\n    'item[foo][baaz]': 'null',\n}\n\noptions = {\n    'allow_blank': True,\n    'allow_empty': False\n}\n```\n\n## Note\n\n`.is_nested()` should be called before accessing the `.data`\n\n```python\nform = NestedForms(data, **options)\nform.is_nested(raise_exception=True)\n```\n\nThe parsed result will look like below:\n\n```python\nprint(form.data)\n\ndata = {\n    'item': {\n        'attribute': [\n            {'user_type': 'size'},\n            {'user_type': ''}\n        ],\n        'verbose': [''],\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': 'Large'\n        },\n        'foo': { 'baaz': None }\n    }\n}\n```\n\n# DRF Integration\n\nThe parser is used with a djangorestframework view classes.\n\n## Parser classes supported:\n\n- `NestedMultiPartParser`: is a default DRF multipart parser that suppport parsing nested form data.\n- `NestedJSONParser`: is a default DRF JSONParser that support parsing nested json request.\n\nAdd the parser to your django settings file\n\n```python\n\n#...\n\nREST_FRAMEWORK = {\n    DEFAULT_PARSER_CLASSES = [\n        # nested parser are just default DRF parsers with extended\n        # functionalities to support nested\n\n        'drf_nested_forms.parsers.NestedMultiPartParser',\n        'drf_nested_forms.parsers.NestedJSONPartParser',\n        'rest_framework.parsers.FormParser',\n\n        # so this settings will work in respective of a nested request\n        # or not\n    ]\n}\n\n#...\n\n```\n\nTo change default settings of the parsers, add `OPTIONS` to `NESTED_FORM_PARSER` with the new settings to your django settings file\n\n```python\n#..\n\nNESTED_FORM_PARSER = {\n    'OPTIONS': {\n        'allow_empty': False,\n        'allow_blank': True\n    }\n}\n\n#...\n\n```\n\nThe parsers can also be used directly in a `rest_framework` view class\n\n```python\n\nfrom rest_framework.views import APIView\nfrom rest_framework.parsers import FormParser\nfrom rest_framework.response import Response\n\nfrom drf_nested_forms.parsers import NestedMultiPartParser, NestedJSONParser\n\nclass TestMultiPartParserView(APIView):\n    parser_classes = (NestedMultiPartParser, FormParser)\n\n    def post(self, request):\n        return Response(data=request.data, status=200)\n\n# or\n\nclass TestJSONParserView(APIView):\n    parser_classes = (NestedJSONParser, FormParser)\n\n    def post(self, request):\n        return Response(data=request.data, status=200)\n\n```\n\nFor example, a form or JSON data with nested params like below can be posted to any of the above drf view:\n\n```python\ndata = {\n    '[0][attribute]': 'true',\n    '[0][verbose][0]': 'bazz',\n    '[0][verbose][1]': 'foo',\n    '[0][variant][vendor_metric]': 'null',\n    '[0][variant][metric_verbose_name]': 'Large',\n    '[0][foo][baaz]': 'false',\n    '[1][attribute]': 'size',\n    '[1][verbose]': '[]',\n    '[1][variant][vendor_metric]': '{}',\n    '[1][variant][metric_verbose_name][foo][baaz][]': 'Large',\n    '[1][foo][baaz]': '',\n    '[1][logo]': '235'\n}\n```\n\nafter being parsed, the `request.data` will look like this:\n\n```python\nprint(request.data)\n\ndata = [\n    {\n        'attribute': True,\n        'verbose': ['bazz', 'foo'],\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': 'Large'\n        },\n        'foo': { 'baaz': False }\n    },\n    {\n        'attribute': 'size',\n        'verbose': None,\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': { 'foo': { 'baaz': ['Large'] } }\n        },\n        'foo': { 'baaz': '' },\n        'logo': 235\n    }\n]\n```\n\n# Options\n\n| Option      | Default | Description                           |\n| ----------- | ------- | ------------------------------------- |\n| allow_blank | `True`  | shows empty string `''` in the object |\n| allow_empty | `False` | shows empty `list` or `dict` object   |\n\n# Running Tests\n\nTo run the current test suite, execute the following from the root of the project:\n\n```\npython runtests.py\n```\n\n# Author\n\n@Copyright 2021, Duke Effiom\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://github.com/emperorDuke/nested_formdata/archive/v1.1.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/emperorDuke/nested_formdata",
    "keywords": "drf,nested form,html_formsdrf_nested_forms,restframework,nested json",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-nested-forms",
    "package_url": "https://pypi.org/project/drf-nested-forms/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-nested-forms/",
    "project_urls": {
      "Download": "http://github.com/emperorDuke/nested_formdata/archive/v1.1.4.tar.gz",
      "Homepage": "http://github.com/emperorDuke/nested_formdata"
    },
    "release_url": "https://pypi.org/project/drf-nested-forms/1.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library that parses nested json or form data to python object",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12020579,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e968ec8ad558b71654be4bc86b3c0fd969adbbd3b7878d55627bb1c7056d92b9",
        "md5": "bce4bff593797853b1977d6430475a9d",
        "sha256": "3ed83cfb8d331fdf75440676497c8632b79ed794f73f59535b85c6ea251e6e63"
      },
      "downloads": -1,
      "filename": "drf_nested_forms-1.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bce4bff593797853b1977d6430475a9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10266,
      "upload_time": "2021-06-08T12:04:09",
      "upload_time_iso_8601": "2021-06-08T12:04:09.551476Z",
      "url": "https://files.pythonhosted.org/packages/e9/68/ec8ad558b71654be4bc86b3c0fd969adbbd3b7878d55627bb1c7056d92b9/drf_nested_forms-1.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d258f96ca145a934844f9b20ae71715ab5f186fab5375057d884e0ec4bb474a",
        "md5": "6eb62451d68c980e2cc8a45adfc87713",
        "sha256": "acb16c6c241c4ac2783f5318f35bb35aa2bdf1cb6b1c3f5ea503be6f19018f2e"
      },
      "downloads": -1,
      "filename": "drf_nested_forms-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6eb62451d68c980e2cc8a45adfc87713",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11308,
      "upload_time": "2021-06-08T12:04:16",
      "upload_time_iso_8601": "2021-06-08T12:04:16.546661Z",
      "url": "https://files.pythonhosted.org/packages/7d/25/8f96ca145a934844f9b20ae71715ab5f186fab5375057d884e0ec4bb474a/drf_nested_forms-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}