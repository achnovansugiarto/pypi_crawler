{
  "info": {
    "author": "hirokiky",
    "author_email": "hirokiky@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "=================\ndjango-reportmail\n=================\n\nDjango library to send 'report' mail.\n\nAlmost django management commands used as night batch processing,\nand then, administrators will want to know the result of it as mail.\n\nAt a glance\n===========\n\nConsider a case which is for processing lines of csv by django's management command.\nAnd then you want to know the result of the command by mail.\n\nJust thing you should do is decorating `handle` method by `apply_reporter` method:\n\n.. code-block:: python\n\n    import csv\n    from django.core.management.base import BaseCommand\n\n    from reportmail.command import apply_reporter\n\n    class Command(BaseCommand):\n        @apply_reporter(\"Title\")\n        def handle(self, reporter, filepath, *args, **options):\n            for i, l in enumerate(csv.DictReader(open(filepath))):\n                reporter.append('Line {}: processed {}'.format(i+1, l))\n\n\nThen, when the command finish, you'll get a admin mail like this::\n\n    Subject:\n        Title\n    Body:\n        Report of someapp.management.commands.some_of_your_command\n        args: path/to/somecsv.csv\n        options: settings=None,pythonpath=None,traceback=None,verbosity=1,\n\n        result:\n        Line1: processed {'somefield': 'somevalue0'}\n        Line2: processed {'somefield': 'somevalue1'}\n        Line3: processed {'somefield': 'somevalue2'}\n        Line4: processed {'somefield': 'somevalue3'}\n        ...\n\nIf you like django-reportmail, please refer `the documentation <http://django-reportmail.readthedocs.org/>`_.\nYou can learn about django-reportmail enough to use it on your work.\n\nResources\n=========\n\n* `Documentation <http://django-reportmail.readthedocs.org/>`_\n* `Github <https://github.com/hirokiky/django-reportmail/>`_\n* `PyPI <http://pypi.python.org/pypi/django-reportmail>`_\n\n\nChanges\n=======\n\n1.2.4 (2014-11-29)\n------------------\n\n#5 Officially supporting for Python3.4 and Django1.7.\n\n1.2.3 (2014-06-20)\n------------------\n\n#3 Add manager_mail_committer.\n\n1.2.2 (2014-06-15)\n------------------\n\n#2 Improved `apply_reporter` to get a committer function.\n\n1.2.1 (2014-06-14)\n------------------\n\nCleaned up the default template of report mail.\n\n1.2 (2014-06-07)\n----------------\n\n* Fixed wrong function names of committer (comitter => committer)\n\n  * `reportmail.reporter.console_comitter` is now renamed as `reportmail.reporter.console_committer`\n  * `reportmail.reporter.admin_mail_comitter` is now renamed as `reportmail.reporter.admin_mail_committer`\n\n1.1 (2014-05-28)\n----------------\n\n* Fixed the wrong attribute name of Reporter (comitter => committer)\n\n1.0 (2014-05-28)\n----------------\n\nInitial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hirokiky/django-reportmail",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-reportmail",
    "package_url": "https://pypi.org/project/django-reportmail/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-reportmail/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hirokiky/django-reportmail"
    },
    "release_url": "https://pypi.org/project/django-reportmail/1.2.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "django library to render and send report mail.",
    "version": "1.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1743340,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "127e6aa64be525d5518038a79a6b9a79a73d9c29c32f00fc0894bb4297bfd196",
        "md5": "60e28657dbe50afcf934e162beb36947",
        "sha256": "fda06a229f6e8036e89dcbb5f6c7fb22d6ba93fdc1d99d5d1c5646f0442d4cf6"
      },
      "downloads": -1,
      "filename": "django-reportmail-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "60e28657dbe50afcf934e162beb36947",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6055,
      "upload_time": "2014-11-29T01:59:58",
      "upload_time_iso_8601": "2014-11-29T01:59:58.102146Z",
      "url": "https://files.pythonhosted.org/packages/12/7e/6aa64be525d5518038a79a6b9a79a73d9c29c32f00fc0894bb4297bfd196/django-reportmail-1.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}