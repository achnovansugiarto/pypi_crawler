{
  "info": {
    "author": "hirokiky",
    "author_email": "hirokiky@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "=================\r\ndjango-reportmail\r\n=================\r\n\r\nDjango library to send 'report' mail.\r\n\r\nAlmost django management commands used as night batch processing,\r\nand then, administrators will want to know the result of it as mail.\r\n\r\nAt a glance\r\n===========\r\n\r\nConsider a case which is for processing lines of csv by django's management command.\r\nAnd then you want to know the result of the command by mail.\r\n\r\nJust thing you should do is decorating `handle` method by `apply_reporter` method:\r\n\r\n.. code-block:: python\r\n\r\n    import csv\r\n    from django.core.management.base import BaseCommand\r\n\r\n    from reportmail.command import apply_reporter\r\n\r\n    class Command(BaseCommand):\r\n        @apply_reporter(\"Title\")\r\n        def handle(self, reporter, filepath, *args, **options):\r\n            for i, l in enumerate(csv.DictReader(open(filepath))):\r\n                reporter.append('Line {}: processed {}'.format(i+1, l))\r\n\r\n\r\nThen, when the command finish, you'll get a admin mail like this::\r\n\r\n    Subject:\r\n        Title\r\n    Body:\r\n        Report of someapp.management.commands.some_of_your_command\r\n        args: path/to/somecsv.csv\r\n        options: settings=None,pythonpath=None,traceback=None,verbosity=1,\r\n\r\n        result:\r\n        Line1: processed {'somefield': 'somevalue0'}\r\n        Line2: processed {'somefield': 'somevalue1'}\r\n        Line3: processed {'somefield': 'somevalue2'}\r\n        Line4: processed {'somefield': 'somevalue3'}\r\n        ...\r\n\r\nIf you like django-reportmail, please refer `the documentation <http://django-reportmail.readthedocs.org/>`_.\r\nYou can learn about django-reportmail enough to use it on your work.\r\n\r\nResources\r\n=========\r\n\r\n* `Documentation <http://django-reportmail.readthedocs.org/>`_\r\n* `Github <https://github.com/hirokiky/django-reportmail/>`_\r\n* `PyPI <http://pypi.python.org/pypi/django-reportmail>`_\r\n\r\n\r\nChanges\r\n=======\r\n\r\n1.3 (2015-08-20)\r\n----------------\r\n\r\n#6 Added `.abort()` feature for Reporter.\r\n\r\n1.2.4 (2014-11-29)\r\n------------------\r\n\r\n#5 Officially supporting for Python3.4 and Django1.7.\r\n\r\n1.2.3 (2014-06-20)\r\n------------------\r\n\r\n#3 Add manager_mail_committer.\r\n\r\n1.2.2 (2014-06-15)\r\n------------------\r\n\r\n#2 Improved `apply_reporter` to get a committer function.\r\n\r\n1.2.1 (2014-06-14)\r\n------------------\r\n\r\nCleaned up the default template of report mail.\r\n\r\n1.2 (2014-06-07)\r\n----------------\r\n\r\n* Fixed wrong function names of committer (comitter => committer)\r\n\r\n  * `reportmail.reporter.console_comitter` is now renamed as `reportmail.reporter.console_committer`\r\n  * `reportmail.reporter.admin_mail_comitter` is now renamed as `reportmail.reporter.admin_mail_committer`\r\n\r\n1.1 (2014-05-28)\r\n----------------\r\n\r\n* Fixed the wrong attribute name of Reporter (comitter => committer)\r\n\r\n1.0 (2014-05-28)\r\n----------------\r\n\r\nInitial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hirokiky/django-reportmail",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-reportmail",
    "package_url": "https://pypi.org/project/django-reportmail/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-reportmail/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hirokiky/django-reportmail"
    },
    "release_url": "https://pypi.org/project/django-reportmail/1.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "django library to render and send report mail.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1743340,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "456e8b5819cdaf43460598eb81b1a9b970afb5c83920c50e7bc2cfbcba1dad41",
        "md5": "7f243588a1d0afa354a8ad5db993af9c",
        "sha256": "90e905e8fe8c108d956d92ad6b7b293a24014f5e2453955cd4fcbd7ad591e5c8"
      },
      "downloads": -1,
      "filename": "django-reportmail-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7f243588a1d0afa354a8ad5db993af9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6261,
      "upload_time": "2015-08-20T12:46:43",
      "upload_time_iso_8601": "2015-08-20T12:46:43.949878Z",
      "url": "https://files.pythonhosted.org/packages/45/6e/8b5819cdaf43460598eb81b1a9b970afb5c83920c50e7bc2cfbcba1dad41/django-reportmail-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}