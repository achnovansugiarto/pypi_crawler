{
  "info": {
    "author": "Sowren Sen",
    "author_email": "sowrensen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Version Control",
      "Topic :: System :: Installation/Setup",
      "Topic :: System :: Shells",
      "Topic :: Terminals"
    ],
    "description": "# LordCommander\n\nLordCommander is a command line program to run shell commands recursively through predefined directories.\n\nSee full [changelog here](changelog.md).\n\n### Contents\n- [Dependencies](#dependencies)\n- [Installation](#installation)\n- [Upgrading from v4.x to v5.x](#upgrading-from-v4x-to-v5x)\n- [Usage](#usage)\n    - [Project handling](#project-handling)\n        - [See project list](#see-project-list)\n        - [Add new project](#add-new-project)\n        - [Set/Change active project](#set-or-change-active-project)\n        - [Remove a project](#remove-a-project)\n        - [Rename a project](#rename-a-project)\n    - [Directory/Instance handling](#directoryinstance-handling)\n        - [See directory list](#see-directory-list)\n        - [Adding directories](#adding-directories)\n        - [Removing directories](#removing-directories)\n    - [Running commands](#running-commands)\n        - [Throttled execution](#throttled-execution)\n        - [Exclude directories from execution](#exclude-directoryinstance-from-execution)\n        - [Run only for specified directories](#run-only-for-specified-directories)\n    - [Utilities](#utilities)\n        - [Searching for a directory](#searching-for-a-directory)\n        - [See total number of directories](#seeing-total-number-of-directories)\n        - [Dumping and restoring data](#dumping-and-restoring-data-using-json-file)\n\n\nDependencies\n-----\n\n- ^Python 3.7.5\n- [Python Fire](https://github.com/google/python-fire)\n- [Colr](https://github.com/welbornprod/colr)\n\n\nInstallation\n-----\n\nRun following command to install LordCommander:\n\n```\npip install lordcommander\n```\n\nIt will be available as `lc` in your environment, and you can run commands like:\n\n```bash\nlc <command> <args> <flags>\n```\n\nUpgrading from v4.x to v5.x\n-----\n\nSince version 5.x  LordCommander will be a python package instead of individual project and the data directory is changed as a standard package should behave. Here is how you should upgrade to 5.x:\n\nFirst, take a backup of your data\n\n```bash\n./lc utils dump ~/\n```\n\nIt would create a `lcdb_dump.json` file in your home directory. After that, remove existing `LordCommander` folder and install it using pip. Henceforth, you can restore data using the backup file just as before. The commands remain same.\n\nUsage\n-----\n\n### How to run commands using LordCommander?\n\n1. Add some projects to LordCommander.\n2. Set a project as active.\n3. Add some instances of that project.\n4. Run a command.\n\nYou can append `--help` after each command always to see the manual.\n\n### Project Handling\n\n#### See project list\n\nTo see added projects to LordCommander, run:\n\n```\nlc proj view\n```\n\nThe active project will be check marked.\n\n#### Add new project\n\nTo add a new project, you have to specify the path of the project directory. Usually the last part of the path is taken as the project name but you can specify a custom name for the project using the `--name` flag. *Remember, this is not the location of individual project, i.e. directories where the command will run are inside this location.* Run:\n\n```\nlc proj add /home/sowrensen/test/project-a --name=customname\n```\n\nThis will create the following data structure in the shelve module:\n\n```\n'customname': {\n    'root': '/home/sowrensen/test/project-a',\n    'instances': []\n}\n```\n\nWithout the `--name` flag, it will be,\n\n```\n'project-a': {\n    'root': '/home/sowrensen/test/project-a',\n    'instances': []\n}\n``` \n\nLater in the `instances` list, you will add your project instances using `dirs add` command.\n\n#### Set or change active project\n\nTo set or change active project, you must have at least one project. After adding projects, run:\n\n```\nlc proj active project-a\n```\n\n#### Remove a project\n\nTo remove a project from LordCommander, run:\n\n```\nlc proj clear project-a\n```\n\nThe program will ask for your confirmation, if you allow it will remove entire project along with it's added instances. If a project is set as active during removal, the `active` key will set to null and you have to set an active project for further operations.\n\n#### Rename a project\n\nTo rename a project, run:\n\n```\nlc proj rename oldname newname\n```\n\nIf the project you renaming are the one currently marked as active, it will automatically update the name of the active project.\n\n-----\n\n### Directory/Instance Handling\n\n#### See directory list\n\n```\nlc dirs view\n```\n\nThis will show all saved directory names with the index as their insertion order. To sort directory names alphabetically, append `sort`  or `--sort` after list.\n\n```\nlc dirs view [sort|--sort]\n```\n\n#### Adding directories\n\n```\nlc dirs add [dir1 dir2 dir3...]\n```\n\nAll the directory names after `add` keyword will be appended to the directory list.\n\n#### Removing directories\n\n```\nlc dirs clear [dir1 dir2 dir3...]\n```\n\nAdd desired directory names after `clear` to remove them from list. However, you can also clear the entire list of directories if you specify `--full` after `clear`.\n\n```\nlc dirs clear --full\n```\n\nIt will ask for your confirmation, if you allow, it will remove the entire list of directories.\n\n-----\n\n### Running Commands\n\nRunning a command throughout the saved directories is easy. Here's an example:\n\n```\nlc run pwd\n```\n\nThat's it! It will recursively run for each saved directories and show the output.  Afterwards, you will see the number of successful and failed runs. \n\n> **Note:** If your command is more than one word, you have to wrap it around with single or double quote. An example can be `lc run 'git status'`. \n\n#### Throttled execution\n\nNow, if you have a huge list of directories and you don't want to run the command altogether,  you can slice them by indices (I assume that you're familiar with how array or list index works). If you run `lc run --help` you will see two flags `--li` and `--ui` respectively for **lower index** and **upper index**. So if you decide to run a command only to first 50 directories, you can simply specify `--li=0` and `--ui=50`. Or even simpler, just mention `--ui=50`, it will run throughout index 0 to index 49 anyway.\n\n```\nlc run <command> --li=0 --ui=50\n```\n\nor,\n\n```\nlc run <command> 0 50\n```\n\nor,\n\n```\nlc run <command> --ui=50\n```\n\nSo for running the rest? I bet you already figured that out,\n\n```\nlc run <command> --li=50\n```\n\nor,\n```\nlc run <command> 50\n```\n\nYes, you don't have to remember or know how any items are in your list. Just tell the program to run it from 50 and it will start right there and won't stop until it reaches the end of the list. \n\n#### Exclude directory/instance from execution\n\nTo exclude one or more particular directories/instances from execution, you can specify indices with `--ex` flag. e.g.:\n\n```\nlc run <command> --ex=3,8\n```\n\nThus, directories in index 3 and 8 will be excluded from the list during execution.\n\n#### Run only for specified directories\n\nLike exclusion, you only can run a command for desired instances. Add `--inc` flag with indices for that, e.g.:\n\n```\nlc run <command> --inc=3,8\n``` \n\nThe command will run for index 3 and 8 only. \n\n> **NOTE**: The `--ex` and the `--inc` flag takes precedence over `li` and `ui`. That is to say, if you use `--ex` with `li` and `ui`, indices specified will be _excluded_. And in case of `--inc`, _only for instances within the indices_ the command will run. Also, you should not use `--ex` and `--inc` together.   \n\n-----\n\n### Utilities \n\nFrom version 3.0, a utility class has been added to run some handy tasks. Right now there are four commands, more will be introduced over time.\n\n#### Searching for a directory\n\nForgot if a directory name has already been included or not? Just tell the program to look for it, it will tell you if it is there or not.\n\n```\nlc utils search <directory_name>\n```\n\n> **Note**: It is case sensitive, so if you have a directory named `ABC` and your search string is `abc`, you will get a negative result.\n\n#### Seeing total number of directories\n\nIf you're wondering how many saved directories do you have, just tell LordCommander to count them for you:\n\n```\nlc utils total\n```\n\n#### Dumping and restoring data using JSON file\n\nWith version 4.0, you can dump and restore data of LordCommander. To dump existing data in the shelve module, run:\n\n```\nlc utils dump /home/sowrensen\n```\n\nThe third argument is the location where you want to save the file. There you will find a file named `lcdb_dump.json`. You can use that file later to restore data into shelve module. To restore from a JSON file, run following command with the file path as third argument.\n\n>**Note:** Restoring data will replace existing data. It is a good idea to dump before you restore.\n\n```\nlc utils restore /home/sowrensen/lcdb_dump.json\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sowrensen/LordCommander",
    "keywords": "shell,commands,directory,projects,instances,linux,sever,devops",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lordcommander",
    "package_url": "https://pypi.org/project/lordcommander/",
    "platform": "",
    "project_url": "https://pypi.org/project/lordcommander/",
    "project_urls": {
      "Homepage": "https://github.com/sowrensen/LordCommander"
    },
    "release_url": "https://pypi.org/project/lordcommander/5.0.0/",
    "requires_dist": [
      "colr (>=0.9)",
      "fire (>=0.2)",
      "appdirs (>=1.4)"
    ],
    "requires_python": ">=3.7",
    "summary": "Run shell commands recursively throughout the predefined directories",
    "version": "5.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8340348,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a48a16147d7b1b111e39026c7213cafefa6abb444e717c7d137ca0334e57f98",
        "md5": "0e7e27ffb2c6d1759c5d2b36f19f86f1",
        "sha256": "7f623a315c8171035c5b09dc6b63476e2f6a86bdbe993a8f2e3ecf8fae1cfbe4"
      },
      "downloads": -1,
      "filename": "lordcommander-5.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e7e27ffb2c6d1759c5d2b36f19f86f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24850,
      "upload_time": "2020-10-04T12:46:38",
      "upload_time_iso_8601": "2020-10-04T12:46:38.505776Z",
      "url": "https://files.pythonhosted.org/packages/8a/48/a16147d7b1b111e39026c7213cafefa6abb444e717c7d137ca0334e57f98/lordcommander-5.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c590461f65803657ce5ff11b87b89fcceb0f253a6ddcdf3975db8332c4305417",
        "md5": "38fd0d2887da4d72a0a6759b33f17c50",
        "sha256": "2efed741233613b7825c2e95158f08f95c3413c6eec890ebc895c203f0350541"
      },
      "downloads": -1,
      "filename": "lordcommander-5.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "38fd0d2887da4d72a0a6759b33f17c50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 27506,
      "upload_time": "2020-10-04T12:46:41",
      "upload_time_iso_8601": "2020-10-04T12:46:41.459648Z",
      "url": "https://files.pythonhosted.org/packages/c5/90/461f65803657ce5ff11b87b89fcceb0f253a6ddcdf3975db8332c4305417/lordcommander-5.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}