{
  "info": {
    "author": "ZhangDun",
    "author_email": "dunnzhang0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "DomainThesaurus\n================\n\nIntroduction\n------------\n\n**DomainThesaurus** is a python package offering a technique of extracting domain-specific\nthesaurus which is commonly used in *Natural Language Processing*. Here is one item of generated\nthesaurus::\n\n    { \"internet explorer\":\n    {\"abbreviation\":[\"ie\"],\n    \"synonym\":[\"internet explorers\", \"internet explorere\", \"internetexplorer\"],\n    \"other\":[\"firefox\",\"chrome\",\"opera\"]}\n    }\n\nExcept for domain-specific thesaurus, the package also provides several useful modules.\nFor example, **DomainTerm** for extracting domain-specific term and **WordDiscrimination**\nfor discriminate words (e.g. abbreviation, synonyms).\n\nDomain-Specific term\n::::::::::::::::::::::::::::::\n\n**DomainTerm** can automatically extract domain-specific terms from domain corpus.\nFor example, *Javascript* in the domain of  computer science and technology and *karush kuhn tucker* in\ndomain of mathematics.\n\nAbbreviations and Synonyms\n:::::::::::::::::::::::::::\n\nThe module **WordDiscrimination** can divide semantic-related words into different types.\nThe default module can recognize semantic-related words as `abbreviation` and `synonym`. Note that,\nin our module, the `synonym` means that two words are semantic-related word and they are morphologically similar.\nFor example, *ie* is the abbreviation of *internet explorer* and *javascripts* is\nthe synonym of *javascript*.\n\nInstallation\n------------\n\n**DomainThesaurus** is tested to work under `Python 3.x`. Please use it in `Python 3.x`.\nWe will try to support *Python 2.x*.\n\nDependency requirements:\n\n* gensim(>=3.6.0)\n* networkx(>=2.1)\n\n**DomainThesaurus** is currently available on the PyPi's repository and you can\ninstall it via `pip`::\n\n  pip install DomainThesaurus\n\nIf you prefer, you can clone it and run the setup.py file. Use the following\ncommand to get a copy from GitHub::\n\n git clone https://github.com/DunZhang/DomainSpecificThesaurus.git\n\n\nUsage\n----------\n\nA simple example::\n    >>> dst = DomainThesaurus(domain_specific_corpus_path=\"your domain specific corpus path\",\n    >>>                       general_vocab_path=\"your general vocab path\",\n    >>>                       outputDir=\"path of output\")\n    >>> # extract domain thesauruss\n    >>> your_thesaurus = dst.extract()\n\nIf you don't have any datasets, you can copy and run this code:\nhttps://github.com/DunZhang/DomainSpecificThesaurus/blob/master/docs/notebooks/domain_thesaurus.ipynb .\nThis code will automatically download datasets for you.\nThe code design is flexible, you can replace the default `function class` with your own `function class` to get better\nperformance.\nYou can find more usage in https://github.com/DunZhang/DomainSpecificThesaurus/blob/master/docs/notebooks\n\nAcknowledgements\n-----------------\n\nIn this project, we use `Levenshtein Distance` and `GoogleDriveDownloader` from https://pypi.org/project/jellyfish/\nand  https://github.com/ndrplz/google-drive-downloader. Thanks for their code.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DunZhang/DomainSpecificThesaurus",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DomainThesaurus",
    "package_url": "https://pypi.org/project/DomainThesaurus/",
    "platform": "",
    "project_url": "https://pypi.org/project/DomainThesaurus/",
    "project_urls": {
      "Homepage": "https://github.com/DunZhang/DomainSpecificThesaurus"
    },
    "release_url": "https://pypi.org/project/DomainThesaurus/1.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "extract domain thesaurus automatically",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6481350,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e301020503252e4a352385ed9fc02fa41e7cffc1d45dafcd4b0af2642dd5125",
        "md5": "6eac48d195e021f0115e5edcd76725f3",
        "sha256": "5bc3c534b48761ed5eb0deb46743da90688405018636eb08af7cebf0a130e90a"
      },
      "downloads": -1,
      "filename": "DomainThesaurus-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "6eac48d195e021f0115e5edcd76725f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18437,
      "upload_time": "2019-04-11T12:37:03",
      "upload_time_iso_8601": "2019-04-11T12:37:03.942900Z",
      "url": "https://files.pythonhosted.org/packages/5e/30/1020503252e4a352385ed9fc02fa41e7cffc1d45dafcd4b0af2642dd5125/DomainThesaurus-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}