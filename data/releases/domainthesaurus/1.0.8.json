{
  "info": {
    "author": "ZhangDun",
    "author_email": "dunnzhang0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "domain-thesaurus\n================\nIntroduction\n------------\n\n**domain-thesaurus** is a python package offering a techniques of extracting domain-specific\nthesaurus which is commonly used in *Natural Language Processing*.\n\nInstallation\n------------\n\n**domain-thesaurus** is tested to work under *Python 3.x*.\nWe will try to support *Python 2.x*.\n\nDependency requirements:\n\n* gensim(>=3.6.0)\n* networkx(>=2.1)\n\n**domain-thesaurus** is currently available on the PyPi's repository and you can\ninstall it via `pip`::\n\n  pip install DomainThesaurus\n\nIf you prefer, you can clone it and run the setup.py file. Use the following\ncommand to get a copy from GitHub::\n\n git clone https://github.com/DunZhang/DomainSpecificThesaurus.git\n\n\nUsage\n----------\n\nA simple example::\n    >>> dst = DomainThesaurus(domain_specific_corpus_path=\"your domain specific corpus path\",\n    >>>                       general_corpus_path=\"your general corpus path\",\n    >>>                       outputDir=\"path of output\",\n    >>>                       filePaths=None,\n    >>>                       phrase_detection_domain=\"default\",\n    >>>                       phrase_detection_general=\"default\",\n    >>>                       domain_specific_term=\"default\",\n    >>>                       semantic_related_words=\"default\",\n    >>>                       word_classification=\"default\",\n    >>>                       synonym_group=\"default\")\n    >>> # extract domain thesauruss\n    >>> dst.extract()\n\nThe code design is flexible, you can replace the default `function class` with your own `function class` to get a better\nperformance.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DunZhang/DomainSpecificThesaurus",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DomainThesaurus",
    "package_url": "https://pypi.org/project/DomainThesaurus/",
    "platform": "",
    "project_url": "https://pypi.org/project/DomainThesaurus/",
    "project_urls": {
      "Homepage": "https://github.com/DunZhang/DomainSpecificThesaurus"
    },
    "release_url": "https://pypi.org/project/DomainThesaurus/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "extract domain thesaurus automatically",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6481350,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0d7968100b2e775dc308627949b6c859c6f381993433ac96ae0c8ad129d9a4c",
        "md5": "77f430ddd55094e361d6d13dab9789a5",
        "sha256": "8450c215c8d5cd696509d53a548d7a7b979511fdf980db7c840ba8b4083567b0"
      },
      "downloads": -1,
      "filename": "DomainThesaurus-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "77f430ddd55094e361d6d13dab9789a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16212,
      "upload_time": "2019-01-28T18:44:37",
      "upload_time_iso_8601": "2019-01-28T18:44:37.321662Z",
      "url": "https://files.pythonhosted.org/packages/a0/d7/968100b2e775dc308627949b6c859c6f381993433ac96ae0c8ad129d9a4c/DomainThesaurus-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}