{
  "info": {
    "author": "Anthony Aylward, Joshua Chiou, Mei-Lin Okino",
    "author_email": "aaylward@eng.ucsd.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# luciferase\nTool for plotting luciferase reporter data. Thanks due to Joshua Chiou and Mei-lin Okino for inspiration and contributions.\n\n## Installation\n```sh\npip3 install luciferase\n```\nor\n```sh\npip3 install --user luciferase\n```\n\n## Command-line interface for barplots\n\n### Barplots of enhancer activity\n\nA command-line tool called `luciferase-barplot` for creating bar plots is\nincluded. After installing `luciferase`, you can use it like this:\n```sh\nluciferase-barplot example.json example.pdf\nluciferase-barplot example.csv example.png\nluciferase-barplot example.tsv example.svg\nluciferase-barplot example.xls example.pdf\nluciferase-barplot example.xlsx example.png\n```\n\nJSON, CSV, TSV, or Excel files may be used as inputs, and output\ncan be written in PDF, PNG, or SVG.\n\nSee also the help message:\n```sh\nluciferase-barplot -h\n```\n\nExamples of luciferase reporter data in JSON format:\n```json\n{\n  \"Non-risk, Fwd\": [8.354, 12.725, 8.506],\n  \"Risk, Fwd\": [5.078, 5.038, 5.661],\n  \"Non-risk, Rev\": [9.564, 9.692, 12.622],\n  \"Risk, Rev\": [10.777, 11.389, 10.598],\n  \"Empty\": [1.042, 0.92, 1.042]\n}\n```\n```json\n{\n  \"Alt, MIN6\": [5.47, 7.17, 6.15],\n  \"Ref, MIN6\": [3.16, 3.04, 4.34],\n  \"Empty, MIN6\": [1.07, 0.83, 0.76],\n  \"Alt, ALPHA-TC6\": [2.50, 3.47, 3.33],\n  \"Ref, ALPHA-TC6\": [2.01, 1.96, 2.31],\n  \"Empty, ALPHA-TC6\": [1.042, 0.92, 1.042]\n}\n```\nExamples of luciferase reporter data in TSV format:\n```\nNon-risk, Fwd\tRisk, Fwd\tNon-risk, Rev\tRisk, Rev\tEmpty\n8.354\t5.078\t9.564\t10.777\t1.042\n12.725\t5.038\t9.692\t11.389\t0.92\n8.506\t5.661\t12.622\t10.598\t1.042\n```\n```\nRef, untreated\tAlt, untreated\tEmpty, untreated\tRef, dex\tAlt, dex\tEmpty, dex\n33.2\t19.7\t1.0\t149.4\t44.6\t1.1\n30.3\t16.2\t1.0\t99.7\t37.6\t1.0\n33.3\t18.3\t1.0\t124.5\t37.7\t0.9\n```\n\nSignificance indicators will be written above the bars: `***` if p<0.001,\n`**` if p<0.01, `*` if p<0.05, `ns` otherwise.\n\nHere are the resulting plots:\n\n<img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/example-5.png\" width=\"400\"/><img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/example-6.png\" width=\"400\"/>\n\n### Barplots of allelic ratio\n\nA second tool called `luciferase-ratioplot` takes the same input data and\nproduces a comparative plot of allelic ratios:\n\n```sh\nluciferase-ratioplot --xlab control dexamethasone --ylab \"Ref:Alt ratio\" --title Default ratio.json ratio.png\nluciferase-ratioplot --xlab control dexamethasone --ylab \"Alt:Ref ratio\" --title Inverted --invert ratio.json ratio.png\n```\n\nThe resulting plot shows the estimated allelic ratio of enhancer activity\nwith confidence intervals (95% by default). Here is an example input dataset\nand plot:\n\nJSON:\n```json\n{\n  \"Ref, untreated\": [33.2, 30.3, 33.3],\n  \"Alt, untreated\": [19.7, 16.2, 18.3],\n  \"Empty, untreated\": [1.0, 1.0, 1.0],\n  \"Ref, dex\": [149.4, 99.7, 124.5],\n  \"Alt, dex\": [44.6, 37.6, 37.7],\n  \"Empty, dex\": [1.1, 1.0, 0.9]\n}\n```\nTSV:\n```\nAlt, dex\tRef, dex\tEmpty, dex\tAlt, untreated\tRef, untreated\tEmpty, untreated\n44.6\t149.4\t1.1\t19.7\t33.2\t1.0\n37.6\t99.7\t1.0\t16.2\t30.3\t1.0\n37.7\t124.5\t0.9\t18.3\t33.3\t1.0\n```\n\n<img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/ratio.png\" width=\"200\"/><img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/ratio-invert.png\" width=\"200\"/>\n\n## Meta-analysis\n\nFor this section, we'll use another included command called\n`luciferase-swarmplot`. It functions exactly like `luciferase-barplot` except\nthat individual data points will be plotted over the bars.\n\nIt may be that we have performed two or more experiments\n(from separate minipreps) and wish to meta-analyze the results. As an example,\nlet's consider the results of two identical experiments on a regulatory\nvariant at the _SIX3_ locus: [SIX3-MP0](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-mp0.json) and [SIX3-MP1](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-mp1.json). First we'll plot both datasets separately:\n```sh\nluciferase-swarmplot six3-mp0.json six3-mp0.png --light-colors '#DECBE4' '#FED9A6' '#FBB4AE' --dark-colors '#984EA3' '#FF7F00' '#E41A1C' --title 'SIX3-MP0'\nluciferase-swarmplot six3-mp1.json six3-mp1.png --light-colors '#DECBE4' '#FED9A6' '#FBB4AE' --dark-colors '#984EA3' '#FF7F00' '#E41A1C' --title 'SIX3-MP1'\n```\n\n<img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/six3-mp0.png\" width=\"400\"/><img src=\"https://github.com/anthony-aylward/luciferase/raw/master/example/six3-mp1.png\" width=\"400\"/>\n\nWe can see that the results are fairly consistent in character, but checking\nthe y-axis tells us that they are on different scales. Intuitively, we might\nconclude from these results that there are allelic effects under all three\nconditions. Ideally though, we would like to use all of the data at once for\none plot to get the most accurate conclusions about allelic effects.\n\nWe might simply combine the data into one dataset, (as [here](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-meta-nobatch.json)) and plot it:\n```sh\nluciferase-swarmplot six3-meta-nobatch.json six3-meta-nobatch.png --light-colors '#DECBE4' '#FED9A6' '#FBB4AE' --dark-colors '#984EA3' '#FF7F00' '#E41A1C'\n```\n\n![meta-analysis without batch](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-meta-nobatch.png)\n\nThe bar heights look reasonable, and the allelic effects appear clear from\nlooking at them, but all of the hypothesis tests returned non-significant\nresults. What gives?\n\nThe answer is that combining data from experiments with different scales\nbreaks the assumptions of the significance test (a t-test). To meta-analyze\nthese data in a useful way, we first need to re-normalize the two experiments\nto put both of them on the same scale. `luciferase-barplot` and\n`luciferase-swarmplot` will re-normalize the data automatically if the dataset\nincludes an additional entry (\"Batch\") indicating the batch of each data point,\nas in this example:\n[SIX3-META](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-meta.json).\n```json\n{\n  \"Alt, untreated\": [19.7, 16.2, 18.3, 6.5, 8.0, 4.4],\n  \"Ref, untreated\": [33.2, 30.3, 33.3, 8.4, 13.6, 17.1],\n  \"Empty, untreated\": [1.0, 1.0, 1.0, 1.1, 1.0, 0.9],\n  \"Alt, hi_cyt_noTNFA\": [11.0, 8.8, 10.1, 3.2, 3.7, 3.3],\n  \"Ref, hi_cyt_noTNFA\": [17.1, 16.7, 18.8, 7.6, 6.7, 5.5],\n  \"Empty, hi_cyt_noTNFA\": [1.1, 0.9, 1.0, 1.1, 0.9, 1.0],\n  \"Alt, hi_cyt\": [10.8, 10.9, 9.1, 3.1, 2.7, 4.0],\n  \"Ref, hi_cyt\": [17.8, 16.1, 18.0, 7.7, 7.0, 7.1],\n  \"Empty, hi_cyt\": [1.0, 1.0, 1.0, 1.0, 1.0, 1.1],\n  \"Batch\": [0, 0, 0, 1, 1, 1]\n}\n```\n\nHere is what the results look like when they're re-normalized to correct for\nbatch\n```sh\nluciferase-swarmplot six3-meta.json six3-meta.png --light-colors '#DECBE4' '#FED9A6' '#FBB4AE' --dark-colors '#984EA3' '#FF7F00' '#E41A1C' --title 'SIX3-META'\n```\n\n![meta-analysis with batch](https://github.com/anthony-aylward/luciferase/raw/master/example/six3-meta.png)\n\nSee a more detailed explanation of the normalization procedure [here](https://github.com/anthony-aylward/luciferase/blob/master/example/meta-analysis.pdf)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anthony-aylward/luciferase.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "luciferase",
    "package_url": "https://pypi.org/project/luciferase/",
    "platform": "",
    "project_url": "https://pypi.org/project/luciferase/",
    "project_urls": {
      "Homepage": "https://github.com/anthony-aylward/luciferase.git"
    },
    "release_url": "https://pypi.org/project/luciferase/2.2.0/",
    "requires_dist": [
      "estimateratio",
      "matplotlib",
      "pandas",
      "scipy",
      "seaborn"
    ],
    "requires_python": "",
    "summary": "Helper functions for luciferase data",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15425035,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d624a94372bf83b363dab83dddddad8f58668152757ba4468134e25e959ec1bf",
        "md5": "564941d42e411d8591b915adbbf230e7",
        "sha256": "9f836d3844b6f4d0e449895f94f75ee571e65aa1d77e6928762f7caf8272e47e"
      },
      "downloads": -1,
      "filename": "luciferase-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "564941d42e411d8591b915adbbf230e7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13626,
      "upload_time": "2020-02-04T23:16:12",
      "upload_time_iso_8601": "2020-02-04T23:16:12.939832Z",
      "url": "https://files.pythonhosted.org/packages/d6/24/a94372bf83b363dab83dddddad8f58668152757ba4468134e25e959ec1bf/luciferase-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e4dc357be8354c29793018a928e5858be93ecd20ff57c1cfa79d2bd0cd1ecb3",
        "md5": "5b0efe6c7e45c120181dbac2c5d654f9",
        "sha256": "c3dac57caef5211631d2f909aa8538954dc4465e3b3af5415c17db6456e026e2"
      },
      "downloads": -1,
      "filename": "luciferase-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5b0efe6c7e45c120181dbac2c5d654f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11131,
      "upload_time": "2020-02-04T23:16:15",
      "upload_time_iso_8601": "2020-02-04T23:16:15.667519Z",
      "url": "https://files.pythonhosted.org/packages/5e/4d/c357be8354c29793018a928e5858be93ecd20ff57c1cfa79d2bd0cd1ecb3/luciferase-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}