{
  "info": {
    "author": "F. McNab, P. W. Ball",
    "author_email": "mcnab@gfz-potsdam.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![DOI](https://zenodo.org/badge/430704582.svg)](https://zenodo.org/badge/latestdoi/430704582)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fmcnab/meltPT/master)\n\n# meltPT\n\n**meltPT** is a Python package for whole-rock major-element themormobarometric \nanalyses of basaltic (mafic) rocks. It contains modules for:\n- Correcting sample compositions for effects of olivine crystallisation\n- Estimating pressures and temperatures at which samples were last in \n  equilibrium with the mantle\n- Estimating melt fractions and potential temperatures on an individual basis\n  or for a suite of samples\n  \nFull documentation can be found [here](https://meltpt.readthedocs.io/en/latest/).\n\nYou can find more background information and some example analyses in our paper\nin *Volcanica* [here](https://doi.org/10.30909/vol.06.01.6376).\n\n## Installation\n\n### Quickstart\n\nTo try out **meltPT** without having to install anything, you can run our\nTutorials in your browser via our \n[Binder](https://mybinder.org/v2/gh/fmcnab/meltPT/master) page. You will find \nour jupyter notebook tutorials under \"./Tutorials/jupyter\".\nAlternatively, you can use the terminal function to run the tutorial scripts.\nFor example:\n\n```\n$ # Navigate to script directory.\n$ cd Tutorials/scripts\n\n$ # Run the first tutorial.\n$ python3 Tutorial_1.py\n```\n\n### Linux/Mac\n\nTo avoid incompatibility issues with other packages you may have installed, \nwe recommend running **meltPT** in a virtual environment. Start a terminal and\nenter:\n\n```\n$ # Create virtual environment.\n$ # Replace /path/to/virtual/environment with your desired path.\n$ python3 -m venv /path/to/virtual/environment\n\n$ # Activate new virtual environment.\n$ source /path/to/virtual/environment/bin/activate\n```\n\nNote that, when using a virtual environment, some users may experience issues\ntrying to display images created with matplotlib (e.g., in our tutorials): the\ndefault matplotlib backend is sometimes \"agg\", which cannot show figures. There\ndoes not seem to be a universal solution to this issue, so please see\n[here](https://matplotlib.org/3.1.3/faq/virtualenv_faq.html) for some options\non how to proceed. \n\nWhat you do next depends on whether you just want to use meltPT as is or if\nyou want to edit the source code.\n\n#### Basic Usage\n\nIf you just want to use **meltPT** as it is you can now simply type:\n\n```\n(meltpt) $ pip install meltPT\n```\n  \nThis will take a minute or two and print lots of stuff. If it completes\nsuccessfully, you are now ready to use **meltPT**!\n\n#### Development usage\n\nIf you want to edit **meltPT**'s source code, you first need to download it.\nNavigate to your desired location and type:\n\n```\n(meltpt) $ git clone git@github.com:fmcnab/meltPT.git\n```\n\nYou should now have a directory called \"meltPT\". To install the package, enter\nthis directory and run the setup script. Using the -e flag means that the code\nwill be installed in \"editable\" mode, and changes you make locally will be\nincorporated without the need for a fresh install.\n\n```\n(meltpt) $ cd meltPT\n(meltpt) $\n(meltpt) $ # Standard install\n(meltpt) $ pip install -e .\n(meltpt) $\n(meltpt) $ # Including extra dependencies - \n(meltpt) $ # required for those who wish to compile documentation locally.\n(meltpt) $ pip install .[docs]\n(meltpt) $ pip install -e .[docs] # (editable)\n```\n\nThis will take a minute or two and print lots of stuff. If it completes\nsuccessfully, you are now ready to use **meltPT**!\n\n### Windows\n\nWe do not have much experience running Python on a Windows system, but outline\nhere some basic steps that we have tested and believe should be accessible\nto most users.\n\nFirst, you need to install a Python package manager, if you don't have one\nalready. We tested the Miniforge3 installer from \n[Miniforge](https://github.com/conda-forge/miniforge>), which is free to\nanyone regardless of affiliation. If you are already running a different Conda \ndistribution, don't worry, the following steps should still work.\n\nOnce you have a package manager installed, open the program. You should see\na command prompt. Create a new environment in which to install **meltPT**,\ncalled, for example, 'meltpt':\n\n```\n(base) > conda create meltpt\n```\n\nNext, activate the environment:\n\n```\n(base) > conda activate meltpt\n(meltpt) >\n```\n  \nIf you want to install an Interactive Development Environment (IDE), allowing\nyou to edit scripts, use a Python interface etc., now is the time to install\nit. For example, [Spyder](https://www.spyder-ide.org/>):\n\n```\n(meltpt) > conda install spyder\n```\n  \nFinally, install **meltPT** using pip:\n\n```\n(meltpt) > pip install meltPT\n```\n\nIf you wish to edit the source code, see the Linux/Mac instructions above for \nalternative pip commands; these should also work in Conda. You should now be \nready to use **meltPT**!\n\n## Using meltPT\n\nUnder ./Tutorials, you will find some exaple scripts to help you get\nstarted.\n\nFor more information, the **meltPT** [ReadtheDocs](https://meltpt.readthedocs.io)\npage has full documentation for the\n[codebase](https://meltpt.readthedocs.io/en/latest/codedoc.html), \na series of informative\n[tutorials](https://meltpt.readthedocs.io/en/latest/tutorials.html), information\nabout [contributing](https://meltpt.readthedocs.io/en/latest/contributing.html)\nand our [liscence](https://meltpt.readthedocs.io/en/latest/license.html).\n\n## Citing meltPT\n\nIf you use our code, please cite us!\n\n* M<sup>c</sup>Nab, F. and Ball, P. W. (2023), ``meltPT``: A ``Python`` package\n  for basaltic whole-rock thermobarometric analysis with application to Hawai'i,\n  *Volcanica*, 6(1), p. 63&ndash;76, [doi: 10.30909/vol.06.01.6376](https://doi.org/10.30909/vol.06.01.6376).\n\nYou should also refer to the specific release of the code you used. For example,\nthe most recent **meltPT** release is archived in our Zenodo repository:\n\n*  M<sup>c</sup>Nab, F. and Ball, P. W. (2023), meltPT, version 1.2.0,\n   *Zenodo*, [doi: 10.5281/zenodo.6948030](https://doi.org/10.5281/zenodo.6948030).\n\nWe also urge you to cite the original literature on which our code is based.\nThe sample backtracking method is based on that of \n[Lee et al. (2009, EPSL)](https://doi.org/10.1016/j.epsl.2008.12.020). For\na list of themormobarometric schemes available in **meltPT**, and links to the\noriginal papers, see the\\\n[Thermobarometers](https://meltpt.readthedocs.io/en/latest/thermobarometers.html)\nsection of our documentation.\n\nIf you use our melt-path fitting routines you should also cite:\n\n*  pyMelt: [Matthews et al. (2022, Volcanica)](https://doi.org/10.30909/vol.05.02.469475)\n*  melting model for our examples:\n   [Katz et al. (2003, G-cubed)](https://doi.org/10.1029/2002GC000433)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fmcnab/meltPT",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meltPT",
    "package_url": "https://pypi.org/project/meltPT/",
    "platform": null,
    "project_url": "https://pypi.org/project/meltPT/",
    "project_urls": {
      "Homepage": "https://github.com/fmcnab/meltPT"
    },
    "release_url": "https://pypi.org/project/meltPT/1.2.0/",
    "requires_dist": [
      "pandas (~=1.3)",
      "numpy (~=1.21)",
      "matplotlib (~=3.5)",
      "scipy (~=1.7)",
      "shapely (~=1.8)",
      "pyMelt (~=1.96)",
      "pyyaml (~=6.0)",
      "sympy (~=1.10)",
      "sphinx (~=5.1) ; extra == 'docs'",
      "nbsphinx (~=0.8) ; extra == 'docs'",
      "nbsphinx-link (~=1.3) ; extra == 'docs'",
      "sphinx-rtd-theme (~=1.0) ; extra == 'docs'",
      "ipykernel (~=6.15) ; extra == 'docs'"
    ],
    "requires_python": ">=3.7",
    "summary": "Calculate pressures and temperatures of melting for basaltic rocks and fit with melting models.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16977446,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d88f34e1954dad8a223bc720eeaa6a1b3e3719ed7c14d41afac727fdebedd71",
        "md5": "852d73435558a2bee53ae1e633345cda",
        "sha256": "60fa4fa6072f8fb039956ba24fb973d4c18b4d947ac600db6bbe0ab916848159"
      },
      "downloads": -1,
      "filename": "meltPT-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "852d73435558a2bee53ae1e633345cda",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 40285,
      "upload_time": "2023-02-22T15:02:11",
      "upload_time_iso_8601": "2023-02-22T15:02:11.550968Z",
      "url": "https://files.pythonhosted.org/packages/8d/88/f34e1954dad8a223bc720eeaa6a1b3e3719ed7c14d41afac727fdebedd71/meltPT-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "918469f25c787e7d25636af05dce1f0e1149c4bec556dd2ecd7d1ae13f25b69a",
        "md5": "ebaf64f8fce915a367721c4061cd5974",
        "sha256": "ac4e4fe23c6a2c7012798bc2b8a6a4286a4a81413d80740f255d1f10ca3fcad4"
      },
      "downloads": -1,
      "filename": "meltPT-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ebaf64f8fce915a367721c4061cd5974",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 40409,
      "upload_time": "2023-02-22T15:02:13",
      "upload_time_iso_8601": "2023-02-22T15:02:13.838030Z",
      "url": "https://files.pythonhosted.org/packages/91/84/69f25c787e7d25636af05dce1f0e1149c4bec556dd2ecd7d1ae13f25b69a/meltPT-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}