{
  "info": {
    "author": "deadc0de6",
    "author_email": "deadc0de6@foo.bar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# <img src=\"https://raw.githubusercontent.com/deadc0de6/dotdrop/master/assets/dotdrop.svg\" width=\"100\" height=\"100\" align=\"left\"> dotdrop\n<br/>\n<br/>\n\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/deadc0de6/dotdrop)](https://github.com/deadc0de6/dotdrop/releases/latest)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0)\n[![GitHub Repo stars](https://badgen.net/github/stars/deadc0de6/dotdrop)](https://github.com/deadc0de6/dotdrop/)\n\n[![Last commit](https://badgen.net/github/last-commit/deadc0de6/dotdrop)](https://github.com/deadc0de6/dotdrop/commits/master)\n[![Commits since last release](https://img.shields.io/github/commits-since/deadc0de6/dotdrop/latest)](https://github.com/deadc0de6/dotdrop/)\n\n[![Tests Status](https://github.com/deadc0de6/dotdrop/workflows/tests/badge.svg?branch=master)](https://github.com/deadc0de6/dotdrop/actions)\n[![Doc Status](https://readthedocs.org/projects/dotdrop/badge/?version=latest)](https://dotdrop.readthedocs.io/en/latest/?badge=latest)\n[![Coveralls](https://img.shields.io/coveralls/github/deadc0de6/dotdrop)](https://coveralls.io/github/deadc0de6/dotdrop?branch=master)\n![CodeQL](https://github.com/deadc0de6/dotdrop/workflows/CodeQL/badge.svg)\n\n[![Python](https://img.shields.io/pypi/pyversions/dotdrop.svg)](https://pypi.python.org/pypi/dotdrop)\n\n[![PyPI](https://img.shields.io/pypi/v/dotdrop)](https://badge.fury.io/py/dotdrop)\n[![Homebrew version](https://img.shields.io/homebrew/v/dotdrop)](https://formulae.brew.sh/formula/dotdrop)\n[![AUR](https://img.shields.io/aur/version/dotdrop.svg)](https://aur.archlinux.org/packages/dotdrop)\n[![Snap](https://badgen.net/snapcraft/v/dotdrop)](https://snapcraft.io/dotdrop)\n\n[![Donate](https://img.shields.io/badge/donate-KoFi-blue.svg)](https://ko-fi.com/deadc0de6)\n\n*Save your dotfiles once, deploy them everywhere*\n\n[Dotdrop](https://github.com/deadc0de6/dotdrop) makes the management of dotfiles between different hosts easy.\nIt allows you to store your dotfiles in Git and automagically deploy\ndifferent versions of the same file on different setups.\n\nIt also allows to manage different *sets* of dotfiles.\nFor example, you can have a set of dotfiles for your home laptop and\na different set for your office desktop. Those sets may overlap, and different\nversions of the same dotfiles can be deployed using different predefined *profiles*.\nOr you may have a main set of dotfiles for your\neveryday host and a subset you only need to deploy to temporary\nhosts (cloud VM etc.) that may be using\na slightly different version of some of the dotfiles.\n\nFeatures:\n\n* Sync once every dotfile in Git for different usages\n* Allow dotfile templating\n* Dynamically generated dotfile contents with pre-defined variables\n* Comparison between deployed and stored dotfiles\n* Handling multiple profiles with different sets of dotfiles\n* Easily import and update dotfiles\n* Handle files and directories\n* Support symlinking of dotfiles\n* Associate actions to the deployment of specific dotfiles\n* Associate transformations for storing encrypted/compressed dotfiles\n* Provide solutions for handling dotfiles containing sensitive information\n\nCheck the [example](#getting-started), the [documentation](https://dotdrop.readthedocs.io/) or\nhow [people are using dotdrop](https://dotdrop.readthedocs.io/en/latest/misc/people-using-dotdrop/)\nfor more.\n\nQuick start:\n```bash\n## using dotdrop as a submodule\nmkdir dotfiles && cd dotfiles\ngit init\ngit submodule add https://github.com/deadc0de6/dotdrop.git\npip3 install -r dotdrop/requirements.txt --user\n./dotdrop/bootstrap.sh\n./dotdrop.sh --help\n```\n\nA mirror of this repository is available on GitLab under <https://gitlab.com/deadc0de6/dotdrop>.\n\n## Why dotdrop?\n\nThere exist many tools to manage dotfiles; however, not\nmany allow to deploy different versions of the same dotfile\non different hosts. Moreover, dotdrop allows to specify the\nset of dotfiles that need to be deployed for a specific profile.\n\nSee the [example](#getting-started) for a concrete example of\nwhy [dotdrop](https://github.com/deadc0de6/dotdrop) rocks.\n\n---\n\n**Table of Contents**\n\n* [Installation](#installation)\n* [Getting started](#getting-started)\n* [Documentation](#documentation)\n* [Thank you](#thank-you)\n\n# Installation\n\nSee the [installation instructions](https://dotdrop.readthedocs.io/en/latest/installation/).\n\nDotdrop is available on:\n\n* [PyPI](https://pypi.org/project/dotdrop/)\n* [Homebrew](https://formulae.brew.sh/formula/dotdrop)\n* [AUR (stable)](https://aur.archlinux.org/packages/dotdrop/)\n* [AUR (git version)](https://aur.archlinux.org/packages/dotdrop-git/)\n* [Snapcraft](https://snapcraft.io/dotdrop)\n* [Pacstall](https://github.com/pacstall/pacstall-programs/blob/master/packages/dotdrop/dotdrop.pacscript)\n\n# Getting started\n\n[Create a new repository](https://dotdrop.readthedocs.io/en/latest/getting-started/#repository-setup)\nto store your dotfiles with dotdrop. *Init* or *clone* that new repository and\n[install dotdrop](https://dotdrop.readthedocs.io/en/latest/installation/).\n\nThen import any dotfiles (files or directories) you want to manage with dotdrop.\nYou can either use the default profile (which resolves to the *hostname* of the host\nyou are running dotdrop on) or provide it explicitly using the switch `-p`/`--profile`.\n\nImport dotfiles on host *home*:\n```bash\n$ dotdrop import ~/.vimrc ~/.xinitrc ~/.config/polybar\n```\n\nDotdrop does two things:\n\n* Copy the dotfiles to the *dotpath* directory\n  (defined in `config.yaml`, defaults to *dotfiles*)\n* Create the associated entries in the `config.yaml` file\n  (in the `dotfiles` and `profiles` entries)\n\nYour config file will look like something similar to this:\n```yaml\nconfig:\n  backup: true\n  banner: true\n  create: true\n  dotpath: dotfiles\n  ignoreempty: false\n  keepdot: false\n  longkey: false\n  showdiff: false\n  workdir: ~/.config/dotdrop\ndotfiles:\n  d_polybar:\n    dst: ~/.config/polybar\n    src: config/polybar\n  f_vimrc:\n    dst: ~/.vimrc\n    src: vimrc\n  f_xinitrc:\n    dst: ~/.xinitrc\n    src: xinitrc\nprofiles:\n  home:\n    dotfiles:\n    - f_vimrc\n    - f_xinitrc\n    - d_polybar\n```\nFor a description of the different fields and their use,\nsee the [config doc](https://dotdrop.readthedocs.io/en/latest/config/config-config/).\n\nCommit and push your changes with git.\n\nThen go to another host where your dotfiles need to be managed as well,\nclone the previously set up repository,\nand compare the local dotfiles with the ones stored in dotdrop:\n```bash\n$ dotdrop compare --profile=home\n```\n\nNow you might want to adapt the `config.yaml` file to your liking on\nthat second host. Let's say, for example, that you only want `d_polybar` and\n`f_xinitrc` to be deployed on that second host. You would then change your config\nto something like this (assuming that the second host's hostname is *office*):\n```yaml\n…\nprofiles:\n  home:\n    dotfiles:\n    - f_vimrc\n    - f_xinitrc\n    - d_polybar\n  office:\n    dotfiles:\n    - f_xinitrc\n    - d_polybar\n```\n\nThen adapt any dotfile using the [templating](https://dotdrop.readthedocs.io/en/latest/template/templating/)\nfeature (if needed). For example, you might want different fonts sizes in Polybar for each host.\n\nEdit `<dotpath>/config/polybar/config`:\n```bash\n…\n{%@@ if profile == \"home\" @@%}\nfont0 = sans:size=10;0\n{%@@ elif profile == \"office\" @@%}\nfont0 = sans:size=14;0\n{%@@ endif @@%}\nfont1 = \"Material Design Icons:style=Regular:size=14;0\"\nfont2 = \"unifont:size=6;0\"\n…\n```\n\nYou also want to have the correct interface set on the wireless network in\nthe Polybar config.\n\nAdd a [variable](https://dotdrop.readthedocs.io/en/latest/config/config-variables/)\nto the config file (In the below example, *home* gets the default `wlan0` value for\nthe variable `wifi` while *office* gets `wlp2s0`):\n```yaml\n…\nvariables:\n  wifi: \"wlan0\"\n…\nprofiles:\n  home:\n    dotfiles:\n    - f_vimrc\n    - f_xinitrc\n    - d_polybar\n  office:\n    dotfiles:\n    - f_xinitrc\n    - d_polybar\n    variables:\n      wifi: \"wlp2s0\"\n```\n\nThen you can adapt the Polybar config file so that the\nvariable `wifi` gets correctly replaced during installation:\n```bash\n[module/wireless-network]\ntype = internal/network\ninterface = {{@@ wifi @@}}\n```\n\nAlso, the home computer is running [awesomeWM](https://awesomewm.org/),\nand the office computer [bspwm](https://github.com/baskerville/bspwm).\nThe `~/.xinitrc` file will therefore be different while still sharing some lines.\n\nEdit `<dotpath>/xinitrc`:\n```bash\n#!/bin/bash\n\n# load Xresources\nuserresources=$HOME/.Xresources\nif [ -f \"$userresources\" ]; then\n      xrdb -merge \"$userresources\" &\nfi\n\n# launch the wm\n{%@@ if profile == \"home\" @@%}\nexec awesome\n{%@@ elif profile == \"office\" @@%}\nexec bspwm\n{%@@ endif @@%}\n```\n\nFinally you want everything installed with the *office* profile\nto be logged; you thus add an action to the config file:\n```yaml\n…\nactions:\n  loginstall: \"echo {{@@ _dotfile_abs_src @@}} installed to {{@@ _dotfile_abs_dst @@}} >> {0}\"\n…\nprofiles:\n  home:\n    dotfiles:\n    - f_vimrc\n    - f_xinitrc\n    - d_polybar\n  office:\n    dotfiles:\n    - f_xinitrc\n    - d_polybar\n    variables:\n      wifi: \"wlp2s0\"\n    actions:\n      - loginstall \"/tmp/dotdrop-installation.log\"\n```\n\nWhen done, you can install your dotfiles using:\n```bash\n$ dotdrop install\n```\n\nIf you are unsure, you can always run `dotdrop compare` to see\nhow your local dotfiles would be updated by dotdrop before running\n`install` or you could run install with `--dry`.\n\nThat's it, a single repository with all your dotfiles for your different hosts.\n\nFor more, see the [docs](https://dotdrop.readthedocs.io):\n\n* [Create actions](https://dotdrop.readthedocs.io/en/latest/config/config-actions/)\n* [Use transformations](https://dotdrop.readthedocs.io/en/latest/config/config-transformations/)\n* [Use variables](https://dotdrop.readthedocs.io/en/latest/config/config-variables/)\n* [Symlink dotfiles](https://dotdrop.readthedocs.io/en/latest/howto/symlink-dotfiles/)\n* [and more](https://dotdrop.readthedocs.io/en/latest/howto/howto/)\n\n# Documentation\n\nDotdrop's documentation is hosted on [Read the Docs](https://dotdrop.readthedocs.io/en/latest/).\n\n# Thank you\n\nIf you like dotdrop, [buy me a coffee](https://ko-fi.com/deadc0de6).\n\n# Contribution\n\nIf you are having trouble installing or using dotdrop,\n[open an issue](https://github.com/deadc0de6/dotdrop/issues).\n\nIf you want to contribute, feel free to do a PR (please follow PEP8).\nHave a look at the\n[contribution guidelines](https://github.com/deadc0de6/dotdrop/blob/master/CONTRIBUTING.md).\n\n# License\n\nThis project is licensed under the terms of the GPLv3 license.\n\n\n",
    "description_content_type": "text/markdown; variant=GFM",
    "docs_url": null,
    "download_url": "https://github.com/deadc0de6/dotdrop/archive/v1.12.13.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deadc0de6/dotdrop",
    "keywords": "dotfiles jinja2",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotdrop",
    "package_url": "https://pypi.org/project/dotdrop/",
    "platform": null,
    "project_url": "https://pypi.org/project/dotdrop/",
    "project_urls": {
      "Download": "https://github.com/deadc0de6/dotdrop/archive/v1.12.13.tar.gz",
      "Homepage": "https://github.com/deadc0de6/dotdrop"
    },
    "release_url": "https://pypi.org/project/dotdrop/1.12.13/",
    "requires_dist": [
      "docopt",
      "Jinja2",
      "ruamel.yaml",
      "python-magic",
      "packaging",
      "requests",
      "toml",
      "distro",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3",
    "summary": "Save your dotfiles once, deploy them everywhere",
    "version": "1.12.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17118064,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b38bd030a2b00fc0a88e09ce7e453740fdd5f9f9038fe155d22333a4abe0604",
        "md5": "df836a415b34ebcaec8cf1987ba35173",
        "sha256": "907871c118855b0a3a8585d4695a7b7287e13170c93bbde9e62bf77fa4c1b560"
      },
      "downloads": -1,
      "filename": "dotdrop-1.12.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df836a415b34ebcaec8cf1987ba35173",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 77027,
      "upload_time": "2023-03-01T21:11:29",
      "upload_time_iso_8601": "2023-03-01T21:11:29.152741Z",
      "url": "https://files.pythonhosted.org/packages/5b/38/bd030a2b00fc0a88e09ce7e453740fdd5f9f9038fe155d22333a4abe0604/dotdrop-1.12.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3e40ec0ce2fa73dac7afd4ef16faa3b15dca7d2d87313f2c42c758b850c5e9e",
        "md5": "076e8b81c156ebbc4c155ff63255b394",
        "sha256": "13e8605d15752bb24af0aba6ed2752a226585000e9259026605440fa83d9efdf"
      },
      "downloads": -1,
      "filename": "dotdrop-1.12.13.tar.gz",
      "has_sig": false,
      "md5_digest": "076e8b81c156ebbc4c155ff63255b394",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 73347,
      "upload_time": "2023-03-01T21:11:31",
      "upload_time_iso_8601": "2023-03-01T21:11:31.117401Z",
      "url": "https://files.pythonhosted.org/packages/f3/e4/0ec0ce2fa73dac7afd4ef16faa3b15dca7d2d87313f2c42c758b850c5e9e/dotdrop-1.12.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}