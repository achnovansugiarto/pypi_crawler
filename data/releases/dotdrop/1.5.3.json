{
  "info": {
    "author": "deadc0de6",
    "author_email": "deadc0de6@foo.bar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "DOTDROP\n=======\n\n|Tests Status| |Doc Status| |License: GPL v3| |Coverage Status|\n|Language grade: Python|\n\n|PyPI version| |AUR| |Python|\n\n|Donate|\n\n*Save your dotfiles once, deploy them everywhere*\n\n`Dotdrop <https://github.com/deadc0de6/dotdrop>`__ makes the management\nof dotfiles between different hosts easy. It allows to store your\ndotfiles on git and automagically deploy different versions of the same\nfile on different setups.\n\nIt also allows to manage different *sets* of dotfiles. For example you\ncan have a set of dotfiles for your home laptop and a different set for\nyour office desktop. Those sets may overlap and different versions of\nthe same dotfiles can be deployed on different predefined *profiles*. Or\nyou may have a main set of dotfiles for your everyday’s host and a\nsub-set you only need to deploy to temporary hosts (cloud VM, etc) that\nmay be using a slightly different version of some of the dotfiles.\n\nFeatures:\n\n-  Sync once every dotfile on git for different usages\n-  Allow dotfiles templating by leveraging\n   `jinja2 <https://palletsprojects.com/p/jinja/>`__\n-  Dynamically generated dotfile contents with pre-defined variables\n-  Comparison between deployed and stored dotfiles\n-  Handling multiple profiles with different sets of dotfiles\n-  Easy import and update dotfiles\n-  Handle files and directories\n-  Support symlink of dotfiles\n-  Associate actions to the deployment of specific dotfiles\n-  Associate transformations for storing encrypted/compressed dotfiles\n-  Provide solutions for handling dotfiles containing sensitive\n   information\n\nCheck also the `blog\npost <https://deadc0de.re/articles/dotfiles.html>`__, the\n`example <#getting-started>`__, the\n`documentation <https://dotdrop.readthedocs.io/>`__ or how `people are\nusing\ndotdrop <https://dotdrop.readthedocs.io/en/latest/misc/people-using-dotdrop/>`__\nfor more.\n\nQuick start:\n\n.. code:: bash\n\n   mkdir dotfiles && cd dotfiles\n   git init\n   git submodule add https://github.com/deadc0de6/dotdrop.git\n   pip3 install -r dotdrop/requirements.txt --user\n   ./dotdrop/bootstrap.sh\n   ./dotdrop.sh --help\n\nA mirror of this repository is available on gitlab under\nhttps://gitlab.com/deadc0de6/dotdrop.\n\nWhy dotdrop ?\n-------------\n\nThere exist many tools to manage dotfiles however not many allow to\ndeploy different versions of the same dotfile on different hosts.\nMoreover dotdrop allows to specify the set of dotfiles that need to be\ndeployed on a specific profile.\n\nSee the `example <#getting-started>`__ for a concrete example on why\n`dotdrop <https://github.com/deadc0de6/dotdrop>`__ rocks.\n\n--------------\n\n**Table of Contents**\n\n-  `Installation <#installation>`__\n-  `Getting started <#getting-started>`__\n-  `Documentation <#documentation>`__\n-  `Thank you <#thank-you>`__\n\nInstallation\n============\n\nThere are multiple ways to install and use dotdrop. It is recommended to\ninstall dotdrop `as a submodule <#as-a-submodule>`__ to your dotfiles\ngit tree. Having dotdrop as a submodule guarantees that anywhere you are\ncloning your dotfiles git tree from you’ll have dotdrop shipped with it.\n\nBelow instructions show how to install dotdrop as a submodule. For\nalternative installation instructions (with virtualenv, pypi, aur, snap,\netc) see the `installation\ndocumentation <https://dotdrop.readthedocs.io/en/latest/installation/>`__.\n\nDotdrop is also available on \\* pypi: https://pypi.org/project/dotdrop/\n\\* aur (stable): https://aur.archlinux.org/packages/dotdrop/ \\* aur (git\nversion): https://aur.archlinux.org/packages/dotdrop-git/ \\* snapcraft:\nhttps://snapcraft.io/dotdrop\n\nAs a submodule\n--------------\n\nThe following will create a git repository for your dotfiles and keep\ndotdrop as a submodule:\n\n.. code:: bash\n\n   ## create the repository\n   $ mkdir dotfiles; cd dotfiles\n   $ git init\n\n   ## install dotdrop as a submodule\n   $ git submodule add https://github.com/deadc0de6/dotdrop.git\n   $ pip3 install -r dotdrop/requirements.txt --user\n   $ ./dotdrop/bootstrap.sh\n\n   ## use dotdrop\n   $ ./dotdrop.sh --help\n\nFor MacOS users, make sure to install ``realpath`` through homebrew\n(part of *coreutils*).\n\nUsing dotdrop as a submodule will need you to work with dotdrop by using\nthe generated script ``dotdrop.sh`` at the root of your dotfiles\nrepository. Note that this script updates the submodule automatically,\nunless called with the environment variable ``DOTDROP_AUTOUPDATE`` set\nto ``no``.\n\nTo ease the use of dotdrop, it is recommended to add an alias to it in\nyour shell (*/.bashrc,/.zshrc*, etc) with the config file path, for\nexample\n\n::\n\n   alias dotdrop='<absolute-path-to-dotdrop.sh> --cfg=<path-to-your-config.yaml>'\n\nCompletion scripts exist for ``bash``, ``zsh`` and ``fish``, see `the\nrelated doc <completion/README.md>`__.\n\nGetting started\n===============\n\n`Create a new\nrepository <https://dotdrop.readthedocs.io/en/latest/repository-setup/>`__\nto store your dotfiles with dotdrop. *Init* or *clone* that new\nrepository and `install\ndotdrop <https://dotdrop.readthedocs.io/en/latest/installation/#as-a-submodule>`__.\n\nThen import any dotfiles (files or directories) you want to manage with\ndotdrop. You can either use the default profile (which resolves to the\n*hostname* of the host you are running dotdrop on) or provide it\nspecifically using the switch ``-p --profile``.\n\nImport dotfiles on host *home*\n\n.. code:: bash\n\n   $ dotdrop import ~/.vimrc ~/.xinitrc ~/.config/polybar\n\nDotdrop does two things:\n\n-  Copy the dotfiles in the *dotpath* directory (defined in\n   ``config.yaml``, defaults to *dotfiles*)\n-  Create the associated entries in the ``config.yaml`` file (in the\n   ``dotfiles`` and ``profiles`` entries)\n\nYour config file will look something similar to this\n\n.. code:: yaml\n\n   config:\n     backup: true\n     banner: true\n     create: true\n     dotpath: dotfiles\n     ignoreempty: false\n     keepdot: false\n     longkey: false\n     showdiff: false\n     workdir: ~/.config/dotdrop\n   dotfiles:\n     d_polybar:\n       dst: ~/.config/polybar\n       src: config/polybar\n     f_vimrc:\n       dst: ~/.vimrc\n       src: vimrc\n     f_xinitrc:\n       dst: ~/.xinitrc\n       src: xinitrc\n   profiles:\n     home:\n       dotfiles:\n       - f_vimrc\n       - f_xinitrc\n       - d_polybar\n\nFor a description of the different fields and their use, see the `config\ndoc <https://dotdrop.readthedocs.io/en/latest/config-format/>`__.\n\nCommit and push your changes with git.\n\nThen go to another host where your dotfiles need to be managed as well,\nclone the previously setup repository and compare the local dotfiles\nwith the ones stored in dotdrop:\n\n.. code:: bash\n\n   $ dotdrop compare --profile=home\n\nNow you might want to adapt the ``config.yaml`` file to your likings on\nthat second host. Let’s say for example that you only want ``d_polybar``\nand ``f_xinitrc`` to be deployed on that second host. You would then\nchange your config to something like this (considering that the second\nhost’s hostname is *office*):\n\n.. code:: yaml\n\n   …\n   profiles:\n     home:\n       dotfiles:\n       - f_vimrc\n       - f_xinitrc\n       - d_polybar\n     office:\n       dotfiles:\n       - f_xinitrc\n       - d_polybar\n\nThen adapt any dotfile using the\n`templating <https://dotdrop.readthedocs.io/en/latest/templating/>`__\nfeature (if needed). For example you might want different fonts sizes on\npolybar for the different hosts:\n\nedit ``<dotpath>/config/polybar/config``\n\n.. code:: bash\n\n   …\n   {%@@ if profile == \"home\" @@%}\n   font0 = sans:size=10;0\n   {%@@ elif profile == \"office\" @@%}\n   font0 = sans:size=14;0\n   {%@@ endif @@%}\n   font1 = \"Material Design Icons:style=Regular:size=14;0\"\n   font2 = \"unifont:size=6;0\"\n   …\n\nAlso the home computer is running `awesomeWM <https://awesomewm.org/>`__\nand the office computer\n`bspwm <https://github.com/baskerville/bspwm>`__. The ``~/.xinitrc``\nfile will therefore be different while still sharing some lines.\n\nedit ``<dotpath>/xinitrc``\n\n.. code:: bash\n\n   #!/bin/bash\n\n   # load Xresources\n   userresources=$HOME/.Xresources\n   if [ -f \"$userresources\" ]; then\n         xrdb -merge \"$userresources\" &\n   fi\n\n   # launch the wm\n   {%@@ if profile == \"home\" @@%}\n   exec awesome\n   {%@@ elif profile == \"office\" @@%}\n   exec bspwm\n   {%@@ endif @@%}\n\nThe *if branch* on above template examples will define which part is\ndeployed based on the hostname of the host on which dotdrop is run from\n(or the selected profile).\n\nWhen done, you can install your dotfiles using\n\n.. code:: bash\n\n   $ dotdrop install\n\nIf you are unsure, you can always run ``dotdrop compare`` to see how\nyour local dotfiles would be updated by dotdrop before running\n``install`` or run install with ``--dry``.\n\nThat’s it, a single repository with all your dotfiles for your different\nhosts.\n\nYou can then\n\n-  `create\n   actions <https://dotdrop.readthedocs.io/en/latest/config-details/#entry-actions>`__\n-  `use\n   transformations <https://dotdrop.readthedocs.io/en/latest/config-details/#entry-transformations>`__\n-  `use\n   variables <https://dotdrop.readthedocs.io/en/latest/config/#variables>`__\n-  `symlink\n   dotfiles <https://dotdrop.readthedocs.io/en/latest/config/#symlink-dotfiles>`__\n-  `and more <https://dotdrop.readthedocs.io/en/latest/howto/howto/>`__\n\nFor more options see ``dotdrop --help`` and the\n`documentation <https://dotdrop.readthedocs.io>`__.\n\nDocumentation\n=============\n\nDotdrop’s documentation is hosted on\n`readthedocs <https://dotdrop.readthedocs.io/en/latest/>`__.\n\nThank you\n=========\n\nIf you like dotdrop, `buy me a coffee <https://ko-fi.com/deadc0de6>`__.\n\nContribution\n============\n\nIf you are having trouble installing or using dotdrop, `open an\nissue <https://github.com/deadc0de6/dotdrop/issues>`__.\n\nIf you want to contribute, feel free to do a PR (please follow PEP8).\nHave a look at the `contribution\nguidelines <https://github.com/deadc0de6/dotdrop/blob/master/CONTRIBUTING.md>`__\n\nLicense\n=======\n\nThis project is licensed under the terms of the GPLv3 license.\n\n.. |Tests Status| image:: https://github.com/deadc0de6/dotdrop/workflows/tests/badge.svg\n   :target: https://github.com/deadc0de6/dotdrop/actions\n.. |Doc Status| image:: https://readthedocs.org/projects/dotdrop/badge/?version=latest\n   :target: https://dotdrop.readthedocs.io/en/latest/?badge=latest\n.. |License: GPL v3| image:: https://img.shields.io/badge/License-GPL%20v3-blue.svg\n   :target: http://www.gnu.org/licenses/gpl-3.0\n.. |Coverage Status| image:: https://coveralls.io/repos/github/deadc0de6/dotdrop/badge.svg?branch=master\n   :target: https://coveralls.io/github/deadc0de6/dotdrop?branch=master\n.. |Language grade: Python| image:: https://img.shields.io/lgtm/grade/python/g/deadc0de6/dotdrop.svg?logo=lgtm&logoWidth=18\n   :target: https://lgtm.com/projects/g/deadc0de6/dotdrop/context:python\n.. |PyPI version| image:: https://badge.fury.io/py/dotdrop.svg\n   :target: https://badge.fury.io/py/dotdrop\n.. |AUR| image:: https://img.shields.io/aur/version/dotdrop.svg\n   :target: https://aur.archlinux.org/packages/dotdrop\n.. |Python| image:: https://img.shields.io/pypi/pyversions/dotdrop.svg\n   :target: https://pypi.python.org/pypi/dotdrop\n.. |Donate| image:: https://img.shields.io/badge/donate-KoFi-blue.svg\n   :target: https://ko-fi.com/deadc0de6\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/deadc0de6/dotdrop/archive/v1.5.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deadc0de6/dotdrop",
    "keywords": "dotfiles jinja2",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotdrop",
    "package_url": "https://pypi.org/project/dotdrop/",
    "platform": "",
    "project_url": "https://pypi.org/project/dotdrop/",
    "project_urls": {
      "Download": "https://github.com/deadc0de6/dotdrop/archive/v1.5.3.tar.gz",
      "Homepage": "https://github.com/deadc0de6/dotdrop"
    },
    "release_url": "https://pypi.org/project/dotdrop/1.5.3/",
    "requires_dist": [
      "docopt",
      "Jinja2",
      "ruamel.yaml",
      "python-magic",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3",
    "summary": "Save your dotfiles once, deploy them everywhere",
    "version": "1.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17118064,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03dba6a6f17e813e4d194804d6276d0d33e8406addefc9d31fc670c025f7fb56",
        "md5": "ae1a5133bc1608dd9806fd376f004718",
        "sha256": "65592424d253e5332c93a7b2e7639d7e0104d3c6c907dbe193cf0671a34db244"
      },
      "downloads": -1,
      "filename": "dotdrop-1.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae1a5133bc1608dd9806fd376f004718",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 69209,
      "upload_time": "2021-04-06T16:33:14",
      "upload_time_iso_8601": "2021-04-06T16:33:14.003651Z",
      "url": "https://files.pythonhosted.org/packages/03/db/a6a6f17e813e4d194804d6276d0d33e8406addefc9d31fc670c025f7fb56/dotdrop-1.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7b4ee17bb96099d755440128c5020e6730fcf6f4258b8387740c307bb2057d0",
        "md5": "e945d9deedda1925cb3ccf6cea67e559",
        "sha256": "41bb37b0d1e6f766d8e91c77263b9e3145f98d4f57447731b960a005b6202ac8"
      },
      "downloads": -1,
      "filename": "dotdrop-1.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e945d9deedda1925cb3ccf6cea67e559",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 67023,
      "upload_time": "2021-04-06T16:33:15",
      "upload_time_iso_8601": "2021-04-06T16:33:15.162696Z",
      "url": "https://files.pythonhosted.org/packages/a7/b4/ee17bb96099d755440128c5020e6730fcf6f4258b8387740c307bb2057d0/dotdrop-1.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}