{
  "info": {
    "author": "Dennis van Gils",
    "author_email": "vangils.dennis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/dvg-pyqtgraph-threadsafe\n    :target: https://pypi.org/project/dvg-pyqtgraph-threadsafe\n.. image:: https://img.shields.io/pypi/pyversions/dvg-pyqtgraph-threadsafe\n    :target: https://pypi.org/project/dvg-pyqtgraph-threadsafe\n.. image:: https://requires.io/github/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe/requirements.svg?branch=master\n    :target: https://requires.io/github/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe/requirements/?branch=master\n    :alt: Requirements Status\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n.. image:: https://img.shields.io/badge/License-MIT-purple.svg\n    :target: https://github.com/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe/blob/master/LICENSE.txt\n\nDvG_PyQtGraph_ThreadSafe\n========================\n*PyQtGraph library providing thread-safe plot curves with underlying (ring)\nbuffers.*\n\n- Github: https://github.com/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe\n- PyPI: https://pypi.org/project/dvg-pyqtgraph-threadsafe\n\nInstallation::\n\n    pip install dvg-pyqtgraph-threadsafe\n\nClasses ``HistoryChartCurve``, ``BufferedPlotCurve`` & ``PlotCurve`` wrap around\na ``pyqtgraph.PlotDataItem`` instance, called a *curve* for convenience. Data\ncan be safely appended or set from out of any thread.\n\nThe (x, y)-curve data is buffered internally to the class, relying on either a\ncircular/ring buffer or a regular array buffer:\n\n    HistoryChartCurve\n        Ring buffer. The plotted x-data will be shifted such that the\n        right-side is always set to 0. I.e., when `x` denotes time, the data is\n        plotted backwards in time, hence the name *history* chart. The most\n        recent data is on the right-side of the ring buffer.\n\n    BufferedPlotCurve\n        Ring buffer. Data will be plotted as is. Can also act as a Lissajous\n        figure.\n\n    PlotCurve\n        Regular array buffer. Data will be plotted as is.\n\nUsage:\n\n    .. code-block:: python\n\n        import sys\n        from PyQt5 import QtWidgets\n        import pyqtgraph as pg\n        from dvg_pyqtgraph_threadsafe import HistoryChartCurve\n\n        class MainWindow(QtWidgets.QWidget):\n            def __init__(self, parent=None, **kwargs):\n                super().__init__(parent, **kwargs)\n\n                self.gw = pg.GraphicsWindow()\n                self.plot_1 = self.gw.addPlot()\n\n                # Create a HistoryChartCurve and have it wrap around a new PlotDataItem\n                # as set by argument `linked_curve`.\n                self.tscurve_1 = HistoryChartCurve(\n                    capacity=5,\n                    linked_curve=self.plot_1.plot(pen=pg.mkPen('r')),\n                )\n\n                grid = QtWidgets.QGridLayout(self)\n                grid.addWidget(self.gw)\n\n        app = QtWidgets.QApplication(sys.argv)\n        window = MainWindow()\n\n        # The following line could have been executed from inside of another thread:\n        window.tscurve_1.extend_data([1, 2, 3, 4, 5], [10, 20, 30, 40, 50])\n\n        # Redraw the curve from out of the main thread\n        window.tscurve_1.update()\n\n        window.show()\n        sys.exit(app.exec_())\n\nAPI\n===\n\n\n``class ThreadSafeCurve(capacity: int, linked_curve: pg.PlotDataItem, shift_right_x_to_zero: bool = False, use_ringbuffer: bool = True)``\n-----------------------------------------------------------------------------------------------------------------------------------------\n\n    Provides the base class for a thread-safe plot *curve* to which\n    (x, y)-data can be safely appended or set from out of any thread. It\n    will wrap around the passed argument ``linked_curve`` of type\n    ``pyqtgraph.PlotDataItem`` and will manage the (x, y)-data buffers\n    underlying the curve.\n\n    Intended multithreaded operation: One thread pushes new data into the\n    ``ThreadSafeCurve``-buffers. Another thread performs the GUI refresh by\n    calling ``update()`` which will redraw the curve according to the\n    current buffer contents.\n\n        Args:\n            capacity (``int``):\n                Maximum number of (x, y)-data points the buffer can store.\n\n            linked_curve (``pyqtgraph.PlotDataItem``):\n                Instance of ``pyqtgraph.PlotDataItem`` to plot the buffered\n                data out into.\n\n            shift_right_x_to_zero (``bool``, optional):\n                When plotting, should the x-data be shifted such that the\n                right-side is always set to 0? Useful for history charts.\n\n                Default: False\n\n            use_ringbuffer (``bool``, optional):\n                When True, the (x, y)-data buffers are each a ring buffer. New\n                readings are placed at the end (right-side) of the buffer,\n                pushing out the oldest readings when the buffer has reached its\n                maximum capacity (FIFO). Use methods ``append_data()`` and\n                ``extend_data()`` to push in new data.\n\n                When False, the (x, y)-data buffers are each a regular array\n                buffer. Use method ``set_data()`` to set the data.\n\n                Default: True\n\n        Attributes:\n            x_axis_divisor (``float``):\n                The x-data in the buffer will be divided by this factor when the\n                plot curve is drawn. Useful to, e.g., transform the x-axis units\n                from milliseconds to seconds or minutes.\n\n                Default: 1\n\n            y_axis_divisor (``float``):\n                Same functionality as ``x_axis_divisor``.\n\n                Default: 1\n\nMethods\n-------\n* ``apply_downsampling(state: bool = True, ds=4)``\n    Downsample the curve by using PyQtGraph's build-in method\n    ``pyqtgraph.PlotDataItem.setDownsampling()``.\n\n* ``append_data(x, y):``\n    Append a single (x, y)-data point to the ring buffer.\n\n* ``extend_data(x_list, y_list):``\n    Extend the ring buffer with a list of (x, y)-data points.\n\n* ``set_data(x_list, y_list):``\n    Set the (x, y)-data of the regular array buffer.\n\n* ``update():``\n    Update the data behind the curve, based on the current contents of\n    the buffer, and redraw the curve on screen.\n\n* ``clear():``\n    Clear the contents of the curve and redraw.\n\n* ``is_visible() -> bool``\n* ``set_visible(state: bool = True)``\n\nProperties\n----------\n* ``size -> Tuple[int, int]``:\n    Number of elements currently contained in the underlying (x, y)-\n    buffers of the curve. Note that this is not necessarily the number of\n    elements of the currently drawn curve, but reflects the data buffer\n    behind it that will be drawn onto screen by the next call to\n    ``update()``.\n\n``class HistoryChartCurve(capacity: int, linked_curve: pg.PlotDataItem)``\n--------------------------------------------------------------------------\n    Bases: ``ThreadSafeCurve``\n\n    Provides a thread-safe curve with underlying ring buffers for the\n    (x, y)-data. New readings are placed at the end (right-side) of the\n    buffer, pushing out the oldest readings when the buffer has reached its\n    maximum capacity (FIFO). Use methods ``append_data()`` and\n    ``extend_data()`` to push in new data.\n\n    The plotted x-data will be shifted such that the right-side is always\n    set to 0. I.e., when ``x`` denotes time, the data is plotted backwards\n    in time, hence the name *history* chart.\n\n    See class ``ThreadSafeCurve`` for more details.\n\n``class BufferedPlotCurve(capacity: int, linked_curve: pg.PlotDataItem)``\n--------------------------------------------------------------------------\n    Bases: ``ThreadSafeCurve``\n\n    Provides a thread-safe curve with underlying ring buffers for the\n    (x, y)-data. New readings are placed at the end (right-side) of the\n    buffer, pushing out the oldest readings when the buffer has reached its\n    maximum capacity (FIFO). Use methods ``append_data()`` and\n    ``extend_data()`` to push in new data.\n\n    See class ``ThreadSafeCurve`` for more details.\n\n``class PlotCurve(capacity: int, linked_curve: pg.PlotDataItem)``\n--------------------------------------------------------------------------\n    Bases: ``ThreadSafeCurve``\n\n    Provides a thread-safe curve with underlying regular array buffers\n    for the (x, y)-data. Use method ``set_data()`` to set the data.\n\n    See class ``ThreadSafeCurve`` for more details.\n\nChangelog\n=========\n\n1.0.0 (2020-07-30)\n------------------\n* First release on PyPI\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe",
    "keywords": "ring buffer,circular buffer,pyqtgraph,thread safe,chart,plot",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvg-pyqtgraph-threadsafe",
    "package_url": "https://pypi.org/project/dvg-pyqtgraph-threadsafe/",
    "platform": "",
    "project_url": "https://pypi.org/project/dvg-pyqtgraph-threadsafe/",
    "project_urls": {
      "Homepage": "https://github.com/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe",
      "Issue Tracker": "https://github.com/Dennis-van-Gils/python-dvg-pyqtgraph-threadsafe/issues"
    },
    "release_url": "https://pypi.org/project/dvg-pyqtgraph-threadsafe/1.0.0/",
    "requires_dist": [
      "numpy (~=1.15)",
      "pyqt5 (~=5.12)",
      "pyqtgraph (~=0.11)",
      "dvg-ringbuffer (~=1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "PyQtGraph library providing thread-safe plot curves with underlying (ring) buffers.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17063776,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "713712539a9d3cb31e5ca17e8e980544f5a9968ca1af7e067bc9be1c524fcaa7",
        "md5": "fb8277d1ded202dd990ab1f0dd7e68a7",
        "sha256": "e39497934940feb3cb688a75ecffc206fa95f66284eec312372f9f09c4683500"
      },
      "downloads": -1,
      "filename": "dvg_pyqtgraph_threadsafe-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fb8277d1ded202dd990ab1f0dd7e68a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8727,
      "upload_time": "2020-07-30T19:06:07",
      "upload_time_iso_8601": "2020-07-30T19:06:07.300425Z",
      "url": "https://files.pythonhosted.org/packages/71/37/12539a9d3cb31e5ca17e8e980544f5a9968ca1af7e067bc9be1c524fcaa7/dvg_pyqtgraph_threadsafe-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21b7b570c5f240af7a4c7321a0aa283bd9119b0dfc3fb2b9e148406fe1d483fc",
        "md5": "33333013501f6ac64cd17df64cb4eaea",
        "sha256": "b15b297873fc47a2c143d0e2f642e0682d7496994f0b38afa519c3a1aa39a3d8"
      },
      "downloads": -1,
      "filename": "dvg-pyqtgraph-threadsafe-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "33333013501f6ac64cd17df64cb4eaea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13757,
      "upload_time": "2020-07-30T19:06:10",
      "upload_time_iso_8601": "2020-07-30T19:06:10.444730Z",
      "url": "https://files.pythonhosted.org/packages/21/b7/b570c5f240af7a4c7321a0aa283bd9119b0dfc3fb2b9e148406fe1d483fc/dvg-pyqtgraph-threadsafe-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}