{
  "info": {
    "author": "Mark Sandstrom",
    "author_email": "mark@deliciouslynerdy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-reroute\n==============\n\ndjango-reroute is a drop-in replacement for django.conf.urls.defaults that supports HTTP verb dispatch and view wrapping.\n\nChanges in version 1.0.0\n------------------------\n\n- [**NEW**] Added support for the csrf_exempt decorator\n- [**FIXED**] The incorrect default kwargs are used for verb_url patterns that have the same regex\n\nDownload\n--------\n\nGithub: http://github.com/dnerdy/django-reroute\n\neasy_install::\n    \n    easy_install django-reroute\n    \nSource::\n    \n    # Download the source and run\n    python setup.py install\n    \n\nAdding django-reroute to your project\n-------------------------------------\n\ndjango-reroute is a drop-in replacement for django.conf.urls.defaults::\n\n    # Replace\n    from django.conf.urls.defaults *\n    \n    # with   \n    from reroute import *\n    \nAlthough it's better to be explicit::\n    \n    # Replace\n    from django.conf.urls.defaults import handler404, handler500, patterns, url, include\n    \n    # with   \n    from reroute import handler404, handler500, patterns, url, include  \n    \nHTTP verb dispatching\n---------------------\n\nverb_url patterns can match HTTP verbs in addition to regexes::\n\n    from reroute.verbs import verb_url\n    \n    urlpatterns = patterns('myapp.views',\n        url('^regular$', 'regular_old_view'),\n        verb_url('GET', '^restful$', 'restful_view')\n    )\n    \nverb_url pattern regexes can be overloaded, enabling routing solely based on HTTP verb::\n    \n    urlpatterns = patterns('myapp.views',\n        verb_url('GET', '^restful$', 'restful_view'),\n        verb_url('PUT', '^restful$', 'another_restful_view')   \n    )\n    \nRestful resource example::\n\n    paychecks = patterns('myapp.views.employees.paychecks',\n        verb_url('GET',     '^paychecks$', 'index_paychecks'),\n        verb_url('POST',    '^paychecks$', 'add_paycheck'),\n    )\n    \n    urlpatterns = patterns('myapp.views.employees',\n        verb_url('GET',     '^employees$', 'index_employees'),\n        verb_url('POST',    '^employees$', 'add_employee'),\n        \n        verb_url('GET',     '^employees/(?P<employee_id>\\d+)$', 'show_employee')\n        verb_url('PUT',     '^employees/(?P<employee_id>\\d+)$', 'update_employee')\n        verb_url('DELETE',  '^employees/(?P<employee_id>\\d+)$', 'delete_employee'),\n        \n        url('^employees/(?P<employee_id>\\d+)/', include(paychecks)),\n    )\n    \nRerouting through wrappers\n--------------------------\n\nYou can configure a list of view wrappers for a set of url patterns::\n\n    from reroute import reroute_patterns\n    \n    def params_wrapper(view, request, *args, **kwargs):\n        # Provide uniform access of GET, POST or PUT parameters\n        # through request.PARAMS\n        \n        if request.method == 'POST':\n            request.PARAMS = dict(request.POST.iteritems())\n        else:\n            request.PARAMS = dict(request.GET.iteritems())\n            \n        return view(request, *args, **kwargs)\n    \n    urlpatterns = reroute_patterns([params_wrapper], 'myapp.views',\n        verb_url('GET', '^restful$', 'restful_view'),\n        verb_url('PUT', '^restful$', 'another_restful_view')   \n    )\n    \nA wrapper is any callable that takes the arguments: view, request, \\*args, \\*\\*kwargs::\n    \n    class Wrapper(object):\n        def __call__(self, view, request, *args, **kwargs):\n            return view(request, *args, **kwargs)\n            \n    urlpatterns = reroute_patterns([Wrapper()], 'myapp.views',\n        verb_url('GET', '^restful$', 'restful_view'),\n        verb_url('PUT', '^restful$', 'another_restful_view')   \n    )\n    \nAnd you can even get fancy and create your own drop-in replacement for patterns::\n\n    from functools import partial\n    import logging\n    \n    def wrapper_one(view, request, *args, **kwargs):\n        logging.debug(\"wrapper one\")\n        return view(request, *args, **kwargs)\n    \n    def wrapper_two(view, request, *args, **kwargs):\n        logging.debug(\"wrapper two\")\n        return view(request, *args, **kwargs)\n        \n    patterns = partial(reroute_patterns, [wrapper_one, wrapper_two])\n    \n    urlpatterns = patterns('myapp.views',\n        verb_url('GET', '^restful$', 'restful_view'),\n        verb_url('PUT', '^restful$', 'another_restful_view')   \n    )  \n\nAuthor\n------\n\ndjango-reroute was written by Mark Sandstrom.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/dnerdy/django-reroute",
    "keywords": "reroute,django,http,rest,route,routing,dispatch,wrapper",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-reroute",
    "package_url": "https://pypi.org/project/django-reroute/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-reroute/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/dnerdy/django-reroute"
    },
    "release_url": "https://pypi.org/project/django-reroute/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A drop-in replacement for django.conf.urls.defaults which supports HTTP verb dispatch and view wrapping.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 790474,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b07ddf567bf2712920004b0865e225f70902bc0a50f4795ef42d7b637e8f6d1b",
        "md5": "866bee8a92105f5c777e090dc5bb1668",
        "sha256": "baae8d89a425e7cdf4b53a33fd8b4650cb8d9653be55485387ec2bb663e71737"
      },
      "downloads": -1,
      "filename": "django-reroute-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "866bee8a92105f5c777e090dc5bb1668",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7438,
      "upload_time": "2011-02-08T19:16:29",
      "upload_time_iso_8601": "2011-02-08T19:16:29.052208Z",
      "url": "https://files.pythonhosted.org/packages/b0/7d/df567bf2712920004b0865e225f70902bc0a50f4795ef42d7b637e8f6d1b/django-reroute-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}