{
  "info": {
    "author": "Andrew Mackowski",
    "author_email": "andrew@veryapt.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# django-phone-field\nLightweight model and form field for phone numbers in Django\n\n* View and edit phone numbers in forms and the Django admin in pretty format: `(415) 123-4567`\n* Store all phone numbers canonically in the database for easy searching & uniqueness: `+14151234567`\n* Built-in support for simple extensions: `(415) 123-4567, press 88`\n* Doesn't choke on international numbers (but doesn't format them, either)\n* Automatically format phone numbers in templates\n\nThis package is simple, lightweight, and without dependencies. However, it doesn't attempt to solve fancy\nproblems or deal with international phone numbers. For a full-featured phone number package, take a look at\n[`django-phonenumber-field`](https://github.com/stefanfoulis/django-phonenumber-field).\n\n## Installation\n\nThis package is designed for Python 3 and Django 1.10+. Install via:\n\n```\npip install django-phone-field\n```\n\nThen add `'phone_field'` to your `INSTALLED_APPS` setting.\n\n## Usage\n\nIn your `models.py`:\n\n```\nfrom django.db import models\nfrom phone_field import PhoneField\n\n\nclass MyModel(models.Model):\n    name = models.CharField(max_length=128)\n    phone = PhoneField(blank=True, help_text='Contact phone number')\n```\n\n`PhoneField` accepts standard options for a Django `CharField`. By default it sets `max_length=31`. Feel\nfree to override this, set `blank=True`, etc. as you would otherwise.\n\nThere is one special argument, `E164_only=False`, which adds a form validator to only accept numbers in\nthe E164 format (currently, only supported for US phone numbers).\n\nIn your template:\n\n```\nUser {{ obj.name }} has phone number {{ obj.phone }}\n```\n\nResult:\n\n```\nUser Ted has phone number (415) 123-1233\n```\n\n## Database representation\n\n`PhoneField` attempts to coerce all phone numbers to the following format:\n\n```\n+[country code][number]x[extension]\n+12223334444x55\n```\n\nwhere the extension part is optional. If the input phone number can't be coerced to this\nformat, `PhoneField` gives up and simply stores it as-is.\n\nBecause all phone numbers are stored without formatting, you can set this field to be unique\non a Django model and it will actually work.\n\n## Extras\n\nUse the `|phone` template filter to attempt to display a formatted phone number from arbitrary text. Use\nthe `|raw_phone` template filter to display the raw, un-formatted value.\n\nUse property `.is_E164` to check if a PhoneNumber object is in E164 format.\n\nAlso provided are `.is_standard` (E164 but with extensions allowed) and `.is_usa`.\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VeryApt/django-phone-field/",
    "keywords": "django phonenumber phone number model field",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-phone-field",
    "package_url": "https://pypi.org/project/django-phone-field/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-phone-field/",
    "project_urls": {
      "Homepage": "https://github.com/VeryApt/django-phone-field/"
    },
    "release_url": "https://pypi.org/project/django-phone-field/1.5.1/",
    "requires_dist": [
      "Django (>=1.10)"
    ],
    "requires_python": "",
    "summary": "Lightweight model and form field for phone numbers in Django",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7439568,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3787eadc25d169d394c10327e7d51b1cfa93e282d7a780e9dab2ec75b784b57",
        "md5": "778a9c40f13ad7e0d3c4b67d56d82653",
        "sha256": "137f5419036de5cb41282b2cc192d0571113bb622253b2fc4262cc721f9f0485"
      },
      "downloads": -1,
      "filename": "django_phone_field-1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "778a9c40f13ad7e0d3c4b67d56d82653",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8817,
      "upload_time": "2018-02-23T19:13:29",
      "upload_time_iso_8601": "2018-02-23T19:13:29.795523Z",
      "url": "https://files.pythonhosted.org/packages/b3/78/7eadc25d169d394c10327e7d51b1cfa93e282d7a780e9dab2ec75b784b57/django_phone_field-1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef6d3cf5b8cc930974950ab2a01f52d135626a8a08a183aabbb16a6d185d6592",
        "md5": "2018189e060fb64a7337b442f56ecb9e",
        "sha256": "a492fa7341bd99bd2d728f1d3a18642e76287830d6a433816694e8aa4335198b"
      },
      "downloads": -1,
      "filename": "django-phone-field-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2018189e060fb64a7337b442f56ecb9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5148,
      "upload_time": "2018-02-23T19:13:30",
      "upload_time_iso_8601": "2018-02-23T19:13:30.951039Z",
      "url": "https://files.pythonhosted.org/packages/ef/6d/3cf5b8cc930974950ab2a01f52d135626a8a08a183aabbb16a6d185d6592/django-phone-field-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}