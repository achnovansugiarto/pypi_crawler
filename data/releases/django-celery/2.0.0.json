{
  "info": {
    "author": "Ask Solem",
    "author_email": "ask@celeryproject.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Communications",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "===============================================\n django-celery - Celery Integration for Django\n===============================================\n\n.. image:: http://cloud.github.com/downloads/ask/celery/celery_favicon_128.png\n\n:Version: 2.0.0\n:Web: http://celeryproject.org/\n:Download: http://pypi.python.org/pypi/django-celery/\n:Source: http://github.com/ask/django-celery/\n:Keywords: celery, task queue, job queue, asynchronous, rabbitmq, amqp, redis,\n  python, django, webhooks, queue, distributed\n\n--\n\ndjango-celery provides Celery integration for Django; Using the Django ORM\nand cache backend for storing results, autodiscovery of task modules\nfor applications listed in ``INSTALLED_APPS``, and more.\n\n`Celery`_ is a task queue/job queue based on distributed message passing.\nIt is focused on real-time operation, but supports scheduling as well.\n\nThe execution units, called tasks, are executed concurrently on a single or\nmore worker servers. Tasks can execute asynchronously (in the background) or\nsynchronously (wait until ready).\n\nCelery is already used in production to process millions of tasks a day.\n\nCelery is written in Python, but the protocol can be implemented in any\nlanguage. It can also `operate with other languages using webhooks`_.\n\nThe recommended message broker is `RabbitMQ`_, but support for `Redis`_ and\ndatabases (`SQLAlchemy`_ / `Django`_) is also available.\n\n.. _`Celery`: http://celeryproject.org/\n.. _`RabbitMQ`: http://www.rabbitmq.com/\n.. _`Redis`: http://code.google.com/p/redis/\n.. _`Django`: http://www.djangoproject.org/\n.. _`SQLAlchemy`: http://www.sqlalchemy.org/\n.. _`operate with other languages using webhooks`:\n    http://ask.github.com/celery/userguide/remote-tasks.html\n\n.. contents::\n    :local:\n\nUsing django-celery\n===================\n\nTo enable ``django-celery`` for your project you need to add ``djcelery`` to\n``INSTALLED_APPS``::\n\n    INSTALLED_APPS += (\"djcelery\", )\n\nEverything works the same as described in the `Celery User Manual`_, except you\nneed to invoke the programs through ``manage.py``:\n\n=====================================  =====================================\n**Program**                            **Replace with**\n=====================================  =====================================\n``celeryd``                            ``python manage.py celeryd``\n``celerybeat``                         ``python manage.py celerybeat``\n``camqadm``                            ``python manage.py camqadm``\n``celeryev``                           ``python manage.py celeryev``\n=====================================  =====================================\n\nThe other main difference is that configuration values are stored in \nyour Django projects' ``settings.py`` module rather than in\n``celeryconfig.py``.\n\nIf you're trying celery for the first time you should start by reading\n`Getting started with django-celery`_\n\nSpecial note for mod_wsgi users\n-------------------------------\n\nIf you're using ``mod_wsgi`` to deploy your Django application you need to\ninclude the following in your ``.wsgi`` module::\n\n    import os\n    os.environ[\"CELERY_LOADER\"] = \"django\"\n\nDocumentation\n=============\n\nThe `Celery User Manual`_ contains user guides, tutorials and an API\nreference. Also the `django-celery documentation`_, contains information\nabout the Django integration.\n\n.. _`django-celery documentation`:\n    http://celeryproject.org/docs/django-celery/\n.. _`Celery User Manual`: http://celeryproject.org/docs/\n.. _`Getting started with django-celery`:\n    http://celeryq.org/docs/django-celery/getting-started/first-steps-with-django.html\n\nInstallation\n=============\n\nYou can install ``django-celery`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install django-celery\n\nTo install using ``easy_install``,::\n\n    $ easy_install django-celery\n\nDownloading and installing from source\n--------------------------------------\n\nDownload the latest version of ``django-celery`` from\nhttp://pypi.python.org/pypi/django-celery/\n\nYou can install it by doing the following,::\n\n    $ tar xvfz django-celery-0.0.0.tar.gz\n    $ cd django-celery-0.0.0\n    $ python setup.py build\n    # python setup.py install # as root\n\nUsing the development version\n------------------------------\n\nYou can clone the git repository by doing the following::\n\n    $ git clone git://github.com/ask/django-celery.git\n\nGetting Help\n============\n\nMailing list\n------------\n\nFor discussions about the usage, development, and future of celery,\nplease join the `celery-users`_ mailing list. \n\n.. _`celery-users`: http://groups.google.com/group/celery-users/\n\nIRC\n---\n\nCome chat with us on IRC. The `#celery`_ channel is located at the `Freenode`_\nnetwork.\n\n.. _`#celery`: irc://irc.freenode.net/celery\n.. _`Freenode`: http://freenode.net\n\n\nBug tracker\n===========\n\nIf you have any suggestions, bug reports or annoyances please report them\nto our issue tracker at http://github.com/ask/django-celery/issues/\n\nWiki\n====\n\nhttp://wiki.github.com/ask/celery/\n\nContributing\n============\n\nDevelopment of ``django-celery`` happens at Github:\nhttp://github.com/ask/django-celery\n\nYou are highly encouraged to participate in the development\nof ``celery``. If you don't like Github (for some reason) you're welcome\nto send regular patches.\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/django-celery/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://celeryproject.org",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-celery",
    "package_url": "https://pypi.org/project/django-celery/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-celery/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://celeryproject.org"
    },
    "release_url": "https://pypi.org/project/django-celery/2.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Celery Integration.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5676052,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a1a6fb3c2af00226f13be8edb7be5d2c94cf6ba5bc451dcf4cf5ca8ee924d01",
        "md5": "4dac1b75ac6ed75a490d1c0ddbf5022f",
        "sha256": "1b6b12f91a72958c6532c383e0160ec1cdcba3352b679d1362cbafda35aea2d8"
      },
      "downloads": -1,
      "filename": "django-celery-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4dac1b75ac6ed75a490d1c0ddbf5022f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 510190,
      "upload_time": "2010-07-02T14:19:26",
      "upload_time_iso_8601": "2010-07-02T14:19:26.275705Z",
      "url": "https://files.pythonhosted.org/packages/0a/1a/6fb3c2af00226f13be8edb7be5d2c94cf6ba5bc451dcf4cf5ca8ee924d01/django-celery-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}