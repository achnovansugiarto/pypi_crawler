{
  "info": {
    "author": "fakefred",
    "author_email": "fakefred@protonmail.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Topic :: Multimedia :: Graphics"
    ],
    "description": "# memethesis-cli\n\n![Upload Python Package](https://github.com/fakefred/memethesis-cli/workflows/Upload%20Python%20Package/badge.svg) <a href=\"https://liberapay.com/fakefred/donate\"><img alt=\"Donate using Liberapay\" src=\"http://img.shields.io/liberapay/receives/fakefred.svg?logo=liberapay\"></a>\n\n## Updates in 3.0.0-beta\n\nAutomation has reached a new level where **all** existing formats are fully\nautomated by memethesizers for their respective compositions,\nincluding `single`, `vertical`, and `horizontal`.\nAdding new formats are now easier than ever,\nwhich is why this repo is open to issues and PR's for new formats,\ninstead of the author writing new scripts for each one of them because\neveryone has limited energy.\nIf you would like a new format and could afford the time and effort to provide\nthe data, please open a PR;\nif you cannot, open an issue.\nThe former type of contributors should pay attention to such issues,\nand help with them when possible.\n\n## Help\n\n### Installing\n\n```\n$ cd ~ # use $HOME\n$ git clone https://github.com/fakefred/memethesis-cli # will clone the git repo\n$ cd memethesis-cli # will go into directory\n$ python3 setup.py bdist_wheel  # will generate .whl\n$ pip3 install dist/memethesis* # will install the newly-created memethesis.whl created above\n```\n\n### Usage\n\n> This part assumes you have a working python 3.x environment,\n> which `python` refers to. If your OS uses `python3`, you are smart enough.\n\n```\n$ memethesis -h\nMemethesis CLI - All Your Memes Are Belong To Us!\n\narguments:\n  -h, --help            show this help message and exit\n  -l, --list            show a list of meme formats and exit\n  -i, --interactive     interactive mode (certain formats only)\n\n  -f, --format FORMAT   the meme format to use\n  -c, --caption CAPTION caption text to add above your meme\n  --font FONT           the font to use for body panels\n\n  -o, --output OUTPUT   save the meme as (jpg/png)\n  -p, --preview         display meme without saving it,\n                        unless -o/--output is specified\n\nusage:\n  # command mode\n  $ memethesis -f FORMAT [-p|-o filename] --flag0 TEXT0 --flag1 TEXT1 ...\n\n  # remember to wrap spaced strings in quotes\n  # example:\n  $ memethesis -f drake -o meme.png --dislike 'one thing' --like 'another thing'\n\n  # interactive mode\n  $ memethesis -i\n```\n\n## Guide for new formats\n\n`cd` to `./memethesis/meme/res/template`. Create a directory named after your\nmeme. Create `format.yml` inside the dir you created.\n\n### `formats.yml`\n\n#### Canonical documentation\n\n```yml\n# Keywords wrapped in <square brackets> are to be modified on demand;\n# others are hardcoded. Starred (*) keywords are optional.\n<name>:  # The flag you use for the meme format\n# For example, if you name it 'drake' it is accessed via '-f drake'\n  composition: vertical|horizontal|single\n  # Denotes how the meme is made: stacked top to bottom,\n  # laid side by side, or a single panel\n  # Respective examples: drake, womanyelling, pigeon\n  panels:\n    # ^ When composition == 'single', things put here\n    # are textboxes instead of panels, which are pasted on one panel\n    <name>:  # < Flag for this panel/textbox\n    # For example, if you named your panel/textbox 'dislike'\n    # it is accessed via '--dislike <text>'\n    # Make your panel/textbox as unique as possible,\n    # and if you can, make it short and descriptive.\n    # IMPORTANT: flag names CAN collide. Make your flag different from\n    # all others.\n      description*: <description>\n      # ^ Shown in --list and, if the composition is not single,\n      # in --interactive\n      image: <dir>/<image>\n      # ^ Image path relative to ./memethesis/meme/res/template/\n      textbox: [370, 12, 400, 250]\n      # ^ Textbox position, in left, top, width, height\n      font*: notosans|notosansmono|impact|comicsans\n      # ^ Default font for the template\n      # (memethesis assumes notosans if none; see `fonts.py`)\n      # Overridden when '--font' is specified in command mode\n      style*: stroke\n      # ^ Use 'stroke' if default font is impact for best effects\n    <name>:\n      # ...\n    # ...\n<name>:  # You can combine multiple templates into one dir,\n# but only do that when they're relevant and inseparable\n# ...\n```\n\n#### Example\n\nHere is an tested example, from the drake format:\n\n```yml\ndrake:\n  composition: vertical\n  panels:\n    dislike:\n      description: Drake dislike\n      image: drake/drake_dislike.jpg\n      textbox: [370, 12, 400, 250]\n    like:\n      description: Drake like\n      image: drake/drake_like.jpg\n      textbox: [370, 20, 400, 250]\n```\n\nHere are a few points to follow:\n\n- Make the directory and files distinguishable from others or potential ones:\n  for example, `spiderman` serves as a poor identifier for meme formats because there are countless spiderman memes.\n- Keep the image resolution moderately high. 800px wide is enough.\n  Don't scale up too much.\n- Don't include whitespace in filenames and yml keywords.\n- Use lower case as default, unless capital ones are necessary.\n- Test before opening a PR. Ensure the textboxes are right by feeding it long\n  strings like `'mm mm mm mm mm mm mm mm mm mm mm mm mm mm mm mm'`.\n  I will clone your fork and test personally.\n- If you ensure the test passes, add a command you use to test your format to\n  `test.sh` in the root dir of the project.\n\n## Debugging\n\n```bash\n[make edits]\n# to test by running module\n$ python -m memethesis.__main__ [args]\n# to test all formats with shell script\n$ sudo chmod +x test.sh\n$ ./test.sh\n# to test by installing wheel\n$ python setup.py bdist_wheel  # will generate .whl\n$ pip install dist/memethesis-[something].whl\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fakefred/memethesis-cli",
    "keywords": "meme",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memethesis",
    "package_url": "https://pypi.org/project/memethesis/",
    "platform": "",
    "project_url": "https://pypi.org/project/memethesis/",
    "project_urls": {
      "Homepage": "https://github.com/fakefred/memethesis-cli",
      "LiberaPay": "https://liberapay.com/fakefred/donate"
    },
    "release_url": "https://pypi.org/project/memethesis/3.2.1/",
    "requires_dist": [
      "PyYAML (>=5.1)",
      "Pillow",
      "PyInquirer",
      "colored"
    ],
    "requires_python": ">=3.5",
    "summary": "A CLI tool to visualize your memes",
    "version": "3.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6657735,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78e39d0b3b4a685bfe4a27087b5f0c047e319acf13acba3fc52e3f90a012e734",
        "md5": "191d2d0beb4b0d397d9c1d164b32068e",
        "sha256": "f86c468ae5c239affa3b912093f4cb245e1e76dc1b8f35e3c0e9e9dfdd7746e4"
      },
      "downloads": -1,
      "filename": "memethesis-3.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "191d2d0beb4b0d397d9c1d164b32068e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 2713624,
      "upload_time": "2020-02-19T02:02:47",
      "upload_time_iso_8601": "2020-02-19T02:02:47.000516Z",
      "url": "https://files.pythonhosted.org/packages/78/e3/9d0b3b4a685bfe4a27087b5f0c047e319acf13acba3fc52e3f90a012e734/memethesis-3.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b9de82b59421c5c2cbd68b08a736ad297ac0f7508ddab7751a7bf60968e016d",
        "md5": "5257c34004d8ff38148e2dcb7e99cb35",
        "sha256": "92ef4f4b5c30f020d9cc96e46199ba6143cd97b3ed0e4d6c5aae5315087360c8"
      },
      "downloads": -1,
      "filename": "memethesis-3.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5257c34004d8ff38148e2dcb7e99cb35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 2700375,
      "upload_time": "2020-02-19T02:02:48",
      "upload_time_iso_8601": "2020-02-19T02:02:48.785827Z",
      "url": "https://files.pythonhosted.org/packages/5b/9d/e82b59421c5c2cbd68b08a736ad297ac0f7508ddab7751a7bf60968e016d/memethesis-3.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}