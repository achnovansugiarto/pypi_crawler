{
  "info": {
    "author": "Avelino @ KF",
    "author_email": "avelino@kasfactory.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django REST File Manager\n\nA package that provides authenticated file management (upload/download) using REST Framework and Amazon S3 (optionally)\n\nInstall app:\n\n````bash\npip install djangorestfilemanager\n````\n\nAdd in installed apps:\n\n````python\nINSTALLED_APPS = [..., 'rest_framework', 'django_filters', 'djangorestfilemanager.apps.DjangoRestFileManagerConfig']\n\n````\n\n/proyect/settings.py\n\nSpecific app settings, by default will save in /files/.... \n````python\nREST_FILE_MANAGER = {\n    'UPLOADS_DIR': '...'\n}\n````\n\nS3 storage setup. \n\nIf AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_STORAGE_BUCKET_NAME is not provided, files will save in local storage\n```python\nSTATIC_URL = '/static/'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media', 'files')\n\nS3_STORAGE = False\nAWS_DEFAULT_ACL = None\n\nif env('AWS_ACCESS_KEY_ID') and env('AWS_SECRET_ACCESS_KEY') and env(\n        'AWS_STORAGE_BUCKET_NAME'):\n    S3_STORAGE = True\n    AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')\n    AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')\n    AWS_LOCATION = 'media'\n    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\n    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}\n    AWS_S3_FILE_OVERWRITE = False\n    AWS_S3_ENCRYPTION = True\n    AWS_IS_GZIPPED = True\n    GZIP_CONTENT_TYPES = (\n        'application/pdf', 'application/json', 'text/csv', 'application/xml', 'application/xhtml+xml',\n        'application/msword', 'application/vnd.oasis.opendocument.presentation',\n        'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.text',\n        'application/vnd.ms-powerpoint', 'application/x-rar-compressed', 'application/xhtml+xml',\n        'application/vnd.ms-excel', 'application/xml', 'application/zip',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    )\n```\n\n    \n\n.env:\n\n```.env\nAWS_DEFAULT_ACL=''\nAWS_ACCESS_KEY_ID=''\nAWS_SECRET_ACCESS_KEY=''\nAWS_STORAGE_BUCKET_NAME=''\nAWS_CACHE_CONTROL=86400\nAWS_LOCATION=''\nAWS_S3_FILE_OVERWRITE=False\n```\n\nurls.py\n\n\n```python\nfrom djangorestfilemanager.urls import router as file_manager_router\n\nurlpatterns = [\n    ...,\n    path('', include(file_manager_router.urls))\n\n]\n```\n\n#API REST ENDPOINTS:\n\nPermission: Authentication is required. \n\nIf user is superuser, can download all files.\n\nIf user is file owner, that user can download this file.\n\nIf file is shared (share==True) and user have perms, can download this file. \n\n\nUpload File\n\n|  param      |  description                         |\n| -------     |  -----------                         |\n| url | /{{api}}/files/ | \n| methods | post |\n| --- | --- |\n| file        |  file object                         |\n| type        |  string, max length 10 not required  |\n| permission  |  string content_type.model +.+ permission.name  Example: user.can_create_user, default '' |\n| share       |  bool, default true |\n| data        |  jsonfield     |\n| --- | --- |\n| return_data | uuid |\n\n\nDownload File\n\n| param | description |\n| ----- | ----------- |\n|  url  |      /{{api}}/files/{{uuid}}/       |\n| --- | --- |\n|  methods  |     get    |\n| --- | --- |\n|  return  |      download file.    |\n\n\n#OVERRIDE ENDPOINTS\n```python\nDJANGO_REST_FILE_MANAGER_SERIALIZERS = {\n    'FILE_SERIALIZER': '...',\n    'FILE_VIEW_SERIALIZER': '...',\n}\n```\n#OVERRIDE SETTINGS\n```\nREST_FILE_MANAGER = {\n    'UPLOADS_DIR': os.environ.get('UPLOADS_DIR', default='media/'),\n    'STATUS_CHOICES': (\n        (PENDING, 'Pending'),\n        ....\n    )\n    'DEFAULT_CHOICE':'' #STRING VALUE,\n    'DEFAULT_SHAREABLE': Boolean, default True\n}\n```\n# How to update to Pypi\n\nWhen a new release is ready we have to make the package. Exec the following command (Remember to update setup.py with the current version of the package.)\n\n```\npython setup.py sdist\n```\n\nAfter that, we have to push our package to Pypi with `twine` (the first time we will have to install it)\n\n```\ntwine upload dist/*\n```\n\nThis command will upload every version existing on dist folder, we can specify one changing `dist/*` to the new dist file `dist/package_filename.gz`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/kas-factory/packages/django-rest-file-manager",
    "keywords": "",
    "license": "COPYRIGHT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangorestfilemanager",
    "package_url": "https://pypi.org/project/djangorestfilemanager/",
    "platform": "",
    "project_url": "https://pypi.org/project/djangorestfilemanager/",
    "project_urls": {
      "Homepage": "https://gitlab.com/kas-factory/packages/django-rest-file-manager"
    },
    "release_url": "https://pypi.org/project/djangorestfilemanager/1.1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django REST File Manager.",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11137617,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c878fab9554ce5252793929313ef51aadbfdcd0677fd236ea28c29a5e20c6f1e",
        "md5": "90883b95536455922b748cc81fc55cc8",
        "sha256": "71b144f5a4dfea673118dafcbd63e24655d110790f4a5206bd44b7165905c983"
      },
      "downloads": -1,
      "filename": "djangorestfilemanager-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "90883b95536455922b748cc81fc55cc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11048,
      "upload_time": "2020-05-05T07:22:07",
      "upload_time_iso_8601": "2020-05-05T07:22:07.242192Z",
      "url": "https://files.pythonhosted.org/packages/c8/78/fab9554ce5252793929313ef51aadbfdcd0677fd236ea28c29a5e20c6f1e/djangorestfilemanager-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}