{
  "info": {
    "author": "Paul Sanders",
    "author_email": "psanders1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Meilisearch Python Async\n\n[![Tests Status](https://github.com/sanders41/meilisearch-python-async/workflows/Testing/badge.svg?branch=main&event=push)](https://github.com/sanders41/meilisearch-python-async/actions?query=workflow%3ATesting+branch%3Amain+event%3Apush)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/sanders41/meilisearch-python-async/main.svg)](https://results.pre-commit.ci/latest/github/sanders41/meilisearch-python-async/main)\n[![Coverage](https://codecov.io/github/sanders41/meilisearch-python-async/coverage.svg?branch=main)](https://codecov.io/gh/sanders41/meilisearch-python-async)\n[![PyPI version](https://badge.fury.io/py/meilisearch-python-async.svg)](https://badge.fury.io/py/meilisearch-python-async)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/meilisearch-python-async?color=5cc141)](https://github.com/sanders41/meilisearch-python-async)\n\nMeilisearch Python Async is a Python async client for the [Meilisearch](https://github.com/meilisearch/meilisearch) API. Meilisearch also has an official [Python client](https://github.com/meilisearch/meilisearch-python).\n\nWhich of the two clients to use comes down to your particular use case. The purpose for this async client is to allow for non-blocking calls when working in async frameworks such as [FastAPI](https://fastapi.tiangolo.com/), or if your own code base you are working in is async. If this does not match your use case then the official client will be a better choice.\n\n## Installation\n\nUsing a virtual environmnet is recommended for installing this package. Once the virtual environment is created and activated install the package with:\n\n```sh\npip install meilisearch-python-async\n```\n\n## Run Meilisearch\n\nThere are several ways to [run Meilisearch](https://docs.meilisearch.com/reference/features/installation.html#download-and-launch).\nPick the one that works best for your use case and then start the server.\n\nAs as example to use Docker:\n\n```sh\ndocker pull getmeili/meilisearch:latest\ndocker run -it --rm -p 7700:7700 getmeili/meilisearch:latest ./meilisearch --master-key=masterKey\n```\n\n## Useage\n\n### Add Documents\n\n- Note: `client.index(\"books\") creates an instance of an Index object but does not make a network call to send the data yet so it does not need to be awaited.\n\n```py\nfrom meilisearch_python_async import Client\n\nasync with Client('http://127.0.0.1:7700', 'masterKey') as client:\n    index = client.index(\"books\")\n\n    documents = [\n        {\"id\": 1, \"title\": \"Ready Player One\"},\n        {\"id\": 42, \"title\": \"The Hitchhiker's Guide to the Galaxy\"},\n    ]\n\n    await index.add_documents(documents)\n```\n\nThe server will return an update id that can be used to [get the status](https://docs.meilisearch.com/reference/api/updates.html#get-an-update-status)\nof the updates. To do this you would save the result response from adding the documets to a variable,\nthis will be a UpdateId object, and use it to check the status of the updates.\n\n```py\nupdate = await index.add_documents(documents)\nstatus = await client.index('books').get_update_status(update.update_id)\n```\n\n### Basic Searching\n\n```py\nsearch_result = await index.search(\"ready player\")\n```\n\n### Base Search Results: SearchResults object with values\n\n```py\nSearchResults(\n    hits = [\n        {\n            \"id\": 1,\n            \"title\": \"Ready Player One\",\n        },\n    ],\n    offset = 0,\n    limit = 20,\n    nb_hits = 1,\n    exhaustive_nb_hits = bool,\n    facets_distributionn = None,\n    processing_time_ms = 1,\n    query = \"ready player\",\n)\n```\n\n### Custom Search\n\nInformation about the parameters can be found in the [search parameters](https://docs.meilisearch.com/reference/features/search_parameters.html) section of the documentation.\n\n```py\nindex.search(\n    \"guide\",\n    attributes_to_highlight=[\"title\"],\n    filters=\"book_id > 10\"\n)\n```\n\n### Custom Search Results: SearchResults object with values\n\n```py\nSearchResults(\n    hits = [\n        {\n            \"id\": 42,\n            \"title\": \"The Hitchhiker's Guide to the Galaxy\",\n            \"_formatted\": {\n                \"id\": 42,\n                \"title\": \"The Hitchhiker's Guide to the <em>Galaxy</em>\"\n            }\n        },\n    ],\n    offset = 0,\n    limit = 20,\n    nb_hits = 1,\n    exhaustive_nb_hits = bool,\n    facets_distributionn = None,\n    processing_time_ms = 5,\n    query = \"galaxy\",\n)\n```\n\n## Documentation\n\nSee our [docs](https://meilisearch-python-async.paulsanders.dev) for the full documentation.\n\n## Contributing\n\nContributions to this project are welcome. If you are interesting in contributing please see our [contributing guide](CONTRIBUTING.md)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sanders41/meilisearch-python-async",
    "keywords": "meilisearch,async,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meilisearch-python-async",
    "package_url": "https://pypi.org/project/meilisearch-python-async/",
    "platform": null,
    "project_url": "https://pypi.org/project/meilisearch-python-async/",
    "project_urls": {
      "Documentation": "https://meilisearch-python-async.paulsanders.dev",
      "Homepage": "https://github.com/sanders41/meilisearch-python-async",
      "Repository": "https://github.com/sanders41/meilisearch-python-async"
    },
    "release_url": "https://pypi.org/project/meilisearch-python-async/1.0.0/",
    "requires_dist": [
      "httpx (>=0.17)",
      "pydantic (>=1.8)",
      "aiofiles (>=0.7)",
      "camel-converter (>=1.0.0)",
      "PyJWT (>=2.3.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A Python async client for the Meilisearch API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17557160,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c33d0b806d3955fbaea35b3bcabaa11bab502efdbf2b288f930689deb7425871",
        "md5": "c8210d1207e6a5c7146a4c2885d818d9",
        "sha256": "d38450d45397ff74a67997bab5e4ed991abdcc56d4aab80d04b3ed4ae6b1311a"
      },
      "downloads": -1,
      "filename": "meilisearch_python_async-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8210d1207e6a5c7146a4c2885d818d9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 23819,
      "upload_time": "2023-02-06T13:31:02",
      "upload_time_iso_8601": "2023-02-06T13:31:02.803559Z",
      "url": "https://files.pythonhosted.org/packages/c3/3d/0b806d3955fbaea35b3bcabaa11bab502efdbf2b288f930689deb7425871/meilisearch_python_async-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c457a8e60f5f418f72a0937bcddcedfd407dc94e97c4cc80ef2119205ced3ad",
        "md5": "7bd43905dc7afa5fe223e34a5db0f5db",
        "sha256": "c182f1d2647495bb42ea0c5d194480cd8f8fd4ddef51846c9016cf73970ce4a8"
      },
      "downloads": -1,
      "filename": "meilisearch_python_async-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7bd43905dc7afa5fe223e34a5db0f5db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 20914,
      "upload_time": "2023-02-06T13:31:04",
      "upload_time_iso_8601": "2023-02-06T13:31:04.591641Z",
      "url": "https://files.pythonhosted.org/packages/6c/45/7a8e60f5f418f72a0937bcddcedfd407dc94e97c4cc80ef2119205ced3ad/meilisearch_python_async-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}