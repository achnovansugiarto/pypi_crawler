{
  "info": {
    "author": "Nikita Karamov",
    "author_email": "nick@karamoff.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Logging"
    ],
    "description": "# DoubleStreamHandler\n\n> A StreamHandler wrapper that outputs messages to different streams based on logLevel\n\n[![See on PyPI](https://badgen.net/pypi/v/double-stream-handler)](https://pypi.org/project/double-stream-handler/)\n[![Licenced under the BSD-3-Clause licence](https://badgen.net/pypi/license/double-stream-handler?label=licence)](LICENSE)\n![for Python 3.6 and later](https://badgen.net/pypi/python/double-stream-handler)\n\nLogging to the console is a nice feature to have, and Python's [`StreamHandler`](https://docs.python.org/3.9/library/logging.handlers.html#logging.StreamHandler) is of great help. However, it can only output to one stream at a time, and by default it's `stderr`.\n\nThis goes well with the default settings (`level=WARNING`), but it isn't good when you decide to output `INFO` messages as well.\n\nThis package prevents you from outputting non-error messages to `stderr` as well as from having to juggle with your output streams.\n\n## Usage\n\n```py\nimport logging\nfrom double_stream_handler import DoubleStreamHandler\n\n# create logger\nlogger = logging.getLogger()\nlogger.setLevel(logging.DEBUG)\n\n# create the handler\nch = DoubleStreamHandler()\n\n# you can customize the logger by providing different streams and level, from which\n# the stderr output will start\nfrom io import StringIO\ncustom_out, custom_err = (StringIO(), StringIO())\nch = DoubleStreamHandler(err_level=25, streams=(custom_out, custom_err))\n\n# set handler's level and add it to the logger\nch.setLevel(logging.INFO)\nlogger.addHandler(ch)\n\nlogger.debug(\"This is not printed\")\nlogger.info(\"This is printed to stdout\")\nlogger.error(\"This is printed to stderr\")\n```\n\n## Install\n\n**Requirements:** Python 3.6 or higher\n\nThis package is hosted on PyPI, so you can install it with your package manager of choice\n\n```sh\n# for Pip\npip install double-stream-handler\n```\n\n```sh\n# for Pipenv\npipenv install double-stream-handler\n```\n\n```sh\n# for Poetry\npoetry add double-stream-handler\n```\n\n```sh\n# for Poetry\nconda install double-stream-handler\n```\n\n## Licence\n\n[BSD-3-Clause](https://spdx.org/licenses/BSD-3-Clause.html) Â© 2021, Nikita Karamov\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NickKaramoff/DoubleStreamHandler/",
    "keywords": "logging,handler,StreamHandler",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "double-stream-handler",
    "package_url": "https://pypi.org/project/double-stream-handler/",
    "platform": "",
    "project_url": "https://pypi.org/project/double-stream-handler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/NickKaramoff/DoubleStreamHandler/issues",
      "Homepage": "https://github.com/NickKaramoff/DoubleStreamHandler/",
      "Repository": "https://github.com/NickKaramoff/DoubleStreamHandler/"
    },
    "release_url": "https://pypi.org/project/double-stream-handler/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "A StreamHandler wrapper that outputs messages to different streams based on logLevel",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14003664,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43c53dbd1affc2533ad69766d8430a2ffae481a8ee2bb3a42b2103604f0c5935",
        "md5": "141bd130692536f3a80ef76eb4d1959c",
        "sha256": "37dad2bc3bd62a3cc13c7a110efda35344bbbce3a97c945d3b58fe708753fb81"
      },
      "downloads": -1,
      "filename": "double_stream_handler-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "141bd130692536f3a80ef76eb4d1959c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 3855,
      "upload_time": "2021-05-23T11:56:47",
      "upload_time_iso_8601": "2021-05-23T11:56:47.747881Z",
      "url": "https://files.pythonhosted.org/packages/43/c5/3dbd1affc2533ad69766d8430a2ffae481a8ee2bb3a42b2103604f0c5935/double_stream_handler-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c7b07f715572e9bfe5ddbf9928e1774688b1cd18b817bb6e4f97ab8e12f1d3f",
        "md5": "d68c2f6c772d73f28473692a96129624",
        "sha256": "93c3c8c096296caddb90c2bee0eabfcbea63dbc0fbaf30894554b36443703ce7"
      },
      "downloads": -1,
      "filename": "double-stream-handler-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d68c2f6c772d73f28473692a96129624",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 3914,
      "upload_time": "2021-05-23T11:56:46",
      "upload_time_iso_8601": "2021-05-23T11:56:46.750088Z",
      "url": "https://files.pythonhosted.org/packages/0c/7b/07f715572e9bfe5ddbf9928e1774688b1cd18b817bb6e4f97ab8e12f1d3f/double-stream-handler-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}