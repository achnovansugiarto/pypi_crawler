{
  "info": {
    "author": "Nebutech",
    "author_email": "mukundh.bhushan@nebutech.in",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# MLGen\nMlGen is a tool which helps you to generate machine learning code with ease.\nMLGen uses a \".mlm\" file format which is a file with YML like syntax.\nThis tool as of now supports keras and tensorflow2.0(not fully supported)\n\n`pip install mlgen`\n\n## CLI commands--->\nTo init files  \n`mlgen -i | --init <file name>`   \nTo generate a specific template (optional)  \n`mlgen -g | --gen <neural network type> --backend | -be <lib to use> -t jupyter`  \nTo generate the ml python file  \n`mlgen -r . `\n\n## MLM file syntax --->\n\n**file**: name of the python file to be created\n\n**version**: version of python being used\n\n**backend**: which machine learning platform if to be used\n\n**gpu**: (bool) is gpu being used or not\n\n**data**: location of the dataset can be a URL/ folder location on machine\n\n**split**:(int) slipt in training and testing data. automatically converted to a decimal\n\n**coloumns_feature**: list of coloumns being used for the prediction\n\n**nill_data**: basic null data handling in non categorical datatypes. Available techiniques remove, mean, mode, median \n\n**nill_data_categorical**: basic null data handling for categorical datatypes. Available techiniques remove, max, min\n\n\n**NeuralNetwork_type**: the type of neural network being used such as ANN, CNN, LSTM\n<pre>\nlayer1:  \n    number_neurons: (int) number of neurons  \n    input_dim: input dimensions of the first layer  input \n    activation: activation function being used \n    dropout: (optional)  \n       dropout: (int) dropout percentage  \n       noise_shape: (int) noise shape (optional)  \n       seed: (int) seed value (optional)  \nlayer2:  \n    number_neurons: (int) number of neurons  \n    activation: activation function being used  \n    dropout: (optional)  \n        dropout: (int) dropout percentage  \n        noise_shape: (int) noise shape (optional)  \n        seed: (int) seed value (optional)  \n\n\ncompile:  \n    epochs: (int) number of epoch  \n    batch_size: (int) batch size  \n    verbose: (int) verbose value 0,1,2  \n    optimizer:  optimizer being used  \n    loss: loss type  \n    metrics: (array)  \n        - metrics type  \n\n\ncheckpoint: (optional)  \n    monitor: metrix type  \n    verbose: (int) batch size  \n    save_best_only: (bool)  \n    mode: mode such as min max  \n\n\nsave_model: (optional)  \n    file: file name to save model in  \n    save: save type. Available options weights and model\n</pre>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NebutechOpenSource/MLGen",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlgen",
    "package_url": "https://pypi.org/project/mlgen/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlgen/",
    "project_urls": {
      "Homepage": "https://github.com/NebutechOpenSource/MLGen"
    },
    "release_url": "https://pypi.org/project/mlgen/1.0.4/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "MLGen is a tool which helps you to generate machine learning code with ease.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5732291,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e44c6e3c3e753644ce85ad82f352d0a9230882bf9f173219e6679c3ba8c5373",
        "md5": "b1cc7be94c371237a18b5c127a5a7b92",
        "sha256": "1d19044c3e2b80ffe3d38ff28759154706956f9e30d586f59dd4558beffef851"
      },
      "downloads": -1,
      "filename": "mlgen-1.0.4-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1cc7be94c371237a18b5c127a5a7b92",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 12768,
      "upload_time": "2019-08-22T10:50:13",
      "upload_time_iso_8601": "2019-08-22T10:50:13.077724Z",
      "url": "https://files.pythonhosted.org/packages/7e/44/c6e3c3e753644ce85ad82f352d0a9230882bf9f173219e6679c3ba8c5373/mlgen-1.0.4-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b35d01ec077944bb1da842e61898156b71b20ea194a534f4a6878f55a5282bfd",
        "md5": "512b8f77bb22ad5a1cd9831fc8d01db6",
        "sha256": "f97b0c0e156505573ab4f5ff1a5fe335865a8fd6ee32a7cba6e5b665e3970ff2"
      },
      "downloads": -1,
      "filename": "mlgen-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "512b8f77bb22ad5a1cd9831fc8d01db6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8881,
      "upload_time": "2019-08-22T10:50:15",
      "upload_time_iso_8601": "2019-08-22T10:50:15.310813Z",
      "url": "https://files.pythonhosted.org/packages/b3/5d/01ec077944bb1da842e61898156b71b20ea194a534f4a6878f55a5282bfd/mlgen-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}