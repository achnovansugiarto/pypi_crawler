{
  "info": {
    "author": "Nebutech",
    "author_email": "mukundh.bhushan@nebutech.in",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# MLGen\nMlGen is a tool which helps you to generate machine learning code with ease.\nMLGen uses a \".mlm\" file format which is a file with YML like syntax.\nThis tool as of now supports keras and tensorflow2.0(not fully supported)\n\n`pip install mlgen`\n\n## CLI commands--->\nTo init files  \n`mlgen -i | --init <file name>`   \nTo generate a specific template (optional)  \n`mlgen -g | --gen <neural network type> --backend | -be <lib to use>`  \nTo generate the ml python file  \n`mlgen -r . `\n\n## MLM file syntax --->\n\n**file**: name of the python file to be created\n\n**version**: version of python being used\n\n**backend**: which machine learning platform if to be used\n\n**gpu**: (bool) is gpu being used or not\n\n**data**: location of the dataset can be a URL/ folder location on machine\n\n**split**:(int) slipt in training and testing data. automatically converted to a decimal\n\n**coloumns_feature**: list of coloumns being used for the prediction\n\n**nill_data**: basic null data handling in non categorical datatypes. Available techiniques remove, mean, mode, median \n\n**nill_data_categorical**: basic null data handling for categorical datatypes. Available techiniques remove, max, min\n\n\n**NeuralNetwork_type**: the type of neural network being used such as ANN, CNN, LSTM\n<pre>\nlayer1:  \n    number_neurons: (int) number of neurons  \n    input_dim: input dimensions of the first layer  input \n    activation: activation function being used \n    dropout: (optional)  \n       dropout: (int) dropout percentage  \n       noise_shape: (int) noise shape (optional)  \n       seed: (int) seed value (optional)  \nlayer2:  \n    number_neurons: (int) number of neurons  \n    activation: activation function being used  \n    dropout: (optional)  \n        dropout: (int) dropout percentage  \n        noise_shape: (int) noise shape (optional)  \n        seed: (int) seed value (optional)  \n\n\ncompile:  \n    epochs: (int) number of epoch  \n    batch_size: (int) batch size  \n    verbose: (int) verbose value 0,1,2  \n    optimizer:  optimizer being used  \n    loss: loss type  \n    metrics: (array)  \n        - metrics type  \n\n\ncheckpoint: (optional)  \n    monitor: metrix type  \n    verbose: (int) batch size  \n    save_best_only: (bool)  \n    mode: mode such as min max  \n\n\nsave_model: (optional)  \n    file: file name to save model in  \n    save: save type. Available options weights and model\n</pre>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NebutechOpenSource/MLGen",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlgen",
    "package_url": "https://pypi.org/project/mlgen/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlgen/",
    "project_urls": {
      "Homepage": "https://github.com/NebutechOpenSource/MLGen"
    },
    "release_url": "https://pypi.org/project/mlgen/1.0.1/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "MLGen is a tool which helps you to generate machine learning code with ease.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5732291,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "585b73e5634348d96836fe10a04aafe6f3576a7eaabcb724b769450ae2885906",
        "md5": "cc1294cbaa66a87fa490c89f6f379d13",
        "sha256": "5a3faee9751faa199ae4fc37774af3a80ce65bff40d13376ad640c99cce20133"
      },
      "downloads": -1,
      "filename": "mlgen-1.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc1294cbaa66a87fa490c89f6f379d13",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 12675,
      "upload_time": "2019-08-19T14:47:33",
      "upload_time_iso_8601": "2019-08-19T14:47:33.653009Z",
      "url": "https://files.pythonhosted.org/packages/58/5b/73e5634348d96836fe10a04aafe6f3576a7eaabcb724b769450ae2885906/mlgen-1.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1105820bfe083dbf160638d134e80962321179d5995690b41340834eaf9771fd",
        "md5": "2927282c4804fbe775ecf1e3cf6c12df",
        "sha256": "833d2589f860f150f9018c81b828088450b1872180f712409da61b74c429d217"
      },
      "downloads": -1,
      "filename": "mlgen-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2927282c4804fbe775ecf1e3cf6c12df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8748,
      "upload_time": "2019-08-19T14:47:35",
      "upload_time_iso_8601": "2019-08-19T14:47:35.827891Z",
      "url": "https://files.pythonhosted.org/packages/11/05/820bfe083dbf160638d134e80962321179d5995690b41340834eaf9771fd/mlgen-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}