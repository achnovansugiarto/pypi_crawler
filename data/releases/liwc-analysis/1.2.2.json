{
  "info": {
    "author": "Eric Wiener",
    "author_email": "ericwiener3@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# liwc-analysis\nThis package serves as a driver for the LIWC2015 .txt dictionary. The dictionary is not included and can be purchased directly from LIWC.\n\n## Usage\nThe usage is fairly straight forward. First import the package\n```python\nimport liwcanalysis\n```\n\nThen you need to create an instance of the LIWC analysis with the path to the .txt file.\n```python\nLIWCLocation = \"/Users/Eric/repositories/transcript-analysis/LIWC/LIWC.2015.all.txt\"\nLIWC = liwcanalysis.liwc(LIWCLocation)\n```\n\nThen you can pass in a list of strings to analyze to receive a tuple of results dictionary and count dictionary.\n```python\ntranscripts = {\n    \"Example1\": \"This is a single transcript. Red hat angry.\",\n    \"Example2\": \"This is another single transcript. Dog boy cat.\",\n}\n\nstr_list = []\nfor key in transcripts:\n    str_list.append(transcripts[key])\n\nresult_dics, count_dics = LIWC.analyze(str_list)\n```\n\nPlease note that `analyze()` can take either a single string argument or a list of strings. Example:\n```python\n# this is valid\nresult_dics, coutn_dics = LIWC.analyze([\"this is a string\", \"here is another\", \"one more\"])\n# this is also valid\nresult_dics, coutn_dics = LIWC.analyze(\"this is a string\")\n```\n\n`result_dics` is a list of dictionaries. Each dictionary corresponds to one of the strings passed into `analyze`. Each dictionary follows the form of `\"LIWC Category\": [list, of, words, matched]`. For instance the dictionary for one string might look something like:\n```\n{\n    \"FUNCTION\": [\"is\", \"a\"],\n    \"QUANT\": [\"single\"],\n    ...\n}\n```\n\n`count_dics` is very similar to `result_dics`, but instead of giving a list of words matched, it gives the length of each list of words matched:\n```\n{\n    \"FUNCTION\": 2,\n    \"QUANT\": 1,\n    ...\n}\n```\n\nFinally, you can print out the results to csv using:\n```python\nLIWC.print(output_dir, titles)\n```\nYou need to specify the output directory, as well as a list of titles for each string. See the full example for more details.\n\nYou can also retrieve an alphabetically sorted (A->Z) list of LIWC categories using `LIWC.get_categories()`.\n\n## Full Example\n```python\nimport liwcanalysis\n\ntranscripts = {\n    \"Example1\": \"This is a single transcript. Red hat angry.\",\n    \"Example2\": \"This is another single transcript. Dog boy cat.\",\n}\n\nstr_list = []\nfor key in transcripts:\n    strs.append(transcripts[key])\n\nLIWCLocation = \"/Users/Downloads/LIWC/LIWC.2015.all.txt\"\noutput_dir = \"/Path/to/my/file/\"\n\nLIWC = liwcanalysis.liwc(LIWCLocation)\nresult_dics, count_dics = LIWC.analyze(str_list)\nLIWC.print(output_dir, list(transcript.keys()))\n```\nUsing print will return the following tables:\n/Path/to/my/file/LIWCcounts.csv:\n\n| Category      | Example1 | Example2 |\n|---------------|----------|----------|\n| ADJ           | 1        | 1        |\n| ARTICLE       | 1        |          |\n| AUXVERB       | 1        | 1        |\n| FOCUSPRESENT  | 1        | 1        |\n| FUNCTION      | 2        | 2        |\n| IPRON         |          | 1        |\n| MALE          |          | 1        |\n| NUMBER        | 1        | 1        |\n| PRONOUN       |          | 1        |\n| QUANT         | 1        | 2        |\n| SOCIAL        |          | 1        |\n| VERB          | 1        | 1        |\n| WORK          | 1        | 1        |\n| TOTAL         | 8        | 8        |\n\n/Path/to/my/file/LIWCwords.csv:\n\n| Category      | Example1        | Example2              |\n|---------------|-----------------|-----------------------|\n| ADJ           | ['single']      | ['single']            |\n| ARTICLE       | ['a']           |                       |\n| AUXVERB       | ['is']          | ['is']                |\n| FOCUSPRESENT  | ['is']          | ['is']                |\n| FUNCTION      | ['is', 'a']     | ['is', 'another']     |\n| IPRON         |                 | ['another']           |\n| MALE          |                 | ['boy']               |\n| NUMBER        | ['single']      | ['single']            |\n| PRONOUN       |                 | ['another']           |\n| QUANT         | ['single']      | ['another', 'single'] |\n| SOCIAL        |                 | ['boy']               |\n| VERB          | ['is']          | ['is']                |\n| WORK          | ['transcript.'] | ['transcript.']       |\n\n/Path/to/my/file/LIWCrelativefreq.csv\n\n| Category      | Example1 | Example2 |\n|---------------|----------|----------|\n| ADJ           | 0.125    | 0.125    |\n| ARTICLE       | 0.125    |          |\n| AUXVERB       | 0.125    | 0.125    |\n| FOCUSPRESENT  | 0.125    | 0.125    |\n| FUNCTION      | 0.25     | 0.25     |\n| IPRON         |          | 0.125    |\n| MALE          |          | 0.125    |\n| NUMBER        | 0.125    | 0.125    |\n| PRONOUN       |          | 0.125    |\n| QUANT         | 0.125    | 0.25     |\n| SOCIAL        |          | 0.125    |\n| VERB          | 0.125    | 0.125    |\n| WORK          | 0.125    | 0.125    |\n\nPlease let me know if you have any questions or features requests. Please feel free to open up a pull request, issue, or shoot me an email at ericwiener3@gmail.com.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EricWiener/liwc-analysis",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liwc-analysis",
    "package_url": "https://pypi.org/project/liwc-analysis/",
    "platform": "",
    "project_url": "https://pypi.org/project/liwc-analysis/",
    "project_urls": {
      "Homepage": "https://github.com/EricWiener/liwc-analysis"
    },
    "release_url": "https://pypi.org/project/liwc-analysis/1.2.2/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Driver for LIWC2015 analysis. LIWC2015 dictionary not included.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4951317,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7fb0115e2b7bb0c6e9a2072b496a11e58b1c520cd15732030455d3537fe03824",
        "md5": "fd670b807e0663fb65e528667505b203",
        "sha256": "8a00fbf2fbf4fff587ef5f4ea15f2226a864d198399829a02fd600b29af052f3"
      },
      "downloads": -1,
      "filename": "liwc_analysis-1.2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fd670b807e0663fb65e528667505b203",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 5515,
      "upload_time": "2019-03-17T19:32:13",
      "upload_time_iso_8601": "2019-03-17T19:32:13.331382Z",
      "url": "https://files.pythonhosted.org/packages/7f/b0/115e2b7bb0c6e9a2072b496a11e58b1c520cd15732030455d3537fe03824/liwc_analysis-1.2.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6a162c441fa7f5ca136791702df3f8b02d95ce5cd9f894ae1a6306408383979",
        "md5": "a33be825c123c97b468e81cfe563d246",
        "sha256": "a97403b2961e7925e044d9ccb559579006677b1cff32db601bad6bddbe353c3c"
      },
      "downloads": -1,
      "filename": "liwc-analysis-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a33be825c123c97b468e81cfe563d246",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4509,
      "upload_time": "2019-03-17T19:32:16",
      "upload_time_iso_8601": "2019-03-17T19:32:16.054336Z",
      "url": "https://files.pythonhosted.org/packages/f6/a1/62c441fa7f5ca136791702df3f8b02d95ce5cd9f894ae1a6306408383979/liwc-analysis-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}