{
  "info": {
    "author": "Mechanisms Underlying Behavior Lab",
    "author_email": "mechunderlyingbehavior@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Locomotion - Quantitative Comparisons of Locomotive Behavior\n[![Tag](https://img.shields.io/github/v/tag/mechunderlyingbehavior/locomotion?logo=github)](https://github.com/mechunderlyingbehavior/locomotion/tags)\n[![PyPI](https://img.shields.io/pypi/v/locomotion)](https://pypi.org/project/locomotion/)\n[![Requirements](https://img.shields.io/requires/github/mechunderlyingbehavior/locomotion)](https://requires.io/github/mechunderlyingbehavior/locomotion/requirements/?branch=stable)\n[![License](https://img.shields.io/github/license/mechunderlyingbehavior/locomotion)](https://github.com/mechunderlyingbehavior/locomotion/blob/stable/LICENSE.md)\n\n`locomotion` is a Python package that provides computational geometric tools for\nquantitative comparisons of locomotive behaviors. The package makes use of curve\nand shape alignment techniques to accurately quantify (dis)similarities in\nanimal behavior without excluding inherent variability present between\nindividuals. \n\nFor more information on the techniques implemented in this repository, please\nread our [publication](https://www.nature.com/articles/s41598-019-52300-8).\n\n## Table of Contents\n* [Getting Started](#getting-started)\n  * [Installation and Requirements](#installation-and-requirements)\n* [Data Format](#data-format)\n  * [File Format](#file-format)\n  * [Header Format](#header-format)\n  * [Information File Format](#information-file-format)\n* [Using the Package](#using-the-package)\n* [Contributing](#contributing)\n* [Versioning](#versioning)\n* [Authors](#authors)\n* [Citation](#citation)\n* [License](#license)\n* [Acknowledgments](#acknowledgments)\n\n## Getting Started\n\nTo begin using the `locomotion` package, please follow the installation\ninstructions below. After the package has been successfully installed, please\nproceed to the [Data Format](#data-format) section to understand how your data\nshould be formatted for use.\n\n### Installation and Requirements\n\nAs of 24 January 2020, the `locomotion` package has been converted for use on\nPython 3.7.3. This module also requires the following python packages:\n\n* numpy (>= 1.16.2)\n* scipy (>= 1.5.0)\n* plotly (>= 4.4.1)\n* dtw-python (>= 1.1.4)\n* igl (>=2.2.0)\n\n#### Installation instructions\n\nThe `locomotion` package is available for installation on \n[PyPI](https://pypi.org/project/locomotion/), which can be done by running the \nfollowing command on your terminal:\n```\npip install locomotion\n```\n\nAnother installation option is to install it from the source directory directly.\nOnce you've cloned the directory or  downloaded the source file, run the \nfollowing command while in the main directory.\n```\npython setup.py install\n```\n\n**Note**: One of our dependencies, `igl`, is still in development phase, and is\nnot currently on PyPI. You will have to install it manually in order to use\n`locomotion`. You may find the installation instructions\n[here](https://github.com/libigl/libigl-python-bindings).\n\nAfter installing all the requirements, you should now be able to run `import\nlocomotion` in your Python shell.\n\n#### Checking the installation\n\nTo ensure that all the functions in the package work as intended, run the\njupyter notebook `scripts/example_notebook.ipynb`. Follow through the notebook,\nwhich will run through the basic functions of the package. If the package is\ninstalled properly, it should be able to generate a small sample dataset and run\nthe BDD and CSD methods on it.\n\n## Data Format\n\n### File Format\nThe package accepts `.csv` and `.tsv` files. However, because it distinguishes\nbetween tsv and csv by doing a simple check to see if tabs or commas are present\nin the first (header) line, make sure to avoid using both delimiters in the\nheader of your data file. If your data must use both, you will need to edit the\n`get_raw_data` function in `animal.py`.\n\n### Header Format \nThe computations require X and Y coordinate data with corresponding column\ntitles in string format, so the coordinate data columns must be labelled \"X\" and\n\"Y\", including the quotation marks. They can also be single quotes. \n\n### Information File Format \nThe information about the animals are stored in a json file, which is required\nto read in relevant data for each computation. The fields and format are as in\nthis sample entry below. Note that all times are in minutes. In general, avoid\nusing spaces in the field values.\n\n```javascript\n{\n        \"name\": \"NSS_01\", //Can be anything. Make it unique\n        \"data_file_location\": \"/data/medaka/NSS_01.dat\",\n        //full path to the data file\n        \"animal_attributes\": {\n            \"species\": \"Medaka\", //species name\n            \"exp_type\": \"NSS\", //experiment type\n            \"ID\": \"01\" //number, but in quotations\n        },\n        \"capture_attributes\": {\n            \"frames_per_sec\": 20, //integer\n            \"pixels_per_mm\": 1.6, //float\n            \"dim_x\": 200, //in mm\n            \"dim_y\": 100, //in mm\n            \"start_time\": 0, //in min\n            \"end_time\": 10, //in min\n            \"baseline_start_time\": 0, //in min\n            \"baseline_end_time\": 2 //in min\n        }\n    }\n```\n\nTo generate the info file, you can make use of `scripts/json_generator.ipynb`\nwhich contains a step-by-step walkthrough that populates a `.json` file, prompting\nyou to include the correct data.\n\n## Using the Package\n\nOnce you import the `locomotion` package, you will need to first initiate animal\nobjects using the `locomotion.setup_animal_objs` command, which returns a list of\nanimal objects with basic X and Y data from the data files.\n\nThe routines for calculating Behavioral Distortion Distance (BDD) are located in\nthe `trajectory.py` file and can be called by\n`locomotion.trajectory.[routine_name]`.\n\nExample script:\n\n```python\nimport locomotion\ninfo_files = [\"/path/to/animal_info.json\"]\nanimals = locomotion.setup_animal_objs( info_files )\nfor a in animals:\n  locomotion.trajectory.populate_curve_data( a )\nvariables = ['Y','Velocity','Curvature']\nstart_time, end_time = 0, 1\nnorm_mode = 'spec'\ndistances = locomotion.trajectory.compute_all_bdd( animals, variables, start_time, end_time, norm_mode )\noutput_directory, outfile_name = \"/path/to/outdir\", \"results\"\nsort_table, square_table = False, False\ncolor_min, color_max = 0.1, 0.5\nlocomotion.write.post_process( animals, distances, output_directory, outfile_name, sort_table, square_table, color_min, color_max )\n```\n\nTo calculate the Intra-Individual Behavioral Distortion Distance (IIBDD) for each animal in a\nspecified info sheet, one can run a script like the following:\n\n```python\nimport locomotion\ninfo_files = [\"/path/to/animal_info.json\"]\nanimals = locomotion.setup_animal_objs( info_files )\nfor a in animals:\n  locomotion.trajectory.populate_curve_data( a )\nvariables = ['Y','Velocity','Curvature']\nnorm_mode = 'spec'\nnumber_of_samples = 100\noutput_directory, outfile_name = \"/path/to/outdir\", \"results.csv\"\nstart_time, end_time = 0, 1\niibdds = locomotion.trajectory.compute_all_iibdd( animals, variables, norm_mode, number_of_samples, start_time=start_time, end_time=end_time )\nlocomotion.write.write_iibdd_to_csv( animals, iibdds, output_directory, outfile_name )\n```\n\nThe routines for calculating Conformal Spatiotemporal Distance (CSD) are located\nin the `heatmap.py` file and can be called by `locomotion.heatmap.[routine_name]`.\n\nExample script:\n\n```python\nimport locomotion\ninfo_files = [\"/path/to/animal_info.json\"]\nanimals = locomotion.setup_animal_objs( info_files )\ngrid_size, start_time, end_time = 10, 0, 2\nfor a in animals:\n  locomotion.heatmap.populate_surface_data( a, grid_size, start_time, end_time )\ndistances = locomotion.heatmap.compute_all_csd( animals )\noutput_directory, outfile_name = \"/path/to/outdir\", \"results\"\nsort_table, square_table = False, False\ncolor_min, color_max = 0, 0.2\nlocomotion.write.post_process( animals, distances, output_directory, outfile_name, sort_table, square_table, color_min, color_max )\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of\nconduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available,\nsee the [tags on this repository](https://github.com/mechunderlyingbehavior/locomotion/tags).\n\n## Authors\n\nThis package was written by Matthew T. Stamps, Zhong Xuan Khwa, Elaine Wijaya,\nSoo Go, and Ajay S. Mathuru.\n\nSee also the list of\n[contributors](https://github.com/mechunderlyingbehavior/locomotion/contributors)\nwho participated in this project.\n\n## Citation\n\nIf you use `locomotion` in a scientific paper, we would appreciate citations to\nthe following [paper](https://www.nature.com/articles/s41598-019-52300-8):\n```\nStamps, M.T., Go, S. & Mathuru, A.S. Computational geometric tools for quantitative comparison of locomotory behavior. Sci Rep 9, 16585 (2019). https://doi.org/10.1038/s41598-019-52300-8\n```\n\nPreferred citation format can be found\n[here](https://www.nature.com/articles/s41598-019-52300-8#citeas).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\nWe would like to acknowledge the work of Alaukik Pant, Haroun Chahed, Karolina\nGrzeszkiewicz, Katherine Sun, Lucy Zhu, Sultan Aitzhan, and Yanhua Wang, for\ntheir contributions to this package.\n\nREADME template provided by [PurpleBooth](https://github.com/PurpleBooth/a-good-readme-template).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mechunderlyingbehavior/locomotion",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "locomotion",
    "package_url": "https://pypi.org/project/locomotion/",
    "platform": "",
    "project_url": "https://pypi.org/project/locomotion/",
    "project_urls": {
      "Homepage": "https://github.com/mechunderlyingbehavior/locomotion",
      "Lab Website": "https://https://mechunderlyingbehavior.wordpress.com/"
    },
    "release_url": "https://pypi.org/project/locomotion/1.0.0/",
    "requires_dist": [
      "numpy (>=1.16.2)",
      "plotly (>=4.4.1)",
      "scipy (>=1.2.1)",
      "dtw-python (>=1.1.4)"
    ],
    "requires_python": "",
    "summary": "Computational geometric tools for quantitative comparison of locomotory behavior",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8585475,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "652ff8173049eabc1f5fc02cbfe3a652a530a1f51b86e764161593ce0609fa54",
        "md5": "73be2495709e823d3dac82416becfb27",
        "sha256": "c7ea21ac42a543c955ee40a561d97ac0188a677fb15d0692bd4149e0ccc26abb"
      },
      "downloads": -1,
      "filename": "locomotion-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73be2495709e823d3dac82416becfb27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35136,
      "upload_time": "2020-11-05T06:50:49",
      "upload_time_iso_8601": "2020-11-05T06:50:49.326387Z",
      "url": "https://files.pythonhosted.org/packages/65/2f/f8173049eabc1f5fc02cbfe3a652a530a1f51b86e764161593ce0609fa54/locomotion-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29417b8f9768a2b8d4ca76e6e0099f5c729aa288bd9b9423fb67fc832e0c960b",
        "md5": "edcc32ae531b25ac10bbe8335d73e36c",
        "sha256": "2fb4b45894b38de07567e8ea58f71594322bda216aa40de44c4e07aa0871dfa7"
      },
      "downloads": -1,
      "filename": "locomotion-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "edcc32ae531b25ac10bbe8335d73e36c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34984,
      "upload_time": "2020-11-05T06:50:52",
      "upload_time_iso_8601": "2020-11-05T06:50:52.699405Z",
      "url": "https://files.pythonhosted.org/packages/29/41/7b8f9768a2b8d4ca76e6e0099f5c729aa288bd9b9423fb67fc832e0c960b/locomotion-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}