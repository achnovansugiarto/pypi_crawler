{
  "info": {
    "author": "Andy Everitt",
    "author_email": "andreweveritt@e3d-online.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DuetWebAPI\nPython interface to Duet RepRap V3 firmware via Http REST API.\n\n* Works over IP network.\n* Does not support passwords on the printer. \n* Supported boards:\n  * Duet 3 + SBC\n  * Duet 3 standalone\n  * Duet 2 standalone\n\n# Install\n```\npip install duetwebapi\n```\n\nAlternatively:\n```\npip install -e \"git+https://github.com/AndyEveritt/DuetWebAPI.git@master#egg=duetwebapi\"\n```\n\n# Usage\n* See 'examples.py' for examples. \n\n```python\nfrom duetwebapi import DuetWebAPI\n\nprinter = DuetWebAPI(f'http://{printer_hostname}')\n```\n\n## REST API\nThe REST API allows for the following operations:\n\nMethod | Description\n------ | -----------\n`get_model(key: str = None) -> Dict` | Get Duet object model. RRF3 only\n`send_code(code: str) -> Dict` | Send G/M/T-code to Duet\n`get_file(filename: str, directory: str = 'gcodes', binary: bool = False) -> str` | Download file from Duet\n`upload_file(file: str \\| bytes \\| StringIO \\| TextIOWrapper \\| BytesIO, filename: str, directory: str = 'gcodes') -> Dict` | Upload file to Duet\n`get_fileinfo(filename: str = None, directory: str = 'gcodes') -> Dict` | Get file info\n`delete_file(filename: str, directory: str = 'gcodes') -> Dict` | Delete file on Duet\n`move_file(from_path: str, to_path: str, force: bool = False) -> Dict` | Move file on Duet, can be used to rename files\n`get_directory(directory: str) -> List[Dict]` | Get a list of all the files & directories in a directory\n`create_directory(directory: str) -> Dict` | Create a new directory\n\n\n## Wrapper\nAn additional wrapper is provided to make repetative tasks easier\n\nMethod | Description\n------ | -----------\n`emergency_stop() -> None` | Send M112 > M999\n`start_print(filename: str) -> Dict` | start a print on duet\n`pause_print() -> Dict` | pause current print\n`stop_print(leave_heaters: bool) -> Dict` | stop current print, will pause first if not paused\n`get_coords() -> Dict` | return the current position of all the movement axes\n`get_layer() -> int` | return the current layer number of the print\n`get_num_extruders() -> int` | return the number of extruders currently configured\n`get_num_tools() -> int` | return the number of tools currently configured\n`get_status() -> str` | return the current Duet status\n`get_temperature() -> List[Dict]` | return a list of all the analog sensors and their value\n`get_current_tool() -> int` | return the current tool number\n`get_messagebox() -> Dict` | return the details of a message displayed via `M291` if one exists\n`acknowledge_message(response: int) -> Dict` | send an acknowledgement to a message if one exists. Response options are `0` (continue), and `1` (cancel) \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AndyEveritt/DuetWebAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "duetwebapi",
    "package_url": "https://pypi.org/project/duetwebapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/duetwebapi/",
    "project_urls": {
      "Homepage": "https://github.com/AndyEveritt/DuetWebAPI"
    },
    "release_url": "https://pypi.org/project/duetwebapi/1.2.0/",
    "requires_dist": [
      "requests (>=2.22.0)"
    ],
    "requires_python": "",
    "summary": "Python interface to Duet REST API",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11102351,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a924dc00cf8bf3961e7320de2678b6f3d996414a15f3a587d523c4185c020736",
        "md5": "14bdd67b67c515af54bac9b42a2c2424",
        "sha256": "c53b1ed21d2f22439e00412ad4b4ed0f8779a6823086a9afdb4f9fc80fb213c5"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14bdd67b67c515af54bac9b42a2c2424",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8348,
      "upload_time": "2021-03-02T14:49:50",
      "upload_time_iso_8601": "2021-03-02T14:49:50.319266Z",
      "url": "https://files.pythonhosted.org/packages/a9/24/dc00cf8bf3961e7320de2678b6f3d996414a15f3a587d523c4185c020736/duetwebapi-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24b78bf7551a1ab412c65c30720a6058e284624f6facde4a3bef80ea81014f9b",
        "md5": "9a31c31ee17d62998e57670870c4b558",
        "sha256": "8bf92003780a1f6961de6c760475502c4b1536f140bb9cf44443b522e3ed6278"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9a31c31ee17d62998e57670870c4b558",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6416,
      "upload_time": "2021-03-02T14:49:51",
      "upload_time_iso_8601": "2021-03-02T14:49:51.703231Z",
      "url": "https://files.pythonhosted.org/packages/24/b7/8bf7551a1ab412c65c30720a6058e284624f6facde4a3bef80ea81014f9b/duetwebapi-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}