{
  "info": {
    "author": "Andy Everitt",
    "author_email": "andreweveritt@e3d-online.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DuetWebAPI\nPython interface to Duet RepRap V3 firmware via Http REST API.\n\n* Works over IP network.\n* Does not support passwords on the printer. \n* Supported boards:\n  * Duet 3 + SBC\n  * Duet 3 standalone\n  * Duet 2 standalone\n\n# Install\n```\npip install duetwebapi\n```\n\nAlternatively:\n```\npip install -e \"git+https://github.com/AndyEveritt/DuetWebAPI.git@master#egg=duetwebapi\"\n```\n\n# Usage\n* See 'examples.py' for examples. \n\n```python\nfrom duetwebapi import DuetWebAPI\n\nprinter = DuetWebAPI(f'http://{printer_hostname})\n```\n\n## REST API\nThe REST API allows for the following operations:\n\nMethod | Description\n------ | -----------\n`get_model(key: str = None) -> Dict` | Get Duet object model. RRF3 only\n`send_code(code: str) -> Dict` | Send G/M/T-code to Duet\n`get_file(filename: str, directory: str = 'gcodes') -> str` | Download file from Duet\n`upload_file(file: str, directory: str = 'gcodes') -> Dict` | Upload file to Duet\n`get_fileinfo(filename: str = None, directory: str = 'gcodes') -> Dict` | Get file info\n`delete_file(filename: str, directory: str = 'gcodes') -> Dict` | Delete file on Duet\n`move_file(from_path: str, to_path: str, force: bool = False) -> Dict` | Move file on Duet, can be used to rename files\n`get_directory(directory: str) -> List[Dict]` | Get a list of all the files & directories in a directory\n`create_directory(directory: str) -> Dict` | Create a new directory\n\n\n## Wrapper\nAn additional wrapper is provided to make repetative tasks easier\n\nMethod | Description\n------ | -----------\n`get_coords()` | return the current position of all the movement axes\n`get_layer()` | return the current layer number of the print\n`get_num_extruders()` | return the number of extruders currently configured\n`get_num_tools()` | return the number of tools currently configured\n`get_status()` | return the current Duet status\n`get_temperature()` | return a list of all the analog sensors and their value\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AndyEveritt/DuetWebAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "duetwebapi",
    "package_url": "https://pypi.org/project/duetwebapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/duetwebapi/",
    "project_urls": {
      "Homepage": "https://github.com/AndyEveritt/DuetWebAPI"
    },
    "release_url": "https://pypi.org/project/duetwebapi/1.1.0/",
    "requires_dist": [
      "requests (>=2.22.0)"
    ],
    "requires_python": "",
    "summary": "Python interface to Duet REST API",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11102351,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b425f631318a151970dbf744946808b43d8ee6420fb493e535ab533fc85d203a",
        "md5": "de7361ce38688604b97d8e30ce245d0a",
        "sha256": "c32f98064c679d45f7a561dc20f4b2f24d85e06e6fe0ea153b029689a642e416"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de7361ce38688604b97d8e30ce245d0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7377,
      "upload_time": "2020-11-03T22:03:50",
      "upload_time_iso_8601": "2020-11-03T22:03:50.386950Z",
      "url": "https://files.pythonhosted.org/packages/b4/25/f631318a151970dbf744946808b43d8ee6420fb493e535ab533fc85d203a/duetwebapi-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e1dba645eb5db5f808015be1609a6beeb9f27d365c44d0ab0ca5ef7c6dd6438",
        "md5": "51b5f988c42254ea531ab2e4039a1442",
        "sha256": "c563d411caa5b59d317b93b76dc66fd300fe8fa6c4751a58c10fb781b4da5789"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "51b5f988c42254ea531ab2e4039a1442",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4276,
      "upload_time": "2020-11-03T22:03:51",
      "upload_time_iso_8601": "2020-11-03T22:03:51.567496Z",
      "url": "https://files.pythonhosted.org/packages/2e/1d/ba645eb5db5f808015be1609a6beeb9f27d365c44d0ab0ca5ef7c6dd6438/duetwebapi-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}