{
  "info": {
    "author": "Andy Everitt",
    "author_email": "andreweveritt@e3d-online.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DuetWebAPI\nPython interface to Duet RepRap V3 firmware via Http REST API.\n\n* Works over IP network.\n* Does not support passwords on the printer. \n* Supported boards:\n  * Duet 3 + SBC\n  * Duet 3 standalone\n  * Duet 2 standalone\n\n# Install\n```\npip install duetwebapi\n```\n\nAlternatively:\n```\npip install -e \"git+https://github.com/AndyEveritt/DuetWebAPI.git@master#egg=duetwebapi\"\n```\n\n# Usage\n* See 'examples.py' for examples. \n\n```python\nfrom duetwebapi import DuetWebAPI\n\nprinter = DuetWebAPI(f'http://{printer_hostname}')\n```\n\n## REST API\nThe REST API allows for the following operations:\n\nMethod | Description\n------ | -----------\n`get_model(key: str = None) -> Dict` | Get Duet object model. RRF3 only\n`send_code(code: str) -> Dict` | Send G/M/T-code to Duet\n`get_file(filename: str, directory: str = 'gcodes', binary: bool = False) -> str` | Download file from Duet\n`upload_file(file: str \\| bytes \\| StringIO \\| TextIOWrapper \\| BytesIO, filename: str, directory: str = 'gcodes') -> Dict` | Upload file to Duet\n`get_fileinfo(filename: str = None, directory: str = 'gcodes') -> Dict` | Get file info\n`delete_file(filename: str, directory: str = 'gcodes') -> Dict` | Delete file on Duet\n`move_file(from_path: str, to_path: str, force: bool = False) -> Dict` | Move file on Duet, can be used to rename files\n`get_directory(directory: str) -> List[Dict]` | Get a list of all the files & directories in a directory\n`create_directory(directory: str) -> Dict` | Create a new directory\n\n\n## Wrapper\nAn additional wrapper is provided to make repetative tasks easier\n\nMethod | Description\n------ | -----------\n`emergency_stop() -> None` | Send M112 > M999\n`start_print(filename: str) -> Dict` | start a print on duet\n`pause_print() -> Dict` | pause current print\n`stop_print(leave_heaters: bool) -> Dict` | stop current print, will pause first if not paused\n`get_coords() -> Dict` | return the current position of all the movement axes\n`get_layer() -> int` | return the current layer number of the print\n`get_num_extruders() -> int` | return the number of extruders currently configured\n`get_num_tools() -> int` | return the number of tools currently configured\n`get_status() -> str` | return the current Duet status\n`get_temperature() -> List[Dict]` | return a list of all the analog sensors and their value\n`get_current_tool() -> int` | return the current tool number\n`get_messagebox() -> Dict` | return the details of a message displayed via `M291` if one exists\n`acknowledge_message(response: int) -> Dict` | send an acknowledgement to a message if one exists. Response options are `0` (continue), and `1` (cancel) \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AndyEveritt/DuetWebAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "duetwebapi",
    "package_url": "https://pypi.org/project/duetwebapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/duetwebapi/",
    "project_urls": {
      "Homepage": "https://github.com/AndyEveritt/DuetWebAPI"
    },
    "release_url": "https://pypi.org/project/duetwebapi/1.2.1/",
    "requires_dist": [
      "requests (>=2.22.0)"
    ],
    "requires_python": "",
    "summary": "Python interface to Duet REST API",
    "version": "1.2.1",
    "yanked": true,
    "yanked_reason": "Missing import in base.py"
  },
  "last_serial": 11102351,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24bb8aafdced3440e2d965d28d1bf3f66d869cbf3040e39f2a8c32ec934a8006",
        "md5": "eb1324be67060c199a5ae1277c9ea544",
        "sha256": "3873379968dbe200cb1e146aa11bdf531377cbc88f91addb7f08612bea3141db"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb1324be67060c199a5ae1277c9ea544",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8414,
      "upload_time": "2021-03-02T16:13:36",
      "upload_time_iso_8601": "2021-03-02T16:13:36.335203Z",
      "url": "https://files.pythonhosted.org/packages/24/bb/8aafdced3440e2d965d28d1bf3f66d869cbf3040e39f2a8c32ec934a8006/duetwebapi-1.2.1-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "Missing import in base.py"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d2c9253c67e9f9c344974d325d3df09e0575de144c630ccc799e96ac7568552",
        "md5": "36040da597ac749197a5f6fed4887888",
        "sha256": "7c0ee3d7f287eaae1a75e4a6404527b3ca23ef8701fb19fa5cda78973abfe8aa"
      },
      "downloads": -1,
      "filename": "duetwebapi-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "36040da597ac749197a5f6fed4887888",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6482,
      "upload_time": "2021-03-02T16:13:37",
      "upload_time_iso_8601": "2021-03-02T16:13:37.662651Z",
      "url": "https://files.pythonhosted.org/packages/4d/2c/9253c67e9f9c344974d325d3df09e0575de144c630ccc799e96ac7568552/duetwebapi-1.2.1.tar.gz",
      "yanked": true,
      "yanked_reason": "Missing import in base.py"
    }
  ],
  "vulnerabilities": []
}