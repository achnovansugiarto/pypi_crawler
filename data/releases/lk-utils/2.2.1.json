{
  "info": {
    "author": "Likianta",
    "author_email": "likianta@foxmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# LK Utils\n\nlk-utils is a set of utility wrappers to make data processing more simple and fluent.\n\n# Install\n\n```shell\npip install lk-utils\n```\n\nthe default pip install doesn't include extra dependencies. to get extra support for excel or nlp processing, pip install this:\n\n```shell\npip install lk-utils  # to add lk-logger (required dependency)\npip install lk-utils[exl]  # to add lk-logger, xlrd, xlsxwriter\npip install lk-utils[nlp]  # to add lk-logger, pypinyin\npip install lk-utils[all]  # to add all of the above\n```\n\nlk-utils requires Python 3.8 or higher version.\n\n# Usage\n\n## subproc\n\n### new thread decorator\n\n```python\nfrom lk_utils.subproc import new_thread\n\n@new_thread(daemon=True, singleton=False)\ndef background_loop():\n    from time import sleep\n    i = 0\n    while i < 10:\n        i += 1\n        print(i)\n        sleep(1)\n\nx = background_loop()\nprint(type(x))  # -> threading.Thread\n```\n\n### run in new thread\n\n```python\nfrom lk_utils.subproc import run_new_thread\n\ndef background_loop():\n    from time import sleep\n    i = 0\n    while i < 10:\n        i += 1\n        print(i)\n        sleep(1)\n\nx = run_new_thread(background_loop, args=None, kwargs=None, daemon=True)\nprint(type(x))  # -> threading.Thread\n```\n\n### run cmd args\n\n```python\nfrom lk_utils.subproc import run_cmd_shell, run_cmd_args\nrun_cmd_shell('python -m pip list')\nrun_cmd_args('python', '-m', 'pip', 'list')\n```\n\n### mklink, mklinks\n\n```python\n\"\"\"\nexample structure:\n    |= from_dir\n       |= folder_xxx\n       |- file_xxx.txt\n    |= to_dir_1    # empty\n    |= to_dir_2    # not empty\n       |- ...\n\"\"\"\n\nfrom lk_utils.subproc import mklink, mklinks\nmklink('/from_dir', '/to_dir_1')\nmklinks('/from_dir', '/to_dir_2')\n\n\"\"\"\nresult:\n    |= from_dir\n       |= folder_xxx\n       |- file_xxx.txt\n    |= to_dir_1         # this is a symlink\n    |= to_dir_2\n       |- ...\n       |= folder_xxx    # this is a symlink\n       |- file_xxx.txt  # this is a symlink\n\"\"\"\n```\n\n## filesniff\n\n### get current dir, get relative path\n\n```python\nimport os\nfrom lk_utils import filesniff as fs\nprint(fs.currdir()\n      == os.path.dirname(__file__)).replace('\\\\', '/'))  # -> True\nprint(fs.relpath('..')\n      == os.path.dirname(fs.currdir()))  # -> True\n```\n\n### list files/dirs\n\n```python\nfrom lk_utils import filesniff as fs\n\nfor path, name in fs.find_files('.'):  # this is an generator.\n    print(path, name)\n    #   the first element is the **abspath**, the second is path's\n    #   basename (<- os.path.basename(path))\n\nfor path in fs.find_file_paths('.'):  # this is a list[str]\n    print(path)\n\nfor name in fs.find_file_names('.'):  # this is a list[str]\n    print(name)\n\n# more:\n#   fs.findall_files\n#   fs.findall_file_paths\n#   fs.findall_file_names\n#\n#   fs.find_dirs\n#   fs.find_dir_paths\n#   fs.find_dir_names\n#\n#   fs.findall_dirs\n#   fs.findall_dir_paths\n#   fs.findall_dir_names\n```\n\n## read_and_write\n\n### loads and dumps\n\n```python\nfrom lk_utils import read_and_write as rw\n\ndata_r = rw.loads(file_i)\n#   it recognizes json, yaml, pkl as sturctured data. others are treated as\n#   plain text.\n\ndata_w = ...\nrw.dumps(data_w, file_o)\n#   it recognizes json, yaml, pkl as sturctured data. others are treated as\n#   plain text.\n```\n\n---\n\n<font color=\"red\">below are marked as deprecated.</font>\n\n## excel\n\n### excel reader and writer\n\n```python\nfrom lk_utils import excel as exl\n\nreader = exl.ExcelReader(file_i)\n#   accepts '.xls' and '.xlsx' files.\n...  # TODO:CompleteExample\n\nwriter = exl.ExcelWriter(file_o)\n#   accepts only '.xlsx' files.\n...  # TODO:CompleteExample\nwriter.save()\n\n```\n\n## nlp\n\n*TODO*\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lk-utils",
    "package_url": "https://pypi.org/project/lk-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/lk-utils/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/lk-utils/2.2.1/",
    "requires_dist": [
      "lk-logger (>=5.0.1,<6.0.0)",
      "xlrd (==1.2.0); extra == \"exl\" or extra == \"all\"",
      "xlsxwriter; extra == \"exl\" or extra == \"all\"",
      "pypinyin; extra == \"nlp\" or extra == \"all\"",
      "pyyaml; extra == \"ext\" or extra == \"all\"",
      "toml; extra == \"ext\" or extra == \"all\""
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "LK Utils is a set of utility wrappers made for data processing.",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17139654,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83357bbf5acdc6b2fed6405725867ac3fdbc09e2f8c0232c08324a4d43be91e1",
        "md5": "12a1074cb6cbe72198046a19c56a11d2",
        "sha256": "79bdbabf5c05207127a95b78f8cfdbd3dffc22bc5a29247fe3cd4f151535ba61"
      },
      "downloads": -1,
      "filename": "lk_utils-2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12a1074cb6cbe72198046a19c56a11d2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 114408,
      "upload_time": "2022-03-28T10:59:05",
      "upload_time_iso_8601": "2022-03-28T10:59:05.803042Z",
      "url": "https://files.pythonhosted.org/packages/83/35/7bbf5acdc6b2fed6405725867ac3fdbc09e2f8c0232c08324a4d43be91e1/lk_utils-2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7316bdb407620e76f46a6553d02cfa18abd2fc848ac2e63d46119eec0fb0441",
        "md5": "93ad6bd5d8aa53d5a799c35ed33ee77d",
        "sha256": "98490c953fab8ac0f76d4b2048737d18c076e442597b03760f18f910ecafd70c"
      },
      "downloads": -1,
      "filename": "lk-utils-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "93ad6bd5d8aa53d5a799c35ed33ee77d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 102732,
      "upload_time": "2022-03-28T10:59:03",
      "upload_time_iso_8601": "2022-03-28T10:59:03.843408Z",
      "url": "https://files.pythonhosted.org/packages/f7/31/6bdb407620e76f46a6553d02cfa18abd2fc848ac2e63d46119eec0fb0441/lk-utils-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}