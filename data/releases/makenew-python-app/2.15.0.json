{
  "info": {
    "author": "Evan Sosenko",
    "author_email": "razorx@evansosenko.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "Python App Skeleton\n===================\n\n|PyPI| |GitHub Actions|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/makenew-python-app.svg\n   :target: https://pypi.python.org/pypi/makenew-python-app\n   :alt: PyPI\n.. |GitHub Actions| image:: https://github.com/makenew/python-app/workflows/main/badge.svg\n   :target: https://github.com/makenew/python-app/actions\n   :alt: GitHub Actions\n\nPackage skeleton for a Python app.\n\nDescription\n-----------\n\nBootstrap a new Python_ app in less than a minute.\n\n.. _Python: https://www.python.org/\n\nFeatures\n~~~~~~~~\n\n- Publishing to PyPI_.\n- Secure dependency management with Poetry_.\n- Multi-stage Docker_ builds for optimized production images.\n- Images tagged using package version and commit checksum.\n- Images pushed to `GitHub Container Registry`_.\n- Standardized JSON logging with structlog_.\n- Centralized dependency injection with pinject_.\n- Tornado_ with asyncio.\n- Linting with Pylint_.\n- Uncompromising code formatting with Black_.\n- pytest_ helps you write better programs.\n- Code coverage reporting with Codecov_.\n- Continuous unit and smoke testing and deployment with `GitHub Actions`_.\n- `Keep a CHANGELOG`_.\n- Consistent coding with EditorConfig_.\n- Badges from Shields.io_.\n\n.. _Black: https://black.readthedocs.io/en/stable/\n.. _Codecov: https://codecov.io/\n.. _Docker: https://www.docker.com/\n.. _EditorConfig: https://editorconfig.org/\n.. _GitHub Actions: https://github.com/features/actions\n.. _GitHub Container Registry: https://github.com/features/packages\n.. _Keep a CHANGELOG: https://keepachangelog.com/\n.. _PyPI: https://pypi.python.org/pypi\n.. _Pylint: https://www.pylint.org/\n.. _Shields.io: https://shields.io/\n.. _Tornado: https://www.tornadoweb.org/\n.. _pinject: https://pypi.org/project/pinject/\n.. _pytest: https://docs.pytest.org/\n.. _structlog: http://www.structlog.org/\n\nBootstrapping a New Project\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Create an empty (**non-initialized**) repository on GitHub.\n2. Clone the master branch of this repository with\n\n   ::\n\n       $ git clone --single-branch https://github.com/makenew/python-app.git new-python-app\n       $ cd new-python-app\n\n   Optionally, reset to the latest\n   `release <https://github.com/makenew/python-app/releases>`__ with\n\n   ::\n\n       $ git reset --hard v1.2.0\n\n3. Run\n\n   ::\n\n       $ ./makenew.sh\n\n   This will replace the boilerplate, delete itself,\n   remove the git remote, remove upstream tags,\n   and stage changes for commit.\n\n4. Create the required GitHub repository secrets\n5. Review, commit, and push the changes to GitHub with\n\n   ::\n\n     $ git diff --cached\n     $ git commit -m \"Replace makenew boilerplate\"\n     $ git remote add origin git@github.com:<user>/<new-python-app>.git\n     $ git push -u origin master\n\n6. Ensure the GitHub action passes,\n   then publish the initial version of the package with\n\n   ::\n\n     $ poetry install\n     $ poetry run bump2version patch\n     $ git push\n     $ git push --tags\n\nUpdating\n~~~~~~~~\n\nIf you want to pull in future updates from this skeleton,\nyou can fetch and merge in changes from this repository.\n\nAdd this as a new remote with\n\n::\n\n    $ git remote rename origin upstream\n\nand then configure your ``origin`` branch as normal.\n\nOtherwise, add this as a new remote with\n\n::\n\n    $ git remote add upstream git@github.com:makenew/python-app.git\n\nYou can then fetch and merge changes with\n\n::\n\n    $ git fetch --no-tags upstream\n    $ git merge upstream/master\n\nChangelog\n^^^^^^^^^\n\nNote that ``CHANGELOG.md`` is just a template for this skeleton. The\nactual changes for this project are documented in the commit history and\nsummarized under\n`Releases <https://github.com/makenew/python-app/releases>`__.\n\nUsage\n-----\n\nDocker container\n~~~~~~~~~~~~~~~~\n\nThe service is distributed as a Docker container on GitHub Container Registry.\nTo run locally, add configuration to `config/local.json`,\nthen pull and run the image with\n\n::\n\n    $ docker run --read-only --init --publish 8080:8080 \\\n      --volume \"$(pwd)/config/local.json:/usr/src/app/config/local.json\" \\\n      ghcr.io/makenew/python-app\n\nInstallation\n------------\n\nThis package is also registered on the `Python Package Index (PyPI)`_\nas makenew_python_app_.\n\nInstall it with\n\n::\n\n    $ poetry add makenew_python_app\n\n.. _makenew_python_app: https://pypi.python.org/pypi/makenew-python-app\n.. _Python Package Index (PyPI): https://pypi.python.org/\n\nDevelopment and Testing\n-----------------------\n\nQuickstart\n~~~~~~~~~~\n\n::\n\n    $ git clone https://github.com/makenew/python-app.git\n    $ cd python-app\n    $ poetry install\n\nRun each command below in a separate terminal window:\n\n::\n\n    $ make watch\n    $ make server\n\nPrimary development tasks are defined in the `Makefile`.\n\nSource Code\n~~~~~~~~~~~\n\nThe `source code`_ is hosted on GitHub.\nClone the project with\n\n::\n\n    $ git clone https://github.com/makenew/python-app.git\n\n.. _source code: https://github.com/makenew/python-app\n\nRequirements\n~~~~~~~~~~~~\n\nYou will need `Python 3`_ and Poetry_.\n\nInstall the development dependencies with\n\n::\n\n    $ poetry install\n\n.. _Poetry: https://poetry.eustace.io/\n.. _Python 3: https://www.python.org/\n\nTests\n~~~~~\n\nLint code with\n\n::\n\n    $ make lint\n\n\nRun tests with\n\n::\n\n    $ make test\n\nRun tests on changes with\n\n::\n\n    $ make watch\n\nPublishing\n~~~~~~~~~~\n\nUse the bump2version_ command to release a new version.\nPush the created git tag which will trigger a GitHub action.\n\n.. _bump2version: https://github.com/c4urself/bump2version\n\nPublishing may be triggered using on the web\nusing a `workflow_dispatch on GitHub Actions`_.\n\n.. _workflow_dispatch on GitHub Actions: https://github.com/makenew/python-app/actions?query=workflow%3Aversion\n\nGitHub Actions\n--------------\n\n*GitHub Actions should already be configured: this section is for reference only.*\n\nThe following repository secrets must be set on GitHub Actions.\n\n- ``PYPI_API_TOKEN``: API token for publishing on PyPI.\n- ``GH_USER``: The GitHub user's username.\n- ``GH_TOKEN``: A personal access token for the user.\n\nThese must be set manually.\n\nSecrets for Optional GitHub Actions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe version and format GitHub actions\nrequire a user with write access to the repository\nincluding access to read and write packages.\nSet these additional secrets to enable the action:\n\n- ``GH_USER``: The GitHub user's username.\n- ``GH_TOKEN``: A personal access token for the user.\n- ``GIT_USER_NAME``: The name to set for Git commits.\n- ``GIT_USER_EMAIL``: The email to set for Git commits.\n- ``GPG_PRIVATE_KEY``: The `GPG private key`_.\n- ``GPG_PASSPHRASE``: The GPG key passphrase.\n\n.. _GPG private key: https://github.com/marketplace/actions/import-gpg#prerequisites\n\nContributing\n------------\n\nPlease submit and comment on bug reports and feature requests.\n\nTo submit a patch:\n\n1. Fork it (https://github.com/makenew/python-app/fork).\n2. Create your feature branch (`git checkout -b my-new-feature`).\n3. Make changes.\n4. Commit your changes (`git commit -am 'Add some feature'`).\n5. Push to the branch (`git push origin my-new-feature`).\n6. Create a new Pull Request.\n\nLicense\n-------\n\nThis Python app is licensed under the MIT license.\n\nWarranty\n--------\n\nThis software is provided by the copyright holders and contributors \"as is\" and\nany express or implied warranties, including, but not limited to, the implied\nwarranties of merchantability and fitness for a particular purpose are\ndisclaimed. In no event shall the copyright holder or contributors be liable for\nany direct, indirect, incidental, special, exemplary, or consequential damages\n(including, but not limited to, procurement of substitute goods or services;\nloss of use, data, or profits; or business interruption) however caused and on\nany theory of liability, whether in contract, strict liability, or tort\n(including negligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makenew/python-app",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "makenew-python-app",
    "package_url": "https://pypi.org/project/makenew-python-app/",
    "platform": null,
    "project_url": "https://pypi.org/project/makenew-python-app/",
    "project_urls": {
      "Homepage": "https://github.com/makenew/python-app",
      "Repository": "https://github.com/makenew/python-app"
    },
    "release_url": "https://pypi.org/project/makenew-python-app/2.15.0/",
    "requires_dist": [
      "pinject (>=0.14.1,<0.15.0)",
      "pyhumps (>=3.0.2,<4.0.0)",
      "python-rapidjson (>=1.0.0,<2.0.0)",
      "structlog (>=21.1.0,<22.0.0)",
      "tornado (>=6.0.4,<7.0.0)"
    ],
    "requires_python": ">=3.10.0,<4.0.0",
    "summary": "Package skeleton for a Python app.",
    "version": "2.15.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15923088,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f14ede04a7fdc0ec778bbff4122dab8c7b020160e9e5d15b7dd19092dd88997",
        "md5": "5801e0decbfb324350c595e7bf24775b",
        "sha256": "2abbdf328ca641883932eba600f07c7ba8e300fea0ee71b19495b4a2bd78a69c"
      },
      "downloads": -1,
      "filename": "makenew_python_app-2.15.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5801e0decbfb324350c595e7bf24775b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10.0,<4.0.0",
      "size": 37416,
      "upload_time": "2022-05-15T03:48:01",
      "upload_time_iso_8601": "2022-05-15T03:48:01.905079Z",
      "url": "https://files.pythonhosted.org/packages/2f/14/ede04a7fdc0ec778bbff4122dab8c7b020160e9e5d15b7dd19092dd88997/makenew_python_app-2.15.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dda25b2cc55894cabc32eecf74bee1ae2e7de1b4f1151fda127fb114f88b580d",
        "md5": "841812307a8fbb47d840b8c7fec1260a",
        "sha256": "9c63cbbbc9225c0d16689adba70e306b9c0f55f38aa414c807301d27e703285f"
      },
      "downloads": -1,
      "filename": "makenew-python-app-2.15.0.tar.gz",
      "has_sig": false,
      "md5_digest": "841812307a8fbb47d840b8c7fec1260a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10.0,<4.0.0",
      "size": 39540,
      "upload_time": "2022-05-15T03:48:04",
      "upload_time_iso_8601": "2022-05-15T03:48:04.422666Z",
      "url": "https://files.pythonhosted.org/packages/dd/a2/5b2cc55894cabc32eecf74bee1ae2e7de1b4f1151fda127fb114f88b580d/makenew-python-app-2.15.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}