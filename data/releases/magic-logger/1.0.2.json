{
  "info": {
    "author": "Radu Ghitescu",
    "author_email": "radu.ghitescu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers"
    ],
    "description": "# magic_logger\n| Coverage | Release |\n| :------: | :-----: |\n| [![Coverage Status](https://coveralls.io/repos/github/RaduG/magic_logger/badge.svg?branch=master)](https://coveralls.io/github/RaduG/magic_logger?branch=master) | ![Release](https://badge.fury.io/py/magic-logger.svg) |\n\nThis very simple module does its best to help you use Python's `logging` correctly, by making sure you always\ninvoke the right `Logger` for a module. No more boilerplace `logger.getLogger(__name__)`! All this\nwithout any external dependencies - this is just a tiny wrapper for `logging`.\n\n## Getting started\nTo install:\n```bash\npip install magic_logger==1.0.0\n```\n\n## Overview\nImport `logger` from `magic_logger` and just call any methods you'd normally call on a `logging.Logger` instance:\n\n```python\n# Let's assume we are in `mypackage.mymodule`\nfrom magic_logger import logger\n\nlogger.info(\"Someting very informative\")  # equivalent to logging.getLogger(__name__).info(...)\n```\n\n`magic_logger.logger` also acts like a proxy for other commonly used functions in `logging.config`:\n```python\nlogger.dict_config(...)  # dispatches to logging.config.dictConfig\nlogger.file_config(...)  # dispatches to logging.config.file_config\nlogger.listen(...)  # dispatches to logging.config.listen\nlogger.stop_listening(...)  # dispatches to logging.config.stopListening\n``` \n\n### What about the other stuff in `logging`\nFor anything else, just use `logging` directly. `magic_logger` just proxies calls over anyway so you can use `logging` as usual.\n\n## How does it work?\nWhen you ask for an attribute of `magic_logger.logger` (other than the configuration ones listed above),\nit looks at the stack and determines the module from where the call originates. It then returns the attribute\nof the same name of the correct logger for that module, using `logging.getLogger`. As simple as that!\n\n### What if I call a module using `python -m` and log something from it, will that use the logger for `__main__`?\nNo, it will simply look at the module's `__spec__` for the name. Unless you run an interactive session and log straight from it,\nyou won't ever use the logger for `__main__`!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RaduG/magic_logger",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magic-logger",
    "package_url": "https://pypi.org/project/magic-logger/",
    "platform": "",
    "project_url": "https://pypi.org/project/magic-logger/",
    "project_urls": {
      "Homepage": "https://github.com/RaduG/magic_logger"
    },
    "release_url": "https://pypi.org/project/magic-logger/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "This very simple module does its best to help you use Python's logging correctly, by making sure you always invoke the right Logger for a module.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9898406,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "887a3502c67466a255fddb7f417a6c90fea720e69a8c5a8cba57b1ac09094f1c",
        "md5": "1a239cec92cd64482bfbf5e8fc6897e6",
        "sha256": "92feedb1e0b1f1270725548813f4ac6b4bd3156d1ca8732a86b9b6048ac5142d"
      },
      "downloads": -1,
      "filename": "magic_logger-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1a239cec92cd64482bfbf5e8fc6897e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3175,
      "upload_time": "2021-03-27T10:58:56",
      "upload_time_iso_8601": "2021-03-27T10:58:56.015282Z",
      "url": "https://files.pythonhosted.org/packages/88/7a/3502c67466a255fddb7f417a6c90fea720e69a8c5a8cba57b1ac09094f1c/magic_logger-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}