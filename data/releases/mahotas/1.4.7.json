{
  "info": {
    "author": "Luis Pedro Coelho",
    "author_email": "luis@luispedro.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Mahotas\n\n## Python Computer Vision Library\n\nMahotas is a library of fast computer vision algorithms (all implemented\nin C++ for speed) operating over numpy arrays.\n\n[![Travis](https://api.travis-ci.org/luispedro/mahotas.png)](https://travis-ci.org/luispedro/mahotas)\n[![Coverage Status](https://coveralls.io/repos/github/luispedro/mahotas/badge.svg?branch=master)](https://coveralls.io/github/luispedro/mahotas?branch=master)\n[![Downloads](https://pepy.tech/badge/mahotas/month)](https://pepy.tech/project/mahotas/month)\n[![License](http://badge.kloud51.com/pypi/l/mahotas.svg)](http://opensource.org/licenses/MIT)\n[![Install with Anaconda](https://anaconda.org/conda-forge/mahotas/badges/installer/conda.svg)](https://anaconda.org/conda-forge/mahotas)\n[![Join the chat at https://gitter.im/luispedro/mahotas](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/luispedro/mahotas)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fluispedro%2Fmahotas.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fluispedro%2Fmahotas?ref=badge_shield)\n\nPython versions 2.7, 3.4+, are supported.\n\nNotable algorithms:\n\n- [watershed](http://mahotas.readthedocs.io/en/latest/distance.html)\n- [convex points calculations](http://mahotas.readthedocs.io/en/latest/polygon.html).\n- hit & miss, thinning.\n- Zernike & Haralick, LBP, and TAS features.\n- [Speeded-Up Robust Features\n  (SURF)](http://mahotas.readthedocs.io/en/latest/surf.html), a form of local\n  features.\n- [thresholding](http://mahotas.readthedocs.io/en/latest/thresholding.html).\n- convolution.\n- Sobel edge detection.\n- spline interpolation\n- SLIC super pixels.\n\nMahotas currently has over 100 functions for image processing and\ncomputer vision and it keeps growing.\n\nThe release schedule is roughly one release a month and each release\nbrings new functionality and improved performance. The interface is very\nstable, though, and code written using a version of mahotas from years\nback will work just fine in the current version, except it will be\nfaster (some interfaces are deprecated and will be removed after a few\nyears, but in the meanwhile, you only get a warning). In a few\nunfortunate cases, there was a bug in the old code and your results will\nchange for the better.\n\nPlease cite [the mahotas paper](http://dx.doi.org/10.5334/jors.ac) (see\ndetails below under [Citation](#Citation)) if you use it in a publication.\n\n## Examples\n\nThis is a simple example (using an example file that is shipped with\nmahotas) of calling watershed using above threshold regions as a seed\n(we use Otsu to define threshold).\n\n    # import using ``mh`` abbreviation which is common:\n    import mahotas as mh\n\n    # Load one of the demo images\n    im = mh.demos.load('nuclear')\n\n    # Automatically compute a threshold\n    T_otsu = mh.thresholding.otsu(im)\n\n    # Label the thresholded image (thresholding is done with numpy operations\n    seeds,nr_regions = mh.label(im > T_otsu)\n\n    # Call seeded watershed to expand the threshold\n    labeled = mh.cwatershed(im.max() - im, seeds)\n\nHere is a very simple example of using `mahotas.distance` (which\ncomputes a distance map):\n\n    import pylab as p\n    import numpy as np\n    import mahotas as mh\n\n    f = np.ones((256,256), bool)\n    f[200:,240:] = False\n    f[128:144,32:48] = False\n    # f is basically True with the exception of two islands: one in the lower-right\n    # corner, another, middle-left\n\n    dmap = mh.distance(f)\n    p.imshow(dmap)\n    p.show()\n\n(This is under [mahotas/demos/distance.py](https://github.com/luispedro/mahotas/blob/master/mahotas/demos/distance.py).)\n\nHow to invoke thresholding functions:\n\n    import mahotas as mh\n    import numpy as np\n    from pylab import imshow, gray, show, subplot\n    from os import path\n\n    # Load photo of mahotas' author in greyscale\n    photo = mh.demos.load('luispedro', as_grey=True)\n\n    # Convert to integer values (using numpy operations)\n    photo = photo.astype(np.uint8)\n\n    # Compute Otsu threshold\n    T_otsu = mh.otsu(photo)\n    thresholded_otsu = (photo > T_otsu)\n\n    # Compute Riddler-Calvard threshold\n    T_rc = mh.rc(photo)\n    thresholded_rc = (photo > T_rc)\n\n    # Now call pylab functions to display the image\n    gray()\n    subplot(2,1,1)\n    imshow(thresholded_otsu)\n    subplot(2,1,2)\n    imshow(thresholded_rc)\n    show()\n\nAs you can see, we rely on numpy/matplotlib for many operations.\n\n## Install\n\nIf you are using [conda](http://anaconda.org/), you can install mahotas from\n[conda-forge](https://conda-forge.github.io/) using the following commands:\n\n    conda config --add channels conda-forge\n    conda install mahotas\n\n### Compilation from source\n\nYou will need python (naturally), numpy, and a C++ compiler. Then you\nshould be able to use:\n\n    pip install mahotas\n\nYou can test your installation by running:\n\n    python -c \"import mahotas as mh; mh.test()\"\n\nIf you run into issues, the manual has more [extensive documentation on\nmahotas\ninstallation](https://mahotas.readthedocs.io/en/latest/install.html),\nincluding how to find pre-built for several platforms.\n\n## Citation\n\nIf you use mahotas on a published publication, please cite:\n\n> **Luis Pedro Coelho** Mahotas: Open source software for scriptable\n> computer vision in Journal of Open Research Software, vol 1, 2013.\n> [[DOI](http://dx.doi.org/10.5334/jors.ac)]\n\nIn Bibtex format:\n\n>   @article{mahotas,\n>       author = {Luis Pedro Coelho},\n>       title = {Mahotas: Open source software for scriptable computer vision},\n>       journal = {Journal of Open Research Software},\n>       year = {2013},\n>       doi = {http://dx.doi.org/10.5334/jors.ac},\n>       month = {July},\n>       volume = {1}\n>   }\n\nYou can access this information using the `mahotas.citation()` function.\n\n## Development\n\nDevelopment happens on github\n([http://github.com/luispedro/mahotas](https://github.com/luispedro/mahotas)).\n\nYou can set the `DEBUG` environment variable before compilation to get a\ndebug version:\n\n    export DEBUG=1\n    python setup.py test\n\nYou can set it to the value `2` to get extra checks:\n\n    export DEBUG=2\n    python setup.py test\n\nBe careful not to use this in production unless you are chasing a bug.\nDebug level 2 is very slow as it adds many runtime checks.\n\nThe `Makefile` that is shipped with the source of mahotas can be useful\ntoo. `make debug` will create a debug build. `make fast` will create a\nnon-debug build (you need to `make clean` in between). `make test` will\nrun the test suite.\n\n## Links & Contacts\n\n*Documentation*:\n[https://mahotas.readthedocs.io/](https://mahotas.readthedocs.io/)\n\n*Issue Tracker*: [github mahotas\nissues](https://github.com/luispedro/mahotas/issues)\n\n*Mailing List*: Use the [pythonvision mailing\nlist](http://groups.google.com/group/pythonvision?pli=1) for questions,\nbug submissions, etc. Or ask on [stackoverflow (tag\nmahotas)](http://stackoverflow.com/questions/tagged/mahotas)\n\n*Main Author & Maintainer*: [Luis Pedro Coelho](http://luispedro.org)\n(follow on [twitter](https://twitter.com/luispedrocoelho) or\n[github](https://github.com/luispedro)).\n\nMahotas also includes code by Zachary Pincus [from scikits.image], Peter\nJ. Verveer [from scipy.ndimage], and Davis King [from dlib], Christoph\nGohlke, as well as\n[others](https://github.com/luispedro/mahotas/graphs/contributors).\n\n[Presentation about mahotas for bioimage\ninformatics](http://luispedro.org/files/talks/2013/EuBIAS/mahotas.html)\n\nFor more general discussion of computer vision in Python, the\n[pythonvision mailing\nlist](http://groups.google.com/group/pythonvision?pli=1) is a much\nbetter venue and generates a public discussion log for others in the\nfuture. You can use it for mahotas or general computer vision in Python\nquestions.\n\n## Recent Changes\n\n### Version 1.4.7 (Jul 10 2019)\n\n- Fix compilation on Windows\n\n### Version 1.4.6 (Jul 10 2019)\n\n- Make watershed work for >2³¹ voxels (issue #102)\n- Remove milk from demos\n- Improve performance by avoid unnecessary array copies in `cwatershed()`,\n  `majority_filter()`, and color conversions\n- Fix bug in interpolation\n\n### Version 1.4.5 (Oct 20 2018)\n- Upgrade code to newer NumPy API (issue #95)\n\n### Version 1.4.4 (Nov 5 2017)\n- Fix bug in Bernsen thresholding (issue #84)\n\n### Version 1.4.3 (Oct 3 2016)\n- Fix distribution (add missing `README.md` file)\n\n### Version 1.4.2 (Oct 2 2016)\n\n- Fix `resize\\_to` return exactly the requested size\n- Fix hard crash when computing texture on arrays with negative values (issue #72)\n- Added `distance` argument to haralick features (pull request #76, by\n  Guillaume Lemaitre)\n\n### Version 1.4.1 (Dec 20 2015)\n\n-   Add `filter\\_labeled` function\n-   Fix tests on 32 bit platforms and older versions of numpy\n\n### Version 1.4.0 (July 8 2015)\n\n-   Added `mahotas-features.py` script\n-   Add short argument to citation() function\n-   Add max\\_iter argument to thin() function\n-   Fixed labeled.bbox when there is no background (issue \\#61, reported\n    by Daniel Haehn)\n-   bbox now allows dimensions greater than 2 (including when using the\n    `as_slice` and `border` arguments)\n-   Extended croptobbox for dimensions greater than 2\n-   Added use\\_x\\_minus\\_y\\_variance option to haralick features\n-   Add function `lbp_names`\n\n### Version 1.3.0 (April 28 2015)\n\n-   Improve memory handling in freeimage.write\\_multipage\n-   Fix moments parameter swap\n-   Add labeled.bbox function\n-   Add return\\_mean and return\\_mean\\_ptp arguments to haralick\n    function\n-   Add difference of Gaussians filter (by Jianyu Wang)\n-   Add Laplacian filter (by Jianyu Wang)\n-   Fix crash in median\\_filter when mismatched arguments are passed\n-   Fix gaussian\\_filter1d for ndim \\> 2\n\n### Version 1.2.4 (December 23 2014)\n\n-   Add PIL based IO\n\n### Version 1.2.3 (November 8 2014)\n\n-   Export mean\\_filter at top level\n-   Fix to Zernike moments computation (reported by Sergey Demurin)\n-   Fix compilation in platforms without npy\\_float128 (patch by Gabi\n    Davar)\n\n### Version 1.2.2 (October 19 2014)\n\n-   Add minlength argument to labeled\\_sum\n-   Generalize regmax/regmin to work with floating point images\n-   Allow floating point inputs to `cwatershed()`\n-   Correctly check for float16 & float128 inputs\n-   Make sobel into a pure function (i.e., do not normalize its input)\n-   Fix sobel filtering\n\n### Version 1.2.1 (July 21 2014)\n\n-   Explicitly set numpy.include\\_dirs() in setup.py [patch by Andrew\n    Stromnov]\n\n### Version 1.2 (July 17 2014)\n\n-   Export locmax|locmin at the mahotas namespace level\n-   Break away ellipse\\_axes from eccentricity code as it can be useful\n    on its own\n-   Add `find()` function\n-   Add `mean_filter()` function\n-   Fix `cwatershed()` overflow possibility\n-   Make labeled functions more flexible in accepting more types\n-   Fix crash in `close_holes()` with nD images (for n \\> 2)\n-   Remove matplotlibwrap\n-   Use standard setuptools for building (instead of numpy.distutils)\n-   Add `overlay()` function\n\n### Version 1.1.1 (July 4 2014)\n\n-   Fix crash in close\\_holes() with nD images (for n \\> 2)\n\n### 1.1.0 (February 12 2014)\n\n-   Better error checking\n-   Fix interpolation of integer images using order 1\n-   Add resize\\_to & resize\\_rgb\\_to\n-   Add coveralls coverage\n-   Fix SLIC superpixels connectivity\n-   Add remove\\_regions\\_where function\n-   Fix hard crash in convolution\n-   Fix axis handling in convolve1d\n-   Add normalization to moments calculation\n\nSee the\n[ChangeLog](https://github.com/luispedro/mahotas/blob/master/ChangeLog)\nfor older version.\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fluispedro%2Fmahotas.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fluispedro%2Fmahotas?ref=badge_large)",
    "description_content_type": "text/markdown",
    "docs_url": "https://pythonhosted.org/mahotas/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://luispedro.org/software/mahotas",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mahotas",
    "package_url": "https://pypi.org/project/mahotas/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/mahotas/",
    "project_urls": {
      "Homepage": "http://luispedro.org/software/mahotas"
    },
    "release_url": "https://pypi.org/project/mahotas/1.4.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mahotas: Computer Vision Library",
    "version": "1.4.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17077809,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0807e5919af7d1b93fc5e85fe5bd2ba68379cfb9add9f83cdff95b65ea7f46d",
        "md5": "33416c522c20e8504287b572cf6ab53a",
        "sha256": "a2ca4cd8b33bfe56d646956c56b5de1087c9d44d579386b6b8ad19303272b496"
      },
      "downloads": -1,
      "filename": "mahotas-1.4.7.tar.gz",
      "has_sig": false,
      "md5_digest": "33416c522c20e8504287b572cf6ab53a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1530911,
      "upload_time": "2019-07-10T18:37:45",
      "upload_time_iso_8601": "2019-07-10T18:37:45.555172Z",
      "url": "https://files.pythonhosted.org/packages/c0/80/7e5919af7d1b93fc5e85fe5bd2ba68379cfb9add9f83cdff95b65ea7f46d/mahotas-1.4.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}