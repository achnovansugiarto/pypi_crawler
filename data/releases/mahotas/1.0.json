{
  "info": {
    "author": "Luis Pedro Coelho",
    "author_email": "luis@luispedro.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "=======\nMahotas\n=======\nPython Computer Vision Library\n------------------------------\n\nThis library of fast computer vision algorithms (all implemented in C++)\noperates over numpy arrays for convenience.\n\nNotable algorithms:\n - watershed.\n - convex points calculations.\n - hit & miss. thinning.\n - Zernike & Haralick, LBP, and TAS features.\n - freeimage based numpy image loading (requires freeimage libraries to be\n   installed).\n - Speeded-Up Robust Features (SURF), a form of local features.\n - thresholding.\n - convolution.\n - Sobel edge detection.\n - spline interpolation\n\nMahotas currently has over 100 functions for image processing and computer\nvision and it keeps growing.\n\nThe release schedule is roughly one release a month and each release brings new\nfunctionality and improved performance. The interface is very stable, though,\nand code written using a version of mahotas from years back will work just fine\nin the current version, except it will be faster (some interfaces are\ndeprecated and will be removed after a few years, but in the meanwhile, you\nonly get a warning). In a few unfortunate cases, there was a bug in the old\ncode and your results will change for the better.\n\nThere is a `manuscript about mahotas <http://arxiv.org/abs/1211.4907>`__, which\nwill hopefully evolve into a journal publication later.\n\nExamples\n--------\n\nThis is a simple example of loading a file (called `test.jpeg`) and calling\n`watershed` using above threshold regions as a seed (we use Otsu to define\nthreshold).\n\n::\n\n    import numpy as np\n    from scipy import ndimage\n    import mahotas\n    import pylab\n\n    img = mahotas.imread('test.jpeg')\n    T_otsu = mahotas.thresholding.otsu(img)\n    seeds,_ = ndimage.label(img > T_otsu)\n    labeled = mahotas.cwatershed(img.max() - img, seeds)\n\nHere is a very simple example of using ``mahotas.distance`` (which computes a\ndistance map)::\n\n    import pylab as p\n    import numpy as np\n    import mahotas\n\n    f = np.ones((256,256), bool)\n    f[200:,240:] = False\n    f[128:144,32:48] = False\n    # f is basically True with the exception of two islands: one in the lower-right\n    # corner, another, middle-left\n\n    dmap = mahotas.distance(f)\n    p.imshow(dmap)\n    p.show()\n\n(This is under ``mahotas/demos/distance.py``).\n\nHow to invoke thresholding functions::\n\n    import mahotas\n    import numpy as np\n    from pylab import imshow, gray, show, subplot\n    from os import path\n\n    photo = mahotas.imread('luispedro.org', as_grey=True)\n    photo = photo.astype(np.uint8)\n\n    T_otsu = mahotas.otsu(photo)\n    thresholded_otsu = (photo > T_otsu)\n\n    T_rc = mahotas.rc(photo)\n    thresholded_rc = (photo > T_rc)\n\n\nInstall\n-------\n\nYou will need python (naturally), numpy, and a C++ compiler. Then you should be\nable to either\n\nDownload the source and then run::\n\n    python setup.py install\n\nor use one of::\n\n    pip install mahotas\n    easy_install mahotas\n\nYou can test your instalation by running::\n\n    python -c \"import mahotas; mahotas.test()\"\n\nIf something fails, you can obtain more detail by running it again in *verbose\nmode*::\n\n    python -c \"import mahotas; mahotas.test(verbose=True)\"\n\nDevelopment\n-----------\n\nDevelopment happens on github (`http://github.com/luispedro/mahotas <https://github.com/luispedro/mahotas>`__).\n\nYou can set the ``DEBUG`` environment variable before compilation to get a\ndebug compile. You can set it to the value ``2`` to get extra checks::\n\n    export DEBUG=2\n    python setup.py test\n\nBe careful not to use this in production unless you are chasing a bug. The\ndebug modes are pretty slow as they add many runtime checks.\n\nTravis Build Status\n~~~~~~~~~~~~~~~~~~~\n\n.. image:: https://travis-ci.org/luispedro/mahotas.png\n       :target: https://travis-ci.org/luispedro/mahotas\n\n\nContacts\n--------\n\nFor bug reports and fixes, feel free to use my email: luis@luispedro.org\n\nFor more general with achieving certain tasks in Python, the `pythonvision\nmailing list <http://groups.google.com/group/pythonvision?pli=1>`__ is a much\nbetter venue and generates a public discussion log for others in the future.\nYou can use it for mahotas or general computer vision in Python questions.\n\nRecent Changes\n--------------\n\n1.0 (May 21 2013)\n~~~~~~~~~~~~~~~~~\n- Make matplotlib a soft dependency\n- Add demos.image_path() function\n- Add citation() function\n- Fix a few corner cases in texture analysis\n- Integrate with travis\n- Update citation (include DOI)\n\n0.99 (May 4 2013)\n~~~~~~~~~~~~~~~~~\n- Make matplotlib a soft dependency\n- Add demos.image_path() function\n- Add citation() function\n\nThis version is **1.0 beta**.\n\n0.9.8 (April 22 2013)\n~~~~~~~~~~~~~~~~~~~~~\n- Use matplotlib as IO backend (fallback only)\n- Compute dense SURF features\n- Fix sobel edge filtering (post-processing)\n- Faster 1D convultions (including faster Gaussian filtering)\n- Location independent tests (run mahotas.tests.run() anywhere)\n- Add labeled.is_same_labeling function\n- Post filter SLIC for smoother regions\n- Fix compilation warnings on several platforms\n\n\n0.9.7 (February 03 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Add ``haralick_features`` function\n- Add ``out`` parameter to morph functions which were missing it\n- Fix erode() & dilate() with empty structuring elements\n- Special case binary erosion/dilation in C-Arrays\n- Fix long-standing warning in TAS on zero inputs\n- Add ``verbose`` argument to tests.run()\n- Add ``circle_se`` to ``morph``\n- Allow ``loc(max|min)`` to take floating point inputs\n- Add Bernsen local thresholding (``bernsen`` and ``gbernsen`` functions)\n\n0.9.6 (December 02 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Fix ``distance()`` of non-boolean images (issue #24 on github)\n- Fix encoding issue on PY3 on Mac OS (issue #25 on github)\n- Add ``relabel()`` function\n- Add ``remove_regions()`` function in labeled module\n- Fix ``median_filter()`` on the borders (respect the ``mode`` argument)\n- Add ``mahotas.color`` module for conversion between colour spaces\n- Add SLIC Superpixels\n- Many improvements to the documentation\n\n0.9.5 (November 05 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Fix compilation in older G++\n- Faster Otsu thresholding\n- Python 3 support without 2to3\n- Add ``cdilate`` function\n- Add ``subm`` function\n- Add tophat transforms (functions ``tophat_close`` and ``tophat_open``)\n- Add ``mode`` argument to euler() (patch by Karol M. Langner)\n- Add ``mode`` argument to bwperim() & borders() (patch by Karol M. Langner)\n\n\n0.9.4 (October 10 2012)\n~~~~~~~~~~~~~~~~~~~~~~~\n- Fix compilation on 32-bit machines (Patch by Christoph Gohlke)\n\n0.9.3 (October 9 2012)\n~~~~~~~~~~~~~~~~~~~~~~\n- Fix interpolation (Report by Christoph Gohlke)\n- Fix second interpolation bug (Report and patch by Christoph Gohlke)\n- Update tests to newer numpy\n- Enhanced debug mode (compile with DEBUG=2 in environment)\n- Faster morph.dilate()\n- Add labeled.labeled_max & labeled.labeled_min (This also led to a refactoring\n  of the labeled_* code)\n- Many documentation fixes\n\n\n0.9.2 (September 1 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Fix compilation on Mac OS X 10.8 (reported by Davide Cittaro)\n- Freeimage fixes on Windows by Christoph Gohlke\n- Slightly faster _filter implementaiton\n\n\n0.9.1 (August 28 2012)\n~~~~~~~~~~~~~~~~~~~~~~\n\n- Python 3 support (you need to use ``2to3``)\n- Haar wavelets (forward and inverse transform)\n- Daubechies wavelets (forward and inverse transform)\n- Corner case fix in Otsu thresholding\n- Add soft_threshold function\n- Have polygon.convexhull return an ndarray (instead of a list)\n- Memory usage improvements in regmin/regmax/close_holes (first reported\n  as issue #9 by thanasi)\n\n\n0.9 (July 16 2012)\n~~~~~~~~~~~~~~~~~~\n- Auto-convert integer to double on gaussian_filter (previously, integer\n  values would result in zero-valued outputs).\n- Check for integer types in (reg|loc)(max|min)\n- Use name `out` instead of `output` for output arguments. This matches\n  Numpy better\n- Switched to MIT License\n\nSee the ``ChangeLog`` for older version.\n\n*Website*: `http://luispedro.org/software/mahotas\n<http://luispedro.org/software/mahotas>`_\n\n*API Docs*: `http://packages.python.org/mahotas/\n<http://packages.python.org/mahotas/>`_\n\n*Mailing List*: Use the `pythonvision mailing list\n<http://groups.google.com/group/pythonvision?pli=1>`_ for questions, bug\nsubmissions, etc.\n\n*Author*: Luis Pedro Coelho (with code by Zachary Pincus [from scikits.image],\nPeter J. Verveer [from scipy.ndimage], and Davis King [from dlib])",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/mahotas/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://luispedro.org/software/mahotas",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mahotas",
    "package_url": "https://pypi.org/project/mahotas/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/mahotas/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://luispedro.org/software/mahotas"
    },
    "release_url": "https://pypi.org/project/mahotas/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Mahotas: Computer Vision Library",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17077809,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f159edad07a071dfc127e11206ff8d6101d6988e74fbf0bf65c82dc5daab7f5",
        "md5": "62c9ac3deff4da001aa4b658ea7a187d",
        "sha256": "1aa75071916f3b8b70781965ea122a2b5f726d89d0dc360f94f2859342fbaec9"
      },
      "downloads": -1,
      "filename": "mahotas-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "62c9ac3deff4da001aa4b658ea7a187d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1473486,
      "upload_time": "2013-05-21T12:09:19",
      "upload_time_iso_8601": "2013-05-21T12:09:19.763280Z",
      "url": "https://files.pythonhosted.org/packages/9f/15/9edad07a071dfc127e11206ff8d6101d6988e74fbf0bf65c82dc5daab7f5/mahotas-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}