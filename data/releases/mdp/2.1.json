{
  "info": {
    "author": "Pietro Berkes and Tiziano Zito",
    "author_email": "berkes@gatsby.ucl.ac.uk, t.zito@biologie.hu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "Modular toolkit for Data Processing (MDP) is a data processing\n        framework written in Python.\n        \n        From the user's perspective, MDP consists of a collection of trainable\n        supervised and unsupervised algorithms or other data processing units\n        (nodes) that can be combined into data processing flows. Given a\n        sequence of input data, MDP takes care of successively training or\n        executing all nodes in the flow. This structure allows to specify\n        complex algorithms as a sequence of simpler data processing steps in a\n        natural way. Training can be performed using small chunks of input\n        data, so that the use of very large data sets becomes possible while\n        reducing the memory requirements. Memory usage can also be minimized\n        by defining the internals of the nodes to be single precision.\n        \n        The base of readily available algorithms includes Principal Component\n        Analysis, two flavors of Independent Component Analysis, Slow Feature\n        Analysis, Independent Slow Feature Analysis, Gaussian Classifiers,\n        Growing Neural Gas, Fisher Discriminant Analysis, and Factor Analysis.\n        \n        From the developer's perspective, MDP is a framework to make the\n        implementation of new algorithms easier. The basic class 'Node' takes\n        care of tedious tasks like numerical type and dimensionality checking,\n        leaving the developer free to concentrate on the implementation of the\n        training and execution phases. The node then automatically integrates\n        with the rest of the library and can be used in a flow together with\n        other nodes. A node can have multiple training phases and even an\n        undetermined number of phases. This allows for example the\n        implementation of algorithms that need to collect some statistics on\n        the whole input before proceeding with the actual training, or others\n        that need to iterate over a training phase until a convergence\n        criterion is satisfied. The ability to train each phase using chunks\n        of input data is maintained if the chunks are generated with\n        iterators. Moreover, crash recovery is optionally available: in case\n        of failure, the current state of the flow is saved for later\n        inspection.\n        \n        MDP has been written in the context of theoretical research in\n        neuroscience, but it has been designed to be helpful in any context\n        where trainable data processing algorithms are used. Its simplicity on\n        the user side together with the reusability of the implemented nodes\n        make it also a valid educational tool.\n        \n        As its user base is steadily increasing, MDP appears as a good\n        candidate for becoming a common repository of user-supplied, freely\n        available, Python implemented data processing algorithms.\n        \n        http://mdp-toolkit.sourceforge.net",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://sourceforge.net/project/showfiles.php?group_id=116959",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mdp-toolkit.sourceforge.net",
    "keywords": null,
    "license": "http://www.gnu.org/copyleft/lesser.html",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MDP",
    "package_url": "https://pypi.org/project/MDP/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/MDP/",
    "project_urls": {
      "Download": "http://sourceforge.net/project/showfiles.php?group_id=116959",
      "Homepage": "http://mdp-toolkit.sourceforge.net"
    },
    "release_url": "https://pypi.org/project/MDP/2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "MDP is a Python data processing framework. Implemented algorithms include: Principal Component Analysis, Independent Component Analysis, Slow Feature Analysis, Independent Slow Feature Analysis, and many more.",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7096179,
  "urls": [],
  "vulnerabilities": []
}