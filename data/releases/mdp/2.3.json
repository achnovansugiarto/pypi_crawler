{
  "info": {
    "author": "Pietro Berkes, Niko Wilbert, and Tiziano Zito",
    "author_email": "berkes@gatsby.ucl.ac.uk, mail@nikowilbert.de, tiziano.zito@bccn-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "Modular toolkit for Data Processing (MDP) is a data processing\n        framework written in Python.\n        \n        From the user's perspective, MDP consists of a collection of trainable\n        supervised and unsupervised algorithms or other data processing units\n        (nodes) that can be combined into data processing flows and more\n        complex feed-forward network architectures. Given a sequence of input\n        data, MDP takes care of successively training or executing all nodes\n        in the network. This structure allows to specify complex algorithms as\n        a sequence of simpler data processing steps in a natural way. Training\n        can be performed using small chunks of input data, so that the use of\n        very large data sets becomes possible while reducing the memory\n        requirements. Memory usage can also be minimized by defining the\n        internals of the nodes to be single precision.\n        \n        The base of readily available algorithms includes Principal Component\n        Analysis (PCA and NIPALS), four flavors of Independent Component\n        Analysis (CuBICA, FastICA, and JADE), Slow Feature Analysis,\n        Independent Slow Feature Analysis, Gaussian Classifiers, Growing\n        Neural Gas, Fisher Discriminant Analysis, Factor Analysis, Restricted\n        Boltzmann Machine, and many more.\n        \n        From the developer's perspective, MDP is a framework to make the\n        implementation of new supervised and unsupervised algorithms\n        easier. The basic class Node takes care of tedious tasks like\n        numerical type and dimensionality checking, leaving the developer free\n        to concentrate on the implementation of the training and execution\n        phases. The node then automatically integrates with the rest of the\n        library and can be used in a flow together with other nodes. A node\n        can have multiple training phases and even an undetermined number of\n        phases. This allows for example the implementation of algorithms that\n        need to collect some statistics on the whole input before proceeding\n        with the actual training, or others that need to iterate over a\n        training phase until a convergence criterion is satisfied. The ability\n        to train each phase using chunks of input data is maintained if the\n        chunks are generated with iterators. Moreover, crash recovery is\n        optionally available: in case of failure, the current state of the\n        flow is saved for later inspection.\n        \n        MDP has been written in the context of theoretical research in\n        neuroscience, but it has been designed to be helpful in any context\n        where trainable data processing algorithms are used. Its simplicity on\n        the user side together with the reusability of the implemented nodes\n        make it also a valid educational tool.\n        \n        As its user and contributor base is steadily increasing, MDP appears\n        as a good candidate for becoming a common repository of user-supplied,\n        freely available, Python implemented data processing algorithms.\n        \n        http://mdp-toolkit.sourceforge.net",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://sourceforge.net/project/showfiles.php?group_id=116959",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mdp-toolkit.sourceforge.net",
    "keywords": null,
    "license": "http://www.gnu.org/licenses/lgpl.html",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MDP",
    "package_url": "https://pypi.org/project/MDP/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/MDP/",
    "project_urls": {
      "Download": "http://sourceforge.net/project/showfiles.php?group_id=116959",
      "Homepage": "http://mdp-toolkit.sourceforge.net"
    },
    "release_url": "https://pypi.org/project/MDP/2.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Modular toolkit for Data Processing (MDP) is a Python data processing framework. Implemented algorithms include: Principal Component Analysis (PCA), Independent Component Analysis (ICA), Slow Feature Analysis (SFA), Independent Slow Feature Analysis (ISFA), Growing Neural Gas (GNG), Factor Analysis, Fisher Discriminant Analysis (FDA), Gaussian Classifiers, Restricted Boltzmann Machines, and many more.",
    "version": "2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7096179,
  "urls": [],
  "vulnerabilities": []
}