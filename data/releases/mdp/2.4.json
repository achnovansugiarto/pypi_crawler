{
  "info": {
    "author": "Pietro Berkes, Niko Wilbert, and Tiziano Zito",
    "author_email": "berkes@brandeis.edu, mail@nikowilbert.de, tiziano.zito@bccn-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "The Modular toolkit for Data Processing (MDP) is a library of widely\nused data processing algorithms that can be combined according to a\npipeline analogy to build more complex data processing software.\n\nFrom the user's perspective, MDP consists of a collection of\nsupervised and unsupervised learning algorithms, and other data\nprocessing units (nodes) that can be combined into data processing\nsequences (flows) and more complex feed-forward network\narchitectures. Given a set of input data, MDP takes care of\nsuccessively training or executing all nodes in the network. This\nallows the user to specify complex algorithms as a series of simpler\ndata processing steps in a natural way.\n\nThe base of available algorithms is steadily increasing and includes,\nto name but the most common, Principal Component Analysis (PCA and\nNIPALS), several Independent Component Analysis algorithms (CuBICA,\nFastICA, TDSEP, and JADE), Slow Feature Analysis, Gaussian\nClassifiers, Restricted Boltzmann Machine, and Locally Linear\nEmbedding.\n\nParticular care has been taken to make computations efficient in terms\nof speed and memory.  To reduce memory requirements, it is possible to\nperform learning using batches of data, and to define the internal\nparameters of the nodes to be single precision, which makes the usage\nof very large data sets possible.  Moreover, the 'parallel' subpackage\noffers a parallel implementation of the basic nodes and flows.\n\nFrom the developer's perspective, MDP is a framework that makes the\nimplementation of new supervised and unsupervised learning algorithms\neasy and straightforward.  The basic class, 'Node', takes care of\ntedious tasks like numerical type and dimensionality checking, leaving\nthe developer free to concentrate on the implementation of the\nlearning and execution phases. Because of the common interface, the\nnode then automatically integrates with the rest of the library and\ncan be used in a network together with other nodes. A node can have\nmultiple training phases and even an undetermined number of phases.\nThis allows the implementation of algorithms that need to collect some\nstatistics on the whole input before proceeding with the actual\ntraining, and others that need to iterate over a training phase until\na convergence criterion is satisfied. The ability to train each phase\nusing chunks of input data is maintained if the chunks are generated\nwith iterators. Moreover, crash recovery is optionally available: in\ncase of failure, the current state of the flow is saved for later\ninspection.\n\nMDP has been written in the context of theoretical research in\nneuroscience, but it has been designed to be helpful in any context\nwhere trainable data processing algorithms are used. Its simplicity on\nthe user side together with the reusability of the implemented nodes\nmake it also a valid educational tool.\n\nhttp://mdp-toolkit.sourceforge.net",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://sourceforge.net/project/showfiles.php?group_id=116959",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mdp-toolkit.sourceforge.net",
    "keywords": null,
    "license": "http://www.gnu.org/licenses/lgpl.html",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MDP",
    "package_url": "https://pypi.org/project/MDP/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/MDP/",
    "project_urls": {
      "Download": "http://sourceforge.net/project/showfiles.php?group_id=116959",
      "Homepage": "http://mdp-toolkit.sourceforge.net"
    },
    "release_url": "https://pypi.org/project/MDP/2.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Modular toolkit for Data Processing (MDP) is a library of widely used data processing algorithms that can be combined according to a pipeline analogy to build more complex data processing software. Implemented algorithms include Principal Component Analysis (PCA), Independent Component Analysis (ICA), Slow Feature Analysis (SFA), and many more.",
    "version": "2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7096179,
  "urls": [],
  "vulnerabilities": []
}