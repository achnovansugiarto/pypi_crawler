{
  "info": {
    "author": "Pietro Berkes and Tiziano Zito",
    "author_email": "{p.berkes,t.zito}@biologie.hu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development"
    ],
    "description": "Modular toolkit for Data Processing (MDP) is a Python library to\nimplement data processing elements (nodes) and to combine them into\ndata processing sequences (flows).\n\nA node is the basic unit in MDP, and it represents a data processing\nelement, like for example a learning algorithm, a filter, a\nvisualization step etc. Each node can have a training phase, during\nwhich the internal structures are learned from training data (e.g. the\nweights of a neural network are adapted or the covariance matrix is\nestimated) and an execution phase, where new data can be processed\nforwards (by processing the data through the node) or backwards (by\napplying the inverse of the transformation computed by the node if\ndefined). MDP is designed to make the implementation of new algorithms\neasy and intuitive, for example by setting automatically input and\noutput dimension and by casting the data to match the typecode\n(e.g. float or double precision) of the internal structures. Most of\nthe nodes were designed to be applied to arbitrarily long sets of\ndata: the internal structures can be updated successively by sending\nchunks of the input data (this is equivalent to online learning if the\nchunks consists of single observations, or to batch learning if the\nwhole data is sent in a single chunk). Already implemented nodes\ninclude Principal Component Analysis (PCA), Independent Component\nAnalysis (ICA), Slow Feature Analysis (SFA), and Growing Neural Gas\nNetwork.\n\nA flow consists in an acyclic graph of nodes (currently only node\nsequences are implemented). The data is sent to an input node and is\nsuccessively processed by the following nodes on the graph. The\ngeneral flow implementation automatizes the training, execution and\ninverse execution (if defined) of the whole graph. Crash recovery is\noptionally available: in case of failure, the current state of the flow\nis saved for later inspection. A subclass of the basic flow class\nallows user-supplied checkpoint functions to be executed at the end of\neach phase, for example to save the internal structures of a node for\nlater analysis.\n\nMDP supports the most common numerical extensions to Python and the\nsymeig package (a Python wrapper for the LAPACK functions to solve\nthe standard and generalized eigenvalue problems for symmetric\n(hermitian) positive definite matrices). MDP also includes graph\n(a lightweight package to handle graphs).\n\nWhen used together with SciPy (the scientific Python library) and symeig,\nMDP gives to the scientific programmer the full power of well-known C and\nFORTRAN data processing libraries.  MDP helps the programmer to\nexploit Python object oriented design with C and FORTRAN efficiency.\n\nMDP has been written for research in neuroscience, but it has been\ndesigned to be helpful in any context where trainable data processing\nalgorithms are used.  Its simplicity on the user side together with\nthe reusability of the implemented nodes could make it also a valid\neducational tool.\n\nhttp://mdp-toolkit.sourceforge.net",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://sourceforge.net/project/showfiles.php?group_id=116959",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mdp-toolkit.sourceforge.net",
    "keywords": null,
    "license": "http://www.gnu.org/copyleft/lesser.html",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MDP",
    "package_url": "https://pypi.org/project/MDP/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/MDP/",
    "project_urls": {
      "Download": "http://sourceforge.net/project/showfiles.php?group_id=116959",
      "Homepage": "http://mdp-toolkit.sourceforge.net"
    },
    "release_url": "https://pypi.org/project/MDP/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Modular toolkit for Data Processing (MDP) is a Python library to perform data processing. Already implemented algorithms include: Principal Component Analysis (PCA), Independent Component Analysis (ICA), Slow Feature Analysis (SFA), and Growing Neural Gas (GNG).",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7096179,
  "urls": [],
  "vulnerabilities": []
}