{
  "info": {
    "author": "Pietro Berkes, Niko Wilbert, and Tiziano Zito",
    "author_email": "berkes@brandeis.edu, mail@nikowilbert.de, tiziano.zito@bccn-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "The Modular toolkit for Data Processing (MDP) is a library of widely\n        used data processing algorithms that can be combined according to a\n        pipeline analogy to build more complex data processing software.\n        \n        From the user's perspective, MDP consists of a collection of\n        supervised and unsupervised learning algorithms, and other data\n        processing units (nodes) that can be combined into data processing\n        sequences (flows) and more complex feed-forward network\n        architectures. Given a set of input data, MDP takes care of\n        successively training or executing all nodes in the network. This\n        allows the user to specify complex algorithms as a series of simpler\n        data processing steps in a natural way.\n        \n        The base of available algorithms is steadily increasing and includes,\n        to name but the most common, Principal Component Analysis (PCA and\n        NIPALS), several Independent Component Analysis algorithms (CuBICA,\n        FastICA, TDSEP, JADE, and XSFA), Slow Feature Analysis, Gaussian\n        Classifiers, Restricted Boltzmann Machine, and Locally Linear\n        Embedding.\n        \n        Particular care has been taken to make computations efficient in terms\n        of speed and memory.  To reduce memory requirements, it is possible to\n        perform learning using batches of data, and to define the internal\n        parameters of the nodes to be single precision, which makes the usage\n        of very large data sets possible.  Moreover, the 'parallel' subpackage\n        offers a parallel implementation of the basic nodes and flows.\n        \n        From the developer's perspective, MDP is a framework that makes the\n        implementation of new supervised and unsupervised learning algorithms\n        easy and straightforward.  The basic class, 'Node', takes care of\n        tedious tasks like numerical type and dimensionality checking, leaving\n        the developer free to concentrate on the implementation of the\n        learning and execution phases. Because of the common interface, the\n        node then automatically integrates with the rest of the library and\n        can be used in a network together with other nodes. A node can have\n        multiple training phases and even an undetermined number of phases.\n        This allows the implementation of algorithms that need to collect some\n        statistics on the whole input before proceeding with the actual\n        training, and others that need to iterate over a training phase until\n        a convergence criterion is satisfied. The ability to train each phase\n        using chunks of input data is maintained if the chunks are generated\n        with iterators. Moreover, crash recovery is optionally available: in\n        case of failure, the current state of the flow is saved for later\n        inspection.\n        \n        MDP has been written in the context of theoretical research in\n        neuroscience, but it has been designed to be helpful in any context\n        where trainable data processing algorithms are used. Its simplicity on\n        the user side together with the reusability of the implemented nodes\n        make it also a valid educational tool.\n        \n        http://mdp-toolkit.sourceforge.net",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://sourceforge.net/project/showfiles.php?group_id=116959",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mdp-toolkit.sourceforge.net",
    "keywords": null,
    "license": "http://www.gnu.org/licenses/lgpl.html",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MDP",
    "package_url": "https://pypi.org/project/MDP/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/MDP/",
    "project_urls": {
      "Download": "http://sourceforge.net/project/showfiles.php?group_id=116959",
      "Homepage": "http://mdp-toolkit.sourceforge.net"
    },
    "release_url": "https://pypi.org/project/MDP/2.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Modular toolkit for Data Processing (MDP) is a library of widely used data processing algorithms that can be combined according to a pipeline analogy to build more complex data processing software. Implemented algorithms include Principal Component Analysis (PCA), Independent Component Analysis (ICA), Slow Feature Analysis (SFA), and many more.",
    "version": "2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7096179,
  "urls": [],
  "vulnerabilities": []
}