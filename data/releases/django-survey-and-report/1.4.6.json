{
  "info": {
    "author": "Pierre SASSOULAS",
    "author_email": "pierre.sassoulas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: Chinese (Traditional)",
      "Natural Language :: Dutch",
      "Natural Language :: English",
      "Natural Language :: French",
      "Natural Language :: German",
      "Natural Language :: Indonesian",
      "Natural Language :: Japanese",
      "Natural Language :: Polish",
      "Natural Language :: Portuguese",
      "Natural Language :: Russian",
      "Natural Language :: Spanish",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.org/Pierre-Sassoulas/django-survey.svg?branch=master)](https://travis-ci.org/Pierre-Sassoulas/django-survey)\n[![Coverage Status](https://coveralls.io/repos/github/Pierre-Sassoulas/django-survey/badge.svg?branch=master)](https://coveralls.io/github/Pierre-Sassoulas/django-survey?branch=master)\n[![PyPI version](https://badge.fury.io/py/django-survey-and-report.svg)](https://badge.fury.io/py/django-survey-and-report)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\n# Django survey\n\nA django survey app that can export results as CSV or PDF using your native language.\n\n`django-survey-and-report` on pypi. Based on and compatible with `django-survey`. You\nwill be able to migrate your data from an ancient version of `django-survey`, but it has\nbeen ported to python 3, and you can export results as CSV or PDF using your native\nlanguage.\n\nProfessional support for django-survey-and-report is available as part of the\n[Tidelift Subscription](https://tidelift.com/subscription/pkg/pypi-django-survey-and-report?utm_source=pypi-django-survey-and-report&utm_medium=referral&utm_campaign=enterprise)\n\n## Table of contents\n\n- [Language available](#language-available)\n- [Getting started](#getting-started)\n- [Making a survey](#making-a-survey)\n- [Generating a pdf report from the survey's result](#generating-a-pdf-report-from-the-surveys-result)\n  - [Basic example](#basic-example)\n  - [Sankey's diagram](#sankey-diagram)\n  - [Advanced example](#advanced-example)\n  - [Implementing a custom treatment](#implementing-a-custom-treatment)\n- [Credit](#credits)\n\n## Language available\n\nThe software is developed in english. Other available languages are :\n\n- [x] Brazilian-Portuguese thanks to [Rafael Capaci](https://github.com/capaci)\n- [x] Chinese thanks to [朱聖黎 (Zhu Sheng Li)](https://github.com/digglife/)\n- [x] French thanks to [Pierre Sassoulas](https://github.com/Pierre-Sassoulas/)\n- [x] German thanks to [Georg Elsas](https://github.com/gjelsas)\n- [x] Indonesian thanks to [Dhana Dhira](https://github.com/ddhira123)\n- [x] Japanese thanks to [Nobukuni Suzue](https://github.com/nsuzue/)\n- [x] Spanish thanks to [Javier Ordóñez](https://github.com/ordonja/)\n- [x] Russian thanks to [Vlad M.](https://github.com/manchos/)\n- [x] Polish thanks to [Daniel Horner](https://github.com/d-horner/)\n- [x] Dutch thanks to [John Guyver](https://github.com/JohnGuyver117)\n- [x] Turkish thanks to [Hüseyin Emre Armağan](https://github.com/Telomeraz)\n- [x] Greek thanks to [Sotirios Zogos](https://github.com/sotiriszogos)\n\n## Getting started\n\nAdd `django-survey-and-report` to your requirements and get it with pip.\n\n```bash\necho 'django-survey-and-report' >> requirements.txt\npip install -r requirements.txt\n```\n\nAdd `bootstrapform` and `survey` in the `INSTALLED_APPS` in your settings :\n\n```python\nINSTALLED_APPS = [\n\t# Your own installed apps here\n]\n\nfrom pathlib import Path\n\nCSV_DIRECTORY = Path(\"csv\") # Define the directory where csv are exported\nTEX_DIRECTORY = Path(\"tex\") # Define the directory where tex files and pdf are exported\n\nINSTALLED_APPS += [\n\t'bootstrapform',\n\t'survey'\n]\n```\n\nAdd a URL entry to your project’s urls.py, for example:\n\n```python\nfrom django.conf import settings\nfrom django.conf.urls import include\n\ntry:\n    from django.conf.urls import url\nexcept ImportError:\n    # Django 4.0 replaced url by something else\n    # See https://stackoverflow.com/a/70319607/2519059\n    from django.urls import re_path as url\n\nurlpatterns = [\n    # Your own url pattern here\n]\n\nif 'survey' in settings.INSTALLED_APPS:\n    urlpatterns += [\n        url(r'^survey/', include('survey.urls'))\n    ]\n```\n\nNote: you can use whatever you wish as the URL prefix.\n\nYou can also change some options:\n\n```python\n# Permit to open the csv in Excel without problem with separator\n# Using this trick : https://superuser.com/a/686415/567417\nEXCEL_COMPATIBLE_CSV = True\n\n# The separator for questions (Default to \",\")\nCHOICES_SEPARATOR = \"|\"\n\n# What is shown in export when the user do not answer (Default to \"Left blank\")\nUSER_DID_NOT_ANSWER = \"NAA\"\n\n# Path to the Tex configuration file (default to an internal file that should be sufficient)\nfrom pathlib import Path\nTEX_CONFIGURATION_FILE = Path(\"tex\", \"tex.conf\")\n\n# Default color for exported pdf pie (default to \"red!50\")\nSURVEY_DEFAULT_PIE_COLOR = \"blue!50\"\n```\n\nTo uninstall `django-survey-and-report`, simply comment out or remove the 'survey' line\nin your `INSTALLED_APPS`.\n\nIf you want to use the pdf rendering you need to install `xelatex`. If you're using the\nSankey's diagram generation you will also have to install `python-tk` (for python 2.7)\nor `python3-tk` (for python 3.x).\n\n## Making a survey\n\nUsing the admin interface you can create surveys, add questions, give questions\ncategories, and mark them as required or not. You can define choices for answers using\ncomma separated words.\n\n![Creating of a question](doc/creating_questions.png \"Creating of a question\")\n\nThe front-end survey view then automatically populates based on the questions that have\nbeen defined and published in the admin interface. We use bootstrap3 to render them.\n\n![Answering a survey](doc/answering_questions.png \"Answering a survey\")\n\nSubmitted responses can be viewed via the admin backend, in an exported csv or in a pdf\ngenerated with latex.\n\n## Generating a pdf report from the survey's result\n\nThere is a default configuration for PDF generation, but you might want to change\n`TEX_CONFIGURATION_FILE` for better results (in particular for language other than\nenglish).\n\nYou can manage the way the report is created in a yaml file, globally, survey by survey,\nor question by question. In order to render pdf you will need to install `xelatex`. You\nwill also need python3-tk for sankey's diagram.\n\nThe results are generated for the server only when needed, but you can force it as a\ndeveloper with:\n\n```bash\npython manage.py exportresult -h\n```\n\nFollowing is an example of a configuration file. you can generate one with:\n\n```bash\npython manage.py generatetexconf -h\n```\n\n### Basic example\n\n```yaml\ngeneric:\n  document_option: 11pt\n\"Test survëy\":\n  document_class: report\n  questions:\n    \"Lorem ipsum dolor sit amët, <strong> consectetur </strong> adipiscing elit.\":\n      chart:\n        type: polar\n        text: pin\n    \"Dolor sit amët, consectetur<strong>  adipiscing</strong>  elit.\":\n      chart:\n        type: cloud\n        text: inside\n```\n\nThe pdf is then generated using the very good pgf-pie library.\n\n![The generated pdf for the polar and pin options](doc/report.png \"The generated pdf for the polar and pin options\")\n\n![The generated pdf for the cloud and inside options](doc/report_2.png \"The generated pdf for the cloud and inside options\")\n\n### Sankey diagram\n\nIf you installed python3-tk, you can also show the relation between two questions using\na sankey diagram :\n\n```yaml\n\"Lorem ipsum dolor sit amët, <strong> consectetur </strong> adipiscing elit.\":\n  chart:\n    type: sankey\n    question: \"Dolor sit amët, consectetur<strong>  adipiscing</strong>  elit.\"\n```\n\nYou get this as a result:\n\n![The generated pdf for the sankey example](doc/sankey.png \"The generated pdf for the sankey example\")\n\n### Advanced example\n\nYou can also limit the answers shown by cardinality, filter them, group them together\nand choose the color for each answer or group of answers.\n\nIf you use this configuration for the previous question:\n\n```yaml\n\"Test survëy\":\n  \"Dolor sit amët, consectetur<strong>  adipiscing</strong>  elit.\":\n    multiple_charts:\n      \"Sub Sub Section with radius=3\":\n        color:\n          Yës: blue!50\n          No: red!50\n          Whatever: red!50!blue!50\n        radius: 3\n      \"Sub Sub Section with text=pin\":\n        group_together:\n          Nah:\n            - No\n            - Whatever\n          K.:\n            - Yës\n        color:\n          Nah: blue!33!red!66\n          K.: blue!50\n        text: pin\n    chart:\n      radius: 1\n      type: cloud\n      text: inside\n```\n\nYou get this as a result:\n\n![The generated pdf for the multiple charts example](doc/multicharts.png \"The generated pdf for the multiple charts example\")\n\n### Implementing a custom treatment\n\nIf you want to make your own treatment you can use your own class, for example.\n\nConfiguration:\n\n```yaml\n\"Test survëy\":\n  questions:\n    \"Ipsum dolor sit amët, <strong> consectetur </strong>  adipiscing elit.\":\n      chart:\n        type: survey.tests.exporter.tex.CustomQuestion2TexChild\n```\n\nCode in `survey.tests.exporter.tex.CustomQuestion2TexChild`:\n\n```python\nfrom survey.exporter.tex.question2tex_chart import Question2TexChart\n\n\nclass CustomQuestion2TexChild(Question2TexChart):\n\n    def get_results(self):\n        self.type = \"polar\"\n        return \"\"\"        2/There were no answer at all,\n        3/But we have a custom treatment to show some,\n        2/You can make minor changes too !\"\"\"\n```\n\nResult:\n\n![The generated pdf for the custom example](doc/custom.png \"The generated pdf for the custom example\")\n\nFor a full example of a configuration file look at `example_conf.yaml` in doc, you can\nalso generate your configuration file with `python manage.py generatetexconf -h`, it\nwill create the default skeleton for every survey and question.\n\nTo guide you during the python development, you can read:\n\n- The default reporter for PieChart in `Question2TexChart` :\n  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_chart.py#L13\n- The Sankey reporter in `Question3TexSankey` :\n  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_sankey.py#L15\n- The Raw reporter in `Question2TexRax` :\n  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_raw.py.\n\nDo not hesitate to make a pull request with your new exporter if it can be of interest\nfor others I'll integrate it.\n\n## Credits\n\nBased on [jessykate's django-survey](https://github.com/jessykate/django-survey), and\ncontribution by jibaku, joshualoving, and ijasperyang in forks of jessykate's project.\n\nWe use [anazalea's pySankey](https://github.com/anazalea/pySankey) for sankey's diagram\nduring reporting.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pierre-Sassoulas/django-survey",
    "keywords": "",
    "license": "AGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-survey-and-report",
    "package_url": "https://pypi.org/project/django-survey-and-report/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-survey-and-report/",
    "project_urls": {
      "Homepage": "https://github.com/Pierre-Sassoulas/django-survey"
    },
    "release_url": "https://pypi.org/project/django-survey-and-report/1.4.6/",
    "requires_dist": [
      "django (<5,>=2.2)",
      "django-bootstrap-form (>=3.4)",
      "django-tastypie (>=0.14.2)",
      "django-registration (>=3.0)",
      "pytz (>=2018.9)",
      "ordereddict (>=1.1)",
      "pyyaml (>=4.2b1)",
      "pySankeyBeta (~=1.3.0) ; extra == 'dev'",
      "django-rosetta ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "python-coveralls ; extra == 'dev'",
      "coveralls ; extra == 'dev'",
      "colorama ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pySankeyBeta (~=1.3.0) ; extra == 'sankey'"
    ],
    "requires_python": "",
    "summary": "A django survey app that can export results as CSV or PDF using your native language.",
    "version": "1.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15579831,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "852fb3bae0cda341db878b4cc341c5ae193014000d7fccf2a4f24bc7a96a9932",
        "md5": "980c4932abe4de4f48a4291010063b2d",
        "sha256": "4edcace2cd1492d4524784acc9ade9c1ade5f9c9b5fed69cf7d44789d19e9cfc"
      },
      "downloads": -1,
      "filename": "django_survey_and_report-1.4.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "980c4932abe4de4f48a4291010063b2d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 428632,
      "upload_time": "2022-10-29T18:02:51",
      "upload_time_iso_8601": "2022-10-29T18:02:51.895981Z",
      "url": "https://files.pythonhosted.org/packages/85/2f/b3bae0cda341db878b4cc341c5ae193014000d7fccf2a4f24bc7a96a9932/django_survey_and_report-1.4.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5f4cd26d347ed55f3d533657daea4a28902afeb5db9c173783639e58e2b0ea1",
        "md5": "14392684c25660cbfeb95c40b167eabd",
        "sha256": "ee4d9f02594d0fa1ba7afd19e85f63fedd110e3fd7d4cd8cf366735d0ac5a3ed"
      },
      "downloads": -1,
      "filename": "django-survey-and-report-1.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "14392684c25660cbfeb95c40b167eabd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 354306,
      "upload_time": "2022-10-29T18:02:53",
      "upload_time_iso_8601": "2022-10-29T18:02:53.521864Z",
      "url": "https://files.pythonhosted.org/packages/b5/f4/cd26d347ed55f3d533657daea4a28902afeb5db9c173783639e58e2b0ea1/django-survey-and-report-1.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}