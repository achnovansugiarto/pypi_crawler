{
  "info": {
    "author": "Romain Picard",
    "author_email": "romain.picard@oakbits.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "======\ndooble\n======\n\n\n.. image:: https://img.shields.io/pypi/v/dooble.svg\n        :target: https://pypi.python.org/pypi/dooble\n\n.. image:: https://img.shields.io/travis/MainRo/dooble.svg\n        :target: https://travis-ci.org/MainRo/dooble\n\n\nDooble is a marble diagram generator from text. It eases the documentation of\nReactiveX standard and custom operators, in a consitent way.\n\nInstallation\n-------------\n\n.. code:: python\n\n        pip install dooble\n\nA sphinx plugin is also available:\n\n.. code:: python\n\n        pip install sphinxcontrib-dooble\n\nUsage\n------\n\nThe text grammar allows to easilly define *observables* and *operators*. The map\noperator with an input observable and an output observable is described the\nfollowing way:\n\n.. code::\n\n        --1--2--3--4-->\n        [ map(i: i*2) ]\n        --2--4--6--8-->\n\nsave this text in a file named *map.txt* and then render it to an image:\n\n.. code:: console\n\n        dooble --input map.txt --output map.png\n\nThe generated image looks like this:\n\n.. image:: examples/map.png\n\n\n*Higher order observables* can also be documented easilly:\n\n.. code::\n\n        --a-b-c---d-e-f-->\n        [     window     ]\n        --+-------+------>\n                  +d-e-f-|\n          +a-b-c-|\n\nsave this text in a file named *window.txt* and then render it to an image:\n\n.. code:: console\n\n        dooble --input window.txt --output window.png\n\nThe generated image looks like this:\n\n.. image:: examples/window.png\n\nFor operators that take several observables as input, it is possible to label\nthem:\n\n.. code::\n\n        --1--2--3--*\n                 a-7-8-|\n        [   catch(a)   ]\n        --1--2--3--7-8-|\n\nsave this text in a file named *catch.txt* and then render it to an image:\n\n.. code:: console\n\n        dooble --input catch.txt --output catch.png\n\nThe generated image looks like this:\n\n.. image:: examples/catch.png\n\nFull grammar\n------------\n\n* Each text line represents either an observable, or an operator\n* Observables are defined with dash lines\n* If an Observable starts with a letter, this letter is considered as a label\n* Each character represent a time span\n* Character ``|`` indicates an observable completion\n* Character ``*`` indicates an observable error\n* Character ``>`` indicates an observable continutation\n* The ``+`` character is used to define anchors of higher order observables\n* operators start with a ``[`` and end with a ``]``\n\nThe full grammar is the following one (in tatsu pseudo ebnf syntax):\n\n.. code::\n\n        @@grammar::dooble\n\n        start = { layer } $ ;\n\n        layer\n        =\n        | obs:observable\n        | op:operator\n        ;\n\n        observable = {skipspan}* [prefix] {lifetime}* completion ;\n        operator = '[' description ']' ;\n\n        prefix = '+' | label ;\n\n        label = /[a-z]/ ;\n\n        lifetime\n        =\n        | ts:timespan\n        | item:item\n        ;\n\n        completion = /[>|*]/ ;\n\n        skipspan = ' ' ;\n        timespan = '-' ;\n        item = /[a-zA-Z0-9+.,]+/ ;\n\n        description = /[a-zA-Z0-9,:+*() <>_]+/ ;\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2019-02-08)\n------------------\n\n* First release on PyPI.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mainro/dooble",
    "keywords": "dooble",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dooble",
    "package_url": "https://pypi.org/project/dooble/",
    "platform": "",
    "project_url": "https://pypi.org/project/dooble/",
    "project_urls": {
      "Homepage": "https://github.com/mainro/dooble"
    },
    "release_url": "https://pypi.org/project/dooble/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A marble diagram generator",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8036074,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cba7e20d3639a223c9d3dee45f7b6432f790be59c3cf52a31a8837b8bd68a4c",
        "md5": "eec66bedd80b6616df08a428af9d19b3",
        "sha256": "e02ae9236da43e3d8c3018860a0e83bf09f48711c24d49178f0f5ebf0952bc2b"
      },
      "downloads": -1,
      "filename": "dooble-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eec66bedd80b6616df08a428af9d19b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13348,
      "upload_time": "2020-08-25T14:59:25",
      "upload_time_iso_8601": "2020-08-25T14:59:25.151133Z",
      "url": "https://files.pythonhosted.org/packages/0c/ba/7e20d3639a223c9d3dee45f7b6432f790be59c3cf52a31a8837b8bd68a4c/dooble-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}