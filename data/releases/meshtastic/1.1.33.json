{
  "info": {
    "author": "Kevin Hester",
    "author_email": "kevinh@geeksville.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Meshtastic-python\n\nA python client for using [Meshtastic](https://www.meshtastic.org) devices. This small library (and example application) provides an easy API for sending and receiving messages over mesh radios. It also provides access to any of the operations/data available in the device user interface or the Android application. Events are delivered using a publish-subscribe model, and you can subscribe to only the message types you are interested in.\n\nFull documentation including examples [here](https://meshtastic.github.io/Meshtastic-python/meshtastic/index.html).\n\nInstallation is easily done through the Python package installer pip (note, you must use pip version 20 or later):\n\n- check that your computer has the required serial drivers installed, if not download them from [here](https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers).\n- check that your computer has Python 3 installed.\n- check that your computer has “pip3” installed, if not follow [this guide](https://www.makeuseof.com/tag/install-pip-for-python/).\n- check that pytap2 is installed by pip3. If not, install it:\n```\nsudo pip3 install --upgrade pytap2\n```\n- install meshtastic:\n```\nsudo pip3 install --upgrade meshtastic\n```\n\nAn example using Python 3 code to send a message to the mesh:\n```\nimport meshtastic\ninterface = meshtastic.SerialInterface() # By default will try to find a meshtastic device, otherwise provide a device path like /dev/ttyUSB0\ninterface.sendText(\"hello mesh\") # or sendData to send binary data, see documentations for other options.\ninterface.close()\n```\n\nFor the rough notes/implementation plan see [TODO](https://github.com/meshtastic/Meshtastic-python/blob/master/TODO.md).\n\n## Command line tool\n\nThis pip package will also install a \"meshtastic\" command line executable, which displays packets sent over the network as JSON and lets you see serial debugging information from the meshtastic devices. The source code for this tool is also a good [example](https://github.com/meshtastic/Meshtastic-python/blob/master/meshtastic/__main__.py) of a 'complete' application that uses the meshtastic python API.\n\nNOTE: This command is not run inside of python, you run it from your operating system shell prompt directly.  If when you type \"meshtastic\" it doesn't find the command and you are using Windows: Check that the python \"scripts\" directory [is in your path](https://datatofish.com/add-python-to-windows-path/).\n\nTo display a (partial) list of the available commands:\n```\nmeshtastic -h\n```\n\n### Changing device settings\n\nYou can also use this tool to set any of the device parameters which are stored in persistent storage. For instance, here's how to set the device\nto keep the bluetooth link alive for eight hours (any usage of the bluetooth protcol from your phone will reset this timer)\n\n```\nmeshtastic --set wait_bluetooth_secs 28800\nConnected to radio...\nSetting preference wait_bluetooth_secs to 28800\nWriting modified preferences to device...\n```\n\nOr to set a node at a fixed position and never power up the GPS.\n\n```\nmeshtastic --setlat 25.2 --setlon -16.8 --setalt 120\n```\n\nOr to configure an ESP32 based board to join a wifi network as a station (wifi support in the device code is coming soon):\n\n```\nmeshtastic --set wifi_ap_mode false --setstr wifi_ssid mywifissid --setstr wifi_password mywifipsw\n```\n\nOr to configure an ESP32 to run as a Wifi access point:\n\n```\nmeshtastic --set wifi_ap_mode true --setstr wifi_ssid mywifissid --setstr wifi_password mywifipsw\n```\n\nFor a full list of preferences which can be set (and their documentation) see [here](https://github.com/meshtastic/Meshtastic-protobufs/blob/master/docs/docs.md#.RadioConfig.UserPreferences).\n\n### Changing channel settings\n\nThe channel settings can be changed similiarly.  Either by using a standard (sharable) meshtastic URL or you can set partiular channel parameters (for advanced users).\n\nThe URL is constructed automatically based off of the current channel settings. So if you want to customize a channel you could do something like:\n\n```\nmeshtastic --setchan name mychan --setchan channel_num 4 --info\n```\n\nThis will change some channel params and then show device info (which will include the current channel URL)\n\nYou can even set the channel preshared key to a particular AES128 or AES256 sequence.\n\n```\nmeshtastic --setchan psk 0x1a1a1a1a2b2b2b2b1a1a1a1a2b2b2b2b1a1a1a1a2b2b2b2b1a1a1a1a2b2b2b2b --info\n```\n\n## FAQ/common problems\n\nThis is a collection of common questions and answers from our friendly forum.\n\n### [Permission denied: ‘/dev/ttyUSB0’](https://meshtastic.discourse.group/t/question-on-permission-denied-dev-ttyusb0/590/3?u=geeksville)\n\nThis indicates an OS permission problem for access by your user to the USB serial port.  Typically this is fixed by the following.\n```\nsudo usermod -a -G dialout <username>\n```\n\n## Required device software version\n\nThis API and tool both require that the device is running Meshtastic 0.6.0 or later.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meshtastic/Meshtastic-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshtastic",
    "package_url": "https://pypi.org/project/meshtastic/",
    "platform": "",
    "project_url": "https://pypi.org/project/meshtastic/",
    "project_urls": {
      "Homepage": "https://github.com/meshtastic/Meshtastic-python"
    },
    "release_url": "https://pypi.org/project/meshtastic/1.1.33/",
    "requires_dist": [
      "dotmap (>=1.3.14)",
      "pexpect (>=4.6.0)",
      "protobuf (>=3.13.0)",
      "pygatt (>=4.0.5)",
      "pypubsub (>=4.0.3)",
      "pyqrcode (>=1.2.1)",
      "pyserial (>=3.4)",
      "pytap2 (>=2.0.0) ; extra == 'tunnel'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python API & client shell for talking to Meshtastic devices",
    "version": "1.1.33",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17485228,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab9ee47447f8822decd3ea6f95dc3142c953571c51f316521080cfd27232b434",
        "md5": "3bb2f63e669829b97f918c98eb728492",
        "sha256": "91fc98dccc1debeaaf08faf30681d6fdcca64701c7c94d0d57c1fbd5b4f94351"
      },
      "downloads": -1,
      "filename": "meshtastic-1.1.33-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bb2f63e669829b97f918c98eb728492",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 38718,
      "upload_time": "2021-01-29T01:50:40",
      "upload_time_iso_8601": "2021-01-29T01:50:40.831783Z",
      "url": "https://files.pythonhosted.org/packages/ab/9e/e47447f8822decd3ea6f95dc3142c953571c51f316521080cfd27232b434/meshtastic-1.1.33-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73e1693df85aabea9caa194b1fb1faea54abf33af8738eb2bd63be9312e42385",
        "md5": "78d84e5ff66455b781bdc5553a34c4d8",
        "sha256": "8d1a81a334c0c542ae1c5e948fdf780bc6a95740a78cd6525cc80ab6964b8698"
      },
      "downloads": -1,
      "filename": "meshtastic-1.1.33.tar.gz",
      "has_sig": false,
      "md5_digest": "78d84e5ff66455b781bdc5553a34c4d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 33739,
      "upload_time": "2021-01-29T01:50:42",
      "upload_time_iso_8601": "2021-01-29T01:50:42.290541Z",
      "url": "https://files.pythonhosted.org/packages/73/e1/693df85aabea9caa194b1fb1faea54abf33af8738eb2bd63be9312e42385/meshtastic-1.1.33.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}