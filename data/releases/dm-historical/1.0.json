{
  "info": {
    "author": "Dieter Maurer",
    "author_email": "dieter@handshake.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: ZODB",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Database",
      "Topic :: Utilities"
    ],
    "description": "dm.historical\n=============\n\nUtilities to access the historical state of objects stored in\na (history aware) ZODB (Zope Object DataBase).\nThey can be useful to find out what happened to objects in the past\nand to restore accidentally deleted or modified objects.\n\nI have used them recently to analyse a case where colleagues reported\nabout mysteriously lost objects. It turned out that the objects\nhave not been lost at all but only became unindexed.\n\nThis version is tested against ZODB 3.4. It will not work\nwith ZODB 3.2. It may (or may not) work with more recent ZODB versions.\nBeside ZODB, this version requires Zope's ``DateTime`` package.\n\n\nAPI\n---\n\nCurrently, there are two utilities:\n``getHistory(obj, first=0, last=20)`` and\n``getObjectAt(obj, time)``.\n\n*time* can be a Zope ``DateTime`` instance, a float in seconds since epoch\nor a serial/transaction id.\n\n\nUsage example\n-------------\n\nIn the example below, the ZODB contains a folder ``f``. Let's have a look\nat its history.\n\n>>> from dm.historical import getHistory, getObjectAt\n>>> from pprint import pprint as pp\n>>> h = getHistory(f)\n>>> pp(h)\n[{'description': '',\n  'obj': <Folder at /f>,\n  'size': 157L,\n  'tid': '\\x03r\\xc8\\x1b\\xf3hhU',\n  'time': DateTime('2008/01/01 09:59:57.049 GMT+1'),\n  'user_name': '',\n  'version': ''},\n {'description': '',\n  'obj': <Folder at /f>,\n  'size': 124L,\n  'tid': '\\x03r\\xc8\\x1bX\\x0e\\xfb\\xcc',\n  'time': DateTime('2008/01/01 09:59:20.639 GMT+1'),\n  'user_name': '',\n  'version': ''},\n {'description': '',\n  'obj': <Folder at /f>,\n  'size': 48L,\n  'tid': '\\x03r\\xc8\\x15\\x1c\\x9f\\xb03',\n  'time': DateTime('2008/01/01 09:53:06.709 GMT+1'),\n  'user_name': '',\n  'version': ''}]\n\nThis tells us that the ZODB knows about 3 transactions affecting\n``f``. We can access its state after the first transaction.\n\n>>> f1 = h[-1]['obj']\n>>> f1.objectIds()\n[]\n\n``f`` was empty at that time. Let's see how ``f`` was changed by the\nother transactions:\n\n>>> for hr in h:\n...   print hr['time'].strftime('%H:%M:%S'), hr['obj'].objectIds()\n...\n09:59:57 ['x', 'y']\n09:59:20 ['x']\n09:53:06 []\n\nThis tells us that the second transaction added ``x`` and the third\ntransaction ``y``.\n\nWe can control which history records are retrieved with the\noptional parameters *first* and *last*.\n\n>>> pp(getHistory(f,last=1))\n[{'description': '',\n  'obj': <Folder at /f>,\n  'size': 157L,\n  'tid': '\\x03r\\xc8\\x1b\\xf3hhU',\n  'time': DateTime('2008/01/01 09:59:57.049 GMT+1'),\n  'user_name': '',\n  'version': ''}]\n>>> pp(getHistory(f,first=2))\n[{'description': '',\n  'obj': <Folder at /f>,\n  'size': 48L,\n  'tid': '\\x03r\\xc8\\x15\\x1c\\x9f\\xb03',\n  'time': DateTime('2008/01/01 09:53:06.709 GMT+1'),\n  'user_name': '',\n  'version': ''}]\n\n``getObjectAt`` can be used to retrieve the historical state\nat a given time. Say, we want to learn how ``f`` was at 9:55.\nThe most easy way to specify a time is via a ``DateTime``.\n\n>>> from DateTime import DateTime\n>>> dt=DateTime(2008,1,1,9,55)\n>>> dt\nDateTime('2008/01/01 09:55:00 GMT+1')\n>>> getObjectAt(f, dt).objectIds()\n[]\n\nWhen we request the state beyond the ZODB's maintained history,\nwe get a ``POSKeyError``.\n\n>>> getObjectAt(f, DateTime(2008,1,1,9,50))\nTraceback (most recent call last):\n  ...\nZODB.POSException.POSKeyError: ('\\x00\\x00\\x00\\x00\\x00j\\x82\\xd3', '\\x03r\\xc8\\x12\\x00\\x00\\x00\\x00')\n\nThe time can also be specified via a float in the unit seconds since epoch\nor via a serial/tid. However, these will be used rarely.\n\n>>> ts=dt.timeTime()\n>>> ts\n1199177700.0\n>>> getObjectAt(f, ts).objectIds()\n[]\n>>> getObjectAt(f, '\\x03r\\xc8\\x15\\x1c\\x9f\\xb03').objectIds()\n[]",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": "historical state ZODB analysis recovery",
    "license": "BSD (see \"dm/historical/LICENSE.txt\", for details)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dm.historical",
    "package_url": "https://pypi.org/project/dm.historical/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dm.historical/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/dm.historical/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Historical state of objects stored in the ZODB",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8118416,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7feccff6da2312977dbb63f2a858f0b372888fab56a45b10edb281a4a4c3aa79",
        "md5": "7ebb8d3fa75174d63d883cfa967abe1c",
        "sha256": "f0446ad050dc373f3574c01cbe5eb89d794f9a6b755f65955e9ffc32fe5e41d3"
      },
      "downloads": -1,
      "filename": "dm.historical-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7ebb8d3fa75174d63d883cfa967abe1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6837,
      "upload_time": "2008-01-01T10:18:08",
      "upload_time_iso_8601": "2008-01-01T10:18:08Z",
      "url": "https://files.pythonhosted.org/packages/7f/ec/cff6da2312977dbb63f2a858f0b372888fab56a45b10edb281a4a4c3aa79/dm.historical-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}