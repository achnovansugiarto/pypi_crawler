{
  "info": {
    "author": "Ole Martin Bjorndalen",
    "author_email": "ombdalen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Mido - MIDI Objects for Python\n==============================\n\n.. image:: https://travis-ci.org/mido/mido.svg?branch=master\n    :target: https://travis-ci.org/mido/mido\n.. image:: https://github.com/mido/mido/workflows/Test/badge.svg\n   :target: https://github.com/mido/mido/actions\n\nMido is a library for working with MIDI messages and ports:\n\n.. code-block:: python\n\n   >>> import mido\n   >>> msg = mido.Message('note_on', note=60)\n   >>> msg.type\n   'note_on'\n   >>> msg.note\n   60\n   >>> msg.bytes()\n   [144, 60, 64]\n   >>> msg.copy(channel=2)\n   Message('note_on', channel=2, note=60, velocity=64, time=0)\n\n.. code-block:: python\n\n   port = mido.open_output('Port Name')\n   port.send(msg)\n\n.. code-block:: python\n\n    with mido.open_input() as inport:\n        for msg in inport:\n            print(msg)\n\n.. code-block:: python\n\n    mid = mido.MidiFile('song.mid')\n    for msg in mid.play():\n        port.send(msg)\n\n\nFull documentation at https://mido.readthedocs.io/\n\n\nMain Features\n-------------\n\n* works in Python 2 and 3.\n\n* convenient message objects.\n\n* supports RtMidi, PortMidi and Pygame. New backends are easy to\n  write.\n\n* full support for all 18 messages defined by the MIDI standard.\n\n* standard port API allows all kinds of input and output ports to be\n  used interchangeably. New port types can be written by subclassing\n  and overriding a few methods.\n\n* includes a reusable MIDI stream parser.\n\n* full support for MIDI files (read, write, create and play) with\n  complete access to every message in the file, including all common\n  meta messages.\n\n* can read and write SYX files (binary and plain text).\n\n* implements (somewhat experimental) MIDI over TCP/IP with socket\n  ports. This allows for example wireless MIDI between two\n  computers.\n\n* includes programs for playing MIDI files, listing ports and\n  serving and forwarding ports over a network.\n\n\nStatus\n------\n\n1.2 is the third stable release.\n\n\nRequirements\n------------\n\nMido targets Python 3.6 and 2.7.\n\n\nInstalling\n----------\n\n::\n\n    pip install mido\n\nIf you want to use ports::\n\n   pip install python-rtmidi\n\nSee ``docs/backends/`` for other backends.\n\n\n\nSource Code\n-----------\n\nhttps://github.com/mido/mido/\n\n\nLicense\n-------\n\nMido is released under the terms of the `MIT license\n<http://en.wikipedia.org/wiki/MIT_License>`_.\n\n\nQuestions and suggestions\n-------------------------\n\nFor questions and proposals which may not fit into issues or pull requests, we\nrecommend to ask and discuss on `Discussions\n<https://github.com/mido/mido/discussions>`_.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://mido.readthedocs.io/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mido",
    "package_url": "https://pypi.org/project/mido/",
    "platform": "",
    "project_url": "https://pypi.org/project/mido/",
    "project_urls": {
      "Homepage": "https://mido.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/mido/1.2.10/",
    "requires_dist": [
      "check-manifest (>=0.35) ; extra == 'dev'",
      "flake8 (>=3.4.1) ; extra == 'dev'",
      "pytest (>=3.2.2) ; extra == 'dev'",
      "sphinx (>=1.6.3) ; extra == 'dev'",
      "tox (>=2.8.2) ; extra == 'dev'",
      "python-rtmidi (>=1.1.0) ; extra == 'ports'"
    ],
    "requires_python": "",
    "summary": "MIDI Objects for Python",
    "version": "1.2.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10309521,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b56de18a5b59ff086e1cd61d7fbf943d86c5f593a4e68bfc60215ab74210b22b",
        "md5": "aa5e3cf18a0add073d2b79869a93f270",
        "sha256": "0e618232063e0a220249da4961563c7636fea00096cfb3e2b87a4231f0ac1a9e"
      },
      "downloads": -1,
      "filename": "mido-1.2.10-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa5e3cf18a0add073d2b79869a93f270",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 51094,
      "upload_time": "2021-05-10T15:44:55",
      "upload_time_iso_8601": "2021-05-10T15:44:55.447692Z",
      "url": "https://files.pythonhosted.org/packages/b5/6d/e18a5b59ff086e1cd61d7fbf943d86c5f593a4e68bfc60215ab74210b22b/mido-1.2.10-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "571fb067eed2314c13481e354dd32560c1d9f45d516dd44d9751b85e0e9798fc",
        "md5": "928a0a5df7701cd5db5baa96f173f9e0",
        "sha256": "17b38a8e4594497b850ec6e78b848eac3661706bfc49d484a36d91335a373499"
      },
      "downloads": -1,
      "filename": "mido-1.2.10.tar.gz",
      "has_sig": false,
      "md5_digest": "928a0a5df7701cd5db5baa96f173f9e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 103070,
      "upload_time": "2021-05-10T15:44:57",
      "upload_time_iso_8601": "2021-05-10T15:44:57.790780Z",
      "url": "https://files.pythonhosted.org/packages/57/1f/b067eed2314c13481e354dd32560c1d9f45d516dd44d9751b85e0e9798fc/mido-1.2.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}