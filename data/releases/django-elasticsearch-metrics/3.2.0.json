{
  "info": {
    "author": "Steven Loria, Dawn Pattison",
    "author_email": "steve@cos.io, pattison.dawn@cos.io",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-elasticsearch-metrics\n\n[![pypi](https://badge.fury.io/py/django-elasticsearch-metrics.svg)](https://badge.fury.io/py/django-elasticsearch-metrics)\n[![Build Status](https://travis-ci.org/sloria/django-elasticsearch-metrics.svg?branch=master)](https://travis-ci.org/sloria/django-elasticsearch-metrics)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nDjango app for storing time-series metrics in Elasticsearch.\n\n## Pre-requisites\n\n* Python 2.7 or >=3.6\n* Django 1.11 or 2.0\n* Elasticsearch 6\n\n## Install\n\n```\npip install django-elasticsearch-metrics\n```\n\n## Quickstart\n\nAdd `\"elasticseach_metrics\"` to `INSTALLED_APPS`.\n\n```python\nINSTALLED_APPS += [\"elasticsearch_metrics\"]\n```\n\nDefine the `ELASTICSEARCH_DSL` setting.\n\n```python\nELASTICSEARCH_DSL = {\"default\": {\"hosts\": \"localhost:9200\"}}\n```\n\nThis setting is passed to [`elasticsearch_dsl.connections.configure`](http://elasticsearch-dsl.readthedocs.io/en/stable/configuration.html#multiple-clusters) so\nit takes the same parameters.\n\n\nIn one of your apps, define a new metric in `metrics.py`.\n\nA `Metric` is a subclass of [`elasticsearch_dsl.Document`](https://elasticsearch-dsl.readthedocs.io/en/stable/api.html#document).\n\n\n```python\n# myapp/metrics.py\n\nfrom elasticsearch_metrics import metrics\n\n\nclass PageView(metrics.Metric):\n    user_id = metrics.Integer()\n```\n\nUse the `sync_metrics` management command to ensure that the [index template](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html)\nfor your metric is created in Elasticsearch.\n\n```shell\n# This will create an index template called myapp_pageview\npython manage.py sync_metrics\n```\n\nNow add some data:\n\n```python\nfrom myapp.metrics import PageView\n\nuser = User.objects.latest()\n\n# By default we create an index for each day.\n# Therefore, this will persist the document\n# to an index called, e.g. \"myapp_pageview-2020.02.04\"\nPageView.record(user_id=user.id)\n```\n\nGo forth and search!\n\n```python\n# perform a search across all page views\nPageView.search()\n```\n\n## Per-month or per-year indices\n\nBy default, an index is created for every day that a metric is saved.\nYou can change this to create an index per month or per year by changing\nthe `ELASTICSEARCH_METRICS_DATE_FORMAT` setting.\n\n\n```python\n# settings.py\n\n# Monthly:\nELASTICSEARCH_METRICS_DATE_FORMAT = \"%Y.%m\"\n\n# Yearly:\nELASTICSEARCH_METRICS_DATE_FORMAT = \"%Y\"\n```\n\n## Index settings\n\nYou can configure the index template settings by setting\n`Metric.Index.settings`.\n\n```python\nclass PageView(metrics.Metric):\n    user_id = metrics.Integer()\n\n    class Index:\n        settings = {\"number_of_shards\": 2, \"refresh_interval\": \"5s\"}\n```\n\n## Index templates\n\nEach `Metric` will have its own [index template](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html).\nThe index template name and glob pattern are computed from the app label\nfor the containing app and the class's name. For example, a `PageView`\nclass defined in `myapp/metrics.py` will have an index template with the\nname `myapp_pageview` and a template glob pattern of `myapp_pageview-*`.\n\nIf you declare a `Metric` outside of an app, you will need to set\n`app_label`.\n\n\n```python\nclass PageView(metrics.Metric):\n    class Meta:\n        app_label = \"myapp\"\n```\n\nAlternatively, you can set `template_name` and/or `template` explicitly.\n\n```python\nclass PageView(metrics.Metric):\n    user_id = metrics.Integer()\n\n    class Meta:\n        template_name = \"myapp_pviews\"\n        template = \"myapp_pviews-*\"\n```\n\n## Abstract metrics\n\n```python\nfrom elasticsearch_metrics import metrics\n\n\nclass MyBaseMetric(metrics.Metric):\n    user_id = metrics.Integer()\n\n    class Meta:\n        abstract = True\n\n\nclass PageView(MyBaseMetric):\n    class Meta:\n        app_label = \"myapp\"\n```\n\n## Optional factory_boy integration\n\n```python\nimport factory\nfrom elasticsearch_metrics.factory import MetricFactory\n\nfrom ..myapp.metrics import MyMetric\n\n\nclass MyMetricFactory(MetricFactory):\n    my_int = factory.Faker(\"pyint\")\n\n    class Meta:\n        model = MyMetric\n\n\ndef test_something():\n    metric = MyMetricFactory()  # index metric in ES\n    assert isinstance(metric.my_int, int)\n```\n\n## Configuration\n\n* `ELASTICSEARCH_DSL`: Required. Connection settings passed to\n  [`elasticsearch_dsl.connections.configure`](http://elasticsearch-dsl.readthedocs.io/en/stable/configuration.html#multiple-clusters).\n* `ELASTICSEARCH_METRICS_DATE_FORMAT`: Date format to use when creating\n    indexes. Default: `%Y.%m.%d` (same date format Elasticsearch uses for\n    [date math](https://www.elastic.co/guide/en/elasticsearch/reference/current/date-math-index-names.html))\n\n## Management commands\n\n* `sync_metrics`: Ensure that index templates have been created for\n    your metrics.\n\n```\npython manage.py sync_metrics\n```\n\n* `show_metrics`: Pretty-print a listing of all registered metrics.\n* `check_metrics`: Check if index templates have been created. Exits\n    with an error code if any metrics are out of sync.\n\n```\npython manage.py show_metrics\n```\n\n<!-- * `clean_metrics` : Clean old data using [curator](https://curator.readthedocs.io/en/latest/). -->\n<!--  -->\n<!-- ``` -->\n<!-- python manage.py clean_metrics myapp.PageView --older-than 45 --time-unit days -->\n<!-- ``` -->\n\n## Signals\n\nSignals are located in the `elasticsearch_metrics.signals` module.\n\n* `pre_index_template_create(Metric, index_template, using)`: Sent before `PUT`ting a new index\n    template into Elasticsearch.\n* `post_index_template_create(Metric, index_template, using)`: Sent after `PUT`ting a new index\n    template into Elasticsearch.\n* `pre_save(Metric, instance, using, index)`: Sent at the beginning of a\n    Metric's `save()` method.\n* `post_save(Metric, instance, using, index)`: Sent at the end of a\n    Metric's `save()` method.\n\n## Caveats\n\n* `_source` and `_all` are disabled by default on metric indices in order to save\n    disk space. For most metrics use cases, Users will not need to retrieve the source\n    JSON documents. Be sure to understand the consequences of\n    this: https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html#_disabling_source .\n    To enable `_source`, you can override it in `class Meta`.\n\n```python\nclass MyMetric(metrics.Metric):\n    class Meta:\n        source = metrics.MetaField(enabled=True)\n```\n\n## Resources\n\n* [Elasticsearch as a Time Series Data Store](https://www.elastic.co/blog/elasticsearch-as-a-time-series-data-store)\n* [Pythonic Analytics with Elasticsearch](https://www.elastic.co/blog/pythonic-analytics-with-elasticsearch)\n* [In Search of Agile Time Series Database](https://taowen.gitbooks.io/tsdb/content/index.html)\n\n## License\n\nMIT Licensed.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/sloria/django-elasticsearch-metrics",
    "keywords": "django,elastic,elasticsearch,elasticsearch-dsl,time-series,metrics,statistics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-elasticsearch-metrics",
    "package_url": "https://pypi.org/project/django-elasticsearch-metrics/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-elasticsearch-metrics/",
    "project_urls": {
      "Changelog": "https://github.com/sloria/django-elasticsearch-metrics/blob/master/CHANGELOG.md",
      "Homepage": "http://github.com/sloria/django-elasticsearch-metrics",
      "Issues": "https://github.com/sloria/django-elasticsearch-metrics/issues"
    },
    "release_url": "https://pypi.org/project/django-elasticsearch-metrics/3.2.0/",
    "requires_dist": [
      "elasticsearch-dsl (>=6.0.0)"
    ],
    "requires_python": "",
    "summary": "Django app for storing time-series metrics in Elasticsearch.",
    "version": "3.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4538696,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a858021b0d0f43ed97285d74c2665db088913b23b1daf5e06b717044ff4fd79",
        "md5": "d3eef6ff0c34f4b3a01e9cd4e87782c1",
        "sha256": "e289eea3a8de6aee5b1c203b1d3105c55c324e240a45d6adc3520797709faaf5"
      },
      "downloads": -1,
      "filename": "django_elasticsearch_metrics-3.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d3eef6ff0c34f4b3a01e9cd4e87782c1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 15599,
      "upload_time": "2018-08-30T19:43:50",
      "upload_time_iso_8601": "2018-08-30T19:43:50.876049Z",
      "url": "https://files.pythonhosted.org/packages/5a/85/8021b0d0f43ed97285d74c2665db088913b23b1daf5e06b717044ff4fd79/django_elasticsearch_metrics-3.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "098e2b1e42b6c0f63889bee714f07d82a71badd19910ec3d0b770180f8597a53",
        "md5": "c22a646fb6508dabc4525541cc0bd14a",
        "sha256": "3ec07f6abdf4581242e47bd143f3871a3902adae9bc51b71e50e2d98f35bcc20"
      },
      "downloads": -1,
      "filename": "django-elasticsearch-metrics-3.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c22a646fb6508dabc4525541cc0bd14a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17394,
      "upload_time": "2018-08-30T19:43:52",
      "upload_time_iso_8601": "2018-08-30T19:43:52.214251Z",
      "url": "https://files.pythonhosted.org/packages/09/8e/2b1e42b6c0f63889bee714f07d82a71badd19910ec3d0b770180f8597a53/django-elasticsearch-metrics-3.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}