{
  "info": {
    "author": "Steve McMaster",
    "author_email": "mcmaster@hurricanelabs.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "Machinae Security Intelligence Collector\r\n========================================\r\n\r\n| Machinae is a tool for collecting intelligence from public sites/feeds about\r\n| various security-related pieces of data: IP addresses, domain names, URLs,\r\n| email addresses, file hashes and SSL fingerprints. It was inspired by\r\n| `Automater <https://github.com/1aN0rmus/TekDefense-Automater>`__, another excellent tool for collecting information. The Machinae\r\n| project was born from wishing to improve Automater in 4 areas:\r\n\r\n#. Codebase - Bring Automater to python3 compatibility while making the code\r\n   more pythonic\r\n#. Configuration - Use a more human readable configuration format (YAML)\r\n#. Inputs - Support JSON parsing out-of-the-box without the need to write\r\n   regular expressions, but still support regex scraping when needed\r\n#. Outputs - Support additional output types, including JSON, while making\r\n   extraneous output optional\r\n\r\nInstallation\r\n------------\r\n\r\nMachinae can be installed using pip3:\r\n\r\n::\r\n\r\n    pip3 install machinae\r\n\r\nOr, if you're feeling adventurous, can be installed directly from github:\r\n\r\n::\r\n\r\n    pip3 install git+https://github.com/HurricaneLabs/machinae.git\r\n\r\n| You will need to have whatever dependencies are required on your system for\r\n| compiling Python modules (on Debian based systems, ``python3-dev``), as well as\r\n| the libyaml development package (on Debian based systems, ``libyaml-dev``).\r\n\r\n| You'll also want to grab the `latest configuration file <https://github.com/HurricaneLabs/machinae/raw/master/machinae.yml>`__ and place it in\r\n| ``/etc/machinae.yml``.\r\n\r\nConfiguration File\r\n------------------\r\n\r\n| Machinae supports a simple configuration merging system to allow you to make\r\n| adjustments to the configuration without modifying the machinae.yml we provide\r\n| you, making configuration updates a snap. This is done by finding a system-wide\r\n| default configuration (default ``/etc/machinae.yml``), merging into that a\r\n| system-wide local configuration (``/etc/machinae.local.yml``) and finally a\r\n| per-user local configuration (``~/.machinae.yml``). The system-wide configuration\r\n| can also be located in the current working directory, can be set using the\r\n| ``MACHINAE_CONFIG`` environment variable, or of course by using the ``-c`` or\r\n| ``--config`` command line options. Configuration merging can be disabled by\r\n| passing the ``--nomerge`` option, which will cause Machinae to only load the\r\n| default system-wide configuration (or the one passed on the command line).\r\n\r\n| As an example of this, say you'd like to enable the Fortinet Category site,\r\n| which is disabled by default. You could modify ``/etc/machinae.yml``, but these\r\n| changes would be overwritten by an update. Instead, you can put the following\r\n| in either ``/etc/machinae.local.yml`` or ``~/.machinae.yml``:\r\n\r\n::\r\n\r\n    fortinet_classify:\r\n      default: true\r\n\r\nOr, conversely, to disable a site, such as Virus Total pDNS:\r\n\r\n::\r\n\r\n    vt_ip:\r\n      default: false\r\n    vt_domain:\r\n      default: false\r\n\r\nUsage\r\n-----\r\n\r\nMachinae usage is very similar to Automater:\r\n\r\n::\r\n\r\n    usage: machinae [-h] [-c CONFIG] [-d DELAY] [-f FILE] [--nomerge] [-o {D,J,N}]\r\n                    [-O {ipv4,ipv6,fqdn,email,sslfp,hash,url}] [-q] [-s SITES]\r\n                    targets [targets ...]\r\n\r\n-  See above for details on the ``-c``/``--config`` and ``--nomerge`` options.\r\n\r\n-  | Machinae supports a ``-d``/``--delay`` option, like Automater. However, Machinae\r\n   | uses 0 by default.\r\n\r\n-  Machinae output is controlled by two arguments:\r\n\r\n   -  ``-o`` controls the output format, and can be followed by a single character\r\n      to indicated the desired type of output:\r\n\r\n      -  *N* is the default output (\"Normal\")\r\n      -  *D* is the default output, but dot characters are replaced\r\n      -  *J* is JSON output\r\n\r\n   -  ``-f``/``--file`` specifies the file where output should be written. The default\r\n      is \"-\" for stdout.\r\n\r\n-  | Machinae will attempt to auto-detect the type of target passed in (Machinae\r\n   | refers to targets as \"observables\" and the type as \"otype\"). This detection can\r\n   | be overridden with the ``-O``/``--otype`` option. The choices are listed in the\r\n   | usage\r\n\r\n-  | By default, Machinae operates in verbose mode. In this mode, it will output\r\n   | status information about the services it is querying on the console as they are\r\n   | queried. This output will always be written to stdout, regardless of the output\r\n   | setting. To disable verbose mode, use ``-q``\r\n\r\n-  By default, Machinae will run through all services in the configuration that\r\n   apply to each target's otype *and* are not marked as \"default: false\". To modify\r\n   this behavior, you can:\r\n\r\n   -  Pass a comma separated list of sites to run (use the top level key from the\r\n      configuration).\r\n   -  Pass the special keyword ``all`` to run through all services *including* those\r\n      marked as \"default: false\"\r\n\r\n   Note that in both cases, ``otype`` validation is still applied.\r\n\r\n-  | Lastly, a list of targets should be passed. All arguments other than the\r\n   | options listed above will be interpreted as targets.\r\n\r\nOut-of-the-Box Data Sources\r\n---------------------------\r\n\r\nMachinae comes with out-of-the-box support for the following data sources:\r\n\r\n-  IPVoid\r\n-  URLVoid\r\n-  URL Unshortener (http://www.toolsvoid.com/unshorten-url)\r\n-  Malc0de\r\n-  SANS\r\n-  Telize GeoIP\r\n-  Fortinet Category\r\n-  VirusTotal pDNS (via web scrape - commented out)\r\n-  VirusTotal pDNS (via JSON API)\r\n-  VirusTotal URL Report (via JSON API)\r\n-  VirusTotal File Report (via JSON API)\r\n-  Reputation Authority\r\n-  ThreatExpert\r\n-  VxVault\r\n-  ProjectHoneypot\r\n-  McAfee Threat Intelligence\r\n-  StopForumSpam\r\n-  Cymru MHR\r\n-  ICSI Certificate Notary\r\n-  TotalHash (disabled by default)\r\n-  DomainTools Parsed Whois (Requires API key)\r\n-  DomainTools Reverse Whois (Requires API key)\r\n-  DomainTools Reputation\r\n-  IP WHOIS (Using RIR REST interfaces)\r\n\r\nWith additional data sources on the way.\r\n\r\nDisabled by default\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\nThe following sites are disabled by default\r\n\r\n-  Fortinet Category (``fortinet_classify``)\r\n-  TotalHash (``totalhash_ip``)\r\n-  DomainTools Parsed Whois (``domaintools_parsed_whois``)\r\n-  DomainTools Reverse Whois (``domaintools_reverse_whois``)\r\n-  DomainTools Reputation (``domaintools_reputation``)\r\n\r\nOutput Formats\r\n--------------\r\n\r\n| Machinae comes with a limited set of output formats: normal, normal with dot\r\n| escaping, and JSON. We plan to add additional output formats in the future.\r\n\r\nAdding additional sites\r\n-----------------------\r\n\r\n\\*\\*\\* COMING SOON \\*\\*\\*\r\n\r\nKnown Issues\r\n------------\r\n\r\n-  Some ISP's on IPvoid contain double-encoded HTML entities, which are not\r\n   double-decoded\r\n\r\nUpcoming Features\r\n-----------------\r\n\r\n-  Add IDS rule search functionality (VRT/ET)\r\n-  Add \"More info\" link for sites\r\n-  Add \"dedup\" option to parser settings\r\n-  Add option for per-otype request settings\r\n-  Add custom per-site output for error codes\r\n\r\nVersion History\r\n---------------\r\n\r\nVersion 1.0.1 (2015-10-13)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n-  Fixed a false-positive bug with Spamhaus (Github#10)\r\n\r\nVersion 1.0.0 (2015-07-02)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n-  Initial release\r\n\r\nLicense Info\r\n------------\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Hurricane Labs LLC\r\n\r\n| Permission is hereby granted, free of charge, to any person obtaining a copy\r\n| of this software and associated documentation files (the \"Software\"), to deal\r\n| in the Software without restriction, including without limitation the rights\r\n| to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n| copies of the Software, and to permit persons to whom the Software is\r\n| furnished to do so, subject to the following conditions:\r\n\r\n| The above copyright notice and this permission notice shall be included in\r\n| all copies or substantial portions of the Software.\r\n\r\n| THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n| IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n| FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n| AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n| LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n| OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n| THE SOFTWARE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://hurricanelabs.github.io/machinae/",
    "keywords": "",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "machinae",
    "package_url": "https://pypi.org/project/machinae/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/machinae/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://hurricanelabs.github.io/machinae/"
    },
    "release_url": "https://pypi.org/project/machinae/1.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Machinae Security Intelligence Collector",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8750401,
  "urls": [],
  "vulnerabilities": []
}