{
  "info": {
    "author": "IIIT",
    "author_email": "github@iiit.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Django Duplicate\n========\n\n![example workflow](https://github.com/innovationinit/django-duplicate/actions/workflows/test-package.yml/badge.svg?branch=main)\n[![Coverage Status](https://coveralls.io/repos/github/innovationinit/django-duplicate/badge.svg)](https://coveralls.io/github/innovationinit/django-duplicate)\n\n\nDjango-Duplicate has an util tool for making a deep copy of django model instances\n\nduplicate.utils.duplicate\n-------------------------\nCreates and returns a  new object that is identical to ``instance``.\n\n\nDuplicateMixin\n--------------\nMixin for model classes which implements duplicate function as method.\n\n```python\nfrom django.db import models\n\nfrom duplicate.models import DuplicateMixin\n\n\nclass Book(DuplicateMixin, models.Model):\n    title = models.CharField(max_lenght=100)\n    author = models.ForegnKey('library.Author')\n```\n\nLet's duplicate (shallow copy) book instance:\n\n```python\nbook = Book(title='Two Scoops of Django')\nboook.save()\n\nbook_copy = book.duplicate()\n```\n\nIf you wanna do deep (related models gonna be shallow copied) copy use `paths` argument of duplicate method. `paths` should be list of relation paths:\n\n```python\nbook_copy = book.duplicate(paths=['author'])\n```\n\nTo shallow copy every relation on some level use `*` symbol:\n\n```python\nbook_copy = book.duplicate(paths=['*'])\n```\n\n`author.*` path would copy also all author relations.\n\nThere is also symbol `~` which means \"reference relations, but if reference object is duplicated in the context use it instead\".\n\n\nYou can override fields like this(You cannot override nested m2m fields): \n```python\n\nbook_copy = book.duplicate(paths=['author'], override_fields={'author.name': 'Overriden author name'})\n\n\nfrom duplicate.utils import CallableValue\nbook_copy = book.duplicate(paths=['author'], override_fields={'author.name': 'Overriden author name'})\n\n```\n\nYou can also override nested fields with callable that takes instace on which you are overriding field as an argument:\n```python\nfrom duplicate.utils import CallableValue\n\nbook_copy = book.duplicate(\n    paths=['author'],\n    override_fields={\n        'author.name': CallableValue(lambda author: 'Professional author name' if author.professional else 'Author name')\n    }\n)\n\n```\n\nDJANGO_DUPLICATE_KNOWN_RELATIONS\n--------------------------------\n\nTo ensure that code is aware of all possible to duplicate models and relations path project should have setting `DJANGO_DUPLICATE_KNOWN_RELATIONS` which is a dict with model labels as keys and list of model relations as value:\n\n```python\nDJANGO_DUPLICATE_KNOWN_RELATIONS = {\n    \"duplicate.Author\": [\n        \"book_set\",\n    ],\n    \"duplicate.Book\": [\n        \"author\",\n    ],\n}\n```\n\nThis app enables check which will throw errors when state of app will not correspond to value of `DJANGO_DUPLICATE_KNOWN_RELATIONS`.\n\n## License\nThe Django Wicked Historian package is licensed under the [FreeBSD\nLicense](https://opensource.org/licenses/BSD-2-Clause).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-duplicate",
    "package_url": "https://pypi.org/project/django-duplicate/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-duplicate/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-duplicate/1.0.0/",
    "requires_dist": [
      "Django (<4.0,>=2.0)"
    ],
    "requires_python": "",
    "summary": "Allow make deep model copy",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13136573,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec9ae2e8f0aba5d38130ba5ae03088eea39cb17602e004f0afb2662b467fb5dd",
        "md5": "92a5a817f283f3cc509aea29ed4b5b9e",
        "sha256": "33abebae2ac39efbc3ea69858d38b6488afab737ab754340ad1be8ba488c0999"
      },
      "downloads": -1,
      "filename": "django_duplicate-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92a5a817f283f3cc509aea29ed4b5b9e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9014,
      "upload_time": "2022-03-10T10:20:54",
      "upload_time_iso_8601": "2022-03-10T10:20:54.328104Z",
      "url": "https://files.pythonhosted.org/packages/ec/9a/e2e8f0aba5d38130ba5ae03088eea39cb17602e004f0afb2662b467fb5dd/django_duplicate-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "710730b03f24b3d30923db704e957ff94e7c11a4ca72b70d64ddc8cf09a2244a",
        "md5": "59cc108552685168a3fa30ba75cacdef",
        "sha256": "99e049914fde9f374555f246115384ed25cd1f82b8f9f52be2d801c01f6421d3"
      },
      "downloads": -1,
      "filename": "django-duplicate-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "59cc108552685168a3fa30ba75cacdef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11732,
      "upload_time": "2022-03-10T10:20:55",
      "upload_time_iso_8601": "2022-03-10T10:20:55.541169Z",
      "url": "https://files.pythonhosted.org/packages/71/07/30b03f24b3d30923db704e957ff94e7c11a4ca72b70d64ddc8cf09a2244a/django-duplicate-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}