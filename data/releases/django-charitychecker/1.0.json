{
  "info": {
    "author": "Nicholas A. Lourie",
    "author_email": "developer.nick@kozbox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "django-charitychecker\n=====================\n\nA django app for verifying U.S. nonprofits by their EIN number. For a\ngeneral python module with similar functionality, check out\n`charitycheck <https://github.com/nalourie/charitycheck>`__.\n\nVisit the\n`github <https://github.com/nalourie/django-charitychecker>`__.\n\nInstallation:\n=============\n\nFrom pip:\n\n::\n\n    pip install django-charitychecker\n\nIn your settings.py:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        charitychecker\n        ...\n        )\n\nNote that if you want django-charitychecker to work properly, you'll\nneed to periodically fetch data from the IRS to update your local\ndatabase.\n\nUseage:\n=======\n\ndjango-charitychecker only checks U.S. based nonprofits, this means that\nit will not verify foreign nonprofits registered with the IRS (there are\na few, but the data entry format for these organizations is inconsistent\nand so can't be machine parsed easily).\n\ndjango-charitychecker makes the following functions and models public:\n\nPublic Objects and Methods\n--------------------------\n\nModels\n~~~~~~\n\n``charitychecker.IRSNonprofitData``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\na model representing a nonprofit with the following fields:\n\nAttributes\n''''''''''\n\n-  ``IRSNonprofitData.ein``: a string representing the nonprofit's EIN\n   number.\n\n-  ``IRSNonprofitData.name``: a string representing the name of the\n   Nonprofit as published in IRS Publication 78.\n\n-  ``IRSNonprofitData.city``: a string representing the city in which\n   the nonprofit is incorporated.\n\n-  ``IRSNonprofitData.state``: a string representing the state in which\n   the nonprofit is incorporated.\n\n-  ``IRSNonprofitData.country``: a string representing the country in\n   which the nonprofit is incorporated.\n\n-  ``IRSNonprofitData.deductability_code``: the tax deductability code\n   of the nonprofit organization. See the\n   `charitycheck <https://github.com/nalourie/charitycheck>`__ README\n   for more information on deductability codes.\n\nOf course, you can retrieve a nonprofit's info using their EIN by\n``IRSNonprofitData.objects.get(ein=\"some ein string\")``.\n\nMethods\n'''''''\n\n-  ``IRSNonprofitData.verify_nonprofit(ein, name=None, city=None, state=None, country=None, deductability_code=None)``:\n   return true if there is a nonprofit in the charitychecker database\n   with information matching the information provided to the function as\n   arguments, return false otherwise.\n\n-  ``IRSNonprofitData.get_deductability_code(ein, name=None, city=None, state=None, country=None)``:\n   if a nonprofit is found in the charitychecker database with\n   information matching the information provided as arguments to the\n   function, then return that nonprofit's deductability code, otherwise\n   return the empty string.\n\nUtilities\n~~~~~~~~~\n\n``IRSNonprofitDataContextManager``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA context manager for dealing with the IRS Publication 78 data. It\nautomatically downloads, unzips, and opens the file from the IRS\nwebsite, closing the resources when finished. It skips any ``FORGN``\nregistered nonprofits, and returns all of the nonprofit data strings as\na generator. Use is as you would any context manager:\n\n::\n\n    with IRSNonprofitDataContextManager() as irs_data:\n        # code using irs_data as a file object\n        .... \n\nThe Publication 78 file is a series of lines of the form\n``ein|name|city|state|country|deductability_code``.\n\n``update_charitychecker_data``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA function that, when called, downloads a fresh copy of the IRS\nPublication 78 data, unzips it, and uses it to update the charitychecker\ndatabase. It accepts no arguments.\n\nManagement Commands\n~~~~~~~~~~~~~~~~~~~\n\n``update_charitychecker_data``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA command that downloads a new copy of the IRS Publication 78 data,\nunzips it, and uses the data to update the charitychecker database.\n\nThis command takes no arguments, and only the default django command\noptions. Run it by typing into the command prompt:\n\n``python manage.py update_charitychecker_data``\n\nOf course, you can only run the command after charitychecker is\ninstalled into your project's ``settings.py`` file's ``INSTALLED_APPS``,\nand you've run ``python manage.py syncdb``. This command could take a\nlong time to finish, because it checks that your entire nonprofit\ndatabase (800,000+ rows) is up to date.\n\nContributing\n============\n\nPull requests are welcome. Also check out\n`charitycheck <https://github.com/nalourie/charitycheck>`__ for a\ngeneral python equivalent of this package if you are interested in\ncontributing.\n\nSuggestions for contributions are adding python 3 support, incorporating\nthis module into a large family of modules/packages dealing with\nnonprofit data (but of course, following the UNIX philosophy is really\nimportant here. Do one thing and do it well!), and most importantly,\nrefactoring the utilities module to allow you to put in mocks for the\nIRSNonprofitDataContextManager's downloading url, and the url that\nupdate\\_charitychecker\\_data passes to IRSNonprofitDataContextManager,\nas currently the test suite takes about 25 minutes.\n\nAuthors\n=======\n\nAuthored by Nicholas A. Lourie. You can contact him at\ndeveloper.nick@kozbox.com.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nalourie/django-charitychecker",
    "keywords": "nonprofit nonprofits EIN IRS django",
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-charitychecker",
    "package_url": "https://pypi.org/project/django-charitychecker/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-charitychecker/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/nalourie/django-charitychecker"
    },
    "release_url": "https://pypi.org/project/django-charitychecker/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "a small django app to verify information about nonprofits using their EINs",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1292310,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f2bb8609c4ea7e42a635c4c38d9afc4782930fa3aedee3630bd0ea87da1152c",
        "md5": "026f7befd24674785c2e35d09d24ee59",
        "sha256": "3e5292505f332f3f577a7655bcb0245446671003a41bf328452cfe1c492c387c"
      },
      "downloads": -1,
      "filename": "django-charitychecker-1.0.zip",
      "has_sig": false,
      "md5_digest": "026f7befd24674785c2e35d09d24ee59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16852,
      "upload_time": "2014-10-26T05:16:04",
      "upload_time_iso_8601": "2014-10-26T05:16:04.336646Z",
      "url": "https://files.pythonhosted.org/packages/7f/2b/b8609c4ea7e42a635c4c38d9afc4782930fa3aedee3630bd0ea87da1152c/django-charitychecker-1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}