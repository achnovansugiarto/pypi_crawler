{
  "info": {
    "author": "OpenBB",
    "author_email": "hello@openbb.co",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Financial :: Investment"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://openbb.co/\">\n    <img src=\"https://raw.githubusercontent.com/OpenBB-finance/OpenBBTerminal/main/images/openbb_splashscreen.png\" alt=\"Logo\" width=\"1000\">\n  </a>\n</p>\n<h3 align=\"center\">Macro Database ðŸŒŽ</h3>\n\nIt's one thing to understand companies existing in countries, sectors and industries and another to understand \nmovements within these categories due to macroeconomics. The former is attempted to be solved with\n[FinanceDatabase](https://github.com/JerBouma/FinanceDatabase) and the MacroDatabase is an attempt to cover the latter. \n\nWithin this database of over 570.000 datasets, you are able to view an incredibly large amount of financial indicators \n(e.g. GDP, employment rates, interest & inflation rates), prices (e.g. commodities, CPIs and housing indices), an \nextensive variety of country data (e.g. government bond yields of the Netherlands, real consumption of households \nin Japan) and so much more.\n\n| Category                                | Datasets                      |                 \n|:----------------------------------------|------------------------------:|\n| Prices                                  | 10,406                        |                       \n| U.S. Regional Data                      | 418,232                       |                                         \n| Money, Banking, & Finance               | 11,585                        |                                               \n| Production & Business Activity          | 3,777                         |                                              \n| Academic Data                           | 14,880                        |                    \n| National Accounts                       | 12,448                        |                                           \n| International Data                      | 95,706                        |                                                 \n| Population, Employment, & Labor Markets | 9,077                         |\n| **Total**                               | **576,111**                   |\n\nFind an overview of the largest categories within the database [here](/Database). The categorisation comes from \nthe [Federal Reserve Economic Data (FRED) database](https://fred.stlouisfed.org/) and this repository aims to \nmake sense of all the data within these categories.\n\n## Table of Contents\n\n1. [Using the Database](#using-the-database)\n3. [Questions & Answers](#questions--answers)\n4. [Contribution](#contribution)\n\n## Using the Database\nTo access the database you can download the entire repository, but I strongly recommend making use of the package \nclosely attached to the database. It allows you to select specific json files as well as search through collected\ndata with a specific query.\n\n### Installation\nYou can install the package with the following steps:\n1. `pip install macrodatabase`\n2. (within Python) `import macrodatabase as md`\n\n### Functions\nThe package has the following functions:\n\n- `show_country_options(search=None, category=None, parameter=None)` - gives curated country options. If no \nparameter is provided, gives all options. If search is provided, searches with this query and if category or parameter \nis provided, gives a specific selection.\n- `show_states_options(search=None, category=None, parameter=None)` - gives curated states options. If no \nparameter is provided, gives all options. If search is provided, searches with this query and if category or parameter \nis provided, gives a specific selection.\n- `show_database_options(search=None, include_discontinued=False)` - gives all options within the database given \na certain search term or all if no search term is provided.\n- `select_country_data(category, parameter, country=None, unit=None, period=None, seasonality=True)` - gives a certain \nset of curated country data based on the parameters given. E.g. \"GDP\" and \"Liquid Liabilities to GDP\". You can also \nspecify the unit, period and seasonality to get specific types of data. If not provided, the function returns all \ntypes.\n- `select_states_data(category, parameter, state=None, unit=None, period=None, seasonality=True)` - gives a certain \nset of curated state data based on the parameters given. E.g. \"Real Estate\" and \"Housing Inventory: Average \nListing Price\". You can also specify the unit, period and seasonality to get specific types of data. If not provided, \nthe function returns all types.\n- `select_database_data(parameter)` - grab data from the whole database. This follows the structure that can be \nobtained via `show_database_options`. E.g. to select Mortgage Rates you would use 'Interest Rates/Mortgage Rates'.\n- `collect_data(ids, api_key, show_progress=True)` - based on IDs, collect data via the \n[FREDAPI](https://github.com/mortada/fredapi) package. This allows you to instantly collect all data for the \ncurated list. For example, all countries you can find within 'Liquid Liabilities to GDP' (150+).\n\n## Questions & Answers\nIn this section you can find answers to commonly asked questions. In case the answer to your question is not here, \nconsider creating an [Issue](https://github.com/OpenBB-finance/MacroDatabase/issues).\n\n- **How did you get your data?**\n    - Please check the [Methodology](https://github.com/OpenBB-finance/MacroDatabase/tree/master/Methodology).\n- **Which countries and states are supported?**\n    - Please see [Countries](https://github.com/OpenBB-finance/MacroDatabase/tree/master/Structure/countries.json) and\n    [States](https://github.com/OpenBB-finance/MacroDatabase/tree/master/Structure/states.json).\n- **How can I find out which options exists?**\n    - For this you can use the ``show_country_options`` function for the Curated Countries, ``show_state_options`` \n    for the Curated States and ``show_database_options`` function for general database querying.\n- **How frequently does the Database get updated?**\n    - Every sunday this database gets refreshed via GitHub Actions.\n    See [Methodology](https://github.com/OpenBB-finance/MacroDatabase/tree/master/Methodology) for how this is done.\n\n## Contribution\nProjects are bound to have (small) errors and can always be improved. Therefore, we highly encourage you to submit \nissues and create pull requests to improve the package.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OpenBB-finance/MacroDatabase",
    "keywords": "macroeconomics,database,fred",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "macrodatabase",
    "package_url": "https://pypi.org/project/macrodatabase/",
    "platform": null,
    "project_url": "https://pypi.org/project/macrodatabase/",
    "project_urls": {
      "Homepage": "https://github.com/OpenBB-finance/MacroDatabase"
    },
    "release_url": "https://pypi.org/project/macrodatabase/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is a macro database of 570.000+ data series containing International Data (150+ countries), Interest Rates, Inflation, Monetary Data, U.S. (regional) data, Commodities, Real Estate and so much more. U.S. States and Countries curation is also included.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13440142,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce553132dab7e2d7ab038b3d54680b746ff095dc5a132120f852842bbd05951f",
        "md5": "4ca7312bfc3243c7f37a145ef2044409",
        "sha256": "9b7d409ecbe9a9a62325dd5c2f5acab5736554705eef11662b754217def41727"
      },
      "downloads": -1,
      "filename": "macrodatabase-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ca7312bfc3243c7f37a145ef2044409",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8835,
      "upload_time": "2022-04-07T12:29:39",
      "upload_time_iso_8601": "2022-04-07T12:29:39.132295Z",
      "url": "https://files.pythonhosted.org/packages/ce/55/3132dab7e2d7ab038b3d54680b746ff095dc5a132120f852842bbd05951f/macrodatabase-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73d019e328384ec32bde8a63523cb5afb07ede1476dd2372ab2ddc766ad34a17",
        "md5": "2b421cad622a8e3f9367e9310d0fb086",
        "sha256": "32ac8b6c7fb559d1dc4bf2eaf261332b89ac19adb3639188b012380129a2af41"
      },
      "downloads": -1,
      "filename": "macrodatabase-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2b421cad622a8e3f9367e9310d0fb086",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9407,
      "upload_time": "2022-04-07T12:29:44",
      "upload_time_iso_8601": "2022-04-07T12:29:44.242370Z",
      "url": "https://files.pythonhosted.org/packages/73/d0/19e328384ec32bde8a63523cb5afb07ede1476dd2372ab2ddc766ad34a17/macrodatabase-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}