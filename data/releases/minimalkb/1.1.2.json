{
  "info": {
    "author": "Séverin Lemaignan",
    "author_email": "severin.lemaignan@pal-robotics.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3"
    ],
    "description": "minimalKB\n=========\n\nminimalKB is a SQLite-backed minimalistic knowledge base, initially\ndesigned for robots (in particular human-robot interaction or\nmulti-robot interaction).\n\nIt stores triples (like RDF/OWL triples), and provides an API accessible\nvia a simple socket protocol.\n\n`pykb <https://github.com/severin-lemaignan/pykb>`__ provides an\nidiomatic Python binding, making easy to integrate the knowledge base in\nyour applications.\n\nIt has almost no features, except it is fast and simple. Basic RDFS\nreasoning is provided.\n\nWritten in Python. The only required dependency is ``sqlite3``. If\n``rdflib`` is also available, you can easily import existing ontologies\nin RDF/OWL/n3/Turtle formats in the knowledge base.\n\nDocumentation\n-------------\n\nYou can use ``minimalkb`` either as a server, accessible from multiple\napplications (clients), or in *embedded* mode (which does not require to\nstart a server process, but is limited to one single component). Note\nthat the embedded mode is only available for Python applciations.\n\nIn both case, and if your application is written in Python, it is highly\nrecommended to use `pykb <https://github.com/severin-lemaignan/pykb>`__\nto interact the knowledge base.\n\nServer mode\n~~~~~~~~~~~\n\nTo start the knowledge base as a server, simply type:\n\n::\n\n   $ minimalkb\n\n(run ``minimalkb --help`` for available options)\n\nThen:\n\n.. code:: python\n\n   import kb\n\n   with kb.KB() as kb:\n       #...\n\nSee usage examples on the\n`pykb <https://github.com/severin-lemaignan/pykb>`__ page, or in the\n``minimalkb`` unit-tests.\n\nEmbedded mode\n~~~~~~~~~~~~~\n\nNo need to start ``minimalkb``. Simply use the following code to start\nusing the knowledge base in your code:\n\n.. code:: python\n\n   import kb\n\n   with kb.KB(embedded=True) as kb:\n       #...\n\nInteracting with the minimalkb from other languages\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  from C++: check\n   `liboro <https://github.com/severin-lemaignan/liboro>`__\n-  from any other language: the communication with the server relies on\n   a simply socket-based text protocol. Feel free to get in touch if you\n   need help to add support for your favourite language!\n\nFeatures\n--------\n\nServer-Client or embedded\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``minimalKB`` can be run as a stand-alone (socket) server, or directly\nembedded in Python applications.\n\nMulti-models\n~~~~~~~~~~~~\n\n``minimalKB`` is intended for dynamic environments, with possibly\nseveral contexts/agents requiring separate knowledge models.\n\nNew models can be created at any time and each operation (like knowledge\naddition/retractation/query) can operate on a specific subset of models.\n\nEach models are also independently classified by the reasoner.\n\nEvent system\n~~~~~~~~~~~~\n\n``minimalKB`` provides a mechanism to *subscribe* to some conditions\n(like: an instance of a given type is added to the knowledge base, some\nstatement becomes true, etc.) and get notified back.\n\nReasoning\n~~~~~~~~~\n\n``minimalKB`` only provides very basic RDFS/OWL reasoning capabilities:\n\n-  it honors the transitive closure of the ``rdfs:subClassOf`` relation.\n-  functional predicates (child of ``owl:functionalProperty``) are\n   properly handled when updating the model (ie, if ``<S P O>`` is\n   asserted with ``P`` a functional predicate, updating the model with\n   ``<S P O'>`` will first cause ``<S P O>`` to be retracted).\n-  ``owl:equivalentClass`` is properly handled.\n\nThe reasoner runs in its own thread, and classify the model at a given\nrate, by default 5Hz. It is thus needed to wait ~200ms before the\nresults of the classification become visible in the model.\n\nTransient knowledge\n~~~~~~~~~~~~~~~~~~~\n\n``minimalKB`` allows to attach ‘lifespans’ to statements: after a given\nduration, they are automatically collected.\n\nOntology walking\n~~~~~~~~~~~~~~~~\n\n``minimalKB`` exposes several methods to explore the different\nontological models of the knowledge base. It is compatible with the\nvisualization tool\n`oro-view <https://github.com/severin-lemaignan/oro-view>`__.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/severin-lemaignan/minimalkb",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minimalKB",
    "package_url": "https://pypi.org/project/minimalKB/",
    "platform": "",
    "project_url": "https://pypi.org/project/minimalKB/",
    "project_urls": {
      "Homepage": "https://github.com/severin-lemaignan/minimalkb"
    },
    "release_url": "https://pypi.org/project/minimalKB/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A SQLite-backed minimalistic knowledge based for robotic application",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13709818,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad432864cea1ef02dabd0b27ef854c7ff85ccde552822745cd1ffbde15377a10",
        "md5": "002ffc01ce7f9427027a0b4cda9ed079",
        "sha256": "ea9a6148a51cb22b04652e165099032d0c640ef10e4c39b18faced16c2da3996"
      },
      "downloads": -1,
      "filename": "minimalKB-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "002ffc01ce7f9427027a0b4cda9ed079",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 53856,
      "upload_time": "2022-02-11T11:02:41",
      "upload_time_iso_8601": "2022-02-11T11:02:41.298527Z",
      "url": "https://files.pythonhosted.org/packages/ad/43/2864cea1ef02dabd0b27ef854c7ff85ccde552822745cd1ffbde15377a10/minimalKB-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}