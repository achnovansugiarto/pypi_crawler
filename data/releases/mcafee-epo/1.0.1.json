{
  "info": {
    "author": "David Lord",
    "author_email": "david.lord@moesol.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Systems Administration"
    ],
    "description": "Python client for McAfee ePolicy Orchestrator\n=============================================\n\nA straightforward wrapper around the ePO API.\nManages authentication, building requests, and interpreting responses.\nSimply treat the client object as a callable function, passing the command name and parameters.\n\nInstall::\n\n    $ pip install mcafee-epo\n\nUse::\n\n    >>> from mcafee_epo import Client\n    >>> client = Client('https://localhost:8443', 'user', 'password')\n    >>> systems = client('system.find', '')\n\nDifferences from \"official\" client\n----------------------------------\n\nThis library was created in response to the fairly poor client distributed by McAfee, which didn't support Python 3 and\nwas generally a mess.\n(You can find a cleaned up version of their client with Python 3 support in the first few commits.)\n\nThe official library required copying files into the Python location to \"install\" it.\nThis library is an actual package installed using ``pip``.\n\nThe official client uses low level url libraries and numerous workarounds to make http requests.\nThis library uses the `requests <http://python-requests.org/>`_ library to greatly simplify the work the previous code\nwas doing.\n\nThe official client used a dynamic command discovery and dispatch mechanism to make api calls seem like a nested set of\nobjects.\nThis library forgoes that complexity (which wasn't understood by IDEs anyway) for a more straightforward approach that\njust accepts command names when calling.\n\nLinks\n-----\n\n* `PyPI releases <https://pypi.python.org/pypi/mcafee-epo>`_\n* `Source code <https://bitbucket.org/davidism/mcafee-epo>`_\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/davidism/mcafee-epo",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mcafee-epo",
    "package_url": "https://pypi.org/project/mcafee-epo/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mcafee-epo/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/davidism/mcafee-epo"
    },
    "release_url": "https://pypi.org/project/mcafee-epo/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "McAfee ePolicy Orchestrator API",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5716368,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f146fa270265a012c5be225de8482466a58bb184319153409f7e7fb0223ecd13",
        "md5": "446f236d5fdf7b9d68525fc2b9f1d2ce",
        "sha256": "85be7958d10a72fe03eed2c737191be6650e2966efdd69ca866c25b391a20be4"
      },
      "downloads": -1,
      "filename": "mcafee-epo-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "446f236d5fdf7b9d68525fc2b9f1d2ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4334,
      "upload_time": "2015-01-29T18:58:15",
      "upload_time_iso_8601": "2015-01-29T18:58:15.937769Z",
      "url": "https://files.pythonhosted.org/packages/f1/46/fa270265a012c5be225de8482466a58bb184319153409f7e7fb0223ecd13/mcafee-epo-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}