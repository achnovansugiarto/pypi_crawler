{
  "info": {
    "author": "Mark Murnane",
    "author_email": "mark@hackafe.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# DMX485\n## Requirements\nThis script requires pyserial.\n```\npip install --user pyserial\n```\n\n## Installation\nInstall from pip:\n```\npip install --user dmx485\n```\nInstall from source:\n```\npython setup.py install\n```\n\n## Hardware Compatibility\nThis should work with any FTDI RS485 dongle or any of the similar knock-offs.\n\nFTDI to RS485 cheap dongle:\n\nhttps://fr.aliexpress.com/item/USB-to-TTL-RS485-Serial-Converter-Adapter-FTDI-Module-FT232RL-SN75176-double-function-double/32771847720.html?spm=a2g0w.search0104.3.15.63586239S7KSon&ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_319_10892_317_10696_453_10084_454_10083_10618_10304_10307_10820_10821_538_537_10302_536_10843_10059_10884_10887_100031_321_322_10103,searchweb201603_51,ppcSwitch_0&algo_expid=6957aa39-4868-4f8d-ac7f-b10f610a4a24-2&algo_pvid=6957aa39-4868-4f8d-ac7f-b10f610a4a24\n\n\n## Hardware Example\nhttps://stevenbreuls.com/2013/05/diy-usb-dmx-dongle-interface-for-under-10/\n\n## Usage\nFirst create an instance of dmx.DMX_Serial(), then start the background thread. Once that is running the dongle will begin sending a full DMX universe.\nTo change the value of a channel use set_data(). This function takes a bytes() object with 512 bytes, each representing a single DMX channel. It will be sent on the next DMX refresh.\n```\nimport time\nimport dmx\n\nsender = dmx.DMX_Serial()\nsender.start()\nfor i in range(200):\n    if i % 2:\n        sender.set_data(bytes((255,)*512))\n    else:\n        sender.set_data(bytes((0,)*512))\n    time.sleep(1)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitbyt3r/dmx",
    "keywords": "dmx",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dmx485",
    "package_url": "https://pypi.org/project/dmx485/",
    "platform": "",
    "project_url": "https://pypi.org/project/dmx485/",
    "project_urls": {
      "Homepage": "https://github.com/bitbyt3r/dmx"
    },
    "release_url": "https://pypi.org/project/dmx485/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple DMX driver using an RS485 adapter",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5925048,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61cd9a40d67cac651448d86bf6e8e3a13df5d08c1a7b3980f47945628a14e807",
        "md5": "62ff8fd9a0330a41db3f79a5f1140a38",
        "sha256": "ac51cb3892625427408a59f03f5da73f77c6aa9fb6189507f305c72428dada11"
      },
      "downloads": -1,
      "filename": "dmx485-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "62ff8fd9a0330a41db3f79a5f1140a38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2483,
      "upload_time": "2019-10-03T19:47:35",
      "upload_time_iso_8601": "2019-10-03T19:47:35.306273Z",
      "url": "https://files.pythonhosted.org/packages/61/cd/9a40d67cac651448d86bf6e8e3a13df5d08c1a7b3980f47945628a14e807/dmx485-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}