{
  "info": {
    "author": "Daniel Kaufhold",
    "author_email": "daniel.kaufhold@bitmazk.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django Paypal Express Checkout\n==============================\n\nA Django application to integrate PayPal in your Django driven site.\n\nFeatures\n--------\n\nCurrently it only features a simple express checkout implementation for one\nitem or to allow a user to raise his account balance.\n\nSo if you e.g. have yearly payment for an account or only one item on sale,\nthis app is capable of doing the PayPal express checkout handling for you.\n\nCheck the \"Installation\" section on what you are yet able to set up.\n\n\nInstallation\n------------\n\nYou need to install the following prerequisites in order to use this app::\n\n    pip install Django\n\nIf you want to install the latest stable release from PyPi::\n\n    $ pip install django-paypal-express-checkout\n\nIf you feel adventurous and want to install the latest commit from GitHub::\n\n    $ pip install -e git://github.com/bitmazk/django-paypal-express-checkout.git#egg=paypal_express_checkout\n\nAdd ``paypal_express_checkout`` to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...,\n        'paypal_express_checkout',\n    )\n\nHook this app into your ``urls.py``::\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^checkout/', include('paypal_express_checkout.urls')),\n    )\n\n\nAdd your hostname to the following settting: ::\n\n    HOSTNAME = 'http://example.com'  # without trailing slash\n\nIn case you want to test your checkout view in the browser locally, you need\nto install something like `localtunnel <http://localtunnel.com/>`_ and set\nyour hostname to your localtunnel url: ::\n\n    HOSTNAME = 'http://XXXX.localtunnel.com'\n\nFor testing and development you might want to set the PayPal URLs to the\nsandbox ones in your ``local_settings.py``: ::\n\n    PAYPAL_API_URL = 'https://api-3t.sandbox.paypal.com/nvp'\n    PAYPAL_LOGIN_URL = (\n        'https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token='\n    )\n\nThe following setting will be the description of all payments that are\ndisplayed when the user logs into his PayPal account for checkout: ::\n\n    SALE_DESCRIPTION = 'Your payment to Foobar Inc.'\n\n.. hint::\n\n    This is not the description of an Item!\n\nFinally you need to set the following settings to the user, password and\nsignature PayPal will provide you with: ::\n\n    PAYPAL_USER = 'username_merchant_api1.gmail.com'\n    PAYPAL_PWD = 'your api password'\n    PAYPAL_SIGNATURE = 'your api signature'\n\nDon't forget to run the South migrations::\n\n    ./manage.py migrate paypal_express_checkout\n\n\nSettings\n--------\n\nIf you want to allow anonymous checkout set the\n``PAYPAL_ALLOW_ANONYMOUS_CHECKOUT`` to ``True``:::\n\n    PAYPAL_ALLOW_ANONYMOUS_CHECKOUT = True  # Defaults to False\n\n\nUsage\n-----\n\n**Creating Items**\n\nFirst you should add an ``Item`` to your project. They can be easily added and\nupdated via the Django admin.\nThere you set ``Item.name`` as the display name of your item,\n``Item.description`` for a further description and ``Item.value`` for the price\nof this item.\nYour customer will then be able to chose between the items you provide and set\na quantity for how much he wants to buy.\n\n**Overriding the form**\n\nIf you seek for a more complex solution, at this point we provide the\n``SetExpressCheckoutFormMixin`` to allow you to customize the form that is used\nto process the checkout procedure.\nThe minimum implementation should include: ::\n\n    class MyForm(SetExpressCheckoutFormMixin):\n        def get_items_and_quantities(self):\n            item = Item.objects.get(pk=1)\n            quantity = 1\n            return [(item, quantity), ]\n\nHave a look at our ``paypal_express_checkout.forms.SetExpressCheckoutForm``\nexample implementation for a better understanding.\n\nFurther we supply a simpe settings hook to tell the app, what new form to use.\nJust set ``PAYPAL_SET_CHECKOUT_FORM`` to the correct form class like so:::\n\n    PAYPAL_SET_CHECKOUT_FORM = 'myproject.forms.MyForm'\n\n\n**Logging**\n\nEach payment is logged in our provided ``PaymentTransaction`` model.\nIt can also easily be accessed via Django admin and will provide you with\ninformation to identify every payment in every status.\n\nOccasionally there might be an error during the payment process, that the will\nbe logged in the ``PaymentTransactionError`` model.\nIt stores information about exceptions or errorous PayPal responses that occur\nduring a payment.\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps::\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-paypal_express_checkout\n    $ pip install -r requirements.txt\n    $ ./logger/tests/runtests.sh\n    # You should get no failing tests\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    # Describe your change in the CHANGELOG.txt\n    $ git add . && git commit\n    $ git push origin feature_branch\n    # Send us a pull request for your feature branch\n\nWhenever you run the tests a coverage output will be generated in\n``tests/coverage/index.html``. When adding new features, please make sure that\nyou keep the coverage at 100%.\n\n\nRoadmap\n-------\n\nCheck the issue tracker on github for milestones and features to come.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitmazk/django-paypal-express-checkout",
    "keywords": "django,url,paypal,paypal_express_checkout,API",
    "license": "The MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-paypal-express-checkout",
    "package_url": "https://pypi.org/project/django-paypal-express-checkout/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-paypal-express-checkout/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bitmazk/django-paypal-express-checkout"
    },
    "release_url": "https://pypi.org/project/django-paypal-express-checkout/1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A reusable Django app to include a PayPal payment flow to your site.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2603602,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ef0f2ba1ca00ca3cb38f49c4761a92481a676fb4604b0c743b7337aa4798b37",
        "md5": "3aafb7e6e6ae9e255ecb17a086cf5c84",
        "sha256": "a99ccdd1b578cd334ef913530a165d7298b4992ea1c2069cf3bee60a5345c511"
      },
      "downloads": -1,
      "filename": "django-paypal-express-checkout-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3aafb7e6e6ae9e255ecb17a086cf5c84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24796,
      "upload_time": "2013-09-24T18:58:12",
      "upload_time_iso_8601": "2013-09-24T18:58:12.962604Z",
      "url": "https://files.pythonhosted.org/packages/8e/f0/f2ba1ca00ca3cb38f49c4761a92481a676fb4604b0c743b7337aa4798b37/django-paypal-express-checkout-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}