{
  "info": {
    "author": "Jose Padilla",
    "author_email": "jpadilla@getblimp.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Django REST framework JWT Auth\r\n==============================\r\n\r\n|Build Status| |PyPI version|\r\n\r\nOverview\r\n--------\r\n\r\nThis package provides `JSON Web Token Authentication`_ support for\r\n`Django REST framework`_.\r\n\r\nIf you want to read more about JWT, here’s a great blog post by the guys\r\nat Auth0 that talks about `Cookie vs Token based authentication`_.\r\n\r\nRequirements\r\n------------\r\n\r\n-  Python (2.7, 3.2, 3.3, 3.4)\r\n-  Django (1.6, 1.7)\r\n-  Django REST Framework (2.4.3, 2.4.4, 3.0.0)\r\n\r\nInstallation\r\n------------\r\n\r\nInstall using ``pip``\\ …\r\n\r\n::\r\n\r\n    $ pip install djangorestframework-jwt\r\n\r\nUsage\r\n-----\r\n\r\nIn your ``settings.py``, add ``JSONWebTokenAuthentication`` to Django\r\nREST framework’s ``DEFAULT_AUTHENTICATION_CLASSES``.\r\n\r\n.. code:: python\r\n\r\n    REST_FRAMEWORK = {\r\n        'DEFAULT_PERMISSION_CLASSES': (\r\n            'rest_framework.permissions.IsAuthenticated',\r\n        ),\r\n        'DEFAULT_AUTHENTICATION_CLASSES': (\r\n            'rest_framework.authentication.SessionAuthentication',\r\n            'rest_framework.authentication.BasicAuthentication',\r\n            'rest_framework_jwt.authentication.JSONWebTokenAuthentication',\r\n        ),\r\n    }\r\n\r\nIn your ``urls.py`` add the following URL route to enable obtaining a\r\ntoken via a POST included the user’s username and password.\r\n\r\n.. code:: python\r\n\r\n    urlpatterns = patterns(\r\n        '',\r\n        # ...\r\n\r\n        url(r'^api-token-auth/', 'rest_framework_jwt.views.obtain_jwt_token'),\r\n    )\r\n\r\nYou can easily test if the endpoint is working by doing the following in\r\nyour terminal, if you had a user created with the username **admin** and\r\npassword **abc123**.\r\n\r\n.. code:: bash\r\n\r\n    $ curl -X POST -d \"username=admin&password=abc123\" http://localhost:8000/api-token-auth/\r\n\r\nAlternatively, you can use all the content types supported by the Django\r\nREST framework to obtain the auth token. For example:\r\n\r\n.. code:: bash\r\n\r\n    $ curl -X POST -H \"Content-Type: application/json\" -d '{\"username\":\"admin\",\"password\":\"abc123\"}' http://localhost:8000/api-token-auth/\r\n\r\nNow in order to access protected api urls you must include the\r\n``Authorization: JWT <your_token>`` header.\r\n\r\n.. code:: bash\r\n\r\n    $ curl -H \"Authorization: JWT <your_token>\" http://localhost:8000/protected-url/\r\n\r\nRefresh Token\r\n-------------\r\n\r\nIf ``JWT_ALLOW_REFRESH`` is True, issued tokens can be “refreshed” to\r\nobtain a new brand token with renewed expiration time. Add a URL pattern\r\nlike this:\r\n\r\n.. code:: python\r\n\r\n        url(r'^api-token-refresh/', 'rest_framework_jwt.views.refresh_jwt_token'),\r\n\r\nPass in an existing token to the refresh endpoint as follows:\r\n``{\"token\": EXISTING_TOKEN}``. Note that only non-expired tokens will\r\nwork. The JSON response looks the same as the normal obtain token\r\nendpoint ``{\"token\": NEW_TOKEN}``.\r\n\r\n\\`\\`\\`bash $ curl -X POST -H “Content-Type: application/json” -d\r\n’{“token”\r\n\r\n.. _JSON Web Token Authentication: http://tools.ietf.org/html/draft-ietf-oauth-json-web-token\r\n.. _Django REST framework: http://django-rest-framework.org/\r\n.. _Cookie vs Token based authentication: http://blog.auth0.com/2014/01/07/angularjs-authentication-with-cookies-vs-token/\r\n\r\n.. |Build Status| image:: https://travis-ci.org/GetBlimp/django-rest-framework-jwt.png?branch=master\r\n   :target: https://travis-ci.org/GetBlimp/django-rest-framework-jwt\r\n.. |PyPI version| image:: https://badge.fury.io/py/djangorestframework-jwt.png\r\n   :target: http://badge.fury.io/py/djangorestframework-jwt",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GetBlimp/django-rest-framework-jwt",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangorestframework-jwt",
    "package_url": "https://pypi.org/project/djangorestframework-jwt/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/djangorestframework-jwt/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/GetBlimp/django-rest-framework-jwt"
    },
    "release_url": "https://pypi.org/project/djangorestframework-jwt/1.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "JSON Web Token based authentication for Django REST framework",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2974816,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e48ef9b8041c16c9f7d3bd46f45eadaba126e4b5943d75dd8edc32ced64b1d3",
        "md5": "12182abe72ae0d4d83a96880302a6315",
        "sha256": "e6d680304a3cd34e2b5c6a1d3887cc92d1f744d3359b17b6309f892e8ba2e012"
      },
      "downloads": -1,
      "filename": "djangorestframework_jwt-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12182abe72ae0d4d83a96880302a6315",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 16588,
      "upload_time": "2014-12-11T22:23:56",
      "upload_time_iso_8601": "2014-12-11T22:23:56.303266Z",
      "url": "https://files.pythonhosted.org/packages/8e/48/ef9b8041c16c9f7d3bd46f45eadaba126e4b5943d75dd8edc32ced64b1d3/djangorestframework_jwt-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9187af2b359cb121c282d003c2a34a34ba364d46f144733bc77e2240756136a4",
        "md5": "a3d94cbb6984925a3c85254980a06fcd",
        "sha256": "5fc40de379df1910cf4ca04658514cacf897dd7eb58938a89f7c1d9a8fb7776c"
      },
      "downloads": -1,
      "filename": "djangorestframework-jwt-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a3d94cbb6984925a3c85254980a06fcd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12948,
      "upload_time": "2014-12-11T22:23:27",
      "upload_time_iso_8601": "2014-12-11T22:23:27.411082Z",
      "url": "https://files.pythonhosted.org/packages/91/87/af2b359cb121c282d003c2a34a34ba364d46f144733bc77e2240756136a4/djangorestframework-jwt-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}