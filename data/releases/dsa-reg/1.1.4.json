{
  "info": {
    "author": "Mohamed Masoud",
    "author_email": "mmasoud2@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## dsa_reg\n\nThis package approximately computes the offsets needed to register DSA (Digital Slide Archive) item thumbnails.\n\n\n\n## Installations\n__Through pypi package__\n``` Shell\n$ pip install dsa-reg\n```\n\n__From Source__\n``` Shell\n$ git clone git@github.com:mmasoud1/dsa_reg.git\n\n```\n\n## Usage\nAfter the package is installed, main operation can be performed as follows:\n\n__Register by Thumbnails__\n``` Python\nfrom dsa_reg import rigidRegByThumb\n\n#param refItemId (string): ref image Id \n#param targetItemId (string): target image Id\n#param xBaseUrl (string): DSA Server URL e.g. https://styx.neurology.emory.edu/girder/api/v1\n#param xAuthentication: boolean (0,1)  \n#param xEnhancement: boolean (0,1)  \n#return (Dict): homography metrix, psnr, x offset, y offset, horizontal scaleX, vertical  scaleY\n\nrigidRegByThumb(refItemId, targetItemId, xBaseUrl)\n\n# e.g. \nrigidRegByThumb(refItemId = \"5e361da534679044bda81b16\", \n\t            targetItemId = \"5e361-SOME-OTHER-ID\", \n\t            xBaseUrl = \"https://styx.neurology.emory.edu/girder/api/v1\")\n\n\n\n# if using a private DSA collection,  set xAuthentication = 1 to provide login credentials:\n\nrigidRegByThumb(refItemId = \"5e361da534679044bda81b16\", \n\t            targetItemId = \"5e361-SOME-OTHER-ID\", \n\t            xBaseUrl = \"https://styx.neurology.emory.edu/girder/api/v1\", \n\t            xAuthentication = 1, \n\t            xEnhancement = 0)\n\n# If a preprocessing is needed such that the tile needs enhancement before registration, set xEnhancement boolean value to 1\n\n```\n\n\n__Register by Magnification__\n``` Python\nfrom dsa_reg import rigidRegByMagnification\n\nrigidRegByMagnification(refItemId, targetItemId, xBaseUrl)\n\n#e.g. \nrigidRegByMagnification(refItemId = \"5e361da534679044bda81b16\", \n\t\t\t            targetItemId = \"5e361-SOME-OTHER-ID\", \n\t\t\t            xBaseUrl = \"https://styx.neurology.emory.edu/girder/api/v1\")\n\n# magnification default value is 1\n\n\n\nrigidRegByMagnification(refItemId, targetItemId, xBaseUrl, magnification,  xAuthentication)\n# magnification can be smaller value < = 1 for fast processing and wise resources use\n\nrigidRegByMagnification(refItemId, targetItemId, xBaseUrl, magnification,  xAuthentication, xEnhancement)\n\n#e.g. \nrigidRegByMagnification(refItemId = \"5e361da534679044bda81b16\", \n\t\t\t            targetItemId = \"5e361-SOME-OTHER-ID\", \n\t\t\t            xBaseUrl = \"https://styx.neurology.emory.edu/girder/api/v1\",\n\t\t\t            magnification = 0.5,\n\t\t\t            xAuthentication = 1,\n\t\t\t            xEnhancement = 1)\n\n```\n\n## For contributing, issues and suggestions\nYour contribution to enhance the registration technique is welcomed, please start by new issue or  pull a request.\n\n\n### Next:\n1. This is a demo of initial and approximated rigid registration results, the target is to extend the functionality to whole slide images registration in fast, accurate mode.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/mmasoud1/dsa_reg.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dsa-reg",
    "package_url": "https://pypi.org/project/dsa-reg/",
    "platform": "",
    "project_url": "https://pypi.org/project/dsa-reg/",
    "project_urls": {
      "Homepage": "http://github.com/mmasoud1/dsa_reg.git"
    },
    "release_url": "https://pypi.org/project/dsa-reg/1.1.4/",
    "requires_dist": [
      "six",
      "girder-client",
      "Pillow",
      "opencv-python",
      "scikit-image"
    ],
    "requires_python": ">=2.7",
    "summary": "Register DSA items thumbnails and return homography matrix, image size,  x offset, y offset, scale x, and scale y. The registration code is based on OpenCV",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7699960,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3821bfd2cf001d4c21f346be4ecf4821a48bf0d0514f2c9fada0bac1dbdf61aa",
        "md5": "c593e945726b89109d283f1e47d2292b",
        "sha256": "747995104647cc0f30c0381e58c2b78811428ff544f20dbe082e7fd156219b85"
      },
      "downloads": -1,
      "filename": "dsa_reg-1.1.4-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "c593e945726b89109d283f1e47d2292b",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7",
      "size": 4931,
      "upload_time": "2020-07-14T18:59:27",
      "upload_time_iso_8601": "2020-07-14T18:59:27.872144Z",
      "url": "https://files.pythonhosted.org/packages/38/21/bfd2cf001d4c21f346be4ecf4821a48bf0d0514f2c9fada0bac1dbdf61aa/dsa_reg-1.1.4-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e5add76ca76a68db0412b4cd61cd140fc9fc37eeb32bb432aab9f667f35e60d",
        "md5": "dd7b10e37ac6082b3968743c331e1e93",
        "sha256": "e7ee325dbbd99f40a20dba040a92e6a3d73857611fea9bc6724cb3c39c183c92"
      },
      "downloads": -1,
      "filename": "dsa_reg-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dd7b10e37ac6082b3968743c331e1e93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 4039,
      "upload_time": "2020-07-14T18:59:29",
      "upload_time_iso_8601": "2020-07-14T18:59:29.192998Z",
      "url": "https://files.pythonhosted.org/packages/2e/5a/dd76ca76a68db0412b4cd61cd140fc9fc37eeb32bb432aab9f667f35e60d/dsa_reg-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}