{
  "info": {
    "author": "Alexander Becker",
    "author_email": "galax.becker@live.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: AsyncIO",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education :: Computer Aided Instruction (CAI)",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "#mbclient\nClient software and on the fly visualisation tools for the moessbauer effect.\n\n##The client software\nThe client software is a command line tool capable of connecting to the Red-Pitaya running the [MBFilter](https://github.com/phylex/MBFilter)\n\nprogram in server mode, providing the server on the Red-Pitaya with all the neccesary information to configure itself properly and to store the data\nreceived from the Red-Pitaya in a `.csv` file for Analysis by the student and also Visualise the data as a pulse-height spektrum and a 2d spektrum of\npulse height vs. Digital Function Generator Address. The Visualisation is updated continuously and can be exited without interfering with the data\ntaking procedures.\n\n##The program structure\nThe mbclient package consists of the cli application located at `cli.py` and associated functions in the `mbclient.py` file. The command line program\noperates asynchronously with [asyncio](https://docs.python.org/3/library/asyncio.html). There are a total of three tasks.\n1. The user facing task waits for a `stop` input from the user and sends a terminate signal to the other running tasks.\n2. The `process_data` task opens a websocket connection to the Red-Pitaya experiment, reads in the data from there and passes it along to 'consumer'\n   tasks.\n3. The `write_to_file` task writes the decoded data it receives from the task 2 and writes it into an csv file.\n4. The `plot_data` task starts a second process, that is responsible for 'live' plotting of the data and forwards the data to it via a PIPE.\n\nThe `mbdatatypes.py` file contains the Class that represents the result coming from the Red-Pitaya. It contains methods to decode the raw data from\nthe websocket and methods to transform the data read to a csv entry.\n\nThe `mbplotter.py` file contains the Class that is spawned off into the second process to plot the data, as well as a class that acts as an API for\nsending data to the plotting process via the `plot(data)` funciton. The characteristics and details of the plot are encoded in the `ProcessPlotter` class.\n\n\n##Notes on Matplotlib\nMatplotlib does quite a lot of things. One of them being the implementation of it's own event loop similar to the one used from asyncio. With the\nevent loop comes the ability to set a timer that fires a callback function that updates the plot. All this is implemented in the `ProcessPlotter`\nclass. The Pipe between the processes is used as a data buffer.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phylex/mbclient",
    "keywords": "",
    "license": "GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mbclient",
    "package_url": "https://pypi.org/project/mbclient/",
    "platform": "",
    "project_url": "https://pypi.org/project/mbclient/",
    "project_urls": {
      "Homepage": "https://github.com/phylex/mbclient"
    },
    "release_url": "https://pypi.org/project/mbclient/1.0.1/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "websockets",
      "argparse"
    ],
    "requires_python": ">=3.8",
    "summary": "A client for the Moessbauer experiment of the KIT-Physics Laboratory course",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10695851,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08f50f724657a28888bf36f7f6079ab36a4a76d4ebaf8036219e7eda7898af6a",
        "md5": "7f1216a32e655473cc3e7c3f53b29c42",
        "sha256": "86a3bdefca9e1c078b6336e1e91b88d4224614aa6f2c054757d5c17bde734230"
      },
      "downloads": -1,
      "filename": "mbclient-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f1216a32e655473cc3e7c3f53b29c42",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20675,
      "upload_time": "2021-06-16T21:43:54",
      "upload_time_iso_8601": "2021-06-16T21:43:54.599919Z",
      "url": "https://files.pythonhosted.org/packages/08/f5/0f724657a28888bf36f7f6079ab36a4a76d4ebaf8036219e7eda7898af6a/mbclient-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6334d6bdca7ce171f3245432439c17ff0dba4e3dbc325ffaa70f8e63009967d4",
        "md5": "717b85b8c427894e043417cf7875c5cf",
        "sha256": "719df0365cad9bc0062ae32635633b162d0239f222090ce730747e296e8a0b72"
      },
      "downloads": -1,
      "filename": "mbclient-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "717b85b8c427894e043417cf7875c5cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 21019,
      "upload_time": "2021-06-16T21:43:56",
      "upload_time_iso_8601": "2021-06-16T21:43:56.275917Z",
      "url": "https://files.pythonhosted.org/packages/63/34/d6bdca7ce171f3245432439c17ff0dba4e3dbc325ffaa70f8e63009967d4/mbclient-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}