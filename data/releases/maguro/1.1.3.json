{
  "info": {
    "author": "Rodney Maniego Jr.",
    "author_email": "rod.maniego23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Maguro\n\nMaguro is a Python-wrapper for DSV files.\n\nOther behaviors are similar to a native Python list, the tutorial below only covers add-on features specific to Maguro.\n\n# Official Release\n\nMaguro can now be used on your Python projects through PyPi by running pip command on a Python-ready environment.\n\n`pip install maguro --upgrade`\n\nCurrent version is 1.1.0, but more updates are coming soon. This is compatible with Python version 3.9 or with the latest.\n\n### package import\n`from maguro import Maguro`\n\n### basic usage\n```python\ndataset = Maguro(\"dataset.csv\")\n```\n\n### custom encoding\n```python\ndataset = Maguro(\"dataset.csv\", encoding=\"utf-8\")\n```\n\n### custom delimiter\n```python\ndataset = Maguro(\"dataset.tsv\", delimiter=\"\\t\")\n```\n\n### clear\nRemove all items inside the list by using `dataset.clear()` method.\n\n### add items\nUse `dataset.append(value)` to add new item in the list.\n\n\n### add only if unique\nUse `dataset.append(value, unique=True)` to add if item is not yet in the list.\n\n### sorting\nUse `dataset.sort()` to sort the list alphabetically.\n\n### reverse\nUse `dataset.reverse()` to reverse the list.\n\n### remove item\nUse `dataset.pop(index)` to to remove the first occurence in the list.\n\n### to formatted string\nReturn a formatted string, concatenated by the specificied delimiter, by using `dataset.pack()` method.\n\n### raw list\nReturn a raw list (of `list` data type) by using `dataset.unpack()` method.\n\n### loop over items\n```python\nfor item in dataset:\n    print(item)\n```\n\n### remove item\nRemove existing (or non-existing) value.\nUsage: `dataset.remove(value)`\n\n### insert item\nInsert data at a specific index\nUsage: `dataset.insert(index, value)`\n\n### load list\nLoading new data into a Maguro object will replace previous contents.\nUsage: `dataset.load(iterable)`\n\n### extend list\nExtending original lists follows the same list syntax.\nUsage: `dataset.extend(iterable)`\n\n### remove duplicates\nMaguro leverages Python `list(set())` casting to remove duplicates.\nUsage: `dataset.distinct()`\n\n### Creating 2D arrays\n```python\ntest = Maguro(\"temp/03b-2d.csv\", delimiter=\",\", newline=\"\\n\")\ntest.append([\"Juan\", 23, \"Male\", 72, 168, False])\ntest.append([\"Pedro\", 22, \"Male\", 68, 172, True])\ntest.append([\"Maria\", 19, \"Female\", 56, 162, True])\n````\n\n### Force Quotations on Strings\n```python\ntest = Maguro(\"temp/9-tab-separated-values.tsv\", delimiter=\"\\t\", newline=\"\\n\", quote_strings=True)\ntest.clear()\ntest.append([\"a\", \"b\", \"c\", \"d\", \"e\"])\ntest.append([\"1\", \"2\", \"3\", \"4\", \"5\"])\ntest.append([1, 2, 3, 4, 5])\n\nprint(test.unpack())\n````\n\n### Convert `Yes`, `y`, `No`, and `n` to equivalent Boolean data type (run-time only)\n```python\ntest = Maguro(\"temp/04-booleans.csv\", delimiter=\",\", newline=\"\\n\", allow_boolean=True)\n````\n\n### Header methods\n```python\n# Get the header\ntest = Maguro(\"temp/12a-header.csv\", delimiter=\",\", newline=\"\\n\", quote_strings=True, has_header=True)\nprint(test.get_header())\n\n# Replace with new header\n# equivalent to: test[0] = [*]\ntest = Maguro(\"temp/12b-header.csv\", delimiter=\",\", newline=\"\\n\", quote_strings=True, has_header=True)\ntest.set_header([\"earthquakeId\", \"occurred_on\", \"latitude\", \"longitude\", \"depth\", \"magnitude\", \"calculation_method\", \"network_id\", \"place\", \"cause\"])\nprint(test[0])\n\n# Add new header\ntest = Maguro(\"temp/12c-header.csv\", delimiter=\",\", newline=\"\\n\", quote_strings=True)\ntest.set_header([\"earthquake_id\", \"occurred_on\", \"latitude\", \"longitude\", \"depth\", \"magnitude\", \"calculation_method\", \"network_id\", \"place\", \"cause\"])\nprint(test[0])\nprint(test[1])\n\n# Remove header if set\n# exquivalent to: test = test[1:]\ntest = Maguro(\"temp/13-header.csv\", delimiter=\",\", newline=\"\\n\", quote_strings=True, has_header=True)\ntest.behead()\nprint(test[0])\n````\n\n### Expand all valid child list to max-length\n```python\ntest = Maguro(\"temp/14-expand.csv\", delimiter=\",\", newline=\"\\n\")\ntest.clear()\ntest.append([\"name\", \"age\", \"gender\", \"address\"])\ntest.append([\"Juan\", \"22\", \"M\"])\ntest.append([\"Pedro\", \"21\", \"M\", \"Mars\"])\ntest.append([\"Maria\", \"18\", \"F\", \"Earth\", \"Blue\"])\ntest.append(\"Soledad\")\ntest.expand()\nprint(test.pack())\n````\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/rmaniego/maguro/archive/v1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rmaniego/maguro",
    "keywords": "CSV,TSV,DSV,File,Storage",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maguro",
    "package_url": "https://pypi.org/project/maguro/",
    "platform": null,
    "project_url": "https://pypi.org/project/maguro/",
    "project_urls": {
      "Download": "https://github.com/rmaniego/maguro/archive/v1.0.tar.gz",
      "Homepage": "https://github.com/rmaniego/maguro"
    },
    "release_url": "https://pypi.org/project/maguro/1.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Maguro is a Python-wrapper for DSV files.",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13536638,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a55262b67aab76300af48d96205c2757ad4284259ef83678ac78185ccbebe94e",
        "md5": "d062d90375903de56d87e605c1673295",
        "sha256": "792aa6ad34a9774b7378068596aa64b0a6cac72d0a5d92c7eedcd7bf9a408b5f"
      },
      "downloads": -1,
      "filename": "maguro-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d062d90375903de56d87e605c1673295",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6413,
      "upload_time": "2022-04-17T08:20:21",
      "upload_time_iso_8601": "2022-04-17T08:20:21.247643Z",
      "url": "https://files.pythonhosted.org/packages/a5/52/62b67aab76300af48d96205c2757ad4284259ef83678ac78185ccbebe94e/maguro-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "914fd95ab6ccda86e4180a763ae178e89515f34da639f71e2e0daae1bfada422",
        "md5": "c56097036801315f388d2db1be7df49e",
        "sha256": "20719ad8ce1bc4f99b77394ec8eabea8bd9a60b90a64f607f227f43e4c94180e"
      },
      "downloads": -1,
      "filename": "maguro-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c56097036801315f388d2db1be7df49e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11837,
      "upload_time": "2022-04-17T08:20:24",
      "upload_time_iso_8601": "2022-04-17T08:20:24.189775Z",
      "url": "https://files.pythonhosted.org/packages/91/4f/d95ab6ccda86e4180a763ae178e89515f34da639f71e2e0daae1bfada422/maguro-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}