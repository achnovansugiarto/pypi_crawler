{
  "info": {
    "author": "Henry",
    "author_email": "henryj@kth.se",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Matrix and Vector Algebra\n\n### Python list to contain elements in matrices\n\nA base class matrix implementing linear algebra\nmatrices and typical operations, as well as child class vector\nwith more specific operations for euclidean vectors.\n\n### Installation\n\n`python3 -m pip install matrix-henryj`\n\n### Documentation\n\n##### Example\nCode:\n```python\nA = Matrix(2,2)\nb = Matrix(2,1)\nA.setVals([1,3,0,1])\nb.setVals([1,1])\nprint(A*b)\n```\nOutput:\n```\n _        _\n|  4.0000  |\n|  1.0000  |\n ‾        ‾\n```\n\n* class Matrix:\n  * \\_\\_init__(self,rows,columns)\n  * setVals(self,values)\n  * zero(self)\n  * ID(self)\n  * \\_\\_str__(self)\n  * \\_\\_add__(self,other)\n  * \\_\\_mul__(self,other)\n  * \\_\\_rmul__(self,other)\n  * \\_\\_truediv__(self,other)\n  * \\_\\_neg__(self)\n  * \\_\\_sub__(self,other)\n  * \\_\\_pow__(self,factor)\n  * \\_\\_mod__(self,other)\n  * \\_\\_eq__(self,other)\n  * \\_\\_getitem__(self,index)\n  * size(self)\n  * Transpose(self)\n  * Trace(self)\n  * combMat(self,other)\n  * splitMat(self,col)\n  * \\_\\_rowSwap(self,row1,row2,factor)\n  * \\_\\_rowAdd(self,row1,row2,factor)\n  * \\_\\_rowMult(self,row,factor)\n  * solveLin(self,other)\n  * \\_\\_gaussElimination(self,other)\n  * \\_\\_jordanElimination(self,other)\n  * det(self)\n* class Vector(Matrix):\n  * \\_\\_init__(self,rows)\n  * \\_\\_mul__(self,other)\n  * cross(self,other)\n  * length(self,other)\n  * scalarProj(self,other)\n  * Normalize(self)\n\n#### class Matrix\nA class implementing linear algebra matrices and\ntypical functions available for matrices.\n\n##### \\_\\_init__(self,other)\nInitialize matrix with a number of rows and columns.\n\n##### setVals(self,values)\nGive values to matrix in list values row by row left to right.\n\n##### zero(self)\nMakes the matrix a zero matrix.\n\n##### ID(self)\nMakes the matrix an identity matrix.\n\n##### \\_\\_str__(self)\nDefines string of matrix object.\n\n##### \\_\\_add__(self,other)\nReturns addition of two matrices.\n\n##### \\_\\_mul__(self,other)\nReturns multiplication of two matrices or a matrix with a factor.\n\n##### \\_\\_rmul(self,other)\nReturns multiplication of two matrices or a matrix with a factor,\nsame as \\_\\_mul__.\n\n##### \\_\\_truediv__(self,other)\nReturns multiplication by other inverse to the right or \ndivision by factor.\n\n##### \\_\\_neg__(self)\nReturns changed sign of all values in matrix.\n\n##### \\_\\_sub__(self,other)\nReturns difference of two matrices.\n\n##### \\_\\_pow__(self,factor)\nRaises a matrix to an whole number or takes inverse \nif factor is negative one.\n\n##### \\_\\_mod__(self,other)\nReturns multiplication of self inverse from the right to other if\nmatrix, otherwise takes modulus of each element in self.\n\n##### \\_\\_eq__(self,other)\nChecks if matrices are equal at every position.\n\n##### \\_\\_getitem(self,other)\nThe value at the index in the matrix, counting by rows first.\n\n##### size(self)\nThe size of the matrix in a list, columns and rows.\n\n##### Transpose(self)\nReturns transpose of the matrix, swapping rows with columns.\n\n##### Trace(self)\nReturns the trace of the matrix, sum of all diagonal elements.\n\n##### combMat(self,other)\nReturns the two matrices in a singular matrix, side by side.\n\n##### splitMat(self,col)\nSplits the matrix by column col and returns the objects in a list.\n\n##### \\_\\_rowSwap(self,row1,row2)\nSwaps places of row1 and row2.\n\n##### \\_\\_rowAdd(self,row1,row2,factor)\nAdds row2*factor to row1.\n\n##### \\_\\_rowMult(self,row,factor)\nMultiplies a row by factor.\n\n##### solveLin(self,other)\nSolves self*x=other and returns x for each solution for\neach column in other.\n\n##### \\_\\_gaussElimination(self,other)\nReturns the gaussian elimination of self and other in \nself*x = other.\n\n##### \\_\\_jordanElimination(self,other)\nReturns the jordan elimination of self and other in \nself*x = other.\n\n##### det(self)\nCalculates the determinant using gaussian elimination.\n\n#### class Vector(Matrix)\nA class implementing euclidean vectors and typical operations you\ncan do with them.\n\n##### \\_\\_init__(self,rows)\nInitializes a vector with a number of rows.\n\n##### \\_\\_mul__(self,other)\nReturns the dot product of two vectors or multiplication of each\nelement by a number.\n\n##### cross(self,other)\nReturns the cross product of the two vectors.\n\n##### length(self)\nReturns the euclidean vector length.\n\n##### scalarProj(self,other)\nReturns the scalar projection of self onto other.\n\n##### Normalize(self)\nReturn a vector of length one in same direction.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/grudat20/henryj-ovn7",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-henryj",
    "package_url": "https://pypi.org/project/matrix-henryj/",
    "platform": "",
    "project_url": "https://pypi.org/project/matrix-henryj/",
    "project_urls": {
      "Homepage": "https://github.com/grudat20/henryj-ovn7"
    },
    "release_url": "https://pypi.org/project/matrix-henryj/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package implementing matrices",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7198122,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be191a44643f4bcde979622f5eb7c475ec21a97fc8ea4fefdb67887083aab31f",
        "md5": "d9a19a454c59882a9f2b3f094cc9955d",
        "sha256": "080e35982234a1581d7288673b7f4372807e9abf30cd4075f396b7f0cd4b3c6d"
      },
      "downloads": -1,
      "filename": "matrix-henryj-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d9a19a454c59882a9f2b3f094cc9955d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6515,
      "upload_time": "2020-05-08T15:45:01",
      "upload_time_iso_8601": "2020-05-08T15:45:01.696238Z",
      "url": "https://files.pythonhosted.org/packages/be/19/1a44643f4bcde979622f5eb7c475ec21a97fc8ea4fefdb67887083aab31f/matrix-henryj-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}