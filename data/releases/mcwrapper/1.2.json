{
  "info": {
    "author": "Zidane Karim",
    "author_email": "zkarim7676@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Minecraft API\n\nThis a simple package to wrap many APIs, including the Mojang and Hypixel ones\n\nRequires Python 3.7+\n\n# Usage guide\n\nImport the package with\n\n```py\nimport mcwrapper\n```\n\nOr the preferred way\n\n```py\nfrom mcwrapper import hypixel\n```\n\nThe second way allows you to save some lines writing the actual code. To actually use this, create a Bedwars, Skywars, or Hypixel object. You must pass in a username and api key for the hypixel-related objects\n\n\\***\\*Example\\*\\***\n\n```py\nfrom mcwrapper import hypixel\n\nobject = hypixel.Bedwars(\"ThePotatoPowers\", \"yourapikeyhere\")\n```\n\nTo get information from this object, use the `stats()` method. Then, the object's attributes will be set\n\n```py\nfrom mcwrapper import hypixel\n\nobject = hypixel.Bedwars(\"ThePotatoPowers\", \"yourapikeyhere\")\nobject.stats()\nprint(object.wins) #prints bedwars wins for ThePotatoPowers\n```\n\n## Skins\n\nCreate a **skin object** by first importing the skin file from the package `from mcapiwrapper import skin`\nThe class takes a username argument\n\nThe `skingrab` method will return a link with the user's skin. You can access this with the skin attribute\n\nThe `body` method will return a link with the user's body. You can access this with the body attribute\n\nThe `head` method will return a link with the user's head. You can access this with the head attribute\n\nThe `avatar` method will return a link with the user's head in 2D. You can access this with the avatar attribute\n\n## Bedwars\n\nAs shown above, import hypixel from mcapiwrapper. Then, create a `Bedwars` object which takes a username and apikey parameter (in that order)\n\nAfter the `stats` method is run, you can access all attributes of the Bedwars object. This includes:\n\n- display (displayname)\n- wins\n- losses\n- deaths\n- kills\n- coins\n- final_kills\n- final_deaths\n- beds_destroyed\n- beds_lost\n- winstreak\n- level\n\n## Skywars\n\nAs shown above, import hypixel from mcapiwrapper. Then, create a `Skywars` object which takes a username and apikey parameter (in that order)\n\nAfter the `stats` method is run, you can access all attributes of the Skywars object. This includes:\n\n- wins\n- losses\n- deaths\n- kills\n- coins\n- souls\n- heads\n- winstreak\n- display\n\n## Hypixel\n\nAs shown above, import hypixel from mcapiwrapper. Then, create a `Hypixel` object which takes a username and apikey parameter (in that order)\n\nAfter the `stats` method is run, you can access all attributes of the Hypixel object. This includes:\n\n- firstLogin\n- lastLogin\n- nameHistory\n- display\n\n## Contribute\n\n- Source Code: https://github.com/ThePotatoPowers/mcapiwrapper/\n- Issue Tracker: https://github.com/ThePotatoPowers/mcapiwrapper/issues\n\n## Support\n\nIf you are having issues, please let me know @ zkarim7676@gmail.com\n\n## License\n\nThe project is licensed under the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ThePotatoPowers/mcapiwrapper",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcwrapper",
    "package_url": "https://pypi.org/project/mcwrapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/mcwrapper/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ThePotatoPowers/mcapiwrapper/issues",
      "Homepage": "https://github.com/ThePotatoPowers/mcapiwrapper"
    },
    "release_url": "https://pypi.org/project/mcwrapper/1.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A Minecraft API Wrapper",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10046018,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6eb32abc9150bea7f358d6eabff7d4bb7a47942465cf37ca21a93a3b11976ff2",
        "md5": "2ccb122546319eb0d63b62c61e0ce366",
        "sha256": "a8087c11a306ec570124ea4832b703b85142d7a3796deed443d40e7bd1ed5103"
      },
      "downloads": -1,
      "filename": "mcwrapper-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ccb122546319eb0d63b62c61e0ce366",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4540,
      "upload_time": "2021-04-08T05:13:28",
      "upload_time_iso_8601": "2021-04-08T05:13:28.435589Z",
      "url": "https://files.pythonhosted.org/packages/6e/b3/2abc9150bea7f358d6eabff7d4bb7a47942465cf37ca21a93a3b11976ff2/mcwrapper-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "216a00d1e7e63e58906dd36974a2c2990d5f58b240509f26ef059a48cce07ecf",
        "md5": "5bdfd94bb1240e4b8402482997d57bea",
        "sha256": "428587f80a49a98859167425fa85a0fd261009992b593cc00a815224201e7794"
      },
      "downloads": -1,
      "filename": "mcwrapper-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5bdfd94bb1240e4b8402482997d57bea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4048,
      "upload_time": "2021-04-08T05:13:29",
      "upload_time_iso_8601": "2021-04-08T05:13:29.809856Z",
      "url": "https://files.pythonhosted.org/packages/21/6a/00d1e7e63e58906dd36974a2c2990d5f58b240509f26ef059a48cce07ecf/mcwrapper-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}