{
  "info": {
    "author": "Muhammad Yasirroni",
    "author_email": "muhammadyasirroni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# matpower-pip\r\n\r\nMake [MATPOWER](https://github.com/MATPOWER/matpower) installable from `pypi`. This package make MATPOWER copy (currently Version `7.1`) as `python package`. You can than use [`oct2py`](https://github.com/blink1073/oct2py) or `mypower` to run MATPOWER using octave client. `matlab.engine` also supported. For the latest docs, read [README on GitHub](https://github.com/yasirroni/matpower-pip#readme).\r\n\r\n## Installation\r\n\r\nFor callable `matpower` via `oct2py` (require octave on environment system `PATH`):\r\n\r\n```plaintext\r\npip install matpower[octave]\r\n```\r\n\r\nFor downloading MATPOWER only:\r\n\r\n```plaintext\r\npip install matpower\r\n```\r\n\r\n## Extra (require `oct2py` or `matlab.engine`)\r\n\r\nIf `oct2py` or `matlab.engine` is installed, `matpower.start_instance` can be used as `Oct2Py()` or `matlab.engine.start_matlab()` class with MATPOWER path added. Default engine is `octave`.\r\n\r\n```python\r\nfrom matpower import start_instance\r\n\r\nm = start_instance()\r\nm.runpf() \r\n```\r\n\r\n```python\r\nfrom matpower import start_instance\r\n\r\nm = start_instance()\r\nmpc = m.eval('case9', verbose=False)\r\nmpc = m.runpf(mpc)\r\n```\r\n\r\n```python\r\nfrom matpower import path_matpower\r\n\r\nprint(path_matpower) # matpower installation location\r\n```\r\n\r\nSince `[result] = runopf()` will make `result` contain unsupported `<object opf_model>`, we can avoid it by request maximum number of outputs using `nout='max_nout'` in `octave`.\r\n\r\n```python\r\nfrom matpower import start_instance\r\n\r\nm = start_instance()\r\n\r\nmpc = m.loadcase('case9');\r\nmpopt = m.mpoption('verbose', 2);\r\n[baseMVA, bus, gen, gencost, branch, f, success, et] m.runopf(mpc, mpopt, nout='max_nout')\r\n```\r\n\r\nAlternatively, it would be better to not parse back value that will not be use on python using `oct2py` `.eval` method. Use `;` to avoid octave print output on running the command.\r\n\r\n```python\r\n# import start_instance to start matpower instance\r\nfrom matpower import start_instance\r\n\r\n# start instance\r\nm = start_instance()\r\n\r\n# use octave native to run some commands\r\nm.eval(\"mpopt = mpoption('verbose', 2);\")\r\nm.eval(\"mpc = loadcase('case9');\")\r\nm.eval(\"r1 = runopf(mpc, mpopt);\") # we avoid parse `r1` that containts unsupported `<object opf_model>`\r\n\r\n# fech data to python (.eval is used because .pull is not working in acessing field)\r\nr1_mpc = {}\r\nr1_mpc['baseMVA'] = m.eval('r1.baseMVA;')\r\nr1_mpc['version'] = m.eval('r1.version;')\r\nr1_mpc['bus'] = m.eval('r1.bus;')\r\nr1_mpc['gen'] = m.eval('r1.gen;')\r\nr1_mpc['branch'] = m.eval('r1.branch;')\r\nr1_mpc['gencost'] = m.eval('r1.gencost;')\r\n\r\n# modify variable if necessary\r\n[GEN_BUS, PG, QG, QMAX, QMIN, VG, MBASE, GEN_STATUS, PMAX, PMIN, MU_PMAX, \r\n MU_PMIN, MU_QMAX, MU_QMIN, PC1, PC2, QC1MIN, QC1MAX, QC2MIN, QC2MAX, \r\n RAMP_AGC, RAMP_10, RAMP_30, RAMP_Q, APF] = m.idx_gen(nout='max_nout')\r\ngen_index = 2 # index of generator to be changed\r\ngen_index_ = int(gen_index - 1) # -1 due to python indexing start from 0\r\nPMAX_ = int(PMAX -1) # -1 due to python indexing start from 0\r\nr1_mpc['gen'][gen_index_,PMAX_] = 110 # in this example, we modify PMAX to be 110\r\n\r\n[PQ, PV, REF, NONE, BUS_I, BUS_TYPE, PD, QD, GS, BS, \r\n BUS_AREA, VM, VA, BASE_KV, ZONE, VMAX, VMIN, LAM_P, \r\n LAM_Q, MU_VMAX, MU_VMIN] = m.idx_bus(nout='max_nout')\r\nbus_index = 7 # index of bus to be changed\r\nbus_index_ = int(bus_index - 1) # -1 due to python indexing start from 0\r\nPD_ = int(PD-1) # -1 due to python indexing start from 0\r\nr1_mpc['bus'][bus_index_,int(PD-1)] = 80 # in this example, we modify PD to be 150\r\n\r\n# push back value to octave client\r\nm.push('mpc', r1_mpc) # push r1_mpc in python to mpc in octave\r\n\r\n# test if our pushed variable can be used\r\nm.eval(\"r1 = runopf(mpc, mpopt);\")\r\n\r\n# test if we can retrive pushed value\r\nmpc = m.pull('mpc')\r\n```\r\n\r\nAlso support using `matlab.engine`.\r\n\r\n```python\r\nfrom matpower import start_instance\r\n\r\nm = start_instance(engine='matlab') # specify using `matlab.engine` instead of `oct2py`\r\nr = m.runpf('case5', nargout=0)\r\n```\r\n\r\n## Build for developer\r\n\r\n### Download matpower\r\n\r\n#### Windows\r\n\r\nMATPOWER 7.1\r\n\r\n```plaintext\r\nhttps://github.com/MATPOWER/matpower/releases/download/7.1/matpower7.1.zip\r\ncurl -L https://github.com/MATPOWER/matpower/archive/refs/tags/7.1.zip > matpower.zip\r\ntar -xf matpower.zip\r\ndel matpower.zip\r\nren matpower-7.1 matpower\r\ncopy matpowerpip\\__init__.py matpower\\__init__.py\r\n```\r\n\r\nMATPOWER 7.0\r\n\r\n```plaintext\r\ncurl -L https://github.com/MATPOWER/matpower/releases/download/7.0/matpower7.0.zip > matpower.zip\r\ntar -xf matpower.zip\r\ndel matpower.zip\r\nren matpower7.0 matpower\r\ncopy matpowerpip\\__init__.py matpower\\__init__.py\r\n```\r\n\r\nNote: Sometimes it is not working from inside `vscode`. Try use it on `cmd`\r\n\r\n#### Python\r\n\r\nDirectly use `downloader.py`:\r\n\r\n```plaintext\r\ncd matpowerpip\r\npy downloader.py\r\n```\r\n\r\nWith `matpowerpip` (require `oct2py`):\r\n\r\n```python\r\nimport matpowerpip\r\n\r\nmatpowerpip.downloader.download()\r\n```\r\n\r\n### deployment to pypi\r\n\r\nDelete old dist if exist to avoid the unexpected.\r\n\r\n```powershell\r\ndel dist -Recurse -Force\r\ndel matpower.egg-info -Recurse -Force\r\n```\r\n\r\nFor testing, use `testpypi`:\r\n\r\n```plaintext\r\npy setup.py sdist\r\npy -m twine upload --repository testpypi dist/* --verbose \r\n```\r\n\r\nFor actual push to `pypi`:\r\n\r\n```plaintext\r\npy setup.py sdist\r\ntwine upload dist/*\r\n```\r\n\r\n## Versioning\r\n\r\nThis package maintain MATPOWER version with added version mark, i.e. `MATPOWER 7.1` become `7.1.0.x` where `x` come from `matpower-pip`. Furthermore `matpower-pip` also has its own versioning, but is not released on `pypi` since `matpower-pip` is restricted for development only (and development should use git instead).\r\n\r\n## TODO\r\n\r\n1. Update `mypower` to make `matpower-pip` as default `matpower` path.\r\n\r\n## Authors\r\n\r\n* **Muhammad Yasirroni** - [yasirroni](https://github.com/yasirroni)\r\n\r\n## Acknowledgement\r\n\r\nThis repository was supported by [Faculty of Engineering, Universitas Gadjah Mada](https://ft.ugm.ac.id/en/) under the supervision of [Mr. Sarjiya](https://www.researchgate.net/profile/Sarjiya_Sarjiya)\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/yasirroni/matpower-pip",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matpower",
    "package_url": "https://pypi.org/project/matpower/",
    "platform": "",
    "project_url": "https://pypi.org/project/matpower/",
    "project_urls": {
      "Homepage": "https://gitlab.com/yasirroni/matpower-pip"
    },
    "release_url": "https://pypi.org/project/matpower/7.1.0.2/",
    "requires_dist": null,
    "requires_python": ">3.6",
    "summary": "Make MATPOWER installable from `pypi`.",
    "version": "7.1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17439653,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "857c9810659032be90c0323b83ea0225cd09381e58b739648ca58e276d5bc49a",
        "md5": "f361dab70f5b230504bbc1a00675434d",
        "sha256": "b5db6974cd235d6f248fdeea1b0f66dbcbd03a0e0118091d4b4f847c82349ca3"
      },
      "downloads": -1,
      "filename": "matpower-7.1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f361dab70f5b230504bbc1a00675434d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 28496414,
      "upload_time": "2022-01-27T13:53:20",
      "upload_time_iso_8601": "2022-01-27T13:53:20.293484Z",
      "url": "https://files.pythonhosted.org/packages/85/7c/9810659032be90c0323b83ea0225cd09381e58b739648ca58e276d5bc49a/matpower-7.1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}