{
  "info": {
    "author": "Rahul Bhargava",
    "author_email": "rahulb@mit.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Legacy MediaCloud Python API Client\n===================================\n\nThis is a python client for accessing the [MediaCloud API v2](https://github.com/berkmancenter/mediacloud/blob/master/doc/api_2_0_spec/api_2_0_spec.md). \nWe support Python versions 2.7 and 3.6.\n\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/mitmedialab/MediaCloud-API-Client/blob/master/LICENSE) [![Build Status](https://travis-ci.org/mitmedialab/MediaCloud-API-Client.svg?branch=master)](https://travis-ci.org/mitmedialab/MediaCloud-API-Client)\n\nRelated work:\n* See our [MediaCloud-API-Tutorial_Notebooks](https://github.com/rahulbot/MediaCloud-API-Tutorial-Notebooks) repo for *many* more examples of use   \n* If you happen to work in R, check out the [`mediacloudr` library for R](https://github.com/jandix/mediacloudr) \n(from Dix Jan).\n\nThis package exists to mantain access to our legacy search interface while we build out tooling and reliability for our new system. API keys for the new search tools will not work for this API. \n\n\nUsage\n-----\n\nFirst [sign up for an API key](https://core.mediacloud.org/login/register).  Then\n```\npip install mediacloud-api-legacy\n```\n\nCheck `CHANGELOG.md` for a detailed history of changes.\n\nExamples\n--------\n\nFind out how many stories in the top US online news sites mentioned \"Zimbabwe\" in the last year:\n```python\nimport mediacloud.api\nmc = mediacloud.api.MediaCloud('MY_API_KEY')\nres = mc.storyCount('zimbabwe AND president AND tags_id_media:58722749', 'publish_date:[NOW-1YEAR TO NOW]')\nprint(res['count']) # prints the number of stories found\n```\n\nGet 2000 stories from the NYT about a topic in 2018 and dump the output to json:\n\n```python\nimport mediacloud.api, json, datetime\nmc = mediacloud.api.MediaCloud('MY_API_KEY')\n\nfetch_size = 500\nstories = []\nlast_processed_stories_id = 0\nwhile len(stories) < 2000:\n    fetched_stories = mc.storyList('trump AND \"north korea\" AND media_id:1', \n                                   solr_filter=mc.dates_as_query_clause(datetime.date(2018,1,1), datetime.date(2019,1,1)),\n                                   last_processed_stories_id=last_processed_stories_id, rows= fetch_size)\n    stories.extend(fetched_stories)\n    if len( fetched_stories) < fetch_size:\n        break\n    last_processed_stories_id = stories[-1]['processed_stories_id']\nprint(json.dumps(stories))\n```\n\nFind the most commonly used words in stories from the US top online news sites that mentioned \"Zimbabwe\" and \"president\" in 2013:\n```python\nimport mediacloud.api, datetime\nmc = mediacloud.api.MediaCloud('MY_API_KEY')\nwords = mc.wordCount('zimbabwe AND president AND tags_id_media:58722749',\n                     mc.dates_as_query_clause( datetime.date( 2013, 1, 1), datetime.date( 2014, 1, 1)))\nprint(words[0])  # prints the most common word\n```\n\nTo find out all the details about one particular story by id:\n```python\nimport mediacloud.api\nmc = mediacloud.api.MediaCloud('MY_API_KEY')\nstory = mc.story(169440976)\nprint(story['url'])  # prints the url the story came from\n```\n\nTo save the first 100 stories from one day to a database:\n```python\nimport mediacloud.api, datetime\nmc = mediacloud.api.MediaCloud('MY_API_KEY')\ndb = mediacloud.storage.MongoStoryDatabase('one_day')\nstories = mc.storyList('*', mc.dates_as_query_clause( datetime.date (2014, 1, 1), datetime.date(2014,1,2) ),\n                       last_processed_stories_id=0,rows=100)\n[db.addStory(s) for s in stories]\nprint(db.storyCount())\n```\n\nTake a look at the test in the `mediacloud/test/` module for more detailed examples.\n\nDevelopment\n-----------\n\nIf you are interested in adding code to this module, first clone [the GitHub repository](https://github.com/c4fcm/MediaCloud-API-Client).\n\n## Testing\n\nYou need to create an `MC_API_KEY` envvar and set it to your API key (we use [`python-dotenv`](https://pypi.org/project/python-dotenv/)).\nThen run `make test`. We run continuous integration (via [Travis](https://travis-ci.org/mitmedialab/MediaCloud-API-Client)),\nso every push runs the whole test suite (we also do this nightly and on PRs). \n\n## Distributing a New Version\n\nIf you want to, setup [twin's keyring integration](https://pypi.org/project/twine/) to avoid typing your PyPI\npassword over and over. \n\n1. Run `make test` to make sure all the test pass\n2. Update the version number in `mediacloud/__init__.py`\n3. Make a brief note in the CHANGELOG.md about what changes\n4. Run `make build-release` to create an install package\n5. Run `make release-test` to upload it to PyPI's test platform\n6. Run `make release` to upload it to PyPI\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mediacloud.org",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mediacloud-api-legacy",
    "package_url": "https://pypi.org/project/mediacloud-api-legacy/",
    "platform": null,
    "project_url": "https://pypi.org/project/mediacloud-api-legacy/",
    "project_urls": {
      "Homepage": "http://mediacloud.org"
    },
    "release_url": "https://pypi.org/project/mediacloud-api-legacy/3.13.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Legacy Media Cloud API Client Library",
    "version": "3.13.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17493735,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f46585f00307f9a2bf9b824fddd171b13f3e881882b0f15343ed6709903dede",
        "md5": "cc99927b4620a0030451a5daafc42eaa",
        "sha256": "d7ede008001f843b9fe111e457d076d5ad401d75cc98ab9e33bec9811e8861ea"
      },
      "downloads": -1,
      "filename": "mediacloud-api-legacy-3.13.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cc99927b4620a0030451a5daafc42eaa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17453,
      "upload_time": "2023-03-29T03:19:51",
      "upload_time_iso_8601": "2023-03-29T03:19:51.734600Z",
      "url": "https://files.pythonhosted.org/packages/4f/46/585f00307f9a2bf9b824fddd171b13f3e881882b0f15343ed6709903dede/mediacloud-api-legacy-3.13.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}