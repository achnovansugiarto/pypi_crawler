{
  "info": {
    "author": "Wojciech Banas",
    "author_email": "fizista@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "============\nInstructions\n============\n\nThis is a reusable django app which adds some templatetags to django-taggit_.\n\nThis is a fork the application \"django-taggit-templatetags\".\n\ndjango-taggit-templatetags2 requires Django 1.5 or greater.\n\nThe application works well under python 3.x\n\nInstallation\n============\n\nJust install ``django-taggit-templatetags2`` via ``pip``::\n\n    $ pip install django-taggit-templatetags2\n    \nAfter installing and configuring django-taggit_, just add ``taggit_templatetags2`` to your ``INSTALLED_APPS`` in your ``settings.py``::\n\n    INSTALLED_APPS = (\n    ...\n    'taggit_templatetags2',\n    ...\n    )\n    \nUsage\n=====\n\nNow there are some templatetags enabled, at the moment only to create lists of \ntags and tag-clouds.\n\nIn your templates, you need to load ``taggit_templatetags2_tags``::\n\n    ...\n    {% load taggit_templatetags2_tags %}\n    ... \n\n---------\nTagdetail\n---------\n\nList of tags for the selected object::\n\n   {% get_tags_for_object <some_model_object or id> as \"tags\" %}\n\n--------\nTaglists\n--------\n\nAfter loading ``taggit_templatetags2_tags`` you can create a list of tags for the \nwhole project (in the sense of djangoproject), for an app (in the sense of djangoapp), \nfor a model-class (to get a list for an instance of a model, just use its tag-field).\n\nFor the tags of a project, just do::\n\n    {% get_taglist as tags %}\n    \nFor the tags of an app, just do::\n\n    {% get_taglist as tags for 'yourapp' %}\n    \nFor the tags of a model, just do::\n\n    {% get_taglist as tags for 'yourapp.yourmodel' %}\n\nYou can also customize the name of the tags manager in your model (the default is *tags*)::\n    \n    {% get_taglist as tags for 'yourapp.yourmodel:yourtags' %}\n\nNo matter what you do, you have a list of tags in the ``tags`` template variable. \nYou can now iterate over it::\n\n    <ul>\n    {% for tag in tags %}\n    <li>{{tag}} ({{tag.num_times}})</li>\n    {% endfor %} \n    </ul>\n    \nAs you can see, each tag has an attribute ``num_times`` which declares how many \ntimes it was used. The list of tags is sorted descending by ``num_times``.\n\nInclusion-Tag\n-------------\n\nFor convenience, there's an inclusion-tag. It's used analogue. For example, \nfor a taglist of a model, just do::\n\n    {% include_taglist 'yourapp.yourmodel' %}\n\n---------\nTagclouds\n---------\n\nA very popular way to navigate through tags is a tagcloud_.  This app provides \nsome tags for that::\n\n    {% get_tagcloud as tags %}\n    \nor::\n    \n    {% get_tagcloud as tags for 'yourapp' %}\n    \nor::\n\n    {% get_tagcloud as tags for 'yourapp.yourmodel' %}\n    \nrespectivly. The resulting list of tags is ordered by their ``name`` attribute. \nBesides the ``num_items`` attribute, there's a ``weight`` attribute. Its maximum \nand minimum may be specified as the settings_ section reads.\n\nInclusion-Tag\n-------------\n\nEven for the tagcloud there's an inclusion-tag. For example, for a tagcloud \nof a model, just do::\n\n   {% include_tagcloud 'yourapp.yourmodel' %}\n\nTagCanvas is a Javascript class which will draw and animate a HTML5  canvas \nbased tag cloud.  You can use this library in your application as follows::\n\n   {% include_tagcanvas 'element_id' 'width px' 'height px' 'some-url-name' 'yourapp.yourmodel' %}\n\n- element_id - name to create identifiers for html tags\n- some-url-name -  url to view a list of objects for the selected tag. Default: *tagcanvas-list*.\n   For example, some-url-name='myurlname', then it must be an entry in urls.py \n   file like this::\n   \n   from taggit_templatetags2.views import TagCanvasListView\n   \n   urlpatterns = patterns(\n       ...\n       url(r'^tag-list/(?P<tag_id>.*)/(?P<tag_slug>.*)/',\n           TagCanvasListView.as_view(), name='myurlname'),\n   )\n   \nOr you can use the default view, and then you have to add the following things:\n\n- in urls.py::\n   \n   from taggit_templatetags2 import urls as taggit_templatetags2_urls\n   urlpatterns = patterns(\n       ...\n       url(r'^tags/', include('taggit_templatetags2.urls')),\n   )\n\n- override template \"taggit_templatetags2/tagcanvas_base.html\" and\n- override template \"taggit_templatetags2/tagcanvas_list_item.html\" to customize the look\n   \nTo use this inclusion-tag, make sure that 'django.core.context_processors.static' \nappears somewhere in your TEMPLATE_CONTEXT_PROCESSORS setting.\n\n\n\n.. _settings:\n\nSettings\n========\n\nThere are a few settings to be set:\n\nTAGGIT_TAGCLOUD_MIN (default: 1.0)\n    This specifies the minimum of the weight attribute of a tagcloud's tags.\n    \nTAGGIT_TAGCLOUD_MAX (default: 6.0) \n    This specifies the maximum of the weight attribute of a tagcloud's tags.\n    \nIf you want to use the weight as font-sizes, just do as follows::\n\n    <font size={{tag.weight|floatformat:0}}>{{tag}}</font> \n    \nSo the weights are converted to integer values.\n\nIf you're using your own Tag and/or TaggedItem models rather than the default \nones (`Custom Tagging`_), you can specify a tuple for each model (app,model_name)\n\nTAGGIT_TAG_MODEL = ('myapp','MyTag')\n   default: ('taggit', 'Tag')\n\nTAGGIT_TAGGED_ITEM_MODEL = ('myapp','MyTaggedItem')\n   default: ('taggit', 'TaggedItem')\n\nTesting\n=======\n\nClone code repository::\n\n   $ git clone https://github.com/fizista/django-taggit-templatetags.git\n\nInstallation dependencies needed to test the application::\n\n   $ pip install -e <path to the application>[tests]\n\nStarting tests::\n\n   $ python ./develop.py test\n   \nStarting test coverage::\n\n   $ python ./develop.py manage test\n   \nStarting tox tests::\n\n   $ tox\n\nThanks\n======\n\nThanks to the python- and django-community, in particular to `Alex Gaynor`_, \nthe inventor of django-taggit_ and a wonderful guy to argue with. \nThanks to `Mathijs de Bruin`_ as well for his helpful pull requests.\n \n.. _django-taggit: http://pypi.python.org/pypi/django-taggit\n.. _tagcloud: http://www.wikipedia.org/wiki/Tagcloud\n.. _Alex Gaynor: http://alexgaynor.net/\n.. _Mathijs de Bruin: http://github.com/dokterbob\n.. _Custom Tagging: http://django-taggit.readthedocs.org/en/latest/custom_tagging.html",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fizista/django-taggit-templatetags2",
    "keywords": "django taggit tags tagcloud taglist tagging tag",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-taggit-templatetags2",
    "package_url": "https://pypi.org/project/django-taggit-templatetags2/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-taggit-templatetags2/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/fizista/django-taggit-templatetags2"
    },
    "release_url": "https://pypi.org/project/django-taggit-templatetags2/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Templatetags for django-taggit.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2508515,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "579dca8693382da67c4df41b5a9843b6e3efe04662f5a2590c106a320d1e020a",
        "md5": "3506cb4e6aef39aa0ec61d045861f15f",
        "sha256": "a800bdb842676292172b9ff3c0f40c9a07e663036a8b3396bc7016feafc19686"
      },
      "downloads": -1,
      "filename": "django-taggit-templatetags2-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3506cb4e6aef39aa0ec61d045861f15f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 55055,
      "upload_time": "2014-09-08T23:46:21",
      "upload_time_iso_8601": "2014-09-08T23:46:21.280251Z",
      "url": "https://files.pythonhosted.org/packages/57/9d/ca8693382da67c4df41b5a9843b6e3efe04662f5a2590c106a320d1e020a/django-taggit-templatetags2-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}