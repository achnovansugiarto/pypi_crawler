{
  "info": {
    "author": "DIPS AS",
    "author_email": "heh@dips.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Docker Build System\n\n[![PyPI version](https://badge.fury.io/py/DockerBuildSystem.svg)](https://badge.fury.io/py/DockerBuildSystem)\n[![Build Status](https://travis-ci.com/DIPSAS/DockerBuildSystem.svg?branch=master)](https://travis-ci.com/DIPSAS/DockerBuildSystem)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\nA simple library for handling docker commands with python.\n\n## Install Or Upgrade\n- pip install --upgrade DockerBuildSystem\n\n## Example\n- Include DockerBuildSystem tools:\n```python\nfrom DockerBuildSystem import DockerComposeTools, DockerImageTools, DockerSwarmTools, TerminalTools, VersionTools\n```\n\n- Merge, build and run docker-compose.*.yml files:\n```python\ncomposeFiles = [\n    'docker-compose.yml',\n    'docker-compose.build.yml',\n    'docker-compose.override.yml'\n]\nmergedComposeFile = \"docker-compose.generated.dev.yml\"\nDockerComposeTools.MergeComposeFiles(composeFiles, mergedComposeFile)\nDockerComposeTools.DockerComposeBuild([mergedComposeFile])\nDockerComposeTools.DockerComposeUp([mergedComposeFile])\n```\n\n- Push and pull images in docker-compose.*.yml files, including additional `latest` tag:\n```python\ncomposeFiles = [\n    'docker-compose.yml'\n]\nDockerComposeTools.DockerComposePush(composeFiles)\nDockerComposeTools.PublishDockerImagesWithNewTag(composeFiles, 'latest')\nDockerComposeTools.DockerComposePull(composeFiles)\n```\n\n- Execute test projects in Docker containers and raise exception if container exits with error code due to failing tests:\n```python\ncomposeFiles = [\n    'docker-compose.tests.yml'\n]\ntestContainerNames = [\n    'lab-services-tests'\n]\nDockerComposeTools.ExecuteComposeTests(composeFiles, testContainerNames)\n```\n\n- Load set of specific environment variables from a `*.env` file:\n```python\nTerminalTools.LoadEnvironmentVariables('path_to/variables.env')\n```\n\n- Export top-most version from CHANGELOG.md file (see the example folder) as an environment variable:\n```python\nVersionTools.ExportVersionFromChangelogToEnvironment(\"path_to/CHANGELOG.md\", \"version\")\n```\n- Optionally export versionmajor and versionminor based on the top-most version from CHANGELOG.md file as an environment variable:\n```python\nVersionTools.ExportVersionFromChangelogToEnvironment(\"path_to/CHANGELOG.md\", \"version\", \"versionmajor\", \"versionminor\")\n```\n\n- to use the DockerComposeTools.PromoteDockerImages functionality, provide the following parameters:\n- composeFile - the compose file containing theimages that should be promoted\n- targetTags - the tags you want to use when you push the image to the new feed\n- sourceFeed - the feed you want to pull the images from (should match the compose file)\n- targetFeed - the feed you want to push to\n- user - used for authenticating to sourceFeed and targetFeed\n- password - used for authenticating to sourceFeed and targetFeed\n- dryRun - boolean. True if you want to do a dryRun, i.e. print what would have happened\n\nPlease have a look at an example of use here:\n- https://github.com/DIPSAS/DockerBuildSystem/tree/master/example\n\n## Prerequisites\n- Docker:\n    - https://www.docker.com/get-docker\n- Install Dependencies:\n    - pip install -r requirements.txt\n\n## Additional Info\n- The pip package may be located at:\n    - https://pypi.org/project/DockerBuildSystem\n\n## Publish New Version.\n1. Configure setup.py with new version.\n2. Install build tools: `pip install twine wheel`\n3. Build: python setup.py bdist_wheel\n4. Check: twine check dist/*\n5. Publish: twine upload dist/*\n\n## Test a new version locally\n1. Build: python setup.py bdist_wheel\n2. Install from local file with force-reinstall and no-cache-dir options to force reinstallation when you have changed the code without changing the version number: `python -m pip install path\\to\\yourgitrepo\\DockerBuildSystem\\dist\\DockerBuildSystem-1.1.43-py2.py3-none-any.whl --force-reinstall --no-cache-dir`\n\n## Run Unit Tests\n- python -m unittest\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DIPSAS/DockerBuildSystem",
    "keywords": "Docker Build System",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DockerBuildSystem",
    "package_url": "https://pypi.org/project/DockerBuildSystem/",
    "platform": "",
    "project_url": "https://pypi.org/project/DockerBuildSystem/",
    "project_urls": {
      "Funding": "https://donate.pypi.org",
      "Homepage": "https://github.com/DIPSAS/DockerBuildSystem",
      "Say Thanks!": "http://saythanks.io/to/example",
      "Source": "https://github.com/DIPSAS/DockerBuildSystem"
    },
    "release_url": "https://pypi.org/project/DockerBuildSystem/1.1.51/",
    "requires_dist": [
      "python-dotenv",
      "pyyaml",
      "semantic-version",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "A Docker build system for managing docker.",
    "version": "1.1.51",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11523688,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd7c1ff597ec2c502ea42655a734906d44104b31630583150f9bf209e901d082",
        "md5": "c4948303da1d8dffb546d43f869547e8",
        "sha256": "650d082ce38324c8d300f0f196934d3fff2872befa8cc25ba6568d7a58dca629"
      },
      "downloads": -1,
      "filename": "DockerBuildSystem-1.1.51-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c4948303da1d8dffb546d43f869547e8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10727,
      "upload_time": "2020-10-15T09:19:07",
      "upload_time_iso_8601": "2020-10-15T09:19:07.260351Z",
      "url": "https://files.pythonhosted.org/packages/bd/7c/1ff597ec2c502ea42655a734906d44104b31630583150f9bf209e901d082/DockerBuildSystem-1.1.51-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}