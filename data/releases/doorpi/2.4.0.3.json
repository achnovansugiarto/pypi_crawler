{
  "info": {
    "author": "Thomas Meissner",
    "author_email": "motom001@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: Free for non-commercial use",
      "Natural Language :: English",
      "Natural Language :: German",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications :: Internet Phone",
      "Topic :: Communications :: Telephony",
      "Topic :: Documentation",
      "Topic :: Multimedia :: Sound/Audio :: Capture/Recording",
      "Topic :: Multimedia :: Video :: Capture",
      "Topic :: Multimedia :: Video :: Conversion",
      "Topic :: Security",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Emulators",
      "Topic :: System :: Filesystems",
      "Topic :: System :: Hardware",
      "Topic :: System :: Installation/Setup",
      "Topic :: System :: Software Distribution",
      "Topic :: Utilities"
    ],
    "description": "[DE]\n==========\n\nZiel des Projektes DoorPi ist die Steuerung einer Türsprechanlage mittels einem Einplatiniencomputer wie dem Raspberry Pi.\n\nDazu sollen Ereignisse (Events) wie \"Drücken einer Türklingel\" oder \"NFC Chip xyz vorgehalten\" die Auslöser von Aktionen (Actions) wie \"Anruf bei Telefon xyz\" oder \"E-Mail an xxx\"  sein.\n\nUm diese Events zu registrieren werden \"DoorPi-Keyboards\" genutzt, was z.B. \n* die GPIO-Pins\n* ein PiFace \n* Dateien im Dateisystem des Pi (z.B. für Remote-Befehle über SSH)\n* die serielle Schnittstelle (RDM6300 als NFC Reader)\n* Webservice mit Authentifizierung\n* VoIP-Telefon\nsein können.\n\nAn jedes Event können beliebig viele Actions angefügt werden, die syncron oder asyncron ausgeführt werden. Eine nicht vollständige Liste der Actions ist:\n* VoIP Anruf zu festgelegter Nummer starten\n* VoIP Anruf zu Nummer starten, die aus einer Datei ausgelesen wird\n* Anruf beenden\n* E-Mail versenden\n* Programm ausführen\n* Ausgang schalten\n* Status-Datei schreiben\n* Werte aus IP-Symcon lesen oder zurück schreiben\n* ...\nDurch die Kombination der Events und Actions sind fast alle gewünschten Kombinationen möglich. \n\nEin mögliches Szenario ist:\n1. Beim Druck eines Klingeltasters wird ein Anruf ausgelöst und gezielt eine Nummer angerufen (z.B. interne FritzBox Nummer **613 aber auch Handynummern).\n2. Der Bewohner kann mit der Außenstelle telefonieren und auf Wunsch die Tür remote öffnen, in dem eine definierte Taste (oder Tastenfolge) auf dem Telefon gedrückt wird.\n3. Der Bewohner vergisst das auflegen und DoorPi beendet selbst das Gespräch, sobald die Tür wieder geschlossen wurde.\n4. DoorPi versendet eine E-Mail, dass es einen Anruf gab, jemand die Tür geöffnet hat und jemand ins Haus gegangen ist.\n\nMittlerweile gibt es auch Video-Support, so dass an der Haustür eine Kamera installiert werden kann und das Bild auf den Innenstationen angesehen werden kann, noch bevor das Gespräch angenommen wird.\n\nWeitere Informationen zur Installation und Konfiguration von DoorPi sind im Wiki unter https://github.com/motom001/DoorPi/wiki zu finden.\n\n*Link zu Foren mit DoorPi Threads:*\n\n* http://www.forum-raspberrypi.de/Thread-haussteuerung-doorpi-voip-wechselsprechanlage-tuersprechanlage\n* http://www.ip-symcon.de/forum/threads/26739-DoorPI-VoIP-Door-Intercomstation-with-Raspberry-Pi\n* http://raspberrycenter.de/forum/doorpi-voip-wechselsprechanlage-tuersprechanlage\n* http://forum.lemaker.org/thread-11817-1-1-_pass_doorpi_voip_door_intercomstation_with_bananapi.html\n\n\n[EN]\n==========\n\nThe aim of the project is to connect the intercom with mini-computer and a optional PiFace or GPIO with a relais. \nOn github I found something similar, the project “door-berry” from “mpodroid” (https://github.com/mpodroid/door-berry).\nThere hasn't been any development for a long time and there was still a lot to do, but it was perfect as a template.\n\nDoorPi aims to be a cheap alternative to install a doorcom, instead of expensive commercial products.\nWith DoorPi all phones ring if someone rings the bell and you can communicate with the people outside.\n\nRequirements:\n* Raspberry Pi with installed Raspbian OS\n* optional PiFace\n* Soundcard\n* SD card\n\nPossibilities with DoorPi\n* Connection to an existing intercom (e.g. 3 push-buttons, microphone, speaker)\n* Triggering diffent actors (like door opener, light) by pushing a button on the phone (e.g. #)\n* Communication with an existing VoIP-server (e.g. FritzBox, Asterisk)\n* every push-button should dial a different phone number\n\nThe connection to the different actors can be realised with PiFace or a relais connected to the GPIOs.\n\nYou can install the project with the DoorPi.sh script (http://raspberrypi.roxxs.org/EPSPi/packs/DoorPI.sh)\n\nYou can find further information for installation and configuration in the DoorPi wiki: https://github.com/motom001/DoorPi/wiki",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/motom001/DoorPi",
    "keywords": "intercom,VoIP,doorstation,home automation,IoT",
    "license": "CC BY-NC 4.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "DoorPi",
    "package_url": "https://pypi.org/project/DoorPi/",
    "platform": "any",
    "project_url": "https://pypi.org/project/DoorPi/",
    "project_urls": {
      "Homepage": "https://github.com/motom001/DoorPi"
    },
    "release_url": "https://pypi.org/project/DoorPi/2.4.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "provide intercomstation to the doorstation by VoIP",
    "version": "2.4.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2255757,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb128682e213a9fb3fb2c5a6bd27c6d07d201629bc1f65a29f44cc7a5e988f94",
        "md5": "a77759971c3dd4a82cddac412ae5ee57",
        "sha256": "674b257c900ffea599031abef5546041e59bbe788da0c68f4af553034bda0741"
      },
      "downloads": -1,
      "filename": "DoorPi-2.4.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a77759971c3dd4a82cddac412ae5ee57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 64539,
      "upload_time": "2015-09-03T18:25:00",
      "upload_time_iso_8601": "2015-09-03T18:25:00.915641Z",
      "url": "https://files.pythonhosted.org/packages/eb/12/8682e213a9fb3fb2c5a6bd27c6d07d201629bc1f65a29f44cc7a5e988f94/DoorPi-2.4.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}