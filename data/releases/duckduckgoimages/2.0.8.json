{
  "info": {
    "author": "koke",
    "author_email": "jpobleteriquelme@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n ## DuckDuckGoImages\n\n## Instalation\n\nTo install run the following:\n\n```python\npip install DuckDuckGoImages\n```\n\n## Usage\n\nimport using the following:\n\n```python\nimport DuckDuckGoImages as ddg\n```\n\nand then you can search and download images from DuckDuckGo using:\n\n```python\nddg.download('kittens')\n```\n\nThe above command will search for the query phrase `kittens`, and then will try to download the list of image urls into the current folder.\n\nEach downloaded image will have a randomic UUIDv4 name.\n\n## Options\n\nWhen downloading images you can pass `download` the next list of parameters to achieve different results:\n\n- `folder`: The path where the downloaded images are saved. Default is current directory.\n- `max_urls`: If set to a number, then only that amount of images will be downloaded. Note that the available images to download could be less than `max_urls`. Default `None`, so all search results will try to be downloaded.\n- `thumbnails`: If set to `True`, the image thumbnails will be downloaded instead of the actual image. This should avoid broken links, but it will also download a smaller image in most cases. Default `None`.\n- `parallel`: If set to true, then N jobs will be created to download the list of images faster, the number of jobs is the number of cpu procesors on the machine. Default `False`.\n- `shuffle`: If set to true, the list of images will be shuffled randomly before download. Default `False`.\n- `remove_folder`: If set to true, then the folder where the images will be downloaded is deleted before the download. Default `False`.\n- `safe_search`: If set to true it will make a search with \"safe search\" enabled (Moderated value is the default on duckduckgo), a value of false will disable safe search entirely, use with caution. Default `True`.\n- `licence`: If set to a value the result search will only retrieve images that have the specified licence. Usable values are defined as constants inside the package, so for use you should do something like `ddg.download('kittens', licence=ddg.ALL)`, valid licence types are:\n    - ALL: retrieve all images, this is the default behaviour.\n    - CREATIVE_COMMONS: This will only retrieve images that have the Creative Commons licence.\n    - PUBLIC_DOMAIN: This will only retrieve images that are on the public domain.\n    - SHARE_AND_USE: This will only retrieve images that can be shared and used.\n    - SHARE_AND_USE_COMMECIALLY: This will only retrieve images that can be shared and used commercially. \n    - MODIFY_SHARE_AND_USE: This will only retrieve images that can be modified, shared and used.\n    - MODIFY_SHARE_AND_USE_COMMERCIALLY: This will only retrieve images that can be modified, shared and used commercially.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JorgePoblete/DuckDuckGoImages",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DuckDuckGoImages",
    "package_url": "https://pypi.org/project/DuckDuckGoImages/",
    "platform": null,
    "project_url": "https://pypi.org/project/DuckDuckGoImages/",
    "project_urls": {
      "Homepage": "https://github.com/JorgePoblete/DuckDuckGoImages"
    },
    "release_url": "https://pypi.org/project/DuckDuckGoImages/2.0.8/",
    "requires_dist": [
      "requests (>=2.24.0)",
      "joblib (>=0.16.0)",
      "Pillow (>=2.2.1)",
      "tqdm (>=4.62.3)",
      "pytest (>=3.7) ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Download images from DuckDuckGo",
    "version": "2.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14795474,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9e1f86b0fc2171792edefa9d53c4245555fd82ac8fecc2916a43007306bf521",
        "md5": "d5f7aab44509f27fdb9bba14cf1ee7a2",
        "sha256": "126a28794bc3548b8ede346ddcd72f93a75cff0316ee5f39d85a99d3f9aa11dc"
      },
      "downloads": -1,
      "filename": "DuckDuckGoImages-2.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d5f7aab44509f27fdb9bba14cf1ee7a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5089,
      "upload_time": "2022-08-18T01:23:35",
      "upload_time_iso_8601": "2022-08-18T01:23:35.970013Z",
      "url": "https://files.pythonhosted.org/packages/c9/e1/f86b0fc2171792edefa9d53c4245555fd82ac8fecc2916a43007306bf521/DuckDuckGoImages-2.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}