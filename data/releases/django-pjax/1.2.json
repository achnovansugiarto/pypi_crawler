{
  "info": {
    "author": "Jacob Kaplan-Moss",
    "author_email": "jacob@jacobian.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django-PJAX\n===========\n\nThis is a Django helper for `defunkt's jquery-pjax`__. \n\nDjango-PJAX requires Django 1.3.\n\nWhat's PJAX?\n------------\n\n__ https://github.com/defunkt/jquery-pjax\n\nPJAX is essentially AHAH__ (\"Asynchronous HTML and HTTP\"), except with real\npermalinks and a working back button. It lets you load just a portion of a\npage (so things are faster) while still maintaining the usability of real\nlinks.\n\n__ http://www.xfront.com/microformats/AHAH.html\n\nA demo makes more sense, so `check out the one defunkt put together`__\n\n__ http://pjax.heroku.com/\n\nUsage\n-----\n\nFirst, read about `how to use jQuery-PJAX`__ and pick one of the techniques there.\n\n__ https://github.com/defunkt/jquery-pjax\n\nNext, make sure the views you're PJAXing are using TemplateResponse__. You can't use Django-PJAX with a normal ``HttpResponse``; only ``TemplateResponse``. Decorate these views with the ``pjax`` decorator::\n\n    from djpjax import pjax\n    \n    @pjax()\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\n__ http://django.me/TemplateResponse\n\nAfter doing this, if the request is made via jQuery-PJAX, the ``@pjax()``\ndecorator will automatically swap out ``template.html`` for\n``template-pjax.html``. \n\nMore formally: if the request is a PJAX request, the template used in your\n``TemplateResponse`` will be replaced with one with ``-pjax`` before the file\nextension. So ``template.html`` becomes ``template-pjax.html``,\n``my.template.xml`` becomes ``my.template-pjax.xml``, etc. If there's no file\nextension, the template name will just be suffixed with ``-pjax``.\n\nYou can also manually pick a PJAX template by passing it as an argument to\nthe decorator::\n\n    from djpjax import pjax\n    \n    @pjax(\"pjax.html\")\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\nIf you'd like to use Django 1.3's class-based views instead, a PJAX Mixin class\nis provided as well. Simply use ``PJAXResponseMixin`` where you would normally have\nused ``TemplateResponseMixin``, and your ``template_name`` will be treated the same\nway as above. You can alternately provide a ``pjax_template_name`` class variable\nif you want a specific template used for PJAX responses::\n\n    from django.views.generic import View\n    from djpjax import PJAXResponseMixin\n\n    class MyView(PJAXResponseMixin, View):\n        template_name = \"template.html\"\n        pjax_template_name = \"pjax.html\"\n\n        def get(self, request):\n            return self.render_to_response({'my': 'context'})\n\nThat's it!\n\nUsing Template Extensions\n-------------------------\n\nIf the content in your ``template-pjax.html`` file is very similar to your \n``template.html`` an alternative method of operation is to use the decorator \n``pjaxtend``, as follows::\n\n    from djpjax import pjaxtend\n    \n    @pjaxtend\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\nThen, in your ``template.html`` file you can do the following::\n\n    {% extends parent %}\n    ...\n    ...\n\nNote that the template will extend ``base.html`` unless its a pjax request \nin which case it will extend ``pjax.html``.\n \nIf you want to define the parent for a standard http or pjax request, you can do \nso as follows::\n \n    from djpjax import pjaxtend\n    \n    @pjaxtend('someapp/base.html', 'my-pjax-extension.html')\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n \nUsing this approach you don't need to create many ``*-pjax.html`` files.\n\nIf you have a collision with the variable name ``parent`` you can specify the \ncontext variable to use as the third parameter to pjaxtexd, as follows::\n\n\tfrom djpjax import pjaxtend\n    \n    @pjaxtend('someapp/base.html', 'my-pjax-extension.html', 'my_parent')\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\nWhich would require the following in your template:\n\n    {% extends my_parent %}\n    ...\n    ...\n\n \nTesting\n-------\n\nTests are run using nosetests. To install::\n\n\tpip install nose\n\nAnd to run the tests::\n\n\tnosetests tests.py",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jacobian/django-pjax",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-pjax",
    "package_url": "https://pypi.org/project/django-pjax/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pjax/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/jacobian/django-pjax"
    },
    "release_url": "https://pypi.org/project/django-pjax/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django helper for jQuery-PJAX.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7745631,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0941657c478d40925779636b17d6a6741f0eee964dbd1fe0f7ae0c36b34250dc",
        "md5": "5c302844d02e27752557a918c296d8f8",
        "sha256": "f84863adeb11ab6f3e6874ccaf420a0ecc8b001c85ec7787d61896576e4c9a6c"
      },
      "downloads": -1,
      "filename": "django-pjax-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5c302844d02e27752557a918c296d8f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3733,
      "upload_time": "2012-03-14T15:06:09",
      "upload_time_iso_8601": "2012-03-14T15:06:09.382897Z",
      "url": "https://files.pythonhosted.org/packages/09/41/657c478d40925779636b17d6a6741f0eee964dbd1fe0f7ae0c36b34250dc/django-pjax-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}