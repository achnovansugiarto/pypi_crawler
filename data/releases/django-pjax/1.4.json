{
  "info": {
    "author": "Alexandre Vicenzi",
    "author_email": "vicenzi.alexandre@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "django-pjax |Build Status| |Version|\n====================================\n\nAn improvement of [Django-PJAX]: The Django helper for jQuery-PJAX.\n\nWhat’s PJAX?\n------------\n\nPJAX is essentially [AHAH] (“Asynchronous HTML and HTTP”), except with\nreal permalinks and a working back button. It lets you load just a\nportion of a page (so things are faster) while still maintaining the\nusability of real links.\n\nA demo makes more sense, so [check out the one defunkt put together].\n\nCredits\n-------\n\nThis project is an extension of [Django-PJAX] and all credits from the\noriginal version goes to [Jacob Kaplan-Moss].\n\nAbout\n-----\n\nThis project keeps the original structure, but add new features to it,\nand aims to keep django-pjax updated. Some goals are to keep this\nproject working with Python 2.7+ and 3.3+ and also Django 1.5+.\n\nFeel free to submit a PR and contribute to this project.\n\nCompatibility\n-------------\n\n-  Python 2.6+ or 3.2+\n-  PyPy or PyPy3\n-  CPython\n-  Django 1.3+\n\nNot all Django versions works with Python, PyPy or CPython. See the\nDjango docs to know more about supported versions.\n\nInstall\n-------\n\nJust run:\n\n``pip install django-pjax``\n\nUsage\n-----\n\nFirst, read about [how to use jQuery-PJAX][defunkt’s jquery-pjax] and\npick one of the techniques there.\n\nNext, make sure the views you’re PJAXing are using [TemplateResponse].\nYou can’t use Django-PJAX with a normal ``HttpResponse``, only\n``TemplateResponse``.\n\nPJAX decorator\n~~~~~~~~~~~~~~\n\nThe pjax decorator:\n\n.. code:: python\n\n    pjax(pjax_template=None, additional_templates=None, follow_redirects=False)\n\n``pjax_template`` (str): default template.\n\n``additional_templates`` (dict): additional templates for multiple\ncontainers.\n\n``follow_redirects`` (bool): if True, all django redirects will force a\npage reload, instead of placing the content in the pjax context.\n\nDecorate these views with the pjax decorator:\n\n.. code:: python\n\n    from djpjax import pjax\n\n    @pjax()\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\nAfter doing this, if the request is made via jQuery-PJAX, the\n``@pjax()`` decorator will automatically swap out ``template.html`` for\n``template-pjax.html``.\n\nMore formally: if the request is a PJAX request, the template used in\nyour ``TemplateResponse`` will be replaced with one with ``-pjax``\nbefore the file extension. So ``template.html`` becomes\n``template-pjax.html``, ``my.template.xml`` becomes\n``my.template-pjax.xml``, etc. If there’s no file extension, the\ntemplate name will just be suffixed with ``-pjax``.\n\nYou can also manually pick a PJAX template by passing it as an argument\nto the decorator:\n\n.. code:: python\n\n    from djpjax import pjax\n\n    @pjax(\"pjax.html\")\n    def my_view(request):\n        return TemplateResponse(request, \"template.html\", {'my': 'context'})\n\nYou can also pick a PJAX template for a PJAX container and use multiple\ndecorators to define the template for multiple cont\n\n.. |Build Status| image:: https://travis-ci.org/eventials/django-pjax.svg?branch=master\n   :target: https://travis-ci.org/eventials/django-pjax\n.. |Version| image:: https://img.shields.io/pypi/v/django-pjax.svg\n   :target: https://pypi.python.org/pypi/django-pjax",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eventials/django-pjax",
    "keywords": "django,PJAX,ajax,jQuery",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-pjax",
    "package_url": "https://pypi.org/project/django-pjax/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pjax/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/eventials/django-pjax"
    },
    "release_url": "https://pypi.org/project/django-pjax/1.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django-PJAX: The Django helper for jQuery-PJAX.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7745631,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df08f662091f67609087f7f6c8b98e3b344279b3d01fd458d655a858193d9b01",
        "md5": "daaa5f7f1d461b5bf9d8b8694bb03237",
        "sha256": "2c988a77dd8d92a19950e822a3cfb54f42b08b57325720222c53c66dedb5558b"
      },
      "downloads": -1,
      "filename": "django-pjax-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "daaa5f7f1d461b5bf9d8b8694bb03237",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3859,
      "upload_time": "2015-09-28T18:51:29",
      "upload_time_iso_8601": "2015-09-28T18:51:29.056258Z",
      "url": "https://files.pythonhosted.org/packages/df/08/f662091f67609087f7f6c8b98e3b344279b3d01fd458d655a858193d9b01/django-pjax-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}