{
  "info": {
    "author": "Execut3",
    "author_email": "execut3.binarycodes@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# django-token-manager\nA Django Rest Token Authentication system like telegram which will be using JWT as core with extended features. \n\n### Features\n\n- Validation of tokens first with jwt algorithms to filter not valid token formats, before hitting database.\n- Able to see list of active tokens of each user_id\n- Able to delete each token if needed\n- Able to remove all other tokens of each users and keep just existing one\n- Fetch useful info for each token request like os, ip and ...\n\n### Why django-token-manager\n**Reason** to use this module is that by default if you are using jwt system for\ntoken authorization of client, you don't have control on existing tokens.\nOf course you can set a expire date for each token. But if the expiration date isn't arrived yet,\nyou can't delete this token. \nWhat happens if you want to delete all sessions of a user. With jwt you don't have control on it, and you \nshould wait for expiration of token to be arrived.\n\nThe purpose of this package, is to give more control on jwt tokens. For this there will be a\nlookup_id in payload of each jwt token. First token with be validated with jwt algorithms.\nThen payload lookup_id will be checked on database and if available will give access.\nAnd with this solution no need to query on a big string (session string) on database, \nif the jwt token is valid, will just query on a db_index ed field `lookup_id`.\n\n\n### Requirements\n\nTo use this package following needed. if not provided will be installed automatically.\n```\nDjango>=2.0\ndjangorestframework>=3.0\ndjango-jalali>=3.1.0\ndjango-rest-captcha>=0.1.0\n```\n\n### Installation\n\n**Note:** This package is well tested on `django>=2.0`. But if you are using older versions can be\nused with minor changes in structure.\n\ninstall using pip:\n```\n$ pip install django-token-manager\n```\n\n### Usage\nNow register app in your `settings.py` file.\n\n```\nINSTALLED_APPS = [\n    \"token_manager\",\n]\n```\n\n\nIn your `settings.py`, add `JSONWebTokenAuthentication` to Django REST framework's `DEFAULT_AUTHENTICATION_CLASSES`.\n```\nREST_FRAMEWORK = {\n    ...,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'token_manager.authentication.JSONWebTokenAuthentication',\n        ...\n    ),\n}\n```\n\nThis package uses `user-agents` package for fetching user agent info like device OS, IP address and ...\nSo you should register below to be able to use it:\n```\nMIDDLEWARE = [\n    ...,\n    'django_user_agents.middleware.UserAgentMiddleware',\n]\n```\n\nRemember to apply migration files in database:\n```\npython manage.py migrate\n```\n\nTo get token:\n```bash\ncurl -X POST -d \"username=admin&password=admin\" \"http://localhost:8000/token/get/\"\n```\nVerify token:\n```bash\ncurl -H \"Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb29rdXBfaWQiOjUsInVzZXJfaWQiOjEsInVzZXJuYW1lIjoiYWRtaW4iLCJleHAiOjE1OTg1MjY4MjEsImVtYWlsIjoiIn0.l6JyGgAs_hBRejX1BpvA7PjubM2m89lV35PTVUBnV_I\" \"http://localhost:8000/token/manage/\"\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Execut3/django-token-manager",
    "keywords": "",
    "license": "GPT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-token-manager",
    "package_url": "https://pypi.org/project/django-token-manager/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-token-manager/",
    "project_urls": {
      "Homepage": "https://github.com/Execut3/django-token-manager"
    },
    "release_url": "https://pypi.org/project/django-token-manager/1.1.0/",
    "requires_dist": [
      "Django (>=2.0)",
      "djangorestframework (>=3.0)",
      "django-jalali (>=3.1.0)",
      "django-rest-captcha (==0.1.0)",
      "django-user-agents (>=0.3.2)"
    ],
    "requires_python": "",
    "summary": "A Django Rest Token Authentication system like telegram which will be using JWT as core with extended features.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8088262,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "021c16d397473bdcf9f47271c3ea507f18b6182ec7feb7a6ff7f7695a0aa60dd",
        "md5": "25f20a40eb82652cb76d5842edecd5de",
        "sha256": "3cc66bd220ba868bec634424e5f34756fc53e74eda265c7ccf977c45ec78e873"
      },
      "downloads": -1,
      "filename": "django_token_manager-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25f20a40eb82652cb76d5842edecd5de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27283,
      "upload_time": "2020-08-27T11:40:34",
      "upload_time_iso_8601": "2020-08-27T11:40:34.744004Z",
      "url": "https://files.pythonhosted.org/packages/02/1c/16d397473bdcf9f47271c3ea507f18b6182ec7feb7a6ff7f7695a0aa60dd/django_token_manager-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66f3b2bde0cb9a10af921785e67814e6128c23200a6d83eeb1c5680fe9618b6a",
        "md5": "93ff9e050bb7fb4ceff875b29cdcb092",
        "sha256": "5a33a4ca953226722952cb7e445ea8b8eb5ac8019d2512c6d299c16dda849ddd"
      },
      "downloads": -1,
      "filename": "django-token-manager-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "93ff9e050bb7fb4ceff875b29cdcb092",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11770,
      "upload_time": "2020-08-27T11:40:36",
      "upload_time_iso_8601": "2020-08-27T11:40:36.235443Z",
      "url": "https://files.pythonhosted.org/packages/66/f3/b2bde0cb9a10af921785e67814e6128c23200a6d83eeb1c5680fe9618b6a/django-token-manager-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}