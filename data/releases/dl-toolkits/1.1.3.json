{
  "info": {
    "author": "Yuho Jeong",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1 align=\"center\">DL Toolkits</h1> <div align=\"center\"> <strong> :man_technologist:&nbsp; Analytical tools for deep learning experiments &nbsp;:woman_technologist: </strong></div><br/>\n<div align=\"center\"><img src=\"https://img.shields.io/badge/version-1.1-green.svg\">&nbsp;<img src=\"https://img.shields.io/badge/LICENSE-MIT License-orange.svg\"></div><br/>\n\nWhenever I analyzed the results of the DL experiment, I had to re-implement the analysis function every time. So, I implement frequently used functions in this repository. New features continue to be implemented, and simple examples of function usages can be found in the `examples` directory.\n\n## Installation\n\nYou can install the package with `pip` command. Python>=3 are supported.\n\n```\npip install dl-toolkits\n```\n\nYou can check the version of the package using the following commands.\n\n```python\nimport toolkits\nprint(toolkits.__version__)\n```\n\n## Modules\n\n### Visualization\n\n- [`viz.tsne`](https://github.com/yuhodots/toolkits/tree/main/examples/viz#tsne): t-SNE plot\n\n### Clustering quality\n\n- [`cluster.sse`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#sse): Sum of squared error(SSE) [^1]\n- [`cluster.batch_sse`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#batch_sse): Sum of squared error(SSE) for batch input\n- [`cluster.nsse`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#nsse): SSE normalized by the squared distance to the nearest interfering centroid(nSSE) [^1]\n- [`cluster.batch_nsse`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#batch_nsse): SSE normalized by the squared distance to the nearest interfering centroid(nSSE) for batch input\n- [`cluster.nearc`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#nearc): Top N nearest interfering centroid\n- [`cluster.rfc`](https://github.com/yuhodots/toolkits/tree/main/examples/cluster#rfc): Feature space clustering quality(R_fc) [^2]\n\n### Linear algebra\n\n- [`linalg.get_singular_values`](https://github.com/yuhodots/toolkits/tree/main/examples/linalg#get_singular_values): Get singular values per class\n- [`linalg.get_sum_of_singular_values`](https://github.com/yuhodots/toolkits/tree/main/examples/linalg#get_sum_of_singular_values): Get sum of singular values per class\n- [`linalg.get_average_sum_of_singular_values`](https://github.com/yuhodots/toolkits/tree/main/examples/linalg#get_average_sum_of_singular_values): Get average of sum of singular values per class [^3]\n\n### Pretty print\n\n- [`pprint.pred_summary`](https://github.com/yuhodots/toolkits/tree/main/examples/pprint#pred_summary): Simple print for predictions and true labels\n\n### Log parser\n\n- [`parse.between_lines`](https://github.com/yuhodots/toolkits/tree/main/examples/parse#between_lines): Extract the log between the two input sentences\n- [`parse.between_lines_on_file`](https://github.com/yuhodots/toolkits/tree/main/examples/parse#between_lines_on_file): Extract the log between the two input sentences on the target file\n- [`parse.between_lines_on_dir`](https://github.com/yuhodots/toolkits/tree/main/examples/parse#between_lines_on_dir): Extract the log between the two input sentences on the target directory\n\n### PyTorch helper function\n\n- [`torch_helper.freeze_selected_param`](https://github.com/yuhodots/toolkits/tree/main/examples/torch_helper#freeze_selected_param): Freeze the weights with the selected name\n- [`torch_helper.get_important_param_idx`](https://github.com/yuhodots/toolkits/tree/main/examples/torch_helper#get_important_param_idx): Get important parameters indices[^4]\n\n## References\n\n[^1]: Yoon, Sung Whan, et al. \"Xtarnet: Learning to extract task-adaptive representation for incremental few-shot learning.\" *International Conference on Machine Learning*. PMLR, 2020.\n[^2]: Goldblum, Micah, et al. \"Unraveling meta-learning: Understanding feature representations for few-shot tasks.\" *International Conference on Machine Learning*. PMLR, 2020.\n[^3]: Verma, Vikas, et al. \"Manifold mixup: Better representations by interpolating hidden states.\" *International Conference on Machine Learning*. PMLR, 2019.\n[^4]: Mazumder, Pratik, Pravendra Singh, and Piyush Rai. \"Few-Shot Lifelong Learning.\" *Proceedings of the AAAI Conference on Artificial Intelligence*. Vol. 35. No. 3. 2021.\n\nPedregosa, Fabian, et al. \"Scikit-learn: Machine learning in Python.\" *the Journal of machine Learning research* 12 (2011): 2825-2830.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yuhodots/toolkits",
    "keywords": "dl,toolkits",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dl-toolkits",
    "package_url": "https://pypi.org/project/dl-toolkits/",
    "platform": null,
    "project_url": "https://pypi.org/project/dl-toolkits/",
    "project_urls": {
      "Homepage": "https://github.com/yuhodots/toolkits"
    },
    "release_url": "https://pypi.org/project/dl-toolkits/1.1.3/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Deep Learning Analysis Toolkits",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13999431,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b238fa8047f7b0e6cb57d3f042fe60a0939cc4533ba6baef8be9576bced1709",
        "md5": "ec0dabf8d711f544afcdb764d12793bf",
        "sha256": "35de28f881c900577adf12f2cb48cafa33c1d6e725065bdca1d38d2345f19635"
      },
      "downloads": -1,
      "filename": "dl_toolkits-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec0dabf8d711f544afcdb764d12793bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 15716,
      "upload_time": "2022-06-01T11:46:39",
      "upload_time_iso_8601": "2022-06-01T11:46:39.045255Z",
      "url": "https://files.pythonhosted.org/packages/7b/23/8fa8047f7b0e6cb57d3f042fe60a0939cc4533ba6baef8be9576bced1709/dl_toolkits-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}