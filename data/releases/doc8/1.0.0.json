{
  "info": {
    "author": "OpenStack",
    "author_email": "openstack-discuss@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/doc8\n   :alt: PyPI\n   :target: https://pypi.org/project/doc8/\n\n.. image:: https://github.com/PyCQA/doc8/workflows/tox/badge.svg\n   :target: https://github.com/PyCQA/doc8/actions\n   :alt: CI\n\n.. image:: https://img.shields.io/pypi/l/doc8\n   :alt: PyPI - License\n\n.. image:: https://img.shields.io/github/last-commit/pycqa/doc8\n   :alt: GitHub last commit\n\n====\ndoc8\n====\n\n*doc8* is an *opinionated* style checker for rst__ (with basic support for\nplain text) styles of documentation.\n\n__ http://docutils.sourceforge.net/docs/ref/rst/introduction.html\n\nQuick start\n-----------\n\n::\n\n    pip install doc8\n\nTo run *doc8*, just invoke it against any documentation directory::\n\n    $ doc8 cool-project/docs\n\nUsage\n-----\n\n::\n\n    $ doc8  -h\n\n    usage: doc8 [-h] [--config path] [--allow-long-titles] [--ignore code]\n                [--no-sphinx] [--ignore-path path] [--ignore-path-errors path]\n                [--default-extension extension] [--file-encoding encoding]\n                [--max-line-length int] [-e extension] [-v] [--version]\n                [path [path ...]]\n\n    Check documentation for simple style requirements.\n\n    What is checked:\n        - invalid RST format - D000\n        - lines should not be longer than 79 characters - D001\n          - RST exception: line with no whitespace except in the beginning\n          - RST exception: lines with http or https urls\n          - RST exception: literal blocks\n          - RST exception: rst target directives\n        - no trailing whitespace - D002\n        - no tabulation for indentation - D003\n        - no carriage returns (use unix newlines) - D004\n        - no newline at end of file - D005\n\n    positional arguments:\n      path                  Path to scan for doc files (default: current\n                            directory).\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --config path         user config file location (default: .config/doc8.ini, doc8.ini, tox.ini,\n                            pep8.ini, setup.cfg).\n      --allow-long-titles   allow long section titles (default: false).\n      --ignore code         ignore the given error code(s).\n      --no-sphinx           do not ignore sphinx specific false positives.\n      --ignore-path path    ignore the given directory or file (globs are\n                            supported).\n      --ignore-path-errors path\n                            ignore the given specific errors in the provided file.\n      --default-extension extension\n                            default file extension to use when a file is found\n                            without a file extension.\n      --file-encoding encoding\n                            set input files text encoding\n      --max-line-length int\n                            maximum allowed line length (default: 79).\n      -e extension, --extension extension\n                            check file extensions of the given type (default:\n                            .rst, .txt).\n      -q, --quiet           only print violations\n      -v, --verbose         run in verbose mode.\n      --version             show the version and exit.\n\nINI file usage\n~~~~~~~~~~~~~~\n\nInstead of using the CLI for options the following files will also be examined\nfor ``[doc8]`` sections that can also provide the same set of options. If\nthe ``--config path`` option is used, these files will **not** be scanned for\nthe current working directory and that configuration path will be used\ninstead.\n\n* ``$CWD/doc8.ini``\n* ``$CWD/.config/doc8.ini``\n* ``$CWD/tox.ini``\n* ``$CWD/pep8.ini``\n* ``$CWD/setup.cfg``\n* ``$CWD/pyproject.toml``\n\nAn example section that can be placed into one of these files::\n\n    [doc8]\n\n    ignore-path=/tmp/stuff,/tmp/other_stuff\n    max-line-length=99\n    verbose=1\n    ignore-path-errors=/tmp/other_thing.rst;D001;D002\n\n**Note:** The option names are the same as the command line ones (with the\nonly variation of this being the ``no-sphinx`` option which from the\nconfiguration file will be ``sphinx`` instead).\n\nOption conflict resolution\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen the same option is passed on the command line and also via configuration\nfiles the following strategies are applied to resolve these types of conflicts.\n\n======================   ===========  ========\nOption                   Overrides    Merges\n======================   ===========  ========\n``allow-long-titles``    Yes          No\n``ignore-path-errors``   No           Yes\n``default-extension``    Yes          No\n``extension``            No           Yes\n``ignore-path``          No           Yes\n``ignore``               No           Yes\n``max-line-length``      Yes          No\n``file-encoding``        Yes          No\n``sphinx``               Yes          No\n======================   ===========  ========\n\n**Note:** In the above table the configuration file option when specified as\n*overrides* will replace the same option given via the command line. When\n*merges* is stated then the option will be combined with the command line\noption (for example by becoming a larger list or set of values that contains\nthe values passed on the command line *and* the values passed via\nconfiguration).\n\n\nAPI\n---\n\nIt is also possible to use *doc8* programmatically. To call *doc8* from a\nPython project, use::\n\n    from doc8 import doc8\n\n    result = doc8(allow_long_titles=True, max_line_length=99)\n\nThe returned ``result`` will have the following attributes and methods:\n\n* ``result.files_selected`` - number of files selected\n* ``result.files_ignored`` - number of files ignored\n* ``result.error_counts`` - ``dict`` of ``{check_name: error_count}``\n* ``result.total_errors`` - total number of errors found\n* ``result.errors`` - list of\n  ``(check_name, filename, line_num, code, message)`` tuples\n* ``result.report()`` - returns a human-readable report as a string\n\nThe ``doc8`` method accepts the same arguments as the executable. Simply\nreplace hyphens with underscores.\n\n**Note:** Calling ``doc8`` in this way will not write to stdout, so the\n``quiet`` and ``verbose`` options are ignored.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pycqa/doc8",
    "keywords": "doc8,rst,linter",
    "license": "Apache 2.0",
    "maintainer": "PyCQA",
    "maintainer_email": "code-quality@python.org",
    "name": "doc8",
    "package_url": "https://pypi.org/project/doc8/",
    "platform": null,
    "project_url": "https://pypi.org/project/doc8/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pycqa/doc8/issues",
      "CI": "https://github.com/pycqa/doc8/actions",
      "Discussions": "https://github.com/pycqa/doc8/discussions",
      "Documentation": "https://doc8.readthedocs.io",
      "Homepage": "https://github.com/pycqa/doc8",
      "Release Management": "https://github.com/pycqa/doc8/releases"
    },
    "release_url": "https://pypi.org/project/doc8/1.0.0/",
    "requires_dist": [
      "docutils (<0.21,>=0.19)",
      "restructuredtext-lint (>=0.7)",
      "stevedore",
      "Pygments",
      "tomli ; python_version < \"3.11\""
    ],
    "requires_python": ">=3.7",
    "summary": "Style checker for Sphinx (or other) RST documentation",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16205447,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d27c502200007fe340bb2ccc64b4d739d4b1235bdd7b6319ba659a965ca81a3",
        "md5": "30cb4c7487fa0cdc64f123872851e7c7",
        "sha256": "0c6c3104fa7f7bb2103589c0a8e272c105fdff3ddd1ef4808e51b2782185e9ab"
      },
      "downloads": -1,
      "filename": "doc8-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "30cb4c7487fa0cdc64f123872851e7c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25008,
      "upload_time": "2022-07-27T16:45:37",
      "upload_time_iso_8601": "2022-07-27T16:45:37.669234Z",
      "url": "https://files.pythonhosted.org/packages/4d/27/c502200007fe340bb2ccc64b4d739d4b1235bdd7b6319ba659a965ca81a3/doc8-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "758b6df640e943a1334bebaf96e0017911763d882748e8b8fd748f109c8c3279",
        "md5": "7ff8578cbdbefebbf48abd6a0c25a2fe",
        "sha256": "1e999a14fe415ea96d89d5053c790d01061f19b6737706b817d1579c2a07cc16"
      },
      "downloads": -1,
      "filename": "doc8-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7ff8578cbdbefebbf48abd6a0c25a2fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26058,
      "upload_time": "2022-07-27T16:45:39",
      "upload_time_iso_8601": "2022-07-27T16:45:39.439427Z",
      "url": "https://files.pythonhosted.org/packages/75/8b/6df640e943a1334bebaf96e0017911763d882748e8b8fd748f109c8c3279/doc8-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}