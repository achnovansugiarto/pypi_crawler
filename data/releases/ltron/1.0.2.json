{
  "info": {
    "author": "Aaron Walsman",
    "author_email": "aaronwalsman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![LTRON](assets/ltron_logo.png?raw=true \"LTRON\")\n\n# Interactive Lego Machine Learning Environment\n\n## Installation:\nTo install LTRON run:\n```\npip install ltron\nltron_asset_installer\n```\n\nThe first line will download LTRON from pypi and install it in your python path. The second line will download and install a set of models and part files that are necessary for LTRON.  By default, these assets are installed to `~/.cache/ltron` and `~/.cache/splendor`.  This will take around 3GB of space.\n\nRelease Versions:\n - 0.0.X : [Embodied AI Workshop, CVPR 2021](https://embodied-ai.org/papers/LegoTron.pdf).\n - 1.0.X : ECCV 2022\n\nThe code in this repo is under active development and the API/interfaces are not stable.  The pypi versions listed above belong to different publications.  The github branch `v1.0.0` corresponds to the ECCV 2022 version.\n\n## Testing Things Out:\nOnce installed you should be able to run `ltron_viewer` to interactively inspect a lego model.  For example from the top directory you can run:\n\n`ltron_viewer \"~/.cache/ltron/collections/omr/ldraw/8661-1 - Carbon Star.mpd\"`\n\nOr:\n\n`ltron_viewer \"~/.cache/ltron/collections/omr/ldraw/75050-1 - B-Wing.mpd\"`\n\nOr:\n\n`ltron_viewer \"~/.cache/ltron/collections/omr/ldraw/75060 - Slave I.mpd\"`\n\nYou can interact with the model by clicking on it and dragging the mouse around.  LMB - Orbit.  RMB - Pan.  Scroll - Zoom.  There are a few keys you can press `h` to hide the brick you are hovering over, `v` to show all hidden bricks and `m` to switch back and forth between mask mode and regular rendering.  See other options in `ltron/visualization/ltron_viewer.py`.\n\n## Requirements:\n```\ngym\nnumpy\npyquaternion\ngdown\ntqdm\nsplendor-render\n```\nThe splendor-render package only works on Ubuntu at the moment, and requires OpenGL 4.6.  As long as you have a modern GPU with recent drivers you should be fine.\n\nYou may need to install freeglut:\n```\nsudo apt-get install freeglut3-dev\n```\n\n## File Formats\nLTRON uses the [LDraw file formats](https://www.ldraw.org/article/218) (.dat, .ldr, .mpd) to describe bricks and models.  We convert all bricks to obj files for use in splendor-render.  These are installed to `~/.cache/splendor/ltron_assets_low` or `~/.cache/splendor/ltron_assets_high`.\n\nThe Open Model Repository files are installed to `~/.cache/ltron/collections/omr/ldraw`.\n\n### Instructions for building objs from scratch\nWe bundle brick meshes and install them with `ltron_install_assets` but it is also possible (but time-consuming) to build them from scratch. First open blender and make sure the [Import LDraw Addon](https://github.com/TobyLobster/ImportLDraw) is installed.  Then go into the script console and run:\n```\nimport sys\nsys.path.append('path/to/ltron')\nimport ltron.blender.export_obj as export_obj\nltron.export_all(**export_obj.medium_settings)\n```\n\n## Further Notes:\nAll 3D units are in [LDraw LDUs](http://www.ldraw.org/article/218.html).  One LDU is approximately 0.4 mm, so the physical extents of these scenes can be quite large.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aaronwalsman/ltron",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ltron",
    "package_url": "https://pypi.org/project/ltron/",
    "platform": null,
    "project_url": "https://pypi.org/project/ltron/",
    "project_urls": {
      "Homepage": "https://github.com/aaronwalsman/ltron"
    },
    "release_url": "https://pypi.org/project/ltron/1.0.2/",
    "requires_dist": [
      "gym (==0.17.3)",
      "numpy",
      "scipy",
      "pyquaternion",
      "gdown",
      "tqdm",
      "splendor-render"
    ],
    "requires_python": "",
    "summary": "LEGO interactive machine learning environment.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14592111,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "379c2350baa404e1995f3ecd4c491c25ee3f05541a2d45d790011a0fd9f8f431",
        "md5": "c9c2a06e7b5198b9d7b8838a89dd38bd",
        "sha256": "49623d61ef69414ef88603b8e2f14cc4aa2a2249cbece5cf52f7dd96d002073b"
      },
      "downloads": -1,
      "filename": "ltron-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9c2a06e7b5198b9d7b8838a89dd38bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 210435,
      "upload_time": "2022-07-19T02:43:41",
      "upload_time_iso_8601": "2022-07-19T02:43:41.810029Z",
      "url": "https://files.pythonhosted.org/packages/37/9c/2350baa404e1995f3ecd4c491c25ee3f05541a2d45d790011a0fd9f8f431/ltron-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d72597d2ec654645acf2a18dfdce7527966169b0258856e1d369f0a4543bb45",
        "md5": "b75176a7fbd086f3b387ba2cf070cd9b",
        "sha256": "9ad5803c60e14a2a15d985008660801f58d72b02c7eb8183d57484f84d9ebc9b"
      },
      "downloads": -1,
      "filename": "ltron-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b75176a7fbd086f3b387ba2cf070cd9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 164597,
      "upload_time": "2022-07-19T02:43:43",
      "upload_time_iso_8601": "2022-07-19T02:43:43.705870Z",
      "url": "https://files.pythonhosted.org/packages/4d/72/597d2ec654645acf2a18dfdce7527966169b0258856e1d369f0a4543bb45/ltron-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}