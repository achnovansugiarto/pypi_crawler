{
  "info": {
    "author": "starsflower",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pyslash\nPyslash is a wrapper around [discord-py-slash-command](https://github.com/eunwoo1104/discord-py-slash-command), that makes command creation more natural.\n\nThe examples provided are based of the examples from the original repository.\n\n## Quick startup\nFirstly you must install the package, as explained [here](#installation).\n\nA simple setup using `slash` and adding a basic command.\n```python\nimport discord\nfrom discord.ext import commands\nfrom pyslash import SlashCommand, SlashContext\n\nbot = commands.Bot(command_prefix=\"!\", intents=discord.Intents.all())\ns = SlashCommand(bot)\n\n@s.slash(name=\"test\")\nasync def _test(ctx: SlashContext, arg0: str):\n    embed = discord.Embed(title=\"embed test\")\n    await ctx.send(content=arg0, embeds=[embed])\n\nbot.run(\"discord_token\")\n```\n*As of `1.1.0`, you no longer need to import `slash` from `pyslash` and provide the instance as the first variable, as pyslash now has a subclass of `SlashCommand` that does this for you.*\n\nConverters are automatically handled, for example\n```python\n@s.slash(name=\"test\")\nasync def _test(ctx: SlashContext, member: discord.Member):\n    await ctx.send(f\"*taps mic* testing, {member.mention}\")\n```\n\nAnd names don't have to be given\n```python\n@s.slash()\nasync def foo(ctx: SlashContext, member: discord.Member):\n    # This command will automatically be called 'foo'\n    await ctx.send(f\"Hello, {member.mention}\")\n```\n\n### Descriptions\n\nBy default, each argument and command has the description `No description`, but that can be changed by providing a docstring. Docstrings are supported as provided by [docstring-parser](https://pypi.org/project/docstring-parser/) &mdash; *at time of writing, that is [ReST](https://www.python.org/dev/peps/pep-0287/), [Google](https://google.github.io/styleguide/pyguide.html), and [Numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html).*\n```python\nfrom typing import Tuple, Literal\n\n# ...\n\n@s.slash()\nasync def foo(ctx: SlashContext, member: discord.Member):\n    \"\"\"\n    My command description here!\n\n    :param member: my description here\n    \"\"\"\n    # This command will automatically be called 'foo', and have the description\n    # \"My command description here!\", and the argument `member` will have the\n    # description \"my description here\".\n    await ctx.send(f\"Hello, {member.mention}\")\n```\n\nIt's also possible to pass the command description through the decorator as follows, although that's not recommended (and will override any docstring provided description):\n```python\n@s.slash(description=\"My description!\")\nasync def command(ctx):\n    pass\n```\n\n## Advanced usage\nThe same usage applies for cogs, but a different function is used.\n\n```python\n# bot.py\nfrom discord.ext import commands\nfrom pyslash import SlashCommand\n\nbot = commands.Bot(command_prefix=\"prefix\")\nslash = SlashCommand(bot, override_type = True)\n\nbot.load_extension(\"cog\")\nbot.run(\"TOKEN\")\n\n# cog.py\nimport discord\nfrom discord.ext import commands\nfrom pyslash import SlashContext, slash_cog\n\nclass Slash(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n\n    @slash_cog(name=\"test\")\n    async def _test(self, ctx: SlashContext):\n        await ctx.send(\"Hey there folks\")\n\ndef setup(bot):\n    bot.add_cog(Slash(bot))\n```\n\n## Installation\nTo install from pip, run\n```\npip install dpyslash\n```\n\nTo install from source, clone the repository and then build:\n```\ngit clone https://github.com/starsflower/discordpy-slash-commands.git\ncd discordpy-slash-commands\npython setup.py install\n```\n\n## Tests\nTo run basic tests, run\n```\npython -m tests/test\n```\n\nTo run the test bot (that requires `BOT_TOKEN` in the environment variables), and a further pip requirement of `python-dotenv`\n```\npython -m tests/test_bot\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/starsflower/discordpy-slash-commands",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpyslash",
    "package_url": "https://pypi.org/project/dpyslash/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpyslash/",
    "project_urls": {
      "Homepage": "https://github.com/starsflower/discordpy-slash-commands"
    },
    "release_url": "https://pypi.org/project/dpyslash/1.2.0/",
    "requires_dist": [
      "discord.py (==1.6.*)",
      "discord-py-slash-command (==1.1.*)",
      "docstring-parser (==0.7.*)"
    ],
    "requires_python": "",
    "summary": "Improves slash commands for Python",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11929123,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28bb3f3f8db42b5b56905f1835d4f33dedd028513ab98dc82c80116d41b52b24",
        "md5": "73fa4efb34b9248a7d03b716f1d29e33",
        "sha256": "bea709abaa4712bfdf36850e15f3d79b8aff8af384e8226530ab9ba4d8a302c9"
      },
      "downloads": -1,
      "filename": "dpyslash-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73fa4efb34b9248a7d03b716f1d29e33",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9023,
      "upload_time": "2021-05-09T23:11:58",
      "upload_time_iso_8601": "2021-05-09T23:11:58.370395Z",
      "url": "https://files.pythonhosted.org/packages/28/bb/3f3f8db42b5b56905f1835d4f33dedd028513ab98dc82c80116d41b52b24/dpyslash-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50edf83ce40b6e9c29a5e9bd30a78f3350047e560d381bd3eb37c9d6cb3e0cdd",
        "md5": "254dcabf24cbff759a857b7df1540e4a",
        "sha256": "65dca75d12f5a6680317f2f444430f7434ce3aa0518621d62beb6bc63a931702"
      },
      "downloads": -1,
      "filename": "dpyslash-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "254dcabf24cbff759a857b7df1540e4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7550,
      "upload_time": "2021-05-09T23:11:59",
      "upload_time_iso_8601": "2021-05-09T23:11:59.277614Z",
      "url": "https://files.pythonhosted.org/packages/50/ed/f83ce40b6e9c29a5e9bd30a78f3350047e560d381bd3eb37c9d6cb3e0cdd/dpyslash-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}