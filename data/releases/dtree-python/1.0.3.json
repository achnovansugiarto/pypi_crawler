{
  "info": {
    "author": "ZouYJ",
    "author_email": "boyzouyj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Flow-based process just got Pythonic\n===============================================================================\n\n**dtree** is a library for processing flow-based logical system with complicated\nchain of if-else blocks just like handling a flowchart.\n\nExample\n----------------------------------------------------------------------------\n\nHere is a quick example to get a feeling of **dtree**. Given information of a student like\n```\nstudent = {\n    'age': 15,\n    'interest': 'reading',\n    'gender': 'female',\n}\n```\nfigure out what gift to give with the following logics:\n```\n+++root:\n|      +++age < 12:\n|      |      +++interest = sports:\n|      |      |      ---gender = female --> give note\n|      |      |      ---ELSE --> give football\n|      |      ---ELSE --> give book\n|      +++age >= 15:\n|      |      ---interest = writing --> give note\n|      |      ---ELSE --> give book\n|      +++ELSE:\n|      |      ---gender = male --> give football\n|      |      ---ELSE --> give book\n```\n\n```python\nfrom dtree import *\n\nstudent = {\n    'age': 15,\n    'interest': 'reading',\n    'gender': 'female',\n}\n\nage = ValueGetter(\"age\", lambda student: student['age'])\ninterest = ValueGetter(\"interest\", lambda student: student['interest'])\ngender = ValueGetter(\"gender\", lambda student: student['gender'])\n\nis_male = gender.eq(\"male\")\nis_female = gender.eq(\"female\")\n\n\ndef give(item):\n    print(\"give %s\" % item)\n\n\ngive_book = ToAction(lambda student: give(\"book\"), \"give book\")\ngive_football = ToAction(lambda student: give(\"football\"), \"give football\")\ngive_note = ToAction(lambda student: give(\"note\"), \"give note\")\n\nrule = DTree(Node(\n    (age.lt(12), Node(\n        (interest.eq(\"sports\"), Node(\n            (is_female, give_note),\n            (else_, give_football),\n        )),\n        (else_, give_book),\n    )),\n    (age.ge(15), Node(\n        (interest.eq(\"writing\"), give_note),\n        (else_, give_book),\n    )),\n    (else_, Node(\n        (is_male, give_football),\n        (else_, give_book),\n    )),\n))\n\nrule.run(student)  # give book\n```\n\nInstallation\n-------------------------------------------------------------------------------\n\nUse `pip <http://pip-installer.org>`_ or easy_install::\n\n    pip install dtree-python\n\nAlternatively, you can just drop ``dtree.py`` file into your projectâ€”it is\nself-contained.\n\n- **dtree** is tested with Python 2.6, 2.7, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7 and PyPy.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/boy-zyj/dtree-python",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtree-python",
    "package_url": "https://pypi.org/project/dtree-python/",
    "platform": "any",
    "project_url": "https://pypi.org/project/dtree-python/",
    "project_urls": {
      "Homepage": "https://github.com/boy-zyj/dtree-python"
    },
    "release_url": "https://pypi.org/project/dtree-python/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a little flow-based process engine implementation",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7202568,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e2dbb1e729d7861463dee6bc47d98998dee623863d2833271cf7b1860ce4160",
        "md5": "3b1e10a2c054d41801a4ce1c0efb2d1d",
        "sha256": "9f1ebf557b1600f88f80f5c98d990fa082dff897529f77358d99c259dc542335"
      },
      "downloads": -1,
      "filename": "dtree_python-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b1e10a2c054d41801a4ce1c0efb2d1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6013,
      "upload_time": "2020-01-07T05:56:21",
      "upload_time_iso_8601": "2020-01-07T05:56:21.630085Z",
      "url": "https://files.pythonhosted.org/packages/8e/2d/bb1e729d7861463dee6bc47d98998dee623863d2833271cf7b1860ce4160/dtree_python-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3279c01d6f6abe56733fb24a24ca287ce512a607572b1628723536935cfe64bb",
        "md5": "7d032e41c013aa4d74cc9943e7211380",
        "sha256": "9c5777d16b1f257dcd8ec5a7427f534657f1b69b502b94083a20d9c3d7738031"
      },
      "downloads": -1,
      "filename": "dtree-python-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7d032e41c013aa4d74cc9943e7211380",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5191,
      "upload_time": "2020-01-07T05:56:23",
      "upload_time_iso_8601": "2020-01-07T05:56:23.782772Z",
      "url": "https://files.pythonhosted.org/packages/32/79/c01d6f6abe56733fb24a24ca287ce512a607572b1628723536935cfe64bb/dtree-python-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}