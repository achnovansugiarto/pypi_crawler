{
  "info": {
    "author": "Cesar Abel Ramirez",
    "author_email": "xangcastle@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# grappelli_extras\n\n[![Latest PyPI version](https://pypip.in/v/django-grappelli-extras/badge.png)](https://crate.io/packages/django-grappelli-extras/)\n\n[![Number of PyPI downloads](https://pypip.in/d/django-grappelli-extras/badge.png)](https://crate.io/packages/django-grappelli-extras/)\n\n\nAvailable features:\n\n* [Header navbar](#navbar)\nAdd a dynamic navbar that change according to user permissions\n\n* [Add Links](#add-links)\nAdd addlink for each model in the nabvar according to user permissions.\n\n* [Traslation](#translation)\nTraslation Suport by Locales.\n\n* [Ajax](#ajax)\nAn Ajax api make queries to django OMR using generics views.\n\n# Using Autocomplete generic view\n```javascript\n<script>\n    (function ($) {\n        var completeEvent = function () {\n            $(this).autocomplete({\n                minLength: 2,\n                source: \"{% url 'ajax_autocomplete' %}?app_label=app&model=foo&column_name=name&column_value=code\",\n                select: function (i, o) {\n                    // o contain the object in json format\n                    // you can use it to populate anothers inputs\n                    console.log(o);\n                }\n            });\n        };\n        $('#complete-input').on('keyup', completeEvent);\n    })(grp.jQuery)\n</script>\n```\n\n# Using Autocomplete generic view\n```javascript\n<script>\n    (function ($) {\n        var completeEvent = function () {\n            $(this).autocomplete({\n                minLength: 2,\n                source: \"{% url 'ajax_autocomplete' %}?app_label=app&model=foo&column_name=name&column_value=code\",\n                select: function (i, o) {\n                    // o contain the object in json format\n                    // you can use it to populate anothers inputs\n                    console.log(o);\n                }\n            });\n        };\n        $('#complete-input').on('keyup', completeEvent);\n    })(grp.jQuery)\n</script>\n```\n\n* [Integration](#integration)*\nIntegration of adminactions, filebrowser, import_export modules.\n\n* [Integration](#jquery)\nInclude a Jquery Plugin to creade modals with objects json getting data from django OMR.\n\n# Requirements\n\n* Python > 2.6\n* django-grappelli >= 2.4.5\n* Django >= 1.4\n\n# Installation\n\n* ```pip install django-grappelli-extras```\n\n## settings.py\n\n * Put 'grappelli_extras' **before** 'grappelli' on INSTALLED_APPS\n * Put 'apptemplates.Loader' on your TEMPLATE_LOADERS setting:\n\n```python\n# Your setting will look like:\nTEMPLATE_LOADERS = (\n    'django.template.loaders.filesystem.Loader',\n    'django.template.loaders.app_directories.Loader',\n    'apptemplates.Loader',\n)\n```\n\n## urls.py\n\n * Put grappelli extras urls in 'urlpatterns':\n\n```python\n# Your urls will look like:\nurlpatterns = [\n    url('admin/', admin.site.urls),\n    url('grappelli/', include('grappelli.urls')),\n    url('admin/ajax/', include('grappelli_extras.ajax_urls')),\n    url('admin/extras/', include('grappelli_extras.extras_urls')),\n\n]\n```\n\n * Be sure 'django.core.context_processors.request' on your TEMPLATE_CONTEXT_PROCESSORS setting:\n\n\n## To run test project\n\n```\ncd ~/grappelli_extras/testapp\npip install -r requirements.txt\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py runserver\n```\n\n## Contributing\n\n1. Fork it.\n2. Create your feature branch. (`git checkout -b my-new-feature`)\n3. Commit your changes. (`git commit -am 'Add some feature'`)\n4. Push to the branch. (`git push origin my-new-feature`)\n5. Create new Pull Request.\n\nThank You",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xangcastle/grappelli_extras/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-grappelli-extras",
    "package_url": "https://pypi.org/project/django-grappelli-extras/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-grappelli-extras/",
    "project_urls": {
      "Homepage": "https://github.com/xangcastle/grappelli_extras/"
    },
    "release_url": "https://pypi.org/project/django-grappelli-extras/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Ajax, Extensions and Extras for Grappelli Admin interface",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13585847,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f264b01280e17c48967f8167073ef99bcc6c0624c15a73101d27d52be196219",
        "md5": "2fc9363a180454cebd509d638ccbbb22",
        "sha256": "3122922c52b3dc74d77c8704ce80bea86969766ef93237431af029319b5c505d"
      },
      "downloads": -1,
      "filename": "django-grappelli-extras-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "2fc9363a180454cebd509d638ccbbb22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10010,
      "upload_time": "2018-08-22T11:21:38",
      "upload_time_iso_8601": "2018-08-22T11:21:38.888397Z",
      "url": "https://files.pythonhosted.org/packages/5f/26/4b01280e17c48967f8167073ef99bcc6c0624c15a73101d27d52be196219/django-grappelli-extras-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}