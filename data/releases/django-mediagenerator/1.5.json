{
  "info": {
    "author": "Waldemar Kornewald",
    "author_email": "wkornewald@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-mediagenerator_ is an asset manager for Django.\nWith django-mediagenerator you can combine and compress your JS\nand CSS files. It also takes care of automatically versioning your\nfiles (including images), so browsers will load an updated version\nwhen you change any of your files. This works by adding a version\nhash to the file name. That way you can still use HTTP caches.\n\nAn important advantage of the media generator is that it works\nin sandboxed hosting environments like App Engine.\n\nWith its backend API the media generator allows you to flexibly\nadd new features and adjust it to your needs. It also comes with\nseveral backends pre-installed. For example, you can use Sass_,\nPython (via pyjs_/Pyjamas), and PyvaScript_.\n\nAlso, the media generator provides a development mode in which\nfiles don't get combined and compressed. This simplifies debugging\nbecause you can easily see which file contains a bug. Moreover,\nsome backends add extra debug information in development mode\nto further simplify debugging.\n\nVisit the `project site`_ for more information.\n\nChangelog\n=============================================================\n\nVersion 1.5\n-------------------------------------------------------------\n\nThis is another staticfiles-compatibility release which is intended to allow for writing reusable open-source apps.\n\n**Upgrade notes:** The CSS URL rewriting scheme has changed. Previously, ``url()`` statements in CSS files were treated similar to \"absolute\" URLs where the root is ``STATICFILES_URL`` (or ``MEDIA_URL``). This scheme was used because it was consistent with URLs in Sass. Now URLs are treated as relative to the CSS file. So, if the file ``css/style.css`` wants to link to ``img/icon.png`` the URL now has to be ``url(../img/icon.png)``. Previously it was ``url(img/icon.png)``. One way to upgrade to the staticfiles-compatible scheme is to modify your existing URLs.\n\nIf you don't want to change your CSS files this there is an alternative, but it's not staticfiles-compatible. Add the following to your settings: ``REWRITE_CSS_URLS_RELATIVE_TO_SOURCE = False``\n\n**Important:** Sass files still use the old scheme (``url(img/icon.png)``) because this is **much** easier to understand and allows for more reusable code, especially when you ``@import`` other Sass modules and those link to images.\n\n* Made CSS URL rewriting system compatible with ``django.contrib.staticfiles``\n* Added support for CSS URLs that contain a hash (e.g.: ``url('webfont.svg#webfontmAfNlbV6')``). Thanks to Karl Bowden for the patch!\n* Filter backends now have an additional ``self.bundle`` attribute which contains the final bundle name\n* Fixed an incompatibility with Django 1.1 and 1.0 (``django.utils.itercompat.product`` isn't available in those releases)\n* Fixed ``MediaMiddleware``, so it doesn't cache error responses\n\nVersion 1.4\n-------------------------------------------------------------\n\nThis is a compatibility release which prepares for the new staticfiles feature in Django 1.3.\n\n**Upgrade notes:** Use ``STATICFILES_URL`` instead of ``MEDIA_URL`` from now on. Starting with Django 1.3 this will default to \"/static/\" instead of \"/media/\".\n\n* App media should from now on be stored in a folder named \"static\". You can still use \"media\" folders, but this might be deprecated in the future (for the sake of having just one standard for reusable apps).\n* ``STATICFILES_URL`` must be used instead of ``MEDIA_URL``\n* ``STATICFILES_DIRS`` can be used instead of ``GLOBAL_MEDIA_DIRS``\n* ``STATICFILES_ROOT`` can be used instead of ``GENERATED_MEDIA_DIR``\n\nVersion 1.3.1\n-------------------------------------------------------------\n\n* Improved handling of media variations. This also fixes a bug with using CSS media types in production mode\n\nVersion 1.3\n-------------------------------------------------------------\n\n* Added support for setting media type for CSS. E.g.: ``{% include_media 'bundle.css' media='print' %}``\n\nVersion 1.2.1\n-------------------------------------------------------------\n\n* Fixed caching problems on runserver when using i18n and ``LocaleMiddleware``\n\nVersion 1.2\n-------------------------------------------------------------\n\n**Upgrade notes:** Please add ``'mediagenerator.middleware.MediaMiddleware'`` as the **first** middleware in your settings.py.\n\n* Got rid of unnecessary HTTP roundtrips when ``USE_ETAGS = True``\n* Added Django template filter (by default only used for .html files), contributed by Matt Bierner\n* Added media_url() filter which provides access to generated URLs from JS\n* CopyFiles backend can now ignore files matching certain regex patterns\n\nVersion 1.1\n-------------------------------------------------------------\n\n* Added Closure compiler backend\n* Added HTML5 cache manifest file backend\n* Fixed Sass support on Linux\n* Updated pyjs filter to latest pyjs repo version\n* \"swf\" and \"ico\" files are now copied, too, by default\n\n.. _django-mediagenerator: http://www.allbuttonspressed.com/projects/django-mediagenerator\n.. _project site: django-mediagenerator_\n.. _Sass: http://sass-lang.com/\n.. _pyjs: http://pyjs.org/\n.. _PyvaScript: http://www.allbuttonspressed.com/projects/pyvascript",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.allbuttonspressed.com/projects/django-mediagenerator",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-mediagenerator",
    "package_url": "https://pypi.org/project/django-mediagenerator/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-mediagenerator/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.allbuttonspressed.com/projects/django-mediagenerator"
    },
    "release_url": "https://pypi.org/project/django-mediagenerator/1.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Total asset management for Django. Combine and compress your JavaScript and CSS.",
    "version": "1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1387972,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49c49cd96e9871814398a75b0b7e8e019840339c848e0f6d5783daffcaa1c151",
        "md5": "736c33aac41d4507d879477e038f2c8a",
        "sha256": "a7673e53d88e0e6a8af374d67345b2c647159110d6ec1bea6e026ed37002fb64"
      },
      "downloads": -1,
      "filename": "django-mediagenerator-1.5.zip",
      "has_sig": false,
      "md5_digest": "736c33aac41d4507d879477e038f2c8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39088,
      "upload_time": "2010-10-30T12:57:05",
      "upload_time_iso_8601": "2010-10-30T12:57:05.998335Z",
      "url": "https://files.pythonhosted.org/packages/49/c4/9cd96e9871814398a75b0b7e8e019840339c848e0f6d5783daffcaa1c151/django-mediagenerator-1.5.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}