{
  "info": {
    "author": "Andy Grabow",
    "author_email": "andy@freilandkiwis.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Security",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Keep your secrets secret! |BuildStatus|_ |Coverage|_\n======================================================\n\n.. |BuildStatus| image:: https://travis-ci.org/kakulukia/django-secrets.svg\n.. _BuildStatus: https://travis-ci.org/kakulukia/django-secrets\n\n.. |Coverage| image:: https://codecov.io/gh/kakulukia/django-secrets/branch/master/graph/badge.svg\n.. _Coverage: https://codecov.io/gh/kakulukia/django-secrets\n\nThis little app helps you to not commit your secrets to a repo and adds\na nice way of exporting/importing secrets for a new deployment or automated testing with environment variables.\n\nThough this never happened to me during coding, Travis had some problems to reliably execute the tests\nand hot load the new secrets, so I had move the secrets module into the my_secrets package to not have\ntwo modules named secrets. Python obviously cant handle that. Lesson learned after about 40 Travis builds. :(\n\ndjango-secrets is working under Django 1.5+ and Python 2.7, 3.5 and 3.6\n\nInstallation\n------------\n\n::\n\n    pip install django-secrets\n\nUsage\n-----\n\nAfter installing the package please add it to your ``INSTALLED_APPS``\nsetting\n\n::\n\n    INSTALLED_APPS = (\n        ...\n        'django_secrets',\n    )\n\nBecause we want to be able to hide our secret settings, we have to alter\nmanage.py to run some code before the Django magic happens. Open\n``manage.py`` and alter it like this:\n\n::\n\n    if __name__ == \"__main__\":\n\n        from django_secrets.startup import check\n        check()\n\n        ...\n\n\nNow that the check is in place, run ``manage.py`` to initialize your\nproject. This wll create a new secrets package in your project root with\nthe following contents:\n\n::\n\n    secrets\n    ├── .gitignore\n    ├── __init__.py\n    ├── definitions.py\n    └── secrets.py\n\nThe package also features a .gitignore file to prevent you from checking\nin any secrets to git. Now open ``definitions.py`` to add your secrets\nto the list. Start with the Django secret key for example. When your\ndone adding all secrets, run ``manage.py`` again and you wil be asked to\nenter your secrets.\n\nNow you can remove your secrets from ``settings.py`` and instead replace\nthem like this:\n\n::\n\n    from my_secrets import secrets\n\n    SECRET_KEY = secrets.SECRET_KEY\n\nSince the secrets are saved in a normal python package, you can just use\nthem the normal way, but now they are save! :)\n\nImport / Export\n---------------\n\nThis package adds a new management command: ``export_secrets``. This\nwill print out export statements so you can easily create environment\nvariables on a new machine and let the ``check`` function do the rest\nfor you, because it will also read in any known environment variables as\nsecret values. This is quite handy for dynamically spawned instances or\nCI testing.\n\nHave fun and stay safe!\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/kakulukia/django-secrets/tarball/1.0.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kakulukia/django-secrets",
    "keywords": "Django,secrets,deployment",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-secrets",
    "package_url": "https://pypi.org/project/django-secrets/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-secrets/",
    "project_urls": {
      "Download": "https://github.com/kakulukia/django-secrets/tarball/1.0.0",
      "Homepage": "https://github.com/kakulukia/django-secrets"
    },
    "release_url": "https://pypi.org/project/django-secrets/1.0.0/",
    "requires_dist": [
      "Django (>=1.11)",
      "future"
    ],
    "requires_python": "",
    "summary": "The easy way of handling Django secrets.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14576748,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd2e7c2d2725aa77b5058256b23484d35b2c656bc7eb1dc70b78b32a031728f5",
        "md5": "82b78f7e0fe0c80dc220b458dc8cfb41",
        "sha256": "1f918e46bb710451a6635d6c049c58a5c159d170ae4cddde465b7c31bfa0d1b3"
      },
      "downloads": -1,
      "filename": "django_secrets-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82b78f7e0fe0c80dc220b458dc8cfb41",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10941,
      "upload_time": "2018-02-23T15:09:15",
      "upload_time_iso_8601": "2018-02-23T15:09:15.630811Z",
      "url": "https://files.pythonhosted.org/packages/dd/2e/7c2d2725aa77b5058256b23484d35b2c656bc7eb1dc70b78b32a031728f5/django_secrets-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}