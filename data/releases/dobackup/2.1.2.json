{
  "info": {
    "author": "JGill",
    "author_email": "joty@mygnu.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Archiving",
      "Topic :: System :: Archiving :: Backup",
      "Topic :: Utilities"
    ],
    "description": "# dobackup\n<p align=\"center\">\n<a href=\"https://pepy.tech/project/dobackup\"><img alt=\"Downloads\" src=\"https://pepy.tech/badge/dobackup\"></a> </p>\nSimple Automated offline snapshots of digitalocean droplets utilising [python-digitalocean](https://github.com/koalalorenzo/python-digitalocean).\nThe script safely shutdowns a given droplet or all droplets with a give tag then performs snapshots of them, Then\nit turns them back on. Every step is logged as well as displayed in the console output.\nThe script is designed to be used as a cron job as well. If any error occurs the script logs it then exits with\nexit code of 1. Very useful feature to ensure that the backups are successfully completed. I use it to delete older\nbackups only if new one is successful and to use a 'healthchecks' service to get notified if a backup failed.\n(see cron examples)\n\n**NOTE: The currently published pypi version of API wrapper [python-digitalocean] has a bug, which recently started breaking functionality.**\n**Please update dobackup to the latest version (2.1.1) which is temporarily using a fork I published as [python-digitalocean-latest]**\n\n**RUN: `python3 -m pip uninstall python-digitalocean`  then  `python3 -m pip install --user -U dobackup`**\n\n![dobackup](https://user-images.githubusercontent.com/8462091/67843798-96c57d00-faf4-11e9-8ce1-5596bf422a44.gif)\n\n## Installation\nInstall as a user without sudo. This installs it in ~/.local/bin/ make sure this path is in your $PATH.\n``` bash\npython3 -m pip install --user -U dobackup\n```\nIf not found, add the following to your .bashrc or .zshrc\n``` bash\n# Add to PATH to Install and run programs with \"pip install --user\"\nexport PATH=$PATH:~/.local/bin\n```\n\n## Usage\n\n### Initialise\nStore the api access token in .token file by running '--init' and providing the token string.\n``` bash\ndobackup --init\n# Paste the digitalocean token string, press enter\n# If you have multiple accounts, paste each- press enter, so on\n# When done, just press enter to submit an empty string\n# The sequence of these tokens (0,1,2) will be later used to \"use\" the tokens\n```\nTo use one of the stored tokens, specify it's index after \"dobackup \",\n``` bash\ndobackup 0      # 0 is implicit\ndobackup 1      # will use token 1\ndobackup 2      # will use token 2\n```\n\n### Display Information\nDisplay Information about droplets and snapshots using --list commands.\nExamples\n``` bash\ndobackup --list-droplets\ndobackup --list-snaps\ndobackup --list-backups  # snaps created using this tool\ndobakcup --list-older_than 7    # lists backup taken by dobackup that are older than 7 days\ndobackup --list-tags\ndobackup --list-tagged   # list tagged servers with the tag 'dobackup'\n\n```\n\n### Use Tags (optional)\nUse tags to backup multiple servers at ones. Use existing tags or create new.\nDefault tag is 'dobackup' .\nTo tag a server with a 'dobakup' tag.\n``` bash\ndobackup --tag-server ubuntu-18-04  # '--tag-name dobackup' is implicit\n```\nTo tag a server with 'web-servers' tag.\n``` bash\ndobackup --tag-server ubuntu-18-04  --tag-name web-servers\n```\nNOTE: In 2.0, --'tag-name'-- is appended to the backup name, instead of hardcoded str '--dobackup--'.\nThe default value of tag_name is still 'dobackup'. Now we can use --tag-name along with --list-backups, --list-older-than,\n--delete-older-than. Now we can keep the backups of droplets with lets say 'tag1' for 5 days and 'tag2' for 10 days.\nexample command. \"--delete-older-than 5 --tag-name 'tag1'\" ,   \"--delete-older-than 10 --tag-name 'tag2'\"\n\n\n### Perform Backups\nTo backup a server using it's name or id.\n``` bash\ndobackup --backup ubuntu-18-04\ndobackup --backup 1929129\ndobackup --live-backup ubuntu-18-04       # live backup, backup without shutting down the vm\ndobackup --backup ubuntu-18-04 --keep     # this won't be deleted with '--delete-older-than'\n```\n\nTo backup all servers that have a given tag.\n``` bash\ndobackup --backup-all   # --tag-name dobackup    is implicit\ndobackup --backup-all --tag-name web-servers\n```\nTo set a cron job, to backup all 'tagged' servers and auto delete old backups, if backups were successful\n``` bash\n0 1 * * * ~/.local/bin/dobackup --backup-all && ~/.local/bin/dobackup --delete-older-than 7\n```\n\nUsing amazing utility [healthchecks](https://github.com/healthchecks/healthchecks). to get notified if an error occurred during the process.\n``` bash\n0 1 * * * ~/.local/bin/dobackup --backup-all && ~/.local/bin/dobackup --delete-older-than 7 && wget -O/dev/null https://hc-ping.com/your-string\n```\n\n### Perform Restore\nTo restore a server using it's name or id and snapshot's name or id\n``` bash\ndobackup --restore-droplet ubuntu-18-04 --restore-to \"ubuntu-18-04--dobackup--2018-06-01 14:36:07\"\n```\n\n### Delete Old Backups\nTo delete a specific snapshot.\n``` bash\ndobackup --delete-snap \"ubuntu-1gb-sgp1-01--dobackup--2018-05-31 17:43:11\"   # put snap name or id\n```\n\nTo delete all old backups taken with dobackup.\n``` bash\n# delete snapshots older than 14 days with '--dobackup--' in their names\n# WILL NOT delete snapshots with '--dobackup-keep--' in their names\ndobackup --delete-older-than 14\n```\n\n## Options\n\n``` bash\nusage: dobackup [-h] [-v] [--init] [-l] [--list-backups] [-s] [--list-tagged]\n                [--list-tags] [--list-older-than LIST_OLDER_THAN]\n                [--backup BACKUP] [--backup-all] [--live-backup LIVE_BACKUP]\n                [--live-backup-all] [--tag-droplet TAG_DROPLET]\n                [--untag-droplet UNTAG_DROPLET] [--tag-name TAG_NAME]\n                [--delete-older-than DELETE_OLDER_THAN]\n                [--delete-snap DELETE_SNAP] [--shutdown SHUTDOWN]\n                [--powerup POWERUP] [--restore-droplet RESTORE_DROP]\n                [--restore-to RESTORE_TO] [--keep]\n                [token_id]\n\nAutomated Offline Or Live Snapshots Of Digitalocean Droplets\n\npositional arguments:\n  token_id              Specify token number to be used, default=0, supply\n                        only if you have multiple Digitalocean accounts\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, -V, --version     show programs version number and exit\n  --init                Save token to .token file\n  --tag-name TAG_NAME   To be used with \"--list-tags\", \"--tag-droplet\" and \"--\n                        backup-all\", default value is \"dobackup\"\n  --keep                To keep backups for long term. \"--delete-older-than\"\n                        wont delete these. To be used with \"--backup\",\"--\n                        backup-all\"\n\nInformational Args:\n  Arguments That Display Information\n\n  -l, --list-droplets   List all droplets\n  --list-backups        List all snapshots with \"dobackup\" in their name\n  -s, --list-snaps      List all snapshots\n  --list-tagged         List droplets using \"--tag-name\"\n  --list-tags           List all used tags\n  --list-older-than LIST_OLDER_THAN\n                        List snaps older than, in days\n\nBackup Args:\n  Arguments That Backup Or Restore Droplets\n\n  --backup BACKUP       Shutdown, Backup (snapshot), Then Restart the droplet\n                        with given name or id\n  --backup-all          Shutdown, Backup (snapshot), Then Restart all droplets\n                        with the given \"--tag-name\"\n  --live-backup LIVE_BACKUP\n                        Backup (snapshot), the droplet with given name or id,\n                        without shutting it down\n  --live-backup-all     Backup (snapshot), all droplets with the given \"--tag-\n                        name\", without shutting them down\n  --restore-droplet RESTORE_DROP\n                        Restore, the droplet with given name or id\n  --restore-to RESTORE_TO\n                        Snapshot id or name, to restore the droplet to\n\nAction Args:\n  Arguments That Perform Actions\n\n  --tag-droplet TAG_DROPLET\n                        Add tag to the provided droplet name or id\n  --untag-droplet UNTAG_DROPLET\n                        Remove tag from the provided droplet name or id\n  --delete-older-than DELETE_OLDER_THAN\n                        Delete backups older than, in days\n  --delete-snap DELETE_SNAP\n                        Delete the snapshot with given name or id\n  --shutdown SHUTDOWN   Shutdown, the droplet with given name or id\n  --powerup POWERUP     Powerup, the droplet with given name or id\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jotyGill/digitalocean-backup/",
    "keywords": "backup,automated-backup,digitalocean,digital-ocean,backups,automation,digitalocean-backup,snapshots",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dobackup",
    "package_url": "https://pypi.org/project/dobackup/",
    "platform": "GNU/Linux",
    "project_url": "https://pypi.org/project/dobackup/",
    "project_urls": {
      "Homepage": "https://github.com/jotyGill/digitalocean-backup/"
    },
    "release_url": "https://pypi.org/project/dobackup/2.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Automated Offline Or Live Snapshots Of Digitalocean Droplets",
    "version": "2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8197496,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aea4dcf30698b50675de8952d4b1e43a96dae7af752b5741fc0ea8ecca6e306e",
        "md5": "04b6df0b81cb0d8b4f75dcd6b509f6c9",
        "sha256": "c56faa43bf83b4d473e7e84de60a009ea835d71e6bb9260676ae364b451afa40"
      },
      "downloads": -1,
      "filename": "dobackup-2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "04b6df0b81cb0d8b4f75dcd6b509f6c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 16049,
      "upload_time": "2020-01-30T04:27:42",
      "upload_time_iso_8601": "2020-01-30T04:27:42.254789Z",
      "url": "https://files.pythonhosted.org/packages/ae/a4/dcf30698b50675de8952d4b1e43a96dae7af752b5741fc0ea8ecca6e306e/dobackup-2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}