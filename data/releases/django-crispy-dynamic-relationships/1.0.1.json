{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-crispy-dynamic-relationships\n===================================\n\nAdd dynamic one-to-many relationships to your crispy forms with easy model declaration. It handles saving, updating and deleting automatically.\n\nInstallation\n---------------\n\nThis app can be installed and used in your django project by:\n\n.. code-block:: bash\n\n    $ pip install django-crispy-dynamic-relationships\n\n\nEdit your `settings.py` file to include `'django-crispy-dynamic-relationships'` in the `INSTALLED_APPS`\nlisting.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django-crispy-dynamic-relationships',\n    ]\n\nSubclass ModelFormCrispy to build forms similar to ModelForm. Add an extra field for the one-to-many relationship. Multiple fields supported.\n\n.. code-block:: python\n\n    from django-crispy-dynamic-relationships.factory import ModelFormCrispy\n\n    class Child1Form(ModelFormCrispy):\n        class Meta:\n            model = models.Child1\n            fields ='__all__'\n\n    class ParentForm(ModelFormCrispy):\n        class Meta:\n            model = models.Parent\n            fields ='__all__'\n\n        children = [Child1Form]\n\nInstantiate Forms with the parent class (ParentForm in this example) and a model instance if updating. Then pass the instance to the view context.\n\n.. code-block:: python\n\n    from django_crispy_forms_dynamic.factory import Forms\n\n    context['parent_instance'] = Forms(parent_class=ParentForm, parent_instance=parent_instance)\n\n\nLoad 'dynamic_modelform_tags' in your template and apply the filter to the parent_instance.\n\n\n.. code-block:: html\n\n    {% load dynamic_modelform_tags %}\n    <form method=\"post\">\n        {% csrf_token %}\n        {{ forms_factory|form_dynamic }}\n        <button type=\"submit\" id=\"id_submit\">Submit</button>\n    </form>\n\nFinally, save your form by calling is_valid() and save() methods in your POST method of your view.\n\n.. code-block:: python\n\n    def post(self,request,pk=None):\n        print(request.POST)\n        try:\n            parent_instance = Parent.objects.get(pk=pk)\n        except Parent.DoesNotExist:\n            parent_instance = None\n        factory= Forms(parent_class=ParentForm, parent_instance=parent_instance, form_data=request.POST)\n        if factory.is_valid():\n            factory.save()\n            return redirect('success')\n\nDocs & Source\n-------------\n\n* Source: https://github.com/angelgm/django-crispy-dynamic-relationships\n* PyPI: https://pypi.org/project/django-crispy-dynamic-relationships\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/angelgm/django-crispy-dynamic-relationships",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-crispy-dynamic-relationships",
    "package_url": "https://pypi.org/project/django-crispy-dynamic-relationships/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-crispy-dynamic-relationships/",
    "project_urls": {
      "Homepage": "https://github.com/angelgm/django-crispy-dynamic-relationships"
    },
    "release_url": "https://pypi.org/project/django-crispy-dynamic-relationships/1.0.1/",
    "requires_dist": [
      "Django (>=2.2)",
      "django-crispy-forms (>=1.9.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Django crispy forms with dynamic one to many relationships.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9384311,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e3d6ea72a2c2f48aafb40be41c0884abf5ecc052365697327e6a2d73d5871d2",
        "md5": "72944e431ebe1caff0b21966e63c4ead",
        "sha256": "63d86ec1c3fd1a13f30e3df90dfe901aecaa9a7dde700a19fb38e532ad1bb925"
      },
      "downloads": -1,
      "filename": "django_crispy_dynamic_relationships-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72944e431ebe1caff0b21966e63c4ead",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3290,
      "upload_time": "2021-02-10T19:09:46",
      "upload_time_iso_8601": "2021-02-10T19:09:46.407479Z",
      "url": "https://files.pythonhosted.org/packages/2e/3d/6ea72a2c2f48aafb40be41c0884abf5ecc052365697327e6a2d73d5871d2/django_crispy_dynamic_relationships-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a4397ab6d4777549b2389bbf6edb4b5950486c44c7b362d944eb4530d848ebc",
        "md5": "00b8e5ee5b74e08956e6ff35e9c8425e",
        "sha256": "ad42464a68be72ecb0dd5e4c1d8651c63c9267327b96f0efc0fd5495b3978e4f"
      },
      "downloads": -1,
      "filename": "django-crispy-dynamic-relationships-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "00b8e5ee5b74e08956e6ff35e9c8425e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2697,
      "upload_time": "2021-02-10T19:09:47",
      "upload_time_iso_8601": "2021-02-10T19:09:47.952644Z",
      "url": "https://files.pythonhosted.org/packages/1a/43/97ab6d4777549b2389bbf6edb4b5950486c44c7b362d944eb4530d848ebc/django-crispy-dynamic-relationships-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}