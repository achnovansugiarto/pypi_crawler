{
  "info": {
    "author": "",
    "author_email": "probachai.yu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "            `pip install middleware_test`\r\r\n        \r\r\n            `middleware-active-directory` is required as main provider\r\r\n        \r\r\n        **Settings**\r\r\n        \r\r\n        All of the settings are specified in config/{env}.conf file\r\r\n        \r\r\n            `config/local.conf` will be autocreated after installation\r\r\n            You had to specify all configs there\r\r\n        \r\r\n        **Database creation**\r\r\n        \r\r\n            `create_db` - creates initial database structure on existing database.\r\r\n            User, password and db name must be specified in config/{env}.conf file\r\r\n        \r\r\n        **Installation providers**\r\r\n        \r\r\n            `pip install middleware-provider-name`\r\r\n            `provider_name_init` -- creates record in db and child class\r\r\n        \r\r\n           then you need to append your class to PROVIDERS_LIST:\r\r\n                PROVIDERS_LIST.append(ActiveDirectoryBase)\r\r\n                PROVIDERS_LIST.append(SlackBase)\r\r\n                PROVIDERS_LIST.append(OfficeVibeBase)\r\r\n        \r\r\n        **Running sync***\r\r\n        \r\r\n            `from middleware.start_sync import Sync\r\r\n            Sync.run()`\r\r\n        \r\r\n        Also command `start_sync` available for this\r\r\n        \r\r\n        **Making a report**\r\r\n        \r\r\n            `from middleware.make_report import Report\r\r\n            Report.make_report()`\r\r\n        \r\r\n        Also command `make_report` available for this\r\r\n        \r\r\n        \r\r\n        **Possible configuration params**\r\r\n        \r\r\n        *Database config*\r\r\n        \r\r\n            `middleware_db_name` -- name of database\r\r\n            `mysql_user` -- database user\r\r\n            `mysql_password` -- password to connect to database\r\r\n            `middleware_db_ip` -- db ip\r\r\n        \r\r\n        *Active directory settings*\r\r\n        \r\r\n             `AD_admin'` - admin profile to connect to Active Director\r\r\n             `AD_password` - password for admin profile\r\r\n             `AD_server` - Active Directory server address\r\r\n             `AD_base_dn` - base dn for Active Directory server\r\r\n        \r\r\n        *Slack settings*\r\r\n        \r\r\n            `slack_api_tokens_dict` - dict of slack tokens from slack app with read and write permissions for multiply workspaces\r\r\n        \r\r\n        *Other settings*\r\r\n        \r\r\n        You can setup expiration time of logs in days in 'logs_expires' setting\r\r\n        \r\r\n        *Read fields configuration*\r\r\n        \r\r\n        Fields which would be read from system you can configure in 'field_read_configuration' table.\r\r\n        There are fields:\r\r\n        (`field_read_configuration_id`, `system_id`, `from_path`, `to_field_name`, `active`, `create_dttm`)\r\r\n        \r\r\n        `from_path` should start from '$.'. For example, for this structure:\r\r\n         ```\r\r\n         {\r\r\n         \"user\":\r\r\n             {\r\r\n             \"profile\":\r\r\n                 {\r\r\n                 \"name\": \"Test_name\"\r\r\n                 }\r\r\n             }\r\r\n         }\r\r\n         ```\r\r\n         `from_path` would be `$.user.profile.name`\r\r\n        \r\r\n         `to_field_name` should be just the single name of the field, the same for the all of systems with equivalent values\r\r\n        \r\r\n        Example structure of Active Directory user data:\r\r\n        ```\r\r\n        {u'attributes':\r\r\n        {u'manager': u'',\r\r\n        u'departmentNumber': [],\r\r\n        u'telephoneNumber': u'',\r\r\n        u'countryCode': ,\r\r\n        u'physicalDeliveryOfficeName': u'',\r\r\n        u'co': u'',\r\r\n        u'homePhone': u'',\r\r\n        u'streetAddress': u'',\r\r\n        u'title': u'',\r\r\n        u'objectGUID': u'',\r\r\n        u'distinguishedName': u'',\r\r\n        u'name': u'',\r\r\n        u'company': u'',\r\r\n        u'objectClass': [u'top', u'person', u'organizationalPerson', u'user'],\r\r\n        u'street': [],\r\r\n        u'wWWHomePage': u'',\r\r\n        u'comment': [],\r\r\n        u'department': u'',\r\r\n        u'middleName': [],\r\r\n        u'description': [u'Love Python'],\r\r\n        u'initials': u'Y.V.',\r\r\n        u'isDeleted': [],\r\r\n        u'userPrincipalName': u'Some.User@test-octopus.local',\r\r\n        u'c': u'UA',\r\r\n        u'postOfficeBox': [u''],\r\r\n        u'cn': u'Some User',\r\r\n        u'displayName': u'Some User',\r\r\n        u'jpegPhoto': [],\r\r\n        u'mail': u'email@example.com',\r\r\n        u'mobile': u'+380672112999',\r\r\n        u'whenChanged': u'2018-02-27 14:31:38+00:00',\r\r\n        u'sn': u'User',\r\r\n        u'sAMAccountName': u'Some.User',\r\r\n        u'givenName': u'Some',\r\r\n        u'postalAddress': [],\r\r\n        u'facsimileTelephoneNumber': u'',\r\r\n        u'photo': [],\r\r\n        u'st': u'Vinnitsya'},\r\r\n        u'dn': u''}\r\r\n        ```\r\r\n        \r\r\n        Example of Slack user data\r\r\n        ```\r\r\n        {\r\r\n            \"ok\": true,\r\r\n            \"user\": {\r\r\n                \"id\": \"\",\r\r\n                \"team_id\": \"\",\r\r\n                \"name\": \"\",\r\r\n                \"deleted\": ,\r\r\n                \"color\": \"\",\r\r\n                \"real_name\": \"\",\r\r\n                \"tz\": \"\",\r\r\n                \"tz_label\": \"\",\r\r\n                \"tz_offset\": ,\r\r\n                \"profile\": {\r\r\n                    \"title\": \"\",\r\r\n                    \"phone\": \"\",\r\r\n                    \"skype\": \"\",\r\r\n                    \"real_name\": \"\",\r\r\n                    \"real_name_normalized\": \"\",\r\r\n                    \"display_name\": \"\",\r\r\n                    \"display_name_normalized\": \"\",\r\r\n                    \"status_text\": \"\",\r\r\n                    \"status_emoji\": \"\",\r\r\n                    \"avatar_hash\": \"\",\r\r\n                    \"guest_channels\": \"[]\",\r\r\n                    \"image_original\": \"\",\r\r\n                    \"email\": \"\",\r\r\n                    \"first_name\": \"\",\r\r\n                    \"last_name\": \"\",\r\r\n                    \"image_24\": \"\",\r\r\n                    \"image_32\": \"\",\r\r\n                    \"image_48\": \"\",\r\r\n                    \"image_72\": \"\",\r\r\n                    \"image_192\": \"\",\r\r\n                    \"image_512\": \"\",\r\r\n                    \"image_1024\": \"\",\r\r\n                    \"team\": \"\"\r\r\n                },\r\r\n                \"is_admin\": false,\r\r\n                \"is_owner\": false,\r\r\n                \"is_primary_owner\": false,\r\r\n                \"is_restricted\": true,\r\r\n                \"is_ultra_restricted\": false,\r\r\n                \"is_bot\": false,\r\r\n                \"updated\": ,\r\r\n                \"is_app_user\": false,\r\r\n                \"has_2fa\": false,\r\r\n                \"enterprise_user\": {\r\r\n                    \"id\": \"\",\r\r\n                    \"enterprise_id\": \"\",\r\r\n                    \"enterprise_name\": \"\",\r\r\n                    \"is_admin\": false,\r\r\n                    \"is_owner\": false,\r\r\n                    \"teams\": [\r\r\n                        \"\",\r\r\n                        \"\"\r\r\n                    ]\r\r\n                }\r\r\n            }\r\r\n        }\r\r\n        ```\r\r\n        \r\r\n        Example of SelectHR user data:\r\r\n        ```\r\r\n        {'first_name': '',\r\r\n          'surname': '',\r\r\n          'gender': '',\r\r\n          'mobile_phone_number': '',\r\r\n          'e-mail': '',\r\r\n          'person_number': ,\r\r\n          'birth_date': '',\r\r\n          'updated_at': '',\r\r\n          'initials': '',\r\r\n          'second_name': '',\r\r\n          'nationality': '',\r\r\n          'end_date': '',\r\r\n          'title': '',\r\r\n          'work_phone_number': '',\r\r\n          'biography': '',\r\r\n          'salutation': '',\r\r\n          'post_name': '',\r\r\n          'manager_name': '',\r\r\n          'team': '',\r\r\n        ```\r\r\n        \r\r\n        !Email and updated_at fields are required for each system\r\r\n        \r\r\n        !Person_number is required for SelectHR in `field_read_configuration` and `field_write_configuration`\r\r\n        \r\r\n        !Salutation field in SelectHr cannot be updated because, it is a computed field\r\r\n        \r\r\n        *Write fields configuration*\r\r\n        \r\r\n        Fields which would be read from system you can configure in 'field_write_configuration' table.\r\r\n        There are fields:\r\r\n        (`field_write_configuration_id`, `system_id`, `from_field_name`, `to_path`, `active`, `create_dttm`)\r\r\n        \r\r\n        `from_field_name` is a field name from actual_user_data\r\r\n        `to_path` starts from '$.' and configures final field path per system\r\r\n        For example:\r\r\n        `('1', '1', 'first_name', '$.givenName', TRUE, '2017-05-05 12:00:00'), `\r\r\n        \r\r\n        \r\r\n        For Active Directory and SelectHR structure will be the same as in `field_read_configuration`,\r\r\n        but Slack system allows to configure only profile fields, so structure for configuring will be:\r\r\n        ```\r\r\n        \"profile\": {\r\r\n                    \"title\": \"\",\r\r\n                    \"phone\": \"\",\r\r\n                    \"skype\": \"\",\r\r\n                    \"real_name\": \"\",\r\r\n                    \"real_name_normalized\": \"\",\r\r\n                    \"display_name\": \"\",\r\r\n                    \"display_name_normalized\": \"\",\r\r\n                    \"status_text\": \"\",\r\r\n                    \"status_emoji\": \"\",\r\r\n                    \"avatar_hash\": \"\",\r\r\n                    \"guest_channels\": \"[]\",\r\r\n                    \"image_original\": \"\",\r\r\n                    \"email\": \"\",\r\r\n                    \"first_name\": \"\",\r\r\n                    \"last_name\": \"\",\r\r\n                    \"image_24\": \"\",\r\r\n                    \"image_32\": \"\",\r\r\n                    \"image_48\": \"\",\r\r\n                    \"image_72\": \"\",\r\r\n                    \"image_192\": \"\",\r\r\n                    \"image_512\": \"\",\r\r\n                    \"image_1024\": \"\",\r\r\n                    \"team\": \"\"\r\r\n                }\r\r\n        ```\r\r\n        \r\r\n        *Write forbidden fields*\r\r\n        \r\r\n        in `write_forbidden_field` table you can specified field that cannot be updated\r\r\n        \r\r\n        Fields\r\r\n        (`write_forbidden_field_id`, `system_id`, `field_name`,  `create_dttm`)\r\r\n        \r\r\n        Example:\r\r\n        \r\r\n        `('1', '3', 'last_name', '2017-05-05 12:00:00'),`\r\r\n        \r\r\n        \r\r\n        *Write Required Fields*\r\r\n        \r\r\n        in `write_required_field` table you can specify field required to update from specified system to other ones\r\r\n        \r\r\n        Fields\r\r\n        (`write_required_field_id`, `system_id`, `field_name`, `create_dttm`)\r\r\n        \r\r\n        Example:\r\r\n        \r\r\n        `('1', '3', 'manager', '2017-05-05 12:00:00'),`\r\r\n        \r\r\n        \r\r\n        \r\r\n        *Write Empty Field By User*\r\r\n        \r\r\n        in `write_empty_field_by_user` table you can set up field that would be rewritten in specified system by default value for specified user\r\r\n        \r\r\n        Fields\r\r\n        `write_empty_field_by_user_id`, `system_id`, `field_name`, `user_email`, `default_value`, `create_dttm`)\r\r\n        \r\r\n        Example:\r\r\n        \r\r\n        `('1', '1', 'job_title', 'email@example.com', '', '2017-05-05 12:00:00')`\r\r\n        \r\r\n        \r\nPlatform: UNKNOWN\r\nClassifier: Development Status :: 3 - Alpha\r\nClassifier: Environment :: Web Environment\r\nClassifier: Intended Audience :: Developers\r\nClassifier: License :: OSI Approved :: BSD License\r\nClassifier: Operating System :: OS Independent\r\nClassifier: Programming Language :: Python :: 2\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "middleware-test",
    "package_url": "https://pypi.org/project/middleware-test/",
    "platform": "",
    "project_url": "https://pypi.org/project/middleware-test/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/middleware-test/2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Module to sync users' profiles",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4145075,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42c5dde4f32ea09d4f000527aab7b1b0076c887d0aa98d129f0616a4dff1ce54",
        "md5": "0b4a31d55ec83b8c95ad771ab18e2259",
        "sha256": "fb4fb073d571c74c0771a54a650950eb65635b38c3c752eb30f7df0b78490f52"
      },
      "downloads": -1,
      "filename": "middleware_test-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0b4a31d55ec83b8c95ad771ab18e2259",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23422,
      "upload_time": "2018-08-07T16:56:16",
      "upload_time_iso_8601": "2018-08-07T16:56:16.117376Z",
      "url": "https://files.pythonhosted.org/packages/42/c5/dde4f32ea09d4f000527aab7b1b0076c887d0aa98d129f0616a4dff1ce54/middleware_test-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}