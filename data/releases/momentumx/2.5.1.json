{
  "info": {
    "author": "Captivation Software, LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MomentumX\n\n<p align=\"center\">\n    <img src=\"https://github.com/captivationsoftware/MomentumX/blob/main/Logo.png?raw=true\" title=\"MomentumX Logo\" />\n    <br/>\n    <span>\n        <strong>MomentumX</strong> is a <strong>zero-copy shared memory IPC</strong> library for building complex <strong>streaming data pipelines</strong> capable of processing <strong>large datasets</strong> using <strong>Python</strong>. \n    </span>\n</p>\n\n<br />\n\n### Key Features:\n- High-Throughput, Low Latency\n- Supports **streaming and synchronous** modes for use within a wide variety of use cases. \n- Bring your own encoding, or use **raw binary** data.\n- Sane **data protections** to ensure **reliability of data** in a cooperative computing environment. \n- Pairs with other high-performance libraries, such as **numpy** and **scipy**, to support parallel processing of memory-intensive scientific data.\n- Works on most modern versions of **Linux** using shared memory (via `/dev/shm`).\n- Seamlessly integrates into a **Docker** environment with minimal configuration, and readily enables lightweight container-to-container data sharing. \n\n### Examples:\nBelow are some simplified use cases for common MomentumX workflows. Consult the examples in the `examples/` directory for additional details and implementation guidance.\n\n#### Streaming Mode (e.g. lossy)\n```python\n# Producer Process\nimport momentumx as mx\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer('my_stream', buffer_size=int(1e6), buffer_count=10, sync=False)\n\n# Write the series 0-9 repeatedly to a buffer 1000 times\nfor i in range(0, 1000):\n    buffer = stream.next_to_send()\n    buffer.write(f'{i % 10}'.encode('utf8')) # Note: writing to buffer via [<index>] and [<start_index>:<stop_index>] is also possible\n    buffer.send() # Note: call with .send(<num bytes>) if you want to explicitly control the data_size parameter, otherwise internal cursor will be used\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\nwhile stream.is_alive:\n    # Receive from the stream as long as the stream is available \n    buffer = stream.receive()\n    print(buffer[:buffer.data_size])\n    \n    # Calling `buffer.release()` not required (see \"Implicit versus Explicit Buffer Release\" section below)\n```\n\n#### Syncronous Mode (e.g. lossless)\n```python\n# Producer Process\nimport momentumx as mx\nimport threading\nimport signal\n\ncancel_event = threading.Event()\nsignal.signal(signal.SIGINT, (lambda _sig, _frm: cancel_event.set()))\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer('my_stream', buffer_size=int(1e6), buffer_count=10, sync=True) # NOTE: sync set to True\n\nmin_subscribers = 1\n\nwhile stream.subscriber_count < min_subscribers:\n    print(\"waiting for subscriber(s)\")\n    if cancel_event.wait(0.5):\n        break\n\nprint(\"All expected subscribers are ready\")\n\n# Write the series 0-999 to a consumer \nfor n in range(0, 1000):\n    if stream.subscriber_count == 0:\n        cancel_event.wait(0.5)\n\n    # Note: sending strings directly is possible via the send_string call\n    elif stream.send_string(str(n)):\n        print(f\"Sent: {n}\")\n\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\nwhile stream.is_alive:\n    # Note: receiving strings is possible as well via the receive_string call\n    print(f\"Received: {stream.receive_string()}\")\n\n```\n\n#### Numpy Integration\n```python\nimport momentumx as mx\nimport numpy as np\n\n# Create a stream\nstream = mx.Consumer('numpy_stream')\n\n# Receive the next buffer (or if a producer, obtain the next_to_send buffer)\nbuffer = stream.receive()\n\n# Create a numpy array directly from the memory without any copying\nnp_buff = np.frombuffer(buffer, dtype=uint8)\n\n```\n\n#### Implicit versus Explicit Buffer Release\nMomentumX Consumers will, by default, automatically release a buffer under the covers once all references are destroyed. This promotes both usability and data integrity. However, there may be cases where the developer wants to utilize a different strategy and explicity control when buffers are released to the pool of available buffers.\n\n```python\nstream = mx.Consumer('my_stream')\n\nbuffer = stream.receive()\n\n# Access to buffer is safe!\nbuffer.read(10)\n\n# Buffer is being returned back to available buffer pool. Be sure you are truly done with your data!\nbuffer.release() \n\n# DANGER: DO NOT DO THIS! \n# All operations on a buffer after calling `release` are considered unsafe! All safeguards have been removed and the memory is volatile!\nbuffer.read(10) \n\n\n```\n\n\n#### Isolated Contexts\nMomentumX allows for the usage of streams outside of `/dev/shm` (the default location). Pass the `context` kwarg pointing to a directory on the filesystem for both the `Producer` and all `Consumer` instances to create isolated contexts.\n\nThis option is useful if access to `/dev/shm` is unsuitable.\n\n```python\nimport momentumx as mx\n\n# Create a producer attached to the context path /my/path\nstream = mx.Producer('my_stream', ..., context='/my/path/')\n...\n\n# Create Consumer elsewhere attached to the same context of /my/path\nstream = mx.Consumer('my_stream', context='/my/path/')\n\n```\n\n### License\nCaptivation Software, LLC offers **MomentumX** under an **Unlimited Use License to the United States Government**, with **all other parties subject to the GPL-3.0 License**.\n\n### Inquiries / Requests\nAll inquiries and requests may be sent to <a href=\"mailto:opensource@captivation.us\">opensource@captivation.us</a>.\n\n\n<sub><sup>\n    Copyright &copy; 2022-2023 - <a href=\"https://captivation.us\" target=\"_blank\">Captivation Software, LLC</a>.\n</sup></sub>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/captivationsoftware/MomentumX",
    "keywords": "shm,shared memory,zero-copy,numpy,big data,scipy,pubsub,pipeline",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MomentumX",
    "package_url": "https://pypi.org/project/MomentumX/",
    "platform": null,
    "project_url": "https://pypi.org/project/MomentumX/",
    "project_urls": {
      "Homepage": "https://github.com/captivationsoftware/MomentumX"
    },
    "release_url": "https://pypi.org/project/MomentumX/2.5.1/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Zero-copy shared memory IPC library for building complex streaming data pipelines capable of processing large datasets",
    "version": "2.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17242809,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfd7c9b2e3b5be191dbb67e6a36ae1a38328168579948c16a83d67386acd241e",
        "md5": "9cee7e0bd3ea2e59135f51cd0abe0d50",
        "sha256": "4482e679c5985099195766b70facd808ac1ce1da06c3401feaa591e6d95d6bba"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "9cee7e0bd3ea2e59135f51cd0abe0d50",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6",
      "size": 211837,
      "upload_time": "2023-02-28T18:14:01",
      "upload_time_iso_8601": "2023-02-28T18:14:01.651519Z",
      "url": "https://files.pythonhosted.org/packages/cf/d7/c9b2e3b5be191dbb67e6a36ae1a38328168579948c16a83d67386acd241e/MomentumX-2.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc8137420a49786a750e42b34f7b205d84ab74de7b2e16e0a8bd8eb090626d87",
        "md5": "317d50dd73e2dc539e7e7983ccd3e2d3",
        "sha256": "6ea306581d7933cece00a5f20dbeffbabb4a5063324c55da29aca4253251943e"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "317d50dd73e2dc539e7e7983ccd3e2d3",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.6",
      "size": 211790,
      "upload_time": "2023-02-28T18:14:02",
      "upload_time_iso_8601": "2023-02-28T18:14:02.917766Z",
      "url": "https://files.pythonhosted.org/packages/bc/81/37420a49786a750e42b34f7b205d84ab74de7b2e16e0a8bd8eb090626d87/MomentumX-2.5.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a1cb862ecf9dcbca4df269aa00d6af34f26ec6b49fc519190fab334dec119cb",
        "md5": "4e7d3538f9a7d026a82c90e467ea9ea8",
        "sha256": "b1595331565036afd6b92c09c76873e3077f17aef5eae1d42d13d7fb34a088ea"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4e7d3538f9a7d026a82c90e467ea9ea8",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 214164,
      "upload_time": "2023-02-28T18:14:04",
      "upload_time_iso_8601": "2023-02-28T18:14:04.171423Z",
      "url": "https://files.pythonhosted.org/packages/8a/1c/b862ecf9dcbca4df269aa00d6af34f26ec6b49fc519190fab334dec119cb/MomentumX-2.5.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12e27d63b546fdd9af3df81347783625bcd523f308fd1999366524b159ba09d6",
        "md5": "2d4187d9719937f58983e7fd1ebe7f74",
        "sha256": "02efda056dd67bcbcb7567b4a9b0764b26a56d5f8ce73db80b397d1667a45fb0"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2d4187d9719937f58983e7fd1ebe7f74",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 214331,
      "upload_time": "2023-02-28T18:14:05",
      "upload_time_iso_8601": "2023-02-28T18:14:05.424360Z",
      "url": "https://files.pythonhosted.org/packages/12/e2/7d63b546fdd9af3df81347783625bcd523f308fd1999366524b159ba09d6/MomentumX-2.5.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ec942c520483a9b5d0eec566cfb8a8b2dd3f9762d163787d8cdcea8c405e1a6",
        "md5": "ee4a72c938fae57df7fdd63f75262a68",
        "sha256": "aa932a2d479993beb32d089b7d56e83682c6183a77c882e81eae9c4011ba3ced"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ee4a72c938fae57df7fdd63f75262a68",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6",
      "size": 211644,
      "upload_time": "2023-02-28T18:14:06",
      "upload_time_iso_8601": "2023-02-28T18:14:06.640018Z",
      "url": "https://files.pythonhosted.org/packages/8e/c9/42c520483a9b5d0eec566cfb8a8b2dd3f9762d163787d8cdcea8c405e1a6/MomentumX-2.5.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac76a4dd153f20ab00b870a87ba3b83cb62d938188154e910de54f1ee13ecf22",
        "md5": "60da9618693a5b6daee14627967d4496",
        "sha256": "957501b738bb25e206a35f9d8bc8196c2fd668339099d8119070957681d7fbff"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "60da9618693a5b6daee14627967d4496",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6",
      "size": 211924,
      "upload_time": "2023-02-28T18:14:08",
      "upload_time_iso_8601": "2023-02-28T18:14:08.185190Z",
      "url": "https://files.pythonhosted.org/packages/ac/76/a4dd153f20ab00b870a87ba3b83cb62d938188154e910de54f1ee13ecf22/MomentumX-2.5.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6acb716bf18d18a5e1e6141c547401a8b042fc991ffdb45b775a0408eed586df",
        "md5": "ee8a8a7a56e2d20da904dc7352309c11",
        "sha256": "d80a107843cec24ea16c030cc5760556679468c52e4f950e73b805b720b43d82"
      },
      "downloads": -1,
      "filename": "MomentumX-2.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ee8a8a7a56e2d20da904dc7352309c11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47748,
      "upload_time": "2023-02-28T18:14:09",
      "upload_time_iso_8601": "2023-02-28T18:14:09.195470Z",
      "url": "https://files.pythonhosted.org/packages/6a/cb/716bf18d18a5e1e6141c547401a8b042fc991ffdb45b775a0408eed586df/MomentumX-2.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}