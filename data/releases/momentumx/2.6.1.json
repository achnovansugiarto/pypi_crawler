{
  "info": {
    "author": "Captivation Software, LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MomentumX\n\n<p align=\"center\">\n    <img src=\"https://github.com/captivationsoftware/MomentumX/blob/main/Logo.png?raw=true\" title=\"MomentumX Logo\" />\n    <br/>\n    <span>\n        <strong>MomentumX</strong> is a <strong>zero-copy shared memory IPC</strong> library for building complex <strong>streaming data pipelines</strong> capable of processing <strong>large datasets</strong> using <strong>Python</strong>. \n    </span>\n</p>\n\n<br />\n\n### Key Features:\n- High-Throughput, Low Latency\n- Supports **streaming and synchronous** modes for use within a wide variety of use cases. \n- Bring your own encoding, or use **raw binary** data.\n- Sane **data protections** to ensure **reliability of data** in a cooperative computing environment. \n- Pairs with other high-performance libraries, such as **numpy** and **scipy**, to support parallel processing of memory-intensive scientific data.\n- Works on most modern versions of **Linux** using shared memory (via `/dev/shm`).\n- Seamlessly integrates into a **Docker** environment with minimal configuration, and readily enables lightweight container-to-container data sharing. \n\n### Examples:\nBelow are some simplified use cases for common MomentumX workflows. Consult the examples in the `examples/` directory for additional details and implementation guidance.\n\n#### Streaming Mode\n```python\n# Producer Process\nimport momentumx as mx\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer('my_stream', buffer_size=int(1e6), buffer_count=10, sync=False)\n\n# Write the series 0-9 repeatedly to a buffer 1000 times\nbuffer = stream.next_to_send()\nbuffer.write(b'1') \n# buffer data == b'1'\n\n# alternatively, set via array indexing...\nbuffer[1] = b'2'\n# buffer data == b'12'\n\n# or also set via python slice operator\nbuffer[2:3] = b'34'\n# buffer data == b'1234'\n\nbuffer.send()\n# NOTE: buffer.send() can also be passed an explicit number of bytes as well. \n# Otherwise an internally managed cursor will be used.\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\n# Receive from my_stream as long as the stream has not ended OR there are unread buffers \nwhile stream.has_next:\n\n    # Block while waiting to receive buffer \n    # NOTE: Non-blocking receive is possible using blocking=False keyword argument\n    buffer = stream.receive()\n    \n    # If we are here, either the stream ended OR we have a buffer, so check...\n    if buffer is not None:\n\n        # We have buffer containing data, so print the entire contents\n        print(buffer.read(buffer.data_size))\n    \n        # See also \"Implicit versus Explicit Buffer Release\" section below.\n```\n\n#### Syncronous Mode\n```python\n# Producer Process\nimport momentumx as mx\nimport threading\nimport signal\n\ncancel_event = threading.Event()\nsignal.signal(signal.SIGINT, (lambda _sig, _frm: cancel_event.set()))\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer(\n    'my_stream', \n    buffer_size=int(1e6), \n    buffer_count=10, \n    sync=True\n) # NOTE: sync set to True\n\nmin_subscribers = 1\n\nwhile stream.subscriber_count < min_subscribers:\n    print(\"waiting for subscriber(s)\")\n    if cancel_event.wait(0.5):\n        break\n\nprint(\"All expected subscribers are ready\")\n\n# Write the series 0-999 to a consumer \nfor n in range(0, 1000):\n    if stream.subscriber_count == 0:\n        cancel_event.wait(0.5)\n\n    # Note: sending strings directly is possible via the send_string call\n    elif stream.send_string(str(n)):\n        print(f\"Sent: {n}\")\n\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\nwhile stream.has_next:\n    data = stream.receive_string() \n\n    if data is not None: \n        # Note: receiving strings is possible as well via the receive_string call\n        print(f\"Received: {data}\")\n\n```\n\n#### Iterator Syntax\nBuffer interaction syntax can be improved with syntactic sugar using `iter()` builtin:\n```python\nimport momentumx as mx\n\nstream = mx.Consumer(STREAM)\n\n# Iterate over buffers in the stream until stream.receive() returns None\nfor buffer in iter(stream.receive, None):     \n    # Now, buffer is guaranteed to be valid, so no check required -  \n    # go ahead and print all the contents again, this time using \n    # the index and slice operators!\n    print(buffer[0])                    # print first byte\n    print(buffer[1:buffer.data_size])   # print remaining bytes\n\n```\n\n\n#### Numpy Integration\n```python\nimport momentumx as mx\nimport numpy as np\n\n# Create a stream\nstream = mx.Consumer('numpy_stream')\n\n# Receive the next buffer (or if a producer, obtain the next_to_send buffer)\nbuffer = stream.receive()\n\n# Create a numpy array directly from the memory without any copying\nnp_buff = np.frombuffer(buffer, dtype=uint8)\n```\n\n#### Implicit versus Explicit Buffer Release\nMomentumX Consumers will, by default, automatically release a buffer under the covers once all references are destroyed. This promotes both usability and data integrity. However, there may be cases where the developer wants to utilize a different strategy and explicity control when buffers are released to the pool of available buffers.\n\n```python\nstream = mx.Consumer('my_stream')\n\nbuffer = stream.receive()\n\n# Access to buffer is safe!\nbuffer.read(10)\n\n# Buffer is being returned back to available buffer pool. \n# Be sure you are truly done with your data!\nbuffer.release() \n\n# DANGER: DO NOT DO THIS! \n# All operations on a buffer after calling `release` are considered unsafe! \n# All safeguards have been removed and the memory is volatile!\nbuffer.read(10) \n\n\n```\n\n\n#### Isolated Contexts\nMomentumX allows for the usage of streams outside of `/dev/shm` (the default location). Pass the `context` kwarg pointing to a directory on the filesystem for both the `Producer` and all `Consumer` instances to create isolated contexts.\n\nThis option is useful if access to `/dev/shm` is unsuitable.\n\n```python\nimport momentumx as mx\n\n# Create a producer attached to the context path /my/path\nstream = mx.Producer('my_stream', ..., context='/my/path/')\n...\n\n# Create Consumer elsewhere attached to the same context of /my/path\nstream = mx.Consumer('my_stream', context='/my/path/')\n\n```\n\n### License\nCaptivation Software, LLC offers **MomentumX** under an **Unlimited Use License to the United States Government**, with **all other parties subject to the GPL-3.0 License**.\n\n### Inquiries / Requests\nAll inquiries and requests may be sent to <a href=\"mailto:opensource@captivation.us\">opensource@captivation.us</a>.\n\n\n<sub><sup>\n    Copyright &copy; 2022-2023 - <a href=\"https://captivation.us\" target=\"_blank\">Captivation Software, LLC</a>.\n</sup></sub>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/captivationsoftware/MomentumX",
    "keywords": "shm,shared memory,zero-copy,numpy,big data,scipy,pubsub,pipeline",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MomentumX",
    "package_url": "https://pypi.org/project/MomentumX/",
    "platform": null,
    "project_url": "https://pypi.org/project/MomentumX/",
    "project_urls": {
      "Homepage": "https://github.com/captivationsoftware/MomentumX"
    },
    "release_url": "https://pypi.org/project/MomentumX/2.6.1/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Zero-copy shared memory IPC library for building complex streaming data pipelines capable of processing large datasets",
    "version": "2.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17242809,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "302b821f8c92a16e9df6463cb3200b380a791dde06c2794aed6d363e5f58ffa5",
        "md5": "d33d77434d1b6f9be949d55e7b00f9d7",
        "sha256": "6963ba0dec8a6c3ca6b5c38b33d36cf5302b93a70f6efa1269f36fc6ad13323d"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d33d77434d1b6f9be949d55e7b00f9d7",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6",
      "size": 230122,
      "upload_time": "2023-03-10T16:37:55",
      "upload_time_iso_8601": "2023-03-10T16:37:55.720602Z",
      "url": "https://files.pythonhosted.org/packages/30/2b/821f8c92a16e9df6463cb3200b380a791dde06c2794aed6d363e5f58ffa5/MomentumX-2.6.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3af289ee16f6bece882c298156591a0eac04d3399324285076de5b1fdaa2173",
        "md5": "ed09d35b04b49ca5bdaed503a99cb225",
        "sha256": "3071c677dca46020fd1098816b87b9513ca2dcaf0a86f98102170e856a371e18"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ed09d35b04b49ca5bdaed503a99cb225",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.6",
      "size": 230110,
      "upload_time": "2023-03-10T16:37:56",
      "upload_time_iso_8601": "2023-03-10T16:37:56.959796Z",
      "url": "https://files.pythonhosted.org/packages/a3/af/289ee16f6bece882c298156591a0eac04d3399324285076de5b1fdaa2173/MomentumX-2.6.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "947dc19adb002f3e9b20e4b05281aa708c92daf10825bddeb069b39567167469",
        "md5": "79205fe16de16dcc038ef0424f203d01",
        "sha256": "89318f7cfa32309330d40762f09eb044855202ff8bc1f4317bfe9e832114f10c"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "79205fe16de16dcc038ef0424f203d01",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 233936,
      "upload_time": "2023-03-10T16:37:58",
      "upload_time_iso_8601": "2023-03-10T16:37:58.253223Z",
      "url": "https://files.pythonhosted.org/packages/94/7d/c19adb002f3e9b20e4b05281aa708c92daf10825bddeb069b39567167469/MomentumX-2.6.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "564e481a7b61fa9db1f8a7e3d16fb9de33157973056c42d8a3732e9649d9d61b",
        "md5": "ce14b9e081156223467be494faa7085b",
        "sha256": "63428810c66d1dbd70072f8a0c7438bd51f3c234ed1dda5298c64dc8384ffdce"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ce14b9e081156223467be494faa7085b",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 233992,
      "upload_time": "2023-03-10T16:37:59",
      "upload_time_iso_8601": "2023-03-10T16:37:59.941577Z",
      "url": "https://files.pythonhosted.org/packages/56/4e/481a7b61fa9db1f8a7e3d16fb9de33157973056c42d8a3732e9649d9d61b/MomentumX-2.6.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d58f08c0db7912e8966bb79760371c12e2562ff0bf1175da9f0cf87523ff32d2",
        "md5": "b4176d3286b05e179b641b3efd24a575",
        "sha256": "033783520fb57f8c161d3d1d7e4d038c0c4e420724c7b300ba9e4b636bf68c59"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b4176d3286b05e179b641b3efd24a575",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6",
      "size": 230000,
      "upload_time": "2023-03-10T16:38:01",
      "upload_time_iso_8601": "2023-03-10T16:38:01.139943Z",
      "url": "https://files.pythonhosted.org/packages/d5/8f/08c0db7912e8966bb79760371c12e2562ff0bf1175da9f0cf87523ff32d2/MomentumX-2.6.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40115c9abfdb744c9fab01d2334c69a2cc1746eeb0f9337e0d23b9e46dd6c25b",
        "md5": "7d96be414004fe17057f6b78824cbffe",
        "sha256": "df89c5e573ff2d4d30e75fce4b342f6f721bba7dc42b66482191b7967cdb1e8e"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7d96be414004fe17057f6b78824cbffe",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6",
      "size": 230295,
      "upload_time": "2023-03-10T16:38:02",
      "upload_time_iso_8601": "2023-03-10T16:38:02.224779Z",
      "url": "https://files.pythonhosted.org/packages/40/11/5c9abfdb744c9fab01d2334c69a2cc1746eeb0f9337e0d23b9e46dd6c25b/MomentumX-2.6.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e33d634725b9723e935bdad8753552e3c9b98686b7cb47bc9dd1a3434925ba0",
        "md5": "909d08c127ac457bd7f610a70146f518",
        "sha256": "1479195d2bd8ae6748e7ccb42489647e8340aee2df027dabdf6d48a2f01a36af"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "909d08c127ac457bd7f610a70146f518",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 50374,
      "upload_time": "2023-03-10T16:38:03",
      "upload_time_iso_8601": "2023-03-10T16:38:03.318961Z",
      "url": "https://files.pythonhosted.org/packages/3e/33/d634725b9723e935bdad8753552e3c9b98686b7cb47bc9dd1a3434925ba0/MomentumX-2.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}