{
  "info": {
    "author": "Captivation Software, LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MomentumX\n\n<p align=\"center\">\n    <img src=\"https://github.com/captivationsoftware/MomentumX/blob/main/Logo.png?raw=true\" title=\"MomentumX Logo\" />\n    <br/>\n    <span>\n        <strong>MomentumX</strong> is a <strong>zero-copy shared memory IPC</strong> library for building complex <strong>streaming data pipelines</strong> capable of processing <strong>large datasets</strong> using <strong>Python</strong>. \n    </span>\n</p>\n\n<br />\n\n### Key Features:\n- High-Throughput, Low Latency\n- Supports **streaming and synchronous** modes for use within a wide variety of use cases. \n- Bring your own encoding, or use **raw binary** data.\n- Sane **data protections** to ensure **reliability of data** in a cooperative computing environment. \n- Pairs with other high-performance libraries, such as **numpy** and **scipy**, to support parallel processing of memory-intensive scientific data.\n- Works on most modern versions of **Linux** using shared memory (via `/dev/shm`).\n- Seamlessly integrates into a **Docker** environment with minimal configuration, and readily enables lightweight container-to-container data sharing. \n\n### Examples:\nBelow are some simplified use cases for common MomentumX workflows. Consult the examples in the `examples/` directory for additional details and implementation guidance.\n\n#### Streaming Mode (e.g. lossy)\n```python\n# Producer Process\nimport momentumx as mx\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer('my_stream', buffer_size=int(1e6), buffer_count=10, sync=False)\n\n# Write the series 0-9 repeatedly to a buffer 1000 times\nbuffer = stream.next_to_send()\nbuffer.write(b'1') \n# buffer data == b'1'\n\n# alternatively, set via array indexing...\nbuffer[1] = b'2'\n# buffer data == b'12'\n\n# or also set via python slice operator\nbuffer[2:3] = b'34'\n# buffer data == b'1234'\n\nbuffer.send()\n# NOTE: buffer.send() can also be passed an explicit number of bytes as well. \n# Otherwise an internally managed cursor will be used.\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\nwhile True:\n    # Receive from the stream as long as the stream is available \n    buffer = stream.receive()\n    print(buffer[:buffer.data_size])\n    \n    # Calling `buffer.release()` not required. \n    # See \"Implicit versus Explicit Buffer Release\" section below.\n```\n\n#### Syncronous Mode (e.g. lossless)\n```python\n# Producer Process\nimport momentumx as mx\nimport threading\nimport signal\n\ncancel_event = threading.Event()\nsignal.signal(signal.SIGINT, (lambda _sig, _frm: cancel_event.set()))\n\n# Create a stream with a total capacity of 10MB\nstream = mx.Producer(\n    'my_stream', \n    buffer_size=int(1e6), \n    buffer_count=10, \n    sync=True\n) # NOTE: sync set to True\n\nmin_subscribers = 1\n\nwhile stream.subscriber_count < min_subscribers:\n    print(\"waiting for subscriber(s)\")\n    if cancel_event.wait(0.5):\n        break\n\nprint(\"All expected subscribers are ready\")\n\n# Write the series 0-999 to a consumer \nfor n in range(0, 1000):\n    if stream.subscriber_count == 0:\n        cancel_event.wait(0.5)\n\n    # Note: sending strings directly is possible via the send_string call\n    elif stream.send_string(str(n)):\n        print(f\"Sent: {n}\")\n\n```\n\n```python\n# Consumer Process(es)\nimport momentumx as mx\n\nstream = mx.Consumer('my_stream')\n\nwhile stream.has_next:\n    # Note: receiving strings is possible as well via the receive_string call\n    print(f\"Received: {stream.receive_string()}\")\n\n```\n\n#### Numpy Integration\n```python\nimport momentumx as mx\nimport numpy as np\n\n# Create a stream\nstream = mx.Consumer('numpy_stream')\n\n# Receive the next buffer (or if a producer, obtain the next_to_send buffer)\nbuffer = stream.receive()\n\n# Create a numpy array directly from the memory without any copying\nnp_buff = np.frombuffer(buffer, dtype=uint8)\n\n```\n\n#### Implicit versus Explicit Buffer Release\nMomentumX Consumers will, by default, automatically release a buffer under the covers once all references are destroyed. This promotes both usability and data integrity. However, there may be cases where the developer wants to utilize a different strategy and explicity control when buffers are released to the pool of available buffers.\n\n```python\nstream = mx.Consumer('my_stream')\n\nbuffer = stream.receive()\n\n# Access to buffer is safe!\nbuffer.read(10)\n\n# Buffer is being returned back to available buffer pool. \n# Be sure you are truly done with your data!\nbuffer.release() \n\n# DANGER: DO NOT DO THIS! \n# All operations on a buffer after calling `release` are considered unsafe! \n# All safeguards have been removed and the memory is volatile!\nbuffer.read(10) \n\n\n```\n\n\n#### Isolated Contexts\nMomentumX allows for the usage of streams outside of `/dev/shm` (the default location). Pass the `context` kwarg pointing to a directory on the filesystem for both the `Producer` and all `Consumer` instances to create isolated contexts.\n\nThis option is useful if access to `/dev/shm` is unsuitable.\n\n```python\nimport momentumx as mx\n\n# Create a producer attached to the context path /my/path\nstream = mx.Producer('my_stream', ..., context='/my/path/')\n...\n\n# Create Consumer elsewhere attached to the same context of /my/path\nstream = mx.Consumer('my_stream', context='/my/path/')\n\n```\n\n### License\nCaptivation Software, LLC offers **MomentumX** under an **Unlimited Use License to the United States Government**, with **all other parties subject to the GPL-3.0 License**.\n\n### Inquiries / Requests\nAll inquiries and requests may be sent to <a href=\"mailto:opensource@captivation.us\">opensource@captivation.us</a>.\n\n\n<sub><sup>\n    Copyright &copy; 2022-2023 - <a href=\"https://captivation.us\" target=\"_blank\">Captivation Software, LLC</a>.\n</sup></sub>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/captivationsoftware/MomentumX",
    "keywords": "shm,shared memory,zero-copy,numpy,big data,scipy,pubsub,pipeline",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MomentumX",
    "package_url": "https://pypi.org/project/MomentumX/",
    "platform": null,
    "project_url": "https://pypi.org/project/MomentumX/",
    "project_urls": {
      "Homepage": "https://github.com/captivationsoftware/MomentumX"
    },
    "release_url": "https://pypi.org/project/MomentumX/2.6.0/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Zero-copy shared memory IPC library for building complex streaming data pipelines capable of processing large datasets",
    "version": "2.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17242809,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "538e5311d0bf872be5acc24538a4261813f60c85adf5192880161db7b99253c7",
        "md5": "1d58289622656cc534b62c5dc12417df",
        "sha256": "cfb247287c650694f50f3201b8509c929f590a5c0dcb8208b4160c935e04eccd"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1d58289622656cc534b62c5dc12417df",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6",
      "size": 232195,
      "upload_time": "2023-03-09T18:38:49",
      "upload_time_iso_8601": "2023-03-09T18:38:49.441051Z",
      "url": "https://files.pythonhosted.org/packages/53/8e/5311d0bf872be5acc24538a4261813f60c85adf5192880161db7b99253c7/MomentumX-2.6.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8956d511472bb6f416639a8d8a6502286f8d62f9012988bf1fa32a87f1edf6b",
        "md5": "8fb0da42dcfc2c367f132bd90d963f5b",
        "sha256": "036a24c8051a775a3b7eaaf5bf65999eea24baff35c651ac20c98549099698a2"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8fb0da42dcfc2c367f132bd90d963f5b",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.6",
      "size": 232176,
      "upload_time": "2023-03-09T18:38:51",
      "upload_time_iso_8601": "2023-03-09T18:38:51.229850Z",
      "url": "https://files.pythonhosted.org/packages/b8/95/6d511472bb6f416639a8d8a6502286f8d62f9012988bf1fa32a87f1edf6b/MomentumX-2.6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85567751f8790edbd9291e88feb69008f51b1727b9f91b10c483b232e7996d92",
        "md5": "2eb3b5ac1796ad1116c2d431bd75efd6",
        "sha256": "9f6f98389d0ec92ff987205926db7c607d6d12a092067220da8eedad3b0de186"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2eb3b5ac1796ad1116c2d431bd75efd6",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 236490,
      "upload_time": "2023-03-09T18:38:52",
      "upload_time_iso_8601": "2023-03-09T18:38:52.360964Z",
      "url": "https://files.pythonhosted.org/packages/85/56/7751f8790edbd9291e88feb69008f51b1727b9f91b10c483b232e7996d92/MomentumX-2.6.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "637bce094f491295d752ffd9cf74421a63d4082cfe69ba7c0e9f8db9c32cbf86",
        "md5": "6d68d6c03104c9a77b6763d4e233f622",
        "sha256": "c2083e526430a223af0655d47b60b7705455cec3f3fa29d2aa043be8ea454b5d"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6d68d6c03104c9a77b6763d4e233f622",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 236612,
      "upload_time": "2023-03-09T18:38:54",
      "upload_time_iso_8601": "2023-03-09T18:38:54.003336Z",
      "url": "https://files.pythonhosted.org/packages/63/7b/ce094f491295d752ffd9cf74421a63d4082cfe69ba7c0e9f8db9c32cbf86/MomentumX-2.6.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b540621dd084d25a493f7e479ae05fa5a6f913208ec5472249875fefc78b565",
        "md5": "28e28b0bb3e9b02bbaf5a9b6afc45195",
        "sha256": "d1a5fe70aa90ad7ac53c6559003e8e5b1942b5bbf3a767bff8862de8f17583aa"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "28e28b0bb3e9b02bbaf5a9b6afc45195",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6",
      "size": 231920,
      "upload_time": "2023-03-09T18:38:55",
      "upload_time_iso_8601": "2023-03-09T18:38:55.220626Z",
      "url": "https://files.pythonhosted.org/packages/4b/54/0621dd084d25a493f7e479ae05fa5a6f913208ec5472249875fefc78b565/MomentumX-2.6.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dce6fc27da36fd47b421e7046090eb5d1d00bc4761856a4840fa129a4d893790",
        "md5": "975f762683b73c2b605a44f420ea7729",
        "sha256": "b6f8b8ff54a8b20d0e335c3249315fe035d61c32782412f1a5f70e633dc4a60c"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "975f762683b73c2b605a44f420ea7729",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6",
      "size": 232469,
      "upload_time": "2023-03-09T18:38:56",
      "upload_time_iso_8601": "2023-03-09T18:38:56.667696Z",
      "url": "https://files.pythonhosted.org/packages/dc/e6/fc27da36fd47b421e7046090eb5d1d00bc4761856a4840fa129a4d893790/MomentumX-2.6.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8caa80b10b7527a6de0d4bb6b047e0ae073efd16afa95d27bb49bc52207b075",
        "md5": "478ff3c698e73d707295cc64f638de2a",
        "sha256": "6cac59cee253254f7de4c0f1291512f7d23fa422e9aed8aa3c8ffde567042775"
      },
      "downloads": -1,
      "filename": "MomentumX-2.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "478ff3c698e73d707295cc64f638de2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 49511,
      "upload_time": "2023-03-09T18:38:58",
      "upload_time_iso_8601": "2023-03-09T18:38:58.185701Z",
      "url": "https://files.pythonhosted.org/packages/b8/ca/a80b10b7527a6de0d4bb6b047e0ae073efd16afa95d27bb49bc52207b075/MomentumX-2.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}