{
  "info": {
    "author": "Lucas Trajano; Felipe Viegas; Jonatha Daguerre",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# Driloader\n\n[![pypi version](https://img.shields.io/pypi/v/driloader.svg)](https://pypi.python.org/pypi/driloader) [![license](https://img.shields.io/pypi/l/driloader.svg)](https://pypi.python.org/pypi/driloader) [![python versions](https://img.shields.io/pypi/pyversions/driloader.svg)](https://pypi.python.org/pypi/driloader) [![contributors](https://img.shields.io/github/contributors/lucasmello/Driloader.svg)](https://github.com/lucasmello/Driloader/graphs/contributors) [![Build Status](https://travis-ci.org/lucasmello/Driloader.svg?branch=master)](https://travis-ci.org/lucasmello/Driloader)\n\nSelenium drivers downloader tool with standalone CLI support.\n\n ## Why is it for?\n\n Selenium needs a specific driver to work with each browser. Every driver has a version that works with specific browser\n versions, and it's really annoying reading the changelogs to check if the current driver will work with the new browser\n version. Plus, a lot of times a test crashes because the browser has updated and the driver is not compatible anymore.\n That's why Driloader exists: To make this process so much easier! Driloader autodetect the browser version (it supports Chrome, Firefox and Internet Explorer) and download the driver according to it's version.\n\n## Requires\n* Python 3.4 or higher\n\n## Setup the project\nThis project uses [Pipenv](https://github.com/pypa/pipenv) as packaging tool. Please make sure you have it installed in your system.\n\nAlso, we use [make](https://www.gnu.org/software/make/) as task runner, so you can see the available tasks by running `make help`.\n\n```bash\n# Clone the project\nbash: $ git clone https://github.com/lucasmello/Driloader.git\nbash: $ cd Driloader\n# Install dependencies\nbash: $ make install\npipenv install --dev\nInstalling dependencies from Pipfile.lock…\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 20/20 — 00:00:03\n# Active virtual env\nbash: $ pipenv shell\nsource ~/.local/share/virtualenvs/driloader-ZPASDPNJ/bin/activate\n# Run linter and tests\n(driloader-ZPASDPNJ) driloader: $ make lint test\n\n```\n\n## Installing\n```\n pip install driloader\n```\n\n## Usage with Firefox\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Firefox\n\ndriver_path = driloader.download_gecko_driver()\nbrowser = Firefox(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## Usage with Chrome\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Chrome\n\ndriver_path = driloader.download_chrome_driver()\nbrowser = Chrome(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## Usage with Internet Explorer\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Ie\n\ndriver_path = driloader.download_ie_driver()\nbrowser = Ie(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## CLI and standalone usage\n```bash\npython -m driloader\n\nusage: driloader [-h] (--firefox | --chrome | --internet-explorer | --all)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --firefox, -f         get Firefox version.\n  --chrome, -c          get Google Chrome version.\n  --internet-explorer, -i\n                        get Internet Explorer version.\n  --all                 look for browsers an get their versions.\n```\n### Retrieve Firefox version\n```bash\n$  python -m driloader --firefox\n45\n```\n\n### Retrieve Google Chrome version\n```bash\n$  python -m driloader --chrome\n58\n```\n\n### Retrieve Internet Explorer version (Windows system)\n```cmd\n> python -m driloader -i\n11\n```\n\n### Retrieve all browsers version (Windows system)\n```bash\n> python -m driloader --all\nInternet Explorer: 11\nFirefox: 45\nGoogle Chrome: 58\n\n```\n\n### Retrieve all browsers version (non-Windows system)\n```bash\n# Getting from a non-Windows system\n$  python -m driloader --all\nInternet Explorer: Error: Unable to get the Internet Explorer version.\n        Cause: Error: Unable to retrieve IE version..\n        Cause: System is not Windows.\nFirefox: 45\nGoogle Chrome: 58\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "driloader",
    "package_url": "https://pypi.org/project/driloader/",
    "platform": "",
    "project_url": "https://pypi.org/project/driloader/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/driloader/1.2.5/",
    "requires_dist": [
      "certifi",
      "chardet",
      "idna",
      "requests",
      "urllib3"
    ],
    "requires_python": "",
    "summary": "Driver downloader for Selenium",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10208352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1afca391765f2936871ef95f01cd0b1736f86261448f3dd94f80acfa8222ee0d",
        "md5": "08173d67df77ea25d59d384b1871c620",
        "sha256": "3f40ee562333a4831ab52c080106572b993d0880ce6fcc3ae714cd2cbd83bc5c"
      },
      "downloads": -1,
      "filename": "driloader-1.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08173d67df77ea25d59d384b1871c620",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14076,
      "upload_time": "2018-06-29T20:10:01",
      "upload_time_iso_8601": "2018-06-29T20:10:01.694793Z",
      "url": "https://files.pythonhosted.org/packages/1a/fc/a391765f2936871ef95f01cd0b1736f86261448f3dd94f80acfa8222ee0d/driloader-1.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d4fecc6eee0126f02da5ad1aa1b08757fef8a0ad1a31cfb85f7feaa7a6bf6dc",
        "md5": "e0fbeb7d7fef35d4066db96d2abe0148",
        "sha256": "8a736129b7da686cc43376ffa2ff4ebb92d2153510ba17005e25efe0fb9f6ed6"
      },
      "downloads": -1,
      "filename": "driloader-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e0fbeb7d7fef35d4066db96d2abe0148",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12055,
      "upload_time": "2018-06-29T20:10:03",
      "upload_time_iso_8601": "2018-06-29T20:10:03.021558Z",
      "url": "https://files.pythonhosted.org/packages/4d/4f/ecc6eee0126f02da5ad1aa1b08757fef8a0ad1a31cfb85f7feaa7a6bf6dc/driloader-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}