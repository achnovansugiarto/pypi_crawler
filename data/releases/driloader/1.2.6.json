{
  "info": {
    "author": "Lucas Trajano; Felipe Viegas; Jonatha Daguerre",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# Driloader\n\n[![pypi version](https://img.shields.io/pypi/v/driloader.svg)](https://pypi.python.org/pypi/driloader) [![license](https://img.shields.io/pypi/l/driloader.svg)](https://pypi.python.org/pypi/driloader) [![python versions](https://img.shields.io/pypi/pyversions/driloader.svg)](https://pypi.python.org/pypi/driloader) [![contributors](https://img.shields.io/github/contributors/lucasmello/Driloader.svg)](https://github.com/lucasmello/Driloader/graphs/contributors) [![Build Status](https://travis-ci.org/lucasmello/Driloader.svg?branch=master)](https://travis-ci.org/lucasmello/Driloader)\n\nSelenium drivers downloader tool with standalone CLI support.\n\n ## What is it for?\n\n Selenium needs a specific driver to work with each browser. Every driver has a version that works with specific browser\n versions, and it's really annoying reading the changelogs to check if the current driver will work with the new browser\n version. Plus, a lot of times a test crashes because the browser has updated and the driver is not compatible anymore.\n That's why Driloader exists: To make this process so much easier! Driloader autodetect the browser version (it supports Chrome, Firefox and Internet Explorer) and download the driver according to it's version.\n\n## Requires\n* Python 3.6 or higher\n\n## Setup the project\nThis project uses [Pipenv](https://github.com/pypa/pipenv) as packaging tool. Please make sure you have it installed in your system.\n\nAlso, we use [make](https://www.gnu.org/software/make/) as task runner, so you can see the available tasks by running `make help`.\n\n```bash\n# Clone the project\nbash: $ git clone https://github.com/lucasmello/Driloader.git\nbash: $ cd Driloader\n# Install dependencies\nbash: $ make install\npipenv install --dev\nInstalling dependencies from Pipfile.lock…\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 20/20 — 00:00:03\n# Active virtual env\nbash: $ pipenv shell\nsource ~/.local/share/virtualenvs/driloader-ZPASDPNJ/bin/activate\n# Run linter and tests\n(driloader-ZPASDPNJ) driloader: $ make lint test\n\n```\n\n## Installing\n```\n pip install driloader\n```\n\n## Usage with Firefox\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Firefox\n\ndriver_path = driloader.firefox().get_driver()\nbrowser = Firefox(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## Usage with Chrome\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Chrome\n\ndriver_path = driloader.chrome().get_driver()\nbrowser = Chrome(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## Usage with Internet Explorer\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Ie\n\ndriver_path = driloader.internet_explorer().get_driver()\nbrowser = Ie(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n### Setting browser's binary\nIf you don't provide the browser's binary, driloader will try to find\nthe browser in common paths, and sometimes it's not possible to find\nthe browser. You can set the binary like this:\n```python\nfrom driloader import driloader\nfrom selenium.webdriver import Chrome\n\ndriver_path = driloader.chrome().binary('/path/to/chrome').get_driver()\nbrowser = Chrome(executable_path=driver_path)\nbrowser.get(\"http://www.google.com\")\nbrowser.quit()\n```\n\n## CLI and standalone usage\n```bash\npython -m driloader\n\nusage: driloader [-h] (--firefox | --chrome | --internet-explorer | --all)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --firefox, -f         get Firefox version.\n  --chrome, -c          get Google Chrome version.\n  --internet-explorer, -i\n                        get Internet Explorer version.\n  --all                 look for browsers an get their versions.\n```\n### Retrieve Firefox version\n```bash\n$  python -m driloader --firefox\n45\n```\n\n### Retrieve Google Chrome version\n```bash\n$  python -m driloader --chrome\n58\n```\n\n### Retrieve Internet Explorer version (Windows system)\n```cmd\n> python -m driloader -i\n11\n```\n\n### Retrieve all browsers version (Windows system)\n```bash\n> python -m driloader --all\nInternet Explorer: 11\nFirefox: 45\nGoogle Chrome: 58\n\n```\n\n### Retrieve all browsers version (non-Windows system)\n```bash\n# Getting from a non-Windows system\n$  python -m driloader --all\nInternet Explorer: Error: Unable to get the Internet Explorer version.\n        Cause: Error: Unable to retrieve IE version..\n        Cause: System is not Windows.\nFirefox: 45\nGoogle Chrome: 58\n\n```\n\n### Known Issues\n* Firefox will always download the latest version, that is compatible with Firefox >= 70.\n* IEDriver will always download the latest version.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "driloader",
    "package_url": "https://pypi.org/project/driloader/",
    "platform": "",
    "project_url": "https://pypi.org/project/driloader/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/driloader/1.2.6/",
    "requires_dist": [
      "certifi",
      "chardet",
      "idna",
      "requests",
      "urllib3"
    ],
    "requires_python": "",
    "summary": "Driver downloader for Selenium",
    "version": "1.2.6",
    "yanked": true,
    "yanked_reason": "Missing config file makes the lib unusable."
  },
  "last_serial": 10208352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c48f91204d30ec49cfba7a8b7b643ab5975f379ed119e048f3c5008ffcdde999",
        "md5": "dd2a7660426dbf62377b151836fadaa7",
        "sha256": "7f1ddc4a389f1c50d0c914c8f42d6df6d9539910c7a1332928d1ffff302e364b"
      },
      "downloads": -1,
      "filename": "driloader-1.2.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd2a7660426dbf62377b151836fadaa7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22429,
      "upload_time": "2021-04-19T17:43:49",
      "upload_time_iso_8601": "2021-04-19T17:43:49.456243Z",
      "url": "https://files.pythonhosted.org/packages/c4/8f/91204d30ec49cfba7a8b7b643ab5975f379ed119e048f3c5008ffcdde999/driloader-1.2.6-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "Missing config file makes the lib unusable."
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42579e8888177ea096d05a714b9a620749baf81023a76bb37d397f1126d3ad96",
        "md5": "7908e2af42d6c77566b58b55c9de2ad5",
        "sha256": "3be8c2b3d8d459991d0aec94aa7c1e7ff629634b257cb12cbe2569dfe5edf482"
      },
      "downloads": -1,
      "filename": "driloader-1.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "7908e2af42d6c77566b58b55c9de2ad5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17211,
      "upload_time": "2021-04-19T17:43:51",
      "upload_time_iso_8601": "2021-04-19T17:43:51.092621Z",
      "url": "https://files.pythonhosted.org/packages/42/57/9e8888177ea096d05a714b9a620749baf81023a76bb37d397f1126d3ad96/driloader-1.2.6.tar.gz",
      "yanked": true,
      "yanked_reason": "Missing config file makes the lib unusable."
    }
  ],
  "vulnerabilities": []
}