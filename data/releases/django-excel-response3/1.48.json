{
  "info": {
    "author": "Dan Petrikin",
    "author_email": "dan@pydojo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Topic :: Office/Business :: Financial :: Spreadsheet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-excel-response3\n======================\n\nThis is an overhaul of\nhttps://pypi.python.org/pypi/django-excel-response which was originally\nhttp://djangosnippets.org/snippets/1151/\n\n-  added class detection for values, and will use the value\n   str(class\\_value)\n-  added support for floats, dollar strings, and comma separated number\n   strings that were broken in other forks\n-  refactored the code to resemble an actual class, as opposed to one\n   giant init function\n-  removed the performance killing import every time you write a sheet,\n   xlwt is required. If you don’t like it use a CSV writer\n-  refactored the CSV writing portion of the code to actually use\n   python’s csv class\n-  added width auto adjustment\n\nUsage\n=====\n\n::\n\n    from excel_response3 import ExcelResponse\n\n    def excelview(request):\n        objs = SomeModel.objects.all()\n        return ExcelResponse(objs)\n\nor\n\n::\n\n    from excel_response3 import ExcelResponse\n\n    def excelview(request):\n        data = [\n            ['Column 1', 'Column 2'],\n            [1,2]\n            [23,67]\n        ]\n        return ExcelResponse(data, 'my_data')\n\nConstructor Kwargs\n==================\n\n-  headers - an array containing column headers\n-  output\\_name - maintaining this kwarg, but tries first to use the 2nd\n   arg passed when defining the class\n-  force\\_csv - forcibly respond with csv, defaults to False\n-  encoding - defaults to ‘utf8’\n-  sheet\\_name - defaults to ‘Sheet 1’\n-  blanks\\_for\\_none - replace None values with ’’, defaults to True\n-  auto\\_adjust\\_width - adjust width of each column automatically,\n   defaults to True",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/danpetrikin/django-excel-response/tarball/1.48",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/danpetrikin/django-excel-response/",
    "keywords": "excel,django",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-excel-response3",
    "package_url": "https://pypi.org/project/django-excel-response3/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-excel-response3/",
    "project_urls": {
      "Download": "https://github.com/danpetrikin/django-excel-response/tarball/1.48",
      "Homepage": "http://github.com/danpetrikin/django-excel-response/"
    },
    "release_url": "https://pypi.org/project/django-excel-response3/1.48/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A subclass of HttpResponse which will transform a QuerySet,\nor sequence of sequences, into either an Excel spreadsheet or\nCSV file formatted for Excel, depending on the amount of data.\nhttp://github.com/danpetrikin/django-excel-response/",
    "version": "1.48",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2159589,
  "urls": [],
  "vulnerabilities": []
}