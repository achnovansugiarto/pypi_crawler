{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Documentation](https://readthedocs.org/projects/django-gisserver/badge/?version=latest)](https://django-gisserver.readthedocs.io/en/latest/?badge=latest)\n[![Travis](https://img.shields.io/travis/amsterdam/django-gisserver.svg)](http://travis-ci.org/amsterdam/django-gisserver)\n[![PyPI](https://img.shields.io/pypi/v/django-gisserver.svg)](https://pypi.python.org/pypi/django-gisserver)\n[![MPL License](https://img.shields.io/badge/license-MPL%202.0-blue.svg)](https://pypi.python.org/pypi/django-gisserver)\n[![Coverage](https://img.shields.io/codecov/c/github/amsterdam/django-gisserver/master.svg)](https://codecov.io/github/amsterdam/django-gisserver?branch=master)\n\n# django-gisserver\n\nDjango speaking WFS 2.0 to expose geo data.\n\n## Features\n\n* WFS 2.0 Basic implementation.\n* GML 3.2 output.\n* Standard and spatial filtering (FES 2.0)\n* GeoJSON and CSV export formats.\n* Extensible view/operations.\n* Uses GeoDjango queries for filtering.\n* Streaming responses for large datasets.\n\n## Documentation\n\nFor more details, see: <https://django-gisserver.readthedocs.io/>\n\n\n## Quickstart\n\nInstall the module in your project:\n\n```bash\npip install django-gisserver\n```\n\nAdd it to the ``INSTALLED_APPS``:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"gisserver\",\n]\n```\n\nCreate a model that exposes a GeoDjango field:\n\n```python\nfrom django.contrib.gis.db.models import PointField\nfrom django.db import models\n\n\nclass Restaurant(models.Model):\n    name = models.CharField(max_length=200)\n    location = PointField(null=True)\n\n    def __str__(self):\n        return self.name\n```\n\nWrite a view that exposes this model as a WFS feature:\n\n```python\nfrom gisserver.features import FeatureType, ServiceDescription\nfrom gisserver.geometries import CRS, WGS84\nfrom gisserver.views import WFSView\nfrom .models import Restaurant\n\nRD_NEW = CRS.from_srid(28992)\n\n\nclass PlacesWFSView(WFSView):\n    \"\"\"An simple view that uses the WFSView against our test model.\"\"\"\n\n    xml_namespace = \"http://example.org/gisserver\"\n\n    # The service metadata\n    service_description = ServiceDescription(\n        title=\"Places\",\n        abstract=\"Unittesting\",\n        keywords=[\"django-gisserver\"],\n        provider_name=\"Django\",\n        provider_site=\"https://www.example.com/\",\n        contact_person=\"django-gisserver\",\n    )\n\n    # Each Django model is listed here as a feature.\n    feature_types = [\n        FeatureType(\n            Restaurant.objects.all(),\n            fields=\"__all__\",\n            other_crs=[RD_NEW]\n        ),\n    ]\n```\n\nUse that view in the URLConf:\n\n```python\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path(\"/wfs/places/\", views.PlacesWFSView.as_view()),\n]\n```\n\nYou can now use http://localhost:8000/wfs/places/ in your GIS application.\nIt will perform requests such as:\n\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=GetCapabilities&ACCEPTVERSIONS=2.0.0,1.1.0,1.0.0>\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=DescribeFeatureType&VERSION=2.0.0&TYPENAMES=restaurant>\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=GetFeature&VERSION=2.0.0&TYPENAMES=restaurant&STARTINDEX=0&COUNT=1000&SRSNAME=urn:ogc:def:crs:EPSG::28992>\n\nBy adding `&OUTPUTFORMAT=geojson` or `&OUTPUTFORMAT=csv` to the `GetFeature` request, the GeoJSON and CSV outputs are returned.\nThe CSV output has an unlimited page size, as it's quite performant.\n\n\n\n## Why this code is shared\n\nThe \"datapunt\" team of the Municipality of Amsterdam develops software for the municipality.\nMuch of this software is then published as Open Source so that other municipalities,\norganizations and citizens can use the software as a basis and inspiration to develop\nsimilar software themselves. The Municipality of Amsterdam considers it important that\nsoftware developed with public money is also publicly available.\n\nThis package is initially developed by the City of Amsterdam, but the tools\nand concepts created in this project can be used in any city.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amsterdam/django-gisserver",
    "keywords": "",
    "license": "Mozilla Public License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-gisserver",
    "package_url": "https://pypi.org/project/django-gisserver/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-gisserver/",
    "project_urls": {
      "Homepage": "https://github.com/amsterdam/django-gisserver"
    },
    "release_url": "https://pypi.org/project/django-gisserver/1.1.3/",
    "requires_dist": [
      "Django (>=2.0)",
      "defusedxml (>=0.6.0)",
      "orjson (>=2.4.0)",
      "dataclasses ; python_version == \"3.6\"",
      "django-environ (>=0.4.5) ; extra == 'test'",
      "psycopg2-binary (>=2.8.4) ; extra == 'test'",
      "lxml (>=4.5.0) ; extra == 'test'",
      "pytest (==6.2.3) ; extra == 'test'",
      "pytest-django (==4.1.0) ; extra == 'test'",
      "pytest-cov (==2.11.1) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Django speaking WFS 2.0 (exposing GeoDjango model fields)",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16387508,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fac5556468fe70069d9c64b05344f0f1a77d327e58ef6d9fce2c13ee2cd5db4",
        "md5": "05f0a11020ee179af6582cd61d746d3a",
        "sha256": "cbd77fd7cd08052e47320bdc226325d92bceb9ac9e64528934e5c71019f5dc7a"
      },
      "downloads": -1,
      "filename": "django_gisserver-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "05f0a11020ee179af6582cd61d746d3a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 104319,
      "upload_time": "2021-05-17T09:47:35",
      "upload_time_iso_8601": "2021-05-17T09:47:35.939431Z",
      "url": "https://files.pythonhosted.org/packages/9f/ac/5556468fe70069d9c64b05344f0f1a77d327e58ef6d9fce2c13ee2cd5db4/django_gisserver-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7aa12528f56142128597b91c0f67d4df7c6d84708d868fe060ca4fc394e2d6fb",
        "md5": "7f495d13343685d6a86cf960dfd93757",
        "sha256": "4c3639c66e2d7aae42b22fb3c8b73a59d0ee3f98f9389eeb885441c4cb817dea"
      },
      "downloads": -1,
      "filename": "django-gisserver-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7f495d13343685d6a86cf960dfd93757",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 86710,
      "upload_time": "2021-05-17T09:47:37",
      "upload_time_iso_8601": "2021-05-17T09:47:37.958784Z",
      "url": "https://files.pythonhosted.org/packages/7a/a1/2528f56142128597b91c0f67d4df7c6d84708d868fe060ca4fc394e2d6fb/django-gisserver-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}