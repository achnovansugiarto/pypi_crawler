{
  "info": {
    "author": "Marco Braak",
    "author_email": "mbraak@ridethepony.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "[![Build Status](https://travis-ci.org/mbraak/django-file-form.svg?branch=master)](https://travis-ci.org/mbraak/django-file-form) [![Version](https://badge.fury.io/py/django-file-form.svg)](https://pypi.python.org/pypi/django-file-form/)\n\n[![Coverage Status](https://img.shields.io/coveralls/mbraak/django-file-form.svg)](https://coveralls.io/r/mbraak/django-file-form?branch=master)\n[![Requirements Status](https://requires.io/github/mbraak/django-file-form/requirements.svg?branch=master)](https://requires.io/github/mbraak/django-file-form/requirements/?branch=master)\n\n[![License](https://img.shields.io/pypi/l/django-file-form.svg)](https://pypi.python.org/pypi/django-file-form/)\n\n# Django file form\n\n**Django-file-form** helps you to write forms with a pretty ajax upload.\n\nFeatures:\n\n* You can easily add an ajax file-upload to a form.\n* The ajax upload works the same as an html upload.\n    * This means that you don't have to change your code to support ajax upload.\n* Supports single and multiple file upload.\n\nThe project is hosted on [github](https://github.com/mbraak/django-file-form).\n\nWorks with Django 2.0 - 3.0. Also with Python 3.6 - 3.7\n\nNote that version 0.5.0 also supports Django 1.11.\n\n## Usage\n\n**1 Install django-file-form**\n\n```\npip install django-file-form\n```\n\n**2 Add the apps to your INSTALLED_APPS**\n\nYou must include 'django_file_form' and 'django_file_form.ajaxuploader'\n\n```python\nINSTALLED_APPS = [\n    'django_file_form',\n    'django_file_form.ajaxuploader',\n]\n```\n\n**3 Add the app to your urls**\n\nIn this example we use the url **upload/**. You can use a different url if you like.\n\n```python\nurlpatterns = patterns(\n    '',\n    url(r'^upload/', include('django_file_form.urls')),\n)\n```\n\n**4 Add FileFormMixin to your form**\n\n```python\nfrom django_file_form.forms import FileFormMixin\n\nclass ExampleForm(FileFormMixin, forms.Form):\n    pass\n```\n\n**5 Add a UploadedFileField**\n\n```python\nfrom django_file_form.forms import FileFormMixin, UploadedFileField\n\nclass ExampleForm(FileFormMixin, forms.Form):\n    input_file = UploadedFileField()\n```\n\n**6 Include javascript and css in your template**\n\n```html\n<script src=\"{% static \"ajaxuploader/js/fileuploader.js\" %}\"></script>\n<script src=\"{% static \"file_form/file_form.js\" %}\"></script>\n<link rel=\"stylesheet\" href=\"{% static \"ajaxuploader/css/fileuploader.css\" %}\">\n```\n\nYou must also include jquery\n\n**7 Call the initUploadFields javascript function**\n\n```html\n<form id=\"example-form\" method=\"POST\" enctype=\"multipart/form-data\">\n    {% csrf_token %}\n    {{ form }}\n</form>\n\n<script>\n   $(function() {\n       initUploadFields($('#example-form'));\n   });\n</script>\n```\n\nIf your form has a prefix, then call `initUploadFields` as follows:\n\n```js\n  // for example, with prefix 'abc'\n  initUploadFields($('#example-form'), { prefix: 'abc' });\n```\n\nSee the [Django documentation](https://docs.djangoproject.com/en/2.1/ref/forms/api/#prefixes-for-forms) for more information about form prefixes.\n\n**8 Include the upload_template.html in your template**\n\n```html\n{% include 'django_file_form/upload_template.html' %}\n```\n\n**9 Handle uploaded files**\n\n```python\nclass ExampleFormView(generic.FormView):\n    template_name = 'example_form.html'\n    form_class = forms.ExampleForm\n\n    def form_valid(self, form):\n        input_file = form.cleaned_data['input_file']\n\n        return super(ExampleFormView, self).form_valid(form)\n```\n\n**10 Delete temporary files**\n\n```python\nclass ExampleFormView(generic.FormView):\n    template_name = 'example_form.html'\n    form_class = forms.ExampleForm\n\n    def form_valid(self, form):\n        input_file = form.cleaned_data['input_file']\n\n        form.delete_temporary_files()\n\n        return super(ExampleFormView, self).form_valid(form)\n```\n\nAlso see the testproject in the repository.\n\n## Settings\n\nSettings in `settings.py`:\n\n* **FILE_FORM_MUST_LOGIN** (True / False):\n  * Must the user be logged in to upload a file.\n  * The default is `False`.\n\n* **FILE_FORM_UPLOAD_DIR** (string):\n  * The directory for the temporary uploads.\n  * The setting is not full path, but must be a subdirectory of `MEDIA_ROOT`.\n  * The default is `temp_uploads`.\n\n* **FILE_FORM_FILE_STORAGE** (string):\n  * The class that is used to store the temporary uploads.\n  * The default is `django.core.files.storage.FileSystemStorage`.\n\n* **FILE_FORM_UPLOAD_BACKEND** (string)\n  * The class that is used for the upload backend.\n  * This makes it possible to write your upload backend.\n  * The default is `django_file_form.uploader.FileFormUploadBackend`.\n\n\n## Changelog\n\n* **1.0 (5 december 2019)**\n  * Issue #217: update fine uploader\n  * Issue #219: use Selenium for all tests\n  * Issue #222: use pathlib2 (instead of pathlib)\n  * Issue #235: support Django 3.0\n\n* **0.5.0 (3 April 2019)**\n  * Issue #208: skip install of pathlib for python >= 3.4 (thanks to Simon Maillard)\n  * Issue #212: support Django 2.2\n\n* **0.4.2 (3 March 2019)**\n  * Issue #207: support form prefixes (thanks to Iw108)\n  * Issue #201: fix multiple file upload without ajax (thanks to Lionqueen94)\n* **0.4.1 (5 January 2019)**\n  * Issue #194: correctly call `is_authenticated` (thanks to Dureba)\n* **0.4.0 (3 August 2018)**\n  * Support Django 2.1 and Python 3.7\n  * Issue #173: add i18n to upload widget (thanks to Arman Roomana)\n* **0.3.0 (6 December 2017)**\n  * Support Django 2.0\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbraak/django-file-form",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-file-form",
    "package_url": "https://pypi.org/project/django-file-form/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-file-form/",
    "project_urls": {
      "Homepage": "https://github.com/mbraak/django-file-form"
    },
    "release_url": "https://pypi.org/project/django-file-form/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-file-form helps you to write forms with a pretty ajax upload",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16615564,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af9c538db9158fa4490b94c0237521a8526bb98191264d626f458d17c89e3d10",
        "md5": "1d6e42ce076a084a211078d2a59656ba",
        "sha256": "a8d3e69ff7d91bda360da4d5b2510d0cc80444ac8feb4758759a83749dd60d87"
      },
      "downloads": -1,
      "filename": "django_file_form-1.0.1-py3.7.egg",
      "has_sig": false,
      "md5_digest": "1d6e42ce076a084a211078d2a59656ba",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 87951,
      "upload_time": "2019-12-05T09:09:59",
      "upload_time_iso_8601": "2019-12-05T09:09:59.282139Z",
      "url": "https://files.pythonhosted.org/packages/af/9c/538db9158fa4490b94c0237521a8526bb98191264d626f458d17c89e3d10/django_file_form-1.0.1-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d790a3fd214590f28bbdcee5597295aea46a45f351f701365ebf5a2d85894d85",
        "md5": "4b6dc3844aa11bfb80829fe46beb7557",
        "sha256": "660edd6dc53de36d9fefc6e01e12062805b1f091b4914af937a42f58fd946643"
      },
      "downloads": -1,
      "filename": "django_file_form-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b6dc3844aa11bfb80829fe46beb7557",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 89782,
      "upload_time": "2019-12-05T09:09:55",
      "upload_time_iso_8601": "2019-12-05T09:09:55.765179Z",
      "url": "https://files.pythonhosted.org/packages/d7/90/a3fd214590f28bbdcee5597295aea46a45f351f701365ebf5a2d85894d85/django_file_form-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4e96165cc513fde12780d121569e37bdbf34710af0ef5e6a72cff7b9d1859fe",
        "md5": "3d105b208feaa84bf78e10fce4831f4e",
        "sha256": "20a50b0003d2968c7910d453cbb4cbad7557ac949d0be8256332bbcf66fd3701"
      },
      "downloads": -1,
      "filename": "django-file-form-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3d105b208feaa84bf78e10fce4831f4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 83462,
      "upload_time": "2019-12-05T09:09:57",
      "upload_time_iso_8601": "2019-12-05T09:09:57.486221Z",
      "url": "https://files.pythonhosted.org/packages/b4/e9/6165cc513fde12780d121569e37bdbf34710af0ef5e6a72cff7b9d1859fe/django-file-form-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}