{
  "info": {
    "author": "Marco Braak",
    "author_email": "mbraak@ridethepony.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "[![Build Status](https://travis-ci.org/mbraak/django-file-form.svg?branch=master)](https://travis-ci.org/mbraak/django-file-form) [![Version](https://badge.fury.io/py/django-file-form.svg)](https://pypi.python.org/pypi/django-file-form/)\n\n[![Coverage Status](https://img.shields.io/coveralls/mbraak/django-file-form.svg)](https://coveralls.io/r/mbraak/django-file-form?branch=master)\n[![Requirements Status](https://requires.io/github/mbraak/django-file-form/requirements.svg?branch=master)](https://requires.io/github/mbraak/django-file-form/requirements/?branch=master)\n\n[![License](https://img.shields.io/pypi/l/django-file-form.svg)](https://pypi.python.org/pypi/django-file-form/)\n\n# Django file form\n\n**Django-file-form** helps you to write forms with a pretty ajax upload.\n\nFeatures:\n\n* You can easily add an ajax file-upload to a form.\n* The ajax upload works the same as an html upload.\n    * This means that you don't have to change your code to support ajax upload.\n* Supports single and multiple file upload.\n\nThe project is hosted on [github](https://github.com/mbraak/django-file-form).\n\nWorks with Django 2.0 - 3.0. Also with Python 3.6 - 3.8\n\nOlder versions:\n* 1.0.1 uses fine uploader for the javascript part\n* 0.5.0 supports Django 1.11 and Python 2.\n\nVersion 2.0 has changed: see 'Upgrade from version 1.0' below, if you're upgrading from version 1.0 (or lower).\n\n## Usage\n\n**1 Install django-file-form**\n\n```\npip install django-file-form\n```\n\n**2 Add the apps to your INSTALLED_APPS**\n\nYou must include 'django_file_form'\n\n```python\nINSTALLED_APPS = [\n    'django_file_form',\n]\n```\n\n**3 Add the app to your urls**\n\nIn this example we use the url **upload/**. You can use a different url if you like.\n\n```python\nurlpatterns = patterns(\n    '',\n    url(r'^upload/', include('django_file_form.urls')),\n)\n```\n\n**4 Add FileFormMixin to your form**\n\n```python\nfrom django_file_form.forms import FileFormMixin\n\nclass ExampleForm(FileFormMixin, forms.Form):\n    pass\n```\n\n**5 Add a UploadedFileField**\n\n```python\nfrom django_file_form.forms import FileFormMixin, UploadedFileField\n\nclass ExampleForm(FileFormMixin, forms.Form):\n    input_file = UploadedFileField()\n```\n\nImport and use `MultipleUploadedFileField` if you intent to add multiple files.\n\n**6 Include javascript and css in your template**\n\n```js\n<script src=\"{% static \"file_form/file_form.js\" %}\"></script>\n<link rel=\"stylesheet\" href=\"{% static \"file_form/file_form.css\" %}\">\n```\n\nThere is also an uncompressed javascript version: `file_form/file_form.debug.js`.\n\n**7 Call the initUploadFields javascript function**\n\n```html\n<form id=\"example-form\" method=\"POST\" enctype=\"multipart/form-data\">\n    {% csrf_token %}\n    {{ form }}\n</form>\n\n<script>\n   initUploadFields(\n      document.getElementById(\"example-form\")\n   );\n</script>\n```\n\nIf your form has a prefix, then call `initUploadFields` as follows:\n\n```js\n  // for example, with prefix 'abc'\n  initUploadFields(\n    document.getElementById(\"example-form\"),\n    { prefix: 'abc' }\n  );\n```\n\nSee the [Django documentation](https://docs.djangoproject.com/en/2.1/ref/forms/api/#prefixes-for-forms) for more information about form prefixes.\n\n**8 Handle uploaded files**\n\n```python\nclass ExampleFormView(generic.FormView):\n    template_name = 'example_form.html'\n    form_class = forms.ExampleForm\n\n    def form_valid(self, form):\n        input_file = form.cleaned_data['input_file']\n\n        return super(ExampleFormView, self).form_valid(form)\n```\n\n**9 Delete temporary files**\n\n```python\nclass ExampleFormView(generic.FormView):\n    template_name = 'example_form.html'\n    form_class = forms.ExampleForm\n\n    def form_valid(self, form):\n        input_file = form.cleaned_data['input_file']\n\n        form.delete_temporary_files()\n\n        return super(ExampleFormView, self).form_valid(form)\n```\n\n## Details\n\n**1 Include hidden fields**\n\nMake sure that hidden form fields are included:\n\n```python\n{% for hidden in form.hidden_fields %}\n    {{ hidden }}\n{% endfor %}\n```\n\nNB: it's possible that the hidden fields are already included; for example if you use ``form.as_p``. Do not include the hidden fields twice.\n\nAlso see the testproject in the repository.\n\n**2 Temp upload dir must exist**\n\nMake sure the `FILE_FORM_UPLOAD_DIR` directory exists.\n\n```python\ntemp_upload_dir = os.path.join(settings.MEDIA_ROOT,  settings.FILE_FORM_UPLOAD_DIR)\n\nif not os.path.exists(temp_upload_dir):\n  os.mkdir(temp_upload_dir)\n```\n\n**3 Adding placeholder files**\n\nIf you have used `django-file-form` to upload files, potentially have saved the files elsewhere, but would like to use `django-file-form` to edit (remove or replace) the original uploaded files and append new files, you can add information about the original uploaded files as placeholders to the `UploadedFileField`. More specifically, you can initialize your field with one or more `PlaceholderUploadedFile` as follows:\n\n```python\nfrom django_file_form.models import PlaceholderUploadedFile\n\ninitial['my_field'] = [\n  PlaceholderUploadedFile('manage.py')\n]\n```\n\nYou can also add options `size` and `file_id` to specify file size if the file does not exist locally, and an unique ID of the file, respectively.\n\n```python\ninitial['my_field'] = [\n  PlaceholderUploadedFile('manage.py', size=12394, file_id=my_file.pk)\n]\n```\n\nThe placeholder file will be listed, and will either be kept intact, or be removed. When you save the form, you will have to handle the placeholders as follows:\n\n```python\nfor f in self.cleaned_data['my_field']:\n    if f.is_placeholder:\n        # do nothing, or something with f.name or f.file_id\n        continue\n    # handle newly uploaded files as usual\n\n# remove existing files if the placeholders are deleted\n# ...\n```\n\n## Upgrade from version 1.0 (to 2.0)\n\n* Add reference to file_form/file_form.css:\n  * `<link rel=\"stylesheet\" href=\"{% static \"file_form/file_form.css\" %}\">`\n* Remove `django_file_form.ajaxuploader` from `INSTALLED_APPS` in your settings\n* Remove reference to `ajaxuploader/js/fileuploader.js` in your template\n* Remove reference to `ajaxuploader/css/fileuploader.css` in your template\n* You don't have to include jquery; the fileuploader doesn't use it\n* The setting `FILE_FORM_UPLOAD_BACKEND` is removed\n* If you use custom css, you might have to change it.\n  * The html uses the prefix `dff` now.\n\n## Settings\n\nSettings in `settings.py`:\n\n* **FILE_FORM_MUST_LOGIN** (True / False):\n  * Must the user be logged in to upload a file.\n  * The default is `False`.\n\n* **FILE_FORM_UPLOAD_DIR** (string):\n  * The directory for the temporary uploads.\n  * The setting is relative to `MEDIA_ROOT`.\n  * The default is `temp_uploads`.\n\n* **FILE_FORM_MAX_FILE_SIZE** (int)\n  * Maximum upload size in bytes\n  * Default is 4GB\n\n## initUploadFields\n\nSignature of `initUploadFields` is:\n\n```\ninitUploadFields(formDomElement, options);\n```\n\n* `formDomElement` (required); e.g. `document.getElementById(\"example-form\")`\n* options (optional)\n  * `callbacks`: callbacks for things like upload progress and errors.\n  * `prefix` : set this if the Django form has a prefix; default is empty\n  * `retryDelays`: set retry delays\n    * Also see `https://github.com/tus/tus-js-client#tusdefaultoptions`\n    * Default is `[0, 1000, 3000, 5000]`\n  * `skipRequired` : don't set the `required` field of the file input; default is `false`\n  * `supportDropArea` : add a drop area; default is `true`\n\nThe callbacks are:\n  * `onDelete`\n    * called when file is deleted\n    * Signature of callback is `function(upload)`\n  * `onError`:\n    * called when an upload error occurs\n    * Signature of callback is `function(error, upload)`\n      * `error`: javascript Error\n  * `onProgress`:\n    * Called each time when progress information is available.\n    * Signature of callback is `function(bytesUploaded, bytesTotal, upload)`\n  * `onSuccess`:\n    * Called when file upload is done.\n    * Signature of callback is `function(upload)`\n\nThe callbacks receive an `upload` parameter which is [this class](https://github.com/tus/tus-js-client#new-tusuploadfile-options).\n\nExamples:\n\n```js\ninitUploadFields(\n  document.getElementById(\"example-form\")\n);\n```\n\n```js\ninitUploadFields(\n  document.getElementById(\"example-form\"),\n  {\n    prefix: \"example\",\n    skipRequired: true,\n    supportDropArea: true\n  }\n);\n```\n\n## Form sets\n\nYou can also use a form set instead of a form. In that case `initFormSet` (instead of `initUploadFields`)\nin your javascript code.\n\n```\ninitFormSet(form_element, options)\n```\n\n```js\ninitFormSet(\n  document.getElementById(\"example-form\"),\n  { prefix: \"form\" }\n);\n```\n\n* Note that the default form set prefix is `form`.\n* Also see the `testproject` directory in the repository for an example.\n\n## Changelog\n\n* **2.1.2 (20 april 2020)**\n  * Issue #298: directory support for drop area\n  * Issue #300: add migration so makemigrations will not create one (thanks to Lionqueen94)\n\n* **2.1.1 (7 april 2020)**\n  * Issue #290: add javascript callbacks (thanks to Peter Dekkers)\n  * Issue #296: fix progress bar\n  * Issue #297: add retry delays\n\n* **2.1.0 (28 march 2020)**\n  * Issue #266: allow relative `FILE_FORM_UPLOAD_DIR` setting (thanks to Bo Peng)\n  * Issue #267: add drop area (thanks to Bo Peng)\n  * Issue #275: show size of uploaded files (thanks to Bo Peng)\n  * Issue #278: allow the addition of placeholder files (thanks to Bo Peng)\n  * Issue #280: remove option `FILE_FORM_FILE_STORAGE`\n\n* **2.0.3 (15 february 2020)**\n  * Issue #237: using with form set (thanks to Juan Carlos Carvajal)\n  * Issue #259: include uncompressed js\n  * Issue #260: correctly use formset prefix (thanks to Gzuba)\n  * Issue #261: fix default for `FILE_FORM_UPLOAD_DIR` (thanks to Gzuba)\n\n* **2.0.2 (14 january 2020)**\n  * Issue #247: support form wizard (thanks to Lionqueen94)\n  * Issue #251: delete after submit\n\n* **2.0.1 (6 january 2020)**\n  * Issue #240: add empty dff files div (thanks to Lionqueen94)\n  * Issue #241: Csp compliance (thanks to Lionqueen94)\n\n* **2.0 (30 december 2019)**\n  * Use tus instead of fine uploader\n\n* **1.0 (5 december 2019)**\n  * Drop support for Python 2 and Django < 2\n  * Issue #217: update fine uploader\n  * Issue #219: use `Selenium` for all tests\n  * Issue #222: use `pathlib2` (instead of pathlib)\n  * Issue #235: support Django 3.0\n\n* **0.4.2 (3 March 2019)**\n  * Issue #207: support form prefixes (thanks to Iw108)\n  * Issue #201: fix multiple file upload without ajax (thanks to Lionqueen94)\n\n* **0.4.1 (5 January 2019)**\n  * Issue #194: correctly call `is_authenticated` (thanks to Dureba)\n\n* **0.4.0 (3 August 2018)**\n  * Support Django 2.1 and Python 3.7\n  * Issue #173: add i18n to upload widget (thanks to Arman Roomana)\n\n* **0.3.0 (6 December 2017)**\n  * Support Django 2.0\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbraak/django-file-form",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-file-form",
    "package_url": "https://pypi.org/project/django-file-form/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-file-form/",
    "project_urls": {
      "Homepage": "https://github.com/mbraak/django-file-form"
    },
    "release_url": "https://pypi.org/project/django-file-form/2.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-file-form helps you to write forms with a pretty ajax upload",
    "version": "2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16615564,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66bb6fca8abda957fd739dc5a7738aebdea754a065ef44a458295db718051078",
        "md5": "88d1fbcdb664781e032c1b64219f53b7",
        "sha256": "0507084fb5ee408fac1b3b5af1b4c65cbeaae137010a5ed935b0da1bff4dc888"
      },
      "downloads": -1,
      "filename": "django_file_form-2.1.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "88d1fbcdb664781e032c1b64219f53b7",
      "packagetype": "bdist_egg",
      "python_version": "3.8",
      "requires_python": null,
      "size": 162370,
      "upload_time": "2020-04-20T11:59:30",
      "upload_time_iso_8601": "2020-04-20T11:59:30.798472Z",
      "url": "https://files.pythonhosted.org/packages/66/bb/6fca8abda957fd739dc5a7738aebdea754a065ef44a458295db718051078/django_file_form-2.1.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22856151b772b3b0ed129e38bce1234a9564b1f61f8be96b8a21e0388cc5c0b8",
        "md5": "de7c49ff2afddc08f8008816eb819ea4",
        "sha256": "6d84bfb7784aaa8bb039768f545d95849b02cbaf870ea7e9cf960464ac5eca19"
      },
      "downloads": -1,
      "filename": "django_file_form-2.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de7c49ff2afddc08f8008816eb819ea4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 163940,
      "upload_time": "2020-04-20T11:59:27",
      "upload_time_iso_8601": "2020-04-20T11:59:27.127383Z",
      "url": "https://files.pythonhosted.org/packages/22/85/6151b772b3b0ed129e38bce1234a9564b1f61f8be96b8a21e0388cc5c0b8/django_file_form-2.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08a0ab6c10f536472fd04273a054a297005d0883686b6cc7af23e013c0912ca4",
        "md5": "f754c48a485170c9fad9cc3fd55ca73a",
        "sha256": "51fe4cbe53051dde4d6c6baac325dd6e9cc3077d39ed1ccc0295bcddb6ef15b8"
      },
      "downloads": -1,
      "filename": "django-file-form-2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f754c48a485170c9fad9cc3fd55ca73a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 162252,
      "upload_time": "2020-04-20T11:59:29",
      "upload_time_iso_8601": "2020-04-20T11:59:29.024597Z",
      "url": "https://files.pythonhosted.org/packages/08/a0/ab6c10f536472fd04273a054a297005d0883686b6cc7af23e013c0912ca4/django-file-form-2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}