{
  "info": {
    "author": "CodeWriter21(Mehrad Pooryoussof)",
    "author_email": "<CodeWriter21@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "log21\n=====\n\n![version](https://img.shields.io/pypi/v/log21)\n![stars](https://img.shields.io/github/stars/MPCodeWriter21/log21)\n![forks](https://img.shields.io/github/forks/MPCodeWriter21/log21)\n![repo size](https://img.shields.io/github/repo-size/MPCodeWriter21/log21)\n\nA simple logging package that helps you log colorized messages in Windows console and other operating systems.\n\nFeatures\n--------\n\n+ Colors : Main reason for this package was to have a simple logging package that can be used in Windows console and\n  supports ANSI colors.\n+ Argument parsing : log21's argument parser can be used like python's argparse but it also colorizes the output.\n+ Logging : A similar logger to logging.Logger but with colorized output and other options such as levelname\n  modifications. It can also decolorize the output if you want to log to a file.\n+ Pretty printing : Have you ever wanted to colorize the output of the pprint module? log21's pretty printer can do\n  that.\n+ Tree printing : You can pass a dict or list to log21.tree_print function and it will print it in a tree like\n  structure. Its also colorized XD.\n+ ProgressBar : log21's progress bar can be used to show progress of a process in a beautiful way.\n+ LoggingWindow : Helps you to log messages and debug your code in a window other than the\n  console. (<span style=\"color:red\"> !! New Feature !!</span> - More features soon)\n+ Any idea? Feel free to [open an issue](https://github.com/MPCodeWriter21/log21/issues) or submit a pull request.\n\n![issues](https://img.shields.io/github/issues/MPCodeWriter21/log21)\n![contributors](https://img.shields.io/github/contributors/MPCodeWriter21/log21)\n\nInstallation\n------------\n\nWell, this is a python package so the first thing you need is python.\n\nIf you don't have python installed, please visit [Python.org](https://python.org) and install the latest version of\npython.\n\nThen you can install log21 using pip module:\n\n```shell\npython -m pip install log21 -U\n```\n\nOr you can clone [the repository](https://github.com/MPCodeWriter21/log21) and run:\n\n```shell\npython setup.py install\n```\n\nChanges\n-------\n\n### 2.1.0\n\nAdded optional shell support to the LoggingWindow.\n\n[Full Changes Log](https://github.com/MPCodeWriter21/log21/blob/master/CHANGES-LOG.md)\n\n\nUsage Examples:\n---------------\n\n```python3\nimport log21\n\nlog21.print(log21.get_color('#FF0000') + 'This' + log21.get_color((0, 255, 0)) + ' is' + log21.get_color('Blue') +\n            ' Blue' + log21.get_colors('BackgroundWhite', 'Black') + ' 8)')\n\nlogger = log21.get_logger('My Logger', level_names={21: 'SpecialInfo', log21.WARNING: ' ! ', log21.ERROR: '!!!'})\nlogger.info('You are reading the README.md file...')\n\nlogger.log(21, 'Here', '%s', 'GO!', args=('we',))\n\nlogger.setLevel(log21.WARNING)\nlogger.warning(\"We can't log messages with a level less than 30 anymore!\")\n\nlogger.debug(\"You won't see this!\")\nlogger.info(\"Am I visible?\")\n\nlogger.error(log21.get_colors('LightRed') + \"I'm still here ;1\")\n```\n\n![Basic Logging](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-1.png)\n\n----------------\n\n```python3\nimport log21\nfrom log21 import ColorizingArgumentParser, get_logger, get_colors as gc\n\nparser = ColorizingArgumentParser(description=\"This is a simple example of a ColorizingArgumentParser.\",\n                                  colors={'help': 'LightCyan'})\nparser.add_argument('test1', action='store', help='Test 1')\nparser.add_argument('test2', action='store', help='Test 2')\nparser.add_argument('--optional-arg', '-o', action='store', type=int, help='An optional integer')\nparser.add_argument('--verbose', '-v', action='store_true', help='Increase verbosity.')\n\nargs = parser.parse_args()\n\nlogger = get_logger('My Logger', level_names={log21.DEBUG: ' ? ', log21.INFO: ' + ', log21.WARNING: ' ! ',\n                                              log21.ERROR: '!!!'})\n\nif args.verbose:\n    logger.setLevel(log21.DEBUG)\nelse:\n    logger.setLevel(log21.INFO)\n\nlogger.debug(gc('LightBlue') + 'Verbose mode on!')\n\nlogger.debug('Arguments:\\n'\n             '\\tTest 1: %s\\n'\n             '\\tTest 2: %s\\n'\n             '\\tOptional: %s', args=(args.test1, args.test2, args.optional_arg))\n\nlogger.info(gc('LightGreen') + args.test1)\n\nlogger.info(gc('LightWhite') + 'Done!')\n\n```\n\n![No argument](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-2.1.png)\n\n![Help](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-2.2.png)\n\n![Valid example 1](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-2.3.png)\n\n![Valid example 2](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-2.4.png)\n\n![Valid example 3](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-2.5.png)\n\n------------------\n\n```python3\nimport json\nimport log21\n\ndata = json.load(open('json.json', 'r'))\n\n# Prints data using python's built-in print function\nprint(data)\n\n# Uses `log21.pprint` to print the data\nlog21.pprint(data)\n\n# Uses `log21.tree_print` to print the data\nlog21.tree_print(data)\n```\n\n![Python print](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-3.1.png)\n![log21 pretty print](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-3.2.png)\n![log21 tree print 1](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-3.3.1.png)\n![log21 tree print 1](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-3.3.2.png)\n\n------------------\n\n```python3\nimport log21\n\nwindow = log21.get_logging_window('My Logging Window', width=80)\nwindow.font = ('Courier New', 9)\n\n# Basic logging\nwindow.info('This is a basic logging message.')\n\n# Using ANSI and HEX colors\n# List of ANSI colors: https://en.wikipedia.org/wiki/ANSI_escape_code#Colors\n# ANSI color format: \\033[<attribute>m\nwindow.info('\\033[91mThis is RED message.')\nwindow.info('\\033[102mThis is message with GREEN background.')\n# HEX color format: \\033#<HEX-COLOR>hf (where f represents the foreground color) and\n# \\033#<HEX-COLOR>hb (where b represents the background color)\nwindow.info('\\x1b#009900hbThis is a text with GREEN background.')\nwindow.info('\\033#0000FFhf\\033[103mThis is message with BLUE foreground and YELLOW background.')\n\nimport random, string\n\n# And here is a text with random colors\ntext = 'I have random colors XD'\ncolored_text = ''\nfor character in text:\n    color = '\\033#' + ''.join(random.choice(string.hexdigits) for _ in range(6)) + 'hf'\n    colored_text += color + character\n\nwindow.error(colored_text)\n\n# See more examples in \n# https://github.com/MPCodeWriter21/log21/blob/066efc1e72542531012d36974bbf6cd4c5941378/log21/LoggingWindow.py#L155\n# and\n# https://github.com/MPCodeWriter21/log21/blob/066efc1e72542531012d36974bbf6cd4c5941378/log21/__init__.py#L144\n\n```\n\n![The LoggingWindow](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-4.png)\n\n------------------\n\n```python3\n# Example 1\nimport log21, time\n\n# Define a very simple log21 progress bar\nprogress_bar = log21.ProgressBar()\n\n# And here is a simple loop that will print the progress bar\nfor i in range(100):\n    progress_bar(i + 1, 100)\n    time.sleep(0.08)\n\n# Example 2\nimport time, random\nfrom log21 import ProgressBar, get_colors as gc\n\n# Let's customize the progress bar a little bit this time\nprogress_bar = ProgressBar(\n    width=50,\n    fill='#',\n    empty='-',\n    prefix='[',\n    suffix=']',\n    colors={'progress in-progress': gc('Bright Red'), 'progress complete': gc('Bright Cyan'),\n            'percentage in-progress': gc('Green'), 'percentage complete': gc('Bright Cyan'),\n            'prefix-color in-progress': gc('Bright White'), 'prefix-color complete': gc('Bright White'),\n            'prefix-color failed': gc('Bright White'), 'suffix-color in-progress': gc('Bright White'),\n            'suffix-color complete': gc('Bright White'), 'suffix-color failed': gc('Bright White')})\n\nfor i in range(84):\n    progress_bar(i + 1, 84)\n    time.sleep(random.uniform(0.05, 0.21))\n\n```\n\n![ProgressBar - Example 1](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-5.1.gif)\n![ProgressBar - Example 2](https://github.com/MPCodeWriter21/log21/raw/master/screen-shots/example-5.2.gif)\n\nAbout\n-----\nAuthor: CodeWriter21 (Mehrad Pooryoussof)\n\nGitHub: [MPCodeWriter21](https://github.com/MPCodeWriter21)\n\nTelegram Channel: [@CodeWriter21](https://t.me/CodeWriter21)\n\nAparat Channel: [CodeWriter21](https://www.aparat.com/CodeWriter21)\n\n### License\n\n![License](https://img.shields.io/github/license/MPCodeWriter21/log21)\n\n[apache-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n### Donate\n\nIn order to support this project you can donate some crypto of your choice 8D\n\n[Donate Addresses](https://github.com/MPCodeWriter21/log21/blob/master/DONATE.md)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MPCodeWriter21/log21",
    "keywords": "python,log,colorize,color,logging",
    "license": "Apache-2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "log21",
    "package_url": "https://pypi.org/project/log21/",
    "platform": null,
    "project_url": "https://pypi.org/project/log21/",
    "project_urls": {
      "Homepage": "https://github.com/MPCodeWriter21/log21"
    },
    "release_url": "https://pypi.org/project/log21/2.1.0/",
    "requires_dist": [
      "webcolors"
    ],
    "requires_python": "",
    "summary": "A simple logging package that helps you log colorized messages in Windows console.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16949368,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "270f3067d034c754332786d886589719568979cdd37b49532d84e46de6cea185",
        "md5": "5c7f485f4c8b8041e3ccdd8b8817716e",
        "sha256": "dcae1fa8dd7cfae576a058cfb8e04f987657df9958fa5bb55d3330ed1827f4ad"
      },
      "downloads": -1,
      "filename": "log21-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c7f485f4c8b8041e3ccdd8b8817716e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 41005,
      "upload_time": "2022-06-01T16:40:10",
      "upload_time_iso_8601": "2022-06-01T16:40:10.722389Z",
      "url": "https://files.pythonhosted.org/packages/27/0f/3067d034c754332786d886589719568979cdd37b49532d84e46de6cea185/log21-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca6da05f8cfb2e44fbd8f9fdc18634981f60d76d6dc44611bfdd937b3a60eab4",
        "md5": "4f22a305a3ee021477143d2b6261bfac",
        "sha256": "ee856a0b0331b2304a02c59904da344da836df396bfe950e7440474f5e484053"
      },
      "downloads": -1,
      "filename": "log21-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4f22a305a3ee021477143d2b6261bfac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39484,
      "upload_time": "2022-06-01T16:40:12",
      "upload_time_iso_8601": "2022-06-01T16:40:12.486680Z",
      "url": "https://files.pythonhosted.org/packages/ca/6d/a05f8cfb2e44fbd8f9fdc18634981f60d76d6dc44611bfdd937b3a60eab4/log21-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}