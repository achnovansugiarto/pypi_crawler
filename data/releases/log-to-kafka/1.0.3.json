{
  "info": {
    "author": "cn",
    "author_email": "308299269@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "log_to_kafka\r\n============\r\nDESCRIPTION\r\n-----------\r\n- 将日志发送到kafka中，做日志分布式管理\r\nINSTALL\r\n-------\r\nubuntu & windows\r\n>>>>>>>>>>>>>>>>\r\n\r\n::\r\n\r\n    git clone https://github.com/ShichaoMa/log_to_kafka.git\r\n    sudo python setup.py  install\r\n\r\n    or\r\n\r\n    sudo pip install log_to_kafka\r\n\r\nHELLOWORLD\r\n----------\r\ndemo1\r\n>>>>>\r\n::\r\n\r\n    from log_to_kafka import Logger\r\n    class MyClass(Logger):\r\n    name = \"log_name\"\r\n    def __init__(self, settings_file):\r\n        super(MyClass, self).__init__(settings_file)\r\n\r\n\r\n    MC = MyClass(\"default_settings.py\")\r\n    MC.set_logger()\r\n    MC.logger.debug(\"....\")\r\n\r\ndemo2\r\n>>>>>\r\n::\r\n\r\n    import os\r\n    from log_to_kafka import LogFactory\r\n    from cloghandler import ConcurrentRotatingFileHandler\r\n    my_dir = \"logs\"\r\n    try:\r\n    os.makedirs(my_dir)\r\n    except OSError as exception:\r\n    if exception.errno != errno.EEXIST:\r\n        raise\r\n    logger = LogFactory.get_instance(name=\"test_name\")\r\n    logger.set_handler(\r\n    ConcurrentRotatingFileHandler(\r\n        os.path.join(my_dir, \"test.log\"),\r\n        backupCount=5,\r\n        maxBytes=10240))\r\n    logger.info(\"this is a log. \")\r\n\r\ndemo3\r\n>>>>>\r\n::\r\n\r\n    from log_to_kafka import LogFactory, KafkaHandler\r\n    settings = {\"KAFKA_HOSTS\":\"192.168.200.90:9092\", \"TOPIC\":\"jay-cluster-logs\"}\r\n    logger = LogFactory.get_instance(name=\"test_name\", json=True)\r\n    kafka_handler = KafkaHandler(settings)\r\n    logger.set_handler(kafka_handler)\r\n    logger.info(\"this is a log. \")\r\n\r\ndemo4\r\n>>>>>\r\n::\r\n\r\n    import sys\r\n    import logging\r\n    from log_to_kafka import LogFactory\r\n    logger = LogFactory.get_instance(name=\"test_name\")\r\n    logger.set_handler(logging.StreamHandler(sys.stdout))\r\n    logger.info(\"this is a log. \")\r\n\r\ndemo5\r\n>>>>>\r\n\r\n- 编写自定义handler\r\n- 请参见KafkaHandler的实现方式",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/ShichaoMa/log_to_kafka",
    "keywords": "log kafka",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "log-to-kafka",
    "package_url": "https://pypi.org/project/log-to-kafka/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/log-to-kafka/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://www.github.com/ShichaoMa/log_to_kafka"
    },
    "release_url": "https://pypi.org/project/log-to-kafka/1.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "log to kafka",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3054632,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23d2ba51fd78487b2eb80cd3d986d3661f4ced47351b2d10f4118e2c0ba15104",
        "md5": "c3cb3f8d8e4c2e3887195148c1ef369e",
        "sha256": "48b058acaa9b37d20ff3245bf3a047db208acd486e3ef824fc63e78f99954077"
      },
      "downloads": -1,
      "filename": "log-to-kafka-1.0.3.zip",
      "has_sig": false,
      "md5_digest": "c3cb3f8d8e4c2e3887195148c1ef369e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12242,
      "upload_time": "2016-10-22T16:32:45",
      "upload_time_iso_8601": "2016-10-22T16:32:45.927670Z",
      "url": "https://files.pythonhosted.org/packages/23/d2/ba51fd78487b2eb80cd3d986d3661f4ced47351b2d10f4118e2c0ba15104/log-to-kafka-1.0.3.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}