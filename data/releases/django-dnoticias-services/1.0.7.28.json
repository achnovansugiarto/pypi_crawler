{
  "info": {
    "author": "Pedro Mendes",
    "author_email": "pedro.trabalho.uma@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# dnoticias_services\n\n## Import:\n\n`from dnoticias_services.<module> import <function_name>`\n\n`eg:`\n\n`from dnoticias_services.mail import send_email`\n\n\n## Modules:\n* mail\n* authentication\n* payments\n* utils\n* subscriptions\n\n## Methods:\n* Authentication\n  - create_user: Creates a new user in keycloak\n\n    `create_user(email, first_name='', last_name='', enabled=True, email_verified=False, password=None, temporary_password=True, is_staff=False, is_superuser=False, send_email_to_user=False)`\n  - update_user: Updates an existing user in keycloak and backends\n\n    `update_user(email, first_name='', last_name='', enabled=True, is_staff=False, is_superuser=False)`\n  - update_password: Updates an user password. Can send notification emails too.\n\n    `update_password(email, password, temporary=False, send_email_to_user=False)`\n  - get_token: Gets an user token.\n\n    `get_token(email, password)`\n* Mail\n  - create_campaign\n\n    `create_campaign(template_uuid, brand_group_uuid, newsletter_uuid, title, subject, context=dict(), from_email=None, from_name=None, track_opens=True, track_clicks=True, api_key=None, timeout=None)`\n  - send_campaign\n\n    `send_campaign(template_uuid, brand_group_uuid, newsletter_uuid, title, subject, context=dict(), from_email=None, from_name=None, track_opens=True, track_clicks=True, api_key=None, timeout=None)`\n  - send_email\n\n    `send_email(email, template_uuid, brand_group_uuid, subject, context=dict(), from_email=None, from_name=None, attachments=[], track_opens=True, track_clicks=True, api_key=None, timeout=None)`\n  - send_email_bulk\n\n    `send_email_bulk(emails=[], template_uuid=None, brand_group_uuid=None, subject=\"\", context=list(), from_email=None, from_name=None, attachments=[], track_opens=True, track_clicks=True, api_key=None, timeout=None)`\n\n* Payments\n  * Items\n    - create_item Creates an item from dnoticias-payments via API\n\n      `create_item(name, slug, price, active=True, extra_attrs=dict(), description=\"\", images=dict(), shippable=False, interval=None, interval_count=None, trial_interval=None, trial_interval_count=None, offers=[], category=None, api_key=None, timeout=None)`\n    - update_item: Updates an item from dnoticias-payments via API\n\n      `update_item(uuid, name=None, slug=None, extra_attrs=None, description=None, price=None, active=None, images=None, shippable=None, interval=None, interval_count=None, trial_interval=None, trial_interval_count=None, offers=None, category=None, api_key=None, timeout=None)`\n    - delete_item: Deletes an item from dnoticias-payments via API\n\n      `delete_item(uuid, api_key=None, timeout=None)`\n\n  * Orders\n    - get_user_order_datatable: Gets all the user orders from dnoticias-payments. Works only with datatables.\n\n      `get_user_order_datatable(request, user_id, api_key=None)`\n\n  * Providers\n    - get_payment_providers: Gets all the payment providers with status active created in dnoticias-payments.\n\n      `get_payment_providers(request, api_key=None)`\n\n* Utils\n  - request_object: Replicates the request object from django. Used to datatables.\n\n    `Same methods/attrs as the original request. Used to provide the request information to datatables because the original one is inmutable.`\n\n* Subscriptions\n  - get_user_notifications: Gets all the non-opened notifications for an specific user by its email\n    `get_user_notifications(email, api_key=None)`\n  - get_user_components: Gets all the components for an specific user by its email. The response contain paper components and digital components with its roles.\n    `get_user_components(email, api_key=None)`\n\n\n## Settings\n* Authentication\n    - KEYCLOAK_SERVER_URL\n    - KEYCLOAK_ADMIN_REALM_NAME\n    - KEYCLOAK_USER_REALM_NAME\n    - KEYCLOAK_ADMIN_USERNAME\n    - KEYCLOAK_ADMIN_PASSWORD\n    - KEYCLOAK_CLIENT_ID\n    - KEYCLOAK_CLIENT_SECRET_KEY\n    - DEFAULT_FROM_EMAIL\n    - MAIL_USER_PASSWORD_NOTIFICATION_TEMPLATE_UUID\n    - EMAIL_BRAND_GROUP_UUID\n    - MAIL_USER_PASSWORD_NOTIFICATION_SUBJECT\n    - MAIL_USER_CREATION_SUBJECT\n\n* Mail\n    - MAIL_SERVICE_ACCOUNT_API_KEY\n    - MAIL_SERVICE_REQUEST_TIMEOUT\n    - SEND_EMAIL_API_URL (https://comunicacao.dnoticias.pt/api/send/mail/)\n    - SEND_EMAIL_BULK_API_URL (https://comunicacao.dnoticias.pt/api/send/mail/bulk/)\n    - SEND_CAMPAIGN_API_URL (https://comunicacao.dnoticias.pt/api/send/campaign/)\n    - CREATE_CAMPAIGN_API_URL (https://comunicacao.dnoticias.pt/api/send/create/campaign/)\n    - EMAIL_USER_DATATABLE_LIST_API_URL (http://xyz.dnoticias.pt/api/user/{}/mails/datatable/)\n\n* Payments\n    - PAYMENT_SERVICE_ACCOUNT_API_KEY\n    - PAYMENT_SERVICE_REQUEST_TIMEOUT\n    - ITEM_API_URL (http://xyz.dnoticias.pt/api/items/)\n    - ORDER_USER_DATATABLE_LIST_API_URL (http://payments.dnoticias.pt/api/user/{}/orders/datatable/)\n    - PAYMENT_PROVIDERS_SELECT2VIEW_API_URL (http://payments.dnoticias.pt/api/payment/providers/select2/{}/)\n\n* Subscriptions\n    - SUBSCRIPTION_SERVICE_ACCOUNT_API_KEY\n    - SUBSCRIPTION_SERVICE_REQUEST_TIMEOUT\n    - USER_NOTIFICATION_API_URL (http://xyz.dnoticias.pt/api/user-notifications/{}/)\n    - USER_COMPONENTS_API_URL (http://xyz.dnoticias.pt/api/user-components/{}/)\n    - BILLING_API_URL\n    - ADDRESS_API_URL",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.dnoticias.pt/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dnoticias-services",
    "package_url": "https://pypi.org/project/django-dnoticias-services/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dnoticias-services/",
    "project_urls": {
      "Homepage": "https://www.dnoticias.pt/"
    },
    "release_url": "https://pypi.org/project/django-dnoticias-services/1.0.7.28/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.7.28",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17495998,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44e2a4d9592d0c795365b6c2b1b684f076753747a6ecdfc0d15f71a0dd1a0e60",
        "md5": "b455b12a9983a14a2e09e7d46f7b05bc",
        "sha256": "a3aa9c322267f1138e829bc60cce5eab849e5e9fc7b0559039b7c720df544997"
      },
      "downloads": -1,
      "filename": "django_dnoticias_services-1.0.7.28.tar.gz",
      "has_sig": false,
      "md5_digest": "b455b12a9983a14a2e09e7d46f7b05bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10288,
      "upload_time": "2021-05-11T13:25:19",
      "upload_time_iso_8601": "2021-05-11T13:25:19.454093Z",
      "url": "https://files.pythonhosted.org/packages/44/e2/a4d9592d0c795365b6c2b1b684f076753747a6ecdfc0d15f71a0dd1a0e60/django_dnoticias_services-1.0.7.28.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}