{
  "info": {
    "author": "Stefan Stojanovic",
    "author_email": "stefs304@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# MHCLovac 3\n\nMHC class I binding and epitope prediction based on modeled physicochemical properties of peptides.\n\n### Disclaimer\nMHCLovac is a result of my personal interests and some free time. \nAlthough I spent good amount of time researching this topic I would not qualify this project as a thorough scientific research. \nThat said, MHCLovac is not too bad in terms of predictions it makes and I plan to improve it further if possible.\n\n### What's new in version 3?\n* Epitope prediction in form of epitope probability score. \n* Binding score is back. The ic50 predictions from version 2 are replaced with binding score. Higher score means stronger binding.\n* Prediction is carried out by a collection of regression and classification algorithms.\n* MHCLovac can now be used as python package. See [example usage](#example-usage) for more info.\n\n### About\n\nMHCLovac is MHC class I binding and epitope prediction tool. \nIt uses physicochemical properties of peptides to predict binding affinity and epitope probability (in form of scores). \nOne of the main challenges with MHC binding prediction, which MHCLovac aims to solve, is that target peptides don't have to be uniform in length. \nSome alleles allow peptide lengths to span a wide range: H2-Kb epitopes are known to span 7 - 13 residues in length. \nThis poses a challenge when creating numerical feature representation of peptides for prediction algorithms. \nMHCLovac solves this by modeling each peptide into a linear, wave-like representation of its physicochemical properties. \nModeled array can then be scaled up or down to a fixed length allowing MHCLovac to work with a fixed number of features. \nThe downside to this approach is that MHCLovac has to assume that peptides bind in linear conformation which may not always be the case.\n\nMHCLovac is trained on data obtained from two sources: \ndataset used for retraining the IEDB class I binding prediction tools [http://tools.iedb.org/main/datasets/](http://tools.iedb.org/main/datasets/) \nand IEDB database [www.iedb.org](www.iedb.org). \nTraining results and a list of supported MHC alleles is available in [training/results](training/results) folder.\nTrained models are benchmarked using ROC-AUC method. \nBenchmarking method is covered in [benchmark](benchmark) folder.\n\n![roc/auc](https://gitlab.com/stojanovicbg/mhclovac/-/raw/master/benchmark/results/ROC.png)\n\n### Installation\n\n```\npip install mhclovac\n```\n\n### Example usage\n\nAs command line tool:\n```\nmhclovac -f example.fasta -m HLA-B*44:02 -l 11\n```\n\nAs python package:\n```python\nfrom mhclovac import predict, list_mhc_alleles\n\nalleles = list_mhc_alleles()\n# returns list of supported MHC alleles\n\npredictions = predict(sequence=['MEIFIEVFSHF', 'ELTLNMCL'], mhc='HLA-B*44:02')\n# returns pandas DataFrame with prediction results\n\n```\n\n### Example output\n```\n sequence          mhc  peptide_length           sequence_name  binding_score  epitope_score  combined_score\n MEIFIEVFSHF  HLA-B*44:02              11  MEIFIEVFSHF HLA-B44:02       0.523205       0.965484        1.488688\n EIFIEVFSHFL  HLA-B*44:02              11  MEIFIEVFSHF HLA-B44:02       0.087188       0.512132        0.599320\n IFIEVFSHFLL  HLA-B*44:02              11  MEIFIEVFSHF HLA-B44:02       0.039142       0.159362        0.198503\n FIEVFSHFLLQ  HLA-B*44:02              11  MEIFIEVFSHF HLA-B44:02       0.114877       0.264553        0.379430\n IEVFSHFLLQL  HLA-B*44:02              11  MEIFIEVFSHF HLA-B44:02       0.317922       0.964168        1.282090\n```\n\nColumns:\n1. `sequence` \n2. `sequence_name` - Fasta sequence name or name provided by `-n` argument\n3. `peptide_length`\n4. `mhc` - MHC allele\n5. `binding_score` - Higher score means better binding\n6. `epitope_score` - Higher score means a better epitope\n7. `combined_score` - Sum of binding and epitope scores if both are available\n\n### Donate to support my work\nIf you like this project and wish to support my work you can do so by donating Bitcoin. \nAny amount donated will be appreciated! \n\nBTC: `bc1qrg7wku5g35kn0qyay4uwzugfmfqwnvz95g54pj`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/stojanovicbg/mhclovac",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mhclovac",
    "package_url": "https://pypi.org/project/mhclovac/",
    "platform": "",
    "project_url": "https://pypi.org/project/mhclovac/",
    "project_urls": {
      "Homepage": "https://gitlab.com/stojanovicbg/mhclovac"
    },
    "release_url": "https://pypi.org/project/mhclovac/3.2/",
    "requires_dist": [
      "scikit-learn (>=0.23.2)",
      "numpy (>=1.19.4)",
      "pandas (>=1.1.4)",
      "proteinko (==5.0)",
      "joblib (>=0.17.0)",
      "argparse"
    ],
    "requires_python": "",
    "summary": "MHC class I binding and epitope prediction based on modeled physicochemical properties of peptides",
    "version": "3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9044907,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccafb85f2d19eb9f8779f740a28edc43602a861520f684fad0a5ba647e45ea4d",
        "md5": "8b109467d1b9501a1665b8bb9165262a",
        "sha256": "7d8c3d6c7329a7db1d617f60f12f0d535a9f36238ee4f40f36b9b6e720ef0e48"
      },
      "downloads": -1,
      "filename": "mhclovac-3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b109467d1b9501a1665b8bb9165262a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 36612901,
      "upload_time": "2020-11-16T21:05:14",
      "upload_time_iso_8601": "2020-11-16T21:05:14.046664Z",
      "url": "https://files.pythonhosted.org/packages/cc/af/b85f2d19eb9f8779f740a28edc43602a861520f684fad0a5ba647e45ea4d/mhclovac-3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "411ce44fc06a8a263dc6baf9811afa9e7147d7eef79e64cefa880ec83ad51a3e",
        "md5": "5e32ec6780bb4889d9d761c568e05c04",
        "sha256": "e2eb7d3757b1e31323743f9032cfb3defd090ecd46cd58587906220b8c4d3c26"
      },
      "downloads": -1,
      "filename": "mhclovac-3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5e32ec6780bb4889d9d761c568e05c04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36621403,
      "upload_time": "2020-11-16T21:05:57",
      "upload_time_iso_8601": "2020-11-16T21:05:57.134527Z",
      "url": "https://files.pythonhosted.org/packages/41/1c/e44fc06a8a263dc6baf9811afa9e7147d7eef79e64cefa880ec83ad51a3e/mhclovac-3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}