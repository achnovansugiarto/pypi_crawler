{
  "info": {
    "author": "Andy Stokely",
    "author_email": "amstokely@ucsd.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "By Andy Stokely\n\nPython decorator library that adds customizeable dunder methods to\ndecorated classes. This both decreases the amount of code that is \nnormally required to implement dunder methods, and also helps \nreduce repitition when coding classes that use custom dunder\nmethods with the same or similar code. Right now, the following\ndunder methods have corresponding dunder decorators:\n\n\t__iter__ (dunder_iter)\n\t__setitem__ (dunder_setitem) \n\t__getitem__ (dunder_getitem) \n\t__missing__ (dunder_missing) \n\t__repr__ (dunder_repr) \n\nIf a dunder decorator is used without any parameters,\nit defines the special method with respect to the class \nobject's dictionary. However, the user is able to have the\nspecial method defined with repsect to one of the class\nobject's attributes by setting the attr parameter equal\nto the name of the attribute. Dunder decorators can also \nbe used with classes that use __slots__, rather then a \ndictionary to store object attributes, by setting the \nslots parameter to True. For specific examples,\nsee the examples in the dunder_decorator.py doc-strings.\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/astokely/dunderdecorators",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dunderdecorators",
    "package_url": "https://pypi.org/project/dunderdecorators/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/dunderdecorators/",
    "project_urls": {
      "Homepage": "https://github.com/astokely/dunderdecorators"
    },
    "release_url": "https://pypi.org/project/dunderdecorators/1.0.0/",
    "requires_dist": [
      "typing",
      "pytest",
      "cython"
    ],
    "requires_python": ">=3.6",
    "summary": "Python decorator library that adds customizeable dunder methods to decorated classes.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11398226,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4791f5fe236ed8162d883adc557e41bf88b861c4925f554fd07dece25381b2a2",
        "md5": "c4f8bf8048a792be9f57e36d0d111110",
        "sha256": "259957567c19c2a8ea25e441722f94773ab7813b90b47baf7bcad6310636aa27"
      },
      "downloads": -1,
      "filename": "dunderdecorators-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c4f8bf8048a792be9f57e36d0d111110",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7073,
      "upload_time": "2021-09-08T18:35:25",
      "upload_time_iso_8601": "2021-09-08T18:35:25.172371Z",
      "url": "https://files.pythonhosted.org/packages/47/91/f5fe236ed8162d883adc557e41bf88b861c4925f554fd07dece25381b2a2/dunderdecorators-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af7b2cec27f060cf245f6b3eb8d5f825cb57e9f8d02914d3453aa7c9453c4575",
        "md5": "bd7654d9390b3c6e27a4a7b437b61a05",
        "sha256": "85318164ef6e8d513bf8bdaa686fcc5d68d90a10ce69024e1436864c27f7e5a5"
      },
      "downloads": -1,
      "filename": "dunderdecorators-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bd7654d9390b3c6e27a4a7b437b61a05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6924,
      "upload_time": "2021-09-08T18:35:26",
      "upload_time_iso_8601": "2021-09-08T18:35:26.610616Z",
      "url": "https://files.pythonhosted.org/packages/af/7b/2cec27f060cf245f6b3eb8d5f825cb57e9f8d02914d3453aa7c9453c4575/dunderdecorators-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}