{
  "info": {
    "author": "lyz",
    "author_email": "lyz@riseup.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "[![Actions\nStatus](https://github.com/lyz-code/drode/workflows/Python%20package/badge.svg)](https://github.com/lyz-code/drode/actions)\n\n# Drode\n\n`drode` is a wrapper over the Drone and AWS APIs to make deployments more user\nfriendly.\n\nIt assumes that the projects are configured to continuous deliver all master\ncommits to staging. Then those commits can be promoted to production or to\nstaging for upgrades and rollbacks.\n\nIt has the following features:\n\n* Prevent failed jobs to be promoted to production.\n* Promote jobs with less arguments than the drone command line.\n* Wait for a drone build to end, then raise the terminal bell.\n\n# A quick demonstration\n\nLet's see `drode` in action.\n\nImagine a push in master triggers a drone job.\n\nDrone jobs can take from seconds to dozens of minutes. Keeping a constant eye on\nthe job status introduces several undesired context changes. You can use the\n`wait` subcommand to release your mind of that burden. It will periodically\ncheck the job status and rise the terminal bell once it's finished. You can\nspecify a job number, It monitors the last job by default, but you can specify\nany job number.\n\n```bash\n$: drode wait\n  [INFO] Waiting for job #213 started by a promote event by lyz.\n  # (... some time ...)\n  [INFO] Job #213 has finished with status success\n```\n\nOnce the push job has finished successfully, we can promote it to the production\nenvironment.\n\n```bash\n$: drode promote\n  [INFO] You're about to promote job #213 of the project drode_website to production\n  [INFO] With commit 347579b: Add drode promote documentation\n\nAre you sure? [y/n]: y\n  [INFO] Job #214 has started.\n```\n\n`drode promote` promotes to production the last successful job originated by\na push event in master. You are given the information of the job and are\nprompted if you want to continue. Only `y` or `yes` will complete the\ndeployment.\n\nOptionally you can specify which job number to deploy in which environment with\nsomething like `drode promote 210 staging`.\n\nWith the `-w` flag, `drode promote` will launch the job and then `wait` for it\nto finish.\n\nIf you try to promote a failed job, you'll get the following error:\n\n```bash\n  [ERROR] You can't promote job #200 to production as it's status is failure\n```\n\n`drode` is also able to give insights of the instances related to a project. If\nyou've configured the `aws` section of the project configuration, it will be\nshown after executing the `status` subcommand.\n\n```bash\n$: drode status\n# Production\nActive LaunchConfiguration: production-project_1-238-32gosdkon3hlglkshonbllsdk32023950lskenbl\nInstance             IP           Status             Created           LaunchConfiguration\n-------------------  -----------  -----------------  ----------------  -----------------------------------\ni-gasklk3bnl23880sl  192.71.1.42  Healthy/InService  2020-06-09T04:02  production-project_1-238-32gosdkon3h\ni-2osdkgh3nbbbl0sk3  192.83.3.86  Healthy/InService  2020-06-09T04:03  production-project_1-238-32gosdkon3h\n\n# Staging\nActive LaunchConfiguration: staging-icijweb-240-237e9e9fb759bab18cc52ad5b7c407e9975831d3\nInstance             IP            Status             Created           LaunchConfiguration\n-------------------  ------------  -----------------  ----------------  -----------------------------------\ni-32okgadslk3jos03l  192.21.2.158  Healthy/InService  2020-06-09T18:50  staging-project_1-238-32gosdkon3h\n```\n\n# Installation\n\nTo install `drode`, simply:\n\n```bash\npip install drode\n```\n\n`drode` configuration is done through the yaml file located at\n`~/.local/share/drode/config.yaml`. The [default\ntemplate](https://github.com/lyz-code/drode/blob/master/assets/config.yaml) is\nprovided at installation time.\n\nIt is assumed that Drone environmental variables `DRONE_SERVER` and\n`DRONE_TOKEN` are configured as well as the AWS CLI credentials. Please refer to\ntheir documentation in case of doubt. To check if everything works as expected\nuse `drode verify`:\n\n```bash\n$: drode verify\n  [INFO] Drode: 0.1.0\n  [INFO] Drone: OK\n  [INFO] AWS: OK\n```\n\n# Multiple projects support\n\nIf you have more than one project configured, `drode` needs to know which one to\nact upon. Instead of defining it through command flags, we use the `set`\ncommand.\n\n```bash\ndrode set project_1\n```\n\nTo check the active project use `drode active`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lyz-code/drode",
    "keywords": "",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drode",
    "package_url": "https://pypi.org/project/drode/",
    "platform": "",
    "project_url": "https://pypi.org/project/drode/",
    "project_urls": {
      "Homepage": "https://github.com/lyz-code/drode"
    },
    "release_url": "https://pypi.org/project/drode/1.0.0/",
    "requires_dist": [
      "argcomplete (>=1.11.1)",
      "boto3 (>=1.13.24)",
      "ruamel.yaml (>=0.16.10)",
      "requests (>=2.23.0)",
      "tabulate (>=0.8.7)"
    ],
    "requires_python": ">=3.6",
    "summary": "Wrapper over Drone API to make deployments an easier task",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15882134,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cba187f01418d3df5e364e6b2507e717b3ed6334bcc7b4f7d79634ea99a21270",
        "md5": "321cf4380f91ca953c45382690f47205",
        "sha256": "ab3665c3f2bb355bad75517ea442e8203812f517413329fb1abc9171d8f21aff"
      },
      "downloads": -1,
      "filename": "drode-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "321cf4380f91ca953c45382690f47205",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17289,
      "upload_time": "2020-10-02T10:14:48",
      "upload_time_iso_8601": "2020-10-02T10:14:48.823973Z",
      "url": "https://files.pythonhosted.org/packages/cb/a1/87f01418d3df5e364e6b2507e717b3ed6334bcc7b4f7d79634ea99a21270/drode-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a71223cd437c0ad073420aa882bf19ac9b63c71383c2ad63ce3345cfd098c9b",
        "md5": "7c08891b23d083159ceb6d61f9d68010",
        "sha256": "3d1bc8cbe95067ffe14f57017aff71fa91672b8e55a93659dfdc60b109c6fed5"
      },
      "downloads": -1,
      "filename": "drode-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7c08891b23d083159ceb6d61f9d68010",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15432,
      "upload_time": "2020-10-02T10:14:51",
      "upload_time_iso_8601": "2020-10-02T10:14:51.731997Z",
      "url": "https://files.pythonhosted.org/packages/8a/71/223cd437c0ad073420aa882bf19ac9b63c71383c2ad63ce3345cfd098c9b/drode-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}