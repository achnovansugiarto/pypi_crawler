{
  "info": {
    "author": "Martin Paul Eve",
    "author_email": "meve@crossref.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python"
    ],
    "description": "# Longsight: Best Practice Logging Library\nA range of common logging functions for the observability of Python AWS cloud applications\n\n\n![license](https://img.shields.io/gitlab/license/crossref/labs/longsight) ![activity](https://img.shields.io/gitlab/last-commit/crossref/labs/longsight)\n\n![AWS](https://img.shields.io/badge/AWS-%23FF9900.svg?style=for-the-badge&logo=amazon-aws&logoColor=white) ![Linux](https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black) ![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)\n\nThis library implements a range of best-practice logging techniques for Python AWS cloud applications. This includes [FastAPI Lambda contexts](https://www.eliasbrange.dev/posts/observability-with-fastapi-aws-lambda-powertools/). \n\nThis is a prototype Crossref Labs system. It is not guaranteed to be stable and the metadata schema and behaviour may be subject to change at any time.\n\n# longsight.instrumentation\nThe longsight.instrumentation module provides functionality for instrumenting a FastAPI application with AWS CloudWatch Metrics and Logs. It includes middleware to handle correlation IDs, filters for attaching correlation IDs to logs, and context managers for instrumenting routes with metrics and logging.\n\n## Installation\nTo install the longsight.instrumentation module, run the following command:\n\n    pip install longsight\n\n## Usage\nTo use the longsight.instrumentation module, import the necessary components and add them to your FastAPI application.\n\n## Decorators\nUsing the longsight decorators are the easiest way to start logging quickly.\n\n    from longsight.instrumentation import instrument\n\n    router = APIRouter()\n    \n    @router.get(\"/path\")\n    @instrument()\n    async def a_route(request: Request, instrumentation):\n        return {\"message\": \"Hello, World!\"}\n\n## Correlation ID Middleware\nThe AWSCorrelationIdMiddleware middleware automatically generates or loads a correlation ID for each incoming request, and attaches it to the request headers and logs. To use the middleware, create an instance of the AWSCorrelationIdMiddleware class and add it to your FastAPI application:\n\n    from fastapi import FastAPI\n    from longsight.instrumentation import AWSCorrelationIdMiddleware\n    \n    app = FastAPI()\n    app.add_middleware(AWSCorrelationIdMiddleware)\n\nBy default, the middleware looks for the X-Request-ID header in the incoming request headers, or in the mangum handlers aws.context, and generates a new UUID if the header is not present.\n\n## Using Mangum and logging default Lambda stats\n\nTo configure Mangum to handle requests in an AWS Lambda context and to inject instrumentation, use:\n\n    from mangum import Mangum\n    handler = Mangum(app, lifespan=\"off\")\n    handler = instrumentation.logger.inject_lambda_context(\n        lambda_handler=handler, clear_state=True\n    )\n    handler = instrumentation.metrics.log_metrics(\n        handler, capture_cold_start_metric=True\n    )\n\n## Logging Filters\nThe CorrelationIdFilter filter attaches the correlation ID to log records. To use the filter, create an instance of the CorrelationIdFilter class and add it to your logger:\n\n    import logging\n    from longsight.instrumentation import CorrelationIdFilter\n    \n    logger = logging.getLogger(__name__)\n    logger.addFilter(CorrelationIdFilter())\n\nThis setup is done automatically if you use the decorators.\n\n## Context Managers\nThe Instrumentation context manager provides functionality for instrumenting routes with metrics and logging. To use the context manager, create an instance of the Instrumentation class and use it as a context manager:\n\n    from fastapi import FastAPI\n    from longsight.instrumentation import Instrumentation, Metrics, Logger\n    \n    app = FastAPI()\n    \n    @app.get(\"/\")\n    async def root(request: Request):\n        with Instrumentation(\n                        aws_connector=aws_connector,\n                        fastapi_app=fastapi_app,\n                        request=request) as instrumentation:\n            instrumentation.logger.info(\"Handling request\")\n            instrumentation.metrics.put_metric(\"RequestCount\", 1)\n            return {\"message\": \"Hello, World!\"}\n\nThe Instrumentation context manager automatically logs the start and end of the request, and provides an instance of the Logger and Metrics classes for logging and metrics. The Logger and Metrics classes are provided by the aws_lambda_powertools package.\n\n# Credits\n* [.gitignore](https://github.com/github/gitignore) from Github.\n* [AWS Lambda Powertools](https://awslabs.github.io/aws-lambda-powertools-python/2.10.0/) by Amazon.\n\n&copy; Crossref 2023\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/crossref/labs/distrunner",
    "keywords": "distributed computing",
    "license": "Copyright &copy; 2023 Crossref  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "Martin Paul Eve <meve@crossref.org>",
    "name": "longsight",
    "package_url": "https://pypi.org/project/longsight/",
    "platform": null,
    "project_url": "https://pypi.org/project/longsight/",
    "project_urls": {
      "Homepage": "https://gitlab.com/crossref/labs/distrunner",
      "changelog": "https://gitlab.com/crossref/labs/longsight/-/blob/main/CHANGELOG.md",
      "documentation": "https://labs.crossref.org",
      "homepage": "https://labs.crossref.org",
      "repository": "https://gitlab.com/crossref/labs/longsight"
    },
    "release_url": "https://pypi.org/project/longsight/1.0.0/",
    "requires_dist": [
      "aws-lambda-powertools[all] (==2.11.0)",
      "uvicorn (==0.21.1)",
      "fastapi (~=0.95.0)",
      "httpx (==0.23.3)",
      "starlette (==0.26.1)",
      "claws (==0.0.7)",
      "watchtower (==3.0.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "This library implements a range of common logging functions.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17556555,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61eb79eef99388e3f0ca6f1b855056d69b7b5c31c401253f943f34cf5c1d127e",
        "md5": "0338a51e6ad85c16e8e9d9f48a9a1586",
        "sha256": "b8e9429c9b22b99b825a80fd64df6a6cf8e2d0c1f54d7190676e6a26bd42f1bf"
      },
      "downloads": -1,
      "filename": "longsight-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0338a51e6ad85c16e8e9d9f48a9a1586",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7327,
      "upload_time": "2023-03-31T15:49:18",
      "upload_time_iso_8601": "2023-03-31T15:49:18.619328Z",
      "url": "https://files.pythonhosted.org/packages/61/eb/79eef99388e3f0ca6f1b855056d69b7b5c31c401253f943f34cf5c1d127e/longsight-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29ed22de3378e297746f8e9bbfcf00daa640d4b1139b915bb970cc57f57e3e36",
        "md5": "38d13cf4c16cbab4b960d24be5f991e4",
        "sha256": "d3c8d2e4a988fe5b1f45ecd4694f8b6b069690613f1b6067145ebf0bcc69e041"
      },
      "downloads": -1,
      "filename": "longsight-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "38d13cf4c16cbab4b960d24be5f991e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8704,
      "upload_time": "2023-03-31T15:49:23",
      "upload_time_iso_8601": "2023-03-31T15:49:23.041671Z",
      "url": "https://files.pythonhosted.org/packages/29/ed/22de3378e297746f8e9bbfcf00daa640d4b1139b915bb970cc57f57e3e36/longsight-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}