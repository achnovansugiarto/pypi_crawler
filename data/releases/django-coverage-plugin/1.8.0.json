{
  "info": {
    "author": "Ned Batchelder",
    "author_email": "ned@nedbatchelder.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "==================================\nDjango Template Coverage.py Plugin\n==================================\n\nA `coverage.py`_ plugin to measure test coverage of Django templates.\n\nSupported Python versions: 2.7, 3.4, 3.5, 3.6, 3.7 and 3.8.\n\nSupported Django versions: 1.8, 1.11, 2.0, 2.1, 2.2 and 3.0.\n\nSupported coverage.py version 4.x or 5.x.\n\nThe plugin is pip installable::\n\n    $ pip install django_coverage_plugin\n\nTo run it, add this setting to your ``.coveragerc`` file::\n\n    [run]\n    plugins =\n        django_coverage_plugin\n\nThen run your tests under `coverage.py`_.\n\nYou will see your templates listed in your coverage report along with\nyour Python modules. Please use `coverage.py`_ v4.4 or greater to allow\nthe plugin to identify untested templates.\n\nIf you get a :code:`django.core.exceptions.ImproperlyConfigured` error,\nyou need to set the :code:`DJANGO_SETTINGS_MODULE` environment variable.\n\n\nConfiguration\n~~~~~~~~~~~~~\n\nThe Django template plugin uses some existing settings from your\n.coveragerc file.  The ``source=``, ``include=``, and ``omit=`` options\ncontrol what template files are included in the report.\n\n\nCaveats\n~~~~~~~\n\nCoverage.py can't tell whether a ``{% blocktrans %}`` tag used the\nsingular or plural text, so both are marked as used if the tag is used.\n\n\nWhat the? How?\n~~~~~~~~~~~~~~\n\nThe technique used to measure the coverage is the same that Dmitry\nTrofimov used in `dtcov`_, but integrated into coverage.py as a plugin,\nand made more performant. I'd love to see how well it works in a real\nproduction project. If you want to help me with it, feel free to drop me\nan email.\n\nThe coverage.py plugin mechanism is designed to be generally useful for\nhooking into the collection and reporting phases of coverage.py,\nspecifically to support non-Python files.  If you have non-Python files\nyou'd like to support in coverage.py, let's talk.\n\n\nTests\n~~~~~\n\nTo run the tests::\n\n    $ pip install -r requirements.txt\n    $ tox\n\n.. _coverage.py: http://nedbatchelder.com/code/coverage\n.. _dtcov: https://github.com/traff/dtcov",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nedbat/django_coverage_plugin",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-coverage-plugin",
    "package_url": "https://pypi.org/project/django-coverage-plugin/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-coverage-plugin/",
    "project_urls": {
      "Homepage": "https://github.com/nedbat/django_coverage_plugin"
    },
    "release_url": "https://pypi.org/project/django-coverage-plugin/1.8.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django template coverage.py plugin",
    "version": "1.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16006208,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fdea0feccac7b155cf12d118d22deb04d47ff4093ac2cc35a2021ee4a86187b",
        "md5": "a37514930de26247512bc629b87d87dd",
        "sha256": "d53cbf3828fd83d6b89ff7292c6805de5274e36411711692043e67bcde25ae0c"
      },
      "downloads": -1,
      "filename": "django_coverage_plugin-1.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a37514930de26247512bc629b87d87dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11867,
      "upload_time": "2020-01-24T01:29:13",
      "upload_time_iso_8601": "2020-01-24T01:29:13.573054Z",
      "url": "https://files.pythonhosted.org/packages/4f/de/a0feccac7b155cf12d118d22deb04d47ff4093ac2cc35a2021ee4a86187b/django_coverage_plugin-1.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}