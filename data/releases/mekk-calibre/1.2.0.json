{
  "info": {
    "author": "Marcin Kasperski",
    "author_email": "Marcin.Kasperski@mekk.waw.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Topic :: Utilities"
    ],
    "description": "=============\nmekk.calibre\n=============\n\nHelper scripts for some Calibre_ tasks. \n\nScript list\n===========\n\nThe following scripts are available:\n\ncalibre_guess_and_add_isbn\n\n    Checks books without ISBN (set in metadata) for ISBN-like string\n    present in leading pages. If found, add it to the metadata (what\n    makes it possible to download full metadata, covers, etc).\n\ncalibre_convert_docs_to_rtf\n\n    Convert any .doc to .rtf (unless already present) - using\n    openoffice.\n\ncalibre_add_if_missing\n\n    Checks given directory tree for books not yet present in calibre,\n    add them if found. Uses binary file comparison to check whether\n    the file is identical (file name and metadata are not used, on\n    purpose).\n\ncalibre_find_books_missing_in_database\n\n    Checks whether Calibre database directory contains some unregistered\n    files and report them if found.\n\ncalibre_report_duplicates\n\n    Report duplicates, adding information of which of them are surely\n    safe to merge (because duplicated books are identical or because\n    formats do not overlap) and which require examination.\n\ncalibre_guess_and_add_isbn\n--------------------------\n\nQueries Calibre for all books without ISBN, then tries to locate\nISBN inside (via scanning a few leading pages) and updates Calibre\nbook metadata if ISBN is found.\n\nRun it without parameters::\n\n    calibre_guess_and_add_isbn\n\nAny ISBN numbers found will be added to the book metadata (and the\nscript will report them). Books are scanned from the newest, so you\ncan abort (Ctrl-C) script once it handled new books.\n\nLater on ISBN can be used to grab the book metatada and/or book cover\ninside Calibre GUI. Just spawn Calibre and look for books with ISBN\nset and missing metadata, for example using query like::\n\n     isbn:~[0-9] not publisher:~[a-z]\n\n(above means: isbn contains some digit, publisher does not contain any\nletter). Depending on your workflow, you can then either \n\n- grab metadata automaticaly (mark all those books, right click,\n  pick Edit Metadata Information/Download Metadata)\n\n- review each book individually (mark those books, right click,\n  pick Edit Metadata Information/Edit Metadata Individually, then\n  click Fetch Metadata on every book successively and review whether\n  it fits).\n\ncalibre_convert_docs_to_rtf\n---------------------------\n\nQueries Calibre for all books which have only .doc format, then uses\nOpenOffice to convert them to .rtf and add this format as an\nalternative.\n\nOpenOffice (and pyuno libraries provided by it) are used in the\nprocess.\n\nRun it without parameters::\n\n    calibre_convert_docs_to_rtf\n\nNote: the script happens to crash on the end of the job (while\nfinishing).  I haven't diagnosed the reasons (most likely the problem\nis in the libraries I use), but the crash is harmless and does not\ninfluence the actual conversion process.\n\n\ncalibre_find_books_missing_in_database\n--------------------------------------\n\nReports the files present inside Calibre library directory but not\npresent in the database (= not visible in the interface).\n\nThe files are reported to standard output. To add them\nall to calibre, pipe output. For example::\n\n    calibre_find_books_missing_in_database.py | xargs -d \"\\n\" calibredb add\n\n(but, better, review everything beforehand)\n\n*The problematic scenario may happen for example if Calibre is used\nfrom two or more machines over synchronized or networked directory\nand, by mistake, two copies are run simultaneously.*\n\n\ncalibre_add_if_missing\n----------------------\n\nScans given directory and/or specified files, adds to calibre all\nbooks which are not yet present there.\n\nDuplicate checking is done solely according to the file content.  The\nfile is skipped if identical file is already present in Calibre.\n   \nI wrote this script to handle *I want to ensure everything is already\nimported and can be deleted* scenario.\n\nExample::\n\n    calibre_add_if_missing /home/jan/OldBooks\n\n(and later remove OldBooks if everything is OK).\n\n\ncalibre_report_duplicates\n-------------------------\n\nAnalyzes calibre database looking for likely duplicates, and reports\nthem, adding info of which of those are surely identical, and which\nrequire examination.\n\nDo *not* perform any changes, just prints report (as text or html).\n\nExample::\n\n    calibre_report_duplicates\n\n(text output to the console)\n\n    calibre_report_duplicates --html > /tmp/report.html\n\n(HTML output redirected to file).\n\n\nInstallation and configuration\n===============================\n\nPrerequisities\n--------------\n\nCalibre must be installed, properly configured and has\nsome database (otherwise it does not make sense to run those scripts).\nThe:: \n\n    calibredb\n\ncommand must be in PATH (or calibredb variable inside .ini file must\nbe properly set, see below).\n\nTools providing commands::\n\n    pdftotext\n    catdoc \n    djvutxt\n    archmage\n\nshould be installed and present in PATH (or properly configured in\n.ini, or disabled in .ini, see below). On Ubuntu Linux or Debian Linux\nthose can be installed from standard repositories, just install the\nfollowing packages::\n\n    poppler-utils \n    catdoc\n    djvulibre-bin\n    archmage\n\nPython 2.6 or 2.7 is required (scripts are using some features\nintroduced in 2.6 - in particular tempfile extensions, subprocess and\nnamedtuple). Also, lxml library must be installed.  On Debian or\nUbuntu just install the following packages::\n\n   python2.6\n   python-lxml\n\nFor calibre_convert_docs_to_rtf to work, ootools_ library must be\ninstalled. Simplest method to install it::\n\n    easy_install ootools\n\n(on Ubuntu `sudo easy_install ootools`).\n\nI develop and use those scripts on Ubuntu Linux. They should work on\nWindows or Mac if necessary tools are installed, but I've never tried\nit.\n\nActual installation\n--------------------\n\nSimple::\n\n    easy_install mekk.calibre\n\nshould do. In case you don't want to mess with your system\ndirectories, consider `using virtualenv`_.\n\n.. _using virtualenv: http://blog.mekk.waw.pl/archives/6-Python-VirtualEnv.html\n\nConfiguration\n--------------\n\nThe `~/.calibre-utils` file can be used to configure some program\nsettings.  The file is created, if missing, whenever any of the\nscripts is run, and can be customized.\n\nHere is the default content::\n\n    [commands]\n    catdoc = catdoc\n    archmage = archmage\n    djvutxt = djvutxt\n    calibredb = calibredb\n    pdftotext = pdftotext\n    \n    [isbn-search]\n    guess_lead_lines = 10000\n    guess_lead_pages = 10\n\nThe commands section defines location of the external tools being\nused.  In case the commands are present in PATH, bare names can be\nused. Otherwise full path can be specified. Finally, if some tool is\nmissing, it can be defined as empty string.\n\nThe isbn-search section specifies how many leading pages (in\npage-based document formats like PDF or DJVU) or lines (in the free\nformats like TXT or CHM) are scanned looking for ISBN-like strings.\n\nFor example, the file can be changed so::\n\n    [commands]\n    catdoc = /usr/local/bin/catdoc\n    archmage = \n    djvutxt = \n    calibredb = /opt/calibre/calibredb\n    pdftotext = pdftotext\n    \n    [isbn-search]\n    guess_lead_lines = 12000\n    guess_lead_pages = 15\n\nIn such a case catdoc will be used from /usr/local/bin, calibredb will\nbe expected in /opt/calibre, pdftotext will be sought in PATH, and\narchmage and djvutxt will be treat as missing (so the isbn guessing\nscript won't be able to scan CHM and DJVU files for ISBN and will\nignore them).\n\n\nSources, bug reports\n====================\n\nThe project is `hosted here`_.\n\n.. _hosted here: http://bitbucket.org/Mekk/calibre_utils\n.. _Calibre: http://calibre-ebook.com/\n.. _ootools: http://pypi.python.org/pypi/ootools/0.1dev",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mekk.waw.pl/",
    "keywords": "org",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mekk.calibre",
    "package_url": "https://pypi.org/project/mekk.calibre/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mekk.calibre/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://mekk.waw.pl/"
    },
    "release_url": "https://pypi.org/project/mekk.calibre/1.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Calibre helper scripts (ISBN guessing, RTF to DOC conversion,hanging books detection, ...).",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2950323,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f118bb960e696eb6b30511caf1c39033968ddfc468c37c06f980318d21241ee0",
        "md5": "b5e14631f0916265a1a526ad11cab398",
        "sha256": "f4494e2f4872aa49ded4a3a492e49629481246199aba1bce011b51a09c37c126"
      },
      "downloads": -1,
      "filename": "mekk.calibre-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b5e14631f0916265a1a526ad11cab398",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22778,
      "upload_time": "2010-10-28T21:00:38",
      "upload_time_iso_8601": "2010-10-28T21:00:38.973610Z",
      "url": "https://files.pythonhosted.org/packages/f1/18/bb960e696eb6b30511caf1c39033968ddfc468c37c06f980318d21241ee0/mekk.calibre-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}