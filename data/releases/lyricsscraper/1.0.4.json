{
  "info": {
    "author": "Ahmet Metin",
    "author_email": "ahmet.metin817@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# lyrcisScraper\nYou can scrape song lyrics that you want.\n## Getting Started\nYou can get lyrics easily with this small module.Also, you can get all artists whose name begins with specific letter with this module.Furthermore this module can get all song lyrics of artists whose name is begin with spesific letter.\n## Prerequisites and Installing\nYou need install this module with the following code below from pypi.\n```\npip install lyricsScraper\n```\n## Usage\n\n**First of all, you must import this module to your py projects by the following code below.**\n```phyton\nfrom lyricsScraper import lyricsScraper\n```\n\n-------------------------------------------------------------------------\n\nIf you want get all artists whose name is begin with spesific letter, use the following function below.\n```phyton\nartist_with_letter(letter)\n```\nThis function will return list of artists.\n\n-------------------------------------------------------------------------\n\nIf you want get artist's songs, use the following function below.\n```phyton\nrequest_song_url(artist_name, song_cap)\n```\nThis function will return dictionary of songnames and genius song urls.\n\n-------------------------------------------------------------------------\n\nIf you want scrape song lyrics with genius song url, use that following function below.\n```phyton\nscrape_song_lyrics(url)\n```\nIt will return as a string.\n\n-------------------------------------------------------------------------\n\nIf you want scrape all song lyrics whose artist name is begin with spesific letter, use the following function below.You must define song capacity of each artist.\n```phyton\nscrape_data(firstLetterOfArtist,songCapacityOfEachArtist)\n```\nIt will return a dictionary.\n\n-------------------------------------------------------------------------\n\nIf you want get song lyrics with song name and artist, use the following function below.In addition,You can probably get lyrics by defining only song name.\n```phyton\nspesific_lyric(nameOfSongAndArtist)\n```\nIt will return a string\n\n-------------------------------------------------------------------------\n\nIf you want get song lyrics of spesific artist, use the following funciton below.You must define song capacity.\n```phyton\nscrape_artists_songs(artistname,songcapacity)\n```\nIt will return a dictionary.\n\n-------------------------------------------------------------------------\n-------------------------------------------------------------------------\n\n## Bulit With\n- [requests](https://pypi.org/project/requests/)\n- [BeautifulSoup](https://pypi.org/project/beautifulsoup4/)\n\n# License\nThis project is licensed under the MIT License - see the [LICENSE.md](https://github.com/letsplaywithstrings/lyrcisScraper/blob/main/LICENSE) file for details",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/letsplaywithstrings/lyrcisScraper/archive/1.0.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/letsplaywithstrings/lyrcisScraper",
    "keywords": "Lyrics,Artist",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lyricsScraper",
    "package_url": "https://pypi.org/project/lyricsScraper/",
    "platform": "",
    "project_url": "https://pypi.org/project/lyricsScraper/",
    "project_urls": {
      "Download": "https://github.com/letsplaywithstrings/lyrcisScraper/archive/1.0.4.tar.gz",
      "Homepage": "https://github.com/letsplaywithstrings/lyrcisScraper"
    },
    "release_url": "https://pypi.org/project/lyricsScraper/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "You can get lyrics from genius with many usefull functions.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9033950,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ba8bc451be9991c9bec3f49e60e41ccb138bf0ff193358f2ebfdc66b63bb954",
        "md5": "a667b9e2366169f0315af8ff40d8b7e0",
        "sha256": "c72d2116daa4d02c12490e6501fbf5fd0791507963e19fe4f48c1b43ff5de7fc"
      },
      "downloads": -1,
      "filename": "lyricsScraper-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a667b9e2366169f0315af8ff40d8b7e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3605,
      "upload_time": "2021-01-01T20:02:21",
      "upload_time_iso_8601": "2021-01-01T20:02:21.106541Z",
      "url": "https://files.pythonhosted.org/packages/4b/a8/bc451be9991c9bec3f49e60e41ccb138bf0ff193358f2ebfdc66b63bb954/lyricsScraper-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}