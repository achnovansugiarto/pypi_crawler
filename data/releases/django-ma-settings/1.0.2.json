{
  "info": {
    "author": "Alisher Alikulov",
    "author_email": "masteraalish@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-ma-settings\r\n==================\r\n\r\nMaster Settings is a simple Django app to have simple typed settings in django app with type validation.\r\n\r\n\r\nInstallation & Setup\r\n--------------------\r\n\r\n1. Install using pip\r\n\r\n.. code-block:: bash\r\n\r\n    $> pip install django-ma-settings\r\n\r\n\r\n2. add 'ma-settings' into INSTALLED_APPS\r\n\r\n.. code-block:: python\r\n\r\n    INSTALLED_APPS = (\r\n        # ...\r\n        'ma_settings',\r\n        # ...\r\n    )\r\n\r\n3. define MASTER_SETTINGS dict with your settings definition\r\n\r\ntemplate:\r\n\r\n.. code-block:: python\r\n\r\n    MASTER_SETTINGS = {\r\n        '(setting_name)':{\r\n            'type' : '(setting_type)',\r\n            'default': (default value), # optional\r\n            'options': (choice options), # optional\r\n            'model': (foreign model), # optional, use only when foreign type is chosen\r\n        }\r\n    }\r\n\r\nexample:\r\n\r\n.. code-block:: python\r\n\r\n    MASTER_SETTINGS = {\r\n        'Max email size (kb)': {\r\n            'type': 'integer',\r\n            'default': 400,\r\n        },\r\n        'Text color': {\r\n            'type': 'choices',\r\n            'options': ['White', 'Black', 'Red', 'Blue'],\r\n            'default': 'White',\r\n        },\r\n        'Our rate': {\r\n            'type': 'float',\r\n            'default': 1.0,\r\n        },\r\n        'Email from': {\r\n            'type': 'string'\r\n        },\r\n        'Default client': {\r\n            'type': 'foreign',\r\n            'model': 'my_app.Client'\r\n        }\r\n    }\r\n\r\n\r\n4. define BASE_SETTINGS_TEMPLATE_NAME\r\n\r\n.. code-block:: python\r\n\r\n    BASE_SETTINGS_TEMPLATE_NAME = \"template_name.html\"\r\n\r\nTemplate file must contain empty {% block settings %}\r\n\r\n\r\n5. in urls.py add include('ma_settings.urls')\r\n\r\n.. code-block:: python\r\n\r\n    url(r'^settings/', include('ma_settings.urls')),\r\n\r\nUse url name 'master_settings_home' to access settings page\r\n\r\n6. Run commands to initialize settings\r\n\r\n.. code-block:: bash\r\n\r\n    $> python manage.py syncdb\r\n    $> python manage.py init_settings\r\n\r\n\r\n\r\nUsing\r\n-----\r\n\r\nTo get setting use\r\n\r\n.. code-block:: python\r\n\r\n    from ma_settings import master_settings\r\n    master_settings.get('setting name', default='default')\r\n\r\nTo set new value:\r\n\r\n.. code-block:: python\r\n\r\n    master_settings.set('setting name', [value|model_instance])\r\n\r\nTo check if setting exists:\r\n\r\n.. code-block:: python\r\n\r\n    master_settings.exists('setting name')\r\n\r\n\r\nUpdating settings definition\r\n----------------------------\r\n\r\nAfter updating settings definition in settings.py run this command to update settings\r\n\r\n.. code-block:: bash\r\n\r\n     python manage.py init_settings",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MasterAlish/django-ma-settings",
    "keywords": "django-settings",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ma-settings",
    "package_url": "https://pypi.org/project/django-ma-settings/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-ma-settings/",
    "project_urls": {
      "Homepage": "https://github.com/MasterAlish/django-ma-settings"
    },
    "release_url": "https://pypi.org/project/django-ma-settings/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple Django app to have simple typed settings.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1510408,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71c80a0db25facb97aaba1697f4647dde109034f5a83647f3b04556e0b96dd94",
        "md5": "a8a8bd3904668a3f608a87c19abf1bd5",
        "sha256": "8c25ee13dbf34aa204c77d00eeb305cf7a65cd4044ca8ad816733b5d904fb7a8"
      },
      "downloads": -1,
      "filename": "django-ma-settings-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a8a8bd3904668a3f608a87c19abf1bd5",
      "packagetype": "bdist_egg",
      "python_version": "any",
      "requires_python": null,
      "size": 5124,
      "upload_time": "2015-03-24T05:00:02",
      "upload_time_iso_8601": "2015-03-24T05:00:02.387157Z",
      "url": "https://files.pythonhosted.org/packages/71/c8/0a0db25facb97aaba1697f4647dde109034f5a83647f3b04556e0b96dd94/django-ma-settings-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}