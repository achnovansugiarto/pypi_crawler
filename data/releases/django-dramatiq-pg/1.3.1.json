{
  "info": {
    "author": "Curtis Maloney",
    "author_email": "curtis@tinbrain.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==================\ndjango_dramatiq_pg\n==================\n\n.. image:: https://badge.fury.io/py/django-dramatiq-pg.svg\n    :target: https://pypi.org/project/django-dramatiq-pg\n\n.. image:: https://img.shields.io/pypi/pyversions/django-dramatiq-pg.svg\n    :target: https://pypi.org/project/django-dramatiq-pg\n\ndramatiq-pg_ integration for django_.\n\n    .. _dramatiq-pg: https://pypi.org/project/dramatiq-pg/\n    .. _django: https://pypi.org/project/Django/\n\nInstallation\n------------\n\n1. Install with pip\n\n   .. code-block:: sh\n\n    $ pip install django-dramatiq-pg\n\n2. Add to your ``INSTALLED_APPS`` list in settings.py\n\n   .. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_dramatiq_pg',\n    ]\n\n3. Create a Registry, and register your tasks\n\n   .. code-block:: python\n\n     from django_dramatiq_pg.registry import Registry\n\n     tasks = Registry()\n\n\n     @tasks.actor\n     def mytask():\n         ...\n\n4. Configure\n\n   .. code-block:: python\n\n    DRAMATIQ_BROKER = {\n        \"OPTIONS\": {\n            \"url\": \"postgres:///mydb\",\n        },\n        \"MIDDLEWARE\": [\n            \"dramatiq.middleware.TimeLimit\",\n            \"dramatiq.middleware.Callbacks\",\n            \"dramatiq.middleware.Retries\",\n        ],\n    }\n    DRAMATIQ_REGISTRY = 'myapp.registry.tasks'\n\n5. Start the worker process:\n\n   .. code-block:: sh\n\n    $ dramatiq django_dramatiq_pg.worker\n\nThis worker module will auto-discover any module called 'actors' in\n``INSTALLED_APPS``.\n\nRegistry\n========\n\nIn a typical `dramatiq` application, the `Broker` is configured before any\ntasks are registered. However, as `Django` is in control of the intialisation\nsequence, there is an issue of ordering; the `actor` decorator assumes the\nbroker is already configured.\n\nTo resolve this, `django_dramatiq_pg` provides a `Registry` for your tasks,\nwhich is then bound to the `Broker` when Django initialises.\n\nIn your code, declare a `Registry` instance, and use its `.actor` method to\ndecorate your task functions. Then tell `django_dramatiq_pg` to use your\nregistry with the `DRAMATIQ_REGISTRY` setting.\n\nIf you do not specify one, `django_dramatiq_pg` will create one on start.\n\nThe registry can be accessed as the `.registry` attribute on the\n`django_dramatiq_pg` App instance.\n\nSettings\n--------\n\nDRAMATIQ_BROKER\n  A dict of options to pass when instantiating the broker.\n\nDRAMATIC_BROKER['OPTIONS']\n  Arguments to pass to the Broker.\n\nDRAMATIC_BROKER['MIDDLEWARE']\n  A list of middleware classes to be passed to the broker.\n\n  These can either be import strings, or instances.\n\nDRAMATIQ_ENCODER\n  Default: None\n\n  Import path for encoder class.\n\nDRAMATIQ_ACTORS_MODULE\n  Default: 'actors'\n\n  Name of module use to auto-discover actors in INSTALLED_APPS.\n\nDRAMATIQ_REGISTRY\n\n  Import path for the task Registry instance.\n\n  This should refer to an instance of `django_dramatiq_pg.registry.Registry`.\n\n  This resolves the chicken/egg problem of declaring tasks before the broker is\n  configured.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uptick/django-dramatiq-pg",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dramatiq-pg",
    "package_url": "https://pypi.org/project/django-dramatiq-pg/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dramatiq-pg/",
    "project_urls": {
      "Homepage": "https://github.com/uptick/django-dramatiq-pg"
    },
    "release_url": "https://pypi.org/project/django-dramatiq-pg/1.3.1/",
    "requires_dist": [
      "django (>=3.1)",
      "dramatiq-pg (>=0.9.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Integration of Django with dramatiq-pg",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8339623,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e7e770da7db3b9e5ebf6f3d2517e49bfdcf46581c113469574a0a225470f8ec",
        "md5": "24d78805a4e4b47167772faea421df8b",
        "sha256": "53ddc4a49ff65156ec53676b9d1d3fd83b99057f9be4a8efe11b02665d113df7"
      },
      "downloads": -1,
      "filename": "django_dramatiq_pg-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24d78805a4e4b47167772faea421df8b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 7500,
      "upload_time": "2020-10-05T03:50:42",
      "upload_time_iso_8601": "2020-10-05T03:50:42.894626Z",
      "url": "https://files.pythonhosted.org/packages/0e/7e/770da7db3b9e5ebf6f3d2517e49bfdcf46581c113469574a0a225470f8ec/django_dramatiq_pg-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1e085a456670c315eca2baced4b3d3b6d3de86d2db37799fd60f388bf24d797",
        "md5": "eb96d6ae209b109315ab0060bf9693ee",
        "sha256": "6ffcf6fc0ce64ef403989eacdcb1b2e7b1f4fddc3df92818989572240948d93e"
      },
      "downloads": -1,
      "filename": "django-dramatiq-pg-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb96d6ae209b109315ab0060bf9693ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 7241,
      "upload_time": "2020-10-05T03:50:41",
      "upload_time_iso_8601": "2020-10-05T03:50:41.155435Z",
      "url": "https://files.pythonhosted.org/packages/c1/e0/85a456670c315eca2baced4b3d3b6d3de86d2db37799fd60f388bf24d797/django-dramatiq-pg-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}