{
  "info": {
    "author": "Department for International Trade",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django-staff-sso-client\n\n[![CircleCI](https://circleci.com/gh/uktrade/django-staff-sso-client/tree/master.svg?style=svg)](https://circleci.com/gh/uktrade/django-staff-sso-client/tree/master)\n[![codecov](https://codecov.io/gh/uktrade/django-staff-sso-client/branch/master/graph/badge.svg)](https://codecov.io/gh/uktrade/django-staff-sso-client)\n![PyPI](https://img.shields.io/pypi/v/django-staff-sso-client.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-staff-sso-client.svg)\n![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-staff-sso-client.svg)\n\n\nA Django client for `staff-sso`\n\n\n## Requirements\n\n[Python 3.6](https://www.python.org/downloads/release/python-368/)\n\n[Django>=2.22](https://www.djangoproject.com/)\n\nVersion 2+ of this package drops support for Django version below 2.22.\n\nFor Django versions `1.11 <= Django < 2.22` install v1.0.1:\n\n`pip install django-staff-sso-client==1.0.1`\n\nThis client assumes your app  has either `raven` or `sentry_sdk` installed\n\n[Raven Python](https://github.com/getsentry/raven-python)\n\n[Sentry SDK](https://github.com/getsentry/sentry-python)\n\n\n## Upgrade to version 1.0.0 considerations\n\nFrom version `1.0.0` the backend populates `User.USERNAME_FIELD` with the `user_id` rather than the `email`. This is\nto solve a bug affecting users with multiple email addresses.\nIf `MIGRATE_EMAIL_USER_ON_LOGIN` is `True`, the authentication backend tries to migrate existing users.\nIt is recommended to turn `MIGRATE_EMAIL_USER_ON_LOGIN` to `False` (defaults to `False`) if not needed or when all the users are migrated to avoid \ndouble database calls.\n\n### What happens if two email based users are migrated to user_id?\nImagine the scenario where Testo Useri has two different email based accounts:\n\n1) testo.user@foo.com\n2) testo_user@bar.com\n\nAs soon as they login with the first one, the account is converted to `user_id`.\nIf they try to login with the second one, the authentication backends cannot convert the account because an account with the\nsame `user_id` already exists.\nThe authentication backends will raise an exception, **this is intended behaviour**.\n\n\n## Installation\n\n`pip install django-staff-sso-client`\n\n## Configuration\n\nAdd the following to your settings file:\n\n```\nINSTALLED_APPS=[\n    [...]\n    'authbroker_client',\n]\n```\n\n```\n# authbroker config\nAUTHBROKER_URL = 'speak-to-webops-team-for-access'\nAUTHBROKER_CLIENT_ID = 'speak-to-webops-team-for-access'\nAUTHBROKER_CLIENT_SECRET = 'speak-to-webops-team-for-access'\n```\n\nAdd the `'authbroker_client.backends.AuthbrokerBackend'` authentication backend, e.g:\n\n```\nAUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n    'authbroker_client.backends.AuthbrokerBackend',\n]\n```\n\nAdd the LOGIN_URL ( it must be '/auth/login' )\n\n```\nLOGIN_URL = reverse_lazy('authbroker_client:login')\n```\n\nAdd the LOGIN_REDIRECT_URL for e.g.\n```\nLOGIN_REDIRECT_URL = reverse_lazy('home_page')\n```\n\nThen finally add this to your main `urls.py` file:\n\n`path('auth/', include('authbroker_client.urls'))`\n\nor, if you're using Django<2:\n\n`url('^auth/', include('authbroker_client.urls', namespace='authbroker', app_name='authbroker_client'))`\n\n\nYou should now have an `/auth/login/` URL which directs users through the `staff-sso` login flow. Once a user is\nauthenticated via `staff-sso` (and chosen identify provider), they will be redirected back to your application.\nA local django user with a matching email address will then be logged in. The user entry will be created if it does\nnot already exist in the database.\n\nOnce authenticated, the user will be redirected to `settings.LOGIN_REDIRECT_URL`\n\nUse the django `@login_required` decorator to protect individual views, or if you want to protect all views use this middleware:\n\n```\nMIDDLEWARE = [\n    [...]\n    'authbroker_client.middleware.ProtectAllViewsMiddleware',\n]\n```\n\nif you do like to use admin interface  in your app, when using this module, you will also need to install and configure the [custom_usermodel](https://github.com/uktrade/django-staff-sso-usermodel).\n\n## TODO:\n\n* ensure has_valid_token() checks with `staff-sso` after grace period (e.g. 1 minute)\n* improve exception handling logic in `authbroker_client/views.py`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uktrade/django-staff-sso-client/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-staff-sso-client",
    "package_url": "https://pypi.org/project/django-staff-sso-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-staff-sso-client/",
    "project_urls": {
      "Homepage": "https://github.com/uktrade/django-staff-sso-client/"
    },
    "release_url": "https://pypi.org/project/django-staff-sso-client/2.0.1/",
    "requires_dist": [
      "Django (<4,>=2.2)",
      "requests-oauthlib",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-sugar ; extra == 'test'",
      "flake8 (==3.0.4) ; extra == 'test'",
      "requests-mock ; extra == 'test'",
      "codecov ; extra == 'test'",
      "twine ; extra == 'test'",
      "wheel ; extra == 'test'",
      "setuptools ; extra == 'test'",
      "pytest-django ; extra == 'test'",
      "raven ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Reusable Django app to facilitate gov.uk Staff Single Sign On",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15813419,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddb745a1f9e568ec2837bac9803c5560428a9edd054864686636243b4b4c6492",
        "md5": "962873aedc54e4166e52ddfc50bef43b",
        "sha256": "ba58f81f91abb2f987e1d50b0f2baeaf1ea2b98fa7aa94616597fa195fa10abd"
      },
      "downloads": -1,
      "filename": "django_staff_sso_client-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "962873aedc54e4166e52ddfc50bef43b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11562,
      "upload_time": "2020-03-03T12:13:57",
      "upload_time_iso_8601": "2020-03-03T12:13:57.060972Z",
      "url": "https://files.pythonhosted.org/packages/dd/b7/45a1f9e568ec2837bac9803c5560428a9edd054864686636243b4b4c6492/django_staff_sso_client-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}