{
  "info": {
    "author": "Department for International Trade",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django-staff-sso-client\n\n[![CircleCI](https://circleci.com/gh/uktrade/django-staff-sso-client/tree/master.svg?style=svg)](https://circleci.com/gh/uktrade/django-staff-sso-client/tree/master)\n[![codecov](https://codecov.io/gh/uktrade/django-staff-sso-client/branch/master/graph/badge.svg)](https://codecov.io/gh/uktrade/django-staff-sso-client)\n![PyPI](https://img.shields.io/pypi/v/django-staff-sso-client.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-staff-sso-client.svg)\n![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-staff-sso-client.svg)\n\n\nA Django client for `staff-sso`\n\n\n## Requirements\n\n[Python 3.6](https://www.python.org/downloads/release/python-368/)\n\n[Django>=2.22](https://www.djangoproject.com/)\n\nVersion 2+ of this package drops support for Django version below 2.22.\n\nFor Django versions `1.11 <= Django < 2.22` install v1.0.1:\n\n`pip install django-staff-sso-client==1.0.1`\n\nThis client assumes your app  has either `raven` or `sentry_sdk` installed\n\n[Raven Python](https://github.com/getsentry/raven-python)\n\n[Sentry SDK](https://github.com/getsentry/sentry-python)\n\n\n## Upgrade to version 3.0.0 considerations\n\nThe default ID field has been changed to `email_user_id`. Previously the `user_id` (guid) was the default field - see below for details on how to revert to `user_id` if needed.\n\n`MIGRATE_EMAIL_USER_ON_LOGIN` logic has been removed.\n\n## Installation\n\n`pip install django-staff-sso-client`\n\n## Configuration\n\nAdd the following to your settings file:\n\n```\nINSTALLED_APPS=[\n    [...]\n    'authbroker_client',\n]\n```\n\n```\n# authbroker config\nAUTHBROKER_URL = 'speak-to-webops-team-for-access'\nAUTHBROKER_CLIENT_ID = 'speak-to-webops-team-for-access'\nAUTHBROKER_CLIENT_SECRET = 'speak-to-webops-team-for-access'\nAUTHBROKER_STAFF_SSO_SCOPE = 'any-additional-scope-values'\nAUTHBROKER_ANONYMOUS_PATHS = (Tuple/list of paths that should be unprotected)\n```\n\nAdd the `'authbroker_client.backends.AuthbrokerBackend'` authentication backend, e.g:\n\n```\nAUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n    'authbroker_client.backends.AuthbrokerBackend',\n]\n```\n\nAdd the LOGIN_URL ( it must be '/auth/login' )\n\n```\nLOGIN_URL = reverse_lazy('authbroker_client:login')\n```\n\nAdd the LOGIN_REDIRECT_URL for e.g.\n```\nLOGIN_REDIRECT_URL = reverse_lazy('home_page')\n```\n\nThen finally add this to your main `urls.py` file:\n\n`path('auth/', include('authbroker_client.urls'))`\n\nor, if you're using Django<2:\n\n`url('^auth/', include('authbroker_client.urls', namespace='authbroker', app_name='authbroker_client'))`\n\n\nYou should now have an `/auth/login/` URL which directs users through the `staff-sso` login flow. Once a user is\nauthenticated via `staff-sso` (and chosen identify provider), they will be redirected back to your application.\nA local django user with a matching email address will then be logged in. The user entry will be created if it does\nnot already exist in the database.\n\nOnce authenticated, the user will be redirected to `settings.LOGIN_REDIRECT_URL`\n\nUse the django `@login_required` decorator to protect individual views, or if you want to protect all views use this middleware:\n\n```\nMIDDLEWARE = [\n    [...]\n    'authbroker_client.middleware.ProtectAllViewsMiddleware',\n]\n```\n\n## Change the default user id field\n\nStaff-sso maintains two unique user ids for each user: the `email_user_id` field, which is in an email format [NOTE: it is purely a unique id, not a valid email address] and the `user_id` field, which is a GUID.  By default (from version 3.0.0 onwards) django-staff-sso-client identifies users based on the `email_user_id` field.  This is the preferred option for most cases.  If however, you need to use the `user_id` field, then add this to your settings.py file:\n\n```\nAUTHBROKER_USE_USER_ID_GUID = True\n```\n\nWhen creating new users django-staff-sso-client attempts to store the user id in the `User.USERNAME_FIELD` field.  With the stock django model this will be the `username` field.  If you use a custom user model you can override this field as needed, for example:\n\n```\nclass YourCustomUserModel(...):\n  USERNAME_FIELD = 'sso_email_id'\n```\n\nNOTE: As per django's documentation, the `USERNAME_FIELD` should be the user model's primary key.\n\n## Change the user creation mapping\n\nHere's an example staff-sso profile, which is available at the point of user creation:\n\n```\n{\n    'user_id': '6fa3b542-9a6f-4fc3-a248-168596572999',   \n    'email_user_id': 'john.smith-6fa3b542@id.trade.gov.uk',    \n    'email': 'john.smith@someplace.gov.uk',\n    'contact_email': 'john.smith@someemail.com',\n    'related_emails': [   'jsmith@someotherplace.com',\n                          'me@johnsmith.com'],  \n    'first_name': 'John',\n    'last_name': 'Smith',                \n    'groups': [ ... ],                    \n    'permitted_applications': [ ... ],\n    'access_profiles': [ ... ]\n}\n```\n\nThe default mapping is:\n\n```\n{\n      'email': profile['email'],\n      'first_name': profile['first_name'],\n      'last_name': profile['last_name'],\n}\n```\n\nYou can change this default mapping by subclassing the authentication backend `authbroker_client.backends.AuthbrokerBackend` and overriding the `user_create_mapping` method.\n\nHere's an example:\n\n```\nfrom authbroker_client.backends import AuthbrokerBackend\n\n\nclass CustomAuthbrokerBackend(AuthbrokerBackend):\n    def user_create_mapping(self, profile):\n        return {\n            \"is_active\": True,\n            \"first_name\": profile[\"first_name\"],\n            \"last_name\": profile[\"last_name\"],\n        }\n```\n\n### Exclude page from SSO Auth check\n\nIn order to allow anonymous access to a page on a site protected using this client, add the following setting to your Django settings file:\n\n```\nAUTHBROKER_ANONYMOUS_PATHS = ('anonymous/path',)\n```\n## Use with UKTrade mock-sso package\n\nIt is possible to configure this package to work with the [mock-sso service](https://github.com/uktrade/mock-sso).\n\nMock SSO requires that you provide a non-standard parameter in the query string of the initial GET call of the OAuth flow. (See the [mock-sso docs](https://github.com/uktrade/mock-sso/blob/master/README.md) for more detail.)\n\nThis parameter is called `code`. Any services which use THIS library (django-mock-sso-client) could need to undertake automated tests of a stack which uses Staff SSO for downstream components (example: testing an app which in return requires access to another service's API, both of which use SSO for authentication).\n\nFor circumstances like these you will need to prime mock-sso with this `code` parameter.\n\nThis is achieved by changing the Django settings for the app which is importing THIS library. In those settings, add:\n```\nTEST_SSO_PROVIDER_SET_RETURNED_ACCESS_TOKEN = 'someCode'\n```\nwhere 'someCode' will then be provided as the 'access token' during the OAuth callback to mock-sso. (Again, see the [mock-sso docs](https://github.com/uktrade/mock-sso/blob/master/README.md) for more detail.)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uktrade/django-staff-sso-client/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-staff-sso-client",
    "package_url": "https://pypi.org/project/django-staff-sso-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-staff-sso-client/",
    "project_urls": {
      "Homepage": "https://github.com/uktrade/django-staff-sso-client/"
    },
    "release_url": "https://pypi.org/project/django-staff-sso-client/3.1.1/",
    "requires_dist": [
      "Django (<4,>=2.2)",
      "requests-oauthlib",
      "pytest (==5.3.5) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-sugar ; extra == 'test'",
      "flake8 (==3.0.4) ; extra == 'test'",
      "requests-mock ; extra == 'test'",
      "codecov ; extra == 'test'",
      "twine ; extra == 'test'",
      "wheel ; extra == 'test'",
      "setuptools ; extra == 'test'",
      "pytest-django ; extra == 'test'",
      "raven ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Reusable Django app to facilitate gov.uk Staff Single Sign On",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15813419,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d075225229d301b4b3cc7955929fd886104613b5b6d2e27927e14c13dbe710a",
        "md5": "ea434c314a9b2039785a1bca973b7960",
        "sha256": "56ab9ce7b9418a185349571204aa04d7881cfd80ff6f30ea4859fc3c086e6d4e"
      },
      "downloads": -1,
      "filename": "django_staff_sso_client-3.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea434c314a9b2039785a1bca973b7960",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14522,
      "upload_time": "2021-09-30T15:24:58",
      "upload_time_iso_8601": "2021-09-30T15:24:58.096884Z",
      "url": "https://files.pythonhosted.org/packages/7d/07/5225229d301b4b3cc7955929fd886104613b5b6d2e27927e14c13dbe710a/django_staff_sso_client-3.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5452af8ef04439f6320746d4192f4db5f4b307c5e5a3ecb45ba4cc4e4b60bc74",
        "md5": "3f8bd541d1ba1e8d564b3dd71e009f56",
        "sha256": "9db1bfb49c598e49665693a8812a403902c772df6ae1249f32f5c03bf627a913"
      },
      "downloads": -1,
      "filename": "django_staff_sso_client-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3f8bd541d1ba1e8d564b3dd71e009f56",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13556,
      "upload_time": "2021-09-30T15:24:59",
      "upload_time_iso_8601": "2021-09-30T15:24:59.254146Z",
      "url": "https://files.pythonhosted.org/packages/54/52/af8ef04439f6320746d4192f4db5f4b307c5e5a3ecb45ba4cc4e4b60bc74/django_staff_sso_client-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}