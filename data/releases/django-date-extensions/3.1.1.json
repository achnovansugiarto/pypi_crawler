{
  "info": {
    "author": "Matthew Somerville",
    "author_email": "matthew-pypi@dracos.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Database",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-date-extensions\nby Matthew Somerville\n\nThis code adds a few small extensions to Django's DateField, to handle both\napproximate dates (e.g. \"March 1963\") and default year dates (e.g. assume\n\"24th June\" is the most recent such).\n\nexample contains a hopefully self-contained Django project that simply shows\noff a form with these methods of entry.\n\nApproximate dates\n=================\n\nA new object, ApproximateDate, is used to represent dates that might not have a\nmonth or a day. ApproximateDateField is the model field used to represent these\nobjects in a Model, and ApproximateDateFormField is the field used in a Django\nform. Everything should work seamlessly simply by specifying a model field as\nApproximateDateField rather than DateField.\n\nDefault year dates\n==================\n\nPrettyDateField is a form field to be used on DateField model fields. It takes\none argument, future, which is a nullable boolean. If True, a date input that\nis missing a year will be taken to be the next possible occurrence of that date\n- e.g. on 24th November 2009, entering 24th December will be taken to be\n2009-12-24, whilst entering 3rd March will be taken to be 2010-03-03. If future\nis False, the reverse occurs, with year-less dates being assumed to be the\nclosest occurrence of that date in the past.\n\nIf future is not set, then PrettyDateField acts the same as a DateField, only\nallows suffixes on ordinals, and assumes D/M/Y rather than M/D/Y. \n\nTesting\n=======\nRun 'tox' with tox installed.\n\nTodo\n====\n\nImprove date parsing to take more inputs like my traintimes.org.uk PHP, such as\n\"next Friday\".\n\n\nAny queries or comments, do get in touch. Something's probably broken, as I tried\nto tidy up the code a little for public release :)\n\nMatthew Somerville.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dracos/django-date-extensions",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-date-extensions",
    "package_url": "https://pypi.org/project/django-date-extensions/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-date-extensions/",
    "project_urls": {
      "Homepage": "https://github.com/dracos/django-date-extensions"
    },
    "release_url": "https://pypi.org/project/django-date-extensions/3.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This code adds a few small extensions to Django's DateField,to handle both approximate dates (e.g. 'March 1963') and default year dates(e.g. assume '24th June' is the most recent such).",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13653813,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f5cbfcc07af955ee4746b55cd31a3e7023df83be1e531d6196c34b4ce6c1245",
        "md5": "2701a329d422a6cf7a234cc427a97c9b",
        "sha256": "a3855fa89e890b37ea25300b35fb781c095bb8601b0b3ca9ad641d8845cc7942"
      },
      "downloads": -1,
      "filename": "django_date_extensions-3.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2701a329d422a6cf7a234cc427a97c9b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 20604,
      "upload_time": "2020-12-28T12:44:10",
      "upload_time_iso_8601": "2020-12-28T12:44:10.769710Z",
      "url": "https://files.pythonhosted.org/packages/5f/5c/bfcc07af955ee4746b55cd31a3e7023df83be1e531d6196c34b4ce6c1245/django_date_extensions-3.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b551def8ce3f07574bc9d8fb756199fc045bf9116b4cb02551b27d8cbabbc18",
        "md5": "645fdb1550deacbdb54266ede065af1d",
        "sha256": "dc795c145952a6efb37ff694184a2628c42acea83250594e1555d3cbbb50b5a6"
      },
      "downloads": -1,
      "filename": "django_date_extensions-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "645fdb1550deacbdb54266ede065af1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6528,
      "upload_time": "2020-12-28T12:44:12",
      "upload_time_iso_8601": "2020-12-28T12:44:12.288981Z",
      "url": "https://files.pythonhosted.org/packages/1b/55/1def8ce3f07574bc9d8fb756199fc045bf9116b4cb02551b27d8cbabbc18/django_date_extensions-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}