{
  "info": {
    "author": "Amit Dev",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: C",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "LRU Dict\n========\n\nA fixed size dict like container which evicts Least Recently Used (LRU) items\nonce size limit is exceeded. There are many python implementations available\nwhich does similar things. This is a fast and efficient C implementation which\nis not thread safe. If you are looking for pure python version, look `else where <http://www.google.com/search?q=python+lru+dict>`_.\n\nUsage\n=====\n\nThis can be used to build a LRU cache. Usage is almost like a dict.\n\n.. code:: python\n\n  from lru import LRU\n  l = LRU(5)         # Create an LRU container that can hold 5 items\n  for i in range(5):\n     l[i] = str(i)\n  print l.items()    # Prints items in MRU order\n  # Would print [(4, '4'), (3, '3'), (2, '2'), (1, '1'), (0, '0')]\n\n  l[5] = '5'         # Inserting one more item should evict the old item\n  print l.items()\n  # Would print [(5, '5'), (4, '4'), (3, '3'), (2, '2'), (1, '1')]\n\n  l[3]               # Accessing an item would make it MRU\n  l.items()\n  # Would print [(3, '3'), (5, '5'), (4, '4'), (2, '2'), (1, '1')]\n  # Now 3 is in front\n\n  l.keys()           # Can get keys alone in MRU order\n  # Would print [3, 5, 4, 2, 1]\n\n  del l[4]           # Delete an item\n  print l.items()\n  # Would print [(3, '3'), (5, '5'), (2, '2'), (1, '1')]\n\n\nWhen to use this\n================\n\nLike mentioned above there are many python implementations of an LRU. Use this\nif you need a faster and memory efficient alternative. It is implemented with a\ndict and associated linked list to keep track of LRU order. See code for a more\ndetailed explanation.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amitdev/lru-dict",
    "keywords": "lru,dict",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lru-dict",
    "package_url": "https://pypi.org/project/lru-dict/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lru-dict/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/amitdev/lru-dict"
    },
    "release_url": "https://pypi.org/project/lru-dict/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "An Dict like LRU container.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14382711,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "108e7fdc5705036a5b010945ce10814187c51254bd6a24e51bbcd5f1a2109e4b",
        "md5": "d69838c98a375e779436e6d641edee3e",
        "sha256": "d5c27815c121d2e3951c1d9c7f3e00797fbfa270950b240b8e453f43747750cb"
      },
      "downloads": -1,
      "filename": "lru-dict-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d69838c98a375e779436e6d641edee3e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5085,
      "upload_time": "2013-06-12T14:15:41",
      "upload_time_iso_8601": "2013-06-12T14:15:41.502357Z",
      "url": "https://files.pythonhosted.org/packages/10/8e/7fdc5705036a5b010945ce10814187c51254bd6a24e51bbcd5f1a2109e4b/lru-dict-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}