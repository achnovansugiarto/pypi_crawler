{
  "info": {
    "author": "Rahul Bhargava",
    "author_email": "rahulb@media.mit.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "MediaCloud Python API Client\n============================\n\nThis is a python client for accessing the `MediaCloud API\nv2 <https://github.com/berkmancenter/mediacloud/blob/master/doc/api_2_0_spec/api_2_0_spec.md>`__.\n\nUsage\n-----\n\nFirst `sign up for an API\nkey <https://core.mediacloud.org/login/register>`__. Then\n\n::\n\n    pip install mediacloud\n\nCheck ``CHANGELOG.md`` for a detailed history of changes.\n\nExamples\n--------\n\nFind out how many stories in the top US online news sites mentioned\n\"Zimbabwe\" in the last year:\n\n.. code:: python\n\n    import mediacloud\n    mc = mediacloud.api.MediaCloud('MY_API_KEY')\n    res = mc.storyCount('zimbabwe AND president AND tags_id_media:58722749', 'publish_date:[NOW-1YEAR TO NOW]')\n    print res['count']  # prints the number of stories found\n\nGet 2000 stories from the NYT about a topic in 2018 and dump the output\nto json:\n\n.. code:: python\n\n    import mediacloud, json, datetime\n    mc = mediacloud.api.MediaCloud('MY_API_KEY')\n\n    fetch_size = 500\n    stories = []\n    last_processed_stories_id = 0\n    while len(stories) < 2000:\n        fetched_stories = mc.storyList('trump AND \"north korea\" AND media_id:1', \n                                       solr_filter=mc.publish_date_query(datetime.date(2018,1,1), datetime.date(2019,1,1)),\n                                       last_processed_stories_id=last_processed_stories_id, rows= fetch_size)\n        stories.extend(fetched_stories)\n        if len( fetched_stories) < fetch_size:\n            break\n        last_processed_stories_id = stories[-1]['processed_stories_id']\n    print json.dumps(stories)\n\nFind the most commonly used words in stories from the US top online news\nsites that mentioned \"Zimbabwe\" and \"president\" in 2013:\n\n.. code:: python\n\n    import mediacloud, datetime\n    mc = mediacloud.api.MediaCloud('MY_API_KEY')\n    words = mc.wordCount('zimbabwe AND president AND tags_id_media:58722749',\n                         mc.publish_date_query( datetime.date( 2013, 1, 1), datetime.date( 2014, 1, 1)))\n    print words[0]  # prints the most common word\n\nTo find out all the details about one particular story by id:\n\n.. code:: python\n\n    import mediacloud\n    mc = mediacloud.api.MediaCloud('MY_API_KEY')\n    story = mc.story(169440976)\n    print story['url']  # prints the url the story came from\n\nTo save the first 100 stories from one day to a database:\n\n.. code:: python\n\n    import mediacloud, datetime\n    mc = mediacloud.api.MediaCloud('MY_API_KEY')\n    db = mediacloud.storage.MongoStoryDatabase('one_day')\n    stories = mc.storyList('*', mc.publish_date_query( datetime.date (2014, 01, 01), datetime.date(2014,01,02) ),\n                           last_processed_stories_id=0,rows=100)\n    [db.addStory(s) for s in stories]\n    print db.storyCount()\n\nTake a look at the test in the ``mediacloud/test/`` module for more\ndetailed examples.\n\nDevelopment\n-----------\n\nIf you are interested in adding code to this module, first clone `the\nGitHub repository <https://github.com/c4fcm/MediaCloud-API-Client>`__.\n\nTesting\n-------\n\nFirst run all the tests. Copy ``mc-client.config.template`` to\n``mc-client.config`` and edit it. Then run ``python tests.py``.\n\nDistributing a New Version\n--------------------------\n\n1. Run ``python test.py`` to make sure all the test pass\n2. Update the version number in ``mediacloud/__init__.py``\n3. Make a brief note in the version history section in the README file\n   about the changes\n4. Run ``python setup.py sdist`` to test out a version locally\n5. Then run ``python setup.py sdist upload -r pypitest`` to release a\n   test version to PyPI's test server\n6. Run ``pip install -i https://testpypi.python.org/pypi mediacloud``\n   somewhere and then use it with Python to make sure the test release\n   works.\n7. When you're ready to push to pypi run\n   ``python setup.py sdist upload -r pypi``\n8. Run ``pip install mediacloud`` somewhere and then try it to make sure\n   it worked.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mediacloud.org",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mediacloud",
    "package_url": "https://pypi.org/project/mediacloud/",
    "platform": "",
    "project_url": "https://pypi.org/project/mediacloud/",
    "project_urls": {
      "Homepage": "http://mediacloud.org"
    },
    "release_url": "https://pypi.org/project/mediacloud/3.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MediaCloud API Client Library",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17500262,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ea9c40118cb86ba76a3a469f925c9fae5d8edb0b0252c676a1024f8044dbc97",
        "md5": "13033e18d57a470bdb2a8936472d2d36",
        "sha256": "c09d8d09cf190fc0b0ca61d046ebb24b745519ae0a5a1b562e36df1bcd86238d"
      },
      "downloads": -1,
      "filename": "mediacloud-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "13033e18d57a470bdb2a8936472d2d36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20010,
      "upload_time": "2018-05-18T00:51:43",
      "upload_time_iso_8601": "2018-05-18T00:51:43.482384Z",
      "url": "https://files.pythonhosted.org/packages/0e/a9/c40118cb86ba76a3a469f925c9fae5d8edb0b0252c676a1024f8044dbc97/mediacloud-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}