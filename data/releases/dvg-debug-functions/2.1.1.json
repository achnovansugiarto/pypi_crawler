{
  "info": {
    "author": "Dennis van Gils",
    "author_email": "vangils.dennis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/dvg-debug-functions\n    :target: https://pypi.org/project/dvg-debug-functions\n.. image:: https://img.shields.io/pypi/pyversions/dvg-debug-functions\n    :target: https://pypi.org/project/dvg-debug-functions\n.. image:: https://travis-ci.org/Dennis-van-Gils/python-dvg-debug-functions.svg?branch=master\n    :target: https://travis-ci.org/Dennis-van-Gils/python-dvg-debug-functions\n.. image:: https://coveralls.io/repos/github/Dennis-van-Gils/python-dvg-debug-functions/badge.svg?branch=master\n    :target: https://coveralls.io/github/Dennis-van-Gils/python-dvg-debug-functions?branch=master\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n.. image:: https://img.shields.io/badge/License-MIT-purple.svg\n    :target: https://github.com/Dennis-van-Gils/python-dvg-debug-functions/blob/master/LICENSE.txt\n\nDvG_debug_functions\n===================\nProvides functions for printing debug information to the terminal output.\n\n\n``print_fancy_traceback(err=None, back: int = 3, show_full_paths: bool = False)``\n----------------------------------------------------------------------------------------\n\n    Print the exception or the current regular call-stack traceback to the\n    terminal, using ANSI color codes that mimic the IPython command shell.\n\n    Args:\n        err (``Exception`` | ``str`` | ``None``, optional):\n            When ``err`` is of type ``Exception``, then an exception traceback will\n            be printed. When ``err`` is of another type, then the current regular\n            call-stack traceback will be printed.\n\n            Default: ``None``\n\n        back (``int``, optional):\n            Depth of the traceback to print.\n\n            Default: ``3``\n\n        show_full_paths (``bool``, optional):\n            Shows the full filepath in the traceback when True, otherwise just\n            the filename.\n\n            Default: ``False``\n\n    Example output:\n\n    .. image:: images/print_fancy_traceback.png\n\n\n``dprint(str_msg: str, ANSI_color: str = None)``\n----------------------------------------------------\n\n    'Debug' print a single line to the terminal with optional ANSI color\n    codes. The line will be terminated with a newline character and the\n    terminal output buffer is forced to flush before and after every print.\n    In addition, if PyQt5 is present in the Python environment, then a mutex\n    lock will be obtained and released again for each dprint execution.\n\n    There is a lot of overhead using this print statement, but it is\n    particularly well-suited for multithreaded PyQt programs where multiple\n    threads are each printing information to the same terminal. The ``dprint()``\n    function ensure that each line sent to the terminal will remain as a\n    continious single line, whereas a regular ``print()`` statement will likely\n    result in the lines getting mixed up.\n\n\n``tprint(str_msg, ANSI_color: str = None)``\n-----------------------------------------------\n\n    Identical to ``dprint()``, but now prepended with a ``time.perf_counter()``\n    timestamp.\n\n``ANSI``\n--------\n\n    ::\n\n        class ANSI:\n            NONE    = \"\"\n            RED     = \"\\033[1;31m\"\n            GREEN   = \"\\033[1;32m\"\n            YELLOW  = \"\\033[1;33m\"\n            BLUE    = \"\\033[1;34m\"\n            PURPLE  = \"\\033[1;35m\"  # aka MAGENTA\n            MAGENTA = \"\\033[1;35m\"\n            CYAN    = \"\\033[1;36m\"\n            WHITE   = \"\\033[1;37m\"\n\nChangelog\n=========\n\n2.1.1 (2020-07-18)\n------------------\n* Added flag `show_full_paths` to `print_fancy_traceback()`\n\n2.1.0 (2020-07-17)\n------------------\n* Improved `print_fancy_traceback()`\n\n2.0.0 (2020-07-02)\n------------------\n* DvG module filenames changed to lowercase\n\n1.1.2 (2020-06-08)\n------------------\n* Code style: black\n\n1.1.1 (2020-06-06)\n------------------\n* Extended README\n\n1.1.0 (2020-06-04)\n------------------\n* Added `tprint(...)`\n\n0.0.1 (2020-05-13)\n------------------\n* First release on PyPI.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dennis-van-Gils/python-dvg-debug-functions",
    "keywords": "multithread,traceback,debugging,utility,fancy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvg-debug-functions",
    "package_url": "https://pypi.org/project/dvg-debug-functions/",
    "platform": "",
    "project_url": "https://pypi.org/project/dvg-debug-functions/",
    "project_urls": {
      "Homepage": "https://github.com/Dennis-van-Gils/python-dvg-debug-functions",
      "Issue Tracker": "https://github.com/Dennis-van-Gils/python-dvg-debug-functions/issues"
    },
    "release_url": "https://pypi.org/project/dvg-debug-functions/2.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Functions to neatly print debug information to the terminal output, well-suited for multithreaded programs.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17063031,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc21f4358f92a547ae811706ec9f3b8ca1c1dbbfe575916ee57604d32150cfc5",
        "md5": "233275a0e2ced428ea150900a34272b9",
        "sha256": "f0393b58b2a530c6eb31814abad054315fc11fbd4480b756036d13db22b7a1f6"
      },
      "downloads": -1,
      "filename": "dvg_debug_functions-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "233275a0e2ced428ea150900a34272b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6169,
      "upload_time": "2020-07-18T13:36:51",
      "upload_time_iso_8601": "2020-07-18T13:36:51.227429Z",
      "url": "https://files.pythonhosted.org/packages/cc/21/f4358f92a547ae811706ec9f3b8ca1c1dbbfe575916ee57604d32150cfc5/dvg_debug_functions-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d078147a27f664b35f428290f5446b29c6b3c0af1e1aab114126ff9e3062e865",
        "md5": "49c56fe662b14280c770b2f0c82822c6",
        "sha256": "5c46b9bec0d6a7758c3becec2e8e4a274f308aa471f778b36786aa51bd8bf266"
      },
      "downloads": -1,
      "filename": "dvg-debug-functions-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "49c56fe662b14280c770b2f0c82822c6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20843,
      "upload_time": "2020-07-18T13:36:52",
      "upload_time_iso_8601": "2020-07-18T13:36:52.545795Z",
      "url": "https://files.pythonhosted.org/packages/d0/78/147a27f664b35f428290f5446b29c6b3c0af1e1aab114126ff9e3062e865/dvg-debug-functions-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}