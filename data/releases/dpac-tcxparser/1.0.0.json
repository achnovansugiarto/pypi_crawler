{
  "info": {
    "author": "David Pacheco & Vinod Kurup",
    "author_email": "vinod@kurup.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "python-tcxparser\n================\n\n.. image:: https://img.shields.io/pypi/v/python-tcxparser.svg\n    :target: https://pypi.python.org/pypi/python-tcxparser\n    :alt: Latest PyPI version\n\n.. image:: https://travis-ci.org/vkurup/python-tcxparser.svg?branch=master\n   :target: https://travis-ci.org/vkurup/python-tcxparser\n   :alt: Latest Travis CI build status\n\n.. image:: https://pyup.io/repos/github/vkurup/python-tcxparser/shield.svg\n   :target: https://pyup.io/repos/github/vkurup/python-tcxparser/\n   :alt: Requirement Updates\n\n.. image:: https://codecov.io/gh/vkurup/python-tcxparser/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/vkurup/python-tcxparser\n   :alt: Code Coverage\n\n\npython-tcxparser is a minimal parser for Garmin's TCX file format. It\nis not in any way exhaustive. It extracts just enough data to allow me\nto post data from my Garmin ForeRunner 410 watch to\n`DailyMile's <http://dailymile.com>`_ API.\n\nData extracted:\n - latitude & longitude of start point of workout\n - type of workout (running, walking, etc)\n - time of completion of workout (in ISO UTC)\n - distance of workout (in meters)\n - duration of workout (in seconds)\n - calories burned during workout (as estimated by device)\n - average, max and min heart rate during workout\n - average pace during workout\n - average altitude during workout\n - ascent and descent of workout\n - max and min altitude\n - time stamp of each data point (in ISO UTC)\n - average and max cadence (cycling activities)\n\nInstallation\n------------\n\nInstall it from PyPI::\n\n   pip install python-tcxparser\n\nUsage\n-----\n\nBasic usage example::\n\n    >>> import tcxparser\n    >>> tcx = tcxparser.TCXParser('/home/vinod/Downloads/20121226-212953.tcx')\n    >>> # Duration of workout in seconds\n    ... tcx.duration\n    1992.78\n    >>> # latitude/longitude at start of workout\n    ... tcx.latitude\n    35.951880198\n    >>> tcx.longitude\n    -79.0931872185\n    >>> tcx.activity_type\n    'running'\n    >>> # ISO UTC timestamp when workout completed\n    ... tcx.completed_at\n    '2012-12-26T22:03:05Z'\n    >>> # distance of workout in meters\n    ... tcx.distance\n    4686.31103516\n    >>> tcx.distance_units\n    'meters'\n    >>> # calories burned (as reported by device)\n    ... tcx.calories\n    379\n\nCompatibility\n-------------\n\n* Python 2.7 or 3.6+\n\nLicense\n-------\n\n* BSD\n\nContact\n-------\n\nPlease contact me with any questions: Vinod Kurup (vinod@kurup.com)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidpch/python-tcxparser/",
    "keywords": "tcx",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpac-tcxparser",
    "package_url": "https://pypi.org/project/dpac-tcxparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpac-tcxparser/",
    "project_urls": {
      "Homepage": "https://github.com/davidpch/python-tcxparser/"
    },
    "release_url": "https://pypi.org/project/dpac-tcxparser/1.0.0/",
    "requires_dist": [
      "lxml"
    ],
    "requires_python": "",
    "summary": "Simple parser for Garmin/Polar TCX files",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15699384,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "536aa7aedebe9cdbe6844c6f6f8f6155a9e5b7c7600ec4a251934d7a89989e08",
        "md5": "a0aeac7cb81161324b94001e3639f89c",
        "sha256": "b0bc4ecda7182eac4e5c9b9e6e9e9accd15d922d8072f4cc25f7caaece1efe88"
      },
      "downloads": -1,
      "filename": "dpac_tcxparser-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0aeac7cb81161324b94001e3639f89c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5219,
      "upload_time": "2020-01-04T16:29:49",
      "upload_time_iso_8601": "2020-01-04T16:29:49.023403Z",
      "url": "https://files.pythonhosted.org/packages/53/6a/a7aedebe9cdbe6844c6f6f8f6155a9e5b7c7600ec4a251934d7a89989e08/dpac_tcxparser-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9fdbfff857f87e29f39c9f88f1d60dabbc495c13523ae090bd78343b9b91ed2",
        "md5": "c6b318e7d7eed433f06fcc4e97dc6741",
        "sha256": "6776c76e117b99be52762a8ca9f97f16a642b2470f4d5cf5df45aa54d60b740f"
      },
      "downloads": -1,
      "filename": "dpac-tcxparser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c6b318e7d7eed433f06fcc4e97dc6741",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3886,
      "upload_time": "2020-01-04T16:29:51",
      "upload_time_iso_8601": "2020-01-04T16:29:51.442515Z",
      "url": "https://files.pythonhosted.org/packages/d9/fd/bfff857f87e29f39c9f88f1d60dabbc495c13523ae090bd78343b9b91ed2/dpac-tcxparser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}