{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Minimal Tensor Serving Python Client\nA lightweight python client to communicate with Tensor Serving.\n\n## Description\nCommunicating with Tensorflow models via Tensor Serving requires [gRPC](https://grpc.io/) and Tensorflow-specific protobufs. The `tensorflow-serving-apis` package on PyPI provides these interfaces, but requires `tensorflow` as a dependency. The Tensorflow python package currently stands at 700 Mb, with much of this space dedicated to libraries and executables required for training, saving, and visualising Tensorflow Models; these libraries are not required at inference time when communicating with Tensorflow Serving.\n\nThis package exposes a minimal Tensor Serving client that does not include Tensorflow as a dependency. This reduces the overall package size to < 1 Mb. This is particularly useful when deploying web services via AWS Lambda that need to communicate with Tensorflow Serving, as Lambda carries a size limit on deployments.\n\n## Install from PyPi\nThis is the quickest way to get started! Just run:\n\n```Bash\npip install min-tfs-client\n```\n\n## Installing from source\nInstallation from source will require the protobuf compiler `protoc` to be installed and available to the command line (e.g. via the `PATH` environment variable). The protobuf compiler can be downloaded from the [protocolbuffers/protobuf](https://github.com/protocolbuffers/protobuf/releases) Github repo. Once `protoc` is installed and available, you can run:\n\n```Bash\ngit clone https://github.com/zendesk/min-tfs-client.git\ncd min-tfs-client\npython setup.py compile_pb copy_grpc\npip install .\n```\n\n## Development Installation\nFor dev installation, run `pip install -e .` instead of `pip install .`. Also, you will require `tensorflow-model-server` and `tensorflow` to be installed to run and modify the integration tests. Specifically:\n\n1. `tensorflow` is required to run the model generation script (`tests/integration/fixtures`) that creates a test model for integration testing. It is **not** required to just run the tests.\n2. `tensorflow-model-server` is required to serve the model to perform the integration test. The commands that are used to run these tests in Travis are contained in `.travis.yml`.\n\n## Usage\nBasic Usage\n``` Python\nfrom min_tfs_client.requests import TensorServingClient\nfrom min_tfs_client.tensors import tensor_proto_to_ndarray\n\nclient = TensorServingClient(host=\"127.0.0.1\", port=4080, credentials=None)\nresponse = client.predict_request(\n    model_name=\"default\",\n    model_version=1,\n    input_dict={\n        # These input keys are model-specific\n        \"string_input\": np.array([\"hello world\"]),\n        \"float_input\": np.array([0.1], dtype=np.float32),\n        \"int_input\": np.array([2], dtype=np.int64),\n    },\n)\nfloat_output = tensor_proto_to_ndarray(\n    # This output key is model-specific\n    response.outputs[\"float_output\"]\n)\n```\n\n## Running tests\n\nRun all tests with\n\n```Bash\npytest -v tests/\n```\n\nRun a single test file with\n\n```Bash\npytest <path_to_test_file>\n```\n\nRun unit / integration tests with\n\n```Bash\npytest tests/<unit or integration>\n```\n\n## Contribution Guidelines\nImprovements are always welcome. Please follow these steps to contribute:\n1. Submit a Pull Request with a detailed explanation of changes\n2. Receive approval from maintainers\n3. Maintainers will merge your changes\n\n## Licence Information\nUse of this software is subject to important terms and conditions as set forth in the [LICENSE](LICENCE) file.\n\nThe code contained within [protobuf_srcs/tensorflow](protobuf_srcs/tensorflow) is forked from [Tensorflow](https://github.com/tensorflow/tensorflow), and the code contained within [protobuf_srcs/tensorflow_serving](protobuf_srcs/tensorflow_serving) is forked from [Tensorflow Serving](https://github.com/tensorflow/serving). Please refer to the individual source files within `protobuf_srcs` for individual file licence information.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "min-tfs-client",
    "package_url": "https://pypi.org/project/min-tfs-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/min-tfs-client/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/min-tfs-client/1.0.1/",
    "requires_dist": [
      "grpcio (>=1.21)",
      "protobuf (>=3.8)",
      "numpy (>=1.16.4)",
      "black (==19.10b0) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "A minified Tensor Serving Client for Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6982686,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cc5612372393aa886f6c568e6586e411f73bbedd60f008c2a4e2648c73b089a",
        "md5": "2baaf42fe526ed3ccfd866f74ff99196",
        "sha256": "d280927af0247bb11e705bfb3d61b552c717536f36fb05a996cac3beaa50ff46"
      },
      "downloads": -1,
      "filename": "min_tfs_client-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2baaf42fe526ed3ccfd866f74ff99196",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 378433,
      "upload_time": "2020-02-27T04:23:06",
      "upload_time_iso_8601": "2020-02-27T04:23:06.033894Z",
      "url": "https://files.pythonhosted.org/packages/3c/c5/612372393aa886f6c568e6586e411f73bbedd60f008c2a4e2648c73b089a/min_tfs_client-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}