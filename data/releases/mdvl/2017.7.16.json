{
  "info": {
    "author": "Gunther Klessinger",
    "author_email": "gk@axiros.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "# Light Markdown Renderer\n\n[![Build Status][travis_img]][travis]\n\nDependency free renderer for a subset of markdown to the terminal\n- w/o going via HTML (i.e. no html markup support)\n- sloc (w/o comments) around 100, i.e. adaptable, extendable\n\n> This one is intended soleley to hilite somewhat \"lightly\" structured text\nreasonably swift. Ideal for highlighting doc strings or CLI command help, where you\ndon't want to install markdown libs to do that first - e.g. in new containers.\n\nIn no way this is useable as a full markdown document viewer, alone for the\nmissing html support.\n\nA real use case are bash scripts, where you repeatedly want to output formatted stuff, e.g. in a loop.\nThen, a very lightweight tool (short startup time for the python process)\nis desirable.\nNote: There [are](https://github.com/chadbraunduin/markdown.bash)\n unix standard tool based renderers around, with good results, check them out\n (and if only to see how awesome `sed` really is...).\nThey did not work for me for some output related problems - but they might for you.\n\nOriginally the script was within a Here Document within bash scripts but this\nversion would be also useable inline in a python programs. Thats why some\noverhead for config mgmt is present - for a version embedded in e.g. a bash\nscript you would only need the main function and replace the `C.<color>` with\nthe shell eviron vars, e.g. `C.H1` -> `$H1`\n\n\n# Design\n\nWe assume the soure *is* already formatted with care and\nmdvl's main jobs are the coloring and the wrapping. Meaning that the source is\nformatted to be readable in environments w/o coloring and structure aware wrapping,\nspecifically docstrings in source code editors.\n\nSpecifically this refers to the author using the markdown link reference feature\ninstead of spamming the source with long urls.  \nSeel also the handling of linespacing, below.\n\n\n# Usage\n\n## Inline\n\n    mdvl(source_markdown, **config)\n\n## Pipe\n\n    cat README.md | ./mdvl.py\n\n## Standalone\n\n```\n./mdv.py '''# Hello'''\n./mdv.py README.md\n```\n\n# 'Installation'\n\n    wget -q https://raw.githubusercontent.com/axiros/mdvl/master/mdvl.py\n\nYes, that url supports version pinning.\n\nIf you absolutely feel better with 10 files instead of one then do:\n\n    pip[3] install mdvl\n\n> Remember: This is not a very feature rich renderer. If you anyway already have pip on the system you want a real viewer, e.g. mdv.\n\n\n\n# Configuration / Features\n\nRestricted set of md. This readme pretty much has them all in.\n\nThis is how the default output looks with default config.\n![](./img/default.png)\n\nCheck attributes of classes [`Facts`][1] and [`Colors`][2].\nThose you can deliver as kw args or via environ. e.g.:\n\n```\nset -a; H1=171; H2=54; term_width=50; header_numbering=-1; set +a\n./mdvl.py README.md\n```\n\n\n## Worth mentioning\n\n### Blockquotes\n\n> Blockquotes\n>> - in different levels\n>> - with lists\n\n### Fenced Code or Indented Code\n\n    fenced code - or indented code\n    w/o syntax highlighting though\n\n### Line Spacing\nWe stay closer to the source document than a real md renderer would, e.g. we\n*keep* all linebreaks between two textblocks.\nIntra textblock rendering is working like the standard, i.e. 2 spaces denote a linesep, else we wrap according to available columns.\n\n\n\n## Questionable Features ;-)\n\n*Header Auto Numbering* Set this parameter to a min. number of lines of\nmarkdown sources (-1 to switch feature off). When source document has more\nlines than this we'll autonumber the headers.\n\n*Light \"Tables\"* This one is non standard - but somewhat handy for documenting e.g.\nCLI Params of a command:\nWhen first word of a line is starred, we set a starting indent for the\nsubsequent lines of that textblock to the length of that first word.\nSee rendering of this paragraph in `mdvl`.\nThat way you get an easy table-like presentation of lists with keywords,\nwhich look good also in the source. See the screenshot of the rendered readme for a visual example.\nIf you don't need it, switch it off via `no_smart_indent=True`.\n\n*Horizontal Rules* CommonMark allows to use 3 \"-\", \"_\" or star. We assign\ndifferent colors to them, see rendering of this README with `mdvl`.\n\n*Indents* configure `indent` and/or `width` and/or `rindent` (\"r\" for right) to get the output indented\nThat feature comes handy if you want to nest to markdown sources, i.g. module\ndoc and function doc. ![](./img/indent.png)\n\n*Single Line Handling* No leading line breaks, enables to use markdown within\n surrounding text.\n\n\n## Bugs\n\nKnown and severe one is the problem of solicitated star characters. We\ncurrently can't detect them, the renderer assumes it is the beginning of an\nitalic format and resets only at the next textblock :-(\n\n\n\n## Py2 / Py3\n\nThe thing runs in Python2 and Python3 - for the frequent rendering use case you\nwant Python 2:\n\n```\n# python -m timeit \"import os; os.system('python -c \\\"i=1\\\"')\"\n100 loops, best of 3: 10 msec per loop\n# python -m timeit \"import os; os.system('python3 -c \\\"i=1\\\"')\"\n100 loops, best of 3: 18.1 msec per loop\n# python -m timeit \"import os; os.system('python -Ssc \\\"i=1\\\"')\"\n100 loops, best of 3: 4.2 msec per loop\n# python -m timeit \"import os; os.system('python3 -Ssc \\\"i=1\\\"')\"\n100 loops, best of 3: 10.6 msec per loop\n```\n\n****\n____\n----\n\nThats all - and demonstrates the horizontal rules ;-)\n\n\n[1]: https://github.com/axiros/mdvl/blob/master/mdvl.py#L61\n[2]: https://github.com/axiros/mdvl/blob/master/mdvl.py#L30\n[travis_img]: https://travis-ci.org/axiros/mdvl.svg?branch=master\n[travis]:     https://travis-ci.org/axiros/mdvl\n\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/axiros/mdvl",
    "keywords": "markdown,markup,terminal,hilighting,syntax,source code",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdvl",
    "package_url": "https://pypi.org/project/mdvl/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdvl/",
    "project_urls": {
      "Homepage": "https://github.com/axiros/mdvl"
    },
    "release_url": "https://pypi.org/project/mdvl/2017.7.16/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lightweight Terminal Markdown Renderer",
    "version": "2017.7.16",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3021790,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d39ec2ca30e06bc001d631281717384f83806d30d1fbbe9b4201d30f039667d",
        "md5": "e9e5cbe2d62fcac82fd5bf7d9ac24549",
        "sha256": "97ea07b7ab7b6000553f68e64cfc3b829b458af136aacf71a1047111aa6c865d"
      },
      "downloads": -1,
      "filename": "mdvl-2017.7.16-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9e5cbe2d62fcac82fd5bf7d9ac24549",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 12609,
      "upload_time": "2017-07-13T22:10:31",
      "upload_time_iso_8601": "2017-07-13T22:10:31.616950Z",
      "url": "https://files.pythonhosted.org/packages/2d/39/ec2ca30e06bc001d631281717384f83806d30d1fbbe9b4201d30f039667d/mdvl-2017.7.16-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9a449f8be65afd4aabba78638456b418eba759fcce30e64eeaf3662b867800d",
        "md5": "485896a58e06584f0f43779a172000a9",
        "sha256": "fa334079d596b16f48e1942335804a441a31de06ce99a9c66f22be4a68770059"
      },
      "downloads": -1,
      "filename": "mdvl-2017.7.16.tar.gz",
      "has_sig": false,
      "md5_digest": "485896a58e06584f0f43779a172000a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9021,
      "upload_time": "2017-07-13T22:10:33",
      "upload_time_iso_8601": "2017-07-13T22:10:33.322338Z",
      "url": "https://files.pythonhosted.org/packages/c9/a4/49f8be65afd4aabba78638456b418eba759fcce30e64eeaf3662b867800d/mdvl-2017.7.16.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}