{
  "info": {
    "author": "Mathieu Pasquet",
    "author_email": "kiorky@cryptelium.net",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Buildout",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "******************************************************************************\nRecipe for compiling and installing software with or without minitage\n******************************************************************************\n\n.. contents::\n\n=======================\nIntroduction\n=======================\n\n\n``minitage.core.common`` is an abstract recipe extendended by much of\nminitage.recipe.*\n\nThat's why many options of the descendant recipes are from there.\n\n\n\n\n\n\n\n====================================\nOptions shared by all the recipes\n====================================\n\nNotes\n--------\n\n    - All recipes inherit all these options, depending which you are using, those options will have an incidence on the build.\n    - Useless to say that the recipes code is not difficult, and as a deployer, its your job to have a look at the code to avoid surprises.\n    - If you are inside a minitage all recipes will look on your minibuild dependencies section to get things into the environment at execution time. Like feeding CFLAGS, pkgconfig, ldflags and so on.\n    - All recipes look for a minitage section in your buildout file and take dependencies and eggs as minitage projects to get into the environnment too::\n\n        ...\n        [minitage]\n        dependencies = postgresql-8.3\n        eggs = py-libxslt-1.1\n\nOptions\n-------------\n    * urls\n      A set of urls to checkout in the form\n\n\n        - The last part or the urls will be the name of your checkout dir unless you have precised the name in \"destination directory name\"\n        - If you don't specify any scm_type, it will be static unless you specify it in options (see scm)\n        - If you don't specify any revision, it will be not set unless you specify it in options (see scm_revision)\n        - The form is a New line separated list of urls to fetcha in the following form (*the | is part of the line ;)*)::\n\n                url to checkout | fetch_type | revision | destination directory name | fetcher_args\n\n      Here are valid inputs ::\n\n            svn://toto | svn | 666 | mydirectoryname | --ignore-externals\n            svn://toto | svn | 666 | mydirectoryname\n            svn://toto | svn | 666\n            svn://toto | svn | | | --ignore-externals\n            svn://toto | svn\n            file://toto\n            http://tata/toto.tgz\n\n      Where::\n\n            fetch_type ::= bzr | hg | git | static (for ftp://, file://, http:// and local files) | svn\n            \n    UNAME is a platform identifier from:\n    \n        - linux\n        - darwin\n        - freebsd\n        - freebsd(6,7,8)\n        - snowleopard\n        - leopard\n        - cygwin  \n    \n    - executable\n        python executable to use\n    - url(-UNAME) (backward cmpatibility)\n        url to get the source from, in the previous urls syntax\n    - scm\n        default scm to use (a valid minitage fetch factory to use (static, git, svn, bzr, hg).)\n        defaults to static.\n    - scm_revision\n            default revision to checkout if scm is not static\n    - md5sum\n        md5sum of the checkouted source [see cmmi recipe for documentation]\n    - patch-binary\n        path to the patch program\n    - patch-options\n        options to feed the patch program with [see cmmi recipe for documentation]\n    - patches\n        patches to apply [see cmmi recipe for documentation]\n    - patch\n        A patch to apply, compatibility with zc.recipe.cmmi\n    - patches-UNAME / UNAME-patches\n        - patches to apply to a system or a favor of this system (linux, darwin, freebsd, freebsd, freebsd(6,7,8), snowleopard, leopard, cygwin)\n    - location\n        where to put the build result. (default to parts/PART_NAME)\n    - cc(-UNAME)\n        CC compiler to use (set env['CC'], default not set\n    - cpp(-UNAME)\n        CPP compiler to use (set env['CPP'], default not set\n    - cplusplus(-UNAME)\n        c++ compiler to use (set env['C++'], default not set\n    - includes(-UNAME)\n        directories to add to the include search (compatibility)\n    - ldflags(-UNAME)\n        LDFLAGS to set at compilation time\n    - cflags(-UNAME)\n        CFLAGS to give to the compiler\n    - includes-dirs(-UNAME)\n        Directories to add to the include paths  [see cmmi recipe for documentation]\n    - libraries(-UNAME)\n        libraries to give to the linker eg: libiconv\n    - library-dirs(-UNAME)\n        Directories to add to the linker, and they will be added as -rpath too. [see cmmi recipe for documentation]\n    - rpath(-UNAME)\n        Directories to add as -rpath.\n    - skip-flags: do not set CFLAGS/LDFLAGS/LD_RUN_PATH at all.\n    - environment\n        a part name where we can get key/values to add to the build environment [see cmmi recipe for documentation]\n    - path(-UNAME)\n        line separated list of paths to append to $PATH during build\n    - pkgconfigpath(-UNAME)\n        line separated list of paths to append to $PKGCONFIGPATH during build [see cmmi recipe for documentation]\n    - pythonpath(-UNAME)\n        line separated list of paths to append to $PYTHONPATH during build\n\n    - osx-target: -mmacosx-version-min setting, wanting users will know what that means ;)\n\n        minitage put -mmacosx-version-min in the env. if you dont set this to 'false'\n        default value on leopard is 10.5.0 and on snowleopard 10.6.0\n\n    - force-osx-target\n\n        force MACOSX_DEPLOYMENT_TARGET to value or default if 'true' (snowleopard (10.5) /leopard(10.6))\n\nOptions incidences\n----------------------\n\n - `minitage.recipe:cmmi`\n    executable is not taken in account.\n - `minitage.recipe:fetch`\n    only the download related options are used.\n - `minitage.recipe:eggs`, `minitage.recipe:wsgi`, `minitage.recipe:scripts`, `minitage.recipe:printer`\n    the configure-*, and make-*, and extra_options are not used\n\nPatches\n-----------\n\n    - They can be either a file or an url.\n    - You have means to specify options to the patch program, like -pXXX, abuses of it.\n\n\n\n===============================================\nminitage.recipe API tests\n===============================================\n\nThe divide url function\n------------------------------\n\n    - If you dont precise the directory, its the basename of the url::\n\n        >>> divide_url ('http://foo/bar|svn|666||--ignore-externals')\n        ('http://foo/bar', 'svn', '666', 'http.foo.bar', '--ignore-externals')\n\n    - Static as a default::\n\n        >>> divide_url ('')\n        ('', 'static', '', '', '')\n\n    - arguements can be optionnal::\n\n        >>> divide_url ('http://foo/bar')\n        ('http://foo/bar', 'static', '', 'http.foo.bar', '')\n\n\n\n=======================\r\nCHANGELOG\r\n=======================\r\n\r\n->UP\r\n--------\r\n    \r\n    - add os subrelease mecanism (cygwin2)\r\n    - add an helper to write env files\r\n    - fix for mercurial checkouts\r\n    - add many per/os options\r\n    - win32 fix\r\n    - API fix\r\n    - indentation fix\r\n    - make things shut up\r\n    - add patch flavors for darwin, now you have:\r\n\r\n        * darwin : all macs\r\n        * leopard, snowleopard for a specific one\r\n    - Add extra-paths to PYTHONPATH while setting PYTHONPATH\r\n\r\n1.42\r\n------\r\n\r\n    - API compatibility for cmmi\r\n\r\n\r\n1.41\r\n-----\r\n\r\n    - splitting cmmi stuff\r\n\r\n-> 1.40\r\n---------\r\n\r\n    - remove deprecationwarning\r\n\r\n1.36\r\n------\r\n\r\n    - re namespacing\r\n\r\n1.35\r\n-----\r\n\r\n    - split all recipes into singles ones.\r\n\r\n.34\r\n---\r\n\r\nall:\r\n\r\n    - fix rst doc\r\n\r\n    - add ``ldflags`` and ``ldflags`` options\r\n\r\nminitage.recipe.cmmi:\r\n\r\n    - ``install-in-place`` option added and pivot on make install slightly\r\n      modified\r\n    - ``skip-flags`` option added\r\n    - ``prefix`` option added\r\n\r\nminitage.recipe.fetch:\r\n\r\n    - ``unpack`` option added\r\n    - md5sum un revision for static fetcher check added\r\n\r\nminitage.recipe.printer:\r\n\r\n    - remove fake eggs and develop eggs from fixed versions.\r\n\r\n-> 1.20\r\n---------\r\n\r\nMinitage.recipe.egg:\r\n\r\n    - better errors handling\r\n    - In particular for eggs and url, now md5 urls are preferred.\r\n    - Also when we can't download a distribution from somewhere, we try to\r\n      fallback to other distributions which achieve the desired requirement\r\n    - In the same way, try to compile eggs from any other sdist fullfilling the\r\n      requirement if an error occurs on the first found.\r\n\r\nMinitage.recipe.cmmi:\r\n\r\n    - new patch selection for freebsd:\r\n        freebsd-patches\r\n\r\n    - Fix some double spaces left in compilation flags which broke some exotic\r\n      system builders.\r\n\r\n1.14\r\n-----\r\n\r\n    - add enrionment file generation to the scripts recipe\r\n\r\n1.13\r\n---------\r\n\r\n    - cmmi buggy update methods\r\n\r\n1.11 - 1.12\r\n----------------\r\n\r\n    - rescan egg direcrectories at install time because there may be new\r\n      develop eggs or eggs installed by buildout extensions (mr.developer)\r\n    - fix for interaction with buildout.minitagificator and\r\n      zc.buildout.easy_install..*script\r\n\r\n\r\n1.-1.10\r\n---------\r\n\r\n    - bugfix with cache and static distributions.\r\n\r\n1.8\r\n-------\r\n\r\n    - make patches go in a personnal directory with some md5 mecanism to redownload them.\r\n\r\n1.4->1.7\r\n----------\r\n\r\n    - x64 fixes\r\n    - bugfix in static distribution install when you have patches to apply.\r\n\r\n1.3\r\n----\r\n\r\n    - release uncomitted unittests updates\r\n\r\n1.2\r\n-------\r\n\r\n    - make it compatible with zc.buildout 1.0\r\n\r\n1.1\r\n-----\r\n\r\n    - md5 bug\r\n\r\n1.0\r\n------\r\n\r\n    * first stable release.\r\n    * All recipe are documented and well tested.\r\n    * buildout.minitagificator is completed.\r\n    * stabilized and synced with other minitage components\r\n    * minitage.recipe:eggs has been drasticly improved in term of algorythms and speed.\r\n\r\n0.33->0.34\r\n-----------\r\n\r\n    - Fix python executable computation\r\n\r\n0.32\r\n-----\r\n\r\n    - Documentation and tests release\r\n\r\n0.29\r\n----\r\n\r\n    - Fix bug in recipes initialization because of buildout auto-ordering\r\n\r\n\r\n0.28\r\n----\r\n\r\n    - Add another hook to the cmmi recipe: post-download\r\n\r\n0.27\r\n-----\r\n\r\n    - Fix an annoying bug when you are using virtualenv and a classical\r\n      python as executable in your recipe, it may occur that sometimes, the\r\n      virtualenv site-packages is appended to PYTHONPATH. As a fix, we now\r\n      filter all python core lib directories and site packages that are not\r\n      relevant to the python used by the recipe.\r\n\r\n0.26\r\n-----\r\n\r\n    - Introduce the minitage.recipe:wsgi recipe wich wraps a paste wsgi application\r\n      in a script eatable by mod_wsgi\r\n\r\n0.25\r\n------\r\n\r\n    - stop lowering project_name\r\n\r\n\r\n0.23->0.24\r\n-----------\r\n\r\n    - Fix small bugs in printer\r\n\r\n0.22\r\n-----\r\n\r\n    - Introduce a new recipe : minitage.recipe:printer which prints/dumps to a\r\n      file all versions eggs needed to achieve requirements.\r\n\r\n0.21\r\n-----\r\n\r\n    - Fix bug in compilation  directory guessing\r\n\r\n0.20\r\n------\r\n\r\n    - Fix bug in distribution reloading\r\n    - Better handling of pkg_resources's working set\r\n\r\n0.19\r\n--------\r\n\r\n    - add a post build hook\r\n\r\n0.18\r\n-------\r\n\r\n    - Change installation order\r\n\r\n0.16\r\n-------\r\n\r\n    - Fix index and find links options\r\n\r\n0.14 -> 0.15\r\n-------------\r\n    - logging output improved\r\n    - newest mode handling\r\n\r\n0.13\r\n-----\r\n- fix static dist install\r\n\r\n\r\n\r\n0.12\r\n------\r\n\r\n    - bugfix for zipped eggs\r\n\r\n0.11\r\n-----\r\n\r\n    - import bugfix for minitagificator\r\n\r\n0.10\r\n-----------\r\n\r\n    - Change some logging options\r\n    - follow allow host option from buildout for eggs installation\r\n\r\n0.9\r\n-----------\r\n\r\n    - Do not rely anymore on zc.buildout ez for script generation\r\n\r\n0.7 -> 0.8\r\n-----------\r\n\r\n    - egg and scripts recipes were rewritten a lot to adapt their api to\r\n      zc.recipe.egg\r\n    - Common to all recipes: all arguements are now identicak to zc.recipe.cmmi\r\n      or zc.recipe.egg\r\n    - Dependencies resolver has been improved a lot\r\n    - For static distribution, you can know speicify multiple urls with 'urls'\r\n\r\n\r\n0.6\r\n------\r\n\r\n    - fix bug in path generation in minitage.recipe:scripts\r\n\r\n0.2 -> 0.5\r\n-------------\r\n\r\n    - add make-options for make option in minitage.recipe.cmmi\r\n    - multiple bugfixes\r\n    - make things append in subprocess for environment conversation\r\n    - add initiaiization code for generated python interpreter in\r\n      minitage.recipe:scripts\r\n\r\n0.1\r\n------\r\n    - add fetch recipe\r\n\r\n0.0.13\r\n-------\r\n - fix zip safe flag\r\n\r\n0.0.11\r\n-------\r\n - Include eggs dependencies by default\r\n - Modulate the script recipe to append in the PYTHONPATH all egg dependencies\r\n   found into the local eggs cache.\r\n\r\n0.0.10\r\n-------\r\n - Add pyc regeneration feature stolen from zc.buildout\r\n\r\n0.0.9\r\n-------\r\n - minor fix for run without minitage\r\n - fix for long path/compilation flags\r\n\r\n0.0.8\r\n-------\r\n - minor fix for scm check outs\r\n\r\n0.0.7\r\n-------\r\n - add C compiler cflags/ldflags/makeopts customistation options\r\n\r\n0.0.6\r\n-------\r\n - Change the eggs installation way to do, now using easy_install everywhere\r\n   Also include a buildout option to allow to include eggs dependencies (ez-dependencies-true)\r\n - Set the __doc__ variable in scripts to fix some scripts like bzr.\r\n\r\n0.0.3\r\n-------\r\n - fix scm choice when there are eggs and url in the same part\r\n\r\n0.0.2\r\n------\r\n - bugfix version\r\n - fix linking problem\r\n\r\n0.0.1\r\n------\r\n - Initial version",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://cheeseshop.python.org/pypi/minitage.recipe.common",
    "keywords": "development buildout recipe",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "minitage.recipe.common",
    "package_url": "https://pypi.org/project/minitage.recipe.common/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/minitage.recipe.common/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://cheeseshop.python.org/pypi/minitage.recipe.common"
    },
    "release_url": "https://pypi.org/project/minitage.recipe.common/1.67/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "zc.buildout recipes to compile and install software or python packages and generate scripts or configuration files.",
    "version": "1.67",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 794815,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2aab55615de76d4406f670dc090483b24a47003998b2ab0391567ce69abd6c0",
        "md5": "fa4c6947c91c82d8a18a3f506ce7c44a",
        "sha256": "c967f92fadaed62bf0498809b14fcf372dca235d505b66c054b3adb85d2d6a64"
      },
      "downloads": -1,
      "filename": "minitage.recipe.common-1.67.zip",
      "has_sig": false,
      "md5_digest": "fa4c6947c91c82d8a18a3f506ce7c44a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39996,
      "upload_time": "2010-01-04T10:10:06",
      "upload_time_iso_8601": "2010-01-04T10:10:06.073467Z",
      "url": "https://files.pythonhosted.org/packages/f2/aa/b55615de76d4406f670dc090483b24a47003998b2ab0391567ce69abd6c0/minitage.recipe.common-1.67.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}