{
  "info": {
    "author": "Dev Kapt",
    "author_email": "dev@kapt.mobi",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# DjangoCMS FAQ\n\nFrequently asked questions plugin for Django CMS, with an API to load questions from another page!\n\n## Install\n\n1) Install module\n   ```bash\n   python3 -m pip install djangocms-faq\n   ```\n   > *Or use this command if you want to add a scoop of [fuzzy-search](#fuzzy-search) in your api:*\n   > ```bash\n   > python3 -m pip install djangocms-faq[fuzzy_search]\n   > ```\n\n2) Add it to your INSTALLED_APPS\n   ```\n       \"djangocms_faq\",\n   ```\n\n3) Add the API endpoint to your `urls.py` (if you want to use the Faq Search Plugin):\n    ```python\n        path(\"djangocms-faq/\", include(\"djangocms_faq.urls\")),\n    ```\n\n4) Launch your django-cms site, it should be here!\n\n    ![](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/4d774d9e28e4125db633e80234569c2e/image.png)\n\n### Requirements\n\n* `django-cms`: Obviously\n* `django-sekizai`: For default templates (you can uninstall it if you use custom templates without sekizai). Not required in this package (it's a requirement of django-cms)\n* `fuzzywuzzy`: If you want to use fuzzy search, optional package\n\n## Features\n\n### A faq\n\nAdd **FAQ Container**s plugins, which have a (hidden and required) name, a (public and optional) title, and can only contain **FAQ Question**s plugins.\n\n![FAQ Container](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/b0b09bd08013029675cff56b766be2f3/image.png)\n\nThen, add **FAQ Question**s plugins that can contain text/image/videos plugins (that provide answers)!\n\n![FAQ Question](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/3efc80d49da74b4f70550da8b8d51e3b/image.png)\n\nYou can also add keywords to your FAQ questions, because you may want your users to find a specific answer to a general question.\n\n\n### A search plugin that uses an API\n\nAsk a question to the FAQ and the plugin will return with the corresponding questions/answers.\n\n\n*Quick note: since the form uses javascript **and** a simple view, that means that the search works without javascript too!*\n\n### Select in which FAQ the searches will be applied\n\n![Select faq to search into](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/75a02eff991e2f8b3b2221f9fd80d50d/image.png)\n\nDisplay format is `{FAQ Name} ({Page title})`.\n\n### Fuzzy search!\n\nUsers can make mistakes. So this package can use the `token_sort_ratio` function from the package [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy#token-sort-ratio) to return str that are at least (>=) 85% the same (you can change the number).\n\nTo activate it, simply install the package like this:\n\n```bash\npython3 -m pip install djangocms-faq[fuzzy_search]\n```\n\nAnd add this to your settings :\n\n```python\nDJANGOCMS_FAQ_ENABLE_FUZZY_SEARCH = True\n```\n\n#### Query detection in question title is still used when fuzzy search is enabled:\n\n![](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/c4fc8952248b9f7481ec3d9a466cbe06/image.png)\n\n#### Fuzzy search:\n\n![](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/7c8ded0983cf32ac2253430a6c229d37/image.png)\n\nHere, \"this long string\" match \"that long string\" at [87%](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/98e58ce1b212c76898927c86b0938b2e/image.png), so the question is returned.\n\n## Configuration\n\n* `DJANGOCMS_FAQ_ENABLE_API` (default is `True`): Enable or not the API endpoint and the Faq Search plugins.\n\n    *If you create a Faq Search Plugin and then set this setting to `False`, then you will be greeted with a cool `KeyError 'FaqPluginSearchPublished'` error message. Please do not do this.*\n\n* `DJANGOCMS_FAQ_MAX_QUERY_LENGTH` (default is `60`): Max size of a query to the api. The module will truncate user requests to `DJANGOCMS_FAQ_MAX_QUERY_LENGTH` chars.\n\n* `DJANGOCMS_FAQ_ANSWER_PLUGINS` (default is `[\"TextPlugin\", \"FilePlugin\", \"VideoPlayerPlugin\"]`): Add plugins that can be added to your answers!\n\n* `DJANGOCMS_FAQ_SHOW_KEYWORDS_QUESTION` (default is `True`): Display keywords in the questions of a FAQ.\n\n* `DJANGOCMS_FAQ_SHOW_KEYWORDS_ANSWER` (default is `True`): Display keywords in answers (faq search plugin).\n\n* `DJANGOCMS_FAQ_ENABLE_FUZZY_SEARCH` (default is `False`): Wanna use fuzzy search ? (*see [fuzzy-search](#fuzzy-search)*)\n\n* `DJANGOCMS_FAQ_FUZZY_SEARCH_PERCENTAGE` (default is `85`): Score to reach before returning a match between two patterns (query/question or query/keyword) from the api.\n\n* `DJANGOCMS_FAQ_SEARCH_WORD_BY_WORD_KEYWORDS` (default is `False`): If you want to split user queries & keywords in order to return a question if at least *one word* from the query is the same of at least *one word* of it's keywords.\n\n----\n\n[Here's a screenshot](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/ccf1ac04872830729fb6cdae5c77dd5b/image.png) with different examples (configs: `DJANGOCMS_FAQ_ENABLE_FUZZY_SEARCH` and `DJANGOCMS_FAQ_SEARCH_WORD_BY_WORD_KEYWORDS`):\n\n\n*Warning! Do not use stopwords in keywords, or else you might get [a looot](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/841416fdc4351433e6bafccf8de0426b/image.png) of results!*\n\n## API\n\nWhen you're searching for something in the input, searches will be made using the API if you don't type anything for 1 second (see `templates/faq_search.html`).\n\nHere's the format:\n\n```json\n[\n  {\n    \"question\": \"question title\",\n    \"slug\": \"question-title\",\n    \"url\": \"/page-url/\",\n    \"keywords\": [\"keyword\", \"another keyword\", \"...\"]\n  },\n  {\n    \"question\": \"question title 2\",\n    \"slug\": \"question-title2\",\n    \"url\": \"/page-url/\",\n    \"keywords\": [\"keyword\", \"an other key word\", \"...\"]\n  },\n]\n```\n\n### Api format\n\n```\ndjangocms-faq/?question=keyword&search_in=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaaa%20bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbbb&draft=True\n```\n\nWhere `keyword` is a string, the `uuid`s are valid uuids (strings) of FAQs separated by spaces, and `draft` is the faq to search into (draft or live version of the CMSPlugin).\n\nYou can submit requests without the draft parameter, the script will then search only in published (live) version of each faq CMSPlugin (like `draft=False`).\n\n\n## Customize it!\n\nThe templates included in this project are for demonstration purposes only, it is up to you to integrate them into your graphic charter by creating `faq_plugin.html`, `faq_question.html` and `faq_search.html` files in `templates/faq/`.\n\n## How it works\n\nFaq container & questions are classic django-cms plugins, see in `cms_plugins.py` for more informations.\n\nFaq search plugin is a django-cms plugin, and uses on top of that an API endpoint using vanilla javascript (the default template uses `fetch`, which is [not compatible](https://caniuse.com/fetch) with IE).\n\nThe API endpoint is a single view that returns json (see `views.py`).\n\nSince the function to get answers from a \"question\" str is used two times (in the view for the API and in the FaqPluginSearchPublisher plugin), I've put it in a file named `utils.py`.\n\nWhen using fuzzy search mode, results are returned if the query is a substring of a question, or if the score between the question and the query or a keyword and the query is >= to `DJANGOCMS_FAQ_FUZZY_SEARCH_PERCENTAGE` (default = 85%).\n\nWhen you publish a page containing a FAQ used in a search form, the `copy_relations` function will update the id of the FAQ using the class named `RelationSearchFaq` (that store the uuids of `FaqPluginModel` & `SearchFaqPluginModel`).\n\n[Here's a bad drawing](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/0870375fc3805ac87296b9f1945adefc/image.png) of the problem, and [here's another bad drawing](https://gitlab.com/kapt/open-source/djangocms-faq/uploads/6bc8e88f2fd7b9af42ff695d260ccd50/image.png) of the current solution.\n\nIt's a custom and *dirty* solution to the problem of handling relations *between* CMSPlugins.\n\n> It is much harder to manage the copying of relations when they are from one plugin to another.\n>\n> *source: Django-cms doc, [\nHandling Relations > Relations between plugins](https://docs.django-cms.org/en/latest/how_to/custom_plugins.html#relations-between-plugins)*.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/kapt/open-source/djangocms-faq",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangocms-faq",
    "package_url": "https://pypi.org/project/djangocms-faq/",
    "platform": "",
    "project_url": "https://pypi.org/project/djangocms-faq/",
    "project_urls": {
      "Homepage": "https://gitlab.com/kapt/open-source/djangocms-faq"
    },
    "release_url": "https://pypi.org/project/djangocms-faq/1.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DjangoCMS FAQ let you create FAQ plugins that contains other plugins and provide an API to get questions/answers from keywords!",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15217059,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "763e8992acf5138b4cb232a6af1c7af4040ec03b3913c228f45cb228fd462093",
        "md5": "b4655f79e3594963c9311e17f62a603b",
        "sha256": "6ca43c6fa1a85f95c2cab2a0171a829c754e0ec0c803cd49ff1ae9b02e18a7c5"
      },
      "downloads": -1,
      "filename": "djangocms-faq-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b4655f79e3594963c9311e17f62a603b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32207,
      "upload_time": "2021-08-25T12:30:02",
      "upload_time_iso_8601": "2021-08-25T12:30:02.848960Z",
      "url": "https://files.pythonhosted.org/packages/76/3e/8992acf5138b4cb232a6af1c7af4040ec03b3913c228f45cb228fd462093/djangocms-faq-1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}