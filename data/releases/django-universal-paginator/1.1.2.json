{
  "info": {
    "author": "",
    "author_email": "Miroslav Bend√≠k <miroslav.bendik@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "========================================\nCursor and standard paginator for django\n========================================\n\n|codecov| |version| |downloads| |license|\n\nThis package is used to create standard or cursor navigation for django.\n\nIt has builtin templates, so you can use this library with minimal effort.\nLibrary can be used with `jinja2` templates. If you are using ``django_jinja``\npackage, additional template tags are automatically registered to `jinja2`\nengine.\n\nIf you are using cursor pagination, the queryset must be ordered with\ncombination of data fields, which are unique across query.\n\nCursor pagination supports checking for next / previous page presence without\nany additional queries. There is used only single query to select records, no\nadditional queries to `count` checking or next / previous checking.\n\nInstall\n-------\n\n.. code:: bash\n\n\tpip install django-universal-paginator\n\nTo ``INSTALLED_APPS`` add ``django_universal_paginator``.\n\n.. code:: python\n\n\tINSTALLED_APPS = (\n\t\t# ...\n\t\t'django_universal_paginator',\n\t)\n\nSettings\n--------\n\nClassical paginator support following settings:\n\n``PAGINATOR_ON_EACH_SIDE``\n\tCount of links around current page, default: 3\n``PAGINATOR_ON_ENDS``\n\tLink count on start / end of list, default: 1\n``PAGINATOR_TEMPLATE_NAME``\n\tDefault template name for paginator, default: ``'paginator/paginator.html'``\n\nUsage\n-----\n\nTemplate\n^^^^^^^^\n\nTo use this library first add ``{% pagination %}`` to django template or\n``{{ pagination() }}`` to jinja2 template.\n\n.. code:: html\n\n\t<!-- object_list.html -->\n\t{% load paginator_tags %}\n\n\t<ul>\n\t\t{% for object in object_list %}\n\t\t\t<li>{{ object }}</li>\n\t\t{% endfor %}\n\t</ul>\n\n\t<div class=\"pagination\">{% pagination %}</div>\n\nTo modify style look to\n`paginator.html <https://github.com/mireq/django-universal-paginator/blob/master/django_universal_paginator/templates/paginator/paginator.html>`_.\n\nURLs\n^^^^\n\nThis package can be used without URL modification, but if you want clean URL\npatterns without GET parameters, like ``/object-list/3/``, you can use following\ncode (example contains both methods - standard and cursor).\n\n.. code:: python\n\n\t# urls.py\n\n\tfrom django.urls import path, register_converter\n\tfrom django_universal_paginator.converter import PageConverter, CursorPageConverter\n\n\tregister_converter(PageConverter, 'page')\n\tregister_converter(CursorPageConverter, 'cursor_page')\n\n\t# standard\n\turl(r'^object-list/<page:page>', ObjectList.as_view(), name='object_list'),\n\t# or cursor\n\turl(r'^cursor/<cursor_page:page>', ObjectList.as_view(), name='cursor_list'),\n\n\nClassical navigation\n^^^^^^^^^^^^^^^^^^^^\n\nTo use classical navigation, just add ``paginate_by`` attribute to class based\nlist view.\n\n\n.. code:: python\n\n\t# views.py\n\n\tclass ObjectList(ListView):\n\t\tpaginate_by = 10\n\t\t# model = ...\n\nIf you are using function based views, you can use\n``django_universal_paginator.utils.paginate_queryset``.\n\n.. code:: python\n\n\t# views.py\n\tfrom django_universal_paginator.utils import paginate_queryset\n\n\tdef list_view(request):\n\t\tqueryset = Book.objects.order_by('pk')\n\t\tpaginate_by = 10\n\t\tpage = 1\n\t\tpaginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page,\n\t\tpaginate_by)\n\n\t\tcontext = {\n\t\t\t\"paginator\": paginator,\n\t\t\t\"page_obj\": page,\n\t\t\t\"is_paginated\": is_paginated,\n\t\t\t\"object_list\": queryset,\n\t\t}\n\n\t\treutrn render_to_string(\"list.html\", context)\n\n\nCursor pagination\n^^^^^^^^^^^^^^^^^\n\nTo use cursor pagination, queryset must be correctly ordered (order key must be\ncombination of keys which are unique across queryset).\n\n.. code:: python\n\n\t# views.py\n\tfrom django.views.generic import ListView\n\tfrom django_universal_paginator.cursor import CursorPaginateMixin\n\n\tclass List(CursorPaginateMixin, ListView):\n\t\tpaginate_by = 10\n\t\tqueryset = Book.objects.order_by('pk')\n\n\n.. |codecov| image:: https://codecov.io/gh/mireq/django-universal-paginator/branch/master/graph/badge.svg?token=QGY5B5X0F3\n\t:target: https://codecov.io/gh/mireq/django-universal-paginator\n\n.. |version| image:: https://badge.fury.io/py/django-universal-paginator.svg\n\t:target: https://pypi.python.org/pypi/django-universal-paginator/\n\n.. |downloads| image:: https://img.shields.io/pypi/dw/django-universal-paginator.svg\n\t:target: https://pypi.python.org/pypi/django-universal-paginator/\n\n.. |license| image:: https://img.shields.io/pypi/l/django-universal-paginator.svg\n\t:target: https://pypi.python.org/pypi/django-universal-paginator/\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "pagination,cursor,simple,cursor pagination,simple pagination",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-universal-paginator",
    "package_url": "https://pypi.org/project/django-universal-paginator/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-universal-paginator/",
    "project_urls": {
      "changelog": "https://github.com/mireq/django-universal-paginator/blob/master/CHANGELOG.md",
      "documentation": "https://github.com/mireq/django-universal-paginator",
      "homepage": "https://github.com/mireq/django-universal-paginator",
      "repository": "https://github.com/mireq/django-universal-paginator"
    },
    "release_url": "https://pypi.org/project/django-universal-paginator/1.1.2/",
    "requires_dist": [
      "django",
      "tox ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "commitizen ; extra == 'dev'",
      "django-jinja ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Simple pagination for django",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16813070,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e6d58e6add62ececf25152864501bbf4d5bb07f0854d09b8dd3cf0d640b1226",
        "md5": "26cb6cc1321c403db8136c36056c345a",
        "sha256": "f2e9d03cb6989be5b9f367892d01f1d6197ee537960579ac76ba14714c1c3039"
      },
      "downloads": -1,
      "filename": "django_universal_paginator-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "26cb6cc1321c403db8136c36056c345a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13528,
      "upload_time": "2023-02-11T17:28:12",
      "upload_time_iso_8601": "2023-02-11T17:28:12.333145Z",
      "url": "https://files.pythonhosted.org/packages/7e/6d/58e6add62ececf25152864501bbf4d5bb07f0854d09b8dd3cf0d640b1226/django_universal_paginator-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8ad3ebb01a05aaa5708871293441eaca5e6e40cf3b8656a3efe91db58a9be49",
        "md5": "08dc8cd91bb302ef4e18988adc1c32ec",
        "sha256": "d0f03968ef3127840a1afa003f5eb1a6c3a53a9bd64431d32b67c828b872bf40"
      },
      "downloads": -1,
      "filename": "django_universal_paginator-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "08dc8cd91bb302ef4e18988adc1c32ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 30629,
      "upload_time": "2023-02-11T17:28:14",
      "upload_time_iso_8601": "2023-02-11T17:28:14.475253Z",
      "url": "https://files.pythonhosted.org/packages/f8/ad/3ebb01a05aaa5708871293441eaca5e6e40cf3b8656a3efe91db58a9be49/django_universal_paginator-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}