{
  "info": {
    "author": "Hong MinHee <http://dahlia.kr/>",
    "author_email": "dahlia@lunant.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "The Python dictionary-based mock memcached client library. It does not\r\nconnect to any memcached server, but keeps a dictionary and stores every cache\r\ninto there internally. It is a just emulated API of memcached client only for\r\ntests. It implements expiration also. NOT THREAD-SAFE.\r\n\r\n    try:\r\n        import memcache\r\n    except ImportError:\r\n        import warnings\r\n        import mockcache as memcache\r\n        warnings.warn(\"imported mockcache instead of memcache; cannot find \"\r\n                      \"memcache module\")\r\n\r\n    mc = memcache.Client([\"127.0.0.1:11211\"])\r\n\r\nThis module and other memcached client libraries have the same behavior.\r\n\r\n    >>> from mockcache import Client\r\n    >>> mc = Client()\r\n    >>> mc\r\n    <mockcache.Client {}>\r\n    >>> mc.get(\"a\")\r\n    >>> mc.get(\"a\") is None\r\n    True\r\n    >>> mc.set(\"a\", \"1234\")\r\n    1\r\n    >>> mc.get(\"a\")\r\n    '1234'\r\n    >>> mc\r\n    <mockcache.Client {'a': ('1234', None)}>\r\n    >>> mc.add(\"a\", \"1111\")\r\n    0\r\n    >>> mc.get(\"a\")\r\n    '1234'\r\n    >>> mc\r\n    <mockcache.Client {'a': ('1234', None)}>\r\n    >>> mc.replace(\"a\", \"2222\")\r\n    1\r\n    >>> mc.get(\"a\")\r\n    '2222'\r\n    >>> mc\r\n    <mockcache.Client {'a': ('2222', None)}>\r\n    >>> mc.append(\"a\", \"3\")\r\n    1\r\n    >>> mc.get(\"a\")\r\n    '22223'\r\n    >>> mc\r\n    <mockcache.Client {'a': ('22223', None)}>\r\n    >>> mc.prepend(\"a\", \"1\")\r\n    1\r\n    >>> mc.get(\"a\")\r\n    '122223'\r\n    >>> mc\r\n    <mockcache.Client {'a': ('122223', None)}>\r\n    >>> mc.incr(\"a\")\r\n    122224\r\n    >>> mc.get(\"a\")\r\n    122224\r\n    >>> mc\r\n    <mockcache.Client {'a': (122224, None)}>\r\n    >>> mc.incr(\"a\", 10)\r\n    122234\r\n    >>> mc.get(\"a\")\r\n    122234\r\n    >>> mc\r\n    <mockcache.Client {'a': (122234, None)}>\r\n    >>> mc.decr(\"a\")\r\n    122233\r\n    >>> mc.get(\"a\")\r\n    122233\r\n    >>> mc\r\n    <mockcache.Client {'a': (122233, None)}>\r\n    >>> mc.decr(\"a\", 5)\r\n    122228\r\n    >>> mc.get(\"a\")\r\n    122228\r\n    >>> mc\r\n    <mockcache.Client {'a': (122228, None)}>\r\n    >>> mc.replace(\"b\", \"value\")\r\n    0\r\n    >>> mc.get(\"b\")\r\n    >>> mc.get(\"b\") is None\r\n    True\r\n    >>> mc\r\n    <mockcache.Client {'a': (122228, None)}>\r\n    >>> mc.add(\"b\", \"value\", 5)\r\n    1\r\n    >>> mc.get(\"b\")\r\n    'value'\r\n    >>> mc  # doctest: +ELLIPSIS\r\n    <mockcache.Client {'a': (122228, None), 'b': ('value', ...)}>\r\n    >>> import time\r\n    >>> time.sleep(6)\r\n    >>> mc.get(\"b\")\r\n    >>> mc.get(\"b\") is None\r\n    True\r\n    >>> mc\r\n    <mockcache.Client {'a': (122228, None)}>\r\n    >>> mc.set(\"c\", \"value\")\r\n    1\r\n    >>> mc.get_multi([\"a\", \"b\", \"c\"])\r\n    {'a': 122228, 'c': 'value'}\r\n    >>> mc.delete(\"a\")\r\n    1\r\n    >>> mc.get(\"a\") is None\r\n    True",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/lunant/mockcache",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mockcache",
    "package_url": "https://pypi.org/project/mockcache/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mockcache/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/lunant/mockcache"
    },
    "release_url": "https://pypi.org/project/mockcache/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "The Python dictionary-based mock memcached client library.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1933292,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b0125f3e402be85cf2c56a90d3563e071829ce3a6d813042b96f1ebde9984bb",
        "md5": "f4d63806d6c1cce342b8b649b689f62f",
        "sha256": "064c4929d62ba02cfa22a223eabd35b99e877ace3ec6f3785cc66d7c5143435b"
      },
      "downloads": -1,
      "filename": "mockcache-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f4d63806d6c1cce342b8b649b689f62f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3465,
      "upload_time": "2010-05-06T02:00:42",
      "upload_time_iso_8601": "2010-05-06T02:00:42.372641Z",
      "url": "https://files.pythonhosted.org/packages/8b/01/25f3e402be85cf2c56a90d3563e071829ce3a6d813042b96f1ebde9984bb/mockcache-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}