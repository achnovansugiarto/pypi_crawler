{
  "info": {
    "author": "Étienne Hossack",
    "author_email": "django_backblaze_b2@internet-e-mail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "django-backblaze-b2\n===================\n\n`pypi version <https://pypi.org/project/django-backblaze-b2/>`__ `python\nversion <https://pypi.org/project/django-backblaze-b2/>`__ `django\nversion <https://pypi.org/project/django-backblaze-b2/>`__\n\nA storage backend for Django that uses `Backblaze’s B2\nAPIs <https://www.backblaze.com/b2/cloud-storage.html>`__.\n\nImplementation wraps `Official Python\nSDK <https://github.com/Backblaze/b2-sdk-python>`__\n\nHow to use\n----------\n\n1. Install from this repo, or install from PyPi:\n   ``pip install django-backblaze-b2`` As tested, requires python 3.6 or\n   greater but solely due to type annotations. PRs welcome :)\n2. Configure your django ``settings``. The absolute minimum config would\n   be:\n\n.. code:: python\n\n   BACKBLAZE_CONFIG = {\n       \"application_key_id\": os.getenv(\"BACKBLAZE_KEY_ID\"), # however you want to securely retrieve these values\n       \"application_key\": os.getenv(\"BACKBLAZE_KEY\"),\n   }\n\n| Theoretically you may now refer to the base storage class as a storage\n  class.\n| e.g.\n\n.. code:: python\n\n   from django_backblaze_b2 import BackblazeB2Storage\n\n   class MyModel(models.Model):\n       fileField = models.FileField(\n           upload_to=\"uploads\",\n           storage=BackblazeB2Storage\n       )\n\nPublic/Logged-In/Private storage\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Add ``django_backblaze_b2`` to your ``INSTALLED_APPS``\n2. Add the urls to your ``urlpatterns`` in the root ``urls.py``:\n\n.. code:: python\n\n       urlpatterns = [\n           ...\n           path('', include('django_backblaze_b2.urls')),\n       ]\n\nConfigurations\n~~~~~~~~~~~~~~\n\n| You may want to use your own bucket name, or set further configuration\n  such as lazy authorization/validation, or specifying file metadata.\n| Refer to `the options <./django_backblaze_b2/options.py>`__ for all\n  options.\n| You can modify the settings dict, but additionally override any\n  setting with the ``opts`` keyword argument to the storage classes.\n\nTo specify different buckets to use for your public, logged-in, staff\nstorage, you can set the ``specificBucketNames`` attribute of the\nsettings dict.\n\nWhy\n---\n\nThere are several Django storage packages out there already which\nsupport B2, but none met my needs. These are:\n\n-  `django-storages <https://github.com/jschneier/django-storages>`__\n\n   -  Large community engagement ✅\n   -  Well-tested ✅\n   -  `Second-class\n      support <https://github.com/jschneier/django-storages/issues/765>`__\n      via `Apache Libcloud <https://github.com/apache/libcloud>`__ ❌\n   -  Disconnect in configuration and actual use ❌\n   -  PR list with low turnaround ❌\n\n-  `django-b2 <https://github.com/pyutil/django-b2>`__\n\n   -  Similar aim to this project, around official backblaze SDK ✅\n   -  Mixed goals (storage, scripts) ❌\n   -  Tests?? ❌\n\n-  `django-backblazeb2-storage <https://github.com/royendgel/django-backblazeb2-storage>`__\n\n   -  Simple configuration ✅\n   -  Not based around python SDK (potentially harder to keep up with\n      version changes) ❌\n   -  Tests?? ❌\n\nS3 Compatible API\n~~~~~~~~~~~~~~~~~\n\nBackblazed can be used with an `S3-compatible\nAPI <https://www.backblaze.com/b2/docs/s3_compatible_api.html>`__ This\nis great, but most packages use an older version of the S3 Api (v2).\nBackblaze uses v4.\n\nWhat this package offers\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Type Annotations\n-  Tested\n-  No hacks required to get up and running around API deficiencies (any\n   hacks are not exposed in API)\n-  Support for public/private files, restricted via Django user\n   permissions\n\nHow it works\n------------\n\n-  A simple implementation of the ``django.core.files.storage.Storage``\n   class provides handling for storage behaviour within your Django\n   application\n-  Three url routes are appended to the root of your application:\n\n   1. ``/b2/``\n   2. ``/b2l/``\n   3. ``/b2s/`` These routes act as a proxy/intermediary between the\n      requester and backblaze b2 apis. The public ``/b2/`` allows\n      exposing files from a private bucket, and the logged-in and staff\n      routes will perform the known validations of a django app to\n      prevent unauthorized access.\n\nGotchas\n~~~~~~~\n\n-  The original filename + any upload paths is stored in the database.\n   Thus your column name must be of sufficient length to hold that\n   (unchanged behaviour from ``FileSystemStorage``)\n-  When retrieving files from the ``PublicStorage``, ``LoggedInStorage``\n   or ``StaffStorage``, you may not override the ``\"bucket\"`` or\n   authorization options, or else when the app proxies the file\n   download, it will be unable to retrieve the file from the respective\n   bucket.\n-  Simply using ``LoggedInStorage`` or ``StaffStorage`` is not enough to\n   protect your files if your bucket is not public. If any individual\n   gains access to the file ids/urls for these files, there is no\n   authentication around them. It is up to the implementer to ensure the\n   security of their application.\n-  Once the file is uploaded, and someone obtains a file url\n   (e.g. http://djangodomain.com/b2l/uploads/image.png), the model will\n   no longer be checked for the file. This means that if you share the\n   bucket between multiple use-cases, you could in theory find finds\n   that don’t belong to your django app, or similarly if you\n   delete/change your models, the files could still be downloaded.\n   Consider using an app like\n   `django-cleanup <https://github.com/un1t/django-cleanup>`__ if this\n   is important to you\n\nContributing\n------------\n\nContributions welcome!\n\n-  Please ensure test coverage does not decrease in a meaningful way.\n-  Ensure formatting is compliant (``make lint``)\n-  Use `conventional\n   commits <https://www.conventionalcommits.org/en/v1.0.0/>`__\n\nSetting up for development\n--------------------------\n\nRequires\n~~~~~~~~\n\n-  python\n-  GNU Make\n-  (optional) pyenv - align local version\n-  (optional) docker - run sample app\n\nRunning\n~~~~~~~\n\n1. ``make setup``\n\n-  You can run django with ``make run-django`` to test django app.\n-  You can run tests with ``make test``\n-  You can view test coverage with ``make test-coverage``, then see in\n   the terminal, open ``test/htmlcov/index.html`` or use ``cov.xml`` in\n   your favourite IDE like VSCode\n\nReleasing\n~~~~~~~~~\n\n1. ``TWINE_PASSWORD=<api key> make release``\n\nCleanup\n~~~~~~~\n\n1. ``make cleanup``\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ehossack/django-backblaze-b2/",
    "keywords": "django, storage, backblaze, b2, cloud",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-backblaze-b2",
    "package_url": "https://pypi.org/project/django-backblaze-b2/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-backblaze-b2/",
    "project_urls": {
      "Homepage": "https://github.com/ehossack/django-backblaze-b2/"
    },
    "release_url": "https://pypi.org/project/django-backblaze-b2/1.0.1/",
    "requires_dist": [
      "b2sdk",
      "django"
    ],
    "requires_python": ">=3.6",
    "summary": "A Django app to use backblaze b2 as storage.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15680282,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71959928b65f178ef8e46b59a5cbcb0129ab6ee512b5381ca9d8318297693ae9",
        "md5": "669b543a4e59f51371d02df688d49e1d",
        "sha256": "ee7687e0901fe575dbe6af28d8ccfd606fb1fc23cf93da2ee359e4a31d5ec0fe"
      },
      "downloads": -1,
      "filename": "django_backblaze_b2-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "669b543a4e59f51371d02df688d49e1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 25401,
      "upload_time": "2020-09-18T05:30:57",
      "upload_time_iso_8601": "2020-09-18T05:30:57.610240Z",
      "url": "https://files.pythonhosted.org/packages/71/95/9928b65f178ef8e46b59a5cbcb0129ab6ee512b5381ca9d8318297693ae9/django_backblaze_b2-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "080e021f5b6dd7273b27582185eae10e51fb3938745eb6210ff3ea281c6ebb3d",
        "md5": "eedbbd8d54394e794f0141111848b9d0",
        "sha256": "ee79938c279984deeb4cf1cb552456759dfe9c941ed1408c7d4127a4387b9aa2"
      },
      "downloads": -1,
      "filename": "django-backblaze-b2-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eedbbd8d54394e794f0141111848b9d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21882,
      "upload_time": "2020-09-18T05:30:58",
      "upload_time_iso_8601": "2020-09-18T05:30:58.810475Z",
      "url": "https://files.pythonhosted.org/packages/08/0e/021f5b6dd7273b27582185eae10e51fb3938745eb6210ff3ea281c6ebb3d/django-backblaze-b2-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}