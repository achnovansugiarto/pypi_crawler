{
  "info": {
    "author": "Thomas Guettler",
    "author_email": "info.dumpenv@thomas-guettler.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://travis-ci.org/guettli/dumpenv.svg?branch=master\n    :target: https://travis-ci.org/guettli/dumpenv\n    \ndumpenv: Dump values of the current Python environment\n======================================================\n\n\nhttps://github.com/guettli/dumpenv\n\nWhy?\n====\n\nSometimes source code works in one environment,\nbut in a different environment it fails.\n\nSame source code, but different results .... Hmm, there must be a differenence in the environment .... but what?\n\nYou can use this tool to dump a lot of values which influence the python interpreter.\n\nThen you can use any diff tool (I like `meld <http://meldmerge.org/>`_) to compare both environments.\n\nAt the moment these text files get created:\n\n* PATH\n* PYTHONPATH\n* os\n* os_environ\n* pip_freeze\n* platform\n* site\n* sys\n* sys_path\n\nI guess the above names do not need any explanation.\n\nAbove files get created in a temporary directory which roughly looks like this::\n\n    /tmp/dumpenv_{USER}@{HOST}--{VIRTUAL_ENV}_RANDOM\n\nTo make the diff easier to read $VIRTUAL_ENV and $HOME get replaced in the output.\n\n\nUsage\n=====\n\n\nUsage::\n\n    dumpenv [-o OUTPUT_DIRECTORY | --output-directory=OUTPUT_DIRECTORY]\n    dumpenv (-h | --help)\n\nOptions::\n\n    -o --output-directory OUTPUT_DIRECTORY Create text file in this directory.\n                                         Or use environment variable DUMPENV_OUTPUT_DIRECTORY\n\n\nExample\n=======\n\nExample::\n\n    user1@host1> dumpenv\n    Dumped environment to directory OUT1\n\n    user2@host2> dumpenv\n    Dumped environment to directory OUT2\n\n    me@pc> scp -r user1@host1:/tmp/OUT1/ tmp/\n    me@pc> scp -r user2@host2:/tmp/OUT2/ tmp/\n    me@pc> meld tmp/OUT1 tmp/OUT2\n\n... Ah! Now you see the difference :-)\n\nAPI\n===\n\nCall it from Python like this::\n\n    out_dir = dumpenv.create_data_and_dump_it()\n\nInstall\n=======\n\nInstall from `pypi <https://pypi.python.org/pypi/dumpenv/>`_::\n\n    pip install dumpenv\n\n\nUse Cases\n=========\n\nUse case 1: Your script works, but it does not, if called via unix cron. Run `dumpenv` via shell\nand via cron and compare the result.\n\nUse case 2: Your code works via web (wsgi, django, ...) but it fails if you call it on the shell.\n\nUse case 3: Your code works in the development environment, but not on the production server.\n\nDream\n=====\n\nIn my case Python scripts run in different environments:\n\n* called from PyCharm\n* called from Shell\n* called from Cron\n* called from webserver\n* called from subprocess\n* called from configuration management (for example Ansible)\n* called from systemd\n* ...\n\nMy dream is that the environment from all above calls is equal.\n\nI think this dream will never come true. I think it is better to reduce the above list.\n\nAdvertisment\n============\n\n* Created roughly according my own `programming guidelines <https://github.com/guettli/programming-guidelines>`_\n* Uses `subx <https://github.com/guettli/subx>`_ instead of subprocess\n* Uses my `github commit, travis CI, bumpversion, Upload to pypi <https://github.com/guettli/github-travis-bumpversion-pypi>`_ recipe\n\nFeedback\n========\n\nFeedback is very welcome, please create an issue at github or write me an email.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guettli/dumpenv/",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dumpenv",
    "package_url": "https://pypi.org/project/dumpenv/",
    "platform": "",
    "project_url": "https://pypi.org/project/dumpenv/",
    "project_urls": {
      "Homepage": "https://github.com/guettli/dumpenv/"
    },
    "release_url": "https://pypi.org/project/dumpenv/2018.17.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "dumpenv: Dump values of the current Python environment",
    "version": "2018.17.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6218167,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ee8cb7486d1e2e3e63c2dc0533bbc2dd886f5074fe228de9f9472eea506b840",
        "md5": "3090f5d36282104791e37fb0fdc46764",
        "sha256": "3784538c5732b5f81d0ffca9f7fc1fdb949e90ad66e4da0a46a1b1d0b573d185"
      },
      "downloads": -1,
      "filename": "dumpenv-2018.17.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3090f5d36282104791e37fb0fdc46764",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5309,
      "upload_time": "2019-08-15T10:40:20",
      "upload_time_iso_8601": "2019-08-15T10:40:20.357450Z",
      "url": "https://files.pythonhosted.org/packages/1e/e8/cb7486d1e2e3e63c2dc0533bbc2dd886f5074fe228de9f9472eea506b840/dumpenv-2018.17.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}