{
  "info": {
    "author": "Sergree",
    "author_email": "wokashi.rg@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Artistic Software",
      "Topic :: Multimedia",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Sound/Audio :: Analysis",
      "Topic :: Multimedia :: Sound/Audio :: Conversion",
      "Topic :: Utilities"
    ],
    "description": "[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/sergree)\n\n# Matchering 2.0\n\n### Matching + Mastering = ❤️\n\n**[Matchering 2.0]** is a novel ~~**Containerized Web Application**~~ *(coming soon!)* and **[Python Library][PyPI]** for audio matching and [mastering].\n\nIt follows a *simple idea* - you take TWO audio files and feed them into **Matchering**: \n- **TARGET** (the track you want to master, you want it to sound like the reference)\n- **REFERENCE** (another track, like some kind of \"wet\" popular song, you want your target to sound like it)\n\nOur algorithm matches both of these tracks and provides you the mastered **TARGET** track with the same [RMS], [FR], [peak amplitude] and [stereo width] as the **REFERENCE** track has.\n\nSo **Matchering 2.0** will make your song sound the way you want! It opens up a wide range of opportunities:\n- You can make your music instantly sound like your favorite artist's music\n- You can make all the tracks on your new album sound the same very quickly\n- You can find new aspects of your sound in experiments\n- You can do everything as you want! Because of **[Your References, Your Rules.™](https://macprovideo.com/article/audio-software/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta)** *(just a little nostalgic note)* 🤭\n\n> Differences from the previous major version:\n> - Completely rewritten in [Python 3], based on open source tech stack (no more [MATLAB])\n> - Our own open source [brickwall limiter] was implemented for it\n> - Processing speed and accuracy have been increased\n> - Now it is [the library][PyPI] that can be connected to **everything** in **the Python world**\n\n# Installation and Usage\n\nIf you are a music producer or an audio engineer, choose the ~~**[Docker Image](#docker-image---the-easiest-way)**~~ *(coming soon!)*. \n\nIf you are a developer, choose the **[Python Library](#python-library---for-developers)**.\n\n# ~~Docker Image - The Easiest Way~~\n\n### Coming soon! Stay tuned.\n\n# Python Library - For Developers\n\n## Installation\n\n**[Python 3.6.0 or higher][Python 3] is required**\n\n### libsndfile\n\n**Matchering 2.0** depends on the **[SoundFile]** library, which depends on the system library **[libsndfile]**. On Windows and macOS, it installs automatically. On Linux, you need to install **[libsndfile]** using your distribution's package manager, for example:\n\n```sudo apt update && sudo apt -y install libsndfile1```\n\n### python3-pip\n\nOn some Linux distributions, **python3-pip** is not installed by default. For example use this command on Ubuntu Linux to fix this:\n\n```sudo apt -y install python3-pip```\n\n### Matchering Python Package\n\nFinally, install our `matchering` package:\n\n```\n# Linux / macOS\npython3 -m pip install -U matchering\n\n# Windows\npython -m pip install -U matchering\n```\n\n### *(Optional) FFmpeg*\n\nIf you would like to enable *MP3 loading support*, you need to install the **[FFmpeg][FFmpeg]** library. For example use this command on Ubuntu Linux:\n\n```sudo apt -y install ffmpeg```\n\nOr follow these instructions: [Windows][FFmpeg-win], [macOS][FFmpeg-mac].\n\n## Quick Example\n\n```python\nimport matchering as mg\n\n# Sending all log messages to the default print function\n# Just delete the following line to work silently\nmg.log(print)\n\nmg.process(\n    # The track you want to master\n    target='my_song.wav',\n\n    # Some \"wet\" reference track\n    reference='some_popular_song.wav',\n\n    # Where and how to save your results\n    results=[\n        mg.pcm16('my_song_master_16bit.wav'),\n        mg.pcm24('my_song_master_24bit.wav'),\n    ]\n)\n\n```\n\nYou can find more examples in the **[examples directory]**.\n\n### Or you can use premade **Matchering 2.0 Command Line Application**: **[matchering-cli]**.\n\n## A Coffee\n\nIf our package saved your time or money, you may:\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/sergree)\n\n**Thank you!**\n\n## Press About Us\n\n- **MusicRadar: [#1](https://www.musicradar.com/news/tech/the-matchering-online-mastering-service-promises-to-make-your-tracks-sound-like-others-646454)**\n\n- **Ask.Audio: [#1](https://ask.audio/articles/this-new-online-service-uses-reference-track-to-instantly-master-your-mixes) [#2](https://ask.audio/articles/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta) [#3](https://ask.audio/articles/soundtools-online-sound-mastering-algorithm-source-code-available-free-on-github)**\n\n- **Rekkerd: [#1](https://rekkerd.org/sound-tools-intros-matchering-online-mastering-service-with-matching/) [#2](https://rekkerd.org/sound-tools-launches-matchering-public-beta/) [#3](https://rekkerd.org/sound-tools-matchering-mastering-service-folds-now-open-source/)**\n\n- **macProVideo.com: [#1](https://macprovideo.com/article/audio-software/this-new-online-service-uses-reference-track-to-instantly-master-your-mixes) [#2](https://macprovideo.com/article/audio-software/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta) [#3](https://macprovideo.com/article/audio-software/soundtools-online-sound-mastering-algorithm-source-code-available-free-on-github)**\n\n- **gearnews.de: [#1](https://www.gearnews.de/online-mastering-und-matching-der-naechste-versuch-mit-extra-sound-tools/) [#2](https://www.gearnews.de/online-mastering-sound-tools-geht-in-public-beta-phase/) [#3](https://www.gearnews.de/mastering-algorithmus-matchering-von-sound-tools-jetzt-auf-github/)**\n\n- **Logic Loc: [#1](http://www.logiclocmusic.com/2017/01/05/the-matchering-online-mastering-service-promises-to-make-your-tracks-sound-like-others/)**\n\n**Thanks, guys!**\n\n## Links\n\n- [Our Limiter Quality Test](https://github.com/sergree/matchering/blob/master/LIMITER_TEST.md)\n- [Log Codes Overview](https://github.com/sergree/matchering/blob/master/LOG_CODES.md)\n- [Our Thoughts](https://github.com/sergree/matchering/blob/master/THOUGHTS.md)\n\n[Matchering]: https://github.com/sergree/matchering\n[Matchering 2.0]: https://github.com/sergree/matchering\n[mastering]: https://en.wikipedia.org/wiki/Audio_mastering\n[RMS]: https://en.wikipedia.org/wiki/Root_mean_square\n[FR]: https://en.wikipedia.org/wiki/Frequency_response\n[peak amplitude]: https://en.wikipedia.org/wiki/Amplitude\n[stereo width]: https://en.wikipedia.org/wiki/Stereo_imaging\n[MATLAB]: https://www.mathworks.com/products/matlab.html\n[Python 3]: https://www.python.org/\n[brickwall limiter]: https://en.wikipedia.org/wiki/Dynamic_range_compression#Limiting\n[PyPI]: https://pypi.org/project/matchering\n[SoundFile]: https://github.com/bastibe/SoundFile#installation\n[libsndfile]: http://www.mega-nerd.com/libsndfile/\n[FFmpeg]: https://www.ffmpeg.org/download.html\n[FFmpeg-win]: https://video.stackexchange.com/questions/20495/how-do-i-set-up-and-use-ffmpeg-in-windows\n[FFmpeg-mac]: https://superuser.com/questions/624561/install-ffmpeg-on-os-x\n[matchering-cli]: https://github.com/sergree/matchering-cli\n[examples directory]: https://github.com/sergree/matchering/tree/master/examples\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sergree/matchering",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matchering",
    "package_url": "https://pypi.org/project/matchering/",
    "platform": "",
    "project_url": "https://pypi.org/project/matchering/",
    "project_urls": {
      "Homepage": "https://github.com/sergree/matchering"
    },
    "release_url": "https://pypi.org/project/matchering/2.0.0/",
    "requires_dist": [
      "numpy (>=1.17.0)",
      "scipy (>=1.3.0)",
      "soundfile (>=0.10.3.post1)",
      "resampy (>=0.2.2)",
      "statsmodels (>=0.10.0)",
      "colorama (>=0.3.9)"
    ],
    "requires_python": ">=3.6",
    "summary": "Audio Matching and Mastering Python Library",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15458800,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57d308ccb84b0b3ece0072d7d21d0e003ae0b1137371719547aad8d6f028691c",
        "md5": "95c968eb2e09dda42bb187a74af5c610",
        "sha256": "19b9e3010c10d1bbcc58546505ddebb53d1e11e5b7ada1ecb3fd7e154497fe34"
      },
      "downloads": -1,
      "filename": "matchering-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95c968eb2e09dda42bb187a74af5c610",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40873,
      "upload_time": "2020-01-12T21:18:01",
      "upload_time_iso_8601": "2020-01-12T21:18:01.938907Z",
      "url": "https://files.pythonhosted.org/packages/57/d3/08ccb84b0b3ece0072d7d21d0e003ae0b1137371719547aad8d6f028691c/matchering-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5bb848d1aba9a941f0eb26b962640e3a7539ba7ec906fce9d94d2e080f4a1ed",
        "md5": "6de793c4ebb81508fe379b5601720f5d",
        "sha256": "d6a7f1354ed55ed7ab1fcb255b00fd8e54da59b4bc8ccb9596f9234289c57d49"
      },
      "downloads": -1,
      "filename": "matchering-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6de793c4ebb81508fe379b5601720f5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31882,
      "upload_time": "2020-01-12T21:18:05",
      "upload_time_iso_8601": "2020-01-12T21:18:05.385777Z",
      "url": "https://files.pythonhosted.org/packages/c5/bb/848d1aba9a941f0eb26b962640e3a7539ba7ec906fce9d94d2e080f4a1ed/matchering-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}