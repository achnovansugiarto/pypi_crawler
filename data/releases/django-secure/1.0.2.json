{
  "info": {
    "author": "Carl Meyer",
    "author_email": "carl@oddbird.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3"
    ],
    "description": "=============\ndjango-secure\n=============\n\n.. warning::\n\n   This project was `merged into Django 1.8`_. It does not provide any\n   additional checks beyond those included in Django 1.8+, so there is no\n   reason to use it with Django 1.8+. Since Django 1.8 is now the lowest\n   supported Django version, this project is now unsupported and un-maintained.\n\nHelping you remember to do the stupid little things to improve your Django\nsite's security.\n\nInspired by Mozilla's `Secure Coding Guidelines`_, and intended for sites that\nare entirely or mostly served over SSL (which should include anything with\nuser logins).\n\n.. _Secure Coding Guidelines: https://wiki.mozilla.org/WebAppSec/Secure_Coding_Guidelines\n.. _merged into Django 1.8: https://docs.djangoproject.com/en/1.8/releases/1.8/#security-enhancements\n\n\nQuickstart\n==========\n\nDependencies\n------------\n\nTested with `Django`_ 1.4 through trunk, and `Python`_ 2.6, 2.7, 3.2, and\n3.3. Quite likely works with older versions of both, though; it's not very\ncomplicated.\n\n.. _Django: http://www.djangoproject.com/\n.. _Python: http://www.python.org/\n\nInstallation\n------------\n\nInstall from PyPI with ``pip``::\n\n    pip install django-secure\n\nor get the `in-development version`_::\n\n    pip install django-secure==dev\n\n.. _in-development version: https://github.com/carljm/django-secure/tarball/master#egg=django_secure-dev\n\nUsage\n-----\n\n* Add ``\"djangosecure\"`` to your ``INSTALLED_APPS`` setting.\n\n* Add ``\"djangosecure.middleware.SecurityMiddleware\"`` to your\n  ``MIDDLEWARE_CLASSES`` setting (where depends on your other middlewares, but\n  near the beginning of the list is probably a good choice).\n\n* Set the ``SECURE_SSL_REDIRECT`` setting to ``True`` if all non-SSL requests\n  should be permanently redirected to SSL.\n\n* Set the ``SECURE_HSTS_SECONDS`` setting to an integer number of seconds and\n  ``SECURE_HSTS_INCLUDE_SUBDOMAINS`` to ``True``, if you want to use `HTTP\n  Strict Transport Security`_.\n\n* Set the ``SECURE_FRAME_DENY`` setting to ``True``, if you want to prevent\n  framing of your pages and protect them from `clickjacking`_.\n\n* Set the ``SECURE_CONTENT_TYPE_NOSNIFF`` setting to ``True``, if you want to prevent\n  the browser from guessing asset content types.\n\n* Set the ``SECURE_BROWSER_XSS_FILTER`` setting to ``True``, if you want to enable\n  the browser's XSS filtering protections.\n\n* Set ``SESSION_COOKIE_SECURE`` and ``SESSION_COOKIE_HTTPONLY`` to ``True`` if\n  you are using ``django.contrib.sessions``. These settings are not part of\n  ``django-secure``, but they should be used if running a secure site, and the\n  ``checksecure`` management command will check their values.\n  \n* Ensure that you're using a long, random and unique ``SECRET_KEY``.\n\n* Run ``python manage.py checksecure`` to verify that your settings are\n  properly configured for serving a secure SSL site.\n\n.. _HTTP Strict Transport Security: http://en.wikipedia.org/wiki/Strict_Transport_Security\n\n.. _clickjacking: http://www.sectheory.com/clickjacking.htm\n\n.. warning::\n    If ``checksecure`` gives you the all-clear, all it means is that you're now\n    taking advantage of a small selection of easy security wins. That's great,\n    but it doesn't mean your site or your codebase is secure: only a competent\n    security audit can tell you that.\n\n.. end-here\n\nDocumentation\n-------------\n\nSee the `full documentation`_ for more details.\n\n.. _full documentation: http://django-secure.readthedocs.org\n\n\nCHANGES\n=======\n\n1.0.2 (2020.03.31)\n-------------------\n\n* This project was merged into Django 1.8 and its features are now part of core\n  Django. Thus it is unmaintained and you should not use it.\n\n1.0.1 (2014.10.23)\n------------------\n\n* Hide django-secure tests from pre-1.6 Django test runners, to avoid breaking\n  project tests.\n\n\n1.0 (2013.04.17)\n----------------\n\n* BACKWARDS INCOMPATIBLE: Dropped tested support for Python 2.5, Django 1.2,\n  and Django 1.3.\n\n* Added support and testing for Python 3 (though all non-test code worked fine\n  under Python 3 previously.)\n\n\n0.1.3 (2013.04.17)\n------------------\n\n* Added check for ``SECRET_KEY``. Thanks Ram Rachum.\n\n0.1.2 (2012.04.13)\n------------------\n\n* Added the ``SECURE_HSTS_INCLUDE_SUBDOMAINS`` setting. Thanks Paul McMillan\n  for the report and Donald Stufft for the patch. Fixes #13.\n\n* Added the ``X-XSS-Protection: 1; mode=block`` header. Thanks Johannas Heller.\n\n\n0.1.1 (2011.11.23)\n------------------\n\n* Added the ``X-Content-Type-Options: nosniff`` header. Thanks Johannas Heller.\n\n* ``SECURE_PROXY_SSL_HEADER`` setting now patches ``request.is_secure()`` so it\n  respects proxied SSL, to avoid redirects to http that should be to https.\n\n\n0.1.0 (2011.05.29)\n------------------\n\n* Initial release.\n\n\n\nTODO\n====",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/carljm/django-secure/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-secure",
    "package_url": "https://pypi.org/project/django-secure/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-secure/",
    "project_urls": {
      "Homepage": "https://github.com/carljm/django-secure/"
    },
    "release_url": "https://pypi.org/project/django-secure/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Utilities and a 'linter' to help you make your Django site more secure.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6924225,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1c78d2eea7c1fc21e6a0bec414b1de88adfd8b84d0ac25bda4c81189ccd545f",
        "md5": "d96eafa9c5cc9706f24e02b2634099bc",
        "sha256": "b9511e5be1399616649be0402e341382ea40ba361efd48a81a0bbd3efc77f197"
      },
      "downloads": -1,
      "filename": "django-secure-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d96eafa9c5cc9706f24e02b2634099bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26070,
      "upload_time": "2020-03-31T23:33:39",
      "upload_time_iso_8601": "2020-03-31T23:33:39.017945Z",
      "url": "https://files.pythonhosted.org/packages/c1/c7/8d2eea7c1fc21e6a0bec414b1de88adfd8b84d0ac25bda4c81189ccd545f/django-secure-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}