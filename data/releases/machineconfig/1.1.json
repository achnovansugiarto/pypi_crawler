{
  "info": {
    "author": "Alex Al-Saffar",
    "author_email": "programmer@usa.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\r\n# Welcome to machineconfig\r\n\r\n# Shortcuts\r\n* `bit.ly/cfgroot` is a shortcut to this repo.\r\n* `curl bit.ly/cfgread -L | bat -l md --style=\"header\"` to get the readme file.\r\n\r\nMachineconfig is a package for managing configuration files (aka dotfiles). The idea is to collect those critical, time-consuming-files-to-setup in one directory and reference them via symbolic links from their original locations. Thus, when a new machine is to be setup, all that is required is to clone the repo in that machine and create the symbolic links.\r\nDotfiles include, but are not limited to:\r\n* `~/.gitconfig`\r\n* `~/.ssh`\r\n* `~/.aws`\r\n* `~/.bash_profile`\r\n* `~/.bashrc`\r\n* `~/.config`\r\n* `$profile` in Windows Powershell\r\n* etc\r\n\r\n\r\nAdditionally, files that contain data, sensitive information that should not be pushed to a repository are contained in a directory `~/dotfiles`. The files therein are encrypted before backedup.\r\n\r\n\r\n## Windows Setup\r\nWith elevated `PowerShell`, run the following: (short ``)\r\n```shell\r\n# apps  # short: `(iwr bit.ly/cfgappswindows).Content | iex`\r\nInvoke-WebRequest https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_windows/apps.ps1 | Invoke-Expression\r\n# virtual enviornment  # short `curl bit.ly/cfgvewindows -L | iex`\r\nInvoke-WebRequest https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_windows/ve.ps1 | Invoke-Expression\r\n# dev repos\r\nInvoke-WebRequest https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_windows/repos.ps1 | Invoke-Expression\r\n# symlinks: locally, run: `ftpsx username@hostname[:port] ~/dotfiles -z`, then, on the remote:\r\n. ~/code/machineconfig/src/machineconfig/setup_windows/symlinks.ps1\r\n# pwsh profile\r\n# ~/code/machineconfig/src/machineconfig/setup_windows/wt_and_pwsh.ps1  # experimental\r\n# devapps:\r\n~/code/machineconfig/src/machineconfig/setup_windows/devapps.ps1\r\n```\r\nshort `curl bit.ly/cfgallwindows -L | iex`\r\n\r\n###### Setup SSH connection:\r\n```shell\r\n$pubkey_url='https://github.com/thisismygitrepo.keys'  # (CHANGE APPROPRIATELY)\r\n$pubkey_string=(Invoke-WebRequest $pubkey_url).Content\r\nInvoke-WebRequest https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_windows/openssh_all.ps1 | Invoke-Expression\r\n```\r\nshort `curl bit.ly/cfgsshwindows -L | iex`\r\n\r\n###### Install Croshell Terminal Directly,\r\n```shell\r\nInvoke-WebRequest https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_windows/web_shortcuts/croshell.ps1 | Invoke-Expression\r\n```\r\nshort: `curl bit.ly/cfgcroshellwindows -L | iex`\r\n\r\n# Linux Setup\r\nWith `sudo` access, run the following: (short `curl bit.ly/cfgalllinux -L | bash`)\r\n```bash\r\n# apps  # short: `curl bit.ly/cfgappslinux -L | bash`\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/apps.sh | bash\r\n# virtual enviornment  # short `curl bit.ly/cfgvelinux -L | bash`\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/ve.sh | bash\r\n# repos\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/repos.sh | bash\r\n# symlinks and bash profile.\r\n# locally, run: `ftpsx username@hostname[:port] ~/dotfiles -z`\r\n# for wsl: wsl_server.ps1; ftpsx $env:USERNAME@localhost:2222 ~/dotfiles -z # OR: ln -s /mnt/c/Users/$(whoami)/dotfiles ~/dotfiles\r\nsource ~/code/machineconfig/src/machineconfig/setup_linux/symlinks.sh  # requires sudo since it invloves chmod of dotfiles/.ssh, however sudo doesn't work with source. best to have sudo -s earlier.\r\n# devapps\r\nsource <(sudo cat ~/code/machineconfig/src/machineconfig/setup_linux/devapps.sh)\r\n```\r\n\r\n###### Setup SSH connection:\r\n```bash\r\nexport $pubkey_url='https://github.com/thisismygitrepo.keys'  # (CHANGE APPROPRIATELY)\r\npubkey_string=$(curl --silent $pubkey_url)\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/openssh_all.sh | sudo bash\r\n# For WSL only, also run the following:\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/openssh_wsl.sh | sudo bash  \r\n```\r\n\r\n###### Install Croshell Terminal Directly\r\n```bash\r\ncurl https://raw.githubusercontent.com/thisismygitrepo/machineconfig/main/src/machineconfig/setup_linux/web_shortcuts/croshell.sh | sudo bash\r\n```\r\nshort `curl bit.ly/cfgcroshelllinux -L | bash`\r\n\r\n\r\n# Author\r\nAlex Al-Saffar. [email](mailto:programmer@usa.com)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thisismygitrepo/machineconfig",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "machineconfig",
    "package_url": "https://pypi.org/project/machineconfig/",
    "platform": null,
    "project_url": "https://pypi.org/project/machineconfig/",
    "project_urls": {
      "Bug Tracker": "https://github.com/thisismygitrepo/machineconfig/issues",
      "Homepage": "https://github.com/thisismygitrepo/machineconfig"
    },
    "release_url": "https://pypi.org/project/machineconfig/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Dotfiles management package",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17537417,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8328aefb440b8471a39480e44f4b6d78e026d86301d756555b06a74992cfe88f",
        "md5": "2a265a20e7b6a66127a029e3cdd0fa2c",
        "sha256": "00321720c0e81ab03c39cb36b6bb0717162023927da8c1fca7ecedddc41e326a"
      },
      "downloads": -1,
      "filename": "machineconfig-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a265a20e7b6a66127a029e3cdd0fa2c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 95828,
      "upload_time": "2023-02-11T22:28:29",
      "upload_time_iso_8601": "2023-02-11T22:28:29.871040Z",
      "url": "https://files.pythonhosted.org/packages/83/28/aefb440b8471a39480e44f4b6d78e026d86301d756555b06a74992cfe88f/machineconfig-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7a5d65f55dd21ed582e9411b106d5ced04d937ea398755f460d47c1449df325",
        "md5": "1180113b1a1ee8264768dabf57dec665",
        "sha256": "1b6103f79c66a8a967d34ccfc1d4f2bec37dc147683c7c2393314c933a00f19b"
      },
      "downloads": -1,
      "filename": "machineconfig-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1180113b1a1ee8264768dabf57dec665",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 124713,
      "upload_time": "2023-02-11T22:28:34",
      "upload_time_iso_8601": "2023-02-11T22:28:34.508149Z",
      "url": "https://files.pythonhosted.org/packages/a7/a5/d65f55dd21ed582e9411b106d5ced04d937ea398755f460d47c1449df325/machineconfig-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}