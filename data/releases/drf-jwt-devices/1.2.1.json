{
  "info": {
    "author": "Michal Proszek",
    "author_email": "poxip@arabel.la",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "===============\ndrf-jwt-devices\n===============\n|travis|_ |pypi|_ |coveralls|_ |requiresio|_\n\nPermanent token feature for `Django Rest Framework JWT <https://github.com/GetBlimp/django-rest-framework-jwt>`_\n\nBy default JWT tokens have short lifetime because of security reasons, but sometimes you may want to keep user logged\nin, without the need to refresh the auth token each 5 minutes. For this case, you should consider using the permanent\ntoken authentication.\n\nInstallation\n============\nTo use, add ``jwt_devices`` to your ``INSTALLED_APPS``, and then migrate the project.\n\nConfiguration\n-------------\n\nTo enable permanent token authentication, update rest framework's default authentication classes list:\n::\n\n    REST_FRAMEWORK={\n        \"DEFAULT_AUTHENTICATION_CLASSES\": [\n            \"jwt_devices.authentication.PermanentTokenAuthentication\"\n        ]\n    }\n\nAnother step is to add a few urls to your url patterns, and register the ``DeviceViewSet``:\n::\n\n  from jwt_devices import views\n  from rest_framework.routers import DefaultRouter\n\n  router = DefaultRouter()\n  router.register(r'devices', views.DeviceViewSet)\n\n  urlpatterns = [\n      # ...\n      url(r'^device-refresh-token/$', views.device_refresh_token),\n      url(r'^device-logout/$', views.device_logout)\n  ] + router.urls\n\n\nUsing the API views\n-------------------\n\n**Login & logout view**\n\nWhen using the regular JWT login or the device logout view, use the ``X-Device-Model`` header to pass device model\n(otherwise, user agent will used instead as the name). After a successful login, the permanent token and id of the\ncreated device will be returned, for example:\n::\n\n  {\n      \"token\": \"ads344fdgfd5454yJ0eAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VynRlYW1AYXJhYmVsLmxh\",\n      \"permanent_token\": \"gfd5454yJ0eAiOiJKV1QiLCJhbGciOiJ\",\n      \"device_id\": 1\n  }\n\nThe ``device_id`` is used to logout the device, so it should be saved on the front-end side (in local storage, for\nexample).\n\nTo logout a device, make a **DELETE** request to the ``rest_framework_jwt.views.device_logout`` view, passing device's\nid in the ``Device-Id`` header to identify the device.\n\n**Refresh JWT token using permanent token**\n\nTo refresh JWT token, you have to pass the ``Permanent-Token`` header along with the request to identify the device.\nOn success, response will return new JWT token (the same as it does after login).\n\nIn case the permanent token has expired, the device will be logged out, and it will require login in again to obtain a\nnew permanent token. To customize the expiration time and expiration accuracy, set the following settings in your\n``REST_FRAMEWORK`` configuration in **settings.py**\n\n\n**PermittedHeadersMiddleware**\n\nAs you may know, the content of a permanent token is a very fragile information, which should be sent along with a\nrequest only when it is needed. To avoid situations in which a front-end developer has incorrectly implemented the\npermanent token authentication on the front-end side and the permanent token value is sent with all requests\n(just like the JWT token), the ``jwt_devices.middleware.PermittedHeadersMiddleware`` comes in handy. The middleware looks\nfor ``Permanent-Token`` in the headers, and checks if the view is not the\n``jwt_devices.views.DeviceRefreshJSONWebToken`` in which the ``Permanent-Token`` header is obligatory, otherwise it\nreturns a **400 Bad Request** error.\n\nTo use the ``jwt_devices.middleware.PermittedHeadersMiddleware`` in your application, add\n``jwt_devices.middleware.jwt_devices.middleware.PermittedHeadersMiddleware`` to your ``MIDDLEWARES`` or\n``MIDDLEWARE_CLASSES`` (in Django <1.10) in Django settings.\n\n**Settings**\n\n* ``JWT_PERMANENT_TOKEN_AUTH`` - option to enable/disable the permanent token authentication (default: ``True``)\n* ``JWT_PERMANENT_TOKEN_EXPIRATION_DELTA`` - describes how long can the permanent token live\n  (default: ``datetime.timedelta(days=7)``)\n* ``JWT_PERMANENT_TOKEN_EXPIRATION_ACCURACY`` - the accuracy of updating permanent token last request time to decrease\n  the number of database queries (default: ``datetime.timedelta(minutes=30)``)\n\nSupport\n=======\n* Django 1.8 - 1.11\n* Django Rest Framework 3.1 - 3.8\n* Python 3.4 - 3.6\n\n.. |travis| image:: https://secure.travis-ci.org/ArabellaTech/drf-jwt-devices.svg?branch=master\n.. _travis: http://travis-ci.org/ArabellaTech/drf-jwt-devices\n\n.. |pypi| image:: https://img.shields.io/pypi/v/drf-jwt-devices.svg\n.. _pypi: https://pypi.python.org/pypi/drf-jwt-devices\n\n.. |coveralls| image:: https://coveralls.io/repos/github/ArabellaTech/drf-jwt-devices/badge.svg?branch=master\n.. _coveralls: https://coveralls.io/github/ArabellaTech/drf-jwt-devices\n\n.. |requiresio| image:: https://requires.io/github/ArabellaTech/drf-jwt-devices/requirements.svg?branch=master\n.. _requiresio: https://requires.io/github/ArabellaTech/drf-jwt-devices/requirements/\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ArabellaTech/drf-jwt-devices",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-jwt-devices",
    "package_url": "https://pypi.org/project/drf-jwt-devices/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-jwt-devices/",
    "project_urls": {
      "Homepage": "https://github.com/ArabellaTech/drf-jwt-devices"
    },
    "release_url": "https://pypi.org/project/drf-jwt-devices/1.2.1/",
    "requires_dist": [
      "djangorestframework-jwt (>=1.11.0)",
      "six (>=1.10.0)"
    ],
    "requires_python": "",
    "summary": "Permanent token authentication for django-rest-framework-jwt",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5804243,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "215b9934c5531ebc76b0a726ba6635045abc53488235a0fcf2cf7311187d191c",
        "md5": "96e6f884a2302558f903ffd6dce06691",
        "sha256": "61a4d5bde6d8234ac8279910468a9e7077b26bb5f8927049594b27a5ee781055"
      },
      "downloads": -1,
      "filename": "drf_jwt_devices-1.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "96e6f884a2302558f903ffd6dce06691",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 24182,
      "upload_time": "2018-09-26T17:21:33",
      "upload_time_iso_8601": "2018-09-26T17:21:33.834815Z",
      "url": "https://files.pythonhosted.org/packages/21/5b/9934c5531ebc76b0a726ba6635045abc53488235a0fcf2cf7311187d191c/drf_jwt_devices-1.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "557568434db21a53f5df962d66f569db5460f74a51fb25e23d1e85a56f9ec1c2",
        "md5": "861f2030011fc7ad3763b7889608256c",
        "sha256": "f13ac4a017b4938ae5ccbd6423c497a85544c64bbfba060a9d220c78985ff472"
      },
      "downloads": -1,
      "filename": "drf-jwt-devices-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "861f2030011fc7ad3763b7889608256c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11597,
      "upload_time": "2018-10-25T22:12:54",
      "upload_time_iso_8601": "2018-10-25T22:12:54.049264Z",
      "url": "https://files.pythonhosted.org/packages/55/75/68434db21a53f5df962d66f569db5460f74a51fb25e23d1e85a56f9ec1c2/drf-jwt-devices-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}