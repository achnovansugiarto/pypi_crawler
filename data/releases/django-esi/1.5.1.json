{
  "info": {
    "author": "Alliance Auth",
    "author_email": "adarnof@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-esi\n\nDjango app for easy access to the EVE Swagger Interface (ESI)\n\n[![Chat on Discord](https://img.shields.io/discord/399006117012832262.svg)](https://discord.gg/fjnHAmk)\n[![license](https://img.shields.io/badge/license-GPLv3-green)](https://pypi.org/project/django-esi/)\n[![python](https://img.shields.io/pypi/pyversions/django-esi)](https://pypi.org/project/django-esi/)\n[![django](https://img.shields.io/pypi/djversions/django-esi)](https://pypi.org/project/django-esi/)\n[![version](https://img.shields.io/pypi/v/django-esi)](https://pypi.org/project/django-esi/)\n[![pipeline-status](https://gitlab.com/allianceauth/django-esi/badges/master/pipeline.svg)](https://gitlab.com/allianceauth/django-esi/pipelines)\n[![coverage](https://gitlab.com/allianceauth/django-esi/badges/master/coverage.svg)](https://gitlab.com/allianceauth/django-esi/pipelines)\n\n## Contents\n\n- [Overview](#overview)\n- [Installation](#installation)\n- [Usage in views](#usage-in-views)\n- [Accessing ESI](#accessing-esi)\n- [Cleaning the database](#cleaning-the-database)\n- [Operating on singularity](#operating-on-singularity)\n- [History of this app](#operating-on-singularity)\n- [Change log](CHANGELOG.md)\n\n## Overview\n\nDjango-esi is a Django app that provides an interface for easy access to the EVE Swagger Interface (ESI), the official API for the game [EVE Online](https://www.eveonline.com/).\n\nIt is build upon [Bravado](https://github.com/Yelp/bravado) - a python client library for Swagger 2.0 services.  \n\nDjango-esi adds the following main functionalities to a Django site:\n\n- Dynamically generated client for interacting with public and private ESI endpoints\n- Support for adding EVE SSO to authenticate characters and retrieve tokens\n- Control over ESI endpoint versions\n\n## Installation\n\n1. Install the latest version directly from PyPI:\n\n    `pip install django-esi`\n\n1. Add `esi` to your `INSTALLED_APPS` setting:\n\n   `INSTALLED_APPS += 'esi'`\n\n1. Include the esi urlconf in your project's urls:\n\n    `url(r'^sso/', include('esi.urls', namespace='esi')),`\n\n1. Register an application with the [EVE Developers site](https://developers.eveonline.com/applications)\n\n    If your application requires scopes, select `Authenticated API Access` and register all possible scopes your app can request. Otherwise `Authentication Only` will suffice.\n    Set the `Callback URL` to `https://example.com/sso/callback`\n\n1. Add SSO client settings to your project settings:\n\n    `ESI_SSO_CLIENT_ID = \"my client id\"`<br>\n    `ESI_SSO_CLIENT_SECRET = \"my client secret\"`<br>\n    `ESI_SSO_CALLBACK_URL = \"https://example.com/sso/callback\"`\n\n1. Run `python manage.py migrate` to create models.\n\n## Usage in views\n\nWhen views require a token, wrap with the `token_required` decorator and accept a `token` arg:\n\n```python\nfrom esi.decorators import token_required\n\n@token_required()\ndef my_view(request, token):\n    ...\n```\n\nThis will prompt the user to either select a token from their current ones, or if none exist create a new one via SSO.\n\nTo specify scopes, add either a list of names or a space-delimited string:\n\n```python\n@token_required(scopes=['esi-location.read_ship_type.v1', 'esi-location.read_location.v1'])\n@token_required(scopes='esi-location.read_ship_type.v1 esi-location.read_location.v1')\n```\n\nTo require a new token, such as for logging in, add the `new` argument:\n\n```python\n@token_required(new=True)\n```\n\nTo request all of a user's tokens which have the required scopes, wrap instead with the `tokens_required` decorator and accept a `tokens` arg:\n\n```python\n@tokens_required(scopes='esi-location.read_ship_type.v1')\ndef my_view(request, tokens):\n    # my code\n```\n\nThis skips prompting for token selection and instead passes that responsibility to the view. Tokens are provided as a queryset.\n\n## Accessing ESI\n\ndjango-esi provides a convenience wrapper around the [bravado SwaggerClient](https://github.com/Yelp/bravado).\n\n### Getting a client\n\nTo get a SwaggerClient configured for ESI, call the factory:\n\n```python\nfrom esi.clients import esi_client_factory\n\nclient = esi_client_factory()\n```\n\n### Accessing authenticated endpoints\n\nTo get an authenticated SwaggerClient, add the token argument:\n\n```python\nclient = esi_client_factory(token=my_token)\n```\n\nOr, get the client from the specific token model instead:\n\n```python\nclient = my_token.get_esi_client()\n```\n\nAuthenticated clients will auto-renew tokens when needed, or raise a `TokenExpiredError` if they aren't renewable.\n\n### Specifying resource versions\n\nAs explained on the [EVE Developers Blog](https://developers.eveonline.com/blog/article/breaking-changes-and-you), it's best practice to call a specific version of the resource and allow the ESI router to map it to the correct route, being `legacy`, `latest` or `dev`. \n\nClient initialization begins with a base swagger spec. By default this is the version defined in settings (`ESI_API_VERSION`), but can be overridden with an extra argument to the factory:\n\n```python\nclient = esi_client_factory(version='v4')\nclient = token.get_esi_client(version='v4')\n```\n\nOnly resources with the specified version number will be available. For instance, if you specify `v4` but `Universe` does not have a `v4` version, it will not be available to that specific client. Only `legacy`, `latest` and `dev` are guaranteed to have all resources available.\n\nIndividual resources are versioned and can be accessed by passing additional arguments to the factory:\n\n```python\nclient = esi_client_factory(Universe='v1', Character='v3')\nclient = token.get_esi_client(Universe='v1', Character='v3')\n```\n\nA list of available resources is available on the [EVE Swagger Interface browser](https://esi.tech.ccp.is). If the resource is not available with the specified version, an `AttributeError` will be raised. \n\nThis version of the resource replaces the resource originally initialized. If the requested base version does not have the specified resource, it will be added.\n\nNote that only one old revision of each resource is kept available through the legacy route. Keep an eye on the [deployment timeline](https://github.com/ccpgames/esi-issues/projects/2/) for resource updates.\n\n### Using a local spec file\n\nSpecifying resource versions introduces one major problem for shared code: not all resources nor all their operations are available on any given version. This can be addressed by shipping a copy of the [versioned latest spec](https://esi.tech.ccp.is/_latest/swagger.json) with your app. **This is the preferred method for deployment.**\n\nTo build a client using this local spec, pass an additional kwarg `spec_file` which contains the path to your local swagger.json:\n\n```python\nc = esi_client_factory(spec_file='/path/to/swagger.json')\n```\n\nFor example, a swagger.json in the current file's directory would look like:\n\n```python\nc = esi_client_factory(\n    spec_file=os.path.join(os.path.dirname(os.path.abspath(__file__)), \n    'swagger.json')\n)\n```\n\nIf a `spec_file` is specified all other versioning is unavailable: ensure you ship a spec with resource versions your app can handle.\n\n### Accessing alternate data sources\n\nESI data source can also be specified during client creation:\n\n```python\nclient = esi_client_factory(datasource='tranquility')\n```\n\nAvailable data sources are `tranquility` and `singularity`.\n\n## Cleaning the database\n\nTwo tasks are available:\n\n- `cleanup_callbackredirect` removes all `CallbackRedirect` models older than a specified age (in seconds). Default is 300.\n- `cleanup_token` checks all `Token` models, and if expired, attempts to refresh. If expired and cannot refresh, or fails to refresh, the model is deleted.\n\nTo schedule these automatically with celerybeat, add them to your settings.py `CELERYBEAT_SCHEDULE` dict like so:\n\n```python\nfrom celery.schedules import crontab\n\nCELERYBEAT_SCHEDULE = {\n    ...\n    'esi_cleanup_callbackredirect': {\n        'task': 'esi.tasks.cleanup_callbackredirect',\n        'schedule': crontab(hour='*/4'),\n    },\n    'esi_cleanup_token': {\n        'task': 'esi.tasks.cleanup_token',\n        'schedule': crontab(day_of_month='*/1'),\n    },\n}\n```\n\nRecommended intervals are four hours for callback redirect cleanup and daily for token cleanup (token cleanup can get quite slow with a large database, so adjust as needed). If your app does not require background token validation, it may be advantageous to not schedule the token cleanup task, instead relying on the validation check when using `@token_required` decorators or adding `.require_valid()` to the end of a query.\n\n## Operating on singularity\n\nBy default, django-esi process all operations on the tranquility cluster. To operate on singularity instead, two settings need to be changed:\n\n- `ESI_OAUTH_URL` should be set to `https://sisilogin.testeveonline.com/oauth`\n- `ESI_API_DATASOURCE` should be set to `singularity`\n  \nNote that tokens cannot be transferred between servers. Any tokens in the database before switching to singularity will be deleted next refresh.\n\n## History of this app\n\nThis app is a fork from [adarnauth-esi](https://gitlab.com/Adarnof/adarnauth-esi). Since this app is an important component of the [Alliance Auth](https://gitlab.com/allianceauth/allianceauth) system and Adarnof - the original author - was no longer able to maintain it the AA dev team has decided in December 2019 to take over maintenance and further developing for this app within the Alliance Auth project.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/allianceauth/django-esi",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-esi",
    "package_url": "https://pypi.org/project/django-esi/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-esi/",
    "project_urls": {
      "Homepage": "https://gitlab.com/allianceauth/django-esi"
    },
    "release_url": "https://pypi.org/project/django-esi/1.5.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django app for accessing the EVE Swagger Interface (ESI).",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13326817,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ea9b4d7888093c41015b06a91bbbd1ba7cd2d7ec2b72a0e7b04e0ce49d14a5c",
        "md5": "a3042d839efa44d53597339d94d8e6b0",
        "sha256": "50177d44bc82120cfcd52a04fa47e633f6887163251c5b704dadf768a7389484"
      },
      "downloads": -1,
      "filename": "django-esi-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a3042d839efa44d53597339d94d8e6b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49260,
      "upload_time": "2020-01-11T01:26:57",
      "upload_time_iso_8601": "2020-01-11T01:26:57.121351Z",
      "url": "https://files.pythonhosted.org/packages/0e/a9/b4d7888093c41015b06a91bbbd1ba7cd2d7ec2b72a0e7b04e0ce49d14a5c/django-esi-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}