{
  "info": {
    "author": "Adel Qalieh",
    "author_email": "adelq@med.umich.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "dN/dS Calculator\n================\n\n.. image:: https://travis-ci.org/adelq/dnds.svg?branch=master\n   :target: https://travis-ci.org/adelq/dnds\n\n.. image:: https://img.shields.io/pypi/v/dnds.svg?maxAge=2592000?style=plastic\n    :target: https://pypi.python.org/pypi/dnds\n\nCalculate dN/dS ratio precisely (Ka/Ks) using a codon-by-codon counting\nmethod. Also calculates the pN/pS ratio precisely (previously referred to as\ndN/dS).\n\nUsage\n-----\n\n.. code:: python\n\n    >>> sequence_1 = \"ATGCTTTTGAAATCG\"\n    >>> sequence_2 = \"ATGCGTTCGAAGTCG\"\n    >>> pnps(sequence_1, sequence2)\n    Fraction(38, 71)\n    >>> round(float(pnps(sequence_1, sequence2)), 3)\n    0.535\n    >>> round(dnds(sequence_1, sequence_2), 3)\n    0.467\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adelq/dnds",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnds",
    "package_url": "https://pypi.org/project/dnds/",
    "platform": "",
    "project_url": "https://pypi.org/project/dnds/",
    "project_urls": {
      "Homepage": "https://github.com/adelq/dnds"
    },
    "release_url": "https://pypi.org/project/dnds/2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Calculate dN/dS ratio precisely (Ka/Ks) using a codon-by-codon counting method.",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3821200,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5c8c538ab1fd1629b4f0692071d0a175cb191cffbc6a7c5c6636b604de80003",
        "md5": "01f80aa5e27e90b1417dfc1bda21e5aa",
        "sha256": "31b24e1715d2f2ab05499772cb98c9e93af34c0744cd8c4d3836d264ac3a3617"
      },
      "downloads": -1,
      "filename": "dnds-2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01f80aa5e27e90b1417dfc1bda21e5aa",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 3724,
      "upload_time": "2018-04-30T15:54:44",
      "upload_time_iso_8601": "2018-04-30T15:54:44.469605Z",
      "url": "https://files.pythonhosted.org/packages/b5/c8/c538ab1fd1629b4f0692071d0a175cb191cffbc6a7c5c6636b604de80003/dnds-2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}