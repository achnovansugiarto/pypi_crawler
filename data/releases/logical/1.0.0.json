{
  "info": {
    "author": "Andrei Lapets",
    "author_email": "a@lapets.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=======\nlogical\n=======\n\nCallable subclass of the tuple type for representing logical operators/connectives based on their truth tables.\n\n|pypi| |readthedocs| |actions| |coveralls|\n\n.. |pypi| image:: https://badge.fury.io/py/logical.svg\n   :target: https://badge.fury.io/py/logical\n   :alt: PyPI version and link.\n\n.. |readthedocs| image:: https://readthedocs.org/projects/logical/badge/?version=latest\n   :target: https://logical.readthedocs.io/en/latest/?badge=latest\n   :alt: Read the Docs documentation status.\n\n.. |actions| image:: https://github.com/reity/logical/workflows/lint-test-cover-docs/badge.svg\n   :target: https://github.com/reity/logical/actions/workflows/lint-test-cover-docs.yml\n   :alt: GitHub Actions status.\n\n.. |coveralls| image:: https://coveralls.io/repos/github/reity/logical/badge.svg?branch=main\n   :target: https://coveralls.io/github/reity/logical?branch=main\n   :alt: Coveralls test coverage summary.\n\nPackage Installation and Usage\n------------------------------\nThe package is available on `PyPI <https://pypi.org/project/logical/>`_::\n\n    python -m pip install logical\n\nThe library can be imported in the usual ways::\n\n    import logical\n    from logical import *\n\nEach instance of the ``logical`` class (derived from the built-in `tuple <https://docs.python.org/3/library/stdtypes.html#tuple>`_ class) represents a boolean function that accepts ``n`` inputs by specifying its output values across all possible inputs. In other words, an instance represents the *output column* of a truth table for a function (under the assumption that the input vectors to which each output value corresponds are sorted in ascending order). Thus, each instance representing a function that accepts ``n`` inputs must have length ``2**n``.\n\nFor example, consider the truth table below for a boolean function *f* that accepts three inputs:\n\n+-----+-----+-----+---------------------+\n| *x* | *y* | *z* | *f* (*x*, *y*, *z*) |\n+-----+-----+-----+---------------------+\n|  0  |  0  |  0  | 1                   |\n+-----+-----+-----+---------------------+\n|  0  |  0  |  1  | 0                   |\n+-----+-----+-----+---------------------+\n|  0  |  1  |  0  | 1                   |\n+-----+-----+-----+---------------------+\n|  0  |  1  |  1  | 0                   |\n+-----+-----+-----+---------------------+\n|  1  |  0  |  0  | 0                   |\n+-----+-----+-----+---------------------+\n|  1  |  0  |  1  | 1                   |\n+-----+-----+-----+---------------------+\n|  1  |  1  |  0  | 1                   |\n+-----+-----+-----+---------------------+\n|  1  |  1  |  1  | 0                   |\n+-----+-----+-----+---------------------+\n\nNotice that the input vectors (*i.e.*, the left-most three column values in each row) are sorted in ascending order from top to bottom. If we always assume this order for input vectors, the entire function *f* can be represented using the right-most column. For the example function *f* defined by the table above, this can be done in the manner illustrated below::\n\n    >>> from logical import *\n    >>> f = logical((1, 0, 1, 0, 0, 1, 1, 0)) \n\nIt is then possible to apply the instance ``f`` defined above to any three-component input vector::\n\n    >>> f(0, 1, 1)\n    0\n    >>> f(1, 1, 0)\n    1\n\nPre-defined instances are provided for all nullary, unary, and binary boolean functions. These are available both as constants and as attributes of the ``logical`` class::\n\n    >>> logical.xor_(1, 0)\n    1\n    >>> and_(1, 0)\n    0\n\nThe constants ``nullary``, ``unary``, and ``binary`` are also defined. Each is a set containing exactly those instances of ``logical`` that represent functions having that arity::\n\n    >>> unary\n    {(0, 0), (1, 0), (1, 1), (0, 1)}\n    >>> len(binary)\n    16\n\nFor convenience, the constant ``every`` is defined as the union of ``nullary``, ``unary``, and ``binary``.\n\nDocumentation\n-------------\nThe documentation can be generated automatically from the source files using `Sphinx <https://www.sphinx-doc.org/>`_::\n\n    cd docs\n    python -m pip install -r requirements.txt\n    sphinx-apidoc -f -E --templatedir=_templates -o _source .. ../setup.py && make html\n\nTesting and Conventions\n-----------------------\nAll unit tests are executed and their coverage is measured when using `pytest <https://docs.pytest.org/>`_ (see ``setup.cfg`` for configuration details)::\n\n    python -m pip install pytest pytest-cov\n    python -m pytest\n\nAlternatively, all unit tests are included in the module itself and can be executed using `doctest <https://docs.python.org/3/library/doctest.html>`_::\n\n    python logical/logical.py -v\n\nStyle conventions are enforced using `Pylint <https://www.pylint.org/>`_::\n\n    python -m pip install pylint\n    python -m pylint logical\n\nContributions\n-------------\nIn order to contribute to the source code, open an issue or submit a pull request on the `GitHub page <https://github.com/reity/logical>`_ for this library.\n\nVersioning\n----------\nThe version number format for this library and the changes to the library associated with version number increments conform with `Semantic Versioning 2.0.0 <https://semver.org/#semantic-versioning-200>`_.\n\nPublishing\n----------\nThis library can be published as a `package on PyPI <https://pypi.org/project/logical/>`_ by a package maintainer. Install the `wheel <https://pypi.org/project/wheel/>`_ package, remove any old build/distribution files, and package the source into a distribution archive::\n\n    python -m pip install wheel\n    rm -rf dist *.egg-info\n    python setup.py sdist bdist_wheel\n\nNext, install the `twine <https://pypi.org/project/twine/>`_ package and upload the package distribution archive to PyPI::\n\n    python -m pip install twine\n    python -m twine upload dist/*\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/reity/logical",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logical",
    "package_url": "https://pypi.org/project/logical/",
    "platform": null,
    "project_url": "https://pypi.org/project/logical/",
    "project_urls": {
      "Homepage": "https://github.com/reity/logical"
    },
    "release_url": "https://pypi.org/project/logical/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Callable subclass of the tuple type for representing logical operators/connectives based on their truth tables.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15357428,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45a832a0e7a7e7d7958a74f4ab78d9e880569d71397e77d331d2b894bd836f5b",
        "md5": "d976f707a163ae211e91cf3a7f055e38",
        "sha256": "b3663abaf62211df91fcf0535bbf0f675b673e59b3ee681258b3dbefdfbd0ef7"
      },
      "downloads": -1,
      "filename": "logical-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d976f707a163ae211e91cf3a7f055e38",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7830,
      "upload_time": "2022-05-18T00:30:39",
      "upload_time_iso_8601": "2022-05-18T00:30:39.708636Z",
      "url": "https://files.pythonhosted.org/packages/45/a8/32a0e7a7e7d7958a74f4ab78d9e880569d71397e77d331d2b894bd836f5b/logical-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc651e505e9c1694091cd4990fbc7bd0b2340b13b00f43cbe26e0ca70ef56acd",
        "md5": "8c68ed2b4d58147e0ef15a0f7868651d",
        "sha256": "2cd5875f00d6524e9cad74e0310ba2a119723c019854a41b4b74a923a9ffc65f"
      },
      "downloads": -1,
      "filename": "logical-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8c68ed2b4d58147e0ef15a0f7868651d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8818,
      "upload_time": "2022-05-18T00:30:41",
      "upload_time_iso_8601": "2022-05-18T00:30:41.823217Z",
      "url": "https://files.pythonhosted.org/packages/dc/65/1e505e9c1694091cd4990fbc7bd0b2340b13b00f43cbe26e0ca70ef56acd/logical-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}