{
  "info": {
    "author": "Milad Rastian",
    "author_email": "eslashmili _at_ gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django Jalali\n=============\n\nThis module gives you a DateField same as Djangoâ€™s DateField but you can\nget and query data based on Jalali Date\n\nStatus\n------\n\n.. image:: https://travis-ci.org/slashmili/django-jalali.svg?branch=master\n\n.. image:: https://img.shields.io/pypi/v/django_jalali.svg\n   :target: https://pypi.python.org/pypi/django_jalali\n\n.. image:: https://img.shields.io/pypi/dm/django_jalali.svg\n\n\nDependencies\n------------\n\n-  jdatetime\n-  Django\n\n\nInstall\n-------\n``pip install django_jalali``\n\nUsage\n-----\n\n1. Run :\n\n.. code:: bash\n\n  $ django-admin.py startproject jalali_test\n\n2. Start your app :\n\n.. code:: bash\n\n  $ python manage.py startapp foo\n\n3. Edit settings.py and add django_jalali and your foo to your INSTALLED_APPS (also config DATABASES setting)\n\n    django_jalali should be added **before** your apps in order to work properly\n\n4. Edit foo/models.py\n\n.. code:: python\n\n    from django.db import models\n    from django_jalali.db import models as jmodels\n\n    class Bar(models.Model):\n        objects = jmodels.jManager()\n        name =  models.CharField(max_length=200)\n        date =  jmodels.jDateField()\n        def __str__(self):\n            return \"%s, %s\"%(self.name, self.date)\n    class BarTime(models.Model):\n        objects = jmodels.jManager()\n        name =  models.CharField(max_length=200)\n        datetime = jmodels.jDateTimeField()\n        def __str__(self):\n            return \"%s, %s\" %(self.name, self.datetime)\n\n5. Run\n\n.. code:: bash\n\n    $ python manage.py syncdb\n\n6. Test it\n\n.. code:: shell\n\n    $ python manage.py shell\n    Python 2.6.6 (r266:84292, Sep 15 2010, 15:52:39)\n    [GCC 4.4.5] on linux2\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    (InteractiveConsole)\n    >>> from foo.models import Bar\n    >>> import jdatetime\n    >>> today = jdatetime.date(1390, 5, 12)\n    >>> mybar = Bar(name=\"foo\", date=today)\n    >>> mybar.save()\n    >>> mybar.date\n    jdatetime.date(1390, 5, 12)\n    >>> Bar.objects.filter(date=today)\n    [<Bar: foo, 1390-05-12>]\n    >>> Bar.objects.filter(date__gte=\"1390-5-12\")\n    [<Bar: foo, 1390-05-12>]\n    >>> Bar.objects.filter(date='1363-8-01')\n    []\n    >>> from foo.models import BarTime\n    >>> BarTime(name=\"Bar Time now\", datetime=jdatetime.datetime(1380,8,2,12,12,12)).save()\n    >>> BarTime.objects.filter(datetime__lt= jdatetime.datetime(1380,8,2,12,12,12 ))\n    []\n    >>> BarTime.objects.filter(datetime__lte= jdatetime.datetime(1380,8,2,12,12,12 ))\n    [<BarTime: Bar Time now, 1380-08-0212:12:12>]\n    >>> BarTime.objects.filter(datetime__gt='1380-08-02')\n    [<BarTime: Bar Time now, 1380-08-0212:12:12>]\n    >>> BarTime.objects.filter(datetime__gt=d)\n    []\n    >>> BarTime.objects.filter(datetime__year=1380)\n    [<BarTime: Bar Time now, 1380-08-0212:12:12>]\n\nUsing Templatetags\n------------------\n\n1. You can use `jformat` filter to format your dates in templates:\n\n.. code:: python\n\n    {% load jformat %}\n    {{ my_date|jformat }} {# default formatting #}\n    {{ my_date|jformat:\"%A %d %B %Y %H:%M\" }} {# specific formatting #}\n\nAdmin Interface\n---------------\n\n\n1. Create foo/admin.py\n\n.. code:: python\n\n    from foo.models import Bar,BarTime\n    from django.contrib import admin\n\n    #You need to import this for adding filter in admin interface\n    #However it works for django <= 1.7. Read more https://goo.gl/FxLrbQ\n    import django_jalali.admin.filterspecs\n\n    #you need import this for adding jalali calander widget\n    import django_jalali.admin as jadmin\n\n    class BarAdmin(admin.ModelAdmin):\n        list_filter = ['date']\n\n    admin.site.register(Bar, BarAdmin)\n\n    class BarTimeAdmin(admin.ModelAdmin):\n        list_filter = ['datetime']\n\n    admin.site.register(BarTime, BarTimeAdmin)\n\n2. Config admin interface and fire up your django and enjoy using jalali date !",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://github.com/slashmili/django-jalali/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/slashmili/django-jalali",
    "keywords": "django jalali",
    "license": "Python Software Foundation License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-jalali",
    "package_url": "https://pypi.org/project/django-jalali/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-jalali/",
    "project_urls": {
      "Download": "http://github.com/slashmili/django-jalali/tarball/master",
      "Homepage": "http://github.com/slashmili/django-jalali"
    },
    "release_url": "https://pypi.org/project/django-jalali/2.3.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Jalali Date support for Django model and admin interface",
    "version": "2.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15926385,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6808a4c9fc90fe61d76697da4f1f69322b8a0bc74af18959c9f636507b26309f",
        "md5": "40abfb03f4945c993b7881bf7005d90b",
        "sha256": "8c0951b5a0930d59abb1282c39b47268ae9a62b167137f672921a300662bf0b1"
      },
      "downloads": -1,
      "filename": "django-jalali-2.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "40abfb03f4945c993b7881bf7005d90b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34514,
      "upload_time": "2016-02-14T11:27:36",
      "upload_time_iso_8601": "2016-02-14T11:27:36.967313Z",
      "url": "https://files.pythonhosted.org/packages/68/08/a4c9fc90fe61d76697da4f1f69322b8a0bc74af18959c9f636507b26309f/django-jalali-2.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}