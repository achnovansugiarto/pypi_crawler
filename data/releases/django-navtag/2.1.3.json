{
  "info": {
    "author": "Chris Beaven",
    "author_email": "smileychris@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "``{% nav %}`` tag\n=================\n\nA simple Django template tag to handle navigation item selection.\n\n.. image:: https://secure.travis-ci.org/SmileyChris/django-navtag.png?branch=master\n   :target: http://travis-ci.org/SmileyChris/django-navtag\n\nExample\n-------\n\nAdd the app to your ``INSTALLED_APPS`` setting::\n\n    INSTALLED_APPS = (\n        # ...\n        'django_navtag',\n    )\n\nGive your base template a navigation block something like this::\n\n    {% load navtag %}\n\n    {% block nav %}\n    {% nav text ' class=\"selected\"' %}\n    <ul class=\"nav\">\n        <li{{ nav.home }}><a href=\"/\">Home</a></li>\n        <li{{ nav.about }}><a href=\"/about/\">About</a></li>\n    </ul>\n    {% endblock %}\n\nIn your templates, extend the base and set the navigation location::\n\n    {% extends \"base.html\" %}\n\n    {% block nav %}\n    {% nav \"home\" %}\n    {{ block.super }}\n    {% endblock %}\n\n.. note::\n    This works for multiple levels of template inheritance, due to the fact\n    that only the first ``{% nav %}`` call found will change the ``nav``\n    context variable.\n\n\nHierarchical navigation\n-----------------------\n\nTo create a sub-menu you can check against, simply dot-separate the item::\n\n    {% nav \"about_menu.info\" %}\n\nThis will be pass for both ``{% if nav.about_menu %}`` and\n``{% if nav.about_menu.info %}``.\n\n\nUsing a different context variable\n----------------------------------\n\nBy default, this tag creates a ``nav`` context variable. To use an alternate\ncontext variable name, call ``{% nav [item] for [var_name] %}``::\n\n    {% block nav %}\n    {% nav \"home\" for sidenav %}\n    {{ block.super }}\n    {% endblock %}\n\n\nSetting the text output by the nav variable\n-------------------------------------------\n\nAs shown in the initial example, you can set the text return value of the\n``nav`` context variable. Use the format ``{% nav text [content] %}``. For\nexample::\n\n    {% nav text \"active\" %}\n    <ul>\n    <li class=\"{{ nav.home }}\">Home</li>\n    <li class=\"{{ nav.contact }}\">Contact</li>\n    </ul>\n\nAlternately, you can use boolean comparison of the context variable rather than\ntext value::\n\n    <section{% if nav.home %} class=\"wide\"{% endif %}>\n\nIf using a different context variable name, use the format\n``{% nav text [content] for [var_name] %}``.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SmileyChris/django-navtag",
    "keywords": "django,templates",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-navtag",
    "package_url": "https://pypi.org/project/django-navtag/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-navtag/",
    "project_urls": {
      "Homepage": "https://github.com/SmileyChris/django-navtag"
    },
    "release_url": "https://pypi.org/project/django-navtag/2.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple Django navigation template tag",
    "version": "2.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10034258,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06669d2e9a63b7a6384261042b9f784c8d2213a1edb62548b913b93981e9a548",
        "md5": "0ec200d8c85c96cc7b5e84c3daaaa073",
        "sha256": "22976b29d7757f8d67c162f5b86baeeafbbf765bcb466862427f0d21b709acc2"
      },
      "downloads": -1,
      "filename": "django_navtag-2.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ec200d8c85c96cc7b5e84c3daaaa073",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10891,
      "upload_time": "2018-04-19T21:52:07",
      "upload_time_iso_8601": "2018-04-19T21:52:07.272767Z",
      "url": "https://files.pythonhosted.org/packages/06/66/9d2e9a63b7a6384261042b9f784c8d2213a1edb62548b913b93981e9a548/django_navtag-2.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "164b174c0232f03f84e4de67979b179caf76f0eeb8dd4717ee54906c2060f814",
        "md5": "6fe6e7c5721d0cd66114271b488f159f",
        "sha256": "b188ddb696a1212f568ad53b436a5762c6a294dd052a14ecb73fdcfcfc6d6bb8"
      },
      "downloads": -1,
      "filename": "django-navtag-2.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6fe6e7c5721d0cd66114271b488f159f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7503,
      "upload_time": "2018-04-19T21:52:05",
      "upload_time_iso_8601": "2018-04-19T21:52:05.489922Z",
      "url": "https://files.pythonhosted.org/packages/16/4b/174c0232f03f84e4de67979b179caf76f0eeb8dd4717ee54906c2060f814/django-navtag-2.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}