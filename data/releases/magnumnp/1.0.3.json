{
  "info": {
    "author": "Florian Bruckner",
    "author_email": "florian.bruckner@univie.ac.at",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "magnum.np\n=========\n\n[![Documentation Status](https://readthedocs.com/projects/magnumnp-magnumnp/badge/?version=latest&token=14bfc008bc74536d868c875c61777aea0733cb782c08690a29aecf5761e21f1f)](https://magnumnp-magnumnp.readthedocs-hosted.com/en/latest/?badge=latest)\n\nmagnum.np is a Python library for the solution of micromagnetic problems with the finite-difference method. It implements state-of-the-art algorithms and is based on [pytorch](http://www.pytorch.org/), which allows to seamlessly run code either on GPU or on CPU. Simulation scripts are written in Python which leads to very readable yet flexible code. Due to [pytorch](http://www.pytorch.org/) integration, extensive postprocessing can be done directly in the simulations scripts. Furthermore [pytorch](http://www.paraview.org/)'s autograd feature makes it possible to solve inverse problems without significant modifications of the code. This manual is meant to give you both a quick start and a reference to magnum.np.\n\n\nFeatures\n--------\n* Explicit / Implicit time-integration of the Landau-Lifshitz-Gilbert Equation\n* Fast FFT Demagnetization-field computation optimized for small memory footprint\n* Fast FFT Oersted-field optimized for small memory footprint\n* Arbitrary Material Parameters variing in space and time\n* Spin-torque model by Zhang and Li, Slonczewski\n* Antiferromagnetic coupling layers (RKKY)\n* Dzyaloshinskii-Moriya interaction (interface, bulk, D2d)\n* String method for energy barrier computations\n* Sophisticated domain handling, e.g. for spatially varying material parameters\n* Seemingless VTK import / export via [pyvista](https://docs.pyvista.org/)\n* Inverse Problems via [pytorch](http://www.paraview.org/)'s autograd feature\n\n\nExample\n-------\nThe following demo code shows the solution of the MuMag Standard Problem #5 and can be found in the demos directory:\n\n```python\nfrom magnumnp import *\nimport torch\n\nTimer.enable()\n\n# initialize state\nn  = (40, 40, 1)\ndx = (2.5e-9, 2.5e-9, 10e-9)\nmesh = Mesh(n, dx)\n\nstate = State(mesh)\nstate.material = {\n    \"Ms\": 8e5,\n    \"A\": 1.3e-11,\n    \"alpha\": 0.1,\n    \"xi\": 0.05,\n    \"b\": 72.17e-12\n    }\n\n# initialize magnetization that relaxes into s-state\nstate.m = state.Constant([0,0,0])\nstate.m[:20,:,:,1] = -1.\nstate.m[20:,:,:,1] = 1.\nstate.m[20,20,:,1] = 0.\nstate.m[20,20,:,2] = 1.\n\nstate.j = state.Tensor([1e12, 0, 0])\n\n# initialize field terms\ndemag    = DemagField()\nexchange = ExchangeField()\ntorque   = SpinTorqueZhangLi()\n\n# initialize sstate\nllg = LLGSolver([demag, exchange])\nllg.relax(state)\nwrite_vti(state.m, \"data/m0.vti\", state)\n\n# perform integration with spin torque\nllg = LLGSolver([demag, exchange, torque])\nlogger = ScalarLogger(\"data/m.dat\", ['t', 'm'])\nwhile state.t < 5e-9:\n    llg.step(state, 1e-10)\n    logger << state\n\nTimer.print_report()\n```\n\nDocumentation\n-------------\nThe documentation is located in the doc directory and can be built using [sphinx](https://www.sphinx-doc.org).\nFor example the following commands build an HTML documentation of the actual source code.\n```\ncd doc\nmake html\n```\n\nAlternatively, the latest version of the documentation is always available on [https://magnumnp-magnumnp.readthedocs-hosted.com/en/latest/](https://magnumnp-magnumnp.readthedocs-hosted.com/en/latest/)\n\n\nCitation\n--------\nIf you use magnum.np in your work or publication, please cite the following reference:\n\n[1] Bruckner, Florian, et al. \"magnum.np -- A pytorch based GPU enhanced Finite Difference Micromagnetic Simulation Framework for High Level Development and Inverse Design\", to be published (2023).\n\n\nContributing\n------------\nContributions are gratefully accepted.\nThe source code is hosted on [www.gitlab.com/magnum.np/magnum.np](www.gitlab.com/magnum.np/magnum.np).\nIf you have any issues or question, just open an issue via gitlab.com.\nTo contribute code, fork our repository on gitlab.com and create a corresponding merge request.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://gitlab.com/magnum.np/magnum.np",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magnumnp",
    "package_url": "https://pypi.org/project/magnumnp/",
    "platform": null,
    "project_url": "https://pypi.org/project/magnumnp/",
    "project_urls": {
      "Changelog": "https://gitlab.com/magnum.np/magnum.np/blob/main/CHANGELOG",
      "Documentation": "https://magnumnp-magnumnp.readthedocs-hosted.com/en/latest/",
      "Homepage": "http://gitlab.com/magnum.np/magnum.np"
    },
    "release_url": "https://pypi.org/project/magnumnp/1.0.3/",
    "requires_dist": [
      "torch",
      "numpy",
      "scipy",
      "setproctitle",
      "pyvista",
      "xitorch"
    ],
    "requires_python": "",
    "summary": "magnum.np finite-difference package for the solution of micromagnetic problems",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17068426,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b96da93df48cac39ad63daad1de5db90112fbbbb941c765ba02b13d49bac247",
        "md5": "b7260d9e09338ad8bb2425fed36cf3f6",
        "sha256": "a8a1eade44e38a82faba413f6685863dccac3b542f743b5acb1700847e0526ce"
      },
      "downloads": -1,
      "filename": "magnumnp-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7260d9e09338ad8bb2425fed36cf3f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 75014,
      "upload_time": "2023-01-23T12:05:49",
      "upload_time_iso_8601": "2023-01-23T12:05:49.703574Z",
      "url": "https://files.pythonhosted.org/packages/1b/96/da93df48cac39ad63daad1de5db90112fbbbb941c765ba02b13d49bac247/magnumnp-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63b94230e940b5bf06bdf0bdfce916ebff42b0997b6816feef3b94405f606df9",
        "md5": "0814e144906418abd394d50e1d84ca1c",
        "sha256": "6cf637b4f22a0d59f4c3fcb0301cd68efc4857d59ae4c63e54e43cbb0684f68b"
      },
      "downloads": -1,
      "filename": "magnumnp-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0814e144906418abd394d50e1d84ca1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 52987,
      "upload_time": "2023-01-23T12:05:51",
      "upload_time_iso_8601": "2023-01-23T12:05:51.356853Z",
      "url": "https://files.pythonhosted.org/packages/63/b9/4230e940b5bf06bdf0bdfce916ebff42b0997b6816feef3b94405f606df9/magnumnp-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}