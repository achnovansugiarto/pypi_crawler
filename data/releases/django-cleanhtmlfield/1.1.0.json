{
  "info": {
    "author": "Christian Kreuzberger",
    "author_email": "ckreuzberger@anexia-it.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Django CleanHtmlField\n\n[![build-and-test actions status](https://github.com/anexia-it/django-cleanhtmlfield/workflows/Module tests/badge.svg)](https://github.com/anexia-it/django-cleanhtmlfield/actions)\n\nDjango CleanHtmlField is a simple Django application (supporting Django\n2.2, 3.0 and 3.1) that defines an `HTMLField` that automatically\nremoves potentially malicious content. This app should work with Python\n3.5+.\n\nFor instance, if you allow the user to freely input HTML Content, and\nthe user decides to inject a JavaScript snippet:\n\n```html\n<h1>Hello Friend</h1>\n<script type=\"text/javascript\">\n    steal_all_passwords();\n</script>\n<p>This is for you!</p>\n```\n\n`HTMLField` will filter this to\n\n```html\n<h1>Hello Friend</h1>\n<p>This is for you!</p>\n```\n\n## Quick start\n\n1.  Download and install using `pip install` from [PyPi](https://pypi.python.org/pypi/django-cleanhtmlfield/):\n\n```bash\npip install django-cleanhtmlfield\n```\n\n2.  Create a field `HTMLField(strip_unsafe=True)` in your model:\n\n```python\nfrom django.db import models\nfrom django_cleanhtmlfield.fields import HTMLField\n\n\nclass MyModel(models.Model)\n    some_content = HTMLField(strip_unsafe=True)\n```\n\n3.  Don't forget to create and run migrations for changes on Django\n    models, e.g.:\n\n\n```bash\npython manage.py makemigrations\npython manage.py migrate\n```\n\n## Requirements\n\nFor HTML content to be parsed and processed we depend on\n`BeautifulSoup4` (this is installed as a dependency). As this is a\nDjango app, it obviously requires `Django` (though we expect this to be\nalready installed).\n\nOptional: If you want a WYSIWYG Interface in your Admin Panel (or any\nother Django Form), you need the `django-ckeditor` package.\n\n![alt text](docs/ckeditor-wysiwyg.png \"CKEditor\")\n\n\n## Field options\n\n* `strip_unsafe` (Default: `False`) needs to be set to `True` to enable stripping of unsafe HTML content\n* `widget_form_class` (Default: `None`) - allows overwriting the css form class for the widget (e.g., if you want to use `django-ckeditor`)\n\n## Configuration options\n\nThe following Django Settings are available (see below for a full\nexample)\n\n  - `ACCEPTABLE_ELEMENTS` - tuple that contains all allowed HTML tags\n    (e.g., `'a', 'span', 'p', 'div', ...`)\n  - `ACCEPTABLE_ATTRIBUTES` - tuple that contains all allowed HTMl\n    attributes (e.g., `'alt', 'style', 'target', 'title',...`)\n  - `ACCEPTABLE_STYLES` - tuple that contains all allowed CSS styles\n    (e.g., `'background-color', 'border-color', 'font-size', ...`)\n  - `REMOVE_WITH_CONTENT` - tuple that contains potentially malicious\n    HTML tags that will automatically be removed (e.g., `'script',\n    'object', ...`)\n  - `PRESERVE_STYLES_WHITESPACE` - optional boolean that can be used\n    to preserve the whitespace within styles (e.g., `'padding: 9px;'`\n    stays `'padding: 9px;'`) - the default behaviour strips the\n    whitespaces so (e.g., `'padding: 9px;'` becomes `'padding:9px;'`)\n\nExample:\n\n```python\n\nACCEPTABLE_ELEMENTS = (\n    'a', 'abbr', 'acronym', 'address', 'area', 'aria-label', 'b', 'big',\n    'blockquote', 'br', 'button', 'caption', 'center', 'cite', 'code', 'col',\n    'colgroup', 'dd', 'del', 'dfn', 'dir', 'div', 'dl', 'dt', 'em',\n    'font', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img',\n    'ins', 'kbd', 'label', 'legend', 'li', 'map', 'menu', 'ol',\n    'p', 'pre', 'q', 's', 'samp', 'small', 'span', 'strike',\n    'strong', 'sub', 'sup', 'table', 'tbody', 'td', 'tfoot', 'th',\n    'thead', 'tr', 'tt', 'u', 'ul', 'var', 'iframe', 'section', 'article',\n)\n\nACCEPTABLE_ATTRIBUTES = (\n    'abbr', 'accept', 'accesskey',\n    'action', 'align', 'alt', 'axis', 'border', 'cellpadding', 'cellspacing',\n    'char', 'charoff', 'charset', 'checked', 'cite', 'class', 'clear', 'cols',\n    'colspan', 'color', 'compact', 'coords', 'data-mlang', 'data-equation', 'datetime', 'dir',\n    'enctype', 'for', 'headers', 'height', 'href', 'hreflang', 'hspace',\n    'id', 'ismap', 'label', 'lang', 'longdesc', 'maxlength', 'method',\n    'multiple', 'name', 'nohref', 'noshade', 'nowrap', 'prompt',\n    'rel', 'rev', 'rows', 'rowspan', 'role', 'rules', 'scope', 'shape', 'size', 'style',\n    'span', 'src', 'start', 'summary', 'tabindex', 'target', 'title', 'type',\n    'usemap', 'valign', 'value', 'vspace', 'width',\n)\n\nACCEPTABLE_STYLES = (\n    'background-color', 'background', 'background-image', 'background-position', 'background-size', 'background-repeat',\n    'background-attachment', 'background-origin', 'background-clip',\n    'font-family', 'font-size', 'font-weight', 'font-style', 'color',\n    'width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'line-height',\n    'text-decoration', 'text-transform', 'text-align', 'border', 'border-style', 'border-width',\n    'border-top', 'border-bottom', 'border-left', 'border-right', 'border-top-style',\n    'border-bottom-style', 'border-left-style', 'border-right-style', 'border-top-width',\n    'border-bottom-width', 'border-left-width', 'border-right-width',\n    'border-color',\n    'border-top-color', 'border-bottom-color', 'border-left-color', 'border-spacing', 'border-collapse',\n    'border-right-color',\n    'border-radius',\n    'vertical-align', 'clear', 'float',\n    'margin', 'margin-left', 'margin-right', 'margin-top', 'margin-bottom',\n    'outline',\n    'padding', 'padding-left', 'padding-right', 'padding-top', 'padding-bottom',\n\n)\n\nREMOVE_WITH_CONTENT = ('script', 'object', 'embed', 'style', 'form', )\n\nPRESERVE_STYLES_WHITESPACE = False\n```\n\n# Compatibility with Django REST Framework\n\nIf you are using Django Rest Framework you need to add the following\ncode to register a serializer/field handler:\n\n```python\nfrom django.utils.translation import ugettext_lazy as _\n\nfrom rest_framework import fields\nfrom rest_framework.serializers import ModelSerializer\n\nfrom django_cleanhtmlfield.fields import HTMLField\nfrom django_cleanhtmlfield.helpers import clean_html\n\nclass RestHtmlField(fields.CharField):\n    default_error_messages = {\n        'invalid': _('\"{input}\" is not a valid html.')\n    }\n    default_empty_html = False\n    initial = False\n\n    def __init__(self, **kwargs):\n        super(RestHtmlField, self).__init__(**kwargs)\n\n    def to_internal_value(self, data):\n        return clean_html(data, strip_unsafe=True)\n\n\nModelSerializer.serializer_field_mapping[HTMLField] = RestHtmlField\n```\n\n## Compatibility Matrix\n\nThis library should be compatible with the latest Django and Django Rest Framework Versions. For reference, here is\na matrix showing the guaranteed and tested compatibility.\n\ndjango-cleanhtmlfield Version | Django Versions | Django Rest Framework Versions | Python |\n--------------------------------- | --------------- | ------------------------------ | ------ |\n1.0 | 2.2, 3.0, 3.1 | 3.6 - 3.11 | 3.5 - 3.8\n\n# License\n\n[MIT License](LICENSE)\n\n# Development and Tests\n\nThe test app is located in the `tests` subfolder.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anexia-it/django-cleanhtmlfield",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cleanhtmlfield",
    "package_url": "https://pypi.org/project/django-cleanhtmlfield/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cleanhtmlfield/",
    "project_urls": {
      "Homepage": "https://github.com/anexia-it/django-cleanhtmlfield"
    },
    "release_url": "https://pypi.org/project/django-cleanhtmlfield/1.1.0/",
    "requires_dist": [
      "beautifulsoup4 (<5,>=4.6)"
    ],
    "requires_python": "",
    "summary": "A simple Django app that will give you a Cleaned HTML Field.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15484414,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "965b9978f1727f011b24e470d29770859cf1d9745878ea751be411ebd49f51d3",
        "md5": "971de17c6569d4a160b98ed2a1ac4fdd",
        "sha256": "284a9438d9b9b08b042ac05eafece6a80566c59b65b716b52dadbaebb044717f"
      },
      "downloads": -1,
      "filename": "django_cleanhtmlfield-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "971de17c6569d4a160b98ed2a1ac4fdd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8135,
      "upload_time": "2021-03-05T09:44:45",
      "upload_time_iso_8601": "2021-03-05T09:44:45.747801Z",
      "url": "https://files.pythonhosted.org/packages/96/5b/9978f1727f011b24e470d29770859cf1d9745878ea751be411ebd49f51d3/django_cleanhtmlfield-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b59d31dfc62d7b4b5126c712f8eeaecffaa0ddfdeca95aa8de8054dfbbccf559",
        "md5": "5df95aa8c47d1765d260ba372a637206",
        "sha256": "ab6226fe2153350d8d8b031b0eb118c3bcfba5320d716546fd566d823d12814f"
      },
      "downloads": -1,
      "filename": "django-cleanhtmlfield-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5df95aa8c47d1765d260ba372a637206",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 79147,
      "upload_time": "2021-03-05T09:44:46",
      "upload_time_iso_8601": "2021-03-05T09:44:46.789222Z",
      "url": "https://files.pythonhosted.org/packages/b5/9d/31dfc62d7b4b5126c712f8eeaecffaa0ddfdeca95aa8de8054dfbbccf559/django-cleanhtmlfield-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}