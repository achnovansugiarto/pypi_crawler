{
  "info": {
    "author": "Christian Kreuzberger",
    "author_email": "ckreuzberger@anexia-it.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=====================\nDjango CleanHtmlField\n=====================\n\n.. image:: https://travis-ci.org/anexia-it/django-cleanhtmlfield.svg?branch=master\n    :target: https://travis-ci.org/anexia-it/django-cleanhtmlfield\n\n\nDjango CleanHtmlField is a simple Django application (supporting Django 1.8, 1.11, 2.0 and 2.1) that defines an ``HTMLField`` that automatically removes potentially malicious content.\nThis app should work with Python 2.7+ and Python3.4+.\n\nFor instance, if you allow the user to freely input HTML Content, and the user decides to inject a JavaScript snippet:\n\n.. code-block:: html\n\n    <h1>Hello Friend</h1>\n    <script type=\"text/javascript\">\n        steal_all_passwords();\n    </script>\n    <p>This is for you!</p>\n\n\n``HTMLField`` will filter this to\n\n.. code-block:: html\n\n    <h1>Hello Friend</h1>\n    <p>This is for you!</p>\n\nQuick start\n-----------\n\n1. Download and install using `pip install` from `PyPi <https://pypi.python.org/pypi/django-cleanhtmlfield/>`_:\n\n.. code-block:: bash\n\n    pip install django-cleanhtmlfield\n\n\n2. Create a field ``HTMLField(strip_unsafe=True)`` in your model:\n\n.. code-block:: python\n\n    from django.db import models\n    from django_cleanhtmlfield.fields import HTMLField\n\n\n    class MyModel(models.Model)\n        some_content = HTMLField(strip_unsafe=True)\n\n\n3. Don't forget to create and run migrations for changes on Django models, e.g.:\n\n.. code-block:: bash\n\n    python manage.py makemigrations\n    python manage.py migrate\n\nRequirements\n------------\n\nFor HTML content to be parsed and processed we depend on ``BeautifulSoup4`` (this is installed as a dependency). As this is a Django app, it obviously requires ``Django`` (though we expect this to be already installed).\n\nConfiguration options\n---------------------\n\nThe following Django Settings are available (see below for a full example)\n\n* ``ACCEPTABLE_ELEMENTS`` - tuple that contains all allowed HTML tags (e.g., ``'a', 'span', 'p', 'div', ... ``)\n* ``ACCEPTABLE_ATTRIBUTES`` - tuple that contains all allowed HTMl attributes (e.g., ``'alt', 'style', 'target', 'title',...``)\n* ``ACCEPTABLE_STYLES`` - tuple that contains all allowed CSS styles (e.g., ``'background-color', 'border-color', 'font-size', ...``)\n* ``REMOVE_WITH_CONTENT`` - tuple that contains potentially malicious HTML tags that will automatically be removed (e.g., ``'script', 'object', ...``)\n\nExample:\n\n.. code-block:: python\n\n    ACCEPTABLE_ELEMENTS = (\n        'a', 'abbr', 'acronym', 'address', 'area', 'aria-label', 'b', 'big',\n        'blockquote', 'br', 'button', 'caption', 'center', 'cite', 'code', 'col',\n        'colgroup', 'dd', 'del', 'dfn', 'dir', 'div', 'dl', 'dt', 'em',\n        'font', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img',\n        'ins', 'kbd', 'label', 'legend', 'li', 'map', 'menu', 'ol',\n        'p', 'pre', 'q', 's', 'samp', 'small', 'span', 'strike',\n        'strong', 'sub', 'sup', 'table', 'tbody', 'td', 'tfoot', 'th',\n        'thead', 'tr', 'tt', 'u', 'ul', 'var', 'iframe', 'section', 'article',\n    )\n\n    ACCEPTABLE_ATTRIBUTES = (\n        'abbr', 'accept', 'accesskey',\n        'action', 'align', 'alt', 'axis', 'border', 'cellpadding', 'cellspacing',\n        'char', 'charoff', 'charset', 'checked', 'cite', 'class', 'clear', 'cols',\n        'colspan', 'color', 'compact', 'coords', 'data-mlang', 'data-equation', 'datetime', 'dir',\n        'enctype', 'for', 'headers', 'height', 'href', 'hreflang', 'hspace',\n        'id', 'ismap', 'label', 'lang', 'longdesc', 'maxlength', 'method',\n        'multiple', 'name', 'nohref', 'noshade', 'nowrap', 'prompt',\n        'rel', 'rev', 'rows', 'rowspan', 'role', 'rules', 'scope', 'shape', 'size', 'style',\n        'span', 'src', 'start', 'summary', 'tabindex', 'target', 'title', 'type',\n        'usemap', 'valign', 'value', 'vspace', 'width',\n    )\n\n    ACCEPTABLE_STYLES = (\n        'background-color', 'background', 'background-image', 'background-position', 'background-size', 'background-repeat',\n        'background-attachment', 'background-origin', 'background-clip',\n        'font-family', 'font-size', 'font-weight', 'font-style', 'color',\n        'width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'line-height',\n        'text-decoration', 'text-transform', 'text-align', 'border', 'border-style', 'border-width',\n        'border-top', 'border-bottom', 'border-left', 'border-right', 'border-top-style',\n        'border-bottom-style', 'border-left-style', 'border-right-style', 'border-top-width',\n        'border-bottom-width', 'border-left-width', 'border-right-width',\n        'border-color',\n        'border-top-color', 'border-bottom-color', 'border-left-color', 'border-spacing', 'border-collapse',\n        'border-right-color',\n        'border-radius',\n        'vertical-align', 'clear', 'float',\n        'margin', 'margin-left', 'margin-right', 'margin-top', 'margin-bottom',\n        'outline',\n        'padding', 'padding-left', 'padding-right', 'padding-top', 'padding-bottom',\n\n    )\n\n    REMOVE_WITH_CONTENT = ('script', 'object', 'embed', 'style', 'form', )\n\n\nCompatibility with Django REST Framework\n----------------------------------------\n\nIf you are using Django Rest Framework you need to add the following code to register a serializer/field handler:\n\n.. code-block:: python\n\n    from django.utils.translation import ugettext_lazy as _\n\n    from rest_framework.serializers import ModelSerializer\n\n    from django_cleanhtmlfield.fields import HTMLField\n    from django_cleanhtmlfield.helpers import clean_html\n\n    class RestHtmlField(fields.CharField):\n        default_error_messages = {\n            'invalid': _('\"{input}\" is not a valid html.')\n        }\n        default_empty_html = False\n        initial = False\n\n        def __init__(self, **kwargs):\n            super(HtmlField, self).__init__(**kwargs)\n\n        def to_internal_value(self, data):\n            return clean_html(data, strip_unsafe=True)\n\n\n    ModelSerializer.serializer_field_mapping[HTMLField] = RestHtmlField\n\n\nChangelog\n---------\n\n1.0\n\n* Initial Release\n\n\nDevelopment and Tests\n---------------------\n\nThe test app is located in the ``tests`` subfolder. Please run tests against all Django and Python versions (e.g., using ``tox`` - see ``tox.ini``).\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anexia-it/django-cleanhtmlfield",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cleanhtmlfield",
    "package_url": "https://pypi.org/project/django-cleanhtmlfield/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cleanhtmlfield/",
    "project_urls": {
      "Homepage": "https://github.com/anexia-it/django-cleanhtmlfield"
    },
    "release_url": "https://pypi.org/project/django-cleanhtmlfield/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple Django app that will give you a Cleaned HTML Field.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15484414,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d0ab7a83043abf19e5ca4b8350a63379f93787476c22f352f0b86fa08395a37",
        "md5": "63c7b347a948f8a1e5e55c35fbab6018",
        "sha256": "267bf5ff9a5324a6d283570385f50f563f4ca684ee5db7ee2799070cf1901fb6"
      },
      "downloads": -1,
      "filename": "django-cleanhtmlfield-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "63c7b347a948f8a1e5e55c35fbab6018",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7173,
      "upload_time": "2018-11-19T11:05:39",
      "upload_time_iso_8601": "2018-11-19T11:05:39.225608Z",
      "url": "https://files.pythonhosted.org/packages/3d/0a/b7a83043abf19e5ca4b8350a63379f93787476c22f352f0b86fa08395a37/django-cleanhtmlfield-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}