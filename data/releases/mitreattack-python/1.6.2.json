{
  "info": {
    "author": "MITRE ATT&CK, MITRE Corporation",
    "author_email": "attack@mitre.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Security"
    ],
    "description": "# mitreattack-python\n\nThis repository contains a library of Python-based tools and utilities for working with ATT&CK content.\n\n- the [navlayers](https://github.com/mitre-attack/mitreattack-python/tree/master/mitreattack/navlayers) module\n  contains a collection of utilities for working with [ATT&CK Navigator](https://github.com/mitre-attack/attack-navigator) layers.\n- the [attackToExcel](https://github.com/mitre-attack/mitreattack-python/tree/master/mitreattack/attackToExcel) module\n  provides utilities for converting [ATT&CK STIX data](https://github.com/mitre/cti) to Excel spreadsheets.\n  It also provides access to [Pandas](https://pandas.pydata.org/) DataFrames representing the dataset for use in data analysis.\n- the [collections](https://github.com/mitre-attack/mitreattack-python/tree/master/mitreattack/collections) module\n  contains a set of utilities for working with [ATT&CK Collections and Collection Indexes](https://github.com/center-for-threat-informed-defense/attack-workbench-frontend/blob/master/docs/collections.md).\n- the [diffStix](https://github.com/mitre-attack/mitreattack-python/tree/master/mitreattack/diffStix) module\n  contains a script that generates changelogs between two versions of STIX bundles.\n\n## Requirements\n\n- [python3](https://www.python.org/)\n\n## Installation\n\nTo use this package, simply install the mitreattack-python library:\n\n```shell\npip install mitreattack-python\n```\n\n## Contributing\n\nTo contribute to this project, either through a bug report, feature request, or merge request,\nplease see the [Contributors guide](https://github.com/mitre-attack/mitreattack-python/docs/CONTRIBUTING.MD).\n\n## Usage\n\nSome simple examples are provided here to get you started on using this library.\nMore detailed information about the specific usage of the modules in this package,\nwith examples, can be found in the individual README files for each module.\n\n| module name | description | documentation |\n|:------------|:------------|:--------------|\n| navlayers | Provides a means by which to import, export, and manipulate [ATT&CK Navigator](https://github.com/mitre-attack/attack-navigator) layers. These layers can be read in from the filesystem or python dictionaries, combined and edited, and then exported to excel or SVG images as users desire. | Further documentation for the navlayers module can be found [here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/navlayers/README.md).|\n| attackToExcel | Provides functionalities for exporting the ATT&CK dataset into Excel Spreadsheets. It also provides programmatic access to the dataset as [Pandas](https://pandas.pydata.org/) DataFrames to enable data analysis using that library. | Further documentation for the attackToExcel module can be found [here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/attackToExcel/README.md).|\n| collections | Provides functionalities for converting and summarizing data in collections and collection indexes. It also provides a means by which to generate a collection from a raw stix bundle input. | Further documentation for the collections module can be found [here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/collections/README.md).|\n| diffStix | Create markdown, HTML, JSON and/or ATT&CK Navigator layers reporting on the changes between two versions of the STIX2 bundles representing the ATT&CK content. Run `diff_stix -h` for full usage instructions. | Further documentation for the diffStix module can be found [here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/diffStix/README.md).|\n\n### Usage Examples\n\n#### navlayers\n\n```python\nfrom mitreattack.navlayers import Layer\n\nexample_layer4_dict = {\n    \"name\": \"layer v4.3 example\",\n    \"versions\" : {\n        \"attack\": \"8\",\n        \"layer\" : \"4.3\",\n        \"navigator\": \"4.3\"\n    },\n    \"domain\": \"enterprise-attack\"\n}\n\nlayerA = Layer()                                  # Create a new layer object\nlayerA.from_dict(example_layer4_dict)             # Load layer data into existing layer object\nprint(layerA.to_dict())                           # Retrieve the loaded layer's data as a dictionary, and print it\n```\n\n```python\nfrom mitreattack.navlayers import Layer, ToSvg\n\nlay = Layer()\nlay.from_file(\"path/to/layer/example.json\")           # import a layer from the filesystem\n\nt = ToSvg(domain=lay.layer.domain, source='taxii')    # Use taxii server to get data for template\nt.to_svg(lay, filepath=\"example.svg\")           # render the layer to an SVG file\n```\n\nFurther documentation for the navlayers module can be found [here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/navlayers/README.md).\n\n#### attackToExcel\n\n```python\nimport mitreattack.attackToExcel.attackToExcel as attackToExcel\n\n# generate spreadsheets representing enterprise-attack v8.1\nattackToExcel.export(\"enterprise-attack\", \"v8.1\", \"/path/to/export/folder\")\n```\n\n```python\nimport mitreattack.attackToExcel.attackToExcel as attackToExcel\nimport mitreattack.attackToExcel.stixToDf as stixToDf\n\n# download and parse ATT&CK STIX data\nattackdata = attackToExcel.get_stix_data(\"enterprise-attack\")\n# get Pandas DataFrames for techniques, associated relationships, and citations\ntechniques_data = stixToDf.techniquesToDf(attackdata, \"enterprise-attack\") \n\n# show T1102 and sub-techniques of T1102\ntechniques_df = techniques_data[\"techniques\"]\nprint(techniques_df[techniques_df[\"ID\"].str.contains(\"T1102\")][\"name\"])\n```\n\nFurther documentation for the attackToExcel module can be found\n[here](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/attackToExcel/README.md).\n\n#### Command Line Tools\n\nSeveral command line tools have been included in this package.\nThey can be run immediately after installing the package, using the syntax described below.\n\n##### layerExporter_cli\n\nThis command line tool allows users to convert a [navigator](https://github.com/mitre-attack/attack-navigator)\nlayer file to either an svg image or excel file using the functionality provided by the navlayers module.\nDetails about the SVG configuration json mentioned below can be found in the\n[SVGConfig](https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/navlayers/README.md#svgconfig)\nentry within the navlayers module documentation.\n\n```commandline\nC:\\Users\\attack>layerExporter_cli -h\nusage: layerExporter_cli [-h] -m {svg,excel} [-s {taxii,local,remote}]\n                            [--resource RESOURCE] -o OUTPUT [OUTPUT ...]\n                            [-l LOAD_SETTINGS] [-d WIDTH HEIGHT]\n                            input [input ...]\n\nExport an ATT&CK Navigator layer as a svg image or excel file\n\npositional arguments:\n  input                 Path(s) to the file to export\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m {svg,excel}, --mode {svg,excel}\n                        The form to export the layers in\n  -s {taxii,local,remote}, --source {taxii,local,remote}\n                        What source to utilize when building the matrix\n  --resource RESOURCE   Path to the local resource if --source=local, or url\n                        of an ATT&CK Workbench instance if --source=remote\n  -o OUTPUT [OUTPUT ...], --output OUTPUT [OUTPUT ...]\n                        Path(s) to the exported svg/xlsx file\n  -l LOAD_SETTINGS, --load_settings LOAD_SETTINGS\n                        [SVG Only] Path to a SVG configuration json to use\n                        when rendering\n  -d WIDTH HEIGHT, --size WIDTH HEIGHT\n                        [SVG Only] X and Y size values (in inches) for SVG\n                        export (use -l for other settings)\n                        \nC:\\Users\\attack>layerExporter_cli -m svg -s taxii -l settings/config.json -o output/svg1.json output/svg2.json files/layer1.json files/layer2.json       \n```\n\n##### attackToExcel_cli\n\nThis command line tool allows users to generate excel spreadsheets representing the ATT&CK dataset.\n\n```commandline\nC:\\Users\\attack>attackToExcel_cli -h\nusage: attackToExcel_cli [-h]\n                         [-domain {enterprise-attack,mobile-attack,ics-attack}]\n                         [-version VERSION] [-output OUTPUT]\n\nDownload ATT&CK data from MITRE/CTI and convert it to excel spreadsheets\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -domain {enterprise-attack,mobile-attack,ics-attack}\n                        which domain of ATT&CK to convert\n  -version VERSION      which version of ATT&CK to convert. If omitted, builds\n                        the latest version\n  -output OUTPUT        output directory. If omitted writes to a subfolder of\n                        the current directory depending on the domain and\n                        version\n                        \nC:\\Users\\attack>attackToExcel_cli -domain ics-attack -version v8.1 -output exported_data\n```\n\n##### layerGenerator_cli\n\nThis command line tool allows users to generate [ATT&CK Navigator](https://github.com/mitre-attack/attack-navigator)\nlayer files from either a specific group, software, or mitigation. Alternatively, users can generate a layer file with a\nmapping to all associated groups, software, or mitigations across the techniques within ATT&CK.\n\n```commandline\nC:\\Users\\attack>layerGenerator_cli -h\nusage: layerGenerator_cli [-h]\n                             (--overview-type {group,software,mitigation,datasource} | --mapped-to MAPPED_TO | --batch-type {group,software,mitigation,datasource})\n                             [-o OUTPUT] [--domain {enterprise,mobile,ics}]\n                             [--source {taxii,local,remote}]\n                             [--resource RESOURCE]\n\nGenerate an ATT&CK Navigator layer\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --overview-type {group,software,mitigation,datasource}\n                        Output a layer file where the target type is\n                        summarized across the entire dataset.\n  --mapped-to MAPPED_TO\n                        Output layer file with techniques mapped to the given\n                        group, software, mitigation, or data component. Argument \n                        can be name, associated group/software, or ATT&CK ID.\n  --batch-type {group,software,mitigation,datasource}\n                        Output a collection of layer files to the specified\n                        folder, each one representing a different instance of\n                        the target type.\n  -o OUTPUT, --output OUTPUT\n                        Path to the output layer file/directory\n  --domain {enterprise,mobile,ics}\n                        Which domain to build off of\n  --source {taxii,local,remote}\n                        What source to utilize when building the layer files\n  --resource RESOURCE   Path to the local resource if --source=local, or url\n                        of an ATT&CK Workbench instance if --source=remote\n  \nC:\\Users\\attack>layerGenerator_cli --domain enterprise --source taxii --mapped-to S0065 --output generated_layer.json\nC:\\Users\\attack>layerGenerator_cli --domain mobile --source taxii --overview-type mitigation --output generated_layer2.json\nC:\\Users\\attack>layerGenerator_cli --domain ics --source taxii --batch-type software\nC:\\Users\\attack>layerGenerator_cli --domain enterprise --source taxii --overview-type datasource --output generated_layer3.json\n```\n\n##### IndexToMarkdown_cli\n\nThis command line tool allows users to transform an\n[ATT&CK collection index file](https://github.com/center-for-threat-informed-defense/attack-workbench-frontend/blob/master/docs/collections.md#collection-indexes)\ninto a [human-readable markdown file](https://github.com/mitre-attack/attack-stix-data/blob/master/index.md) that\ndocuments the contents of said collections.\n\n```commandline\nC:\\Users\\attack>indexToMarkdown_cli -h\nusage: index_to_markdown.py [-h] [-index INDEX] [-output OUTPUT]\n\nPrint a markdown string to std-out representing a collection index\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -i INDEX, --index INDEX    the collection index file to convert to markdown\n  -o output, --output OUTPUT  markdown output file\nC:\\Users\\attack>indexToMarkdown_cli --index C:\\Users\\attack\\examples\\index.json --output example.md\n```\n\n##### CollectionToIndex_cli\n\nThis command line tool allows users to transform\n[ATT&CK collections](https://github.com/center-for-threat-informed-defense/attack-workbench-frontend/blob/master/docs/collections.md#collections)\ninto an [ATT&CK collection index](https://github.com/center-for-threat-informed-defense/attack-workbench-frontend/blob/master/docs/collections.md#collection-indexes)\nthat summarizes the contents of the linked collections.\n\n```commandline\nC:\\Users\\attack>collectionToIndex_cli -h\nusage: collection_to_index.py [-h] [--output OUTPUT]\n                              (--files collection1 [collection2 ...] | --folders FOLDERS [FOLDERS ...])\n                              name description root_url\n\nCreate a collection index from a set of collections\n\npositional arguments:\n  name                  name of the collection index. If omitted a placeholder\n                        will be used\n  description           description of the collection index. If omitted a\n                        placeholder will be used\n  root_url              the root URL where the collections can be found.\n                        Specified collection paths will be appended to this\n                        for the collection URL\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --output OUTPUT        filename for the output collection index file\n  --files collection1 [collection2 ...]\n                        list of collections to include in the index\n  --folders FOLDERS [FOLDERS ...]\n                        folder of JSON files to treat as collections\nC:\\Users\\attack>collectionToIndex_cli test_index \"a layer created as a demo\" www.example.com --files C:\\Users\\attack\\examples\\collection.json --output C:\\Users\\attack\\examples\\index.json\n```\n\n##### StixToCollection_cli\n\nThis command line tool allows users to transform raw stix bundle files into versions featuring\n[collection](https://github.com/center-for-threat-informed-defense/attack-workbench-frontend/blob/master/docs/collections.md#collections) objects.\nIt is compatible with both STIX 2.0 and STIX 2.1 bundles.\n\n```commandline\nC:\\Users\\attack>stixToCollection_cli -h\nusage: stix_to_collection.py [-h] [--input INPUT] [--output OUTPUT]\n                             [--description DESCRIPTION]\n                             name version\n\nUpdate a STIX 2.0 or 2.1 bundle to include a collection object referencing the\ncontents of the bundle.\n\npositional arguments:\n  name                  the name for the generated collection object\n  version               the ATT&CK version for the generated collection object\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input INPUT          the input bundle file\n  --output OUTPUT        the output bundle file\n  --description DESCRIPTION\n                        description to use for the generated collection\n\nC:\\Users\\attack>stixToCollection \"2.0 demo bundle\" 9.1 --input C:\\Users\\bundles\\enterprise-bundle-2_0.json\nC:\\Users\\attack>stixToCollection \"2.1 demo bundle\" 9.1 --input C:\\Users\\bundles\\enterprise-bundle-2_1.json\n```\n\n## Related MITRE Work\n\n### CTI\n\n[Cyber Threat Intelligence repository](https://github.com/mitre/cti) of the ATT&CK catalog expressed in STIX 2.0 JSON.\nThis repository also contains [our USAGE document](https://github.com/mitre/cti/blob/master/USAGE.md) which includes\nadditional examples of accessing and parsing our dataset in Python.\n\n### ATT&CK\n\nATT&CK® is a curated knowledge base and model for cyber adversary behavior, reflecting the various phases of\nan adversary’s lifecycle, and the platforms they are known to target.\nATT&CK is useful for understanding security risk against known adversary behavior,\nfor planning security improvements, and verifying defenses work as expected.\n\n<https://attack.mitre.org>\n\n### STIX\n\nStructured Threat Information Expression (STIX<sup>™</sup>) is a language and serialization format used to exchange cyber threat intelligence (CTI).\n\nSTIX enables organizations to share CTI with one another in a consistent and machine-readable manner,\nallowing security communities to better understand what computer-based attacks they are most likely to\nsee and to anticipate and/or respond to those attacks faster and more effectively.\n\nSTIX is designed to improve many capabilities, such as collaborative threat analysis, automated threat exchange, automated detection and response, and more.\n\n<https://oasis-open.github.io/cti-documentation/>\n\n### ATT&CK scripts\n\nOne-off scripts and code examples you can use as inspiration for how to work with ATT&CK programmatically. Many of the functionalities found in the mitreattack-python package were originally posted on attack-scripts.\n\n<https://github.com/mitre-attack/attack-scripts>\n\n## Notice\n\nCopyright 2021 The MITRE Corporation\n\nApproved for Public Release; Distribution Unlimited. Case Number 19-0486.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   <http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis project makes use of ATT&CK®\n\n[ATT&CK Terms of Use](https://attack.mitre.org/resources/terms-of-use/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mitre-attack/mitreattack-python/",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "Jared Ondricek",
    "maintainer_email": "jondricek@mitre.org",
    "name": "mitreattack-python",
    "package_url": "https://pypi.org/project/mitreattack-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/mitreattack-python/",
    "project_urls": {
      "Homepage": "https://github.com/mitre-attack/mitreattack-python/"
    },
    "release_url": "https://pypi.org/project/mitreattack-python/1.6.2/",
    "requires_dist": [
      "colour",
      "drawSvg",
      "loguru",
      "Markdown",
      "numpy",
      "openpyxl",
      "pandas",
      "Pillow",
      "requests",
      "stix2",
      "stix2-elevator",
      "tabulate",
      "taxii2-client",
      "tqdm",
      "xlsxwriter"
    ],
    "requires_python": ">=3.6",
    "summary": "MITRE ATT&CK python library",
    "version": "1.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17275454,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c79b2fecac6ccb66b33bdaa2ee4a7ad61336c349f4279fc0f7626cd5471bafe6",
        "md5": "272243050a379e1f67594f0b67e3a72c",
        "sha256": "d720d80bfc3729de32a5210e56d384cddf5fa2d480ac1ed34ee51de22907010d"
      },
      "downloads": -1,
      "filename": "mitreattack_python-1.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "272243050a379e1f67594f0b67e3a72c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 510496,
      "upload_time": "2022-09-07T22:32:55",
      "upload_time_iso_8601": "2022-09-07T22:32:55.569909Z",
      "url": "https://files.pythonhosted.org/packages/c7/9b/2fecac6ccb66b33bdaa2ee4a7ad61336c349f4279fc0f7626cd5471bafe6/mitreattack_python-1.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c06491cdcd06471d239d23afac3a166a7fbcdfc2f6661cdbc4b09b98a8d0dbc8",
        "md5": "51e662dce5c326657b007eb3cf554f6b",
        "sha256": "095e76b45941f5e795055432f1d236f0e8445c07e95bda3256fbd43130a904a6"
      },
      "downloads": -1,
      "filename": "mitreattack-python-1.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "51e662dce5c326657b007eb3cf554f6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 499697,
      "upload_time": "2022-09-07T22:32:56",
      "upload_time_iso_8601": "2022-09-07T22:32:56.861155Z",
      "url": "https://files.pythonhosted.org/packages/c0/64/91cdcd06471d239d23afac3a166a7fbcdfc2f6661cdbc4b09b98a8d0dbc8/mitreattack-python-1.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}