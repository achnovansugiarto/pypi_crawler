{
  "info": {
    "author": "Maykin Media, Sergei Maertens",
    "author_email": "sergei@maykinmedia.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "======================\nDjango Label Templates\n======================\n\nA custom template loader for multi-site set-ups.\n\n\n.. image:: https://travis-ci.org/maykinmedia/django-label-loaders.svg?branch=master\n    :target: https://travis-ci.org/maykinmedia/django-label-loaders\n\n\n.. image:: https://codecov.io/github/maykinmedia/django-label-loaders/coverage.svg?branch=master\n    :target: https://codecov.io/github/maykinmedia/django-label-loaders?branch=master\n\n\n.. image:: https://coveralls.io/repos/maykinmedia/django-label-loaders/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/maykinmedia/django-label-loaders?branch=master\n\n\n.. image:: https://img.shields.io/pypi/v/django-label-templates.svg\n  :target: https://pypi.python.org/pypi/django-label-templates\n\n\nThis is intended for users of ``django.contrib.sites`` for multi-site cases\nwhere a different site can have different templates, not only a different\nstyling.\n\nThe custom template loaders will try to find a template for the currently\nactive site, and fall back on a generic template.\n\n\nInstallation\n============\n\nInstall with pip::\n\n    pip install django-label-templates\n\n\nConfiguration\n=============\n\nInstalled apps\n--------------\n\nMake sure that ``django.contrib.sites`` is in your ``INSTALLED_APPS``.\n\n\nSpecify template loaders\n------------------------\n\nYou also need to enable the loader in the settings, similar to Django's\ncached template loader. The loader takes an iterable (list or tuple) of\nloaders to find the templates. Example - and probably most used - set-up:\n\n\n.. code-block:: python\n\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            # APP_DIRS must be False if you specify the loaders yourself\n            'APP_DIRS': False,\n            'DIRS': [\n                os.path.join(PROJECT_DIR, 'templates'),\n            ],\n            'OPTIONS': {\n                'loaders': [\n                    ('label_templates.loaders.Loader', [\n                        'django.template.loaders.filesystem.Loader',\n                        'django.template.loaders.app_directories.Loader',\n                    ]),\n                ],\n            },\n        },\n    ]\n\nIf you wish, this template loader can also be wrapped in other loaders,\nlike ``django.template.loaders.cached.Loader``.\n\n\nConfigure the site labels\n-------------------------\n\nFor the final step, one extra custom settings is required: ``SITELABELS``.\n\n.. code-block:: python\n\n    # the import is safe and does NOT depend on django.conf.settings\n    from label_templates.sites import SiteLabels, SiteChoice\n\n    class SITELABELS(SiteLabels):\n        site = SiteChoice('example.com', site_id=1)\n        site2 = SiteChoice('example2.com', site_id=2)\n\n\nThis settings is used to look up the label-prefix for the templates. The site\nwith ``ID=1`` will resolve to a subfolder ``site/``, so to load the template\n``example.html``, the loader will try to find ``site/example.html`` first, and\nfailing that, will try to just load ``example.html``.\n\nFor the site with ``ID=2``, the prefix ``site2`` is used.\n\n.. note:: To find the matching site, the loader tries to get the label for the\n   ``SiteChoice`` based on ``django.contrib.sites.models.Site.name``, with a\n   fallback to ``domain``. So, for the first argument of ``SiteChoice``, it's\n   safest to enter the ``Site.name`` value.\n\n\nLimitations\n===========\n\nSince the ``{% extends %}`` tag uses the same loader configuration, you can not\nlet a label-specific template inherit from a generic template with the same\nname.\n\nA workaround is the following structure::\n\n    templates/\n    ├── mylabel/\n    |   └── base.html  # extends _base.html and overrides stuff\n    ├── _base.html\n    └── base.html  # extends _base.html, overrides nothing\n\n\nVersions supported\n==================\n\nThis library is tested against Django 1.8 and 1.9. The corresponding Python\nversions for the Django versions apply. Consult ``tox.ini`` for an up to date\nbuild matrix.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maykinmedia/django-label-templates",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-label-templates",
    "package_url": "https://pypi.org/project/django-label-templates/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-label-templates/",
    "project_urls": {
      "Homepage": "https://github.com/maykinmedia/django-label-templates"
    },
    "release_url": "https://pypi.org/project/django-label-templates/1.0.3/",
    "requires_dist": [
      "Django (>=1.8)",
      "django-choices"
    ],
    "requires_python": "",
    "summary": "Load templates from site labels if available",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3759032,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74b93806a528687888f10a2097ba55bea7e1611dad1394200a94dad6cb38b9cb",
        "md5": "5e8b6b2663cee4a97e53265f4b34b55c",
        "sha256": "99d43d9296d477e20ccd4f631ffdcd4b3ad189bc8e6fe72a12320592a6207a2d"
      },
      "downloads": -1,
      "filename": "django_label_templates-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5e8b6b2663cee4a97e53265f4b34b55c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7415,
      "upload_time": "2018-04-12T15:09:12",
      "upload_time_iso_8601": "2018-04-12T15:09:12.170833Z",
      "url": "https://files.pythonhosted.org/packages/74/b9/3806a528687888f10a2097ba55bea7e1611dad1394200a94dad6cb38b9cb/django_label_templates-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8a9a022375e4b2745c05bd2f869b09510bd806c9a580b5c3faa056eb726fddc",
        "md5": "22a6cfc6ecaad9e4b3b314a7eeb0aa2e",
        "sha256": "b1a2ee1dab1eadbf9a8ac0051e99b35f5e57c0f8e9579b04481344b3d966006e"
      },
      "downloads": -1,
      "filename": "django-label-templates-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "22a6cfc6ecaad9e4b3b314a7eeb0aa2e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5801,
      "upload_time": "2018-04-12T15:09:13",
      "upload_time_iso_8601": "2018-04-12T15:09:13.655621Z",
      "url": "https://files.pythonhosted.org/packages/f8/a9/a022375e4b2745c05bd2f869b09510bd806c9a580b5c3faa056eb726fddc/django-label-templates-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}