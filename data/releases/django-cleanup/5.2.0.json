{
  "info": {
    "author": "Ilya Shalyapin",
    "author_email": "ishalyapin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "Django Cleanup\n**************\n|Version| |Status| |License|\n\nFeatures\n========\nThe django-cleanup app automatically deletes files for :code:`FileField`, :code:`ImageField` and\nsubclasses. When a :code:`FileField`'s value is changed and the model is saved, the old file is\ndeleted. When a model that has a :code:`FileField` is deleted, the file is also deleted. A file that\nis set as the :code:`FileField`'s default value will not be deleted.\n\nCompatibility\n-------------\n- Django 2.2, 3.0, 3.1, 3.2 (`See Django Supported Versions <https://www.djangoproject.com/download/#supported-versions>`_)\n- Python 3.5+\n- Compatible with `sorl-thumbnail <https://github.com/jazzband/sorl-thumbnail>`_\n- Compatible with `easy-thumbnail <https://github.com/SmileyChris/easy-thumbnails>`_\n\nHow does it work?\n=================\nIn order to track changes of a :code:`FileField` and facilitate file deletions, django-cleanup\nconnects :code:`post_init`, :code:`pre_save`, :code:`post_save` and :code:`post_delete` signals to\nsignal handlers for each :code:`INSTALLED_APPS` model that has a :code:`FileField`. In order to tell\nwhether or not a :code:`FileField`'s value has changed a local cache of original values is kept on\nthe model instance. If a condition is detected that should result in a file deletion, a function to\ndelete the file is setup and inserted into the commit phase of the current transaction.\n\n**Warning! If you are using a database that does not support transactions you may lose files if a\ntransaction will rollback at the right instance. This outcome is mitigated by our use of\npost_save and post_delete signals, and by following the recommended configuration below. This\noutcome will still occur if there are signals registered after app initialization and there are\nexceptions when those signals are handled. In this case, the old file will be lost and the new file\nwill not be referenced in a model, though the new file will likely still exist on disk. If you are\nconcerned about this behavior you will need another solution for old file deletion in your project.**\n\nInstallation\n============\n::\n\n    pip install django-cleanup\n\n\nConfiguration\n=============\nAdd ``django_cleanup`` to the bottom of ``INSTALLED_APPS`` in ``settings.py``\n\n.. code-block:: py\n\n    INSTALLED_APPS = (\n        ...,\n        'django_cleanup.apps.CleanupConfig',\n    )\n\nThat is all, no other configuration is necessary.\n\nNote: Order of ``INSTALLED_APPS`` is important. To ensure that exceptions inside other apps' signal\nhandlers do not affect the integrity of file deletions within transactions, ``django_cleanup``\nshould be placed last in ``INSTALLED_APPS``.\n\nTroubleshooting\n===============\nIf you notice that ``django-cleanup`` is not removing files when expected, check that your models\nare being properly\n`loaded <https://docs.djangoproject.com/en/stable/ref/applications/#how-applications-are-loaded>`_:\n\n    You must define or import all models in your application's models.py or models/__init__.py.\n    Otherwise, the application registry may not be fully populated at this point, which could cause\n    the ORM to malfunction.\n\nIf your models are not loaded, ``django-cleanup`` will not be able to discover their\n``FileField``'s.\n\nYou can check if your ``Model`` is loaded by using\n\n.. code-block:: py\n\n    from django.apps import apps\n    apps.get_models()\n\nAdvanced\n========\nThis section contains additional functionality that can be used to interact with django-cleanup for\nspecial cases.\n\nSignals\n-------\nTo facilitate interactions with other django apps django-cleanup sends the following signals which\ncan be imported from :code:`django_cleanup.signals`:\n\n- :code:`cleanup_pre_delete`: just before a file is deleted. Passes a :code:`file` keyword argument.\n- :code:`cleanup_post_delete`: just after a file is deleted. Passes a :code:`file` keyword argument.\n\nSignals example for sorl.thumbnail:\n\n.. code-block:: py\n\n    from django_cleanup.signals import cleanup_pre_delete\n    from sorl.thumbnail import delete\n\n    def sorl_delete(**kwargs):\n        delete(kwargs['file'])\n\n    cleanup_pre_delete.connect(sorl_delete)\n\nRefresh the cache\n-----------------\nThere have been rare cases where the cache would need to be refreshed. To do so the\n:code:`django_cleanup.cleanup.refresh` method can be used:\n\n.. code-block:: py\n\n    from django_cleanup import cleanup\n\n    cleanup.refresh(model_instance)\n\nIgnore cleanup for a specific model\n-----------------------------------\nIgnore a model and do not perform cleanup when the model is deleted or its files change.\n\n.. code-block:: py\n\n    from django_cleanup import cleanup\n\n    @cleanup.ignore\n    class MyModel(models.Model):\n        image = models.FileField()\n\nHow to run tests\n================\nInstall, setup and use pyenv_ to install all the required versions of cPython\n(see the `tox.ini <https://github.com/un1t/django-cleanup/blob/master/tox.ini>`_).\n\nSetup pyenv_ to have all versions of python activated within your local django-cleanup repository.\nEnsuring that the python 3.8 that was installed is first priority.\n\nInstall tox_ on python 3.8 and run the :code:`tox` command from your local django-cleanup\nrepository.\n\nHow to write tests\n==================\nThis app requires the use of django.test.TransactionTestCase_ when writing tests.\n\nFor details on why this is required see `here\n<https://docs.djangoproject.com/en/stable/topics/db/transactions/#use-in-tests>`_:\n\n    Django's :code:`TestCase` class wraps each test in a transaction and rolls back that transaction\n    after each test, in order to provide test isolation. This means that no transaction is ever\n    actually committed, thus your :code:`on_commit()` callbacks will never be run. If you need to\n    test the results of an :code:`on_commit()` callback, use a :code:`TransactionTestCase` instead.\n\nLicense\n=======\ndjango-cleanup is free software under terms of the:\n\nMIT License\n\nCopyright (C) 2012 by Ilya Shalyapin, ishalyapin@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n.. _django.test.TransactionTestCase: https://docs.djangoproject.com/en/stable/topics/testing/tools/#django.test.TransactionTestCase\n.. _pyenv: https://github.com/pyenv/pyenv\n.. _tox: https://tox.readthedocs.io/en/latest/\n\n.. |Version| image:: https://img.shields.io/pypi/v/django-cleanup.svg\n   :target: https://pypi.python.org/pypi/django-cleanup/\n   :alt: PyPI Package\n.. |Status| image:: https://travis-ci.org/un1t/django-cleanup.svg?branch=master\n   :target: https://travis-ci.org/un1t/django-cleanup\n   :alt: Build Status\n.. |License| image:: https://img.shields.io/badge/license-MIT-maroon\n   :target: https://github.com/un1t/django-cleanup/blob/master/LICENSE\n   :alt: MIT License\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/un1t/django-cleanup/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/un1t/django-cleanup",
    "keywords": "django",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cleanup",
    "package_url": "https://pypi.org/project/django-cleanup/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cleanup/",
    "project_urls": {
      "Download": "https://github.com/un1t/django-cleanup/tarball/master",
      "Homepage": "https://github.com/un1t/django-cleanup"
    },
    "release_url": "https://pypi.org/project/django-cleanup/5.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Deletes old files.",
    "version": "5.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16812691,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfbe6b46f417ad79de9a8544f0553121c149eb8d26cd45ee2d30effa33d45d20",
        "md5": "82cdf5ba3f1eca04cc760d6159b4e613",
        "sha256": "193cf69de54b9fc0a0f4547edbb3a63bbe01728cb029f9f4b7912098cc1bced7"
      },
      "downloads": -1,
      "filename": "django_cleanup-5.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82cdf5ba3f1eca04cc760d6159b4e613",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9945,
      "upload_time": "2021-04-18T17:08:10",
      "upload_time_iso_8601": "2021-04-18T17:08:10.851851Z",
      "url": "https://files.pythonhosted.org/packages/cf/be/6b46f417ad79de9a8544f0553121c149eb8d26cd45ee2d30effa33d45d20/django_cleanup-5.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "648da42b156ba29a1f45a80bc763ea378827d51240a4fe1d0af3dfa2c75541f2",
        "md5": "f419847891b7e4638d7f5a8640900388",
        "sha256": "909d10ff574f5ce1a40fa63bd5c94c9ed866fd7ae770994c46cdf66c3db3e846"
      },
      "downloads": -1,
      "filename": "django-cleanup-5.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f419847891b7e4638d7f5a8640900388",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13213,
      "upload_time": "2021-04-18T17:08:12",
      "upload_time_iso_8601": "2021-04-18T17:08:12.344456Z",
      "url": "https://files.pythonhosted.org/packages/64/8d/a42b156ba29a1f45a80bc763ea378827d51240a4fe1d0af3dfa2c75541f2/django-cleanup-5.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}