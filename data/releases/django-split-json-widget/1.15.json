{
  "info": {
    "author": "Alexander Abbasov, django-split-json-widget",
    "author_email": "abbasovalex@{nospam}gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-split-json-widget\n===\n\nA widget that renders JSON data as separate editable inputs.\n\n## Installation\n\n```pip install django-split-json-widget```\nor\n```pip install git+https://github.com/abbasovalex/django-SplitJSONWidget-form.git```\n\n### Example №1\n\n#### forms.py\n\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_dict(request):\n    json = {'a': 1,\n            'b': 2,\n            'c': 3,\n            'd': 4}\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n    <head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (with debug mode enabled)\n\n![simple dict](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_dict.png?raw=true)\n\n\n### Example №2\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_nested_dict(request):\n    json = {'a': {'aa': 1},\n            'b': [2, 2, {'q': 'qq',\n                         'w': 'ww',\n                         'z': [1, 2, 3, 4, {'five': 'number',\n                                            'six': 'number'}, 7]}],\n            'c': 3,\n            'd': {'e':'ee', 'f':'ff'},\n            'listA': [99, 98, 97, {'text': 'string'}],\n            'ListA': [{'name': 'A', 'value': 'No'},\n                      {'name': 'B', 'value': 'No'},\n                      {'name': 'C', 'value': 'Yes'}]}\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![test](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_dict.png?raw=true)\n\n\n\n### Example №3\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_list(request):\n    json = ['a', 'b', 'c']\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![simple list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_list_.png?raw=true)\n\n\n### Example №4\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_nested_list(request):\n    json = [['a', 'b', [1, 2, 3]], {'c': 'best'}, 'd']\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![nested list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_list%20.png?raw=true)\n\n## Known issues\nSee https://github.com/abbasovalex/django-SplitJSONWidget-form/issues?labels=bug&page=1&state=open\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/abbasovalex/django-splitjsonwidget-form/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abbasovalex/django-SplitJSONWidget-form",
    "keywords": "json django widget",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-split-json-widget",
    "package_url": "https://pypi.org/project/django-split-json-widget/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-split-json-widget/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/abbasovalex/django-SplitJSONWidget-form"
    },
    "release_url": "https://pypi.org/project/django-split-json-widget/1.15/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Provides a widget that renders JSON data as separate, editable inputs.",
    "version": "1.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3240521,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7001baf54dd9a23520e261ae39377b602ac81eb6127c10a168a7fc16d9b59a6",
        "md5": "3e9fac8e3aed1b19f507f6738403a205",
        "sha256": "1e1a936701caf8f25def49ccba7e96a6230b6ee734624a5605dd977b9810f916"
      },
      "downloads": -1,
      "filename": "django-split-json-widget-1.15.tar.gz",
      "has_sig": false,
      "md5_digest": "3e9fac8e3aed1b19f507f6738403a205",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5903,
      "upload_time": "2015-08-27T16:50:38",
      "upload_time_iso_8601": "2015-08-27T16:50:38.272968Z",
      "url": "https://files.pythonhosted.org/packages/d7/00/1baf54dd9a23520e261ae39377b602ac81eb6127c10a168a7fc16d9b59a6/django-split-json-widget-1.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}