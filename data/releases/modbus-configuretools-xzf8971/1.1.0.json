{
  "info": {
    "author": "XU Zifeng",
    "author_email": "Zifeng <zifeng.xu@foxmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# temperature_sensor_reader\nThis is a temperature sensor package designed for modbus. Implemented in pymodbus only. PyPI website: https://pypi.org/project/modbus-configuretools-xzf8971/\n## Install\nfrom pypi:  \npip install modbus-configuretools-xzf8971  \nfrom github:  \npip install git+https://github.com/xzf89718/temperature_sensor_reader\n## Jiandarenke modbus RS485 as example  \n### Before run scripts\nCheck the COM and chmod  \n```bash\nchmod 666 \\dev\\ttyUSBx\n```\n### Import modules  \n```python\nfrom modbus_configuretools import temperature_sensor.RS485_Jiandarenke as RS485_JDRK  \nfrom modbus_configuretools import temperature_sensor.JDRKAddressConfig as Config\n```\n### Configure parameters for Jiandarenke RS485 sensor\nIt's OK to set None for unkown value\n```python\n# Modify these config values \n# Please configure these value in temperature_sensor before read or write values  \n# SLAVEID must be specified. If SLAVEID is none, set to 1  \n# ADDRESS_HUMIDITY = 0x0000  \n# ADDRESS_TEMPERATURE_DEW_POINT = 0x0001  \n# ADDRESS_TEMPERATURE = 0x0002  \n# ADDRESS_TEMPERATURE_CALI = 0x0050  \n# ADDRESS_HUMUDITY_CALI = 0x0051  \n# ADDRESS_SLAVEID = 0x07D0  \n# ADDRESS_BAUDRATE = 0x07D1  \n# TEMPERATURE_CALI = 164  \n# HUMIDITY_CALI = 7  \n# SLAVEID = 1\n# BAUDRATE = 1\nmyconfig = Config(ADDRESS_HUMIDITY, ADDRESS_TEMPERATURE_DEW_POINT, ADDRESS_TEMPERATURE, ADDRESS_SLAVEID, ADDRESS_BAUDRATE, ADDRESS_TEMPERATURE_CALI, ADDRESS_HUMUDITY_CALI, TEMPERATURE_CALI, HUMIDITY_CALI, SLAVEID, BAUDRATE)\n```\n### Calibration of sensor. Not necessary calibration every time  \n```python\nsensor.CalibrationJiandarenke(myconfig)  \n```\n### Set slaveID and baudrate\nPlease make sure only 1 sensor connect to the modbus bus\n```python\nsensor.WriteSlaveIDAndBaudrate(myconfig)\n```\n### Init and read measured values from sensor  \n```python\n# Create a wrapper for JDRK sensor  \nsensor = RS485_JDRK(port=\"/dev/ttyUSB0\")  \n# Init and connect client\nsensor.InitClient()  \n# Read slaveID and baudrate  \nslaveID, baudrate = sensor.ReadSalveIDAndBaudrate(myconfig)  \n# Read temperature, dew point, humidity in one request  \n# Only correct for specified sensor\ntemperature, dew_point_temperature, humidity = sensor.ReadTemperatureAndHumidity(myconfig)  \n# Read temperature only  \ntemperature = sensor.ReadTemperature(myconfig)  \n# Read dew point temperature  \ndew_point_temperature = sensor.ReadTemperatureDewPoint(myconfig)  \n# Read humidity only  \nhumidity = sensor.ReadTemperature(myconfig)  \n```\n### Close the sensor\n```python\nsensor.close()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xzf89718/temperature_sensor_reader",
    "keywords": "",
    "license": "The MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modbus-configuretools-xzf8971",
    "package_url": "https://pypi.org/project/modbus-configuretools-xzf8971/",
    "platform": null,
    "project_url": "https://pypi.org/project/modbus-configuretools-xzf8971/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/xzf89718/temperature_sensor_reader"
    },
    "release_url": "https://pypi.org/project/modbus-configuretools-xzf8971/1.1.0/",
    "requires_dist": [
      "numpy",
      "pymodbus",
      "pyserial",
      "pyserial-asyncio"
    ],
    "requires_python": ">=3.7",
    "summary": "A package to read/write registers on a temperature sensor with python.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15773892,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ff9ac89248e0c79538f382efd6bc34debe120ea646ff70ad4090dcb78a3d960",
        "md5": "065b1dfd82f3ecfaeac8690b6b0936f2",
        "sha256": "4eb6ed15b097a5d7f31e1362584c02d83bd8101132174e9888067ba194653918"
      },
      "downloads": -1,
      "filename": "modbus_configuretools_xzf8971-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "065b1dfd82f3ecfaeac8690b6b0936f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7371,
      "upload_time": "2022-10-30T08:58:32",
      "upload_time_iso_8601": "2022-10-30T08:58:32.757408Z",
      "url": "https://files.pythonhosted.org/packages/5f/f9/ac89248e0c79538f382efd6bc34debe120ea646ff70ad4090dcb78a3d960/modbus_configuretools_xzf8971-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09d29731d7a557436fa08f4c0bd1161d707f5b64671d55a467681e52b71ac0f0",
        "md5": "b72de908973fed74d2b37ee104321371",
        "sha256": "1d3504e457449357017062b87ce39df1bbef93f6ba198f9c469673e04394e3c4"
      },
      "downloads": -1,
      "filename": "modbus_configuretools_xzf8971-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b72de908973fed74d2b37ee104321371",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6026,
      "upload_time": "2022-10-30T08:58:34",
      "upload_time_iso_8601": "2022-10-30T08:58:34.366512Z",
      "url": "https://files.pythonhosted.org/packages/09/d2/9731d7a557436fa08f4c0bd1161d707f5b64671d55a467681e52b71ac0f0/modbus_configuretools_xzf8971-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}