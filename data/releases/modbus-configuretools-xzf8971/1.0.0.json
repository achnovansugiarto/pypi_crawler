{
  "info": {
    "author": "XU Zifeng",
    "author_email": "Zifeng <zifeng.xu@foxmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# temperature_sensor_reader\nThis is a temperature sensor package designed for modbus. Implemented in pymodbus only.\n\n## Jiandarenke modbus RS485 as example  \n### Import modules  \nfrom modbus_configuretools import temperature_sensor.RS485_Jiandarenke as RS485_JDRK  \nfrom modbus_configuretools import temperature_sensor.JDRKAddressConfig as Config\n### Configure parameters for Jiandarenke RS485 sensor\n\\# Modify these config values \n\\# Please configure these value in temperature_sensor before read or write values  \n\\# ADDRESS_HUMIDITY = 0x0000  \n\\# ADDRESS_TEMPERATURE_DEW_POINT = 0x0001  \n\\# ADDRESS_TEMPERATURE = 0x0002  \n\\# ADDRESS_TEMPERATURE_CALI = 0x0050  \n\\# ADDRESS_HUMUDITY_CALI = 0x0051  \n\\# ADDRESS_SLAVEID = 0x07D0  \n\\# ADDRESS_BAUDRATE = 0x07D1  \n\\# TEMPERATURE_CALI = 164  \n\\# HUMIDITY_CALI = 7  \nmyconfig = Config(ADDRESS_HUMIDITY, ADDRESS_TEMPERATURE_DEW_POINT, ADDRESS_TEMPERATURE, ADDRESS_SLAVEID, ADDRESS_BAUDRATE, ADDRESS_TEMPERATURE_CALI, ADDRESS_HUMUDITY_CALI, TEMPERATURE_CALI, HUMIDITY_CALI)\n### Calibration of sensor. Not necessary calibration every time  \nsensor.CalibrationJiandarenke(sensor.cfg.ADDRESS_TEMPERATURE_CALI, sensor.cfg.ADDRESS_HUMUDITY_CALI, slaveID=1)  \n### Init and read registers from sensor  \n\\# Create a wrapper for JDRK sensor  \nsensor = RS485_JDRK(port=\"/dev/ttyUSB0\", myconfig)  \n\\# Init and connect client\nsensor.InitClient()  \n\\# Read slaveID and baudrate  \nslaveID, baudrate = sensor.ReadSalveIDAndBaudrate(salveID=1)  \n\\# Read temperature, dew point, humidity in one request  \n\\# Only correct for specified sensor\ntemperature, dew_point_temperature, humidity = sensor.ReadTemperatureAndHumidity(slaveID=1)  \n\\# Read temperature only  \ntemperature = sensor.ReadTemperature(slaveID=1)  \n\\# Read dew point temperature  \ndew_point_temperature = sensor.ReadTemperatureDewPoint(SlaveID=1)  \n\\# Read humidity only  \nhumidity = sensor.ReadTemperature(slaveID=1)  \n### Close the sensor\nsensor.close()\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xzf89718/temperature_sensor_reader",
    "keywords": "",
    "license": "The MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modbus-configuretools-xzf8971",
    "package_url": "https://pypi.org/project/modbus-configuretools-xzf8971/",
    "platform": null,
    "project_url": "https://pypi.org/project/modbus-configuretools-xzf8971/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/xzf89718/temperature_sensor_reader"
    },
    "release_url": "https://pypi.org/project/modbus-configuretools-xzf8971/1.0.0/",
    "requires_dist": [
      "numpy",
      "pymodbus"
    ],
    "requires_python": ">=3.7",
    "summary": "A package to read/write registers on a temperature sensor with python.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15773892,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dc384a7347e84798682b2b73b339dce8fa19251c6f5f2453ece4638e3114451",
        "md5": "525b5edcecd471725e4265ca516ad47b",
        "sha256": "b36308fa1c6eca3b02c64f03f8ba7d453ea57e7e286d472d6f63f1df7b314a22"
      },
      "downloads": -1,
      "filename": "modbus_configuretools_xzf8971-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "525b5edcecd471725e4265ca516ad47b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6538,
      "upload_time": "2022-10-29T15:06:21",
      "upload_time_iso_8601": "2022-10-29T15:06:21.625194Z",
      "url": "https://files.pythonhosted.org/packages/3d/c3/84a7347e84798682b2b73b339dce8fa19251c6f5f2453ece4638e3114451/modbus_configuretools_xzf8971-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a758eed55bfb7e9506c20e52c28cdb9f4a6a5e8d79f5546abe8185f7402023c",
        "md5": "6a8a94e09d85050770432b62247e46bb",
        "sha256": "5623f0b092bd2b0b90d9282c878095bce3e5b7baff5e6ba3adc4cc8633cde03d"
      },
      "downloads": -1,
      "filename": "modbus_configuretools_xzf8971-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6a8a94e09d85050770432b62247e46bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5270,
      "upload_time": "2022-10-29T15:06:23",
      "upload_time_iso_8601": "2022-10-29T15:06:23.236484Z",
      "url": "https://files.pythonhosted.org/packages/2a/75/8eed55bfb7e9506c20e52c28cdb9f4a6a5e8d79f5546abe8185f7402023c/modbus_configuretools_xzf8971-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}