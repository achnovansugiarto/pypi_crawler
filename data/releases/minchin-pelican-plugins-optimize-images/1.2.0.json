{
  "info": {
    "author": "William Minchin",
    "author_email": "w_minchin@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Pelican :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===============\r\nOptimize Images\r\n===============\r\n\r\n``Optimize Images`` is a plugin for\r\n`Pelican <http://docs.getpelican.com/>`_, a static site generator written\r\nin Python.\r\n\r\n``Optimize Images``  applies lossless compression on JPEG and PNG images,\r\nwith no effect on image quality. It uses jpegtran_ and OptiPNG_.\r\n\r\n.. image:: https://img.shields.io/pypi/v/minchin.pelican.plugins.optimize-images.svg?style=flat\r\n    :target: https://pypi.python.org/pypi/minchin.pelican.plugins.optimize-images/\r\n    :alt: PyPI version number\r\n\r\n.. image:: https://img.shields.io/badge/-Changelog-success\r\n   :target: https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images/blob/master/CHANGELOG.rst\r\n   :alt: Changelog\r\n\r\n.. image:: https://img.shields.io/pypi/pyversions/minchin.pelican.plugins.optimize-images?style=flat\r\n    :target: https://pypi.python.org/pypi/minchin.pelican.plugins.optimize-images/\r\n    :alt: Supported Python version\r\n\r\n.. image:: https://img.shields.io/pypi/l/minchin.pelican.plugins.optimize-images.svg?style=flat&color=green\r\n    :target: https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images/blob/master/LICENSE.txt\r\n    :alt: License\r\n\r\n.. image:: https://img.shields.io/pypi/dm/minchin.pelican.plugins.optimize-images.svg?style=flat\r\n    :target: https://pypi.python.org/pypi/minchin.pelican.plugins.optimize-images/\r\n    :alt: Download Count\r\n\r\n\r\nInstallation\r\n============\r\n\r\nThe easiest way to install ``Optimize Images`` is through the use of pip.\r\nThis will also install the required Python dependencies automatically.\r\n\r\n.. code-block:: sh\r\n\r\n  pip install minchin.pelican.plugins.optimize_images\r\n\r\nIt is assumed both jpegtran_ and OptiPNG_ are installed on system path.\r\n\r\nIf you are using Pelican 4.5, it should automatically be activated (through my\r\nAutoLoader plugin). \r\n\r\nIf you are using an earlier version of Pelican or autoloading isn't working,\r\nthen in your ``pelicanconf.py`` file, add ``Optimize Images`` to your list of\r\nplugins:\r\n\r\n.. code-block:: python\r\n\r\n  PLUGINS = [\r\n      # others...\r\n      \"minchin.pelican.plugins.optimize_images\",\r\n      # ...\r\n  ]\r\n\r\n\r\nRequirements\r\n============\r\n\r\n``Optimize Images`` depends on (and is really only useful with) Pelican.\r\nThis can be manually installed with pip:\r\n\r\n.. code-block:: sh\r\n\r\n   pip install pelican\r\n\r\nIt is assumed both jpegtran_ and OptiPNG_ are installed on system path. On\r\nWindows, installers are available at each respective website. On Ubuntu\r\nsystems, the two can be installed via ``apt-get``:\r\n\r\n.. code-block:: sh\r\n\r\n  apt-get install optipng libjpeg-progs\r\n\r\n\r\nConfiguration and Usage\r\n=======================\r\n\r\nThe plugin will activate and optimize images upon ``finalized`` signal of\r\npelican.\r\n\r\nIf add ``OPTIMIZE_IMAGES_DEV_MODE = True`` to your ``pelicanconf.py``, this\r\nwill disable the plugin, which is useful when developing your site locally.\r\n\r\n\r\nKnown Issues\r\n============\r\n\r\nImage manipulation like this can take some time to run. You may consider only\r\nadding this plugin to your ``publishconf.py`` (rather than your base\r\n``pelicanconf.py``) or add ``OPTIMIZE_IMAGES_DEV_MODE = True`` to your\r\n``pelicanconf.py``, which will then only run this image optimization in\r\npreparation for site publication.\r\n\r\nAn issue, as such, is that there is no formal test suite. Testing is\r\ncurrently limited to my in-use observations. I also run a basic check upon\r\nuploaded the package to PyPI that it can be downloaded and loaded into\r\nPython.\r\n\r\nThe package is tested in Python 3.10; compatibility with other version of\r\nPython is unknown, but there should be nothing particular keeping it from\r\nworking with other \"modern\" versions of Python.\r\n\r\n\r\nCredits\r\n=======\r\n\r\nOriginal plugin from the `Pelican-Plugins repo\r\n<https://github.com/getpelican/pelican-plugins>`_.\r\n\r\n\r\nLicense\r\n=======\r\n\r\nThe plugin code is assumed to be under the AGPLv3 license (this is the\r\nlicense of the Pelican-Plugins repo).\r\n\r\n\r\n.. _jpegtran: http://jpegclub.org/jpegtran/ \r\n.. _OptiPNG: http://optipng.sourceforge.net/\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images",
    "keywords": "",
    "license": "GNU Affero General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minchin.pelican.plugins.optimize-images",
    "package_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/",
    "platform": "any",
    "project_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/",
    "project_urls": {
      "Homepage": "https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images"
    },
    "release_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This Pelican plugin optimizes images (jpg and png).",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14473543,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c4037f801c42c47ba019ae0896c3a2467b923ee000c8ef0c31c4fa45bc4f5e8",
        "md5": "dd81d9c9b59a71e4acd15151991244a2",
        "sha256": "18117f52c44a24ee9fe9082307da379c0fed21f77de3ad3f2900b49426301e76"
      },
      "downloads": -1,
      "filename": "minchin.pelican.plugins.optimize_images-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd81d9c9b59a71e4acd15151991244a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17842,
      "upload_time": "2022-07-18T14:00:13",
      "upload_time_iso_8601": "2022-07-18T14:00:13.547116Z",
      "url": "https://files.pythonhosted.org/packages/0c/40/37f801c42c47ba019ae0896c3a2467b923ee000c8ef0c31c4fa45bc4f5e8/minchin.pelican.plugins.optimize_images-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05b00c654007a79041876851a587129f35515fece96091ece32925fbb9d47ad1",
        "md5": "c4d7450701e87dcc02e88012d9ba830b",
        "sha256": "4e05611030483336466fc5295a9844dd309dfcc3c827dd9634e45b7354c61b8b"
      },
      "downloads": -1,
      "filename": "minchin.pelican.plugins.optimize_images-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c4d7450701e87dcc02e88012d9ba830b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18384,
      "upload_time": "2022-07-18T13:59:33",
      "upload_time_iso_8601": "2022-07-18T13:59:33.787395Z",
      "url": "https://files.pythonhosted.org/packages/05/b0/0c654007a79041876851a587129f35515fece96091ece32925fbb9d47ad1/minchin.pelican.plugins.optimize_images-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}