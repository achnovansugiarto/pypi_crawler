{
  "info": {
    "author": "Sebastian Maurice",
    "author_email": "sebastian.maurice@otics.ca",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "**Multi-Agent Accelerator for Data Science (MAADS)**\n\n*Revolutionizing Data Science with Artificial Intelligence*\n\n**Overview**\n\n*MAADS combines Artificial Intelligence, Machine Learning and Natural Language Processing (with data engineering task automation) in one easy to use library, that allows clients to connect to the MAADS server located anywhere in the world and perform advanced analytics and embed intelligence in their organization seamlessly and fast!*\n\nThis library allows users to harness the power of agent-based computing using hundreds of advanced linear and non-linear algorithms. Users can easily integrate Predictive Analytics in any solution by wrapping additional code around the functions below. The system can:\n\n- Automatically analyse your data and perform feature selection to determine which variables are more important than others.\n- Automatically model your data for seasonality *Winter, Shoulder, and Summer seasons.*\n- Automatically clean your data for outliers.\n- Automatically make predictions using the BEST algorithm (out of hundreds of advanced algorithms) that best model your data.\n- Perform *Natural Language Processing (NLP)* on large amounts of text data - and get MAADS to summarize the text or apply deep learning for predictive outcomes. \n  For example, you can tell it to scrape a website, read a PDF, or text data and it will \n  return a concise summary.  This summary can be used to refine your modeling and give users  \n  an integrated view of their business from a TEXT and ADVANCED ANALYTIC perspective.     \n  Or, apply machine learning to text data for deeper insights - such as analysing\n  help desk tickets and uncovering issues before they occur. Or, apply deep learning\n  to security logs and uncover more anomalies or threats in your networks. \n- Do all this in minutes.\n\nTo install this library a request should be made to **info@otics.ca** for a username and password.  Once you have these credentials then install this Python library.\n\n**Compatibility**\n    - Python 3.5 or greater\n    - Minimal Python skills needed\n\n**License**\n   - Author: Sebastian Maurice, PhD\n   - OTICS Advanced Analytics Inc.\n\n**Installation**\n   - At the command prompt write:\n     **pip install maads**\n     - This assumes you have [Downloaded Python](https://www.python.org/downloads/) and installed it on your computer.  \n\n**Syntax**\n  - There are literally two lines of code you need to write to train your data and make predictions:\n\n**Main functions:**\n   - **dotraining**\n     Executes hundreds of agents, running hundreds of advanced algorithms and completes in minutes.  A master agent then chooses the BEST algorithm that best  models your data.\n   - **dopredictions**\n     After training, make high quality predictions - takes 1-2 seconds.\n   - **hyperpredictions**\n     After training, make high quality predictions - takes less than half a second (about ~100 milliseconds). Users can also generate predictions using **non-python code** such as JAVA.  Using the **maadshyperpredictions.CLASS** file, java apps can call the MAADS prediction server to return predictions very fast.  Other apps, using **any** other language, can also call the MAADS prediction server using standard TCP/IP client/server communication protocols:  This gives MAADS users' the maximum flexibility to integrate MAADS predictions in any solution!\n\n**Support functions:**\n\n- **dolistkeys**\n        - List all of the keys associated with the data you have analysed. \n- **dolistkeyswithkey**\n        - List data associated with a single key.\n- **dodeletewithkey**\n        - Permanently delete all data associated with your key.\n- **returndata**\n        - Returns data from the string buffer.\n- **getpicklezip**\n        - Automatically downloads a ZIP file containing the optimal algorithms.  Users can modify the parameter estimates as they wish.\n- **sendpicklezip**\n        - Automatically upload a ZIP file containing the optimal algorithms to MAADS. The optimal algorithms will immediately take effect for predictions.\n- **deploytoprod**\n        - Automatically deploy the optimal algorithms to another MAADS server (i.e. production); MAADS will read the ZIP file, extract the algorithms and make all database updates.  This function is useful when your MAADS training server(s) and MAADS prediction server(s) are separate.  A powerful way to integrate MAADS in a distributed architecture is to automatically train your data, then deploy the optimal algorithms to some other server for predictions.  This is a great way to scale your analytics in a large (global) entreprise setting, seamlessly and fast, with MAADS!\n- **algoinfo**\n        - Get detailed information on the algorithm and other information.\n- **genpdf**\n        - Retrieve the PDF containing all of the detailed information on the algorithm and other information like model explanation and feature selection, etc.\t\n- **featureselectionjson**\n        - Returns JSON collection of feature selection results for easier programmatic manipulation. Use dotraining feature selection switch to return a CSV file of \n\t\t  feature selections.\t\n\n**Natural Language Processing (NLP):**\n\n- **nlp**\n   - Automatically perform NLP to summarize large amounts of text data.  Specifically, there are three data sources one can use:\n       - **Website URL:** you can pass a URL to the NLP function and it will automatically scrape the site and return a summary of the text.\n       - **PDF:** Send a PDF to be summarized.\n       - **Text:** Paste text to be summarized.\n       - This allows users to integrate NLP in unique and powerful ways with advanced analytics.\n\n- **nlpaudiovideo**\n   - Automatically extracts text from audio or video files.\n       - This allows users to integrate text from audio and video in unique and powerful ways with machine learning (NLPCLASSIFY).\n\t   - Files must be .mp3, .mp4, .wav\n\t   - Users can specify how many seconds they want or get all of the recording.\n\n- **nlpocr**\n   - Automatically extracts text from image files.\n       - This allows users to integrate text from images or scanned documents in unique and powerful ways with machine learning (NLPCLASSIFY).\n\t   - Files must be .jpg, .gif, .tiff, .png, .bmp, etc.\n\n- **nlpclassify**\n   - Automatically apply machine learning to predict outcomes from text data.  Specifically, MAADS will:\n       - Preprocess text data and convert it to numeric vectors using over 50 Billion words to vector mappings plus custom mappings specific to your trained model\n\t   - Clean your text data by removing strange characters, punctuations, common words, lemmatize the words, etc..\n\t   - Convert the dependent category variable to labels.  Maximum of 11 unique categories are accepted.\n\t   - If dependent variable is not categorical, you can tell MAADS not to convert the dependent variable.  This means you can regress TEXT data on NUMERIC data!\n       - This function allows users to integrate NLP in unique and powerful ways with advanced analytics to text based systems like Help Desk or security platforms.\n\n**First import the Python library.**\n\n**import maads**\n\n1. **maads.dotraining(CSV_local_file, username, password, feature_analysis, remove_outliers, has_seasonality, dependent_variable, your_company_name, your_email,maadsurl,summer,winter,shoulder,trainingpercentage,retrainingdays,retraindeploy,shuffle)**\n\n**Parameters:**\t\n\n*CSV_local_file* : string, required\n\n- A local comma-separated-file (csv) with Date in the first column.  Date must be MM/DD/YYYY format.  \n- All other data must be numbers.\n\n*username* : string, required\n\n- A username issued by the system administrator. \n\n*password* : string, required \n\n- A password issued by the system administrator.\n\n*feature_analysis* : int, required, 1 or 0\n\n- If 1, then a feature analysis will be done on your data along with training.  If 0, no analysis is done. If -1, features will be generated, and downloaded to your local computer folder WITHOUT training.\n\n*remove_outliers* : int, required, 1 or 0\n\n- If 1, then outliers will be removed from your data.  If 0, no outliers are removed.\n\n*has_seasonality* : int, required, 1 or 0\n\n- If 1, then your data will be modeled for seasonality: Winter, Summer, Shoulder. If 0, then your data will \n  not be modeled for seasonality.  If modeling for seasonality, ensure you have enough data points that \n  covers the seasons, usually 1 year of data.\n\n*dependent_variable* : string, required\n\n- This is the dependent variable in your file.  All other variables will be modeled as independent variables.\n\n*your_company_name* : string, required\n\n- Indicate your company name, the one associated with your username. \n\n*your_email* : string, required       \n\n- Indicate your email, the one associated with your username. \n\n*maadsurl* : string, required\n\n- Indicate location of MAADS server.  You would have received this URL when you received your username and password. \n\n*summer* : string, optional\n\n- Indicate summer months.  The default value is '6,7,8' for North America.  If you are analysing other continents you could change this value. \n\n*winter* : string, optional\n\n- Indicate winter months.  The default value is '12,1,2,3' for North America.  If you are analysing other continents you could change this value. \n\n*shoulder* : string, optional\n\n- Indicate shoulder months.  The default value is '4,5,9,10,11' for North America.  If you are analysing other continents you could change this value. \n\n*trainingpercentage* : number between 40 and 80, optional\n\n- Indicates how much of the complete data set to you as the Training data set. The default value is 75% or 75, the rest is used for test or validation.\n\n*retrainingdays* : number, optional\n\n- Indicates how many days to wait, from initial training, to re-train the model. This is convenient to automate re-training of models to take advantage of new data.  Default value is 0, for no re-training.\n\n*retraindeploy* : number, 0 or 1, optional\n\n- Indicates whether to deploy (retraindeploy=1) the optimal algorithm to a server (i.e. production) for immediate use after re-training. This assumes FTP server is listed in the MAADS lookup table. Default value is 0, for no deployment after re-training.\n\n*shuffle* : number, 0 or 1, optional\n\n- Indicates whether to shuffle the training dataset or not, default=0.\n\n**Returns:** string buffer, PDF of Results, CSV of Prediction Data\n\n- The string buffer contains the following sections:\n\n- DATA: : This consists of the feature selection results\n- PKEY: : This is the key to the BEST algorithm and must be used when making predictions.\n\n\n\n**2. maads.dopredictions(attr,pkey,inputs,username,password,your_company_name, your_email,maadsurl)**\n\n**Parameters:**\t\n\n*attr* : int, required\n\n- This value should be 0.  It may change to other values in the future.\n\n*pkey* : string, required\n\n- This value must be retrieved from dotraining.  Note you can store PKEY after you have trained your file. \n  Training does not have to run before predictions, as training occurs more infrequently.\n\n*inputs* : string, required\n\n- This is a row of input data that must match the independent variables in your CSV. For example, if your \n  trained file is: Date, A, B, C, D and A is your dependent variable, then your inputs must be:\n  Date, B, C, D\n\n*username* : string, required\n\n- A username issued by the system administrator. \n\n*password* : string, required \n\n- A password issued by the system administrator.\n\n*your_company_name* : string, required\n\n- Indicate your company name, the one associated with your username. \n\n*your_email* : string, required       \n\n- Indicate your email, the one associated with your username. \n\n*maadsurl* : string, required\n\n- Indicate location of MAADS server.  You would have received this URL when you received your username and password. \n\n**Returns:** string buffer\n\n- The string buffer contains the following sections:\n\n  DATA: : This contains your prediction.\n\n**3. maads.hyperpredictions(host,port,username,password,company,email,pkey,inputdata)**\n\n**Parameters:**\t\n\n*host* : string, required\n\n- The host is the webserver that connects to the MAADS prediction server.  This will be provided by the MAADS administrator.\n\n*port* : int, required\n\n- This is the port that the MAADS prediction server listens on.  This will be provided by the MAADS administrator.\n\n*username* : string, required\n\n- A username issued by the system administrator. \n\n*password* : string, required \n\n- A password issued by the system administrator.\n\n*your_company_name* : string, required\n\n- Indicate your company name, the one associated with your username. \n\n*your_email* : string, required       \n\n- Indicate your email, the one associated with your username. \n\n*pkey* : string, required\n\n- This is the key to the optimal algorithm.\n\n*inputdata* : string, required\n\n- This is the input data for the optimal algorithm to produce a prediction.\n\n**Returns:** Number, prediction value\n\n- The difference between doprediction and hyperpredictions is that do prediction returns \n        predictions in a few seconds, hyperpredictions returns predictions in milliseconds.  So if you require very fast predictions\n\t\tuse hyperpredictions.  \n\n**4. maads.returndata(thepredictions, section_attr)**\n\n**Parameters:**\t\n\n*thepredictions* : string buffer\n\n- This value is returned from dopredictions.\n\n*section_attr* : string buffer\n\nThis value can be any one of the values:\n\n- PKEY: : This returns the key from the dotraining function.  Note the semi-colon.\n- DATA: : This returns the data from the dotraining or dopredictions functions.  Note the semi-colon.\n- ALGO0: : This returns the BEST algorithm determined by MAADS - without seasonality.\n- ACCURACY0: : This returns the forecast accuracy for the BEST algorithm - without seasonaility.\n- SEASON0: : This returns allseason - for no seasonality.\n- ALGO1: : This returns the BEST algorithm determined by MAADS for WINTER.\n- ACCURACY1: : This returns the forecast accuracy for the BEST algorithm for WINTER.\n- SEASON1: : This returns WINTER.\n- ALGO2: : This returns the BEST algorithm determined by MAADS for SUMMER.\n- ACCURACY2: : This returns the forecast accuracy for the BEST algorithm for SUMMER.\n- SEASON2: : This returns SUMMER.\n- ALGO3: : This returns the BEST algorithm determined by MAADS for SHOULDER season.\n- ACCURACY3: : This returns the forecast accuracy for the BEST algorithm for SHOULDER season.\n- SEASON3: : This returns SHOULDER.\n\n**Returns:** string buffer\n\n- The string buffer contains the prediction or the key or the feature analysis.\n\n**5. maads.dodeletewithkey(username,password,company,email,pkey,maadsurl)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*pkey* : string buffer\n\n- The key you want deleted.  This can be attained from dolistkeys function.\n\n*maadsurl* : string, required\n\n- Indicate location of MAADS server.  You would have received this URL when you received your username and password. \n\n**Returns:** NULL\n\n- Deletes all files and tables associated with the key permanently.\n\n**6. maads.dolistkeys(username,password,company,email,maadsurl)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maadsurl* : string, required\n\n- Indicate location of MAADS server.  You would have received this URL when you received your username and password. \n\n**Returns:** string buffer\n\n- Lists all the keys associated with your username.\n\n**7. maads.dolistkeyswithkey(username,password,company,email, pkey,maadsurl)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*pkey* : string buffer\n\n- The key you want returned.\n\n*maadsurl* : string, required\n\n- Indicate location of MAADS server.  You would have received this URL when you received your username and password. \n\n**Returns:** string buffer\n\n- Returns the information (with independent variables) associated with your key.\n\n\n**8. maads.getpicklezip(username,password,company,email, pkey,url,localfolder)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*pkey* : string buffer\n\n- The key for the trained model.\n\n*url* : string, required\n\n- Indicate location of MAADS server.  This is the root location of the MAADS folder in the webserver. \n\n*localfolder* : string, required\n\n- Indicates local folder location where file will be saved (i.e. C:/MAADS). Please use folder slashes.\n\n**Returns:** ZIP File\n\n- This is a binary ZIP file and stored in the location of the localfolder.\n\n**9. maads.sendpicklezip(username,password,company,email, pkey,url,localfilename)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*pkey* : string buffer\n\n- The key for the trained model.\n\n*url* : string, required\n\n- Indicate location of MAADS PHP file in the webserver. \n\n*localfilename* : string, required\n\n- Indicates local filename to be sent to the server. The file name should have a proper file format: key_DEPLOYTOPROD.zip \n\n**Returns:** Server Response.\n\n- The ZIP file will be stored and read by MAADS and all necessary changes will immediately take effect.\n\n**10. maads.deploytoprod(username,password,company,email, pkey,url,localfilename,ftpserver,ftpuser,ftppass)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*pkey* : string buffer\n\n- The key for the trained model.\n\n*url* : string, required\n\n- Indicate location of MAADS PHP file in the webserver. \n\n*localfilename* : string, optional\n\n- Indicates local filename to be sent to the server. If indicating localfilename it must have a proper file format: key_DEPLOYTOPROD.zip \n\n*ftpserver* : string, optional\n\n- Indicates ftp server you want to deploy the optimal algorithms to for predictions. If no FTP server is specified a default FTP server\n  will used as listed on the MAADS server.  If none is listed this function will fail.\n\n*ftpuser* : string, optional\n\n- Indicates ftp username to login to ftp server. If no FTP username is specified a default FTP username\n  will used as listed on the MAADS server.\n\n*ftppass* : string, optional\n\n- Indicates ftp password to login to ftp server.  If no FTP password is specified a default FTP password\n  will used as listed on the MAADS server.\n\n**Returns:** Server Response.\n\n- The ZIP file will be stored and deployed to the MAADS PROD server (with FTP connection) and read by MAADS and all necessary changes will immediately take effect. The functions: dopredictions and hyperpredictions can immediately be used.\n\n**11. maads.nlp(username,password,company,email, url,buffer,theserverfolder,wordcount,maxkeywords)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*url* : string, required\n\n- Indicate location of MAADS PHP file in the webserver. \n\n*buffer* : string buffer, optional\n\n- The data source to be summarized: URL, PDF, TEXT. If this is not specified, then theserverfolder cannot be empty.\n\n*theserverfolder* : string buffer, optional\n\n- This is a folder in the server that MAADS will read for files.  This is convenient when you do not want to transfer files to the server. If this is not specified, then buffer cannot be empty.\n\n*wordcount* : int, required\n\n- Indicates how many words you want returned. \n\n*maxkeywords* : int, optional, Default=10\n\n- Indicates how many keywords you want returned. \n\n**Returns:** Two JSON objects separated by semi-colon.\n\n- The first JSON are the extracted keywords in the text.  The second is the text summary.\n\n**12. maads.nlpclassify(username,password,company,email, iscategory,maads_rest_url,csvfile,theserverlocalname,csvonly,trainingpercentage,retrainingdays,retraindeploy)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*iscategory* : int, required\n\n- 1=Dependent Variable is a category, 0=Dependent variable is continuous\n\n*maads_rest_url* : buffer, required\n\n- Indicates the url for the MAADS training server with main PHP file.\n\n*csvfile* : string buffer, optional\n\n- The csvfile file to analyse.  The file must contain headers in the first row, and TWO columns: first column is the dependent variable (text or numeric), the \n  second column is text.  If this is not specified, then \n\n*theserverlocalname* : string buffer, optional\n\n- The full path of the filename in the server that MAADS will read for training.  If this is empty, then csvfile must be specified.\n\n*csvonly* : number, 0 or 1, optional, Default=0\n\n- IF csvonly is set to 1, MAADS will return the converted file only in csv format.  This is convenient because nlpclassify can take several minutes for conversion and training, when a user may only want the converted file without the optimal algorithm.  Also, the converted file could be used as input into another model for training...especially when combining machine learning models that use only numeric data, and those using text data.\n\n*trainingpercentage* : number between 40 and 80, optional\n\n- Indicates how much of the complete data set to use as the Training data set. The default value is 75% or 75, the rest is used for test or validation.\n\n*retrainingdays* : number, optional\n\n- Indicates how many days to wait, from initial training, to re-train the model. This is convenient to automate re-training of models to take advantage of new data.  Default value is 0, for no re-training.\n\n*retraindeploy* : number, 0 or 1, optional\n\n- Indicates whether to deploy (retraindeploy=1) the optimal algorithm to a server (i.e. production) for immediate use after re-training. This assumes FTP server is listed in the MAADS lookup table. Default value is 0, for no deployment after re-training.\n\n**Returns:** Server Response.\n\n- Key to the optimal algorithm used for predictions.  NOTE: This key must be used in the HYPERPREDICTION function only.\n\n\n**13. maads.nlpaudiovideo(username,password,company,email, maads_rest_url,thefile,theserverfolder,duration,offset)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maads_rest_url* : string, required\n\n- Indicate location of MAADS PHP file in the webserver. \n\n*thefile* : string buffer, optional\n\n- The data file to be analysed. If this is not specified, then theserverfolder cannot be empty.\n\n*theserverfolder* : string buffer, optional\n\n- This is a folder in the server that MAADS will read for files.  This is convenient when you do not want to transfer large audio/video files to the server. If this is not specified, then thefile cannot be empty.\n\n*duration* : int, optional, Default=-1\n\n- Specifies the number of seconds to play the audio for text extraction.  It defaults to playback of full recording.\n\n*offset* : int, optional, Default=0\n\n- Specifies the number of seconds to skip in the audio for text extraction.  It defaults to beginning of recording.\n\n**Returns:** JSON object of summarized text.\n\n- The JSON contains the text summary.\n\n\n**14. maads.nlpocr(username,password,company,email, maads_rest_url,thefile,theserverfolder)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maads_rest_url* : string, required\n\n- Indicate location of MAADS PHP file in the webserver. \n\n*thefile* : string buffer, optional\n\n- The data file to be analysed. If this is not specified, then theserverfolder cannot be empty.\n\n*theserverfolder* : string buffer, optional\n\n- This is a folder in the server that MAADS will read for files.  This is convenient when you do not want to transfer large image or scanned files to the server. If this is not specified, then thefile cannot be empty.\n\n**Returns:** JSON object of summarized text.\n\n- The JSON contains the text summary.\n\n\n**15. maads.algoinfo(username,password,company,email,maads_rest_url,key)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maads_rest_url* : string, required\n\n- Indicates the url for the MAADS training server with main PHP file.\n\n*key* : string, required\n\n- The key to the optimal algorithm returned by dotraining function.\n\n**Returns:** JSON formatted information.\n\n- The information contains all of the key details associated with the algorithm.\n\n\n**16. maads.genpdf(username,password,company,email,maads_rest_url,key,urltomaadsserver,savetofolder)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maads_rest_url* : string, required\n\n- Indicates the url for the MAADS training server with main PHP file.\n\n*key* : string, required\n\n- The key to the optimal algorithm returned by dotraining function.\n\n*urltomaadsserver* : string, required\n\n- The website url to MAADS server.\n\n*savetofolder* : string, required\n\n- Your local folder names where you want the PDF saved.\n\n**Returns:** PDF file.\n\n- The PDF contains all of the key details associated with the algorithm.\n\n\n**17. maads.featureselectionjson(username,password,company,email,maads_rest_url,key)**\n\n**Parameters:**\t\n\n*username* : string buffer\n\n- The username given to you by system administrator.\n\n*password* : string buffer\n\n- The password given to you by system administrator.\n\n*company* : string buffer\n\n- Your company associated with your username.\n\n*email* : string buffer\n\n- Your email associated with your username.\n\n*maads_rest_url* : string, required\n\n- Indicates the url for the MAADS training server with main PHP file.\n\n*key* : string, required\n\n- The key to the optimal algorithm returned by dotraining function.\n\n**Returns:** JSON formatted information.\n\n- The information contains all of the key details associated with feature selection.\n\n**Simple Example**      \n\n#############################################################\n\nAuthor: Sebastian Maurice, PhD\n\nCopyright by Sebastian Maurice 2018\n\nAll rights reserved.\n\nEmail: Sebastian.maurice@otics.ca\n\n#############################################################\n\n\n** IMPORT THE MAAADS LIBRARY*\n import maads\n\n** IMPORT ADDITIONAL LIBRARY**\n import imp\n\n\n** LOAD ANY DATABASE LIBRARY TO STORE PREDICTIONS**\n sqlconn = imp.load_source('sqlconn','C:\\\\sqlsrvconnpython.py')\n\n** OPEN DATABASE CONNECTION**\n connection = sqlconn.doconnect()\n\n cur = connection.cursor()\n\n** TEST DATA    **   \n inputs = '1/12/2018,37.76896'\n\n username='demouser'\n\n password='XXXXX'\n\n pkey='demouser_test2log_csv'\n\n company='yourcompany'\n\n email='sebastian.maurice@otics.ca'\n\n url='/maads/remotemasstreamremote.php'\n\n\n** DO TRAINING - SERVER RETURNS A KEY THAT POINTS TO THE BEST ALGORITHM**\n thedata=maads.dotraining('C:\\\\test2log.csv',username,password,1,0,0,'depvar','yourcompany',email,url)\n\n** PARSE RETURNED DATA**\n pkey=maads.returndata(thedata,'PKEY:')\n\n algo=maads.returndata(thedata,'ALGO0:')\n\n accuracy=maads.returndata(thedata,'ACCURACY0:')\n\n** DO PREDICTIONS WITH THE RETURNED KEY**\n thepredictions=maads.dopredictions(0,pkey,inputs,username,'XXXXXX',company,email,url)\n\n** PARSE THE DATA**\n prediction=maads.returndata(thepredictions,'DATA:')\n\n\n** INSERT PREDICTIONS TO ANY DATABASE TABLE**\n forecastdate=inputs.split(',')[0]\n\n predictionvalue=prediction[2]\n\n accuracy=prediction[3]\n\n SQL=\"INSERT INTO PREDICTIONS VALUES('%s','%s','%s','%s','%s',%.3f,%.3f)\" % (forecastdate,username,pkey,company,inputs,predictionvalue,accuracy)\n\n cur.execute(SQL)\n\n cur.commit()\n\n** CLOSE THE DATABASE CONNECTION**\n cur.close()\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smaurice101/acnsmauricedsmas",
    "keywords": "multi-agent, data science, machine learning, automl,auto-ml,artificial intelligence,predictive analytics,advanced analytics",
    "license": "OTICS Advanced Analytics Inc.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maads",
    "package_url": "https://pypi.org/project/maads/",
    "platform": "",
    "project_url": "https://pypi.org/project/maads/",
    "project_urls": {
      "Homepage": "https://github.com/smaurice101/acnsmauricedsmas"
    },
    "release_url": "https://pypi.org/project/maads/3.15.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Multi-Agent Accelerator for Data Science",
    "version": "3.15.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10874975,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86465150797d756f2287f496bf9974c668dd11df8def9ddc28007185e91529a2",
        "md5": "b521591c65b03d77d7858dc349864d89",
        "sha256": "7b4232cb8d215a928731e16116c2c19eef26deb7f0f29fad349cf65490662afe"
      },
      "downloads": -1,
      "filename": "maads-3.15.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b521591c65b03d77d7858dc349864d89",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14355,
      "upload_time": "2020-02-25T18:11:22",
      "upload_time_iso_8601": "2020-02-25T18:11:22.418724Z",
      "url": "https://files.pythonhosted.org/packages/86/46/5150797d756f2287f496bf9974c668dd11df8def9ddc28007185e91529a2/maads-3.15.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bee82c820c2724e0668140327d389723705bc8b98d30367a4e2bcf93a7b363b9",
        "md5": "c3d8dea81da5a69e47acba0f801e2d04",
        "sha256": "2e983946081242432bc56cc7de03e79b0e29df46a135c1d9f07e0fe2d253975c"
      },
      "downloads": -1,
      "filename": "maads-3.15.7.tar.gz",
      "has_sig": false,
      "md5_digest": "c3d8dea81da5a69e47acba0f801e2d04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26777,
      "upload_time": "2020-02-25T18:11:24",
      "upload_time_iso_8601": "2020-02-25T18:11:24.152254Z",
      "url": "https://files.pythonhosted.org/packages/be/e8/2c820c2724e0668140327d389723705bc8b98d30367a4e2bcf93a7b363b9/maads-3.15.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}