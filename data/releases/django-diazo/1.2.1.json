{
  "info": {
    "author": "Douwe van der Meij, Job Ganzevoort",
    "author_email": "vandermeij@gw20e.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "============\nDjango Diazo\n============\n\nIntegrate Diazo in Django using WSGI middleware and add/change themes\nusing the Django Admin interface.\n\nThe code is maintained on GitHub (https://github.com/Goldmund-Wyldebeast-Wunderliebe/django-diazo).\n\n\n------------\nInstallation\n------------\n\nInstall the package::\n\n    pip install django-diazo\n\n~~~~~~~~~~~~\nsettings.py\n~~~~~~~~~~~~\n\nAdd the app to your project::\n\n    INSTALLED_APPS = (\n        ...\n        'adminsortable',\n        'django_diazo',\n        ...\n    )\n\nAdd middleware (or WSGI, see below)::\n\n    MIDDLEWARE_CLASSES += (\n        'django_diazo.middleware.DjangoDiazoMiddleware',\n        'django_diazo.contrib.cms.middleware.DjangoCmsDiazoMiddleware',  # Toolbar on/off switch, if you use Django CMS 3\n    )\n\nIf you want to know if Django-Diazo is turned on in your templates add::\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n        ...\n        'django_diazo.context_processors.diazo_enabled',\n    )\n\nThe variable ``DIAZO_ENABLED`` is now available in your templates.\n\n!! IMPORTANT !!\nNote that when using the Django middleware instrumentation the Diazo ``<notheme />`` rules won't work.\nYou have to provide regular expression patterns in ``Theme.pattern`` to prevent some pages (by url) to be themed.\nWhen you want to disable theming for certain pages by content based rules for ``<notheme />``, you need to use the\nWSGI middleware instead.\n\n~~~~~~~\nwsgi.py\n~~~~~~~\n\nIf you rather use WSGI than Django middleware or you have to (at the moment) since you use exotic ``<notheme />`` rules,\nadd the following lines to your ``wsgi.py`` file::\n\n    # Apply WSGI middleware here.\n    from django_diazo.wsgi import DiazoMiddlewareWrapper\n    application = DiazoMiddlewareWrapper(application)\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDatabase (South migrations)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMigrate the database::\n\n    python manage.py migrate django_diazo\n\n\n-----------------------\nCreate a built-in theme\n-----------------------\n\nYou might want to supply your Django application with an out-of-the-box\ntheme, probably also managed in a VCS.\n\nCreate a new app with a ``diazo.py`` file in its root. The contents of\nthis file is should be something like this::\n\n    from django_diazo.theme import DiazoTheme, registry\n\n    class SomeTheme(DiazoTheme):\n        name = 'Some Theme'\n        slug = 'some_theme'\n        pattern = '^(?!.*admin)'  # Theme everything but /admin\n    registry.register(SomeTheme)\n\nDon't forget to put your assets in the static folder, like an ``index.html`` and a ``rules.xml``. You can find a\n``rules.xml`` example in ``django_diazo/examples``.\n\nTo synchronize the built-in themes with the database/application run the\nfollowing command::\n\n    python manage.py syncthemes\n\n\n-------------\nUpload themes\n-------------\n\nBy default, the .zip files that are uploaded are extracted in the media\nfolder. You might want to serve these files via Django. Add the\nfollowing to your ``urls.py``::\n\n    urlpatterns += patterns('',\n        ...\n        url(r'^media/(?P<path>.*)$', 'django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),\n        ...\n    )\n\nFor production environments it is not recommended to serve files from\nthe media folder. This implementation only servers files in the\n``themes`` folder within the media folder but it would be better to\nserve these files using a web server and not via Django.\nThe same holds for your ``static`` folder.\n\n\n----------------------------\nExample themes / application\n----------------------------\n\nTake a look at https://github.com/Goldmund-Wyldebeast-Wunderliebe/django-diazo-themes and\nhttps://github.com/Goldmund-Wyldebeast-Wunderliebe/django-diazo-blog for examples of built-in themes and an integration\nexample.\n\nOur blog post http://www.goldmund-wyldebeast-wunderliebe.com/tech-blog/blog-posts/using-diazo-in-django also covers\nthese examples and some more background.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/django-diazo",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_diazo",
    "package_url": "https://pypi.org/project/django_diazo/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_diazo/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/django-diazo"
    },
    "release_url": "https://pypi.org/project/django_diazo/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Integrate Diazo in Django using WSGI middleware and\n    add/change themes using the Django Admin interface.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1614621,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df24034c15321a73e009711315fb7e6769a5131ed9dbf2c20634c0a1136b23c0",
        "md5": "edcf457cfc836d3793fb4eb519933f35",
        "sha256": "af1017e4dd8b26890e67494854bfe23f946695d41121488234955e8d8042226a"
      },
      "downloads": -1,
      "filename": "django_diazo-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "edcf457cfc836d3793fb4eb519933f35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 293785,
      "upload_time": "2015-01-24T15:15:52",
      "upload_time_iso_8601": "2015-01-24T15:15:52.045957Z",
      "url": "https://files.pythonhosted.org/packages/df/24/034c15321a73e009711315fb7e6769a5131ed9dbf2c20634c0a1136b23c0/django_diazo-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4104a13be69907cbf7ebf5e95d358dba70698d5ee0cd98d7503a417515f4eed",
        "md5": "dd0849ee3802e0e4a829d42c1acdc65f",
        "sha256": "bc52d1141a5a0052b63ee9a219edeb5ccf66669eb63014de9117e6641c0569fd"
      },
      "downloads": -1,
      "filename": "django_diazo-1.2.1.zip",
      "has_sig": false,
      "md5_digest": "dd0849ee3802e0e4a829d42c1acdc65f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 340743,
      "upload_time": "2015-01-24T15:24:23",
      "upload_time_iso_8601": "2015-01-24T15:24:23.181379Z",
      "url": "https://files.pythonhosted.org/packages/e4/10/4a13be69907cbf7ebf5e95d358dba70698d5ee0cd98d7503a417515f4eed/django_diazo-1.2.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}