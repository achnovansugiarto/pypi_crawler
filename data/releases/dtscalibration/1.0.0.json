{
  "info": {
    "author": "Bas des Tombe, Bart Schilperoort",
    "author_email": "bdestombe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "========\nOverview\n========\n\n\n\nA Python package to load raw DTS files, perform a calibration, and plot the result\n\n* Free software: BSD 3-Clause License\n\n\nInstallation\n============\n\n.. code-block:: zsh\n\n    pip install dtscalibration\n\nOr the development version directly from GitHub\n\n.. code-block:: zsh\n\n    pip install https://github.com/dtscalibration/python-dts-calibration/zipball/master --upgrade\n\nPackage features\n================\n* Advanced calibration routine\n   * Both single- and double-ended setups\n   * Confidence intervals of calibrated temperature\n   * Time integration of calibration parameters\n   * Fixing parameters to a previously determined value\n   * Weighted least-squares calibration\n* Dynamic reference section definition\n* Tools for merging and aligning double-ended setups\n* Data formats of most manufacturers are supported\n\nDevices currently supported\n===========================\n* Silixa Ltd.: **Ultima** & **XT-DTS** .xml files *(up to version 7.0)*\n* Sensornet Ltd.: **Oryx** & **Halo** .ddf files\n* AP Sensing: **CP320** .xml files *(single ended only)*\n* SensorTran: **SensorTran 5100** .dat binary files *(single ended only)*\n\nLearn by examples\n=================\nInteractively run the example notebooks online by clicking the example-notebooks button in the beginning of this README.\n\nDocumentation\n=============\n\nhttps://python-dts-calibration.readthedocs.io/\n\n\nChangelog\n=========\n1.0.0 (2020-03-30)\n------------------\n* First major release\n* Reduced flexibility in defining names under which the Stokes are stored\n* 4 Averaging functions implemented, with uncertainty estimation. Seenotebook 16 for the various options\n* Notebook about transient attenuation caused by for example connectors\n* Bug in singel ended transient attenuation\n* Check for consistent number of measurement locations across read files\n\n0.9.2 (2020-03-17)\n------------------\n* Reduced flexibility in defining Stokes labels\n\n0.9.1 (2020-03-17)\n------------------\n* Same as 0.9.2\n\n0.9.0 (2020-03-16)\n------------------\n* Increased precision of least squares solver, as this was limiting theprecision of the parameter estimation\n* The variance of the noise in the Stokes can change linear with the intensity\n* Improved residuals plot function\n* Reduced the number of equations for double ended calibration\n* Support for transient attenuation due to connectors along fibers\n* Matching sections\n\n0.8.0 (2020-02-14)\n------------------\n* Valentine edition\n* Added example for fixing parameters\n* Bug fixed in routine for reading Sensornet files (Bor van der Scheer)\n* Official support for Python 3.8\n* When the datastore is printed to the screen, the mean and std of thereference temperature is plotted\n* Integrated differential attenuation is reformulated. Starts integrating atthe first reference section location.\n* Estimation of the variance of the Stokes that is linear dependent on theintensity (Poisson)\n* Removed `__slots__` attribute\n\n0.7.4 (2020-01-26)\n------------------\n* Update automated zenodo reference requires to draft a new release\n\n0.7.3 (2020-01-24)\n------------------\n* Solved xlim in subplots of plot_residuals_reference_sections funciton\n* Solved YAML deprecation related problems\n* Introduced new approach for double ended calibration, with a different Cfor the forward and backward channel\n* First code added for time variant asymmetric attenuation, such as connectors.\n* First code added for matching sections\n\n0.7.2 (2019-11-22)\n------------------\n* Set alpha and or gamma to known value, with corresponding variance.\n* Bug in computation of the weights for single and double-ended calibration\n* Added notebook about merging two single ended measurements\n* Added example notebook on how to create a custom datastore\n* Added notebook examples for loading in data from the different manufa..\n* Loading AP Sensing files and tests\n* Loading Sensortran files\n\n0.7.0 (2019-11-07)\n------------------\n* Ensure order of dimension upon initialization of DataStore. Resamplingwould lead to issues\n* Bug in section definition (reported by Robert Law)\n* Rewritten calibration solvers to align with article of this package\n* Removed old calibration solvers\n* New possibilities of saving and loading large DataStores saved to multiplenetCDF files\n\n0.6.7 (2019-11-01)\n------------------\n* Use twine to check if the compiled package meets all the requirements of Pypi\n\n0.6.6 (2019-11-01)\n------------------\n* Use twine to check if the compiled package meets all the requirements of Pypi\n\n0.6.5 (2019-11-01)\n------------------\n* Major bug fix version.\n* More flexibility in defining the time and space dimensions\n* Fixed unsave yaml loading\n* Added support for Silixa 7 files\n* Start using `__slots__` as it is something new\n* xarray doesn't have the attribute `._initialized` anymore. Rewritten teststo make more sense by checking the sum of the Stokes instead.\n* Support for double ended Sensornet files and tests\n* Bug fixing\n\n0.6.4 (2019-04-09)\n------------------\n* More flexibility in defining the time dimension\n* Cleanup of some plotting functions\n\n0.6.3 (2019-04-03)\n------------------\n* Added reading support for zipped silixa files. Still rarely fails due to upstream bug.\n* pretty __repr__\n* Reworked double ended calibration procedure. Integrated differential attenuation outside of reference sections is now calculated seperately.\n* New approach for estimation of Stokes variance. Not restricted to a decaying exponential\n* Bug in averaging TMPF and TMPB to TMPW\n* Modified residuals plot, especially useful for long fibers (Great work Bart!)\n* Example notebooks updatred accordingly\n* Bug in `to_netcdf` when passing encodings\n* Better support for sections that are not related to a timeseries.\n\n0.6.2 (2019-02-26)\n------------------\n* Double-ended weighted calibration procedure is rewritten so that the integrated differential attenuation outside of the reference sections is calculated seperately. Better memory usage and faster\n* Other calibration routines cleaned up\n* Official support for Python 3.7\n* Coverage figures are now trustworthy\n* String representation improved\n* Include test for aligning double ended measurements\n* Example for aligning double ended measurements\n\n0.6.1 (2019-01-04)\n------------------\n* Many examples were shown in the documentation\n* Fixed verbose settings of solvers\n* Revised example notebooks\n* Moved to 80 characters per line (PEP)\n* More Python formatting using YAPF\n* Use example of `plot_residuals_reference_sections` function in Stokes variance example notebook\n* Support Python 3.7\n\n0.6.0 (2018-12-08)\n------------------\n* Reworked the double-ended calibration routine and the routine for confidence intervals. The integrated differential attenuation is not zero at x=0 anymore.\n* Verbose commands carpentry\n* Bug fixed that would make the read_silixa routine crash if there are copies of the same file in the same folder\n* Routine to read sensornet files. Only single-ended configurations supported for now. Anyone has double-ended measurements?\n* Lazy calculation of the confidence intervals\n* Bug solved. The x-coordinates where not calculated correctly. The bug only appeared for measurements along long cables.\n* Example notebook of importing a timeseries. For example, importing measurments from an external temperature sensor for calibration.\n* Updated documentation\n\n\n0.5.3 (2018-10-26)\n------------------\n* No changes\n\n0.5.2 (2018-10-26)\n------------------\n* New resample_datastore method (see basic usage notebook)\n* New notebook on basic usage of DataStore\n* Support for Silixa v4 (Windows xp based system) and Silixa v6 (Windows 7) measurement files\n* The representation string now includes the sections\n* Reorganized the IO related files\n* CI: Add appveyor to continuesly test on Windows platform\n* Auto load Silixa files to memory option, if size is small\n\n0.5.1 (2018-10-19)\n------------------\n* Rewritten the routine that reads Silixa measurement files\n* dts-calibration is now citable\n* Refractored the MC confidence interval routine\n* MC confidence interval routine speed up, with full dask support\n* Link to mybinder.org to try the example notebooks online\n* Added a few missing dependencies\n* The routine to read the Silixa files is completely refractored. Faster, smarter. Supports both the path to a directory and a list of file paths.\n* Changed imports from dtscalibration to be relative\n\n0.4.0 (2018-09-06)\n------------------\n* Single ended calibration\n* Confidence intervals for single ended calibration\n* Example notebooks have figures embedded\n* Several bugs squashed\n* Reorganized DataStore functions\n\n\n0.2.0 (2018-08-16)\n------------------\n* Double ended calibration\n* Confidence intervals for double ended calibration\n\n\n0.1.0 (2018-08-01)\n------------------\n* First release on PyPI.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dtscalibration/python-dts-calibration",
    "keywords": "DTS,Calibration",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtscalibration",
    "package_url": "https://pypi.org/project/dtscalibration/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtscalibration/",
    "project_urls": {
      "Homepage": "https://github.com/dtscalibration/python-dts-calibration"
    },
    "release_url": "https://pypi.org/project/dtscalibration/1.0.0/",
    "requires_dist": [
      "numpy",
      "xarray",
      "pyyaml",
      "xmltodict",
      "scipy",
      "patsy",
      "statsmodels",
      "nbsphinx",
      "dask",
      "toolz",
      "matplotlib",
      "netCDF4",
      "pandas (>=0.24.1)",
      "cloudpickle",
      "nbformat"
    ],
    "requires_python": ">= 3.6",
    "summary": "A Python package to load raw DTS files, perform a calibration, and plot the result",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15205620,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2edcc69ec878348c3b5fae60a19cb4efc41f7d419b3175a58ef8b0b1f25a4ff",
        "md5": "ee9d41b5c78b864421547c8f69dfbeea",
        "sha256": "c860063cb435cfc2d8ed43373bc8004aa813796f5cd0b2a8b4b79fba839d8aa1"
      },
      "downloads": -1,
      "filename": "dtscalibration-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee9d41b5c78b864421547c8f69dfbeea",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">= 3.6",
      "size": 72118,
      "upload_time": "2020-03-30T11:51:20",
      "upload_time_iso_8601": "2020-03-30T11:51:20.344610Z",
      "url": "https://files.pythonhosted.org/packages/f2/ed/cc69ec878348c3b5fae60a19cb4efc41f7d419b3175a58ef8b0b1f25a4ff/dtscalibration-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08a282d8745922bbe586dff962342299a4a70de40d8531685616a38fa7d68ee0",
        "md5": "4b006a8ffe7b319796fbb0b071f416e3",
        "sha256": "e0939293e90ae0e5f699e4f2e70cbba2442e5cc456b4fdd9c7227f8ca854a335"
      },
      "downloads": -1,
      "filename": "dtscalibration-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4b006a8ffe7b319796fbb0b071f416e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 7050759,
      "upload_time": "2020-03-30T11:51:24",
      "upload_time_iso_8601": "2020-03-30T11:51:24.956093Z",
      "url": "https://files.pythonhosted.org/packages/08/a2/82d8745922bbe586dff962342299a4a70de40d8531685616a38fa7d68ee0/dtscalibration-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}