{
  "info": {
    "author": "Lumigo LTD (https://lumigo.io)",
    "author_email": "support@lumigo.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Lumigo OpenTelemetry Distro for Python :stars:\n\n[![Tracer Testing](https://github.com/lumigo-io/opentelemetry-python-distro/actions/workflows/push-actions.yml/badge.svg)](https://github.com/lumigo-io/opentelemetry-python-distro/actions/workflows/push-actions.yml)\n![Version](https://badge.fury.io/py/lumigo_opentelemetry.svg)\n\nThe Lumigo OpenTelemetry Distribution for Python is a package that provides no-code distributed tracing for containerized applications.\n\nThe Lumigo OpenTelemetry Distribution for Python is made of several upstream OpenTelemetry packages, with additional automated quality-assurance and customizations that optimize for no-code injection, meaning that you should need to update exactly zero lines of code in your application in order to make use of the Lumigo OpenTelemetry Distribution.\n(See the [No-code instrumentation](#no-code-instrumentation) section for auto-instrumentation instructions)\n\n**Note:** If you are looking for the Lumigo Python tracer for AWS Lambda functions, [`lumigo-tracer`](https://pypi.org/project/lumigo-tracer/) is the package you should use instead.\n\n## Setup\n\nAdding the Lumigo OpenTelemetry Distro for Python to your application is a three-step process:\n\n1. [Add the Lumigo OpenTelemetry Distro for Python as dependency](#add-lumigo_opentelemetry-as-dependency)\n2. [Provide configurations through environment variables](#environment-based-configuration)\n3. [Activate the tracer](#tracer-activation), which can also be achieved through environment variables\n\n### Add lumigo_opentelemetry as dependency\n\nThe [`lumigo_opentelemetry` package](https://pypi.org/project/lumigo_opentelemetry/) needs to be a dependency of your application.\nIn most cases, you will add `lumigo_opentelemetry` as a line in `requirements.txt`:\n\n```txt\nlumigo_opentelemetry\n```\n\nOr, you may use `pip`:\n\n```sh\npip install lumigo_opentelemetry\n```\n\n### Environment-based configuration\n\nConfigure the `LUMIGO_TRACER_TOKEN` environment variable with the token value generated for you by the Lumigo platform, under `Settings --> Tracing --> Manual tracing`:\n\n```console\nLUMIGO_TRACER_TOKEN=<token>\n```\n\nReplace `<token>` below with the token generated for you by the Lumigo platform.\n\nIt is also strongly suggested that you set the `OTEL_SERVICE_NAME` environment variable with, as value, the service name you have chosen for your application:\n\n```console\nOTEL_SERVICE_NAME=<service name>\n```\n\nReplace `<service name> with the desired name of the service`.\n\n**Note:** While you are providing environment variables for configuration, consider also providing the one needed for [no-code tracer activation](#no-code-activation) :-)\n\n### Tracer activation\n\nThere are two ways to activate the `lumigo_opentelemetry` package: one based on importing the package in code (manual activation), and the other via the environment (no-code activation).\nThe [no-code activation](#no-code-activation) approach is the preferred one.\n\n#### No-code activation\n\n**Note:** The instructions in this section are mutually exclusive with those provided in the [Manual instrumentation](#manual-activation) section.\n\nSet the following environment variable:\n\n```console\nAUTOWRAPT_BOOTSTRAP=lumigo_opentelemetry\n```\n\n#### Manual activation\n\n**Note:** The instructions in this section are mutually exclusive with those provided in the [No-code activation](#no-code-activation) section.\n\nImport `lumigo_opentelemetry` at the beginning of your main file:\n\n```python\nimport lumigo_opentelemetry\n```\n\n## Configuration\n\n### OpenTelemetry configurations\n\nThe Lumigo OpenTelemetry Distro for Python is made of several upstream OpenTelemetry packages, together with additional logic and, as such, the environment variables that work with \"vanilla\" OpenTelemetry work also with the Lumigo OpenTelemetry Distro for Python. Specifically supported are:\n\n* [General configurations](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md#general-sdk-configuration)\n* [Batch span processor configurations](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md#batch-span-processor): The Lumigo OpenTelemetry Distro for Python uses a batch processor for sending data to Lumigo.\n\n### Lumigo-specific configurations\n\nThe `lumigo_opentelemetry` package additionally supports the following configuration options as environment variables:\n\n* `LUMIGO_TRACER_TOKEN`: [Required] Required configuration to send data to Lumigo; you will find the right value in Lumigo under `Settings -> Tracing -> Manual tracing`.\n* `LUMIGO_DEBUG=TRUE`: Enables debug logging\n* `LUMIGO_DEBUG_SPANDUMP`: path to a local file where to write a local copy of the spans that will be sent to Lumigo; this option handy for local testing but **should not be used in production** unless you are instructed to do so by Lumigo support.\n* `LUMIGO_SECRET_MASKING_REGEX=[\"regex1\", \"regex2\"]`: Prevents Lumigo from sending keys that match the supplied regular expressions. All regular expressions are case-insensitive. By default, Lumigo applies the following regular expressions: `[\".*pass.*\", \".*key.*\", \".*secret.*\", \".*credential.*\", \".*passphrase.*\"]`.\n* `LUMIGO_SWITCH_OFF=TRUE`: This option disables the Lumigo OpenTelemetry distro entirely; no instrumentation will be injected, no tracing data will be collected. \n\n## Supported runtimes\n\n* cpython: 3.7.x, 3.8.x, 3.9.x, 3.10.x\n\n## Supported packages\n\n| Instrumentation | Package | Supported Versions |\n| --- | --- | --- |\n| botocore | [boto3](https://pypi.org/project/boto3) | 1.17.22~1.24.35 |\n| fastapi | [fastapi](https://pypi.org/project/fastapi) | 0.56.1~0.79.0 |\n| | [uvicorn](https://pypi.org/project/uvicorn) | 0.11.3~0.18.2 |\n| flask | [flask](https://pypi.org/project/flask) | 2.0.0~2.2.2 |\n| pymongo | [pymongo](https://pypi.org/project/pymongo) | 3.10.0~3.12.3 |\n| pymysql | [pymysql](https://pypi.org/project/pymysql) | 0.9.0~0.10.1 |\n| | | 1.0.0~1.0.2 |\n\n## Baseline setup\n\nThe Lumigo OpenTelemetry Distro will automatically create the following OpenTelemetry constructs provided to a `TraceProvider`.\n\n### Resource attributes\n\n#### SDK resource attributes\n\n* The attributes from the default resource:\n  * `telemetry.sdk.language`: `python`\n  * `telemetry.sdk.name`: `opentelemetry`\n  * `telemetry.sdk.version`: depends on the version of the `opentelemetry-sdk` included in the [dependencies](./setup.py)\n\n* The `lumigo.distro.version` containing the version of the Lumigo OpenTelemetry Distro for Python as specified in the [VERSION file](./src/lumigo_opentelemetry/VERSION)\n\n#### Process resource attributes\n\n* The following `process.runtime.*` attributes as specified in the [Process Semantic Conventions](https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/process/#process-runtimes):\n  * `process.runtime.description`\n  * `process.runtime.name`\n  * `process.runtime.version`\n\n* A non-standard `process.environ` resource attribute, containing a stringified representation of the process environment, with environment variables scrubbed based on the [`LUMIGO_SECRET_MASKING_REGEX`](#lumigo-specific-configurations) configuration.\n\n#### Amazon ECS resource attributes\n\nIf the instrumented Python application is running on the Amazon Elastic Container Service (ECS):\n  * `cloud.provider` attribute with value `aws`\n  * `cloud.platform` with value `aws_ecs`\n  * `container.name` with the hostname of the ECS Task container\n  * `container.id` with the ID of the Docker container (based on the cgroup id)\n\nIf the ECS task uses the ECS agent v1.4.0, and has therefore access to the [Task metadata endpoint version 4](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint-v4.html), the following experimental attributes as specified in the [AWS ECS Resource Attributes](https://github.com/open-telemetry/opentelemetry-specification/blob/42081e023b3827d824c45031e3ccd19318ff3411/specification/resource/semantic_conventions/cloud_provider/aws/ecs.md) specification:\n\n  * `aws.ecs.container.arn`\n  * `aws.ecs.cluster.arn`\n  * `aws.ecs.launchtype`\n  * `aws.ecs.task.arn`\n  * `aws.ecs.task.family`\n  * `aws.ecs.task.revision`\n\n### Span exporters\n\n* If the `LUMIGO_TRACER_TOKEN` environment variable is set: a [BatchSpanProcessor](https://github.com/open-telemetry/opentelemetry-python/blob/25771ecdac685a5bf7ada1da21092d2061dbfc02/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L126), which uses an [`OTLPSpanExporter`](https://github.com/open-telemetry/opentelemetry-python/blob/50093f220f945ae38e769ab539c78c975e582bef/exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/trace_exporter/__init__.py#L55) to push tracing data to Lumigo\n* If the `LUMIGO_DEBUG_SPANDUMP` environment variable is set: a [`SimpleSpanProcessor`](https://github.com/open-telemetry/opentelemetry-python/blob/25771ecdac685a5bf7ada1da21092d2061dbfc02/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L79), which uses an [`ConsoleSpanExporter`](https://github.com/open-telemetry/opentelemetry-python/blob/25771ecdac685a5bf7ada1da21092d2061dbfc02/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L415) to save to file the spans collected. Do not use this in production!\n\n### SDK configuration\n\n* The following [SDK environment variables](https://opentelemetry.io/docs/reference/specification/sdk-environment-variables/) are supported:\n  * `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`\n  * `OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT`\n\n  ** If the `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT` environment variable is not set, the span attribute size limit will be taken from `OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT` environment variable. The default size limit when both are not set is 2048.  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lumigo-io/opentelemetry-python-distro",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lumigo-opentelemetry",
    "package_url": "https://pypi.org/project/lumigo-opentelemetry/",
    "platform": null,
    "project_url": "https://pypi.org/project/lumigo-opentelemetry/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lumigo-io/opentelemetry-python-distro/issues",
      "Homepage": "https://github.com/lumigo-io/opentelemetry-python-distro"
    },
    "release_url": "https://pypi.org/project/lumigo-opentelemetry/1.0.17/",
    "requires_dist": [
      "asgiref (~=3.0)",
      "autowrapt (>=1.0)",
      "packaging (>=21.3)",
      "protobuf (<4.0.0,>=3.13.0)",
      "wrapt (>=1.11.0)",
      "opentelemetry-api (==1.9.1)",
      "opentelemetry-sdk (==1.9.1)",
      "opentelemetry-sdk-extension-aws (==2.0.1)",
      "opentelemetry-exporter-otlp-proto-http (==1.9.1)",
      "opentelemetry-semantic-conventions (==0.28b1)",
      "opentelemetry-instrumentation (==0.28b1)",
      "opentelemetry-instrumentation-aiohttp-client (==0.28b1)",
      "opentelemetry-instrumentation-aiopg (==0.28b1)",
      "opentelemetry-instrumentation-asgi (==0.28b1)",
      "opentelemetry-instrumentation-asyncpg (==0.28b1)",
      "opentelemetry-instrumentation-boto (==0.28b1)",
      "opentelemetry-instrumentation-botocore (==0.28b1)",
      "opentelemetry-instrumentation-django (==0.28b1)",
      "opentelemetry-instrumentation-elasticsearch (==0.28b1)",
      "opentelemetry-instrumentation-falcon (==0.28b1)",
      "opentelemetry-instrumentation-fastapi (==0.28b1)",
      "opentelemetry-instrumentation-flask (==0.28b1)",
      "opentelemetry-instrumentation-grpc (==0.28b1)",
      "opentelemetry-instrumentation-httpx (==0.28b1)",
      "opentelemetry-instrumentation-jinja2 (==0.28b1)",
      "opentelemetry-instrumentation-kafka-python (==0.28b1)",
      "opentelemetry-instrumentation-logging (==0.28b1)",
      "opentelemetry-instrumentation-mysql (==0.28b1)",
      "opentelemetry-instrumentation-pika (==0.28b1)",
      "opentelemetry-instrumentation-psycopg2 (==0.28b1)",
      "opentelemetry-instrumentation-pymemcache (==0.28b1)",
      "opentelemetry-instrumentation-pymongo (==0.28b1)",
      "opentelemetry-instrumentation-pymysql (==0.28b1)",
      "opentelemetry-instrumentation-pyramid (==0.28b1)",
      "opentelemetry-instrumentation-redis (==0.28b1)",
      "opentelemetry-instrumentation-requests (==0.28b1)",
      "opentelemetry-instrumentation-sklearn (==0.28b1)",
      "opentelemetry-instrumentation-sqlite3 (==0.28b1)",
      "opentelemetry-instrumentation-tornado (==0.28b1)",
      "opentelemetry-instrumentation-urllib (==0.28b1)",
      "opentelemetry-instrumentation-urllib3 (==0.28b1)",
      "opentelemetry-instrumentation-wsgi (==0.28b1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Lumigo OpenTelemetry Distribution for Python",
    "version": "1.0.17",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17381071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f78847b6d7a3f217b3acc1395858432561fad8025621db5e63067d83f8c70538",
        "md5": "da34d8941da49e12bcc9adeaebaedd2a",
        "sha256": "55703ea1c1730da97cbb74bbc6eb8298efa6c749a0c80104e4c5b90487f007de"
      },
      "downloads": -1,
      "filename": "lumigo_opentelemetry-1.0.17-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da34d8941da49e12bcc9adeaebaedd2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 50517,
      "upload_time": "2022-08-16T12:20:28",
      "upload_time_iso_8601": "2022-08-16T12:20:28.591946Z",
      "url": "https://files.pythonhosted.org/packages/f7/88/47b6d7a3f217b3acc1395858432561fad8025621db5e63067d83f8c70538/lumigo_opentelemetry-1.0.17-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}