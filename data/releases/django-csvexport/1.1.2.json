{
  "info": {
    "author": "Martin Sandstr√∂m",
    "author_email": "martin@marteinn.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.org/marteinn/django-csvexport.svg?branch=master)](https://travis-ci.org/marteinn/django-csvexport)\n[![PyPI version](https://badge.fury.io/py/django-csvexport.svg)](http://badge.fury.io/py/django-csvexport)\n\n# Django-CSVExport\n\nThis is a django extension that simplifies model to csv conversions.\n\n\n## Requirements\n- Python 2.7 / 3.3+\n- Django 1.8+\n\n\n## Example:\n\n### Simple usage:\n\nGenerate csv string from a model:\n\n```python\nfrom csvexport.exports import ModelCSVExporter\n\nrecords = Record.objects.all()\nexp = ModelExporter(queryset=records)\nf = exp.to_string()\n```\n\n### With specified fields\n\nSame as the previous example, but only expose certain fields:\n\n```python\nfrom csvexport.exports import ModelCSVExporter\n\nclass RecordExporter(ModelCSVExporter):\n    class Meta:\n        fields = [\"album\", \"slug\"]\n        exclude = [\"id\"]\n\n\nrecords = Record.objects.all()\nexp = RecordExporter(queryset=records)\nf = exp.to_string()\n```\n\n### Generating a csv from a view:\n\nThis is a example how you could generate a downloadable csv by requesting a view, using the `render_to_csv` helper.\n\n**urls.py**\n\n```python\nurl(r'^csv/$', 'app.views.gen_csv'),\n```\n\n**views.py**\n\n```python\ndef gen_csv(request):\n    from csvexport.exporters import ModelExporter\n    from csvexport.utils import render_to_csv\n    records = Record.objects.all()\n    exp = ModelExporter(queryset=records)\n    return render_to_csv(exp)\n```\n\n### With custom hydration\n\nIt is also possible to create a custom csv object:\n\n```python\nclass RecordExporter(ModelExporter):\n    class Meta:\n        fields = [\"artist\", \"title\", \"release_year\", \"format\", \"quality\",\n                  \"record_label\", \"comment\", \"venue\", \"url\"]\n\n    def hydrate_entry(self, entry):\n        venue_name = \"\"\n\n        if entry.venue:\n            venue_name = entry.venue.name\n\n        return {\n            \"artist\": entry.album.artist.name,\n            \"title\": entry.album.name,\n            \"release_year\": entry.album.release_year,\n            \"format\": entry.format,\n            \"quality\": entry.quality,\n            \"record_label\": entry.record_label,\n            \"comment\": entry.comment,\n            \"venue\": venue_name,\n        }\n\n\nrecords = Record.objects.all()\nexp = RecordExporter(queryset=records)\nf = exp.to_string()\n\n```\n\n\n## Installation\n\ndjango-csvexport can easily be installed through pip.\n\n    $ pip install django-csvexport\n\n\n## Tests\n\nThis library include tests, just run `python runtests.py`.\n\nYou can also run separate test cases: `runtests.py tests.ViewTestCase`\n\n\n## Contributing\n\nWant to contribute? Awesome. Just send a pull request.\n\n\n## License\n\nDjango-CSVExport is released under the [MIT License](http://www.opensource.org/licenses/MIT).\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marteinn/django-csvexport",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-csvexport",
    "package_url": "https://pypi.org/project/django-csvexport/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-csvexport/",
    "project_urls": {
      "Homepage": "https://github.com/marteinn/django-csvexport"
    },
    "release_url": "https://pypi.org/project/django-csvexport/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple model to csv conversions for Django.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3846413,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "809a66008e64f308c98882ceb5eb96474b2f585c8bc3e919162ee54dd5655601",
        "md5": "6dc9f98f5f819ec9457c533940314c1d",
        "sha256": "9d6cdfe8816677a8fe0a4439c82d6e02bb69dea5b06f9a4844e28b0983cce6a8"
      },
      "downloads": -1,
      "filename": "django-csvexport-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6dc9f98f5f819ec9457c533940314c1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5080,
      "upload_time": "2017-04-09T09:20:20",
      "upload_time_iso_8601": "2017-04-09T09:20:20.542687Z",
      "url": "https://files.pythonhosted.org/packages/80/9a/66008e64f308c98882ceb5eb96474b2f585c8bc3e919162ee54dd5655601/django-csvexport-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}