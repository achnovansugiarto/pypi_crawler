{
  "info": {
    "author": "Carl J. Nobile",
    "author_email": "carl.nobile@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "====================================\nDjango Tool to Create Dynamic Fields\n====================================\n\n.. image:: http://img.shields.io/pypi/v/django-dcolumns.svg\n   :target: https://pypi.python.org/pypi/django-dcolumns\n   :alt: PyPI Version\n\n.. image:: https://img.shields.io/pypi/pyversions/django-dcolumns.svg\n   :target: https://pypi.python.org/pypi/django-dcolumns\n   :alt: PY Versions\n\n.. image:: http://img.shields.io/travis/cnobile2012/dcolumn/master.svg\n   :target: http://travis-ci.org/cnobile2012/dcolumn\n   :alt: Build Status\n\n.. image:: http://img.shields.io/coveralls/cnobile2012/dcolumn/master.svg\n   :target: https://coveralls.io/r/cnobile2012/dcolumn\n   :alt: Test Coverage\n\nThe MIT License (MIT)\n\nOverview\n--------\n\nAt the time of this writing **DColumn** supports Django 2.x and probably\nback to 1.8.0. The biggest issue with supporting older versions of Django\nis with the new way *urlpatterns* is used. Python 2.7, 3.4, 3.5 and 3.6\nare supported.\n\nDColumn is a Django plugin that lets the developer add columns to a model\ndynamically. It does this in the same way that the admin uses an inline model.\nMatter-of-fact that is exactly how the additional columns are displayed in\nthe admin. The only addition is that there is special JavaScript that\nconverts the column type to the type you have previously set it to.\n\nThis can be done, because any type of field can be represented as a string.\nThere are two methods on any model you define as a **Dcolumn** model that\ndoes conversion in and out of the type you have set.\n\n.. warning::\n   Version 2.0 is a partial rewrite of **Django DColumns** and is NOT\n   backwards compatible with previous versions. It now needs to use fields\n   defined in user forms. The latest releases of Django would not work\n   with the old way Dcolumns had previously handled fields. This is\n   actually better as it is now more consistent with how Django does\n   things.\n\nProvides\n--------\n\n1. Functionality to permit the addition of fields to a model through the\n   admin.\n\n2. Add pseudo models for static data objects.\n\n3. The admin reflects all newly added fields in the correct type.\n\n\nFeel free to contact me at: carl dot nobile at gmail.com\n\nComplete Documentation can be found on\n`Read the Docs <https://readthedocs.org/>`_ at:\n`Django DColumns <http://django-dcolumns.readthedocs.io/en/latest/>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cnobile2012/dcolumn",
    "keywords": "Django DColumns",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dcolumns",
    "package_url": "https://pypi.org/project/django-dcolumns/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dcolumns/",
    "project_urls": {
      "Homepage": "https://github.com/cnobile2012/dcolumn",
      "Source": "https://github.com/cnobile2012/dcolumn"
    },
    "release_url": "https://pypi.org/project/django-dcolumns/2.0.0/",
    "requires_dist": [
      "django",
      "dateutils",
      "python-dateutil"
    ],
    "requires_python": "",
    "summary": "An app to give any Django database model the ability to dynamically add fields.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10395256,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c06cf684aae30e6102cdd5787444ffe4b87653092b64099085e50b3ab58a0870",
        "md5": "05ebe12e98dd310192522cff56d30759",
        "sha256": "32a2851c3350cbc6f02ff28ff2947db40dc4e6fdbe568a6d3a86f8f41af00688"
      },
      "downloads": -1,
      "filename": "django_dcolumns-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "05ebe12e98dd310192522cff56d30759",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 48413,
      "upload_time": "2018-04-29T03:24:54",
      "upload_time_iso_8601": "2018-04-29T03:24:54.045774Z",
      "url": "https://files.pythonhosted.org/packages/c0/6c/f684aae30e6102cdd5787444ffe4b87653092b64099085e50b3ab58a0870/django_dcolumns-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1feba792c5cc38fea93cb2b200c173e4f68b9d0d9e3d635e8789463978be1a03",
        "md5": "51e429d0d135043bf20cf1ca41ac6d66",
        "sha256": "c3cdcc6402756e733defe279a2c452f0b3446e750a1ea823e50d890b4bfa8e50"
      },
      "downloads": -1,
      "filename": "django-dcolumns-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "51e429d0d135043bf20cf1ca41ac6d66",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37528,
      "upload_time": "2018-04-29T03:24:55",
      "upload_time_iso_8601": "2018-04-29T03:24:55.426305Z",
      "url": "https://files.pythonhosted.org/packages/1f/eb/a792c5cc38fea93cb2b200c173e4f68b9d0d9e3d635e8789463978be1a03/django-dcolumns-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}