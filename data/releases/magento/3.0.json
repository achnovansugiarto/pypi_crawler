{
  "info": {
    "author": "Sharoon Thomas, Openlabs Technologies",
    "author_email": "info@fulfil.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Magento Python API\n==================\n\nPython library to connect to Magento Webservices.\n\nUsage\n-----\n\n.. code-block:: python\n\n    import magento\n\n    url = 'http://domain.com/'\n    apiuser = 'user'\n    apipass = 'password'\n\n    # Create an instance of API\n    client = magento.API(url, apiuser, apipass)\n\n    # A filter expression as dictionary. \n    order_filter = {'created_at':{'from':'2011-09-15 00:00:00'}}\n    products = client.product.list(order_filter)\n\n    # Get a list of product types\n    product_types = client.product_types.list()\n        \n    # Get a specific product\n    sku = 'prod1'\n    product = client.product.info(sku)\n\n    # Add comment to an order\n    order_increment_id = '100000001 '\n    status = 'canceled'\n    client.order.addcomment(order_increment_id, status)\n\n\nAll available APIs\n-------------------\n\n* Cart (`client.cart`)\n* CartCoupon (`client.cart_coupon`)\n* CartCustomer (`client.cart_customer`)\n* CartPayment (`client.cart_payment`)\n* CartProduct (`client.cart_product`)\n* CartShipping (`client.cart_shipping`)\n* Category (`client.category`)\n* CategoryAttribute (`client.category_attribute`)\n* Country (`client.country`)\n* CreditMemo (`client.credit_memo`)\n* Customer (`client.customer`)\n* CustomerAddress (`client.customer_address`)\n* CustomerGroup (`client.customer_group`)\n* Inventory (`client.inventory`)\n* Invoice (`client.invoice`)\n* Magento (`client.magento`)\n* Order (`client.order`)\n* Product (`client.product`)\n* ProductAttribute (`client.product_attribute`)\n* ProductAttributeSet (`client.product_attribute_set`)\n* ProductConfigurable (`client.product_configurable`)\n* ProductImages (`client.product_images`)\n* ProductLinks (`client.product_links`)\n* ProductTierPrice (`client.product_tier_price`)\n* ProductTypes (`client.product_types`)\n* Region (`client.region`)\n* Shipment (`client.shipment`)\n* Store (`client.store`)\n\nOld deprecated example\n----------------------\n\nThe API was originally written with the requirement to call APIs\nindividually with all the credentials. This led to very verbose code and a\nlot of repitition. While the behavior has not been deprecated, it is\nrecommended to write all new code with the pattern shown in the above\nexample.\n\n.. code-block:: python\n\n    import magento\n\n    url = 'http://domain.com/'\n    apiuser = 'user'\n    apipass = 'password'\n\n    with magento.Order(url, apiuser, apipass) as order_api:\n        order_increment_id = '100000001 '\n        status = 'canceled'\n        order_api.addcomment(order_increment_id, status)\n\n    with magento.Store(url, apiuser, apipass) as store_api:\n        store_id = '1'\n        store_view_info = store_api.info(store_id)\n        store_views = store_api.list()\n\n     with magento.Magento(url, apiuser, apipass) as magento_api:\n        magento_info = magento_api.info()\n\n\nCalling custom classes from your own API extensions\n---------------------------------------------------\n\nYou can ddirectly invoke the underlying `call` method\nto make calls directly.\n\n.. code-block:: python\n\n    result = client.call('custom_model.list', [])\n\n\nAlternatively, you can also build sub classes of API to have\na more pythonic structure. The subclasses are automatically\nregistered with API when classes are created. \n\nTo ensure that they are registered before you create the first API\ninstance, always have all your imports on the top of your magento module.\n\n.. code-block:: python\n\n    class CustomModel(API):\n        def list(self):\n            return self.call('custom_model.list', [])\n\nwhich would be automatically registered as `custom_model` by the API\nmetaclass. So you can now use\n\n.. code-block:: python\n\n    import magento\n    from my_custom_module import CustomModel\n\n    url = 'http://domain.com/'\n    apiuser = 'user'\n    apipass = 'password'\n\n    # Create an instance of API\n    client = magento.API(url, apiuser, apipass)\n    \n    client.custom_model.list()\n\n\nLicense\n-------\n\nBSD 3-Clause\n\nSee LICENSE for more details\n",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/magento/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fulfilio/magento/",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magento",
    "package_url": "https://pypi.org/project/magento/",
    "platform": "any",
    "project_url": "https://pypi.org/project/magento/",
    "project_urls": {
      "Homepage": "https://github.com/fulfilio/magento/"
    },
    "release_url": "https://pypi.org/project/magento/3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Magento Core API Client",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4853680,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e81b52c7970434c79088e0ae343da4ddcb76041306959ff78795b08f2b423e1",
        "md5": "31ef8c56b73fb17bcf53ec797eaa85cd",
        "sha256": "22d93dffec065b634e64441468c0f4c2cd5e49db65f6357e80ab58fa98d0f2a4"
      },
      "downloads": -1,
      "filename": "magento-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "31ef8c56b73fb17bcf53ec797eaa85cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14926,
      "upload_time": "2017-08-17T06:07:18",
      "upload_time_iso_8601": "2017-08-17T06:07:18.931922Z",
      "url": "https://files.pythonhosted.org/packages/8e/81/b52c7970434c79088e0ae343da4ddcb76041306959ff78795b08f2b423e1/magento-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}