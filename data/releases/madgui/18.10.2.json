{
  "info": {
    "author": "Thomas Gläßle",
    "author_email": "t_glaessle@gmx.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Medical Science Apps.",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "madgui\n======\n\nmadgui is a Qt5 python GUI for interactive accelerator simulations using MAD-X_.\n\n\nRequirements\n~~~~~~~~~~~~\n\n- **Python >= 3.4** (higher is better, except on windows, see `hibtc/cpymad#41`_!)\n\n- PyQt5_\n\n- cpymad_, see cpymad's `installation instructions`_.\n\n.. _WinPython 3.4 Qt5: https://sourceforge.net/projects/winpython/files/WinPython_3.4/3.4.4.6/\n.. _hibtc/cpymad#41: https://github.com/hibtc/cpymad/issues/41\n.. _installation instructions: http://hibtc.github.io/cpymad/installation/index.html\n.. _MAD-X: http://madx.web.cern.ch/madx\n.. _cpymad: https://github.com/hibtc/cpymad\n.. _PyQt5: https://riverbankcomputing.com/software/pyqt/intro\n\n\nInstallation\n~~~~~~~~~~~~\n\n.. code-block:: bash\n\n    pip install madgui\n\n\nUsage\n~~~~~\n\nNow, you should be able to start madgui with the command::\n\n    madgui\n\nOptionally, madgui can take a filename for a madx/model file::\n\n    madgui /path/to/model.madx\n\nNote that madgui is currently only suited for relatively small sequences, on\nthe scale of few hundred elements at the most. Don't say I didn't warn you if\nyou use it with the LHC;)\n\n\nConfiguration\n~~~~~~~~~~~~~\n\nThe application loads a YAML config file ``madgui.yml`` in the current\ndirectory or the user's home directory.\n\nExample file:\n\n.. code-block:: yaml\n\n    model_path: ../hit_models\n    session_file: madgui.session.yml\n    online_control:\n      connect: true\n      backend: 'hit_csys.plugin:TestBackend'\n    onload: |\n      code to execute on startup\n\n\nDevelopment guidelines\n~~~~~~~~~~~~~~~~~~~~~~\n\n**Coding:**\n\n- Try to be consistent with PEP8_ and PEP257_.\n- Add `sphinx`_ style docstrings for all modules, classes, functions\n- Check regularly for unused imports etc with ``pyflakes madgui``\n\n.. _PEP8: http://www.python.org/dev/peps/pep-0008/\n.. _PEP257: http://www.python.org/dev/peps/pep-0257/\n.. _`sphinx`: http://sphinx-doc.org/\n\n**Naming:**\n\nAltough the current code base is not entirely consistent, all new code should\nfollow these rules:\n\n- class names are in ``CamelCase``\n- for method, member and variable names, stick to ``names_with_underscores`` as\n  recommended by PEP8_\n- only PyQt class method overrides and their parameters shall be written in\n  ``lowerCamelCase``\n\n**Version control:**\n\nCommits should be reversible, independent units if possible. Use descriptive\ntitles and also add an explaining commit message unless the modification is\ntrivial. See also: `A Note About Git Commit Messages`_.\n\n.. _`A Note About Git Commit Messages`: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n\nCopying\n~~~~~~~\n\nCopyright 2016-2018 HIT Betriebs GmbH\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nFor a full text version of the license, see ``COPYING.GPLv3.txt``.\n\nCHANGELOG\n~~~~~~~~~\n\n18.10.2\n~~~~~~~\nDate: 25.10.2018\n\nbugfixes:\n    - fix for missing setObsolete on Qt<5.9 (was previously fixed only partially)\n    - fix empty list of optic elements in output file\n    - fix beamoptikdll not initiating device download due to flooding\n    - fix duplicate value bug in the readout logic\n    - decrease chance of race condition leading to inconsistent readouts\n\nUX improvements:\n    - log to main logwindow as well\n    - increase logging verbosity during orbit response measurements\n    - flush file after each write\n    - vary steerers in sequence order\n    - avoid one redundant readout\n    - increase default steerer variation to 0.2 mrad\n\nORM analysis:\n    - handle missing ORM entries as zero\n    - restrict to used knobs\n    - fix empty steerers field in record file\n    - handle accumulated errors in ORM analysis\n    - add simple plotting script\n\n\n18.10.1\n~~~~~~~\nDate: 20.10.2018\n\n- fix exception when opening matching dialog\n- fix bad fit_range leading to bad initial conditions fit\n- add safeguard for ``None`` offsets in corrector widgets\n- restrict orbit correction to only X/Y constraints\n- let user choose whether to fit the difference between measured and design\n  values or just fit the design value directly (this can be different in case\n  the backtrack does not describe the monitor values very good)\n\n\n18.10.0\n~~~~~~~\nDate: 18.10.2018\n\nNow in calver_ (calendaric versioning) ``YY.MM.patch`` since this better fits\nthe nature of madgui development and is I believe more useful for end-users.\n\n.. _calver: https://calver.org/\n\nNew features:\n\n- add app icon as .ico file (for shortcuts etc)\n- add orbit response matrix (ORM) based mode for orbit correction\n- add even simpler mode that assumes orbit response matrix = sectormap\n- add method selection to OVM dialog\n- add dialog for recording orbit response matrix\n- add script for generating test ORM recordings\n- add script for analyzing ORM recordings\n\nImprovements:\n\n- can edit the steerer values before executing\n- implement prev/next buttons in optic variation dialog\n- allow multiple floor plan windows\n- prevent annoying busy cursor due to MPL redraws\n- turn on warnings for our own modules\n- close and wait for the MAD-X process properly\n- improve update of steerer/monitor display tables\n- don't automatically create logfile for every MAD-X session anymore\n- make MAD-X less verbose: command echo off!\n\nBug fixes:\n\n- fix ``AttributeError`` when clicking ``Apply`` in optic variation dialog\n- fix ``NameError`` when opening curve manager widget\n- fix missing reaction to changing selected config in OVM dialog\n- fix missing update before recording in OVM automatic mode\n- fix ``AttributeError`` after editing config in MGM dialog\n- update the config combo box after editting config\n- fix current config not being updated after editting config\n- fix jitter option…\n- fix several DeprecationWarnings\n- stop ORM procedure upon closing the widget\n- fix status messages for export menuitems\n- fix bug in Model loader (path)\n- fix ``yaml.RepresenterError`` when no csys backend is loaded\n- fix error when loading stand-alone .madx file\n- misc fixes to corrector code\n- use button groups to safeguard against deselecting radio buttons\n\nMeta:\n\n- add sanity checks (pyflakes, hinting to missing imports, syntax errors, etc)\n- add automatic style checks (pycodestyle)\n- add first tests for the (now) non-UI components: model/session/corrector\n- add rudimentary documentation (updated when pushing to master)\n- automatically upload release to PyPI when pushing tags\n- move source code to unimportable subdirectory\n\nRefactoring:\n\n- improve naming: set_rowgetter -> set_viewmodel\n- deduplicate code between optic variation and multi grid modules (OVM/MGM)\n- remove our ElementInfo proxy class, simply use Element from cpymad\n- remove several obsolete/unused methods, dead code\n- shared management of monitor readouts\n- move AsyncReader functionality to cpymad\n- make use cpymad multiline input for collected commands\n- auto show SingleWindow widgets\n- simplify access to twiss table\n- let the online plugin manage its settings menu\n- relocate several modules and classes\n- demeterize Model: no GUI, no config, no graphs!!!!\n- remove several static configuration items for MAD-X data structures that can\n  now be introspected via cpymad\n- globalize several private methods that don't need to be part of class\n  interfaces\n- slightly simplify the twiss args guesser\n- lose obsolete thread utils [core.worker, QueuedDispatcher]\n- don't need thread-safety anymore (no more threads…;)\n- rename control._plugin -> .backend\n- remove the need for a separate Loader class\n- add ``Model.changed`` overload that passes old and new value\n- inline and simplify several methods\n- introduce a new ``Session`` object that replaces ``MainWindow`` as context\n  object and can be used without active GUI\n- DRY up MANIFEST.in\n- demeterize ProcBot for non-GUI usage\n- make the Corrector GUI-independent\n- move recording/export responsibilities to Corrector (from CorrectorWidget)\n- let Corrector know only the active configuration\n\n…and many more\n\n\n1.14.0\n~~~~~~\nDate: 24.07.2018\n\n- refactor and simplify treeview data model, more cohesive table definitions\n- monospace in tables\n- autosave and restore online settings (MEFI)\n- fix missing QUndoCommand.setObsolete on Qt<5.9\n- allow defining a ``limits`` parameter in multigrid config\n- fix IndexError if too few monitors are selected\n- implement missing export functionality in orbit/emit dialogs\n- use ``data_key`` for initial conditions im-/exports\n- add import/export menus as in mirko\n- implement strength import from YAML\n- refactor import/export logic\n- set YAML as the default filter in strengths export\n- recognize '!' comment character in .str files\n- fix treeview edit spin boxes to fit into their column\n- highlight changed items in SyncParamWidgets (read/write strengths)\n- highlight explicitly specified beam/twiss parameters in bold (initial\n  conditions dialogs)\n- code deduplication among diagnostic dialogs: share same rowgetter method\n- save selected monitors for orbit/optics in different lists\n- support QTableView again in parallel to QTreeView, this has some advantages\n  such as supporting background colors\n- highlight changed steerers in bold in multigrid dialog)\n- rework the optic variation dialog, based on tableview, added automation UI\n- disable section highlighting in TableView\n- refactor how variables are stored in orbit correction dialogs\n- always show the current value versus the \"to-be-applied\" value in the\n  \"steerer corrections\" table\n- add back/forward button in orbit correction dialogs\n- nicer arrow buttons (QToolButton) in element info dialog\n- show monitors during orbit correction\n\n\n1.13.0\n~~~~~~\nDate: 15.07.2018\n\n- simplify the activate logic of the curvemanager tool (was a toggle item with\n  complex behaviour, is now simply a button that will create the widget)\n- add \"Ok\" button for curvemanager widget\n- fix beam diagnostic dialog staying open with blank tab when pressing Ok\n- remove explicit dependency on minrpc version from setup.py (possibly fixes\n  problem where cpymad's requirement on the minrpc version is then ignored)\n- improve knob selection/input in match dialog\n- change how \"assign\" expressions must be defined in the multigrid config, can\n  now be bound to only x or y specifically\n- add widget for optics-based offset calibration\n- use backtracking as method for calculating initial coordinates (instead of\n  inverting sectormaps)\n- some code deduplication between diagnostic dialog and multigrid\n- allow to specify matching 'method' (lmdif/jacobian/…) in multigrid config\n- can show/hide timestamps in the log window\n- make treeview columns user resizable (will be reset whenever the view\n  changes size)\n- simplify stretch logic and remove custom column stretch factors\n- minor cleanup for some ColumnInfo definitions\n\n\n1.12.0\n~~~~~~\nDate: 26.06.2018\n\n- add \"About python\" menuitem\n- fix bugs in ``Model.get_transfer_maps`` / ``Model.sectormap``\n- collect multiple variable update commands into one RPC call\n- add class for boxing generic values\n- make ``Mainwindow.model`` a ``Boxed`` object!!\n- remove ``Model.destroyed`` signal in favor of the more general\n  ``Boxed.changed`` signal\n- add ``envx``/``envy`` columns to ``get_elem_twiss``\n- fix data export in \"Read strengths\"/\"Write strengths\" dialogs\n- set \"Ok\" as default button in export widgets\n- add menuitem for executing MAD-X files (i.e. CALL)\n- remember folders separately for \"load strengths\" and \"execute file\" items\n\n\n1.11.4\n~~~~~~\nDate: 11.06.2018\n\n- fix inconsistency with open-/closedness of sectormap intervals in\n  ``model.sectormap`` and ``get_transfer_maps``\n\n\n1.11.3\n~~~~~~\nDate: 11.06.2018\n\n- add 'export strengths' menu item\n- add export as .str file in globals edit\n- fix JSON incorrectly being listed as export format\n- show globals according to var_type (predefinedness)\n\n\n1.11.2\n~~~~~~\nDate: 11.06.2018\n\n- fix losing zoom/view on every curve redraw due to autoscaling\n- fix AttributeError when trying to save session data. This appeared only if\n  online control was not connected and prevented saving the current model,\n  folder etc\n- fix ValueError when computing relative path for a model on different volume\n- let madgui have its own taskbar group on windows\n- add preliminary window icon\n- more consistent behaviour for model.get_transfer_maps\n- prettify default output format for numpy arrays in python shell\n\nelement indicators:\n- more distinctive lines for monitors\n- flip displacement for pos/neg dipole strengths\n- scale displacements/quadrupole colors according to magnet strength\n- draw element indicators in background\n- distinguish twiss curve by adding outlines\n- set alpha=1 for element indicators\n- add KICK marker within SBEND\n- highlight selected and hovered elements\n\n\n1.11.1\n~~~~~~\nDate: 01.06.2018\n\n- fix deadlock appearing mainly on windows during MAD-X commands with long\n  output (the fix will cause minor performance degradation for now)\n- avoid some unnecessary updates/redraws on startup\n- remember *which* online plugin to connect to\n- some more info log statements\n- change ``onload`` again to be executed before loading the model\n\n\n1.11.0\n~~~~~~\nDate: 31.05.2018\n\nMiscellaneous:\n    - require cpymad 1.0.0rc3\n    - fix multi grid view not being updated\n    - add units for K0\n    - update floor plan survey after twiss\n\nMatching:\n    - group multiple matching constraints at the same element and position\n      into one statement\n    - specify weights only for the used quantities\n    - disable matching if the number of constraints is incorrect\n    - don't reset matching when deactivating the match mode\n\nElement/param dialogs:\n    - fix condition for when globals are editable\n    - display element attribute names in title case again\n    - show leading part of variable names in lowercase\n    - make use of cpymad's ``inform`` and ``var_type``\n\nTreeView:\n    - improve/refactor internal tableview API\n    - use tree view\n    - expand vectors in tree view\n    - expand variables occuring in expressions in GlobalsEdit/CommandEdit\n\nUndo:\n    - support undoing simple .str files\n    - remove flawed accept/reject logic, i.e. \"Cancel\" buttons, leaving only\n      \"Ok\" buttons for now (the logic required to properly implement \"Cancel\"\n      is nontrivial, and the behaviour might still be confusing)\n    - move undo utils to their own module\n    - subclass QUndoStack\n    - never show empty macros (QUndoCommand.setObsolete)\n\nPlotting:\n    - share loaded curves between all windows\n    - handle add_curve/del_curve in mainwindow\n    - \"snapshot\" now saves all available twiss data so that when changing\n      graphs, the snapshot for the other curves will be shown\n    - gracefully deal with missing data in user curves (showed exception very\n      loudly previously, showing debug message now)\n    - invert quadrupole focussing color codes in Y plot\n    - distinguish SBEND/KICKER sign by shifting the indicator position up/down\n    - smaller but more distinct indicators\n    - fade out \"off-axis\" kickers (e.g. HKICKER in Y plot)\n    - remove grid lines in Y direction\n    - fix missing element name in status bar\n    - update element markers on each draw\n\n\n1.10.1\n------\nDate: 15.05.2018\n\n- fix ``ElementList.__contains__``\n- show/edit expression field for global variables\n- fix SyntaxError on py34\n- require cpymad 1.0.0rc2\n- use ``e_kin`` only if it was given explicitly when editting beam\n- more accurate undo handling for setting *new* parameters\n- use space-insensitive string comparison before updating expressions\n- fix bug that results in squared UI unit conversion factor during matching\n- use the builtin unit conversion mechanism in match widget\n- allow overwriting deferred expressions by direct values when editting\n- fix for not tracking modifications to element attributes on the undo stack\n- fix obsolete checks that would prevent certain updates to element attributes\n- simplify and unify ParamTable flavours by relying on model invalidation\n- implement \"expression deletion\" by replacing them with their values\n- make \"Expression\" field immutable for string attributes\n\n\n1.10.0\n------\nDate: 13.05.2018\n\n- execute ``onload`` commands *after* loading models\n- add coordinate axes and size indicator to floor plan\n- use ``logging`` for warnings in emittance module\n- use the global logger instead of personal loggers\n- fix bug in TableView that can cause using the wrong quantity for unit conversion\n- knobs are now exclusively global variables occuring in deferred expressions\n- remove ``Knob`` class\n- don't show units in globals dialog nor in matching dialog\n- show globals names in uppercase\n- use .ui file for mainwindow\n- add UI for filtering shown log records in main window\n- suppress MAD-X output by default\n- refactor and cleanup TableView API considerably; the old ``ValueProxy``\n  classes are now replaced by ``Delegate`` classes that no nothing about the\n  individual cell and a ``Cell`` class that provides a context\n- allow specializing virtually all data roles by passing an apropriate value or\n  callback function to ``ColumnInfo``\n- unify and improve handling of checked columns\n- remove config item for left/right number alignment\n- introduce offsets for monitor calibration\n- add naive way to define monitor offsets as the difference between model and\n  measurement\n- keep monitor values in MAD-X units internally\n- add units to column title for several table views\n- add \"Expression\" column for elements\n- highlight user-specified values using bold\n- remove ``DataStore``, replaced by simplified TableView API and getter methods\n- fix energy/mass UI units\n- add \"E_kin\" field for beam\n- fix exception in YAML params exporter\n- fix bug in sectormap due to interpolate\n- compute sectormap only once between changes, and only on demand\n- fix missing redraw after ``twiss``\n- fix editing ``kick`` (works only for HIT-model style angle/k0 definitions)\n- remove ``Element.id`` in favor of ``.index``\n- remove our own proxy layer for ``Element``, use the cpymad elements directly\n- remove support for scalar names referring to vector components (\"KNL[0]\" etc)\n- simplifications for ``ElementList`` and how elements can be accessed\n- fix ``open_graph`` always showing \"orbit\" plot\n- make the different beam diagnostic tasks part of a tabbed dialog,\n  increase code sharing\n- rework the beam diagnostic widgets, layout, buttons, defaults\n- remember plot window positions, sizes and graph names\n- inline some initializer methods in ``model``\n- use undo/redo mechanism and a corresponding history widget that fixes the\n  backup/restore mechanism used in several places\n\n\n1.9.0\n-----\nDate: 16.04.2018\n\nImprovements:\n\n- add x/y/px/py values to *Twiss* tab in element info dialog\n- replot backtracked twiss on every new monitor readout\n- consider ``SBEND->K0`` when detecting knobs\n- remove conversion mechanism for knobs, this is now the responsibility of the\n  model itself (by using appropriate expressions) or the online plugin\n- use only user defined variables in deferred expressions as knobs, consider\n  fixed numbers as static\n- show marks with monitor width/position when opening monitor dialog, can\n  select which ones to show\n- add update/backtrack functionality to monitor widget\n- show unit on the column title\n- add simple data export for monitors\n- make the monitorwidget child to the main window (so it will be closed like\n  everything else when the main window is closed)\n- persist some settings across multiple madgui runs using *session* files:\n  main window size/position, model, folder, selected monitors\n- enable grid in twiss plot (mainly for y=0)\n- add ``onload`` config entry for application, and in model\n- remove setuptools based entrypoint for online models, must be manually\n  loaded by the user using the ``onload`` handler instead\n- draw element markers at the exit end of the element\n- unify log window with MAD-X input commands, output, as well as logging\n  records, based on PlainTextEdit with extra selections in different colors,\n  much easier on the eyes and hands! Shows line numbers and times on the left.\n- show exceptions in log window as well\n- silence Pint redefinition warning\n- log interleaved MAD-X input/output in chronological order!\n- display line numbers for config edit dialog (multi grid)\n- show only the actual MAD-X command parameters in the second info tab\n- add ``kick`` attribute for SBEND in summary tab\n\nBug fixes:\n\n- fix exception on py34: missing ``math.isclose``\n- fix exception in floor plan\n- fix error in matching due to discarding ``Expression``\n- fix unit conversion for gantry angle\n- fix multi grid with ``assign`` in config file\n- use float edit boxes for target values\n- fix input unit of multi-grid target values\n- fix bug with disappearing monitor widget (GC related)\n\nInternal changes:\n\n- use function call syntax to get the values from Bool proxies\n- remove some remaining py2 compatibility code\n- support attribute access and *on_change* signals for config entries, make\n  ``config.NumberFormat`` a simple config entry\n- rename ``user_ns`` to ``context``\n- cleanup some unused imports, undefined names etc (pyflakes)\n- replace ``monospace`` function by a simpler one without ``size`` parameter\n- remove uppercase restritcion when accessing element attributes\n- adapt to changes in cpymad 1.0 API\n- flip definition of ``gantry_angle`` (``SROTATION->ANGLE`` has changed in\n  MAD-X 5.04.00)\n\n\n1.8.0\n-----\nDate: 25.03.2018\n\n- remove ``api_version`` entry from model files\n- add menu item to load MAD-X file\n- autoscale plots when pressing \"Home\" button\n- add shortcut method ``model.sectormap`` for use in ipython shell\n\n- twiss/beam init dialog:\n    - remove menuitems for separate init tabs, move to file menu\n    - treat attributes specified in the config as reals, not ints\n    - update enabled-state of save/open buttons according to current widget\n\n- element infobox:\n    - add tab with sectormap for element infobox\n    - update title clicking on another element (previously was updated only\n      when changing using the combobox)\n    - fix \"open\" button\n\n- both:\n    - use spinbox=true by default\n    - use QuantityValue for floats (spin to win!)\n    - fix editting bool values\n    - fix display bug when showing SpinBox for IntValue\n    - fix \"save\" button\n\n- matching:\n    - match against variables inside expressions\n    - reuse computed init conditions after applying corrections\n\n- internal resource handling:\n    - remove PackageResource\n    - replace pkg_resources with importlib_resources where appropriate\n    - remove madgui.resource package\n\n- ellipses plots:\n    - add ellipse tab for init dialog\n    - add x/y labels\n    - use tight_layout\n    - use ui units\n    - draw ellipse over grid\n    - fix swapped ellipse axes when alpha is negative\n    - fix swapped formulas for the half axes\n\n- units:\n    - pass values internally as plain floats, convert only for IO/UI (#2)\n    - Replace all Expression instances by their values, get rid of\n      SymbolicValue\n    - introduce globals for ``madx_units`` and ``ui_units`` used for\n      conversion\n    - format degrees with \"°\" symbol\n    - improve unit labels for lists\n    - remove pint units file, use the default one shipped with pint instead\n\n\n1.7.2\n-----\nDate: 05.03.2018\n\n- added missing factor 2 in ellipse axes lengths\n- don't need AttrDict from new cpymad in this version\n\n\n1.7.1\n-----\nDate: 02.03.2018\n\n- fix knobs in skew quadrupoles\n- hotfix regression with posx/posy aliases\n- compatible with hit_models 0.7.0, hit_csys 0.6.0\n\n\n1.7.0\n-----\nDate: 02.03.2018\n\n- compute alfa/beta from sigma matrix for consistency\n- expose ``twiss`` variable holding twiss table in python shell widget\n- set better display units for some plots\n- keep plot axis limits on most updates\n- finally start to use position dependent emittances in some places\n- add more plots: momentum/dispersion/phase advance/emittance/gamma\n- plot monitors as dashed lines\n- plot loaded/snapshot curves without markers\n- update infobox window title when changing element\n- add tab with global variables to init-settings dialog\n- add tabs to info box: primary/expert/twiss/sigma/ellipse\n- keep position in info-box when refreshing values or element\n- fit small tool buttons to text size\n- let user click on zero-length elements\n- scale interpolation step length with sequence length, to show smooth curves\n- default number_format.align=right\n- default mirror_mode=True\n- fix python shell, when starting madqt as gui_script under windows\n- rework the multi-grid dialog (for orbit correction)\n- rename back to madgui\n- new versioning scheme, interpret: ``0.0.X`` -> ``1.X.0``, acknowledging the\n  the ``0.X.Y`` releases of the old wx-based madgui.\n- remove pytao binding\n- match dialog: dropdown menu for knobs, minor visual improvements\n- internal refactoring, module renamings\n- can connect online control without loaded model\n\n\n0.0.6\n-----\nDate: 26.01.2018\n\n- element info box: add UI to switch element\n- floor plan: support 3D models (no more curved sbends anymore though…)\n- floor plan: add UI to change view perspective\n- floor plan: fix mirror inversion\n- main/plot window: set window title\n- main window: add config setting for initial position\n- codebase: unify the workspace/segment mess, now only have 'model' again\n  (it's unlikely that we will ever be able to work on less/more than one\n  sequence in the same workspace anyway)\n\n\n0.0.5\n-----\nDate: 24.01.2018\n\n- fix mass unit in MAD-X\n- massive simplification of knobs API for interfacing control system\n- can read beam parameters from online plugin\n- show updated orbit plot after fitting in orbit-correction-mode (regression)\n- open orbit plot for orbit-correction-mode\n\n\n0.0.4\n-----\nDate: 09.01.2018\n\n- Emit signal when workspace is changed (for plugins…)\n- Show about boxes only if the package exists\n- Add about dialog for pytao\n- Change tab in settings dialog when clicking menu\n- When user invokes an action via a menu and the corresponding dialog\n  already exists, focus the existing window\n- No longer show checkboxes for twiss/beam dialogs in menu\n- Read spinbox setting from config\n- [regression] Fix exception (closed logfile) when opening different model\n- [regression] Fix exception in online-control module when changing values\n  into MAD-X\n\n\n0.0.3\n-----\nDate: 06.01.2018\n\n- fuzzy select when removing constraints in matching mode (middle click)\n- start log threads as daemon thread (never blocks program exit)\n- thread safe access to madx/tao\n- fetch element data for indicators in background\n- fix missing .ui files in installation\n- fix crash on windows at startup when starting via gui_scripts entrypoint\n\n\n0.0.2\n-----\nDate: 05.12.2017\n\n- continuous matching (within any element position)\n- fix bugs in matching code\n- updated dependencies: pint 0.8.1, cpymad>=0.18.2, pytao>=0.0.1\n\n\n0.0.1\n-----\nDate: 30.11.2017\n\nFirst reference point to define somewhat stable versions.\n\nList of features:\n\n- cpymad/pytao as simulation backends\n- plots: alfa/beta/envelope/orbit; and the ones defined by tao\n- integrated python shell (ipython/jupyter) not very useful as of yet:\n  limited exhibition of objects, no convenient APIs provided (plotting)\n- log tab that shows madx/tao output\n- tab that shows madx/tao commands\n- display and edit box for beam parameters; initial conditions (i.e. twiss);\n  and element attributes (read-only so far)\n- 2D floor plan\n- matching (interactive + dialog)\n- emittance (dialog)\n- orbit alignment: 2-grid + N+optic methods",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hibtc/madgui",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "madgui",
    "package_url": "https://pypi.org/project/madgui/",
    "platform": "",
    "project_url": "https://pypi.org/project/madgui/",
    "project_urls": {
      "Homepage": "https://github.com/hibtc/madgui"
    },
    "release_url": "https://pypi.org/project/madgui/18.10.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "GUI for accelerator simulations using MAD-X.",
    "version": "18.10.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8419639,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9d6aa24a509e313abc9aa962283170bc84bb1bc0820e6a5e2f3e8c03c7c0184",
        "md5": "f9787b70184f49f1778b7c6d5b7e2324",
        "sha256": "c35f33159dc68ab3f768d2edd245d115486abed9d79571b3c9bc399771d9b98c"
      },
      "downloads": -1,
      "filename": "madgui-18.10.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f9787b70184f49f1778b7c6d5b7e2324",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 144037,
      "upload_time": "2018-10-25T01:40:37",
      "upload_time_iso_8601": "2018-10-25T01:40:37.833093Z",
      "url": "https://files.pythonhosted.org/packages/c9/d6/aa24a509e313abc9aa962283170bc84bb1bc0820e6a5e2f3e8c03c7c0184/madgui-18.10.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}