{
  "info": {
    "author": "Thomas Gläßle",
    "author_email": "t_glaessle@gmx.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Medical Science Apps.",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "madgui\n======\n\nmadgui_ is a Qt5 python GUI for interactive accelerator simulations using MAD-X_.\n\n\nRequirements\n~~~~~~~~~~~~\n\n- **Python >= 3.4**\n\n  *On linux*, I recommend the latest python version you can find.\n\n  *On windows*, I recommend `WinPython 3.4 Qt5`_ (should be about 300MiB in\n  size). In particular, you **can not use 64bit python 3.5 and above** on\n  windows 10, since there are problems building cpymad for these versions, see\n  `hibtc/cpymad#41`_.\n\n- PyQt5_\n\n- cpymad_, in order to work with MAD-X_.\n\n  *On windows*, installing cpymad should be as simple as::\n\n    pip install cpymad\n\n  Otherwise, please refer to cpymad's `installation instructions`_.\n\n.. _WinPython 3.4 Qt5: https://sourceforge.net/projects/winpython/files/WinPython_3.4/3.4.4.6/\n.. _hibtc/cpymad#41: https://github.com/hibtc/cpymad/issues/41\n.. _installation instructions: http://hibtc.github.io/cpymad/installation/index.html\n.. _MAD-X: http://madx.web.cern.ch/madx\n.. _cpymad: https://github.com/hibtc/cpymad\n.. _PyQt5: https://riverbankcomputing.com/software/pyqt/intro\n\n\nInstallation\n~~~~~~~~~~~~\n\nYou are now ready to install madgui. Type::\n\n    pip install madgui\n\nOr, in order to install from the local checkout::\n\n    python setup.py install\n\nIf you intend to make changes to the madgui code and want to try the effects\nimmediately, use::\n\n    python setup.py develop\n\n\nUsage\n~~~~~\n\nNow, you should be able to start madgui with the command::\n\n    madgui\n\nor::\n\n    python -m madgui\n\nIf you are on windows, and nothing happens, you can start madgui manually as\nfollows, which may provide you with more error information::\n\n    python -c \"from madgui.core.app import main; main()\"\n\n\nConfiguration\n~~~~~~~~~~~~~\n\nThe application loads a YAML config file ``madgui.yml`` in the current\ndirectory or the user's home directory.\n\nExample file:\n\n.. code-block:: yaml\n\n    model_path: ../hit_models\n    load_default: hht3\n\n    onload: |\n      from hit_csys.plugin import Loader\n      frame.add_online_plugin(Loader)\n\nNote that the onload handler can be used to execute user-defined code, import\nmodules and e.g. add loaders for online control plugins. The API is defined in\nthe ``madgui.online.api`` module.\n\n\nDevelopment guidelines\n~~~~~~~~~~~~~~~~~~~~~~\n\n**Coding:**\n\n- Try to be consistent with PEP8_ and PEP257_.\n- Add `sphinx`_ style docstrings for all modules, classes, functions\n- Check regularly for unused imports etc with ``pyflakes madgui``\n\n.. _PEP8: http://www.python.org/dev/peps/pep-0008/\n.. _PEP257: http://www.python.org/dev/peps/pep-0257/\n.. _`sphinx`: http://sphinx-doc.org/\n\n**Naming:**\n\n- Stick to ``names_with_underscores`` for methods and variable names as\n  recommended by PEP8_ (I admit that the code base is currently somewhat\n  inconsistent in this regard)\n- class names are in ``CamelCase``\n- only PyQt class method overrides and their parameters shall be written in\n  ``lowerCamelCase``\n\n**Version control:**\n\nCommits should be reversible, independent units if possible. Use descriptive\ntitles and also add an explaining commit message unless the modification is\ntrivial. See also: `A Note About Git Commit Messages`_.\n\n.. _`A Note About Git Commit Messages`: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n\nCopying\n~~~~~~~\n\nCopyright 2016-2018 HIT Betriebs GmbH\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nFor a full text version of the license, see ``COPYING.GPLv3.txt``.\n\nCHANGELOG\n~~~~~~~~~\n\n1.10.1\n------\nDate: 15.05.2018\n\n- fix ``ElementList.__contains__``\n- show/edit expression field for global variables\n- fix SyntaxError on py34\n- require cpymad 1.0.0rc2\n- use ``e_kin`` only if it was given explicitly when editting beam\n- more accurate undo handling for setting *new* parameters\n- use space-insensitive string comparison before updating expressions\n- fix bug that results in squared UI unit conversion factor during matching\n- use the builtin unit conversion mechanism in match widget\n- allow overwriting deferred expressions by direct values when editting\n- fix for not tracking modifications to element attributes on the undo stack\n- fix obsolete checks that would prevent certain updates to element attributes\n- simplify and unify ParamTable flavours by relying on model invalidation\n- implement \"expression deletion\" by replacing them with their values\n- make \"Expression\" field immutable for string attributes\n\n\n1.10.0\n------\nDate: 13.05.2018\n\n- execute ``onload`` commands *after* loading models\n- add coordinate axes and size indicator to floor plan\n- use ``logging`` for warnings in emittance module\n- use the global logger instead of personal loggers\n- fix bug in TableView that can cause using the wrong quantity for unit conversion\n- knobs are now exclusively global variables occuring in deferred expressions\n- remove ``Knob`` class\n- don't show units in globals dialog nor in matching dialog\n- show globals names in uppercase\n- use .ui file for mainwindow\n- add UI for filtering shown log records in main window\n- suppress MAD-X output by default\n- refactor and cleanup TableView API considerably; the old ``ValueProxy``\n  classes are now replaced by ``Delegate`` classes that no nothing about the\n  individual cell and a ``Cell`` class that provides a context\n- allow specializing virtually all data roles by passing an apropriate value or\n  callback function to ``ColumnInfo``\n- unify and improve handling of checked columns\n- remove config item for left/right number alignment\n- introduce offsets for monitor calibration\n- add naive way to define monitor offsets as the difference between model and\n  measurement\n- keep monitor values in MAD-X units internally\n- add units to column title for several table views\n- add \"Expression\" column for elements\n- highlight user-specified values using bold\n- remove ``DataStore``, replaced by simplified TableView API and getter methods\n- fix energy/mass UI units\n- add \"E_kin\" field for beam\n- fix exception in YAML params exporter\n- fix bug in sectormap due to interpolate\n- compute sectormap only once between changes, and only on demand\n- fix missing redraw after ``twiss``\n- fix editing ``kick`` (works only for HIT-model style angle/k0 definitions)\n- remove ``Element.id`` in favor of ``.index``\n- remove our own proxy layer for ``Element``, use the cpymad elements directly\n- remove support for scalar names referring to vector components (\"KNL[0]\" etc)\n- simplifications for ``ElementList`` and how elements can be accessed\n- fix ``open_graph`` always showing \"orbit\" plot\n- make the different beam diagnostic tasks part of a tabbed dialog,\n  increase code sharing\n- rework the beam diagnostic widgets, layout, buttons, defaults\n- remember plot window positions, sizes and graph names\n- inline some initializer methods in ``model``\n- use undo/redo mechanism and a corresponding history widget that fixes the\n  backup/restore mechanism used in several places\n\n\n1.9.0\n-----\nDate: 16.04.2018\n\nImprovements:\n\n- add x/y/px/py values to *Twiss* tab in element info dialog\n- replot backtracked twiss on every new monitor readout\n- consider ``SBEND->K0`` when detecting knobs\n- remove conversion mechanism for knobs, this is now the responsibility of the\n  model itself (by using appropriate expressions) or the online plugin\n- use only user defined variables in deferred expressions as knobs, consider\n  fixed numbers as static\n- show marks with monitor width/position when opening monitor dialog, can\n  select which ones to show\n- add update/backtrack functionality to monitor widget\n- show unit on the column title\n- add simple data export for monitors\n- make the monitorwidget child to the main window (so it will be closed like\n  everything else when the main window is closed)\n- persist some settings across multiple madgui runs using *session* files:\n  main window size/position, model, folder, selected monitors\n- enable grid in twiss plot (mainly for y=0)\n- add ``onload`` config entry for application, and in model\n- remove setuptools based entrypoint for online models, must be manually\n  loaded by the user using the ``onload`` handler instead\n- draw element markers at the exit end of the element\n- unify log window with MAD-X input commands, output, as well as logging\n  records, based on PlainTextEdit with extra selections in different colors,\n  much easier on the eyes and hands! Shows line numbers and times on the left.\n- show exceptions in log window as well\n- silence Pint redefinition warning\n- log interleaved MAD-X input/output in chronological order!\n- display line numbers for config edit dialog (multi grid)\n- show only the actual MAD-X command parameters in the second info tab\n- add ``kick`` attribute for SBEND in summary tab\n\nBug fixes:\n\n- fix exception on py34: missing ``math.isclose``\n- fix exception in floor plan\n- fix error in matching due to discarding ``Expression``\n- fix unit conversion for gantry angle\n- fix multi grid with ``assign`` in config file\n- use float edit boxes for target values\n- fix input unit of multi-grid target values\n- fix bug with disappearing monitor widget (GC related)\n\nInternal changes:\n\n- use function call syntax to get the values from Bool proxies\n- remove some remaining py2 compatibility code\n- support attribute access and *on_change* signals for config entries, make\n  ``config.NumberFormat`` a simple config entry\n- rename ``user_ns`` to ``context``\n- cleanup some unused imports, undefined names etc (pyflakes)\n- replace ``monospace`` function by a simpler one without ``size`` parameter\n- remove uppercase restritcion when accessing element attributes\n- adapt to changes in cpymad 1.0 API\n- flip definition of ``gantry_angle`` (``SROTATION->ANGLE`` has changed in\n  MAD-X 5.04.00)\n\n\n1.8.0\n-----\nDate: 25.03.2018\n\n- remove ``api_version`` entry from model files\n- add menu item to load MAD-X file\n- autoscale plots when pressing \"Home\" button\n- add shortcut method ``model.sectormap`` for use in ipython shell\n\n- twiss/beam init dialog:\n    - remove menuitems for separate init tabs, move to file menu\n    - treat attributes specified in the config as reals, not ints\n    - update enabled-state of save/open buttons according to current widget\n\n- element infobox:\n    - add tab with sectormap for element infobox\n    - update title clicking on another element (previously was updated only\n      when changing using the combobox)\n    - fix \"open\" button\n\n- both:\n    - use spinbox=true by default\n    - use QuantityValue for floats (spin to win!)\n    - fix editting bool values\n    - fix display bug when showing SpinBox for IntValue\n    - fix \"save\" button\n\n- matching:\n    - match against variables inside expressions\n    - reuse computed init conditions after applying corrections\n\n- internal resource handling:\n    - remove PackageResource\n    - replace pkg_resources with importlib_resources where appropriate\n    - remove madgui.resource package\n\n- ellipses plots:\n    - add ellipse tab for init dialog\n    - add x/y labels\n    - use tight_layout\n    - use ui units\n    - draw ellipse over grid\n    - fix swapped ellipse axes when alpha is negative\n    - fix swapped formulas for the half axes\n\n- units:\n    - pass values internally as plain floats, convert only for IO/UI (#2)\n    - Replace all Expression instances by their values, get rid of\n      SymbolicValue\n    - introduce globals for ``madx_units`` and ``ui_units`` used for\n      conversion\n    - format degrees with \"°\" symbol\n    - improve unit labels for lists\n    - remove pint units file, use the default one shipped with pint instead\n\n\n1.7.2\n-----\nDate: 05.03.2018\n\n- added missing factor 2 in ellipse axes lengths\n- don't need AttrDict from new cpymad in this version\n\n\n1.7.1\n-----\nDate: 02.03.2018\n\n- fix knobs in skew quadrupoles\n- hotfix regression with posx/posy aliases\n- compatible with hit_models 0.7.0, hit_csys 0.6.0\n\n\n1.7.0\n-----\nDate: 02.03.2018\n\n- compute alfa/beta from sigma matrix for consistency\n- expose ``twiss`` variable holding twiss table in python shell widget\n- set better display units for some plots\n- keep plot axis limits on most updates\n- finally start to use position dependent emittances in some places\n- add more plots: momentum/dispersion/phase advance/emittance/gamma\n- plot monitors as dashed lines\n- plot loaded/snapshot curves without markers\n- update infobox window title when changing element\n- add tab with global variables to init-settings dialog\n- add tabs to info box: primary/expert/twiss/sigma/ellipse\n- keep position in info-box when refreshing values or element\n- fit small tool buttons to text size\n- let user click on zero-length elements\n- scale interpolation step length with sequence length, to show smooth curves\n- default number_format.align=right\n- default mirror_mode=True\n- fix python shell, when starting madqt as gui_script under windows\n- rework the multi-grid dialog (for orbit correction)\n- rename back to madgui\n- new versioning scheme, interpret: ``0.0.X`` -> ``1.X.0``, acknowledging the\n  the ``0.X.Y`` releases of the old wx-based madgui.\n- remove pytao binding\n- match dialog: dropdown menu for knobs, minor visual improvements\n- internal refactoring, module renamings\n- can connect online control without loaded model\n\n\n0.0.6\n-----\nDate: 26.01.2018\n\n- element info box: add UI to switch element\n- floor plan: support 3D models (no more curved sbends anymore though…)\n- floor plan: add UI to change view perspective\n- floor plan: fix mirror inversion\n- main/plot window: set window title\n- main window: add config setting for initial position\n- codebase: unify the workspace/segment mess, now only have 'model' again\n  (it's unlikely that we will ever be able to work on less/more than one\n  sequence in the same workspace anyway)\n\n\n0.0.5\n-----\nDate: 24.01.2018\n\n- fix mass unit in MAD-X\n- massive simplification of knobs API for interfacing control system\n- can read beam parameters from online plugin\n- show updated orbit plot after fitting in orbit-correction-mode (regression)\n- open orbit plot for orbit-correction-mode\n\n\n0.0.4\n-----\nDate: 09.01.2018\n\n- Emit signal when workspace is changed (for plugins…)\n- Show about boxes only if the package exists\n- Add about dialog for pytao\n- Change tab in settings dialog when clicking menu\n- When user invokes an action via a menu and the corresponding dialog\n  already exists, focus the existing window\n- No longer show checkboxes for twiss/beam dialogs in menu\n- Read spinbox setting from config\n- [regression] Fix exception (closed logfile) when opening different model\n- [regression] Fix exception in online-control module when changing values\n  into MAD-X\n\n\n0.0.3\n-----\nDate: 06.01.2018\n\n- fuzzy select when removing constraints in matching mode (middle click)\n- start log threads as daemon thread (never blocks program exit)\n- thread safe access to madx/tao\n- fetch element data for indicators in background\n- fix missing .ui files in installation\n- fix crash on windows at startup when starting via gui_scripts entrypoint\n\n\n0.0.2\n-----\nDate: 05.12.2017\n\n- continuous matching (within any element position)\n- fix bugs in matching code\n- updated dependencies: pint 0.8.1, cpymad>=0.18.2, pytao>=0.0.1\n\n\n0.0.1\n-----\nDate: 30.11.2017\n\nFirst reference point to define somewhat stable versions.\n\nList of features:\n\n- cpymad/pytao as simulation backends\n- plots: alfa/beta/envelope/orbit; and the ones defined by tao\n- integrated python shell (ipython/jupyter) not very useful as of yet:\n  limited exhibition of objects, no convenient APIs provided (plotting)\n- log tab that shows madx/tao output\n- tab that shows madx/tao commands\n- display and edit box for beam parameters; initial conditions (i.e. twiss);\n  and element attributes (read-only so far)\n- 2D floor plan\n- matching (interactive + dialog)\n- emittance (dialog)\n- orbit alignment: 2-grid + N+optic methods",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hibtc/madgui",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "madgui",
    "package_url": "https://pypi.org/project/madgui/",
    "platform": "",
    "project_url": "https://pypi.org/project/madgui/",
    "project_urls": {
      "Homepage": "https://github.com/hibtc/madgui"
    },
    "release_url": "https://pypi.org/project/madgui/1.10.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "GUI for accelerator simulations using MAD-X.",
    "version": "1.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8419639,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bd62018de0db51b41cbb845a230e87263d1182f148577b1e738cf763974e123",
        "md5": "00e9be825ddb38e3db55b75c769fa78e",
        "sha256": "c313582c2ee258dd99012dba027e297cecb41406a175bc556bbe2e19d861bade"
      },
      "downloads": -1,
      "filename": "madgui-1.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "00e9be825ddb38e3db55b75c769fa78e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 122351,
      "upload_time": "2018-05-31T10:40:29",
      "upload_time_iso_8601": "2018-05-31T10:40:29.881184Z",
      "url": "https://files.pythonhosted.org/packages/0b/d6/2018de0db51b41cbb845a230e87263d1182f148577b1e738cf763974e123/madgui-1.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}