{
  "info": {
    "author": "幸福关中",
    "author_email": "1158920674@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![未标题-1.jpg](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/06b9678856eb485ebe78bbd188d4c4ea~tplv-k3u1fbpfcp-watermark.image?)\n### 介绍\n\nHappyShop 是一个 Django 开发的第三方包，可以快速集成到任何django项目，以便快速获得一个简单的商城功能。\n\n本项目采用django + DRF + vue开发，具备前后端分离基因，拥有完整的多规格商品逻辑，集成支付宝支付，只需要简单配置即可快速收款！\n\n当然，其他功能还在迭代…\n### 演示站\n- 演示地址：[HappyShop (lotdoc.cn)](http://mall.lotdoc.cn/happy/)\n- 开源地址：[django-happy-shop: django-happy-shop是python栈采用最新版django框架前后端分离开发的商城模块，可快速通过pip命令快速集成到任何django项目！ (gitee.com)](https://gitee.com/xingfugz/happy-shop)\n- 文档地址：[django-happy-shop使用文档 (lotdoc.cn)](http://www.lotdoc.cn/blog/detail/155/?menu=5)\n\n### 快速开始\n\n#### pip命令快速安装\n\n安装方法与python其他包的方法一致，一条命令即可快速安装！\n\n```python\npip install django-happy-shop\n```\n\n### 使用说明\n\n1.  将 \"happy_shop\" 添加到您的 INSTALLED_APPS 设置中，以及项目需要的其他几个依赖，如下所示：\n\n```python\nINSTALLED_APPS = [\n    ...\n    'happy_shop',      # happy_shop主程序\n    'rest_framework',  # DRF\n\t\n    'corsheaders',     # 处理跨域的包\n    'crispy_forms',    # 可浏览API的form包，便于调试\n]\n```\n\n其中引入`happy_shop` 与 ``rest_framework`` 两个模块是必须的，因为改程序依赖于他们两个，下边两个模块是为了方便调试而引入的，一个是解决跨域问题而引入，这个视自己的使用情况决定，当前程序可以不引入，另外一个是为了配合django-filter模块使用，如果不开发调试可不引入！\n\n2. 在项目 urls.py 中包含 happy_shop 的 URLconf，如下所示\n\n```python\nurlpatterns = [\n    ...\n    # 这里url开头的happy暂时请不要自定义，可能会影响某些接口的运作\n    path('happy/', include('happy_shop.urls')),  \n]\n```\n\n如果需要查看可浏览的API文档及页面还需要加入以下两个url，这不是必须的，根据自己使用情况而定！\n\n```python\nfrom rest_framework.documentation import include_docs_urls\n\nurlpatterns = [\n    ...\n    # 这里url开头的happy暂时请不要自定义，可能会影响某些接口的运作\n    path('happy/', include('happy_shop.urls')),  \n\t\n    # 需要查看drf的接口文档请配置\n    path('docs/', include_docs_urls(title='HappyShop API')), \n    # 需要DRF的可浏览API能力请配置 \n    path('api-auth/', include('rest_framework.urls')),    \n]\n```\n\n3. 运行django的`migrate`命令创建模型数据\n\n```python\npython manage.py migrate\n```\n\n4. 运行django的runserver命令，启动开发服务器\n\n```python\npython manage.py runserver\n```\n\n5. 访问http://127.0.0.1:8000/happy/ 即可查看商城页面！\n\n7. 当前商城系统后台依赖django默认的admin，请访问`http://127.0.0.1:8000/admin/` 进入后台进行数据管理，请自行创建管理员账号密码及无比开启django管理后端【django默认后端】！\n\n```python\npython manage.py createsuperuser  # 创建超管\n```\n\n### 支付配置\n\n注意：如果你只是暂时查看演示，不需要收款，到此就先告一段落！\n\n配置收款需要在项目的settings.py文件中额外引入相关配置，记住支付宝的相关公钥和私钥都是需要配置路径文件，这里一一定要配置正确，否则会影响程序运行，这一块后期版本可能会优化！\n\n**配置如下：**\n\n```python\nHAPPY_SHOP = {\n    'ALIPAY':{\n        'APPID': appid\n        'RETURN_URL': 'http://127.0.0.1:8000/happy/api/alipay/',\n        'NOTIFY_URL': 'http://127.0.0.1:8000/happy/api/alipay/',\n        'DEBUG': DEBUG, \n        'PRIVATE_KEY':BASE_DIR / 'app_private_key.pem',    # 应用私钥\n        'PUBLIC_KEY':BASE_DIR / 'alipay_public_key.pem',   # 支付宝公钥，不是应用公钥\n    },\n}\n```\n\n私钥与公钥一定要配置正确，否则回调无法验证成功，订单状态无法修改！ 部署时一定要关闭django的DEBUG模式，否则支付地址跳转为沙箱地址，不能正确收款！\n\n### 其他\n\n其他相关模块的配置，请参考有关模块的文档,感谢一下几个模块的作者！\n\n-   [Home - Django REST framework (django-rest-framework.org)](https://www.django-rest-framework.org/)\n-   [django-cors-headers · PyPI](https://pypi.org/project/django-cors-headers/)\n-   [django-filter — django-filter 2.4.0 documentation](https://django-filter.readthedocs.io/en/latest/)\n-   [alipay/README.zh-hans.md at master · fzlee/alipay (github.com)](https://github.com/fzlee/alipay/blob/master/README.zh-hans.md)\n\n### 交流群\n- qq群：962059502\n\n![QQ群](happy_shop/static/happy_shop/images/qq.png ) \n![微信群](happy_shop/static/happy_shop/images/wx.png)\n\n\n\n\n欢迎大家start，评论指教！\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.lotdoc.cn/blog/topic/detail/5/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-happy-shop",
    "package_url": "https://pypi.org/project/django-happy-shop/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-happy-shop/",
    "project_urls": {
      "Bug Tracker": "http://www.lotdoc.cn",
      "Homepage": "http://www.lotdoc.cn/blog/topic/detail/5/"
    },
    "release_url": "https://pypi.org/project/django-happy-shop/1.1.0/",
    "requires_dist": [
      "Django (>=3.2)",
      "Pillow (>=9.0.1)",
      "python-alipay-sdk (>=3.0.4)",
      "django-cors-headers (>=3.11.0)",
      "django-crispy-forms (>=1.14.0)",
      "django-filter (>=21.1)",
      "coreapi (>=2.3.3)",
      "djangorestframework (>=3.13.1)",
      "drf-extensions (>=0.7.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "一个可快速集成到任何django项目的轻量级商城模块！",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13940876,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33c4635c6e6112554b00803eae60e99fd01a29765725087bc9ce6a4b2878a518",
        "md5": "7bfcb85e2b8f57d8d89b9a619a8e793c",
        "sha256": "e45eaee835c5bd1838c1f6e3929c8ca229a5d0aa7e2788e717f1bc8b544f008c"
      },
      "downloads": -1,
      "filename": "django_happy_shop-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bfcb85e2b8f57d8d89b9a619a8e793c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 2474730,
      "upload_time": "2022-04-06T09:38:12",
      "upload_time_iso_8601": "2022-04-06T09:38:12.721993Z",
      "url": "https://files.pythonhosted.org/packages/33/c4/635c6e6112554b00803eae60e99fd01a29765725087bc9ce6a4b2878a518/django_happy_shop-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5700658c9804ae9f545d0db6b9edddde282d9355102d43868177d4e8bc801cc8",
        "md5": "97697fb4b7b025cd4a73b755dd8e5e5a",
        "sha256": "77c92d2f433911e047e2083f8819c5f47d7eb858c5fcdd6c0cebe09fa807f61a"
      },
      "downloads": -1,
      "filename": "django-happy-shop-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "97697fb4b7b025cd4a73b755dd8e5e5a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2447284,
      "upload_time": "2022-04-06T09:38:20",
      "upload_time_iso_8601": "2022-04-06T09:38:20.007497Z",
      "url": "https://files.pythonhosted.org/packages/57/00/658c9804ae9f545d0db6b9edddde282d9355102d43868177d4e8bc801cc8/django-happy-shop-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}