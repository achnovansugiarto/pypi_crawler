{
  "info": {
    "author": "Flavio Curella",
    "author_email": "flavio.curella@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Django Redux\n=============================\n\nA re-usable bridge between Django channels and Redux.\n\nQuickstart\n----------\n\n::\n\n    $ pip install django_redux\n    $ npm install django-channels django_redux\n\nCreate a file called `engine.py` for your project::\n\n    from django_redux import action, AsyncReduxConsumer\n\n\n    class MyConsumer(AsyncReduxConsumer):\n\n        async def connect(self, message):\n            if message.user.is_authenticated:\n                await self.send_json({\n                    'type': 'SET_USER',\n                    'user': {\n                        'username': self.message.user.username,\n                    }\n                })\n\n        # This method will be called when the `INCREMENT_COUNTER` action gets\n        # fired from the JS via the reduxBridge (see below).\n        @action('INCREMENT_COUNTER')\n        async def incr_counter(self, message):\n            await self.send_json({'type': 'INCREMENTED_COUNTER', 'incrementBy': message['incrementBy']})\n\n\nIn your js entry point::\n\n    // app.js\n\n    import React from 'react';\n\n    import { render } from 'react-dom';\n    import { Provider } from 'react-redux';\n    import { createStore, } from 'redux';\n\n    import reducer from '../reducers';\n    import Root from '../containers/Root.react';\n\n    import { WebSocketBridge } from 'django-channels';\n    import { eventToAction } from 'django_redux';\n\n    const store = createStore(\n      reducer,\n    );\n\n\n    export const reduxBridge = new WebSocketBridge();\n    reduxBridge.connect(\"ws://localhost:8000/ws/\");\n    reduxBridge.addEventListener(\"message\", eventToAction(store));\n\n    render(\n      <Provider store={store}>\n        <Root />\n      </Provider>,\n      document.getElementById('root')\n    );\n\nTo send an action from redux::\n\n    import { createAction } from 'redux-actions';\n\n    import ActionTypes from './constants';\n    import { reduxBridge } from './app';\n\n\n    export const incrementCounter = createAction(ActionTypes.INCREMENT_COUNTER, (incrementBy) => {\n      reduxBridge.send({\n        type: ActionTypes.INCREMENT_COUNTER,\n        incrementBy\n      });\n    });\n\nTo send an action from the backend::\n\n    from django_redux import send_action\n\n    await send_action('mygroup', {\n        'type': 'ACTION_NAME',\n        'payload': {'any': 'thing'},\n    })\n\nGroups\n------\n\nAll clients are automatically added to a group called `\"broadcast\"`.\n\nAuthenticated users are automatically added to a group called `\"user.{user.pk}\"` so you they can be conveniently addressed.\n\nTODO:\n\n* Tests\n    * ``send_action``\n* Data binding\n* Docs\n    * Multiplexing\n\nCredits\n-------\n\nMost of this code is adapted from `johnpaulett/channel_chat <https://github.com/johnpaulett/channel_chat>`_.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/channels-frontend/django_redux",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-redux",
    "package_url": "https://pypi.org/project/django-redux/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-redux/",
    "project_urls": {
      "Homepage": "https://github.com/channels-frontend/django_redux"
    },
    "release_url": "https://pypi.org/project/django-redux/1.0.0/",
    "requires_dist": [
      "channels",
      "Django"
    ],
    "requires_python": "",
    "summary": "A re-usable bridge between Django channels and Redux Edit",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5700002,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbebef074e9875dcf4635b5bcf8ee146500a39d6dbe3d7a6bb66e846aed278cf",
        "md5": "9d777c86f2cc251da57ea230d857870c",
        "sha256": "b5116dc04f6b6c0fce9a984b53230e3c7717e9be43fbf727dd170ad70ddc1ee1"
      },
      "downloads": -1,
      "filename": "django_redux-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d777c86f2cc251da57ea230d857870c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 135853,
      "upload_time": "2019-08-19T19:31:38",
      "upload_time_iso_8601": "2019-08-19T19:31:38.492886Z",
      "url": "https://files.pythonhosted.org/packages/cb/eb/ef074e9875dcf4635b5bcf8ee146500a39d6dbe3d7a6bb66e846aed278cf/django_redux-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa2562ddc3bce150df9b92f0efa760500576022086b8827ee3f511df9495b96b",
        "md5": "3c003935669d0a35f05c48e08c63db57",
        "sha256": "4ff85b1484d7c763bade92df99afecfa6ee145cb70c8bcffa0288f696010a915"
      },
      "downloads": -1,
      "filename": "django_redux-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3c003935669d0a35f05c48e08c63db57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3621,
      "upload_time": "2019-08-19T19:31:40",
      "upload_time_iso_8601": "2019-08-19T19:31:40.992428Z",
      "url": "https://files.pythonhosted.org/packages/fa/25/62ddc3bce150df9b92f0efa760500576022086b8827ee3f511df9495b96b/django_redux-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}