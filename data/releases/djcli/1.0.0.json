{
  "info": {
    "author": "James Pic",
    "author_email": "jamespic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Plugins",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Database",
      "Topic :: Software Development",
      "Topic :: System",
      "Topic :: Terminals"
    ],
    "description": "djcli tutorial\n~~~~~~~~~~~~~~\n\nFirst, install ``djcli`` with pip.\n\nThen, change directory to a directory where you have a Django project manage.py\nif you're not 100% sure about your DJANGO_SETTINGS_MODULE environment variable\nbeing right, or have none: it will find it by parsing manage.py\n\nGetting help\n============\n\nRun the ``djcli`` command without argument as such, note that you would have\ncolored output::\n\n    $ djcli\n    djcli: time for CLI party !\n\n    It would like DJANGO_SETTINGS_MODULE env var, and does not require to be in\n    INSTALLED_APPS because automation software should be made automatically\n    available and adding to INSTALLED_APPS is a manual step.\n\n    Otherwise, it will try to find out DJANGO_SETTINGS_MODULE itself, searching for\n    a manage.py in the current working directory or sub directory.\n\n    [Callables in /home/jpic/src/djcli/djcli.py]\n\n    - chpasswd\n    - save\n    - delete\n    - detail\n    - ls\n    - settings\n\n    Try djcli help callable_name\n\nCreate/Update with the save command\n===================================\n\nYou can get help with ``djcli help save``::\n\n    $ djcli  help save\n    Idempotent save function.\n\n    First argument must be model name, for apps.get_model.\n    With only keyword arguments, it will pass them to create().\n    If you pass arguments, it will use update_or_create, passing\n    any keyword argument name as defaults to update_or_create\n    instead of kwarg.\n\n    # Create a user, not idempotent\n    djcli save auth.user username=foo email=joe@example.com\n\n    # Create or update a user based on email, idempotent yay !\n    djcli save auth.user email username=foo email=joe@example.com\n\n    # oh, and with settings.* support for your model swapping fun hacks ;)\n    djcli save settings.AUTH_USER_MODEL ...\n\nExample creating a new user::\n\n    $ djcli save settings.AUTH_USER_MODEL username=13337noob is_superuser=True is_staff=True first_name=Newb\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    ------------  --------------------------------\n    id            5\n    password\n    last_login\n    is_superuser  True\n    username      13337noob\n    first_name    Newb\n    last_name\n    email\n    is_staff      True\n    is_active     True\n    date_joined   2018-11-18 12:23:59.903470+00:00\n    ------------  --------------------------------\n\nExample creating a user with an idempotent command based on username::\n\n    $ djcli save settings.AUTH_USER_MODEL username username=13337noob is_superuser=False is_staff=True first_name=Newb\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    ------------  --------------------------------\n    id            5\n    password\n    last_login\n    is_superuser  False\n    username      13337noob\n    first_name    Newb\n    last_name\n    email\n    is_staff      True\n    is_active     True\n    date_joined   2018-11-18 12:23:59.903470+00:00\n    ------------  --------------------------------\n\nDetail\n======\n\nGet help from the detail command with ``djcli help detail``::\n\n    $ djcli  help detail\n    Print detail for a model.\n\n    kwargs are passed to filter()\n\n    djcli detail pk=123\n\nShow a model detail for example::\n\n    $ djcli detail auth.User username=13337noob\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    ------------  --------------------------------\n    id            5\n    password\n    last_login\n    is_superuser  False\n    username      13337noob\n    first_name    Newb\n    last_name\n    email\n    is_staff      True\n    is_active     True\n    date_joined   2018-11-18 12:23:59.903470+00:00\n    ------------  --------------------------------\n\nChange password with the chpasswd command\n=========================================\n\nGet help with the ``djcli help chpasswd`` command::\n\n    $ djcli  help chpasswd\n    Change the password for user.\n\n    It takes the password as argument, that you can use `-` for stdin.\n    All kwargs will be passed to get()\n\n    Example:\n\n        djcli chpasswd username=... thepassword\n        echo thepassword | djcli chpasswd username=... -\n\nExample::\n\n    $ djcli chpasswd newpassword username=1337noob\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    Password updated !\n\nOr::\n\n    $ echo newpassword | djcli chpasswd - username=1337noob\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    Password updated !\n\nDelete command\n==============\n\nGet help with the ``djcli help delete`` command::\n\n    $ djcli help delete\n    Delete a model filtered with kwargs.\n\n    It will show all columns of the delete model prior to actual delete,\n    otherwise the list of columns that were passed as argument.\n\n    Example:\n\n        # Show all columns by default\n        djcli delete settings.AUTH_USER_MODEL username=1337noob\n\n        # Show only username and email column\n        djcli delete settings.AUTH_USER_MODEL email username username=1337noob\n\nExample::\n\n    $ djcli delete settings.AUTH_USER_MODEL email username username=foo\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    ---------------  --------\n    email            username\n    joe@example.com  foo\n    ---------------  --------\n    Deleted 1 objects\n\nList with the ls command\n========================\n\nGet help with the ``djcli help ls`` command::\n\n    $ djcli help ls\n    Search models\n\n    kwargs are passed to filter.\n    It shows all fields by default, you can restrict them with args.\n\n    Show username and email for superusers:\n\n        djcli settings.AUTH_USER_MODEL is_superuser=1 username email\n\nExample::\n\n    $ djcli ls settings.AUTH_USER_MODEL is_staff=1 username email is_superuser\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    -----  ------------  ---------\n    email  is_superuser  username\n           True          newb\n           False         13337noob\n    -----  ------------  ---------\n\nShow settings with the settings command\n=======================================\n\nGet help with ``djcli help settings``::\n\n    $ djcli help settings\n    Show settings from django.\n\n    How many times have you done the following ?\n\n        python manage.py shell\n        from django.conf import settings\n        settings.DATABASES # or something\n\n    Well it's over now ! Try this instead:\n\n        djcli settings DATABASES INSTALLED_APPS # etc\n\nExample::\n\n    $ djcli settings DATABASES INSTALLED_APPS\n    Auto-detected DJANGO_SETTINGS_MODULE=testproj2.settings\n    If incorrect, set DJANGO_SETTINGS_MODULE env var\n    DATABASES={'default': {'ATOMIC_REQUESTS': False,\n                 'AUTOCOMMIT': True,\n                 'CONN_MAX_AGE': 0,\n                 'ENGINE': 'django.db.backends.sqlite3',\n                 'HOST': '',\n                 'NAME': '/home/jpic/src/clitoo/testproj2/db.sqlite3',\n                 'OPTIONS': {},\n                 'PASSWORD': '',\n                 'PORT': '',\n                 'TEST': {'CHARSET': None,\n                          'COLLATION': None,\n                          'MIRROR': None,\n                          'NAME': None},\n                 'TIME_ZONE': None,\n                 'USER': ''}}\n    INSTALLED_APPS=['django.contrib.admin',\n     'django.contrib.auth',\n     'django.contrib.contenttypes',\n     'django.contrib.sessions',\n     'django.contrib.messages',\n     'django.contrib.staticfiles']",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://yourlabs.io/oss/djcli",
    "keywords": "django cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djcli",
    "package_url": "https://pypi.org/project/djcli/",
    "platform": "",
    "project_url": "https://pypi.org/project/djcli/",
    "project_urls": {
      "Homepage": "https://yourlabs.io/oss/djcli"
    },
    "release_url": "https://pypi.org/project/djcli/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "djcli tutorial",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13153363,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2816a681ac909e706c307fa0c33833a18f0bf4706467de60184824acbbaa7136",
        "md5": "650935373e51934ae9e73f99f2fa0e09",
        "sha256": "b31fd6472be4be31a6bb24b7382d2b11ab8ce64ede59b5ab262fd32bcd1772e2"
      },
      "downloads": -1,
      "filename": "djcli-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "650935373e51934ae9e73f99f2fa0e09",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 5277,
      "upload_time": "2018-11-18T15:35:32",
      "upload_time_iso_8601": "2018-11-18T15:35:32.103694Z",
      "url": "https://files.pythonhosted.org/packages/28/16/a681ac909e706c307fa0c33833a18f0bf4706467de60184824acbbaa7136/djcli-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}