{
  "info": {
    "author": "Sondre Lilleb√∏ Gundersen",
    "author_email": "sondrelg@live.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "License :: Other/Proprietary License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Documentation",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Unit",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "<a href=\"https://pypi.org/project/drf-openapi-tester/\">\n    <img src=\"https://img.shields.io/pypi/v/drf-openapi-tester.svg\" alt=\"Package version\">\n</a>\n<a href=\"https://codecov.io/gh/snok/drf-openapi-tester\">\n    <img src=\"https://codecov.io/gh/snok/drf-openapi-tester/branch/master/graph/badge.svg\" alt=\"Code coverage\">\n</a>\n<a href=\"https://pypi.org/project/drf-openapi-tester/\">\n    <img src=\"https://img.shields.io/badge/python-3.6%2B-blue\" alt=\"Supported Python versions\">\n</a>\n<a href=\"https://pypi.python.org/pypi/drf-openapi-tester\">\n    <img src=\"https://img.shields.io/badge/django%20versions-2.2%2B-blue\" alt=\"Supported Django versions\">\n</a>\n<a href=\"http://mypy-lang.org/\">\n    <img src=\"http://www.mypy-lang.org/static/mypy_badge.svg\" alt=\"Checked with mypy\">\n</a>\n\n# DRF OpenAPI Tester\n\nDRF OpenAPI Tester is a test utility to validate API responses against OpenAPI 2 and 3 schema. It has built-in support\nfor:\n\n- OpenAPI 2/3 yaml or json schema files.\n- OpenAPI 2 schemas created with [drf-yasg](https://github.com/axnsan12/drf-yasg).\n- OpenAPI 3 schemas created with [drf-spectacular](https://github.com/tfranzel/drf-spectacular).\n\n## Installation\n\n```shell script\npip install drf-openapi-tester\n```\n\n## Usage\n\nFirst instantiate one or more instances of SchemaTester:\n\n```python\nfrom openapi_tester import SchemaTester\n\nschema_tester = SchemaTester()\n\n\n```\n\nIf you are using either [drf-yasg](https://github.com/axnsan12/drf-yasg)\nor [drf-spectacular](https://github.com/tfranzel/drf-spectacular) this will be auto-detected, and the schema will be\nloaded by the SchemaTester automatically. If you are using schema files though, you will need to pass the file path to\nthe tester:\n\n```python\nfrom openapi_tester import SchemaTester\n\n# path should be a string\nschema_tester = SchemaTester(schema_file_path=\"./schemas/publishedSpecs.yaml\")\n\n\n```\n\nOnce you instantiate a tester, you can use it to validate a DRF Response in a test:\n\n```python\nfrom openapi_tester.schema_tester import SchemaTester\n\n# you need to create at least one instance of SchemaTester.\n# you can pass kwargs to it\nschema_tester = SchemaTester()\n\n\ndef test_response_documentation(client):\n    response = client.get('api/v1/test/1')\n    assert response.status_code == 200\n    schema_tester.validate_response(response=response)\n```\n\nIf you are using the Django testing framework, you can create a base APITestCase that incorporates schema validation:\n\n```python\nfrom openapi_tester.schema_tester import SchemaTester\nfrom rest_framework.test import APITestCase\nfrom rest_framework.response import Response\n\nschema_tester = SchemaTester()\n\n\nclass BaseAPITestCase(APITestCase):\n    \"\"\" Base test class for api views including schema validation \"\"\"\n\n    @staticmethod\n    def assertResponse(response: Response, **kwargs) -> None:\n        \"\"\" helper to run validate_response and pass kwargs to it \"\"\"\n        schema_tester.validate_response(response=response, **kwargs)\n```\n\nThen use it in a test file:\n\n```python\nfrom shared.testing import BaseAPITestCase\n\n\nclass MyAPITests(BaseAPITestCase):\n    def test_some_view(self):\n        response = self.client.get(\"...\")\n        self.assertResponse(response)\n```\n\n## Options\n\nWe currently support the following optional kwargs:\n\n### Case tester\n\nThe case tester argument takes a callable to validate the case of both your response schemas and responses. If nothing\nis passed, case validation is skipped.\n\nThe library currently has 4 build-in functions that can be used:\n\n- `is_pascal_case`\n- `is_snake_case`\n- `is_camel_case`\n- `is_kebab-case`\n\nfor example:\n\n```python\nfrom openapi_tester import SchemaTester, is_camel_case\n\nschema_test_with_case_validation = SchemaTester(case_tester=is_camel_case)\n\n```\n\nor\n\n```python\nfrom openapi_tester import SchemaTester, is_camel_case\n\nschema_tester = SchemaTester()\n\n\ndef my_test(client):\n    response = client.get('api/v1/test/1')\n    assert response.status_code == 200\n    schema_tester.validate_response(response=response, case_tester=is_camel_case)\n```\n\nYou of course pass your own custom validator function.\n\n### Ignore case\n\nList of keys to ignore. In some cases you might want to declare a global list of keys exempt from case testing.\n\nfor example:\n\n```python\nfrom openapi_tester import SchemaTester, is_camel_case\n\nschema_test_with_case_validation = SchemaTester(case_tester=is_camel_case, ignore_case=[\"IP\"])\n\n```\n\n## Schema Validation\n\nWhen the SchemaTester loads a schema, it runs it through\n[OpenAPI Spec validator](https://github.com/p1c2u/openapi-spec-validator) which validates that the schema passes without\nspecification compliance issues. In case of issues the validator will raise an error.\n\n## Known Issues\n\n* We are using [prance](https://github.com/jfinkhaeuser/prance) as a schema resolver, and it has some issues with the\n  resolution of (very) complex OpenAPI 2.0 schemas. If you encounter\n  issues, [please document them here](https://github.com/snok/drf-openapi-tester/issues/205).\n\n## Contributing\n\nContributions are welcome. Please see the [contributing guide](CONTRIBUTING.md)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/snok/drf-openapi-tester",
    "keywords": "openapi,swagger,api,testing,schema,django,drf",
    "license": "BSD-4-Clause",
    "maintainer": "Na'aman Hirschfeld",
    "maintainer_email": "nhirschfeld@gmail.com",
    "name": "drf-openapi-tester",
    "package_url": "https://pypi.org/project/drf-openapi-tester/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-openapi-tester/",
    "project_urls": {
      "Documentation": "https://github.com/snok/drf-openapi-tester",
      "Homepage": "https://github.com/snok/drf-openapi-tester",
      "Repository": "https://github.com/snok/drf-openapi-tester"
    },
    "release_url": "https://pypi.org/project/drf-openapi-tester/1.2.0/",
    "requires_dist": [
      "djangorestframework",
      "django (>=2.2,<4.0)",
      "inflection (>=0.4.0,<0.5.0)",
      "openapi-spec-validator (>=0.2.9,<0.3.0)",
      "prance (>=0.16.0,<0.17.0)",
      "pyYAML"
    ],
    "requires_python": ">=3.6.1,<4.0.0",
    "summary": "Django test utility for validating OpenAPI response documentation",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15967652,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb62c6a8b8d95acd3bf656b3f8e8fd97662f6ef5530de7defb6b4aa6bb9d4ba9",
        "md5": "6db23fe2dae6411aa86bf3e597b39dbf",
        "sha256": "a11f80901356489ec51c3c5f4b3dce6b9f587173725bd6c146bec8ffe7c963a8"
      },
      "downloads": -1,
      "filename": "drf_openapi_tester-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6db23fe2dae6411aa86bf3e597b39dbf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 18904,
      "upload_time": "2021-02-14T18:39:32",
      "upload_time_iso_8601": "2021-02-14T18:39:32.075084Z",
      "url": "https://files.pythonhosted.org/packages/fb/62/c6a8b8d95acd3bf656b3f8e8fd97662f6ef5530de7defb6b4aa6bb9d4ba9/drf_openapi_tester-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a465050b5d9fc09c3f2eb61fa4fb2563f90decc6d1522f6059d679d1c5e2cffc",
        "md5": "82adbe85447b786880b6d34c383240c8",
        "sha256": "082395fb58d235462deb15ec7252d9573bb265bc94cd709cd3e17d267e7e9279"
      },
      "downloads": -1,
      "filename": "drf-openapi-tester-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "82adbe85447b786880b6d34c383240c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 17854,
      "upload_time": "2021-02-14T18:39:31",
      "upload_time_iso_8601": "2021-02-14T18:39:31.206183Z",
      "url": "https://files.pythonhosted.org/packages/a4/65/050b5d9fc09c3f2eb61fa4fb2563f90decc6d1522f6059d679d1c5e2cffc/drf-openapi-tester-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}