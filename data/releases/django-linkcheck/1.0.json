{
  "info": {
    "author": "Andy Baker",
    "author_email": "andy@andybak.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "django-linkcheck\n================\n\n.. image:: https://github.com/andybak/django-linkcheck/raw/master/linkcheck.jpg\n\nA fairly flexible app that will analyze and report on links in any model that\nyou register with it. Links can be bare (urls or image and file fields) or\nembedded in HTML (linkcheck handles the parsing). It's fairly easy to override\nmethods of the Linkcheck object should you need to do anything more\ncomplicated (like generate URLs from slug fields etc).\n \nYou should run it's management command via cron or similar to check external\nlinks regularly to see if their status changes. All links are checked\nautomatically when objects are saved. This is handled by signals.\n\nRequirements\n-----------\n\nIf you want the Ajax 'recheck' and 'ignore' buttons to work then JQuery should be available in your admin templates as $. (I intend to fix this so it works using the jQuery that Django loads automatically)\n\nBasic usage\n-----------\n\n#. Install app to somewhere on your Python path\n\n#. Add something along the lines of ``examples/linklists.py`` to every app that\n   either:\n\n  #) has models that contain content (e.g. url/image fields, chunks of markup\n     or anything that gets transformed into a IMG or HREF when displayed\n  #) can be the target of a link - i.e. is addressed by a url - in this case\n     make sure it has an instance method named 'get_absolute_url'\n\n#. Syncdb\n\n#. Add to your root url config::\n\n    (r'^admin/linkcheck/', include('linkcheck.urls')) \n\n#. View ``/admin/linkcheck/`` from your browser\n\nThe file 'notifications.py' is completely optional. It works with\nadmin-notifications_ to display a notification about broken links as\nshown in the screenshot above.\n\n.. _admin-notifications: http://github.com/andybak/django-admin-notifications\n\nWe are aware that this documentation is on the brief side of things so any\nsuggestions for elaboration or clarification would be gratefully accepted.\n\nSettings\n--------\n\nLINKCHECK_EXTERNAL_RECHECK_INTERVAL\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: 10080 (1 week in minutes)\n\nWill not recheck any external link that has been checked more recently than this value.\n\nLINKCHECK_EXTERNAL_REGEX_STRING\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: r'^https?://'\n\nA string applied as a regex to a URL to determine whether it's internal or external.\n\nLINKCHECK_MEDIA_PREFIX\n~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: '/media/'\n\nCurrently linkcheck tests whether links to internal static media are correct by wrangling the URL to be a local filesystem path.\n\nIt strips MEDIA_PREFIX off the interal link and concatenates the result onto settings.MEDIA_ROOT and tests that using os.path.exists\n\nThis 'works for me' but it is probably going to break for other people's setups. Patches welcome.\n\nLINKCHECK_RESULTS_PER_PAGE\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nControls pagination.\n\nPagination is slightly peculiar at the moment due to the way links are grouped by object.\n\n\nLINKCHECK_MAX_URL_LENGTH\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: 255\n\nThe length of the URL field. Defaults to 255 for compatibility with MySQL (see http://docs.djangoproject.com/en/dev/ref/databases/#notes-on-specific-fields )\n\n\nSITE_DOMAIN and LINKCHECK_SITE_DOMAINS\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLinkcheck tests external and internal using differently. Internal links use the Django test client whereas external links are tested using urllib2.\n\nTesting internal links this as if they were external can cause errors in some circumstances so Linkcheck needs to know which external urls are to be treated as internal. \n\nLinkcheck looks for either of the settings above. It only uses SITE_DOMAIN if LINKCHECK_SITE_DOMAINS isn't present\n\n\nSITE_DOMAIN = \"mysite.com\"\n\nwould tell linkchecker to treat the following as internal links:\n\nmysite.com\nwww.mysite.com\ntest.mysite.com\n\nIf you instead set LINKCHECK_SITE_DOMAINS to be a list or tuple then you can explicitly list the domains that should be treated as internal.\n\n\ndjango-filebrowser integration\n------------------------------\n\nIf django-filebrowser is present on your path then linkcheck will listen to the post-upload, delete and rename signals and update itself according\n\n\nRunning tests\n-------------\n\nTests can be run standalone by using the runtests.py script in linkcheck root:\n    $ python runtests.py\nIf you want to run linkcheck tests in the context of your project, you should include 'linkcheck.tests.sampleapp' in your INSTALLED_APPS setting.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/andybak/django-linkcheck/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-linkcheck",
    "package_url": "https://pypi.org/project/django-linkcheck/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-linkcheck/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/andybak/django-linkcheck/"
    },
    "release_url": "https://pypi.org/project/django-linkcheck/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django app that will analyze and report on links in any model that you register with it.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17539957,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "344ae3d200e5185be35e7c2a379dce36bf1fdafbafa878c9f54ecc5b41ac7874",
        "md5": "881b65d3dfc54ed9e14e0400c6934eb9",
        "sha256": "16c1997542608fb6068893f0b0a63f35963a3dbcd7150ec6bdb42bfa04165cfb"
      },
      "downloads": -1,
      "filename": "django-linkcheck-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "881b65d3dfc54ed9e14e0400c6934eb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19604,
      "upload_time": "2012-06-29T12:44:31",
      "upload_time_iso_8601": "2012-06-29T12:44:31.585572Z",
      "url": "https://files.pythonhosted.org/packages/34/4a/e3d200e5185be35e7c2a379dce36bf1fdafbafa878c9f54ecc5b41ac7874/django-linkcheck-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}