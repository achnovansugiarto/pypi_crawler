{
  "info": {
    "author": "Joost Cassee",
    "author_email": "joost@cassee.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "================================\nCrazy Egg integration for Django\n================================\n\nThe django-crazyegg application integrates `Crazy Egg`_ heatmaps into a\nDjango_ project.\n\n.. _`Crazy Egg`: http://www.crazyegg.com/\n.. _Django: http://www.djangoproject.com/\n\n\nOverview\n========\n\nCrazy Egg is an easy to use hosted web application that generates\nheatmaps from webpage visitor clicks.  It allows you to discover the\nareas of web pages that are most important to your visitors.  This\nDjango application provides template tags that make integration of\nCrazy Egg very simple.\n\n\nInstallation and configuration\n==============================\n\nTo install django-crazyegg, simply place the ``django_crazyegg``\npackage somewhere on the Python path.  The application is configured in\nthe project ``settings.py`` file.  In order to use the template tags,\nthe ``django_crazyegg`` package must be present in the\n``INSTALLED_APPS`` list::\n\n    INSTALLED_APPS = [\n        ...\n        'django_crazyegg',\n        ...\n    ]\n\nYou set your Crazy Egg account number in the ``CRAZYEGG_ACCOUNT_NUMBER``\nsetting::\n\n    CRAZYEGG_ACCOUNT_NUMBER = '12345678'\n\n\nUsage\n=====\n\nThe django-crazyegg application provides two template tags: one to track\nvisitor clicks, and one to register user variables.  In order to use the\ntags in a template, first load the django-crazyegg template library by\nadding ``{% load crazyegg %}`` at the top.\n\n\nTracking visitor clicks\n-----------------------\n\nCrazy Egg uses Javascript to track every visitor click. The\n``track_crazyegg`` tag inserts the tracking code in the HTML page.  The\nCrazy Egg web pages recommend adding the code directly before the\nclosing ``</body>`` HTML tag::\n\n        ...\n        {% track_crazyegg %}\n    </body>\n    </html>\n\n.. note::\n\n    Versions of django-crazyegg prior to 2.0.0 used asynchronous\n    loading to allow the tag to be added to the HTML head section.\n    Unfortunately, that caused problems if you wanted to set user\n    variables (see below).\n\nEven if you only track clicks on a specific page, you can still insert\nthe tracking tag into your base template.  The code will only install\nthe Javascript event handler on URLs that you have created snapshots\nfor.\n\nOften you do not want to track clicks from your development or internal\nIP addresses.  For this reason you can set the ``CRAZYEGG_INTERNAL_IPS``\nto a list or tuple of addresses that the template tag will not be\nrendered on::\n\n    CRAZYEGG_INTERNAL_IPS = ['192.168.45.2', '192.168.45.5']\n\nIf you already use the ``INTERNAL_IPS`` setting, you could set the\nCrazy Egg internal addreses to this value.  This will be the default\nfrom version 3.0.0 upwards.\n\n.. note::\n\n    The template tag can only access the visitor IP address if the\n    HTTP request is present in the template context as the ``request``\n    variable.  For this reason, the ``CRAZYEGG_INTERNAL_IPS`` settings\n    only works if you add this variable to the context yourself when you\n    render the template, or you use the ``RequestContext`` and add the\n    ``django.core.context_processors.request`` context processor to the\n    ``TEMPLATE_CONTEXT_PROCESSORS`` setting::\n\n        TEMPLATE_CONTEXT_PROCESSORS = [\n            ...\n            'django.core.context_processors.request',\n            ...\n        ]\n\n\nUser variables\n--------------\n\nCrazy Egg can segment clicks based on `user variables`_.  If you want to\nset a user variable, use the ``set_uservar`` tag.  It takes two\narguments: the variable number (between 1 and 5) and the value (a\nstring).  The tag must come after the tracking code, and can be used\nmultiple times::\n\n        ...\n        {% track_crazyegg %}\n        {% set_uservar 1 \"some string\" %}\n        {% set_uservar 2 some_context_variable %}\n    </body>\n    </html>\n\n.. _`user variables`: https://www.crazyegg.com/help/Setting_Up_A_Page_to_Track/How_do_I_set_the_values_of_User_Var_1_User_Var_2_etc_in_the_confetti_and_overlay_views/\n\n\nChangelog\n=========\n\n2.1.0\n    Added the ``CRAZYEGG_INTERNAL_IPS`` setting.\n\n2.0.0\n    Added the ``set_uservar`` template tag to set Crazy Egg user\n    variables.  These can be used to segment clicks on the confetti and\n    layout views.\n\n    Because variables can only be set after the tracking code has been\n    loaded, the tracking template tag has been reverted to the code that\n    Crazy Egg recommends and is no longer asynchronous.\n\n1.0.1\n    Fixed links to the Github project pages in the ``setup.py`` script.\n\n1.0.0\n    Project created from code used in the `IPv6 Ready`_ project.\n\n.. _`IPv6 Ready`: http://www.ipv6ready.nl/\n\n------------------------------------------------------------------------\n\ndjango-crazyegg was written by Joost Cassee <joost@cassee.net>\n\nDevelopment was made possible by `Bateau Knowledge`_.  Thanks go to\nCrazy Egg for their support.\n\n.. _`Bateau Knowledge`: http://www.bateauknowledge.nl/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://github.com/jcassee/django-crazyegg/archives/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jcassee/django-crazyegg",
    "keywords": "django,heatmap,crazy egg",
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-crazyegg",
    "package_url": "https://pypi.org/project/django-crazyegg/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-crazyegg/",
    "project_urls": {
      "Download": "http://github.com/jcassee/django-crazyegg/archives/master",
      "Homepage": "http://github.com/jcassee/django-crazyegg"
    },
    "release_url": "https://pypi.org/project/django-crazyegg/2.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Crazy Egg heatmaps for Django projects",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 752888,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb89840fbaa102dde2cdadc16c38c788f1d3d753964dd0ff856bd8133e4569bf",
        "md5": "ce8fd858666e4540a12c723a1c83e57b",
        "sha256": "619b40b7df4b913ee6f109ad29c5852a00822b8ff32df865ef5ccc51b86e5213"
      },
      "downloads": -1,
      "filename": "django-crazyegg-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ce8fd858666e4540a12c723a1c83e57b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6792,
      "upload_time": "2011-01-15T11:18:42",
      "upload_time_iso_8601": "2011-01-15T11:18:42.915927Z",
      "url": "https://files.pythonhosted.org/packages/eb/89/840fbaa102dde2cdadc16c38c788f1d3d753964dd0ff856bd8133e4569bf/django-crazyegg-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}