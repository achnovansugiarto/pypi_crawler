{
  "info": {
    "author": "Roland Kainrath",
    "author_email": "justintimedev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "========================================================\nDjango REST Framework JSON CamelCase with orjson support\n========================================================\n\nCamel case JSON support for Django REST framework with orjson.\n\n============\nInstallation\n============\n\nAt the command line::\n\n    $ pip install drf-camel-case\n\nAdd the render and parser to your django settings file.\n\n.. code-block:: python\n\n    # ...\n    REST_FRAMEWORK = {\n\n        'DEFAULT_RENDERER_CLASSES': (\n            'drf_camel_case.render.CamelCaseJSONRenderer',\n            'drf_camel_case.render.CamelCaseBrowsableAPIRenderer',\n            # Any other renders\n        ),\n\n        'DEFAULT_PARSER_CLASSES': (\n            # If you use MultiPartFormParser or FormParser, we also have a camel case version\n            'drf_camel_case.parser.CamelCaseFormParser',\n            'drf_camel_case.parser.CamelCaseMultiPartParser',\n            'drf_camel_case.parser.CamelCaseJSONParser',\n            # Any other parsers\n        ),\n    }\n    # ...\n\n=================\nSwapping Renderer\n=================\n\nBy default the package uses `rest_framework.renderers.JSONRenderer`. If you want\nto use another renderer (the only possible alternative is\n`rest_framework.renderers.UnicodeJSONRenderer`, only available in DRF < 3.0), you must specify it in your django\nsettings file.\n\n.. code-block:: python\n\n    # ...\n    JSON_CAMEL_CASE = {\n        'RENDERER_CLASS': 'rest_framework.renderers.UnicodeJSONRenderer'\n    }\n    # ...\n\n=====================\nUnderscoreize Options\n=====================\n\n\n**No Underscore Before Number**\n\n\nAs raised in `this comment <https://github.com/krasa/StringManipulation/issues/8#issuecomment-121203018>`_\nthere are two conventions of snake case.\n\n.. code-block:: text\n\n    # Case 1 (Package default)\n    v2Counter -> v_2_counter\n    fooBar2 -> foo_bar_2\n\n    # Case 2\n    v2Counter -> v2_counter\n    fooBar2 -> foo_bar2\n\n\nBy default, the package uses the first case. To use the second case, specify it in your django settings file.\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        # ...\n        'JSON_UNDERSCOREIZE': {\n            'no_underscore_before_number': True,\n        },\n        # ...\n    }\n\nAlternatively, you can change this behavior on a class level by setting `json_underscoreize`:\n\n.. code-block:: python\n\n    from drf_camel_case.parser import CamelCaseJSONParser\n    from rest_framework.generics import CreateAPIView\n\n    class NoUnderscoreBeforeNumberCamelCaseJSONParser(CamelCaseJSONParser):\n        json_underscoreize = {'no_underscore_before_number': True}\n\n    class MyView(CreateAPIView):\n        queryset = MyModel.objects.all()\n        serializer_class = MySerializer\n        parser_classes = (NoUnderscoreBeforeNumberCamelCaseJSONParser,)\n\n=============\nIgnore Fields\n=============\n\nYou can also specify fields which should not have their data changed.\nThe specified field(s) would still have their name change, but there would be no recursion.\nFor example:\n\n.. code-block:: python\n\n    data = {\"my_key\": {\"do_not_change\": 1}}\n\nWould become:\n\n.. code-block:: python\n\n    {\"myKey\": {\"doNotChange\": 1}}\n\nHowever, if you set in your settings:\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        # ...\n        \"JSON_UNDERSCOREIZE\": {\n            # ...\n            \"ignore_fields\": (\"my_key\",),\n            # ...\n        },\n        # ...\n    }\n\nThe `my_key` field would not have its data changed:\n\n.. code-block:: python\n\n    {\"myKey\": {\"do_not_change\": 1}}\n\n=============\nRunning Tests\n=============\n\nTo run the current test suite, execute the following from the root of he project::\n\n    $ python -m unittest discover\n\n\n=======\nLicense\n=======\n\n* Free software: BSD license\n\n\n\n\nHistory\n=======\n\n1.0.0 (2021-10-21)\n------------------\n\n* First release\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JITdev/drf-camel-case",
    "keywords": "drf_camel_case,django rest framework,django",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-camel-case",
    "package_url": "https://pypi.org/project/drf-camel-case/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-camel-case/",
    "project_urls": {
      "Homepage": "https://github.com/JITdev/drf-camel-case"
    },
    "release_url": "https://pypi.org/project/drf-camel-case/1.0.1/",
    "requires_dist": [
      "orjson"
    ],
    "requires_python": ">=3.7",
    "summary": "Camel case JSON support for Django REST framework with orjson.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13185348,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b568cec6b95f3c7e88d24b49636032b4c1c97e6096d3b8e474054b2ae43e835",
        "md5": "72ddedc0a796cc8e66f2d6f6447f56aa",
        "sha256": "a29560c83e7cea52455c338fdfac96d3d2807db6417155ab913b56734fb3d338"
      },
      "downloads": -1,
      "filename": "drf_camel_case-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72ddedc0a796cc8e66f2d6f6447f56aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7366,
      "upload_time": "2021-10-21T22:01:39",
      "upload_time_iso_8601": "2021-10-21T22:01:39.936888Z",
      "url": "https://files.pythonhosted.org/packages/1b/56/8cec6b95f3c7e88d24b49636032b4c1c97e6096d3b8e474054b2ae43e835/drf_camel_case-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d92803c26df115310e97bb6d67acad6275387ea2af55e466e974902ceb3e7cb9",
        "md5": "8d21bf913dee92d9a4897734d9121fa2",
        "sha256": "4ecb3629752b9153e539f6ead9f620626b070adb1a4d71ca38939a53dafd1fae"
      },
      "downloads": -1,
      "filename": "drf-camel-case-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d21bf913dee92d9a4897734d9121fa2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6931,
      "upload_time": "2021-10-21T22:01:41",
      "upload_time_iso_8601": "2021-10-21T22:01:41.501261Z",
      "url": "https://files.pythonhosted.org/packages/d9/28/03c26df115310e97bb6d67acad6275387ea2af55e466e974902ceb3e7cb9/drf-camel-case-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}