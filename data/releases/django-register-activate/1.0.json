{
  "info": {
    "author": "Junyi Jiao",
    "author_email": "jiaojunyi90@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=====\r\nRegister-Activate\r\n=====\r\n\r\nRegister-activate is a simple Django app to conduct sign up, custom user email account verification and activation, login and logout functions. This app modifies django' User model to realize the registering and activation process together with database.\r\n\r\nDetailed documentation is in the \"docs\" directory.\r\n\r\nQuick start\r\n-----------\r\n\r\n1. Add \"register_activate\" to your INSTALLED_APPS setting like this::\r\n\r\n    INSTALLED_APPS = [\r\n        ...\r\n        'register_activate',\r\n    ]\r\n\r\n2. Include the polls URLconf in your project urls.py like this::\r\n        from django.conf.urls import url, include\r\n        from django.contrib import admin\r\n        urlpatterns = [\r\n        ...\r\n        url(r'^register_activate/',include('register_activate.urls')),\r\n    url(r'^admin/', admin.site.urls),\r\n]\r\n\r\n3. Update your databse setting.\r\n        For example, if you are planning to use mysql for your website:\r\n        1) Install mysql on your computer.\r\n        2) Create a database for your app using mysql (CREATE DATABASE register_activate)\r\n        3) Now you have a database named register_activate, next you need to update the\r\n           database information in settings::\r\n                DATABASES = {\r\n                'default': {\r\n                        'ENGINE': 'django.db.backends.mysql',\r\n                        'OPTIONS': {\r\n                                'init_command': 'SET default_storage_engine=INNODB',\r\n                        },\r\n                        'USER': Your username(for example,'root')\r\n                        'PASSWORD':Your password for mysql\r\n                        'HOST':'127.0.0.1',\r\n                        'PORT':'3306',\r\n                }\r\n        }\r\n\r\n4. Update the AUTHENTICATION_BACKENDS setting like this::\r\n        AUTHENTICATION_BACKENDS=[\r\n        ...\r\n        'django.contrib.auth.backends.ModelBackend',\r\n        'register_activate.email_auth.EmailBackend',\r\n        ]\r\n\r\n5. Run `python manage.py migrate` to create the models (auth_user).\r\n\r\n6. Visit http://127.0.0.1:8000/register_activate/signup to create an account.\r\n\r\n7. After creating your account, your account is not activated yet.\r\n        You will receive an email from a google account django.registeractivate@gmail.com\r\n        with an activation link. By clicking that link your account will be activated.\r\n        You can change the from email to your own email address by changing\r\n        register_activate/views to your own account and password::\r\n        fromaddr='django.registeractivate@gmail.com'\r\n        username='django.registeractivate'\r\n        password='django_register_activate'",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JunyiJ/django-register-activate",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-register-activate",
    "package_url": "https://pypi.org/project/django-register-activate/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-register-activate/",
    "project_urls": {
      "Homepage": "https://github.com/JunyiJ/django-register-activate"
    },
    "release_url": "https://pypi.org/project/django-register-activate/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django app to conduct signup, custom user email account verification and activation, login and logout.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2118708,
  "urls": [],
  "vulnerabilities": []
}