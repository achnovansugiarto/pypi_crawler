{
  "info": {
    "author": "Alex Gaynor",
    "author_email": "alex.gaynor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Django Filter\n=============\n\nDjango-filter is a reusable Django application allowing users to declaratively\nadd dynamic ``QuerySet`` filtering from URL parameters.\n\nFull documentation on `read the docs`_.\n\n.. image:: https://dev.azure.com/noumenal/Django%20Filter/_apis/build/status/Django%20Filter-CI\n    :target: https://dev.azure.com/noumenal/Django%20Filter/_build/latest?definitionId=3\n\n.. image:: https://travis-ci.org/carltongibson/django-filter.svg?branch=master\n    :target: https://travis-ci.org/carltongibson/django-filter\n\n.. image:: https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/carltongibson/django-filter\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\nRequirements\n------------\n\n* **Python**: 3.4, 3.5, 3.6, 3.7\n* **Django**: 1.11, 2.0, 2.1, 2.2\n* **DRF**: 3.8+\n\nFrom Version 2.0 Django Filter is Python 3 only.\nIf you need to support Python 2.7 use the version 1.1 release.\n\n\nInstallation\n------------\n\nInstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nThen add ``'django_filters'`` to your ``INSTALLED_APPS``.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_filters',\n    ]\n\n\nUsage\n-----\n\nDjango-filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\n\nUsage with Django REST Framework\n--------------------------------\n\nDjango-filter provides a custom ``FilterSet`` and filter backend for use with\nDjango REST Framework.\n\nTo use this adjust your import to use\n``django_filters.rest_framework.FilterSet``.\n\n.. code-block:: python\n\n    from django_filters import rest_framework as filters\n\n    class ProductFilter(filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ('category', 'in_stock')\n\n\nFor more details see the `DRF integration docs`_.\n\n\nSupport\n-------\n\nIf you have questions about usage or development you can join the\n`mailing list`_.\n\n.. _`read the docs`: https://django-filter.readthedocs.io/en/master/\n.. _`mailing list`: http://groups.google.com/group/django-filter\n.. _`DRF integration docs`: https://django-filter.readthedocs.io/en/master/guide/rest_framework.html\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/carltongibson/django-filter/tree/master",
    "keywords": "",
    "license": "BSD",
    "maintainer": "Carlton Gibson",
    "maintainer_email": "carlton.gibson@noumenal.es",
    "name": "django-filter",
    "package_url": "https://pypi.org/project/django-filter/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-filter/",
    "project_urls": {
      "Homepage": "https://github.com/carltongibson/django-filter/tree/master"
    },
    "release_url": "https://pypi.org/project/django-filter/2.2.0/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": ">=3.4",
    "summary": "Django-filter is a reusable Django application for allowing users to filter querysets dynamically.",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17448463,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ac9acc63b687002afae8b5137afd6230d88c99411aa2daedf07fed3f0913516",
        "md5": "b9946af723287dc257094eefc187ac2e",
        "sha256": "558c727bce3ffa89c4a7a0b13bc8976745d63e5fd576b3a9a851650ef11c401b"
      },
      "downloads": -1,
      "filename": "django_filter-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9946af723287dc257094eefc187ac2e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 69574,
      "upload_time": "2019-07-16T18:29:00",
      "upload_time_iso_8601": "2019-07-16T18:29:00.501914Z",
      "url": "https://files.pythonhosted.org/packages/0a/c9/acc63b687002afae8b5137afd6230d88c99411aa2daedf07fed3f0913516/django_filter-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc75af3f0c2682d2603617ee3061b36395a64fb9d70c327bb759de43e643e5b3",
        "md5": "628f62c68c74f34a3e4d6b61cd2a35ad",
        "sha256": "c3deb57f0dd7ff94d7dce52a047516822013e2b441bed472b722a317658cfd14"
      },
      "downloads": -1,
      "filename": "django-filter-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "628f62c68c74f34a3e4d6b61cd2a35ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 142804,
      "upload_time": "2019-07-16T18:29:03",
      "upload_time_iso_8601": "2019-07-16T18:29:03.961858Z",
      "url": "https://files.pythonhosted.org/packages/dc/75/af3f0c2682d2603617ee3061b36395a64fb9d70c327bb759de43e643e5b3/django-filter-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2020-15225",
        "GHSA-x7gm-rfgv-w973"
      ],
      "details": "django-filter is a generic system for filtering Django QuerySets based on user selections. In django-filter before version 2.4.0, automatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. Version 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. In addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. Users may manually apply an equivalent validator if they are not able to upgrade.",
      "fixed_in": [
        "2.4.0"
      ],
      "id": "PYSEC-2021-64",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-64",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-15225"
      ],
      "details": "### Impact\n\nAutomatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. \n\n### Patches\n\nVersion 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. \n\nIn addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. \n\n### Workarounds\n\nUsers may manually apply an equivalent validator if they are not able to upgrade.  \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the django-filter repo](https://github.com/carltongibson/django-filter)\n\nThanks to Marcin Waraksa for the report. \n",
      "fixed_in": [
        "2.4.0"
      ],
      "id": "GHSA-x7gm-rfgv-w973",
      "link": "https://osv.dev/vulnerability/GHSA-x7gm-rfgv-w973",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}