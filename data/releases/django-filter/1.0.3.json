{
  "info": {
    "author": "Carlton Gibson",
    "author_email": "carlton.gibson@noumenal.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Django Filter\n=============\n\nDjango-filter is a reusable Django application for allowing users to filter\nquerysets dynamically.\n\nFull documentation on `read the docs`_.\n\n.. image:: https://travis-ci.org/carltongibson/django-filter.svg?branch=master\n    :target: https://travis-ci.org/carltongibson/django-filter\n\n.. image:: https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/carltongibson/django-filter\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\n\nRequirements\n------------\n\n* **Python**: 2.7, 3.3, 3.4, 3.5\n* **Django**: 1.8, 1.9, 1.10, 1.11\n* **DRF**: 3.5\n\nInstallation\n------------\n\nInstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nThen add ``'django_filters'`` to your ``INSTALLED_APPS``.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_filters',\n    ]\n\n\nUsage\n-----\n\nDjango-filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\nDjango-filters additionally supports specifying ``FilterSet`` fields using\na dictionary to specify filters with lookup types:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = {'name': ['exact', 'icontains'],\n                      'price': ['exact', 'gte', 'lte'],\n                     }\n\nThe filters will be available as ``'name'``, ``'name__icontains'``,\n``'price'``, ``'price__gte'``, and ``'price__lte'`` in the above example.\n\nSupport\n-------\n\nIf you have questions about usage or development you can join the\n`mailing list`_.\n\n.. _`read the docs`: https://django-filter.readthedocs.io/en/develop/\n.. _`mailing list`: http://groups.google.com/group/django-filter",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/carltongibson/django-filter/tree/master",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-filter",
    "package_url": "https://pypi.org/project/django-filter/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-filter/",
    "project_urls": {
      "Homepage": "https://github.com/carltongibson/django-filter/tree/master"
    },
    "release_url": "https://pypi.org/project/django-filter/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-filter is a reusable Django application for allowing users to filter querysets dynamically.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17448463,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12c792cb4992dfbbd6773f4b4b947fc41baa3aa235adedb2f322143b0f7bf3b9",
        "md5": "2ac8cfbebb5fc284fc07c05d9fddf64d",
        "sha256": "0f2ad1f4a31aa66a8dc8e6cb8590c23848563e04b706c751bf69068a0d3cc57c"
      },
      "downloads": -1,
      "filename": "django_filter-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ac8cfbebb5fc284fc07c05d9fddf64d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 43138,
      "upload_time": "2017-05-16T18:56:37",
      "upload_time_iso_8601": "2017-05-16T18:56:37.246295Z",
      "url": "https://files.pythonhosted.org/packages/12/c7/92cb4992dfbbd6773f4b4b947fc41baa3aa235adedb2f322143b0f7bf3b9/django_filter-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e5452429bb187338c41d9bce57831b65eb4cdd15503f682915f8f48061ae6fd",
        "md5": "bcaed02f931cac9901db95a382ce7b34",
        "sha256": "6adeebc5853e8fd5211878895ab279f6be16b855e384957ffa574f669336ddc1"
      },
      "downloads": -1,
      "filename": "django-filter-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "bcaed02f931cac9901db95a382ce7b34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 123038,
      "upload_time": "2017-05-16T18:56:40",
      "upload_time_iso_8601": "2017-05-16T18:56:40.673630Z",
      "url": "https://files.pythonhosted.org/packages/7e/54/52429bb187338c41d9bce57831b65eb4cdd15503f682915f8f48061ae6fd/django-filter-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2020-15225",
        "GHSA-x7gm-rfgv-w973"
      ],
      "details": "django-filter is a generic system for filtering Django QuerySets based on user selections. In django-filter before version 2.4.0, automatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. Version 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. In addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. Users may manually apply an equivalent validator if they are not able to upgrade.",
      "fixed_in": [
        "2.4.0"
      ],
      "id": "PYSEC-2021-64",
      "link": "https://osv.dev/vulnerability/PYSEC-2021-64",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2020-15225"
      ],
      "details": "### Impact\n\nAutomatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. \n\n### Patches\n\nVersion 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. \n\nIn addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. \n\n### Workarounds\n\nUsers may manually apply an equivalent validator if they are not able to upgrade.  \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the django-filter repo](https://github.com/carltongibson/django-filter)\n\nThanks to Marcin Waraksa for the report. \n",
      "fixed_in": [
        "2.4.0"
      ],
      "id": "GHSA-x7gm-rfgv-w973",
      "link": "https://osv.dev/vulnerability/GHSA-x7gm-rfgv-w973",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}