{
  "info": {
    "author": "",
    "author_email": "John Reese <john@noswap.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Topic :: Utilities"
    ],
    "description": "dotlink\n=======\n\ndotlink is a simple script to automate deploying an arbitrary set of \"dotfiles\"\nfrom a repository to either a local path or even a remote host using ssh/scp.\n\ndotlink does not manage the dotfiles themselves, but uses a simple text file\nmapping dotfile names in the repository to their ultimate location relative to\nthe target path.  This allows you to have files without the dot prefix, for\ninstance, or avoid replicating deep directory structures to track a single file.\n\n[![build status](https://github.com/jreese/dotlink/workflows/Build/badge.svg)](https://github.com/jreese/dotlink/actions)\n[![code coverage](https://img.shields.io/codecov/c/gh/omnilib/aioitertools)](https://codecov.io/gh/omnilib/aioitertools)\n[![version](https://img.shields.io/pypi/v/aioitertools.svg)](https://pypi.org/project/aioitertools)\n[![license](https://img.shields.io/pypi/l/aioitertools.svg)](https://github.com/omnilib/aioitertools/blob/master/LICENSE)\n[![code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n\nsetup\n-----\n\ndotlink requires Python version 3.2 or newer.\nNo external libraries are required.\n\nTo install dotlink:\n\n    $ pip install dotlink\n\nOr if you want to hack on dotlink a bit, clone the repo and run:\n\n    $ python setup.py develop\n\n\nusage\n-----\n\nYou'll first need to create a mapping file in the root of your dotfile\nrepository named `.dotfiles` (or just `dotfiles`), following this format:\n\n- Each line contains the local repository filename, optionally followed by\n  a colon and the target filename if different than the local filename.\n- External dotfile mappings can be included using `#include \"path/to/mapping\"`,\n  and the requested map will be loaded as well.  The requested path can either\n  be an explicit filename, or a directory containing a mapping named `dotfiles`\n  or `.dotfiles`.\n- Comments are denoted by lines beginning with the `#` symbol, and are ignored.\n\nAn example mapping might look like:\n\n    # the dotfiles to care about\n    aliases: .alias\n    .bashrc\n    .profile: .profile\n    htop: .config/htop/htoprc\n    vim: .vim\n    vimrc: .vimrc\n\n    # some external dotfile paths to include\n    #include \"repo2/dotfiles\"\n    #include \"/full/patt/to/repo3/\"\n\nOnce the mapping is in place, run dotlink, and tell it where your source\nrepository is, as well as where you want it to deploy to:\n\n    $ dotlink [path/to/repository] [[[user@]host:]path/to/target]\n\nThe source path is optional; dotlink will assume it's your current directory if\nit finds a `.dotfiles` mapping file unless you specify otherwise.  The target\npath is also optional, and assumed to be your local home directory.\n\nSources can include local paths or remote git repository URLs.\nTargets can also include local paths, or remote paths accessible via ssh by\nproviding a hostname as well as username if different than your current login.\n\n\nadvanced\n--------\n\n### embedding\n\nIf you'd like to embed dotlink within your dotfile repository,\n`dotlink/dotlink.py` is a self-contained script, specifically to allow for this\nuse case.  Simply copy dotfile.py into your repository; it has no external\ndependencies.\n\n\n### remote sources\n\nSources can also point at remote locations, such as git repositories, and\ndotlink will clone the remote data into a temporary path and then copy the\ncontents into the appropriate paths.  dotlink will guess this if your source\npath begins with \"git://\" or \"git@\", but you can also use `--git` to force this\nfor non-standard URLs.  The following command will clone my public dotfile repo,\nand install it to your home directory:\n\n    $ dotlink git://github.com/jreese/dotfiles\n\nThis is essentially equivalent to the following sequence of commands:\n\n    $ git clone git://github.com/jreese/dotfiles\n    $ dotlink dotfiles\n    $ rm -rf dotfiles\n\nYou can even combine remote sources with remote targets, to clone the dotfile\nrepository locally, and then copy the dotfiles to the remote host via scp:\n\n    $ dotlink git://github.com/jreese/dotfiles jreese@devserver:\n\n\ntodo\n----\n\nSome planned features and changes are:\n\n- Add support for remote sources, like ssh/scp, as well as git repos or tarballs\n- Generate mapping file from repository contents ?\n\n\nlegal\n-----\n\ndotlink is copyright [John Reese](https://jreese.sh).\n\ndotlink is licensed under the MIT license.\nSee the `LICENSE` file for more details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotlink",
    "package_url": "https://pypi.org/project/dotlink/",
    "platform": "",
    "project_url": "https://pypi.org/project/dotlink/",
    "project_urls": {
      "Github": "https://github.com/jreese/dotlink",
      "home-page": "https://github.com/jreese/dotlink"
    },
    "release_url": "https://pypi.org/project/dotlink/1.0/",
    "requires_dist": null,
    "requires_python": ">=3.2",
    "summary": "Automate deployment of dotfiles to local paths or remote hosts",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14860986,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bf9878d0362c01adb52c277c5c0a0a4f8c5845fe60d4334e9f4fbbdc2c0d51c",
        "md5": "f89e5713f99684d6e8e7b404b8d7f1b3",
        "sha256": "13cf8af909667e2d5b68a3fc19085710f18e5e3d1686f28708dc2773af94c623"
      },
      "downloads": -1,
      "filename": "dotlink-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f89e5713f99684d6e8e7b404b8d7f1b3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.2",
      "size": 8496,
      "upload_time": "2021-08-14T04:03:03",
      "upload_time_iso_8601": "2021-08-14T04:03:03.003427Z",
      "url": "https://files.pythonhosted.org/packages/8b/f9/878d0362c01adb52c277c5c0a0a4f8c5845fe60d4334e9f4fbbdc2c0d51c/dotlink-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ad2cc7dae5a9ab970b2fa8a3d1c6da8aef0d0db0080017fa59580fe28f638ea",
        "md5": "e982529af89104f7d9f9891f640e64ad",
        "sha256": "3990f035c798a6d581802db9b2fcf7d0efebe3aade5c3dd99874e3cd05e3ffbe"
      },
      "downloads": -1,
      "filename": "dotlink-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e982529af89104f7d9f9891f640e64ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.2",
      "size": 12874,
      "upload_time": "2021-08-14T04:03:07",
      "upload_time_iso_8601": "2021-08-14T04:03:07.664952Z",
      "url": "https://files.pythonhosted.org/packages/2a/d2/cc7dae5a9ab970b2fa8a3d1c6da8aef0d0db0080017fa59580fe28f638ea/dotlink-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}