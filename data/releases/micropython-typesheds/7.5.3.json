{
  "info": {
    "author": "Howard C Lovatt",
    "author_email": "howard.lovatt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "# Micropython Typesheds (formerly known as Pyboard Typesheds)\n\nRich typeshed (a.k.a.: type hints, interface stubs, and `.pyi` files)\nfor [MicroPython](http://micropython.org).\nThey are *rich* typesheds because they give help document for\nfunctions/methods, function/method arguments, function/method return types,\nmethod overloads, classes, modules, protocols,\nand constants/fields/properties. \nThese typesheds are useful for IDEs that understand type hints,\nlike PyCharm and VSCode, and for IDE plugins like the PyCharm's MicroPython plugin.\n\n## What the typesheds do\n\nOnce installed, see next section, the typesheds offer:\n\n1. Code completion (in this case prompting completion for `pyb`):\\\n   ![Code completion example](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/code.png?raw=true \"Possible code completions\")\n\n2. Rich help text (in this case constructor for `LCD160CR`\n   showing argument types, argument defaults, return types and \n   overloads as well as a description):\\\n   ![Rich help example](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/help.png?raw=true \"Rich help for overloaded constructor\")\n\n3. Type errors (in this case a `float` instead of an `int`):\\\n   ![Type error example](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/type.png?raw=true \"Detects type error\")\n\n4. Typos (in this case `colour` instead of `color`; error can be avoided by \n   using code completion, see point 1 above):\\\n   ![Type error example](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/typo.png?raw=true \"Detects missing attribute due to typo\")\n\n## Using the typesheds\n\nThere are four ways of installing the Typesheds:\nvia an IDE plugin, manually install into the IDE, \nuse PyPI, copy the `.pyi` files into a project,\nand manually copy the `.pyi` files into a project.\n\n### Via an IDE plugin\n\n#### For PyCharm\n\nCurrently, December 2021, JetBrains have added many of these typesheds to their \nMicroPython plugin (many thanks to JetBrains and in particular Andrey Vlasovskikh).\nTherefore, installing the JetBrains Micropython plugin\nwill be the easiest solution and also \nthe typesheds will get updated everytime the plugin is updated:\n\n1. Install the\n   [MicroPython plugin](https://plugins.jetbrains.com/plugin/9777-micropython).\n\n2. Enable the plugin for the project\n   (two stages in project preferences/options:\n   add the plugin to the project and then select options in the plugin):\\\n   ![Enable MicroPython plugin for project part 1](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/enable_pt1.png?raw=true \"Select MicroPython Language\")\n   ![Enable MicroPython plugin for project part 2](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/enable_pt2.png?raw=true \"Enable MicroPython support, select Pyboard, and select device path)\")\n\nThe other options, below, unfortunately require manual updating and are more \ninvolved (though not difficult).\n\n### Manually install in an IDE\n\n#### For PyCharm\n\nIf the very latest typesheds are required then they can be installed from\nthis repository directly.\n\n**Note:** The following procedure, below, only needs to be done for one project; \nafter which all projects using the\nMicroPython plugin will pick up the typesheds.\n\n1. Install and enable the plugin, see previous section above.\n\n2. Download the ZIPed `.pyi` files from GitHub:\\\n   ![Download ZIPed files from GitHub](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/download.png?raw=true \"Select 'Download Zip' from 'Code' dropdown\")\n\n3. Unpack the ZIP file.\n\n4. Drag (or copy and past) the `.pyi` (only) files into the Micropython Plugin\n   (see image for which directory to put each file in):\\\n   ![Drag `.pyi` files into Plugin](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/typesheds.png?raw=true \"`.pyi` files in Micropython plugin\")\n\n5. Disable and re-enable plugin by going to preferences/options un-tick \n   Micropython support and Apply then re-tick\n   MicroPython support and OK\n   (so that it picks up the changes):\\\n   ![Re-enable MicroPython plugin](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/enable_pt2.png?raw=true \"Un-tick and OK back into preferences re-tick MicroPython support and OK\")\n\n### Use PyPI to copy the `.pyi` files into a project or IDE\n\n  1. Install the typesheds' installer\n\n```bash\n    pip install --upgrade micropython-typesheds\n```\n\n  2. Copy the typesheds to where they are required.\n     EG typeshed location for IDE or plugin or top \n     level of project.\n     **Note:** The following command, below, needs \n     to be done for *all* required locations:\n\n```bash\n    python -m micropython_typesheds <destination-directory>\n```\n\n### Copy `.pyi` files into a project\n\n**Note:** The following procedure, below, needs to be done for *all* projects:\n\n1. Download the ZIPed `.pyi` files from GitHub:\\\n   ![Download ZIPed files from GitHub](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/download.png?raw=true \"Select 'Download Zip' from 'Code' dropdown\")\n\n2. Unpack the ZIP file.\n\n3. Drag the `.pyi` (only) files from directory `micropython_typesheds` into the top level of a project:\\\n   ![Drag `.pyi` files in top level of project](https://github.com/hlovatt/PyBoardTypeshed/blob/master/media/files.png?raw=true \"`.pyi` files in top level of project\")\n\n## Philosophy\n\nThe typesheds are generated by\n[https://github.com/hlovatt/PyBoardTypeshedGenerator]()\nfrom the MicroPython `.rst` doc files.\n\nThe philosophy of generating the typesheds is to take a superset of what is \nin the docs and what is listed by the `dir`\ncommand on a MicroPython board\n(the docs and `dir` don't agree!). \nAn example of the `dir` command having more information than the docs is the docs\nfor `pyb.Pin` mentions `board` and `cpu` classes and implies they contain \ndeclarations of available `Pin`s;\n`dir(pyb.Pin.cpu)` on the other hand lists the `Pin`s, \ntherefore the generated typeshed contains `board` and `cpu`\n*with* `Pin` definitions.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hlovatt/PyBoardTypeshed",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-typesheds",
    "package_url": "https://pypi.org/project/micropython-typesheds/",
    "platform": "any",
    "project_url": "https://pypi.org/project/micropython-typesheds/",
    "project_urls": {
      "Homepage": "https://github.com/hlovatt/PyBoardTypeshed"
    },
    "release_url": "https://pypi.org/project/micropython-typesheds/7.5.3/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Typesheds (a.k.a.: interface stubs, `pyi` files, and type hints) for MicroPython.",
    "version": "7.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12558510,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac0c2759a0773680425fb6cdbd92218b028afb3717b90187c311bd5ad126e373",
        "md5": "c7a9d8b08ae9ec70a761def380d54f26",
        "sha256": "4520960d5630966ab93b5a96e713c6dd73e72a875252bb8ea0ab8e96d0a7fca8"
      },
      "downloads": -1,
      "filename": "micropython_typesheds-7.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c7a9d8b08ae9ec70a761def380d54f26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5321,
      "upload_time": "2022-01-13T06:53:15",
      "upload_time_iso_8601": "2022-01-13T06:53:15.271381Z",
      "url": "https://files.pythonhosted.org/packages/ac/0c/2759a0773680425fb6cdbd92218b028afb3717b90187c311bd5ad126e373/micropython_typesheds-7.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a29006685705862bd509970d17cd8ab487f72d953216705158376bc02f98c0e0",
        "md5": "826aba7bfb77a4761513b2907f0ba6f7",
        "sha256": "1951c3ed3d84157d4748a387786b55542e7d4945a774b38a9b247b1d8dc572ab"
      },
      "downloads": -1,
      "filename": "micropython-typesheds-7.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "826aba7bfb77a4761513b2907f0ba6f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 5037,
      "upload_time": "2022-01-13T06:53:17",
      "upload_time_iso_8601": "2022-01-13T06:53:17.171775Z",
      "url": "https://files.pythonhosted.org/packages/a2/90/06685705862bd509970d17cd8ab487f72d953216705158376bc02f98c0e0/micropython-typesheds-7.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}