{
  "info": {
    "author": "Fruitjeus",
    "author_email": "jeu1993@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# miniMinio\n\nA thin python helper get either 1) local files or 2) Minio objects. 1) Heavily relies on the default os library while 2) is built off [minio-py](https://github.com/minio/minio-py). The package is designed to provide a seamless switch between testing file operations locally/over a file system and interacting with a minio server when in deployment.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install miniMinio.\n\n```bash\npip install miniMinio\n```\n\n## Usage\n\n1. Create a connection that returns a client\n2. Use client as a function input for subsequent functions\n\n```python\nfrom miniMinio import create_connection\n\nclient = create_connection(\"some_hostname:port\", \"access_key\", \"secret_key\")\n\n# For filesystems\nclient = create_connection(\"local\")\n\nclient = create_connection(\"remote\")\n\n```\n####For filesystems:\n\n'local' is designed to work when the working directory is at the directory equivalent to a Minio's bucket. Best suited for .exe files\n\n'remote' gives the user the flexibility to specify the bucket.\n\nobject_names for file server operations replaces the S3 object naming convention with the **absolute path** of the object\n\ni.e.\n```\n# Minio object name / Minio Bucket\n\"Book1.xlsx\" / \"example_bucket\"\n# File system object name equivalent\n\"usr/full/path/to/example_bucket/Book1.xlsx\"\n```\n\nFilesystems do not need to specify bucket_name\n\n### Functions\n\n```python\nall_buckets = get_buckets(client)\n```\nReturns all bucket *name* and *creation date* as a tuple\n```python\nget_all_object_details_in_bucket(client, bucket_name=None, attributes=[\"object_name\", \"last_modified\"], filter_object=(\"file\", \"folder\"), filter_prefix='')\n```\nReturns all objects recursively within a specified bucket. Attributes supported  Filter enables the user to filter the objects. \n\nSupported filters ['file', 'folder', 'excel']. \n\nSupported attributes (Only for Minio) ['etag', 'last_modified', 'size', 'content_type']\n\nfilter_prefix accepts an extension of the path from the bucket to form a new path. The resulting combined path will be the start point of the search\n```python\nget_all_objects_from_bucket(client, bucket_name, object_name_list, file_path)\n```\nTransfers all objects in object_name_list to the desired file_path relative to the working directory\n```python\nget_single_object_content_bytes(client, bucket_name, object_name)\n```\nReturns bytes of the selected object\n```python\nget_single_excel_file_content(client, bucket_name, excel_file_object)\n```\nReturns an <xlrd.book.Book> object\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miniMinio",
    "package_url": "https://pypi.org/project/miniMinio/",
    "platform": "",
    "project_url": "https://pypi.org/project/miniMinio/",
    "project_urls": {
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/miniMinio/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Exposing file sharing system",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9380978,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f31109c10c659b2c9fa507dd78bebc2c512cb6a02e15bfb83637801cc96456b6",
        "md5": "471985dc35dfc609f1eb24150b28627b",
        "sha256": "5e0b1c2db6cd89d876a740729de3186aedaf60ab150aa017203798dc52800378"
      },
      "downloads": -1,
      "filename": "miniMinio-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "471985dc35dfc609f1eb24150b28627b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 188384,
      "upload_time": "2020-04-06T02:57:17",
      "upload_time_iso_8601": "2020-04-06T02:57:17.023814Z",
      "url": "https://files.pythonhosted.org/packages/f3/11/09c10c659b2c9fa507dd78bebc2c512cb6a02e15bfb83637801cc96456b6/miniMinio-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}