{
  "info": {
    "author": "Fusionbox, Inc.",
    "author_email": "programmers@fusionbox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-pyscss\n-------------\n\nA collection of tools for making it easier to use pyScss within Django.\n\n.. image:: https://travis-ci.org/fusionbox/django-pyscss.png\n   :target: http://travis-ci.org/fusionbox/django-pyscss\n   :alt: Build Status\n\n.. image:: https://coveralls.io/repos/fusionbox/django-pyscss/badge.png?branch=master\n   :target: https://coveralls.io/r/fusionbox/django-pyscss\n   :alt: Coverage Status\n\nWhy do we need this?\n====================\n\nThis app smooths over a lot of things when dealing with pyScss in Django.  It\n\n- Overwrites the import system to use Django's staticfiles app.  This way you\n  can import SCSS files from any app (or any file that's findable by the\n  STATICFILES_FINDERS) with no hassle.\n\n- Configures pyScss to work with the staticfiles app for it's image functions\n  (e.g. inline-image and sprite-map).\n\n- It provides a django-compressor precompile filter class so that you can\n  easily use pyScss with django-compressor without having to bust out to the\n  shell.  This has the added benefit of removing the need to configure pyScss\n  through its command-line arguments AND makes it possible for the exceptions\n  and warnings that pyScss emits to bubble up to your process so that you can\n  actually know what's going on.\n\n\nRendering SCSS manually\n=======================\n\nYou can render SCSS manually from a string like this::\n\n    from django_pyscss.scss import DjangoScss\n\n    compiler = DjangoScss()\n    compiler.compile(scss_string=\".foo { color: green; }\")\n\nYou can render SCSS from a file like this::\n\n    from django_pyscss.scss import DjangoScss\n\n    compiler = DjangoScss()\n    compiler.compile(scss_file='css/styles.scss')\n\nThe file needs to be able to be located by staticfiles finders in order to be\nused.\n\n\n.. class:: django_pyscss.scss.DjangoScss\n\n    A subclass of :class:`scss.Scss` that uses the Django staticfiles storage\n    and finders instead of the filesystem.  This obsoletes the load_paths\n    option that was present previously by searching instead in your staticfiles\n    directories.\n\n    In DEBUG mode, DjangoScss will search using all of the finders to find the\n    file.  If you are not in DEBUG mode, it assumes you have run collectstatic\n    and will only use staticfiles_storage to find the file.\n\n\nUsing in conjunction with django-compressor.\n============================================\n\ndjango-pyscss comes with support for django-compressor.  All you have to do is\nadd it to your ``COMPRESS_PRECOMPILERS`` setting. ::\n\n    COMPRESS_PRECOMPILERS = (\n        # ...\n        ('text/x-scss', 'django_pyscss.compressor.DjangoScssFilter'),\n        # ...\n    )\n\nThen you can just use SCSS like you would use CSS normally. ::\n\n    {% compress css %}\n    <link rel=\"stylesheet\" type=\"text/x-scss\" href=\"{% static 'css/styles.css' %}\">\n    {% endcompress %}\n\n\nRunning the tests\n=================\n\nYou can run the tests by running.\n\n    $ python setup.py test\n\nPlease note that this will collecstatic into ``tmp/static/`` automatically as\nsome of the tests require the staticfiles to have been collected.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fusionbox/django-pyscss",
    "keywords": "django css scss sass pyscss compressor",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-pyscss",
    "package_url": "https://pypi.org/project/django-pyscss/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pyscss/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/fusionbox/django-pyscss"
    },
    "release_url": "https://pypi.org/project/django-pyscss/1.0.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Makes it easier to use PySCSS in Django.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1526495,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f0d9dc09d5cc9d25b16a73c017c61bc16cc8ea66336fa902541e4da0b7278e1",
        "md5": "e5503b9be0111e4e283fcc915f4a21c3",
        "sha256": "67b1f27ce1a7b63937c9a7229e0b99b3350ad86e0d4ea3d34631c49b342ca9e2"
      },
      "downloads": -1,
      "filename": "django-pyscss-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e5503b9be0111e4e283fcc915f4a21c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6924,
      "upload_time": "2014-10-16T20:55:44",
      "upload_time_iso_8601": "2014-10-16T20:55:44.490429Z",
      "url": "https://files.pythonhosted.org/packages/6f/0d/9dc09d5cc9d25b16a73c017c61bc16cc8ea66336fa902541e4da0b7278e1/django-pyscss-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}