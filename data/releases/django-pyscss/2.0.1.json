{
  "info": {
    "author": "Fusionbox, Inc.",
    "author_email": "programmers@fusionbox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-pyscss\n-------------\n\nA collection of tools for making it easier to use pyScss within Django.\n\n.. image:: https://travis-ci.org/fusionbox/django-pyscss.png\n   :target: http://travis-ci.org/fusionbox/django-pyscss\n   :alt: Build Status\n\n.. image:: https://coveralls.io/repos/fusionbox/django-pyscss/badge.png?branch=master\n   :target: https://coveralls.io/r/fusionbox/django-pyscss\n   :alt: Coverage Status\n\n\n.. note::\n\n    This version only supports pyScss 1.3.4 and greater. For pyScss 1.2 support,\n    you can use the 1.x series of django-pyscss.\n\n\nInstallation\n============\n\ndjango-pyscss supports Django 1.4+, and Pythons 2 and 3.\n\nYou may install django-pyscss off of PyPI::\n\n    pip install django-pyscss\n\n\nWhy do we need this?\n====================\n\nThis app smooths over a lot of things when dealing with pyScss in Django.  It\n\n- Overwrites the import system to use Django's staticfiles app.  This way you\n  can import SCSS files from any app (or any file that's findable by the\n  STATICFILES_FINDERS) with no hassle.\n\n- Configures pyScss to work with the staticfiles app for its image functions\n  (e.g. inline-image and sprite-map).\n\n- It provides a django-compressor precompile filter class so that you can\n  easily use pyScss with django-compressor without having to bust out to the\n  shell.  This has the added benefit of removing the need to configure pyScss\n  through its command-line arguments AND makes it possible for the exceptions\n  and warnings that pyScss emits to bubble up to your process so that you can\n  actually know what's going on.\n\n\nRendering SCSS manually\n=======================\n\nYou can render SCSS manually from a string like this:\n\n.. code-block:: python\n\n    from django_pyscss import DjangoScssCompiler\n\n    compiler = DjangoScssCompiler()\n    compiler.compile_string(\".foo { color: green; }\")\n\nYou can render SCSS from a file like this:\n\n.. code-block:: python\n\n    from django_pyscss import DjangoScssCompiler\n\n    compiler = DjangoScssCompiler()\n    compiler.compile('css/styles.scss')\n\nThe file needs to be able to be located by staticfiles finders in order to be\nused.\n\nThe ``DjangoScssCompiler`` class is a subclass of ``scss.Compiler`` that\ninjects the ``DjangoExtension``. ``DjangoExtension`` is what overrides the\nimport mechanism.\n\n``DjangoScssCompiler`` also turns on the CompassExtension by default, if you\nwish to turn this off you do so:\n\n.. code-block:: python\n\n    from django_pyscss import DjangoScssCompiler\n    from django_pyscss.extensions.django import DjangoExtension\n\n    compiler = DjangoScssCompiler(extensions=[DjangoExtension])\n\nFor a list of options that ``DjangoScssCompiler`` accepts, please see the\npyScss `API documentation <http://pyscss.readthedocs.org/en/latest/python-api.html#new-api>`_.\n\n\nUsing in conjunction with django-compressor\n===========================================\n\ndjango-pyscss comes with support for django-compressor.  All you have to do is\nadd it to your ``COMPRESS_PRECOMPILERS`` setting. :\n\n.. code-block:: python\n\n    COMPRESS_PRECOMPILERS = (\n        # ...\n        ('text/x-scss', 'django_pyscss.compressor.DjangoScssFilter'),\n        # ...\n    )\n\nThen you can just use SCSS like you would use CSS normally. :\n\n.. code-block:: html+django\n\n    {% compress css %}\n    <link rel=\"stylesheet\" type=\"text/x-scss\" href=\"{% static 'css/styles.css' %}\">\n    {% endcompress %}\n\nIf you wish to provide your own compiler instance (for example if you wanted to\nchange some settings on the ``DjangoScssCompiler``), you can subclass\n``DjangoScssFilter``. :\n\n.. code-block:: python\n\n    # myproject/scss_filter.py\n    from django_pyscss import DjangoScssCompiler\n    from django_pyscss.compressor import DjangoScssFilter\n\n    class MyDjangoScssFilter(DjangoScssFilter):\n        compiler = DjangoScssCompiler(\n            # Example configuration\n            output_style='compressed',\n        )\n\n    # settings.py\n    COMPRESS_PRECOMPILERS = (\n        # ...\n        ('text/x-scss', 'myproject.scss_filter.MyDjangoScssFilter'),\n        # ...\n    )\n\n\nRunning the tests\n=================\n\nYou can run the tests by running.\n\n    $ python setup.py test\n\nPlease note that this will collecstatic into ``tmp/static/`` automatically as\nsome of the tests require the staticfiles to have been collected.\n\n\nCHANGELOG\n---------\n\n\n2.0.1 (2015-04-23)\n==================\n\n- Explicitly depend on pathlib, instead of assuming pyScss will require it. [#33]\n- Fixed cases where DEBUG is False but collectstatic hasn't been run (common in tests).\n\n\n2.0.0 (2015-04-22)\n==================\n\n- Added support for pyScss 1.3 and Python 3.\n- Dropped support for pyScss 1.2\n\nUpgrade path\n^^^^^^^^^^^^\n\nIf you are just using the django-compressor integration, you don't have to\nupgrade anything.\n\nIf you were using the ``DjangoScss`` class directly, it has been replaced with\nthe ``DjangoScssCompiler`` class. The API for compiling CSS has changed as\nwell, for example, to compile from a string, previously you would do it like\nthis:\n\n.. code-block:: python\n\n    >>> from django_pyscss.scss import DjangoScss\n    >>> compiler = DjangoScss()\n    >>> compiler.compile(\".foo { color: red; }\")\n\nNow the interface is like this:\n\n.. code-block:: python\n\n    >>> from django_pyscss import DjangoScssCompiler\n    >>> compiler = DjangoScssCompiler()\n    >>> compiler.compile_string(\".foo { color: red; }\")\n\nYou read more about the new API on the `pyScss API documentation\n<http://pyscss.readthedocs.org/en/latest/python-api.html#new-api>`_.\n\n\n1.0.0 - 2014-02-11\n==================\n\nReleased django-pyscss.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fusionbox/django-pyscss",
    "keywords": "django css scss sass pyscss compressor",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-pyscss",
    "package_url": "https://pypi.org/project/django-pyscss/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pyscss/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/fusionbox/django-pyscss"
    },
    "release_url": "https://pypi.org/project/django-pyscss/2.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Makes it easier to use PySCSS in Django.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1526495,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e7af95849c421500afe82137642491193c112bea4e622f26f54d35c6ec9c6a3",
        "md5": "4df1b89942f41b8e8bde8704efcfe6c2",
        "sha256": "03fa4d7e483d87eaa4df0e91b337d078a39fcca897952e8d65ebdca7f759a822"
      },
      "downloads": -1,
      "filename": "django-pyscss-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4df1b89942f41b8e8bde8704efcfe6c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16279,
      "upload_time": "2015-04-23T20:37:01",
      "upload_time_iso_8601": "2015-04-23T20:37:01.478474Z",
      "url": "https://files.pythonhosted.org/packages/1e/7a/f95849c421500afe82137642491193c112bea4e622f26f54d35c6ec9c6a3/django-pyscss-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}