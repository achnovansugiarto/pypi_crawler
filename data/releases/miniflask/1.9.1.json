{
  "info": {
    "author": "David Hartmann",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "MiniFlask\n=========\n[![python-3 badge](https://img.shields.io/pypi/v/miniflask?style=flat-square)](https://pypi.org/project/miniflask/)\n[![python-3 badge](https://img.shields.io/pypi/pyversions/miniflask?style=flat-square)](https://pypi.org/project/miniflask/)\n[![CI build status](https://github.com/da-h/miniflask/workflows/Deploy/badge.svg)](https://github.com/da-h/miniflask/actions?query=workflow%3ADeploy)\n\nMiniflask is a **small** research-oriented **plugin**-engine for **python**.\n> A long time ago in a galaxy full of plugin-engines ...\n\n\nQuick Start\n-----------\n\nFor a quick look into miniflask, just install it using\n```bash\n# until we deploy to pip:\ncd [your project dir]\ngit clone https://github.com/da-h/miniflask miniflask_git\nln -s miniflask_git/src/miniflask .\n\n# in a future release of course:\npip install miniflask\n```\n\n[Read the Documentation](https://da-h.github.io/miniflask)\n----------------------\n\nShort Example\n-------------\n\n\n**Module Definition**  \nLet's start a new project first by creating a new directory:\n```bash\n> ls\nmain.py\nmodules/\n    module1/__init__.py\n    module2/__init__.py\n    module1/__init__.py\n```\n\nLet's define a simple module, `modules/module1/__init__.py`:\n```python\ndef main(state, event):\n    print(\"main event called by module1\")\n\ndef register(mf):\n    mf.register_event('main', main)\n```\n\nLet's define another module, `modules/module2/__init__.py`:\n```python\ndef main(state, event):\n    print(\"main event called by module2\")\n    print(\"it uses a variable var:\", state[\"var\"])\n\ndef register(mf):\n    mf.register_defaults({\n        \"var\": 42\n    })\n    mf.register_event('main', main)\n```\n\n\n\nOur main.py looks like this:\n```python\nimport miniflask\n\n# initialize miniflask\nmf = miniflask.init(module_dirs=\"./modules\")\nmf.parse_args()\n\n# check if all requested modules are loaded\nif not mf.halt_parse:\n\n    # call event \"main\" if exists\n    if hasattr(mf.event, 'main'):\n        mf.event.main()\n    else:\n        print(\"There is nothing to do.\")\n```\n\n\n**Usage**:  \nNow, we can use our program in the following ways:\n```sh\n> python main.py\nThere is nothing to do.\n```\n\n```sh\n> python main.py module1\nmain event called by module1\n```\n\n```sh\n> python main.py module2,module1\nmain event called by module2\nit uses a variable var: 42\nmain event called by module1\n```\n\n```sh\n> python main.py module2,module1 --module2.var 9001\nmain event called by module2\nit uses a variable var: 9001\nmain event called by module1\n```\n\n\n## Contributing\n---------------\n\n1. [Fork it!](https://github.com/da-h/miniflask/fork)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n\nLicense\n-------\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=flat-square)](https://opensource.org/licenses/MIT) - See [LICENSE](LICENSE) for details.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/da-h/miniflask",
    "keywords": "miniflask,plugin-engine,plugin-system",
    "license": "MIT License",
    "maintainer": "David Hartmann",
    "maintainer_email": "",
    "name": "miniflask",
    "package_url": "https://pypi.org/project/miniflask/",
    "platform": "",
    "project_url": "https://pypi.org/project/miniflask/",
    "project_urls": {
      "Homepage": "https://github.com/da-h/miniflask"
    },
    "release_url": "https://pypi.org/project/miniflask/1.9.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Small research-oriented hook-based plugin engine.",
    "version": "1.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17096709,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abd91c07ab0815bfc6aa45b63785eb753013bdf05aa0c68e3d5285f5287228f1",
        "md5": "5faf75687e4aa6c10f701d4fb8ce6efa",
        "sha256": "0efaa702657ae5c5030049be1eab693ac0b41e847a8d2d74de5d71c64d51b075"
      },
      "downloads": -1,
      "filename": "miniflask-1.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5faf75687e4aa6c10f701d4fb8ce6efa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13064,
      "upload_time": "2020-04-03T08:21:10",
      "upload_time_iso_8601": "2020-04-03T08:21:10.787144Z",
      "url": "https://files.pythonhosted.org/packages/ab/d9/1c07ab0815bfc6aa45b63785eb753013bdf05aa0c68e3d5285f5287228f1/miniflask-1.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}