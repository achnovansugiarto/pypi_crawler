{
  "info": {
    "author": "Sebastian Wallkotter",
    "author_email": "sebastian@wallkoetter.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MiniHex \n\nAn [OpenAI gym](https://github.com/openai/gym/) environment that allows an \nagent to play the game of [Hex](https://en.wikipedia.org/wiki/Hex_(board_game)).\nThe aim for this environment is to be lean and have fast rollouts, as well as,\nvariable board size. With random actions it currently achieves \n**~340 games per second** in a 11x11 grid (original size) on a single CPU \n(Intel Xenon E3-1230 @3.3GHz).\n\nHex is a two player game and needs to be converted into a \"single agent \nenvironment\" to fit into the gym framework. We achieve this by requiring a\n`opponent_policy` at creation time. Each move of the agent will be immediately\nfollowed by a move of the opponent. This is a function that takes as input a\nboard state and outputs an action.\n\n## Installation\n\npip install minihex\n\nEditable installation (if you wish to tweak the environment):\n```\ngit clone https://github.com/FirefoxMetzger/minihex.git\npip install -e minihex/\n```\n\n## Minimal Working Example\n\n```\nimport gym\nimport minihex\n\n\nenv = gym.make(\"hex-v0\",\n               opponent_policy=minihex.random_policy,\n               board_size=11)\n\nstate, info = env.reset()\ndone = False\nwhile not done:\n    board, player = state\n    action = minihex.random_policy(board, player, info)\n    state, reward, done, info = env.step(action)\n\nenv.render()\n\nif reward == -1:\n    print(\"Player (Black) Lost\")\nelif reward == 1:\n    print(\"Player (Black) Won\")\nelse:\n    print(\"Draw\")\n\n```\n\n## Debug Mode\n\nIf the environment is instantiated with `debug=True` each step will check if a\nvalid action is provided, and an `IndexError` will be raised if an invalid one\nis provided. This is very useful while writing agents, e.g., if the agent\nmaintains it's own belief over the environment and may request invalid actions.\nWhen evaluating/running at scale, however, this check can cause significant\nslowdown. Hence, it is only performed if explicitly requested.\n\n## Limitations\n\nCurrently the enviornment is missing the following features to go to version 1.0\n\n- The swap action that is used to mitigate the disadvantage of playing second.\n- RGB rendering mode\n- add environment to pypi\n- no surrender action\n\n## Bugs and Contributing\nIf you encounter problems, check the [GitHub issue page](https://github.com/FirefoxMetzger/minihex/issues) or open a new issue there.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FirefoxMetzger/minihex.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minihex",
    "package_url": "https://pypi.org/project/minihex/",
    "platform": "",
    "project_url": "https://pypi.org/project/minihex/",
    "project_urls": {
      "Homepage": "https://github.com/FirefoxMetzger/minihex.git"
    },
    "release_url": "https://pypi.org/project/minihex/1.0.1/",
    "requires_dist": [
      "numpy (>=1.18.2)",
      "gym (>=0.17.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "The game of Hex implemented for reinforcement learning in the OpenAI gym framework. Optimized for rollout speed.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8356857,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab1708225b23600ff23e9797031e20ad4dd975cdc2d03199dfa5bea80e19b254",
        "md5": "815cbf3b868e5e04c509551babb3a301",
        "sha256": "4249c0d049445abaf0e1893acd6077bd2de8ca74393899bad241691972e90ebe"
      },
      "downloads": -1,
      "filename": "minihex-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "815cbf3b868e5e04c509551babb3a301",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5826,
      "upload_time": "2020-10-07T08:04:14",
      "upload_time_iso_8601": "2020-10-07T08:04:14.804886Z",
      "url": "https://files.pythonhosted.org/packages/ab/17/08225b23600ff23e9797031e20ad4dd975cdc2d03199dfa5bea80e19b254/minihex-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d13f0fc8b958bca58a69643865afa81f92efb518bd554789ea9a25876f8fa08d",
        "md5": "9e8831444b4991e2a5de83419c017616",
        "sha256": "be0f3fb98260e80b80a3b773d5b72eab29b009061b5214faa40e3cd9256f84a3"
      },
      "downloads": -1,
      "filename": "minihex-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9e8831444b4991e2a5de83419c017616",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4783,
      "upload_time": "2020-10-07T08:04:16",
      "upload_time_iso_8601": "2020-10-07T08:04:16.367555Z",
      "url": "https://files.pythonhosted.org/packages/d1/3f/0fc8b958bca58a69643865afa81f92efb518bd554789ea9a25876f8fa08d/minihex-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}