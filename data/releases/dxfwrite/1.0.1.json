{
  "info": {
    "author": "Manfred Moitzi",
    "author_email": "mozman@gmx.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "dxfwrite\n========\n\nAbstract\n--------\n\nA Python library to create DXF R12 drawings.\n\na simple example::\n\n    from dxfwrite import DXFEngine as dxf\n    drawing = dxf.drawing('test.dxf')\n    drawing.add(dxf.line((0, 0), (10, 0), color=7))\n    drawing.add_layer('TEXTLAYER', color=2)\n    drawing.add(dxf.text('Test', insert=(0, 0.2), layer='TEXTLAYER')\n    drawing.save()\n\nsupported DXF R12 entities\n--------------------------\n\n * ARC\n * ATTDEF\n * ATTRIB\n * BLOCK\n * CIRCLE\n * 3DFACE\n * INSERT\n * LINE\n * POINT\n * POLYLINE (special Polyface and Polymesh objects are available)\n * SHAPE (not tested)\n * SOLID\n * TRACE\n * TEXT\n * VERTEX (only for internal use, see Polyline, Polyface and Polymesh objects)\n\nnot supported DXF R12 entities\n------------------------------\n\n * DIMENSION\n\nemulated entities from DXF R13 and later\n----------------------------------------\n\n * MTEXT (R13) ... emulated as composite entity MText\n * ELLIPSE (R13) ... approximated by Ellipse\n * SPLINE (R13) ... approximated by Spline\n * LWPOLYLINE (R13) ... use POLYLINE\n * TABLE (R2005) ... emulated as composite entity Table\n\ncomposite entities\n------------------\n\n * MText -- multi line text\n * LinearDimension\n * AngularDimension\n * ArcDimension\n * RadialDimension\n * Table -- text and blockrefs containing table like a HTML-table\n * Ellipse -- approximated as POLYLINE\n * Spline -- cubic spline curve through breakpoints **without** additional control\n   points, approximated as POLYLINE\n * Bezier -- cubic bezier curve through breakpoints **with** additional control\n   points, approximated as POLYLINE\n * Clothoid -- Euler spiral, approximated as POLYLINE\n\nread/write AutoCAD ctb-files\n----------------------------\n\nThe module ``acadctb`` provides the ability to read and write AutoCAD ctb-files.\nWith ctb-files you can assign a new color or lineweight to a dxf-color-index for\nplotting or printing, but this has to be supported by the used application.\n\na simple example::\n\n    from dxfwrite import acadctb\n    ctb = acadctb.load('test.ctb')\n    style1 = ctb.get_style(1) # dxf color index (1 .. 255)\n    style1.set_color(23, 177, 68) # set rgb values (0..255)\n    style1.set_lineweight(0.7)\n    ctb.save('new.ctb')\n\nInstallation\n============\n\nwith easy_install::\n\n    easy_install dxfwrite\n\nwith pip::\n\n    pip install dxfwrite\n\nor from source::\n\n    python setup.py install\n\nDocumentation\n=============\n\nhttp://packages.python.org/dxfwrite/\n\nGood Luck! Feedback is greatly appreciated.\n\nManfred\n\nmozman@gmx.at\n\ndxfwrite can be found on bitbucket.org at:\n\nhttp://bitbucket.org/mozman/dxfwrite\n\nNews\n====\n\nVersion 1.0.1 - 26 March 2011\n\n  * added easy usage of modelspace/paperspace, see examples/paperspace.py\n  * BUGFIX: removed dict-comprehension in module htmlcolors.py for\n    backward-compatibility to Python 2.5 and 2.6, works with pypy 1.4.1\n\nVersion 1.0.0 - 11 March 2011\n\n  * changed: set DXF Header variables now looks like dwg.header['$VAR'] = value,\n    see http://packages.python.org/dxfwrite/headervars.html\n  * splitted makedxfexamples.py into several files and moved them into the\n    subdir 'examples'\n  * curves.Ellpise: radiusx -> rx; radiusy -> ry\n  * moved documentation to: http://packages.python.org/dxfwrite,\n    and using Sphinx (http://sphinx.pocoo.org)\n  * tested with Python 3.2 - OK\n  * further compatibility-tests only for CPython 2.7 & CPython 3.2+\n  * added Drawing.add_xref(filename), for usage see examples/xref.py\n  * adding relative attributes by Insert.add() concidering the xy-scaling\n  * added **Howtos** section to documentation\n\nVersion 0.3.6 - 14 November 2010\n\n  * moved dxfwrite.drawing.ENCODING to class Drawing\n  * Python 3.1 support\n\nVersion 0.3.5 - 10 September 2010\n\n  * new: package and tests run with Python 2.7\n\nVersion 0.3.4 - 29 August 2010\n\n  * status: 5 - Production/Stable\n  * new: package and tests run with Python 2.5 (tests need unittest2)\n\nVersion 0.3.3 - 27 April 2010\n\n  * BUGFIX: makedxfexamples.py - attdef keyword error\n\nVersion 0.3.2 - 27 April 2010\n\n  * BUGFIX: Drawing.__dxf__() - StringIO() does not support 'with' statement\n\nVersion 0.3.1 - 24 April 2010\n\n  * new: insert2, insert block reference with automatic attrib filling\n  * changed interface for DXFEngine.attrib()\n\nVersion 0.3.0b1 - 28 March 2010\n\n  * new: subpackage algebra: circle, ray, clothoid, cspline, bezier (27.03.2010)\n  * new: Spline, Bezier, Clothoid and Ellipse - curves (27.03.2010)\n  * new: acadctb.py to read, write and create AutoCAD ctb-files (25.03.2010)\n  * splitted buildups.py into mtext.py and rect.py\n\nVersion 0.2.0 - 21 March 2010\n\n  * Alpha status - api may change\n\nVersion 0.1.0 - 14 March 2010\n\n  * Pre-Alpha status\n  * Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://bitbucket.org/mozman/dxfwrite/downloads",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/mozman/dxfwrite",
    "keywords": "DXF,CAD",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dxfwrite",
    "package_url": "https://pypi.org/project/dxfwrite/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/dxfwrite/",
    "project_urls": {
      "Download": "http://bitbucket.org/mozman/dxfwrite/downloads",
      "Homepage": "http://bitbucket.org/mozman/dxfwrite"
    },
    "release_url": "https://pypi.org/project/dxfwrite/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Python library to create DXF R12 drawings.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6381495,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2666bfa84e78eeec51bc9c56e10b5d9380e8bc8534dbe4c7477fc744e98db3e9",
        "md5": "eb463ac148de731e5b33ad6a15701f5d",
        "sha256": "bad005a5c9329d9619074d6b584d6897989bfb2cc4339482e3d969501d2dbe60"
      },
      "downloads": -1,
      "filename": "dxfwrite-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb463ac148de731e5b33ad6a15701f5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 108416,
      "upload_time": "2011-03-26T07:22:08",
      "upload_time_iso_8601": "2011-03-26T07:22:08.068991Z",
      "url": "https://files.pythonhosted.org/packages/26/66/bfa84e78eeec51bc9c56e10b5d9380e8bc8534dbe4c7477fc744e98db3e9/dxfwrite-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ead477654972b8d8b4fd3e28e0137be750550e615e791de6e399b95cd435e94",
        "md5": "5d8b76bab4f0fe981e53b93082f973d0",
        "sha256": "92427c08442f8822b78d5edc8b9a763c869b9805a86dd51efd048c11d6755399"
      },
      "downloads": -1,
      "filename": "dxfwrite-1.0.1.zip",
      "has_sig": false,
      "md5_digest": "5d8b76bab4f0fe981e53b93082f973d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 153192,
      "upload_time": "2011-03-26T07:22:09",
      "upload_time_iso_8601": "2011-03-26T07:22:09.297583Z",
      "url": "https://files.pythonhosted.org/packages/8e/ad/477654972b8d8b4fd3e28e0137be750550e615e791de6e399b95cd435e94/dxfwrite-1.0.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}