{
  "info": {
    "author": "David Aronsohn",
    "author_email": "WagThatTail@Me.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Python DNSimple\n===============\n\n[![Build Status](https://travis-ci.org/onlyhavecans/dnsimple-python.svg?branch=master)](https://travis-ci.org/onlyhavecans/dnsimple-python)o\n\n## Introduction\n\nThis is a client for the [DNSimple REST API](https://developer.dnsimple.com/). It currently allows you to fetch existing domain info, as well as register new domains and manage domain records.\n\n`dnsimple-python` works for both python 2 & 3.\n\n**Note:** As of 1.0.0 this now uses [DNSimple's APIv2](https://blog.dnsimple.com/2016/12/api-v2-stable/). This is incompatible with older versions of the library because of authentication changes. Please review the docs and tests before deploying to production.\n\n### Getting started\n\nYou'll need the `json` module that is included with python version 2.6 and later, or the `simplejson` module if you are using an earlier version.\n\n`dnsimple-python` also depends on the `requests` library.\n\nImport the module:\n\n```python\nfrom dnsimple import DNSimple\n```\n\nYou can provide your DNSimple credentials in one of two ways:\n\n#### Provide email/password or api\\_token credentials programmatically:\n\n```python\n# Use email/password authentication: HTTP Basic\ndns = DNSimple(email=YOUR_USERNAME, password=YOUR_PASSWORD)\n\n# Use api_token credentials\ndns = DNSimple(api_token=YOUR_API_TOKEN)\n\n# If you have many accounts you can provide account_id (661 is an example)\n# You can find your account id in url (https://sandbox.dnsimple.com/a/661/account)\ndns = DNSimple(email=YOUR_USERNAME, password=YOUR_PASSWORD, account_id=661)\n```\n\n##### Store you email/password or api\\_token credentials in a file called `.dnsimple` in the current directory with the following data:\n\n```\n[DNSimple]\nemail: email@domain.com\npassword: yourpassword\n```\n\nOr:\n\n```\n[DNSimple]\napi_token: yourapitoken\n```\n\nOr (assuming `$DNSIMPLE_EMAIL` and `$DNSIMPLE_TOKEN` are environment variables):\n\n```\n[DNSimple]\nemail: %(DNSIMPLE_EMAIL)s\napi_token: %(DNSIMPLE_TOKEN)s\n```\n\nYou then need not provide any credentials when constructing `DNSimple`:\n\n```python\ndns = DNSimple()\n```\n\n## Domain Operations\n\n### Check out your existing domains:\n\nJust run:\n\n```python\ndomains = dns.domains()\n```\n\nResults appear as a Python dict:\n\n```python\n{'domain': {'created_at': '2010-10-14T09:45:32Z',\n            'expires_at': '10/14/2011 5:45:00 AM',\n            'id': 999,\n            'last_enom_order_id': None,\n            'name': 'yourdomain.com',\n            'name_server_status': 'active',\n            'registrant_id': 99,\n            'registration_status': 'registered',\n            'updated_at': '2010-10-14T10:00:14Z',\n            'user_id': 99}},\n{'domain': {'created_at': '2010-10-15T16:02:34Z',\n            'expires_at': '10/15/2011 12:02:00 PM',\n            'id': 999,\n            'last_enom_order_id': None,\n            'name': 'anotherdomain.com',\n            'name_server_status': 'active',\n            'registrant_id': 99,\n            'registration_status': 'registered',\n            'updated_at': '2010-10-15T16:30:16Z',\n            'user_id': 99}}]\n```\n\n### Get details for a specific domain\n\n```python\ndns.domain('mikemaccana.com')\n```\n\nResults are the same as `domains()` above, but only show the domain specified.\n\n### Check whether a domain is available\n\n```python\ndns.check('google.com')\n\n# Hmm, looks like I'm too late to get that one...\n{u'currency': u'USD',\nu'currency_symbol': u'$',\nu'minimum_number_of_years': 1,\nu'name': u'google.com',\nu'price': u'14.00',\nu'status': u'unavailable'}\n```\n\n### Register a new domain\n\n```python\ndns.register('newdomain.com')\n```\n\nThis will register 'newdomain.com', automatically picking the registrant\\_id from your first domain. To specify a particularly `registrant_id`, just run:\n\n```python\ndns.register('newdomain.com', 99)\n```\n\nResponses will be in a dictionary describing the newly created domain, same as the `domain()` call above.\n\n### Delete a domain\n\nCareful with this one!\n\n```python\ndns.delete('domain-to-die.com')\n```\n\n## Record operations\n\nAll operations on domain records are now supported:\n\n* List records: `records(id_or_domainname)`\n* Get record details: `record(id_or_domainname, record_id)`\n* Add record: `add_record(id_or_domainname, data)`\n* Update record: `update_record(id_or_domainname, record_id, data)`\n* Delete record: `delete_record(id_or_domainname, record_id)`\n\n## Running Tests\n\nBefore running tests, you'll need to ensure your environment is set up correctly:\n\n1. If you don't already have a DNSimple sandbox account, [create one](https://sandbox.dnsimple.com/signup) and make sure to have your email address, password, and API token handy.\n1. Ensure you have the `virtualenv` package installed (`pip install virtualenv --upgrade`) since tests are run from this isolated environment\n1. Copy the file `tests/.env.example` to `tests/.env` and supply your sandbox credentials\n1. From the project root, run `make test` -- this will set up your local environment with `virutalenv`, install all necessary dependencies, and run all the tests.\n\n## License\n\nLicensed under the [MIT license](http://www.opensource.org/licenses/mit-license.php)\n\n## Authors\n\n* Original Author [Mike MacCana](https://github.com/mikemaccana/)\n* APIv2 Support [Kirill Motkov](https://github.com/lcd1232)\n* Maintainer [David Aronsohn](https://github.com/onlyhavecans)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/onlyhavecans/dnsimple-python/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnsimple",
    "package_url": "https://pypi.org/project/dnsimple/",
    "platform": "",
    "project_url": "https://pypi.org/project/dnsimple/",
    "project_urls": {
      "Homepage": "https://github.com/onlyhavecans/dnsimple-python/"
    },
    "release_url": "https://pypi.org/project/dnsimple/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client for DNSimple REST API http://developer.dnsimple.com/overview/",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17137838,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f57f4afb98cdb048406c21cb922c95ba583709612ba9888909d72363a63d9c5",
        "md5": "f5c25d6860aaf8f4274ca95b662f2c9a",
        "sha256": "608f5caffd991859ea373e6b2e2dae6c40f9f99cde4f0df7a5bf0d57def33e22"
      },
      "downloads": -1,
      "filename": "dnsimple-1.0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "f5c25d6860aaf8f4274ca95b662f2c9a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11612,
      "upload_time": "2018-02-22T02:50:27",
      "upload_time_iso_8601": "2018-02-22T02:50:27.972941Z",
      "url": "https://files.pythonhosted.org/packages/1f/57/f4afb98cdb048406c21cb922c95ba583709612ba9888909d72363a63d9c5/dnsimple-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}