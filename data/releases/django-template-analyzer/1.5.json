{
  "info": {
    "author": "Diederik van der Boor & Django CMS developers",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image::  https://travis-ci.org/edoburu/django-template-analyzer.png?branch=master\n  :target: http://travis-ci.org/edoburu/django-template-analyzer\n  :alt: build-status\n\nIntroduction\n============\n\nThe ``template_analyzer`` package offers an API to analyze the Django template structure.\nIt can be used to find nodes of a particular type, e.g. to do automatic detection of placeholder tags.\n\nSupported features\n==================\n\nThe scanner finds tags in various situations, including:\n\n* Extend nodes\n* Include nodes\n* Overwritten blocks with new definitions\n* Blocks with or without ``{{ block.super }}``\n* Reorganized blocks\n* Ignoring nodes outside blocks in extending templates\n* Handling multiple levels of super includes\n\nThe returned nodes are provided in a natural ordering,\nas they would be expected to appear in the outputted page.\n\nWhile Django offers a ``template.nodelist.get_nodes_of_type()`` function,\nthis function does not produce the same results.\n\n\nAPI example\n===========\n\n::\n\n    from django.template.loader import get_template\n    from mycms.templatetags.placeholdertags import Placeholder\n    from template_analyzer.djangoanalyzer import get_node_instances\n\n    # Load a Django template\n    template = get_template(\"mycms/default-page.html\")\n\n    # Find all tags in the template:\n    placeholders = get_node_instances(template, Placeholder)\n\n    # Read information from the template tag themselves:\n    # (this is an example, accessing a custom method on the Placeholder object)\n    placeholder_names = [p.get_name() for p in placeholders]\n\nInstallation\n============\n\nFirst install the module, preferably in a virtual environment. It can be installed from PyPI::\n\n    pip install django-template-analyzer\n\nOr the current folder can be installed::\n\n    pip install .\n\n.. include:: CHANGES.rst\n\nCredits\n=======\n\n* This package is based on the work of\n  `Django CMS <http://www.django-cms.org>`_. \n* Many thanks to the contributors of ``cms/utils/placeholder.py`` / ``cms/utils/plugins.py`` in Django CMS!",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-template-analyzer/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-template-analyzer",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-template-analyzer",
    "package_url": "https://pypi.org/project/django-template-analyzer/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-template-analyzer/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-template-analyzer/zipball/master",
      "Homepage": "https://github.com/edoburu/django-template-analyzer"
    },
    "release_url": "https://pypi.org/project/django-template-analyzer/1.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Template Analyzer - Extract template nodes from a Django template",
    "version": "1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12042052,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32d786c54630cf58ad3afcda51d4e519c96d110cf946afff2144b97d7099384e",
        "md5": "e63098b4afe15e1dfb7f61ecb6429f75",
        "sha256": "ef66c6001bfe88ed9030480491f4c929e20ed064faecf1a495e93f72e2ae19c9"
      },
      "downloads": -1,
      "filename": "django_template_analyzer-1.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e63098b4afe15e1dfb7f61ecb6429f75",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 9327,
      "upload_time": "2015-04-13T11:31:35",
      "upload_time_iso_8601": "2015-04-13T11:31:35.124898Z",
      "url": "https://files.pythonhosted.org/packages/32/d7/86c54630cf58ad3afcda51d4e519c96d110cf946afff2144b97d7099384e/django_template_analyzer-1.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f871853221c2e8efe1891e37a3b3ca5e4d9aa335bec8df42c6a157bb4a7fa6d2",
        "md5": "675520aa799e0e33d8b18b745cdb756c",
        "sha256": "814a86b553319a3356fdc7650f63fd55d3112fd601c47e913b8c7dc826cd24be"
      },
      "downloads": -1,
      "filename": "django-template-analyzer-1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "675520aa799e0e33d8b18b745cdb756c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7015,
      "upload_time": "2015-04-13T11:31:31",
      "upload_time_iso_8601": "2015-04-13T11:31:31.683215Z",
      "url": "https://files.pythonhosted.org/packages/f8/71/853221c2e8efe1891e37a3b3ca5e4d9aa335bec8df42c6a157bb4a7fa6d2/django-template-analyzer-1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}