{
  "info": {
    "author": "Shohei Mukai",
    "author_email": "mukaishohei76@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# django-view-table\n\nPlugin to create view table in Django.  \nThis plugin enable you to create view table in Django model.  \n\n\n## Support Database\n\n* SQLite3\n* PostgreSQL\n* MySQL\n* (TBC)Oracle Database\n\n## Installation & Setup\n\n```\npip install django-view-table\n```\n\nAfter install, you can set your `INSTALLED_APPS`\n\n```python\nINSTALLED_APPS = [\n    'viewtable',\n]\n```\n\n## Usage\n\n### Create model\n\nYou need the three step.\n\n* Import `view_table` module\n* Inherit `ViewTable`\n* Impliment `get_query` method\n\nThe method `get_query` should return select sql statement.  \nYou can write sql statement as raw sql or django model object.  \n\nThis is a simple example.  \n\n```python\nfrom django.db import models\nfrom view_table.models import ViewTable\n\n\n# Base table\nclass Book(models.Model):\n    name = models.CharField(max_length=100)\n    category = models.CharField(max_length=100)\n\n\n# View table\nclass Books(ViewTable):\n    category = models.CharField(max_length=100)\n    count = models.IntegerField()\n\n    # You must implement get_query method.\n    @classmethod\n    def get_query(self):\n        return Book.objects.values('category').annotate(count=models.Count('category')).query\n        # You can also write:\n        # return 'SELECT \"polls_book\".\"category\", COUNT(\"polls_book\".\"category\") AS \"count\" FROM \"polls_book\" GROUP BY \"polls_book\".\"category\"' \n``` \n\n\n### Run command\n\nAfter Django migration, you can create view tables the below command.  \n\n```bash\npython manage.py createviewtable\n```\n\n## Development\n\nI prepare application for this plugin application.  \n\n* https://github.com/pyohei/django-view-table\n\n\n## License\n\nMIT",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyohei/django-view-table",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-view-table",
    "package_url": "https://pypi.org/project/django-view-table/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-view-table/",
    "project_urls": {
      "Homepage": "https://github.com/pyohei/django-view-table"
    },
    "release_url": "https://pypi.org/project/django-view-table/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django view table plugin",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8724060,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c77a40dbb9df976f8fde30971e57d48fb7bdc8dfeaf9b0e0d196bb289545087b",
        "md5": "ca44861a2616596121114e5d90c54b7a",
        "sha256": "2992220533285b8356c14758de1a80b8a27d934132ca9ec9eac5a7ae8c0ea773"
      },
      "downloads": -1,
      "filename": "django-view-table-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ca44861a2616596121114e5d90c54b7a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2570,
      "upload_time": "2020-11-23T03:15:02",
      "upload_time_iso_8601": "2020-11-23T03:15:02.928391Z",
      "url": "https://files.pythonhosted.org/packages/c7/7a/40dbb9df976f8fde30971e57d48fb7bdc8dfeaf9b0e0d196bb289545087b/django-view-table-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}