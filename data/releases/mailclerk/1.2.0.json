{
  "info": {
    "author": "Greg Sherrid",
    "author_email": "developers@mailclerk.app",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://github.com/mailclerk/mailclerk-ruby/blob/main/mailclerk.png?raw=true\" alt=\"Mailclerk Logo\"/>\n</p>\n\n# Mailclerk Python\n\nMailclerk helps anyone on your team design great emails, improve their performance, and free up developer time. [Learn more](https://mailclerk.app/)\n\n<!-- Tocer[start]: Auto-generated, don't remove. -->\n\n## Table of Contents\n\n- [Requirements](#requirements)\n- [Setup](#setup)\n- [API Key & URL](#api-key--url)\n- [Usage](#usage)\n- [Testing](#testing)\n- [Varying API Keys](#changing-api-keys)\n- [Package Tests](#package-tests)\n- [Versioning](#versioning)\n- [Code of Conduct](#code-of-conduct)\n- [Contributions](#contributions)\n- [License](#license)\n- [History](#history)\n\n<!-- Tocer[finish]: Auto-generated, don't remove. -->\n\n## Requirements\n\n1. Python 2.7+ or Python 3.4+\n\n## Setup\n\nTo install, run:\n\n```\npip install mailclerk\n```\n\n## API Key & URL\n\nTo set the Mailclerk API Key (begins with `mc_`), you can provide it as an\nenvironmental variable: `MAILCLERK_API_KEY`. Alternatively, you can\nset it directly on the Mailclerk module:\n\n```\nimport mailclerk\nmailclerk.api_key = \"mc_yourprivatekey\"\n```\n\n_If you are using version control like git, we strongly recommend storing your\nproduction API keys in environmental variables_.\n\nThe default API endpoint is `https://api.mailclerk.app`. To change this, you\ncan provide a `MAILCLERK_API_URL` ENV variable or set `mailclerk.mailclerk_url`.\n\n## Usage\n\nYou'll need an active account and at least one template (in the example `welcome-email`).\n\nTo send an email to \"alice@example.com\":\n\n```\nmailclerk.deliver(\"welcome-email\", \"alice@example.com\")\n```\n\nIf the template has any dynamic data, you can include it in the third parameter\nas a hash:\n\n```\nmailclerk.deliver(\"welcome-email\", \"alice@example.com\", { name: \"Alice\" })\n```\n\nSee [Mailclerk documentation](https://dashboard.mailclerk.app/docs) for more details.\n\n## Testing\n\nYour Mailclerk environment has two API keys: a production key (beginning with `mc_live`)\nand a test key (beginning with `mc_test`). If you use the test key, emails will\nnot be delivered, but will show up in the logs on your Mailclerk account and can be\npreviewed there. This replaces tools like [naomi](https://github.com/edwinlunando/django-naomi) for previewing emails in development.\n\nTo avoid cluttering up your Mailclerk test logs with sends triggered by your\nautomated test suite, call `mailclerk.outbox.enable()` in the file that\nconfigures your tests. For example, in Django, add it to the test environment-specific\nsection of your `settings.py` file.\n\nThis will also enable utility methods which you can use to write tests that check\nemails are sent with the correct data:\n\n```python\n# Number of emails \"sent\"\nlen(mailclerk.outbox)\n\n# Returns all emails of matching a template or email recipient. See method\nmailclerk.outbox.filter(template=\"welcome-email\")\nmailclerk.outbox.filter(recipient_email=\"gilles@example.com\")\n\n# Returns the most recent email:\nemail = mailclerk.outbox[-1]\nemail.template        # \"welcome-email\"\nemail.recipient_email # \"gilles@example.com\"\nemail.subject         # \"Welcome to Acme, Gilles\"\nemail.html            # \"<html><body>...\"\n```\n\nIn between test cases (for example, the `setUp()` method of a unittest case), you should clear the stored emails by calling `mailclerk.outbox.reset()`.\n\nThe emails have the following attributes:\n\n| Attribute         | Description                                                                |\n| ----------------- | -------------------------------------------------------------------------- |\n| `template`        | Slug of the template sent (1st argument to `mailclerk.deliver`)            |\n| `recipient`       | Hash representing the send recipient (2nd argument to `mailclerk.deliver`) |\n| `recipient_email` | Email of the send recipient                                                |\n| `recipient_name`  | Name of the send recipient (nil if not specified)                          |\n| `data`            | Dynamic data for the send (3rd argument to `mailclerk.deliver`)            |\n| `options`         | Options specified for the send (4th argument to `mailclerk.deliver`)       |\n| `from`            | From Mailclerk: Hash with `name` and `address` of the sender               |\n| `subject`         | From Mailclerk: Text of the send's subject line                            |\n| `preheader`       | From Mailclerk: Text of the send's preheader                               |\n| `html`            | From Mailclerk: Rendered body HTML for the send                            |\n| `text`            | From Mailclerk: Rendered plaintext version of the send                     |\n| `headers`         | From Mailclerk: Extra email headers (e.g. `reply-to`)                      |\n\nSee the [Mailclerk testing documentation](https://dashboard.mailclerk.app/docs#testing)\nfor more details.\n\n## Varying API Keys\n\nIf you need to use multiple API keys, you can also initialize `mailclerk.MailclerkAPIClient`\ninstances with different keys. This:\n\n```\nmc_client = mailclerk.MailclerkAPIClient(\"mc_yourprivatekey\")\nmc_client.deliver(\"welcome-email\", \"bob@example.com\")\n```\n\nIs equivalent to this:\n\n```\nmailclerk.api_key = \"mc_yourprivatekey\"\nmailclerk.deliver(\"welcome-email\", \"bob@example.com\")\n```\n\n## Package Tests\n\nInstall test dependencies:\n\n```\npip install .[test]\n```\n\nRun with:\n\n```\npython -m unittest discover\n```\n\n## Versioning\n\nRead [Semantic Versioning](https://semver.org) for details. Briefly, it means:\n\n- Major (X.y.z) - Incremented for any backwards incompatible public API changes.\n- Minor (x.Y.z) - Incremented for new, backwards compatible, public API enhancements/fixes.\n- Patch (x.y.Z) - Incremented for small, backwards compatible, bug fixes.\n\n## Code of Conduct\n\nPlease note that this project is released with a [CODE OF CONDUCT](CODE_OF_CONDUCT.md). By\nparticipating in this project you agree to abide by its terms.\n\n## Contributions\n\nRead [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n## License\n\nCopyright 2021 [Mailclerk](https://mailclerk.app/).\nRead [LICENSE](LICENSE.md) for details.\n\n## History\n\nRead [CHANGES](CHANGES.md) for details.\nBuilt with [Gemsmith](https://github.com/bkuhlmann/gemsmith).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mailclerk/mailclerk-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mailclerk",
    "package_url": "https://pypi.org/project/mailclerk/",
    "platform": "",
    "project_url": "https://pypi.org/project/mailclerk/",
    "project_urls": {
      "Homepage": "https://github.com/mailclerk/mailclerk-python"
    },
    "release_url": "https://pypi.org/project/mailclerk/1.2.0/",
    "requires_dist": [
      "requests[security] (>=2.20) ; python_version < \"3.0\"",
      "requests (>=2.20) ; python_version >= \"3.0\"",
      "python-dotenv ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Send mail with mailclerk.app",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10763737,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19a1ebc6be04040ca7b9d3692acb6afe26c5cf3bef11fcb112fc0ea25c26b8d4",
        "md5": "b848803c57ff24165b8c608d8582d08c",
        "sha256": "dfaa79176db00cb3597a0b193761f31655ec4e0ce292b9188d0c045274d75ece"
      },
      "downloads": -1,
      "filename": "mailclerk-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b848803c57ff24165b8c608d8582d08c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7371,
      "upload_time": "2021-06-28T15:02:54",
      "upload_time_iso_8601": "2021-06-28T15:02:54.267277Z",
      "url": "https://files.pythonhosted.org/packages/19/a1/ebc6be04040ca7b9d3692acb6afe26c5cf3bef11fcb112fc0ea25c26b8d4/mailclerk-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12a51b73b1602ab79a2280a6ca09d1e30570435cf8d31bd54431832d032f108a",
        "md5": "4f35cc9f24a456a68b1d8bf4f9dc2657",
        "sha256": "b9df628ba9265e30c8e3e0f01f991fd73e9cefaef082597af1a18f673e941948"
      },
      "downloads": -1,
      "filename": "mailclerk-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4f35cc9f24a456a68b1d8bf4f9dc2657",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6163,
      "upload_time": "2021-06-28T15:02:57",
      "upload_time_iso_8601": "2021-06-28T15:02:57.852895Z",
      "url": "https://files.pythonhosted.org/packages/12/a5/1b73b1602ab79a2280a6ca09d1e30570435cf8d31bd54431832d032f108a/mailclerk-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}