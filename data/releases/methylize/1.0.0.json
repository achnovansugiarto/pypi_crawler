{
  "info": {
    "author": "FOXO Bioscience",
    "author_email": "info@FOXOBioScience.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: Jupyter",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "`methylize` is a python package for analyzing output from Illumina methylation arrays. It complements `methylprep` and `methylcheck` and provides methods for computing differentially methylated probes and regions, and annotating these regions with the UCSC Genome Browser.  View on [ReadTheDocs.](https://life-epigenetics-methylize.readthedocs-hosted.com/en/latest/)\n\n[![Readthedocs](https://readthedocs.com/projects/life-epigenetics-methylize/badge/?version=latest)](https://life-epigenetics-methylize.readthedocs-hosted.com/en/latest/) [![image](https://img.shields.io/pypi/l/pipenv.svg)](https://python.org/pypi/pipenv) [![CircleCI](https://circleci.com/gh/FoxoTech/methylize/tree/master.svg?style=shield)](https://circleci.com/gh/FoxoTech/methylize/tree/master) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/099d26465bd64c2387afa063810a13e6)](https://www.codacy.com/gh/FoxoTech/methylize/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=FOXOBioScience/methylize&amp;utm_campaign=Badge_Grade) [![Coverage Status](https://coveralls.io/repos/github/FoxoTech/methylize/badge.svg?branch=master)](https://coveralls.io/github/FoxoTech/methylize?branch=master) ![PYPI-Downloads](https://img.shields.io/pypi/dm/methylize.svg?label=pypi%20downloads&logo=PyPI&logoColor=white)\n\n- [Differentially methylated position (DMP) regression, detection and visualation](docs/demo_diff_meth_pos.ipynb)\n  - [Logistic Regression](docs/demo_diff_meth_pos.html#Testing-logistic-regression)\n  - [Linear Regression](docs/demo_diff_meth_pos.html#Testing-linear-regression)\n  - [Volcano plot and mapping to chromosomes (manhattan plot)](docs/demo_diff_meth_pos.html#Testing-Manhattan-plot-visualizations)\n- [Differentially methylated regions](docs/diff_meth_regions.md)\n  - [Gene annotation with the UCSC Human Genome Browser](docs/diff_meth_regions.html#gene-annotation-with-ucsc-genome-browser)\n\n## Methylize Package\n\nThe `methylize` package contains both high-level APIs for processing data from local files and low-level functionality allowing you to analyze your data AFTER running `methylprep` and `methylcheck`. For greatest usability, import `methylize` into a Jupyer Notebook along with your processed sample data (a DataFrame of beta values or m-values and a separate DataFrame containing meta data about the samples).\n\n`Methylize` allows you to run linear or logistic regression on all probes and identify points of interest in the methylome where DNA is differentially modified. Then you can use these regression results to create *volcano plots* and *manhattan plots*.\n\n### Sample Manhattan Plot\n![Manhattan Plot](https://github.com/FoxoTech/methylize/blob/master/docs/manhattan_example.png?raw=true)\n\n![Manhattan Plot (alternate coloring)](https://github.com/FoxoTech/methylize/blob/master/docs/manhattan_example2.png?raw=true)\n\n### Sample Volcano Plot\n![Volcano Plot](https://github.com/FoxoTech/methylize/blob/master/docs/volcano_example.png?raw=true)\n\nCustomizable: Plot size, color palette, and cutoff p-value lines can be set by the user.\nExporting: You can export all probe statistics, or just the significant probes as CSV or python pickled DataFrame.\n\n## Installation\n\n```python\npip3 install methylize\n```\n\nInstallation will also install the other parts of the `methylsuite` (methylprep and methylcheck) if they are not already installed.\n\nIf progress bar is missing:\n    If you don't see a progress bar in your jupyterlab notebook, try this:\n\n    - conda install -c conda-forge nodejs\n    - jupyter labextension install @jupyter-widgets/jupyterlab-manager\n\n\n## Differentially methylated position/probe (DMP) detection\n\nThe `diff_meth_pos(meth_data, phenotypes)` function searches for individual differentially methylated positions/probes\n(DMPs) by regressing methylation `beta values` or `M-values` for each sample at a given\ngenomic location against the phenotype data for those samples.\n\n### Phenotypes\n\nCan be provided as\n\n    - a list of strings,\n    - integer binary data,\n    - numeric continuous data\n    - pandas series or numpy array\n\nOnly 2 phenotypes are allowed with logistic regression. Linear regression can take more than two phenotypes.\nThe function will coerge string labels for phenotype into 0s and 1s when running logistic regression. To use the meta data associated with a dataset, you would need to pass in the column of your meta dataframe as a list or series. The order of the items in the phenotype should match the order of samples in the beta values or M-values.\n\nFor details on all of the other adjustable input parameters, refer to the API for [diff_meth_pos()](docs/source/modules.html#module-methylize.diff_meth_pos)\n\n### Returns\nA pandas dataframe of regression `statistics` with one row for each probe\nand these columns:\n\n    - regression coefficient\n    - lower limit of the coefficient's 95% confidence interval\n    - upper limit of the coefficient's 95% confidence interval\n    - standard error\n    - p-value (phenotype group A vs B - likelihood that the difference is significant for this probe/location)\n    - q-value (p-values corrected for multiple testing using the Benjamini-Hochberg FDR method)\n    - FDR_QValue: p value, adjusted for multiple comparisons\n\n    The rows are sorted by q-value in ascending order to list the most significant\n    probes first. If q_cutoff is specified, only probes with significant q-values\n    less than the cutoff will be returned in the dataframe.\n\n## Differentially methylated regions\nPass in your DMP stats dataframe, and it calculates and annotates differentially methylated regions (DMR) using the `combined-pvalues` pipeline and returns list of output files.\n\n    - calculates auto-correlation\n    - combines adjacent P-values\n    - performs false discovery adjustment\n    - finds regions of enrichment (i.e. series of adjacent low P-values)\n    - assigns significance to those regions\n    - annotates significant regions with possibly relevant nearby Genes, using the UCSC Genome Browser Database\n    - annotates candidate genes with expression levels for the sample tissue type, if user specifies the\n    sample's tissue type.\n    - returns everything in a CSV that can be imported into other Genomic analysis packages.\n\nFor more details on customizing the inputs and outputs, see API for the [diff_meth_regions(stats, array_type)](docs/source/modules.html#module-methylize.diff_meth_regions) function.\n\n## Loading processed data\n\nAssuming you previously used `methylprep` to process a data set like this:\n\n```python\npython -m methylprep -v process -d GSE130030 --betas\n```\n\nThis creates two files, `beta_values.pkl` and `sample_sheet_meta_data.pkl`. You can load both in `methylize` like this:\n\nNavigate to the folder where `methylrep` saved its processed files, and start a python interpreter:\n```python\n>>>import methylize\n>>>data,meta = methylize.load_both()\nINFO:methylize.helpers:loaded data (485512, 14) from 1 pickled files (0.159s)\nINFO:methylize.helpers:meta.Sample_IDs match data.index (OK)\n```\n\nOr if you are running in a notebook, specify the path:\n```python\nimport methylize\ndata,meta = methylize.load_both('<path_to...>/GSE105018')\n```\n\nThis also validates both files, and ensures that the `Sample_ID` column in meta DataFrame aligns with the column names in the `data DataFrame`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FOXOBioScience/methylize",
    "keywords": "analysis methylation dna data processing life epigenetics illumina parallelization",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "methylize",
    "package_url": "https://pypi.org/project/methylize/",
    "platform": "",
    "project_url": "https://pypi.org/project/methylize/",
    "project_urls": {
      "Documentation": "https://life-epigenetics-methylize.readthedocs-hosted.com/en/latest/",
      "Funding": "https://FOXOBioScience.com/",
      "Homepage": "https://github.com/FOXOBioScience/methylize",
      "Source": "https://github.com/FOXOBioScience/methylize/"
    },
    "release_url": "https://pypi.org/project/methylize/1.0.0/",
    "requires_dist": [
      "pandas",
      "numpy",
      "scipy",
      "statsmodels",
      "matplotlib",
      "methylprep",
      "methylcheck",
      "pymysql",
      "toolshed",
      "interlap"
    ],
    "requires_python": "",
    "summary": "EWAS Analysis software for Illumina methylation arrays",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14379432,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8794db3e8d559f49110bc20fbdf2b579334898309c95a4c28119ca83817a50fb",
        "md5": "3af5756b49cabb844d913784cbb47641",
        "sha256": "4a79d4e484f94cabca99b682c8fc5a25991fc7b0513bb670158513d066577fc4"
      },
      "downloads": -1,
      "filename": "methylize-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3af5756b49cabb844d913784cbb47641",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 88777,
      "upload_time": "2022-01-11T18:34:01",
      "upload_time_iso_8601": "2022-01-11T18:34:01.416781Z",
      "url": "https://files.pythonhosted.org/packages/87/94/db3e8d559f49110bc20fbdf2b579334898309c95a4c28119ca83817a50fb/methylize-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d177d8f50c18a6c9dda286e93f703e7d82cba6dea3f48a2ad9d6f641c16f3d3",
        "md5": "b5a032cfe0bdb392694a027f570f909b",
        "sha256": "a7c7c84f012160c124c9cbd21377a7448c7db0735afd601bd27eec79edabb32a"
      },
      "downloads": -1,
      "filename": "methylize-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b5a032cfe0bdb392694a027f570f909b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 67740,
      "upload_time": "2022-01-11T18:34:03",
      "upload_time_iso_8601": "2022-01-11T18:34:03.896419Z",
      "url": "https://files.pythonhosted.org/packages/0d/17/7d8f50c18a6c9dda286e93f703e7d82cba6dea3f48a2ad9d6f641c16f3d3/methylize-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}