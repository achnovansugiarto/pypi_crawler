{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MapRoulette - A Python Client for the MapRoulette API\n\n\nhttps://maproulette-python-client.readthedocs.io\n\n[![PyPI version](https://badge.fury.io/py/maproulette.svg)](https://badge.fury.io/py/maproulette)\n[![Build Status](https://travis-ci.com/osmlab/maproulette-python-client.svg?branch=master)](https://travis-ci.com/osmlab/maproulette-python-client)\n\nThis client makes it easy for users to communicate with the MapRoulette API from within\ntheir Python environment. In the example below, we are able to access a MapRoulette project in just four lines of code:\n\n```\n   >>> import maproulette\n   >>> config = maproulette.Configuration()\n   >>> api = maproulette.Project(config)\n   >>> api.get_project_by_id(4719)\n   {'data': {'id': 4719, 'owner': 4785024, 'name': 'health_facilities_in_india',...}\n```\n\nThe full documentation for this package can be found [here](https://maproulette-python-client.readthedocs.io/). \n\n\n## Getting Started\n\nInstall the package (or add it to your requirements.txt file):\n\n```bash\npip install maproulette\n```\n\nImport the package:\n\n```\nimport maproulette\n```\n\nFrom there, create a configuration object. Depending on your use case, you may need to pass your API key. Specify\nthat when you create your configuration. For example:\n\n```\nconfig = maproulette.Configuration(api_key='{YOUR_API_KEY}')\n```\n\nOnce you have your configuration object we can create an API object using one of several modules depending on the\nfunctionality that the user is looking for. For example, creating a Project object allows the user to interact with all\nof the project-related functionality in the MapRoulette package.\n\n```\napi = maproulette.Project(config)\n```\n\nNow we have access to the MapRoulette Project API methods. In the example below, I want to find a project by name using\na search string:\n\n```\n# We want to fetch a project with name 'Health Facilities in India'\nmy_project_name = 'Health Facilities in India'\n\n# Pretty-print the API response\nprint(json.dumps(api.find_project(my_project_name), indent=4, sort_keys=True))\n```\n\nThis returns a nicely printed JSON object representing the project named 'Health Facilities in India':\n\n```\n{\n    \"data\": [\n        {\n            \"created\": \"2019-08-26T06:34:28.655Z\",\n            \"deleted\": false,\n            \"description\": \"Adding the Hospitals \",\n            \"displayName\": \"Health Facilities in India\",\n            \"enabled\": true,\n            \"featured\": false,\n            \"groups\": [\n                {\n                    \"created\": \"2020-03-25T16:23:04.360Z\",\n                    \"groupType\": 1,\n                    \"id\": 9273,\n                    \"modified\": \"2020-03-25T16:23:04.360Z\",\n                    \"name\": \"4719_Admin\",\n                    \"projectId\": 4719\n                },\n                {\n                    \"created\": \"2020-03-25T16:23:04.360Z\",\n                    \"groupType\": 2,\n                    \"id\": 9274,\n                    \"modified\": \"2020-03-25T16:23:04.360Z\",\n                    \"name\": \"4719_Write\",\n                    \"projectId\": 4719\n                },\n                {\n                    \"created\": \"2020-03-25T16:23:04.360Z\",\n                    \"groupType\": 3,\n                    \"id\": 9275,\n                    \"modified\": \"2020-03-25T16:23:04.360Z\",\n                    \"name\": \"4719_Read\",\n                    \"projectId\": 4719\n                }\n            ],\n            \"id\": 4719,\n            \"isVirtual\": false,\n            \"modified\": \"2020-01-30T11:05:44.466Z\",\n            \"name\": \"health_facilities_in_india\",\n            \"owner\": 4785024\n        }\n    ],\n    \"status\": 200\n}\n```\n## Development\n\n### Contributing\n\nOpen an issue! Thanks for contributing!\n\n### Testing\n\nThis package uses [Tox](https://tox.readthedocs.io/en/latest/) to perform testing. In order to run Tox, execute the\n`tox` command from the root directory. \n\n\n### Building the Documentation\n\nThe documentation for this package is built with [Sphinx](https://www.sphinx-doc.org/en/master/index.html). In order to\nbuild the documentation for this package: \n\n```\n$ cd docs\n``` \nand then: \n```\n$ make html\n```\nThat command will generate the HTML documentation files for the project. We've hosted these docs at\n[Read the Docs](https://readthedocs.org/). \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/osmlab/maproulette-python-client",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maproulette",
    "package_url": "https://pypi.org/project/maproulette/",
    "platform": "",
    "project_url": "https://pypi.org/project/maproulette/",
    "project_urls": {
      "Homepage": "https://github.com/osmlab/maproulette-python-client"
    },
    "release_url": "https://pypi.org/project/maproulette/1.1.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python API wrapper for MapRoulette",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14061264,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66d1394ec198faf385faafce193dfc24eff42f2532ba064198425a6e1483eb4f",
        "md5": "a11b4afe8996ab9b3b5d8fe09ce9045f",
        "sha256": "cf78d105bfccdd3628aa3fc965bcdd3dcc50696efac5243d5e775e18f600eeac"
      },
      "downloads": -1,
      "filename": "maproulette-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a11b4afe8996ab9b3b5d8fe09ce9045f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22065,
      "upload_time": "2020-06-12T18:34:37",
      "upload_time_iso_8601": "2020-06-12T18:34:37.292049Z",
      "url": "https://files.pythonhosted.org/packages/66/d1/394ec198faf385faafce193dfc24eff42f2532ba064198425a6e1483eb4f/maproulette-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f54ddd0fe0989fec615c421d74c1698e33aee86c21abdf7edc05c20765aa14cd",
        "md5": "b85fd000a4ab96dcab3951d44ddcca1a",
        "sha256": "4daa2dbb306250eb4c226e13d4c59cf56cbd8c1e381168206504d9823fe30912"
      },
      "downloads": -1,
      "filename": "maproulette-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b85fd000a4ab96dcab3951d44ddcca1a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12641,
      "upload_time": "2020-06-12T18:34:38",
      "upload_time_iso_8601": "2020-06-12T18:34:38.210546Z",
      "url": "https://files.pythonhosted.org/packages/f5/4d/dd0fe0989fec615c421d74c1698e33aee86c21abdf7edc05c20765aa14cd/maproulette-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}