{
  "info": {
    "author": "Martin Brochhaus",
    "author_email": "mbrochh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django Rapid Prototyping\n========================\n\nA reusable Django app that helps to create prototypes and cost estimations.\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi::\n\n    $ pip install django-rapid-prototyping\n\nTo get the latest commit from GitHub::\n\n    $ pip install -e git+git://github.com/bitmazk/django-rapid-prototyping.git#egg=rapid_prototyping\n\nAdd ``django_libs`` and ``rapid_prototyping`` to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...,\n        'django_libs'\n        'rapid_prototyping',\n    )\n\nAdd the ``RapidPrototypingView`` from ``django-libs`` and include the\n``urls.py`` of this app in your main ``urls.py``::\n\n    from django_libs.views import RapidPrototypingView\n\n    urlpatterns = [\n        url(r'^p/', include('rapid_prototyping.urls')),\n        url(r'^p/(?P<template_path>.*)$',\n            RapidPrototypingView.as_view(),\n            name='prototype'),\n    ]\n\nAdd the mandatory settings to your ``settings.py``. See heading ``Settings``\nbelow.\n\nSettings\n--------\n\nRAPID_PROTOTYPING_SPRINTS_MODULE\n++++++++++++++++++++++++++++++++\n\nMandatory setting. Should be a fully qualified name to the ``sprints``\narray in your ``sprints`` module somewhere in your project. This would usually\nbe something like ``myproject.context.sprints.sprints``.\n\nOf course you have to create that file and add the ``sprints`` array. See\nheading ``Sprints`` below.\n\n\nRAPID_PROTOTYPING_HOURLY_RATE\n+++++++++++++++++++++++++++++\n\nMandatory setting. Set this to an integer representing your hourly rate.\n\n\nUsage\n-----\n\nIn your ``proto/p_base.html`` add the following block to the bottom of your site::\n\n    {% block costs_footer_container %}\n    <div class=\"costsFooter\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    {% block costs_footer %}{% endblock %}\n                </div>\n            </div>\n        </div>\n    </div>\n    {% endblock %}\n\n    {% comment %}Include this sctipt after your jQuery include.{% endcomment %}\n    <script src=\"{% static \"rapid_prototyping/js/calculate_total.js\" %}\"></script>\n\nNow create a ``p_index.html`` like so::\n\n    {% extends \"proto/p_base.html\" %}\n    {% load libs_tags rapid_prototyping_tags %}\n\n    {% block main %}\n    <h1>Project Prototype</h1>\n    <ul>\n        <li><a href=\"/p/home.html\">Landing Page</a></li>\n        {% comment %}Add links to all pages that are part of your prototype here{% endcomment %}\n    </ul>\n    {% endblock %}\n\n    {% block costs_footer %}\n    <table class=\"table table-bordered table-hover\">\n        {% include \"rapid_prototyping/costs_table_head.html\" %}\n        <tbody>\n            {% load_context \"yourproject.context.home_costs\" %}\n            {% include \"rapid_prototyping/costs_table_body.html\" %}\n            {% comment %}\n                Load context and include table body for all pages that are part of your prototype here\n                {% load_context \"yourproject.context.search_results_costs\" %}\n                {% include \"rapid_prototyping/costs_table_body.html\" %}\n            {% endcomment %}\n            {% include \"rapid_prototyping/costs_total.html\" %}\n        </tbody>\n    </table>\n    {% endblock %}\n\nFor each page that you create, you need to create a context file which defines\nthe estimated costs for all subtasks that need to be done in order to get that\npage up and running. Such a file could look like this::\n\n    # in yourproject/context/home_costs.py\n    from rapid_prototyping.context.utils import append_overhead_costs, get_counter\n\n    MAIN_ID = 100\n    counter = [-1]\n    costs = [\n        {\n            'id': MAIN_ID + get_counter(counter)[0],\n            'task': 'Create logo',\n            'time': 240,\n        },\n        {\n            'id': MAIN_ID + get_counter(counter)[0],\n            'task': 'Create color scheme',\n            'time': 120,\n        },\n        {\n            'id': MAIN_ID + get_counter(counter)[0],\n            'task': 'Create email form',\n            'time': 30,\n        }\n    ]\n    costs = append_overhead_costs(costs, MAIN_ID + get_counter(counter)[0])\n\nWhen you have done all this you should be able to visit\n``/p/proto/p_home.html`` and see your template with a table of costs below. You\nshould also be able to see ``/p/p_index.html`` with a list of all pages and a\ntable of total project costs.\n\nSprints\n-------\n\nIf you have done all the above, you will have some prototype pages with tables\nat the bottom that show planned tasks for each page. You will also have an\nindex page which shows all tasks for the whole project.\n\nNow you migiht want to group tasks into sprints and track the actual time that\nhas been taken to implement a certain task.\n\nFirst of all, create a ``yourproject/context/sprints.py`` like so::\n\n    sprints = [\n        {\n            'id': 1,\n            'title': 'Week 32',\n        },\n        {\n            'id': 2,\n            'title': 'Week 33',\n        },\n    ]\n\nThat's all. It's just an array of dicts, each dict describes a sprint. The\ntitle can be useful when rendering the list of sprints, the important part\nis the ``id``.\n\nIn order to assign tasks to a sprint, open the corresponding ``*_costs.py``\nfile and add some more information to the task's dict::\n\n    costs = [\n        {\n            'id': MAIN_ID + get_counter(counter)[0],\n            'task': 'Create logo',\n            'time': 240,\n            'developer_time': 300,\n            'actual_time': 450,\n            'link': 'http://www.trello.com/',\n            'sprint': 1,\n        },\n    ...\n\nThe additional columns are the following:\n\n**developer_time**: While ``time`` is the time the project manager estimated\nat the very beginning when communicating with the customer, ``developer_time``\nis the time that the person who actually implementes this estimates at the\nbeginning of a sprint. This can be different from ``time`` because as the\nproject progresses and patterns / frameworks emerge, some tasks can become\nmuch easier or much more difficult than initally planned.\n\n**actual_time**: This is the time that the developer actually took in order\nto complete the task.\n\n**link**: If you are using some other software, like www.trello.com to manage\nyour project, you can add a link to the corresponding ticket for this task\nin your other software here.\n\n**sprint**: This must be one of the IDs that you have defined in your\n``sprints.py``.\n\nIf you have done all the above, you should be able to visit ``/p/sprints/``.\n\nYou will now see your sprints with their assigned tasks. Before you start a\nsprint, you might want to note down the total edeveloper estimated time at\nthe beginning of the sprint. This is useful because if you can't finish\nsome of the tasks and move them into the next sprint, the total will change\nand you will not know, how much time you initially estimated.\n\nAdd the total developer estimated time like so::\n\n    sprints = [\n        {\n            'id': 1,\n            'title': 'Week 32',\n            'estimated_time': 1350,\n        },\n        {\n            'id': 2,\n            'title': 'Week 33',\n        },\n    ]\n\nAfter your sprint, you might want to note down which tasks could not be\ncompleted and how much time had been estimated for these tasks::\n\n    sprints = [\n        {\n            'id': 1,\n            'title': 'Week 32',\n            'estimated_time': 1350,\n            'unfinished_tasks': [300, 403, 407, 502, 503, 510],\n            'unfinished_time': 360,\n        },\n        {\n            'id': 2,\n            'title': 'Week 33',\n        },\n    ]\n\nAt this point you must be careful to never add a new task in front of another\ntask because then all IDs would be incremented and the IDs you noted down here\nwould no longer be correct.\n\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps::\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-rapid-prototyping\n    $ python setup.py install\n    $ pip install -r dev_requirements.txt\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    $ git add . && git commit\n    $ git push -u origin feature_branch\n    # Send us a pull request for your feature branch",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitmazk/django-rapid-prototyping",
    "keywords": "django,app,reusable,prototype,rapid prototyping",
    "license": "The MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-rapid-prototyping",
    "package_url": "https://pypi.org/project/django-rapid-prototyping/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-rapid-prototyping/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bitmazk/django-rapid-prototyping"
    },
    "release_url": "https://pypi.org/project/django-rapid-prototyping/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A reusable Django app that helps to create prototypes and cost estimations.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2174072,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca36acbd52dc903cd62f05ebd806fe12494ee39c5e5cf64fba2eb79e58dbac67",
        "md5": "8f66ed3d22f38cb94709d225aeec054e",
        "sha256": "ecc3c799e85169e8085d57da2cf5682caec854c45dccabc528218ea0949fdb57"
      },
      "downloads": -1,
      "filename": "django-rapid-prototyping-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8f66ed3d22f38cb94709d225aeec054e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15131,
      "upload_time": "2016-06-17T21:41:24",
      "upload_time_iso_8601": "2016-06-17T21:41:24.142920Z",
      "url": "https://files.pythonhosted.org/packages/ca/36/acbd52dc903cd62f05ebd806fe12494ee39c5e5cf64fba2eb79e58dbac67/django-rapid-prototyping-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}