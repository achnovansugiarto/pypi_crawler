{
  "info": {
    "author": "Sakib (Florian Dedov)",
    "author_email": "<mail@neuralnine.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "## django-upstorage-backend\n\nThis is a custom django storage backend for `UpStorage`\n\n## Installation\n1. Install Library Using `pip`\n````shell script\n>> pip install django-upstorage-backend\n````\n\n## Starting Guide\n\n1. Set The Custom Storage Backend. Now Open settings.py of your project.\n````python\nDEFAULT_FILE_STORAGE = 'django-upstorage-backend.storages.backends.U3Storage'\n````\n\n2. Set some required KEYS to `settings.py`\n````python\nAUTH_TOKEN = 'auth token from your account'\nAPI_KEY = 'api key of your project'\nUSERNAME = 'username of your account'\nPROJECT_NAME = 'Created Project name'\n````\n\nThats it, We are all done. Now all of your files will be handeled by the custom UpStorage's Backend Storage.\n\n\n## Advanced Guide\n\n* `You don't need to set 'upload_to' in model Fields (Defaultly it files will be saved on the root of your project.)`\n\n* `File Link Will Be Stored On Your Model As Expected.You Can call them as you do usally.`\n\n* `You Can also set 'upload_to='specific/folder' in your model like:`\n   ````python\n  Class TestModel(model.Model):\n      image = models.ImageField(upload_to='to/my/folder')\n\n  # this will save the file to that folder.if there's no folder it will create it.\n  ````\n\n* `If you want to delete the image from the UpStorage Bucket when you delete it from django, you have to do it a bit differently.Lemme show you`\n   ````python\n  Class TestModel(model.Model):\n      image = models.ImageField()\n\n  # To delete the image you have to delete that by writing:\n\n  obj = TestModel.objects.get(id=pk)\n  obj.image.delete()\n\n  # You can't directly delete it like this:\n\n  obj.delete() # this won't delete the file from UpStorage\n\n  # You have to delete the file field first to delete it.\n  ````\n  To make it simple you can override `delete` Method on your Model\n\n  ````python\n  Class TestModel(model.Model):\n      image = models.ImageField()\n\n      def delete(self):\n          self.image.delete()\n          super(TestModel, self).delete()\n  ````\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuackCoding/DjangoUpStorageBackend",
    "keywords": "python,storage,api,upstorage,django-upstorage-backend",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-upstorage-backend",
    "package_url": "https://pypi.org/project/django-upstorage-backend/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-upstorage-backend/",
    "project_urls": {
      "Homepage": "https://github.com/QuackCoding/DjangoUpStorageBackend"
    },
    "release_url": "https://pypi.org/project/django-upstorage-backend/1.2/",
    "requires_dist": [
      "UpStorageApiClient"
    ],
    "requires_python": "",
    "summary": "Custom Storage For UpStorage.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10740861,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3287978ae96233e41433f75479b53b6d6a3a52d7fec182c9a31fcdb6b41ef2e4",
        "md5": "3a5fdaeb7996e58318ed8a09eb054e3a",
        "sha256": "1863f2e84f0b5dff50d42f3e1c2c3f57e3fda088d6e1d873f08bdb97e19b9081"
      },
      "downloads": -1,
      "filename": "django_upstorage_backend-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a5fdaeb7996e58318ed8a09eb054e3a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5384,
      "upload_time": "2021-05-11T04:42:59",
      "upload_time_iso_8601": "2021-05-11T04:42:59.301180Z",
      "url": "https://files.pythonhosted.org/packages/32/87/978ae96233e41433f75479b53b6d6a3a52d7fec182c9a31fcdb6b41ef2e4/django_upstorage_backend-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "840e83e3d7d80d65e7a6ae5802318e42869218a625526c8780b016fdb5bf093c",
        "md5": "bdc8e55263cbc4087eb908d7315018aa",
        "sha256": "36372c94118aa0fff4a6878d32589b4d685bb881b24b470ab4f0c7a20e6114e2"
      },
      "downloads": -1,
      "filename": "django-upstorage-backend-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bdc8e55263cbc4087eb908d7315018aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4534,
      "upload_time": "2021-05-11T04:43:00",
      "upload_time_iso_8601": "2021-05-11T04:43:00.587019Z",
      "url": "https://files.pythonhosted.org/packages/84/0e/83e3d7d80d65e7a6ae5802318e42869218a625526c8780b016fdb5bf093c/django-upstorage-backend-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}