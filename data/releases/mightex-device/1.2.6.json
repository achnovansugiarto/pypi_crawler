{
  "info": {
    "author": "Peter Polidoro",
    "author_email": "polidorop@janelia.hhmi.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "mightex_device_python\n=====================\n\nThis Python package (mightex_device) creates a class named MightexDevice,\nwhich contains an instance of serial_device2.SerialDevice and adds\nmethods to it to interface to Mightex LED controllers.\n\nAuthors::\n\n    Peter Polidoro <polidorop@janelia.hhmi.org>\n\nLicense::\n\n    BSD\n\nExample Usage::\n\n    from mightex_device import MightexDevice\n    dev = MightexDevice() # Might automatically find device if one available\n    # if it is not found automatically, specify port directly\n    dev = MightexDevice(port='/dev/ttyUSB0') # Linux\n    dev = MightexDevice(port='/dev/tty.usbmodem262471') # Mac OS X\n    dev = MightexDevice(port='COM3') # Windows\n    dev.get_serial_number()\n    '04-150824-007'\n    dev.get_channel_count()\n    4\n    channel = 1 # channel numbering starts at 1, not 0!\n    dev.get_mode(channel)\n    'disable'\n    dev.set_normal_parameters(channel,1000,30)\n    dev.get_normal_parameters(channel)\n    {'current': 30, 'current_max': 1000}\n    dev.set_mode_normal(channel)\n    dev.get_load_voltage(channel)\n    2622\n    dev.set_normal_current(channel,200)\n    dev.get_load_voltage(channel)\n    3054\n    dev.set_mode_disable(channel)\n    dev.set_strobe_parameters(channel,100,1)\n    dev.get_strobe_parameters(channel)\n    {'current_max': 100, 'repeat': 1}\n    dev.set_strobe_profile_set_point(channel,0,100,1000000)\n    dev.set_strobe_profile_set_point(channel,1,10,500000)\n    dev.set_strobe_profile_set_point(channel,2,0,0)\n    profile = dev.get_strobe_profile(channel)\n    profile\n    [{'current': 100, 'duration': 1000000},\n     {'current': 10, 'duration': 500000},\n     {'current': 0, 'duration': 0}]\n    dev.set_mode_strobe(channel)\n    dev.get_strobe_profile(channel+1)\n    [{'current': 20, 'duration': 1000},\n     {'current': 10, 'duration': 1000},\n     {'current': 0, 'duration': 0}]\n    dev.set_strobe_profile(channel+1,profile)\n    dev.get_strobe_profile(channel+1)\n    dev.set_mode_strobe(channel+1)\n    dev.set_trigger_parameters(channel,100,True)\n    dev.get_trigger_parameters(channel)\n    {'current_max': 100, 'falling_edge': True}\n    dev.set_trigger_profile_set_point(channel,0,100,1000000)\n    dev.set_trigger_profile_set_point(channel,1,10,500000)\n    dev.set_trigger_profile_set_point(channel,2,0,0)\n    dev.get_trigger_profile(channel)\n    [{'current': 100, 'duration': 1000000},\n     {'current': 10, 'duration': 500000},\n     {'current': 0, 'duration': 0}]\n    dev.set_mode_trigger(channel)\n    dev.reset()\n    dev.get_trigger_profile(channel)\n    [{'current': 20, 'duration': 1000},\n     {'current': 10, 'duration': 1000},\n     {'current': 0, 'duration': 0}]\n    dev.set_trigger_profile_set_point(channel,0,100,1000000)\n    dev.set_trigger_profile_set_point(channel,1,10,500000)\n    dev.set_trigger_profile_set_point(channel,2,0,0)\n    dev.store_parameters()\n    dev.reset()\n    dev.get_trigger_profile(channel)\n    [{'current': 100, 'duration': 1000000},\n     {'current': 10, 'duration': 500000},\n     {'current': 0, 'duration': 0}]\n    dev.restore_factory_defaults()\n    dev.store_parameters()\n    dev.reset()\n    dev.get_trigger_profile(channel)\n    [{'current': 10, 'duration': 20},\n     {'current': 0, 'duration': 0}]\n    from mightex_device import MightexDevices\n    devs = MightexDevices()  # Might automatically find all available devices\n    # if they are not found automatically, specify ports to use\n    devs = MightexDevices(use_ports=['/dev/ttyUSB0','/dev/ttyUSB1']) # Linux\n    devs = MightexDevices(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X\n    devs = MightexDevices(use_ports=['COM3','COM4']) # Windows\n    devs.keys()\n    dev = devs[serial_number]",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/janelia-pypi/mightex_device_python",
    "keywords": "mightex led serial device",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mightex_device",
    "package_url": "https://pypi.org/project/mightex_device/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mightex_device/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/janelia-pypi/mightex_device_python"
    },
    "release_url": "https://pypi.org/project/mightex_device/1.2.6/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Interface to Mightex LED controllers.",
    "version": "1.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2529148,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3567d0e52cf8ac911afee46662344d0f36641ac38623977e2206ea4a716faf0",
        "md5": "63154b9a87839cb46f64722da79ac88d",
        "sha256": "bd464b88a216bfba0a9e83bee7aac021a3f822912fa0c08fc942dbfff90a72b7"
      },
      "downloads": -1,
      "filename": "mightex_device-1.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "63154b9a87839cb46f64722da79ac88d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9781,
      "upload_time": "2016-06-07T16:56:34",
      "upload_time_iso_8601": "2016-06-07T16:56:34.154504Z",
      "url": "https://files.pythonhosted.org/packages/d3/56/7d0e52cf8ac911afee46662344d0f36641ac38623977e2206ea4a716faf0/mightex_device-1.2.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c44965e5c5470cf82a4d79b382c63e88fce7efa9b65a147c2cb56aac9ccc0aed",
        "md5": "6c5673c5db96da7e6a5318794cd1c1dc",
        "sha256": "080f256c0f6c902c9625d095e04584c96e2e4cad389f361399173d7edf84c640"
      },
      "downloads": -1,
      "filename": "mightex_device-1.2.6.zip",
      "has_sig": false,
      "md5_digest": "6c5673c5db96da7e6a5318794cd1c1dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15145,
      "upload_time": "2016-06-07T16:56:40",
      "upload_time_iso_8601": "2016-06-07T16:56:40.084754Z",
      "url": "https://files.pythonhosted.org/packages/c4/49/65e5c5470cf82a4d79b382c63e88fce7efa9b65a147c2cb56aac9ccc0aed/mightex_device-1.2.6.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}