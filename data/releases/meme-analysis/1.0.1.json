{
  "info": {
    "author": "Xiaoran Li",
    "author_email": "lixira@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# meme_analysis\n\nBy SIST NLP Lab XiaoranLi\n* Blog URL : www.sauron.online\n\n## Installation\n```\npip install meme_analysis\n```\n\n## parameter\n* --pertrain_data_dir', type=str, default=\"./data\", help='cache_dir : per-train data save（cache_dir = \"./data\"）\n* --dimension', type=int, default=50, help='per-train data word embedding dimension (dimension = 50 or 100 or 200 or 300)\n* --corpus_data_dir', type=str, required=True, help='Corpus for training morphemes (corpus_data = path of wikipedia_english)\n* --word', type=str,default=\"apple\", help='embedding size')\n* --num_clusters', type=int,default=2, help='number of sememe')\n* --dimensionality_reduction', type=bool,default=False, help='Whether to perform dimensionality reduction analysis\n\n- cache_dir : per-train data save（cache_dir = \"./data\"）\n- dimension : per-train data word embedding dimension (dimension = 50 or 100 or 200 or 300)\n- corpus_data_dir : Corpus for training morphemes (corpus_data = path of wikipedia_english)\n- word_to_index : word to index (word_to_index = glove.stoi)\n- index_to_vec : index to vector (index_to_vec = glove.vectors)\n- sentence_embedding_matrix : from _, _, * = text_preprocessing()\n- sentence_matrix : from _, * _, = text_preprocessing()\n\n## output\n```\n---sememe analysis start---\nnumber of vocabularies :  400000\ncorpus data preprocessing...\nmaking sentence matrix...\nsaved : model,sentence matrix and sentence embedding matrix\n------------------------\nCalculating morpheme matrix...\n------------------------\nThe morpheme matrix is completed!\n------------------------\nTrying to cluster the morpheme matrix...\n------------------------\nText classification on morphemes <Top10>...\nLabel: 1  |  the structure of the additive model allows solution for the additive coefficients by simple algebra rather than by matrix calculations\nLabel: 1  |  connective tissues are fibrous and made up of cells scattered among inorganic material called the extracellular matrix\nLabel: 1  |  the extracellular matrix contains proteins\nLabel: 0  |  the matrix can be modified to form a skeleton to support or protect the body\nLabel: 1  |  the lower layer is the reticular lamina lying next to the connective tissue in the extracellular matrix secreted by the epithelial cells\nLabel: 1  |  the epithelial cells on the external surface of the body typically secrete an extracellular matrix in the form of a cuticle\nLabel: 1  |  the outer surface of the epidermis is normally formed of epithelial cells and secretes an extracellular matrix which provides support to the organism\nLabel: 1  |  in 1925 werner heisenberg published the first consistent mathematical formulation of quantum mechanics matrix mechanics\nLabel: 0  |  undergoes a change in the arrangement of the atoms of its crystal matrix at a certain temperature usually between and\nLabel: 0  |  the smaller atoms become trapped in the spaces between the atoms of the crystal matrix\n------------------------\nThe cluster distribution scatter plot is being produced...\n------------------------\nThe classifier is being used to evaluate the clustering results...\nTrain score: 1.0\nTest score: 0.9733333333333334\n------------------------\nFind the word that is closest to the sum of phonemes...\n['example', 'same', 'this', 'is', 'particular', 'form', 'instance', 'which', 'similar', 'of']\n------------------------\nThe closest word of the phoneme of the matrix :\n ['same', 'the', 'which', 'this', 'of', 'it', 'one', 'is', 'as', 'example']\n------------------------\nThe closest word of the phoneme of the matrix :\n ['function', 'i.e.', 'defined', 'hence', 'element', 'example', 'integral', 'corresponding', 'linear', 'formula_1']\n------------------------End------------------------\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.sauron.online",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meme-analysis",
    "package_url": "https://pypi.org/project/meme-analysis/",
    "platform": "",
    "project_url": "https://pypi.org/project/meme-analysis/",
    "project_urls": {
      "Homepage": "http://www.sauron.online"
    },
    "release_url": "https://pypi.org/project/meme-analysis/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sememe Analysis by SIST NLP Lab XiaoranLi",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9155320,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ac550fdac63b2437954ae215e33ba94f3120e7d16b9e0ec1ec032e6c0443ec1",
        "md5": "5841473a014caab2153685145c772031",
        "sha256": "f1e7ca54d4778db3adbcdefb0d2f82e8fd8f093d3fcb35a3a076153c1b716c53"
      },
      "downloads": -1,
      "filename": "meme_analysis-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5841473a014caab2153685145c772031",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6390,
      "upload_time": "2021-01-13T04:53:48",
      "upload_time_iso_8601": "2021-01-13T04:53:48.625203Z",
      "url": "https://files.pythonhosted.org/packages/0a/c5/50fdac63b2437954ae215e33ba94f3120e7d16b9e0ec1ec032e6c0443ec1/meme_analysis-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41fc36c000dcb0dc72d0a4f6de724e0558c062f2644bdd8ce92eea24409459cb",
        "md5": "62f4ead6e6b117a5bc115206317dc895",
        "sha256": "38e9b46f62d46a205f65c475409899bf8d806a3278d1d14d622805a9e773d72c"
      },
      "downloads": -1,
      "filename": "meme_analysis-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "62f4ead6e6b117a5bc115206317dc895",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5707,
      "upload_time": "2021-01-13T04:53:50",
      "upload_time_iso_8601": "2021-01-13T04:53:50.891061Z",
      "url": "https://files.pythonhosted.org/packages/41/fc/36c000dcb0dc72d0a4f6de724e0558c062f2644bdd8ce92eea24409459cb/meme_analysis-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}