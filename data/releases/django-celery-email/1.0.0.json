{
  "info": {
    "author": "Paul McLanahan",
    "author_email": "paul@mclanahan.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Communications",
      "Topic :: Communications :: Email",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "==========================================================\ndjango-celery-email - A Celery-backed Django Email Backend\n==========================================================\n\nA `Django`_ 1.2+ email backend that uses a `Celery`_ queue for out-of-band sending\nof the messages.\n\n.. _`Celery`: http://celeryproject.org/\n.. _`Django`: http://www.djangoproject.org/\n\n.. warning::\n\t\n\tThis version of ``django-celery-email`` is NOT compatible with versions\n\tof Celery prior to 2.2.0. If you need to use Celery 2.0.x or 2.1.x, please\n\tuse `django-celery-email 0.1.1`_.\n\n.. _`django-celery-email 0.1.1`: http://pypi.python.org/pypi/django-celery-email/0.1.1/\n\nUsing django-celery-email\n=========================\n\nTo enable ``django-celery-email`` for your project you need to add ``djcelery_email`` to\n``INSTALLED_APPS``::\n\n    INSTALLED_APPS += (\"djcelery_email\",)\n\nYou must then set ``django-celery-email`` as your ``EMAIL_BACKEND``::\n\n    EMAIL_BACKEND = 'djcelery_email.backends.CeleryEmailBackend'\n\nBy default ``django-celery-email`` will use Django's builtin ``SMTP`` email backend \nfor the actual sending of the mail. If you'd like to use another backend, you \nmay set it in ``CELERY_EMAIL_BACKEND`` just like you would normally have set \n``EMAIL_BACKEND`` before you were using Celery. In fact, the normal installation\nprocedure will most likely be to get your email working using only Django, then\nchange ``EMAIL_BACKEND`` to ``CELERY_EMAIL_BACKEND``, and then add the new\n``EMAIL_BACKEND`` setting from above.\n\nIf you need to set any of the settings (attributes) you'd normally be able to set on a \n`Celery Task`_ class had you written it yourself, you may specify them in a ``dict``\nin the ``CELERY_EMAIL_TASK_CONFIG`` setting::\n\n    CELERY_EMAIL_TASK_CONFIG = {\n        'queue' : 'email',\n        'rate_limit' : '50/m',\n        ...\n    }\n\nThere are some default settings. Unless you specify otherwise, the equivalent of the \nfollowing settings will apply::\n\n    CELERY_EMAIL_TASK_CONFIG = {\n        'name': 'djcelery_email_send',\n        'ignore_result': True,\n    }\n\nAfter this setup is complete, and you have a working Celery install, sending\nemail will work exactly like it did before, except that the sending will be\nhandled by your Celery workers::\n\n    from django.core import mail\n\n    emails = (\n        ('Hey Man', \"I'm The Dude! So that's what you call me.\", 'dude@aol.com', ['mr@lebowski.com']),\n        ('Dammit Walter', \"Let's go bowlin'.\", 'dude@aol.com', ['wsobchak@vfw.org']),\n    )\n    results = mail.send_mass_mail(emails)\n\n``results`` will be a list of celery `AsyncResult`_ objects that you may ignore, or use to check the\nstatus of the email delivery task, or even wait for it to complete if want. You have to enable a result\nbackend and set ``ignore_result`` to ``False`` in ``CELERY_EMAIL_TASK_CONFIG`` if you want to use these. \nSee the `Celery docs`_ for more info.\n\n``len(results)`` will be the number of emails you attempted to send, and is in no way a reflection on the success or failure \nof their delivery.\n\n.. _`Celery Task`: http://celery.readthedocs.org/en/latest/userguide/tasks.html#basics\n.. _`Celery docs`: http://celery.readthedocs.org/en/latest/userguide/tasks.html#task-states\n.. _`AsyncResult`: http://celery.readthedocs.org/en/latest/reference/celery.result.html#celery.result.AsyncResult",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/pmclanahan/django-celery-email",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-celery-email",
    "package_url": "https://pypi.org/project/django-celery-email/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-celery-email/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://bitbucket.org/pmclanahan/django-celery-email"
    },
    "release_url": "https://pypi.org/project/django-celery-email/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django email backend for celery.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6279758,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd697f43e26cf4c929f5f684f94d30aff3a1402556a1010c44364c1bda4c061f",
        "md5": "b749ba9228197c75a6981913951d5980",
        "sha256": "e6c9d2b890b4f60f40151e3e36db0fe6dc4cbd9aecb3d49f3d49b8125667115a"
      },
      "downloads": -1,
      "filename": "django-celery-email-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b749ba9228197c75a6981913951d5980",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6522,
      "upload_time": "2011-08-11T20:43:36",
      "upload_time_iso_8601": "2011-08-11T20:43:36.817143Z",
      "url": "https://files.pythonhosted.org/packages/cd/69/7f43e26cf4c929f5f684f94d30aff3a1402556a1010c44364c1bda4c061f/django-celery-email-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}