{
  "info": {
    "author": "Edward Chai",
    "author_email": "edwardc@acrossor.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development"
    ],
    "description": "=====\nUser Content Report System\n=====\n\nIOS apps may may require server side has a report system to ensure each content user created can be reporeted and removed. This small django app comes with those essential features that you don't have to implement yourself:\n\n1. Query, monitor all tickets users sent from front-end app on Django Admin Page.\n2. Admin can set priorities, delete content, banning users directly on the admin page. \n3. Built in REST api for front-end calling and sumbitting a ticket.\n4. By default, enabled Email notification to target User (content creator).\n\nQuick start\n-----------\n\n1. Add \"report_system\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'report_system',\n    ]\n\n2. Configure Those settings (Recommended)::\n\n    # REPORT SYSTEM\n\tREPORT_SLUG_MODEL_MAPPINGS = (\n\t    ('user', AUTH_USER_MODEL),\n\t    ('user_blog', 'blogs.blog'),\n\t    ...\n\t)\n\tREPORT_EMAIL_RECEIVER_FIELDNAME = {\n\t    AUTH_USER_MODEL: None,\n\t    'blogs.blog': 'author',\n\t}\n\tREPORT_EMAIL_FROM = DEFAULT_FROM_EMAIL\n\n3. Run `python manage.py migrate` to create the Report System Tickets models.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DrChai/django-user-report",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-user-report",
    "package_url": "https://pypi.org/project/django-user-report/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-user-report/",
    "project_urls": {
      "Homepage": "https://github.com/DrChai/django-user-report"
    },
    "release_url": "https://pypi.org/project/django-user-report/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple user content report system with RESTful api and Email Notification.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2695612,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57a34db6a0419b38af2f38950c071b1fcdb86e1917a8c6f42fa2f662a2cc00d5",
        "md5": "c72e0937d41bf77da96750619c56dbbc",
        "sha256": "2dde1322537142e61a8efa7e66249032452be1b5a548b7a1d7b3287086ed9b8c"
      },
      "downloads": -1,
      "filename": "django-user-report-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c72e0937d41bf77da96750619c56dbbc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8812,
      "upload_time": "2017-03-10T00:12:00",
      "upload_time_iso_8601": "2017-03-10T00:12:00.468013Z",
      "url": "https://files.pythonhosted.org/packages/57/a3/4db6a0419b38af2f38950c071b1fcdb86e1917a8c6f42fa2f662a2cc00d5/django-user-report-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}