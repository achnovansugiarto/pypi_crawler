{
  "info": {
    "author": "Edward Chai",
    "author_email": "edwardc@acrossor.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development"
    ],
    "description": "=====\nUser Content Report System\n=====\n\nIOS apps may may require server side has a report system to ensure each content user created can be reporeted and removed. This small django app comes with those essential features that you don't have to implement yourself:\n\n1. Query, monitor all tickets users sent from front-end app on Django Admin Page.\n2. Admin can set priorities, delete content, banning users directly on the admin page.\n3. Built in REST api for front-end calling and sumbitting a ticket.\n4. By default, enabled Email notification to target User (content creator).\n\nQuick start\n-----------\n\n1. Add \"report_system\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'report_system',\n    ]\n\n2. Configure Those settings (Recommended)::\n\n    # REPORT SYSTEM\n        REPORT_SLUG_MODEL_MAPPINGS = (\n            ('user', AUTH_USER_MODEL),\n            ('user_blog', 'blogs.blog'),\n            ...\n        )\n        REPORT_EMAIL_RECEIVER_FIELDNAME = (\n            (AUTH_USER_MODEL, None),\n            ('blogs.blog', 'author'),\n        )\n        REPORT_EMAIL_FROM = DEFAULT_FROM_EMAIL\n\n3. Run `python manage.py migrate` to create the Report System Tickets models.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DrChai/django-user-report",
    "keywords": null,
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-user-report",
    "package_url": "https://pypi.org/project/django-user-report/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-user-report/",
    "project_urls": {
      "Homepage": "https://github.com/DrChai/django-user-report"
    },
    "release_url": "https://pypi.org/project/django-user-report/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple user content report system with RESTful api and Email Notification.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2695612,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61b4cd010ebaf9229ddb530c2edbf96076e94d6292187c9255b931bcc0668474",
        "md5": "0a9c8bd639fd7892999e9a5377433e95",
        "sha256": "a46f20c954f3ee89d2bf20e5bd567ce6938a07c5fd316bbc6ecc700fdc7be474"
      },
      "downloads": -1,
      "filename": "django-user-report-1.0.2.zip",
      "has_sig": false,
      "md5_digest": "0a9c8bd639fd7892999e9a5377433e95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16360,
      "upload_time": "2016-11-29T04:05:18",
      "upload_time_iso_8601": "2016-11-29T04:05:18.042416Z",
      "url": "https://files.pythonhosted.org/packages/61/b4/cd010ebaf9229ddb530c2edbf96076e94d6292187c9255b931bcc0668474/django-user-report-1.0.2.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}