{
  "info": {
    "author": "Jacek B. Budzynski",
    "author_email": "jacek.b.budzynski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: Polish",
      "Natural Language :: Spanish",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "[![PyPI](https://img.shields.io/pypi/v/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Downloads](https://img.shields.io/pypi/dm/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n\ndjango-sass-compiler\n===========\n\nSimplify the use of [Sass](https://sass-lang.com/) in Django\n\nUsing `libsass`, compile all `.scss` files found in the paths defined in `settings.STATICFILES_FINDERS`\n\n----------\n\nQuickstart\n------------\n\n1.- It's available on [PyPI](https://pypi.org/project/django-sass-compiler/), so you can install it using `pip`\n\n```\npip install django-sass-compiler\n```\n\n2.- Add `django_sass_compiler` to your `INSTALLED_APPS`\n\n```python\nINSTALLED_APPS = [\n    ...,\n    'django_sass_compiler',\n]\n```\n\n3.- Run `sass-compiler`\n\n```\npython manage.py sass-compiler\n```\nor combine with `runserver` command, useful with `--watch` argument. \n```\npython manage.py runserver & python manage.py sass-compiler --watch\n```\n\nArguments:\n------------------\nAll arguments are optional and combinable\n\n* `-s, --style` \n\n  Coding style of the compiled result. choose one of: `'nested'`, `'expanded'` (default), `'compact'`, `'compressed'`\n\n  You can also define this argument in `settings.SASS_COMPILER_STYLE` environment variable.\n  ```\n  SASS_COMPILER_STYLE = 'compressed'\n  ```\n\n* `-p, --precision` \n\n  Sets the number of digits of precision. 8 by default.\n\n  You can also define this argument in `settings.SASS_COMPILER_PRECISION` environment variable.\n  ```\n  SASS_COMPILER_PRECISION = 5\n  ```\n\n * `-nb, --no-build` \n\n    Don't create `build` folder.\n\n    ```\n    app/\n      |- static/\n         |- app/\n            |- scss/\n               |- style.scss\n            |- css/\n               |- style.css\n     ```\n\n    instead\n\n    ```\n    app/\n      |- static/\n         |- app/\n            |- scss/\n               |- style.scss\n            |- build/\n               |- css/\n                  |- style.css\n    ```\n\n    You can also define this argument in `settings.SASS_COMPILER_NO_BUILD` environment variable.\n    ```\n    SASS_COMPILER_NO_BUILD = True \n    ```\n\n* `-m, --map` \n\n   Build a source map.\n\n   You can also define this argument in `settings.SASS_COMPILER_MAP` environment variable.\n   ```\n   SASS_COMPILER_MAP = True \n   ```\n\n* `-c, --clean`\n\n  Remove old files before new compilation. \n\n  NOTE: This action will only take effect on current destination folder (`--no-build`).\n\n  You can also define this argument in `settings.SASS_COMPILER_CLEAN` environment variable.\n  ```\n  SASS_COMPILER_CLEAN = True \n  ```\n\n* `-w, --watch` \n\n  Watch and compile files when `.scss` files are changed.\n\n  You can also define this argument in `settings.SASS_COMPILER_WATCH` environment variable.\n  ```\n  SASS_COMPILER_WATCH = True \n  ```\n\n* `-i, --ignore` \n\n   Ignore files or directories matching this glob-style pattern. \n   Use multiple times to ignore more. \n\n   NOTE: All patterns will applied in the path since the `static` folder to the file name. \n\n   Example: \n\n   To ignore `apps/app/static/app/scss/style.scss` the longest path would be:\n\n   `python manage.py sass-compiler --ignore=app/scss/style.scss` or\n\n   `python manage.py sass-compiler -i=**/**/style.scss` \n\n   or some other glob-style pattern.\n\n   You can also define list paths to ignore in `settings.SASS_COMPILER_IGNORE` environment variable.\n   ```\n   SASS_COMPILER_IGNORE = [\n      'app/scss/style.scss',\n      'app/scss/test/*'\n   ]\n   ```\n\n@import\n-------\nTo @import `.scss` files you must use absolute paths unless the files are at the same or less level, in that case you can use relative paths\n\n```\nsome-app/\n  |- static/\n     |- some-app/\n        |- scss/\n            |- pages\n                |- _timeline.scss\n            |- _colors.scss\n            |- style.scss\nother-app/\n  |- static/\n     |- other-app/\n        |- scss/\n            |- _variables.scss\n```\n\n***some-app/style.scss***\n```scss\n@import 'other-app/scss/variables';\n@import 'pages/timeline';\n@import 'colors'\n```\n\n```scss\n### WRONG ###\n@import '../../variables'; \n```\n\nOutputs\n---------\n##### Standard output:\n```\n$ python manage.py sass-compiler \n```\n```\napp/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- build/\n           |- css/\n              |- style.css\n```\n\n##### With some argument output:\n\n```\npython manage.py sass-compiler --style=compressed --no-build --map\n```\n\n```\napp/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- css/\n           |- style.min.css\n           |- style.css.map\n```\nLicensing\n---------\n\nThe project is licensed under the [BSD License](LICENSE).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jaberbu/django-sass-compiler",
    "keywords": "",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sass-compiler",
    "package_url": "https://pypi.org/project/django-sass-compiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sass-compiler/",
    "project_urls": {
      "Homepage": "https://github.com/jaberbu/django-sass-compiler"
    },
    "release_url": "https://pypi.org/project/django-sass-compiler/1.1.0/",
    "requires_dist": [
      "django",
      "libsass"
    ],
    "requires_python": "",
    "summary": "Simplify the use of Sass in Django.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7243997,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea13856733ace09003722a480893ffcac7e2891bc91cbba3dbb7d2dabb971647",
        "md5": "e208b05571a1e58b91463e22d0c745ef",
        "sha256": "c4f0eae81318b32c935cdbb549d6e33b44524e8f5a2cd151713226d7a3f28cb1"
      },
      "downloads": -1,
      "filename": "django_sass_compiler-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e208b05571a1e58b91463e22d0c745ef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8970,
      "upload_time": "2020-05-14T21:34:08",
      "upload_time_iso_8601": "2020-05-14T21:34:08.102825Z",
      "url": "https://files.pythonhosted.org/packages/ea/13/856733ace09003722a480893ffcac7e2891bc91cbba3dbb7d2dabb971647/django_sass_compiler-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}