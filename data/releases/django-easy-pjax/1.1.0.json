{
  "info": {
    "author": "Filip Wasilewski",
    "author_email": "en@ig.ma",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Easy PJAX for Django\r\n====================\r\n\r\nEnhance the browsing experience of Django sites.\r\n\r\n.. image:: https://pypip.in/v/django-easy-pjax/badge.png\r\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\r\n    :alt: Latest Version\r\n\r\n.. image:: https://pypip.in/d/django-easy-pjax/badge.png\r\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\r\n    :alt: Downloads\r\n\r\n.. image:: https://pypip.in/license/django-easy-pjax/badge.png\r\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\r\n    :alt: License\r\n\r\n.. image::\r\n    https://secure.travis-ci.org/nigma/django-easy-pjax.png?branch=master\r\n    :alt: Build Status\r\n    :target: https://secure.travis-ci.org/nigma/django-easy-pjax\r\n\r\nDeveloped at `en.ig.ma software shop <http://en.ig.ma>`_.\r\n\r\nWhat is PJAX?\r\n-------------\r\n\r\nPJAX utilizes pushState and Ajax to load HTML from the server into the current\r\npage without a full reload. It's Ajax with real permalinks, page titles,\r\nand a working back button that fully degrades.\r\n\r\n`Check out the demo <http://easy-pjax.herokuapp.com/>`_ that illustrates this concept\r\nin practice and take a look at docs of `jquery-pjax`_ to get more information.\r\n\r\nThe `django-easy-pjax` app is a helper that makes it trivial to integrate\r\n`jquery-pjax` with your Django 1.5+ site.\r\n\r\nQuick Start\r\n-----------\r\n\r\nInclude ``django-easy-pjax`` in your requirements file, add ``easy_pjax``\r\nto your ``INSTALLED APPS`` and make sure that you have the \r\n``django.core.context_processors.request`` added to ``TEMPLATE_CONTEXT_PROCESSORS``.\r\n\r\nThen simply add ``|pjax:request`` filter inside your site template\r\n``extends`` tag::\r\n\r\n   {% extends \"theme_base.html\"|pjax:request %}\r\n\r\nThe ``pjax`` filter will decide which layout template should be extended based\r\non HTTP headers. In the example above it will return ``theme_base.html``\r\nfor regular requests and ``pjax_base.html`` for PJAX requests.\r\n\r\nA generic ``pjax_base.html`` template is provided by this application, but you\r\nmay need to copy it to your templates root directory and adjust it to match\r\nyour project's template blocks.\r\n\r\nNo other modification to views, code or url configuration is required,\r\nso integration with other applications shouldn't be a problem.\r\n\r\nThe template filter also takes a comma-separated names of `base` and `pjax`\r\ntemplates as the first parameter::\r\n\r\n    {% extends \"base.html,pjax_base2.html\"|pjax:request %}\r\n\r\nThis is useful if you need to specify another template set.\r\n\r\nUnpjax\r\n------\r\n\r\n`jquery-pjax` uses cache-busting techniques and appends ``_pjax=true``\r\nto query string params.\r\n\r\nIf for some reason you need to remove that param from query strings\r\nyou can use either the ``easy_pjax.middleware.UnpjaxMiddleware`` to remove it\r\nfrom all requests before they are passed to Django views, or the ``unpjax``\r\nfilter to modify urls emitted in templates::\r\n\r\n    <a href=\"{{ request.get_full_path|unpjax }}\">\r\n\r\nDocumentation\r\n-------------\r\n\r\nThe full documentation is at `django-easy-pjax.rtfd.org <http://django-easy-pjax.rtfd.org>`_.\r\n\r\nA live demo is at `easy-pjax.herokuapp.com <https://easy-pjax.herokuapp.com/>`_.\r\nYou can run it locally after installing dependencies by running ``python demo.py``\r\nscript from the cloned repository.\r\n\r\nLicense\r\n-------\r\n\r\n`django-easy-pjax` is released under the BSD license.\r\n\r\nOther Resources\r\n---------------\r\n\r\n- GitHub repository - https://github.com/nigma/django-easy-pjax\r\n- PyPi Package site - http://pypi.python.org/pypi/django-easy-pjax\r\n\r\nPlease note that the `jquery-pjax`_ JavaScript library in not bundled with this\r\napp and you still need to add proper handling to your browser-side code.\r\n\r\nCommercial Support\r\n------------------\r\n\r\nThis app and many other help us build better software\r\nand focus on delivering quality projects faster.\r\nWe would love to help you with your next project so get in touch\r\nby dropping an email at en@ig.ma.\r\n\r\n\r\n.. _jquery-pjax: https://github.com/defunkt/jquery-pjax\r\n\r\n\r\n\r\n\r\nHistory\r\n-------\r\n\r\n1.1.0 (2014-01-30)\r\n++++++++++++++++++\r\n\r\n* Refresh code and compatibility\r\n* Wheel distribution\r\n* Add demo at http://easy-pjax.herokuapp.com/\r\n* Drop official support for Django 1.4 (it should still work though)\r\n\r\n1.0.0 (2012-05-29)\r\n++++++++++++++++++\r\n\r\n* First release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nigma/django-easy-pjax",
    "keywords": "django pjax",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-easy-pjax",
    "package_url": "https://pypi.org/project/django-easy-pjax/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-easy-pjax/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/nigma/django-easy-pjax"
    },
    "release_url": "https://pypi.org/project/django-easy-pjax/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Easy PJAX for Django.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1968266,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70f16a61794a1354f7c513a6b2cd9a829c0296b0480483d8b83c9ceb65197c7d",
        "md5": "ae369eca32e57dd9cbaf01fc4fc3245d",
        "sha256": "1e0a6eabf8c934b0efc007b53622e3ec8bd4b9c5bbb96e362b93cbfee0c27a91"
      },
      "downloads": -1,
      "filename": "django_easy_pjax-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae369eca32e57dd9cbaf01fc4fc3245d",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 8504,
      "upload_time": "2014-01-30T21:23:21",
      "upload_time_iso_8601": "2014-01-30T21:23:21.421181Z",
      "url": "https://files.pythonhosted.org/packages/70/f1/6a61794a1354f7c513a6b2cd9a829c0296b0480483d8b83c9ceb65197c7d/django_easy_pjax-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3472220a2a4a4a6d0ded079dd647acb6ed432f0e129c913cac4abd591659247",
        "md5": "966456b2ba36406cf89d112fe844d576",
        "sha256": "637982a05d52c9e0f64a77b45942ba63c41c42966a15c6c54a70d6820380a919"
      },
      "downloads": -1,
      "filename": "django-easy-pjax-1.1.0.zip",
      "has_sig": false,
      "md5_digest": "966456b2ba36406cf89d112fe844d576",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13404,
      "upload_time": "2014-01-30T21:23:16",
      "upload_time_iso_8601": "2014-01-30T21:23:16.371417Z",
      "url": "https://files.pythonhosted.org/packages/d3/47/2220a2a4a4a6d0ded079dd647acb6ed432f0e129c913cac4abd591659247/django-easy-pjax-1.1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}