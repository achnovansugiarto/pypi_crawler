{
  "info": {
    "author": "genkosta",
    "author_email": "genkosta43@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "django-discounts-cart\n=====================\n\nПриложение для Django - Управление скидками и корзиной в интернет\nмагазине.\n\nversion 1.1.7\n\nDjango >= 1.7 и Python 2.7\n\nСкидки добавляются через админ-панель.\n\nСкидки можно будет добавить на каждую категорию и продукт.\n\nТакже можно настроить поведение скидок.\n\n\nУстановка:\n~~~~~~~~~~\n\n::\n\n    1) pip install django-discounts-cart\n\n    2) Добавьте в INSTALLED_APPS\n        'discounts_cart',\n\n    3) Добавьте в context_processors\n        'discounts_cart.context_processors.vars_cart',\n\n    4) Добавьте discounts-cart в urls.py вашего проекта\n        url(r'^cart/', include('discounts_cart.urls', namespace='discounts_cart')),\n\n    5) Добавьте в проект\n        jquery.cookie.js --> http://plugins.jquery.com/cookie/\n        cart.js          --> https://github.com/genkosta/django-discounts-cart/blob/master/cart.js\n        templates/discounts_cart/in_cart_link.html --> https://github.com/genkosta/django-discounts-cart/tree/master/templates/discounts_cart\n\n    6) Обновить миграции\n        python manage.py migrate discounts_cart\n\n\nВ приложении для определенного типа товара, создаем модели\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    В приложениях не забываем настраивать __init__.py и apps.py\n    Пример:\n        __init__.py\n            default_app_config = 'products.apps.ProductsConfig'\n        \n        apps.py\n            from django.apps import AppConfig\n            \n            class ProductsConfig(AppConfig):\n                name = 'products'\n                verbose_name = 'Products'\n\n\n    Пример настройки моделей:\n    ( для примера, можно посмотреть здесь --> https://github.com/genkosta/django-discounts-cart/tree/master/examples )\n\n    from django.db import models\n    from discounts_cart.models import DiscountsInCategories, DiscountsInProducts\n\n    class Brand(DiscountsInCategories):\n        pass\n\n    class Category(DiscountsInCategories):\n        pass\n\n    class Parameter(DiscountsInCategories):\n        pass\n\n    # Product - Обязательное название модели, во всех приложениях товаров\n    class Product(DiscountsInProducts):\n        brand = models.ForeignKey(Brand)\n        categories = models.ManyToManyField(Category)\n        parameters = models.ManyToManyField(Parameter)\n        \n    # Обязательный метод\n    def view_price(self):\n        pattern = re.compile(r'\\.[0]+$')\n        return '{0} {1}'.format(pattern.sub('', str(self.price)), self.currency)\n    view_price.short_description = _('Price')\n\n    # Обязательный метод\n    @property\n    def get_correct_price(self):\n        return self.price  # Only Decimal type\n\n    # Add names of fields to calculate discounts\n    # Обязательный метод\n    @staticmethod\n    def get_field_names():\n        field_names_dect = {\n            'foreign_key': ('brand',),\n            'many_to_many': ('categories', 'parameters')\n        }\n        return field_names_dect\n\nДобавляем в шаблоны\n~~~~~~~~~~~~~~~~~~~\n\nbase.html\n^^^^^^^^^\n\n::\n\n    <!-- Cart -->\n    <div id=\"id_cart\">\n      <div><strong>Cart</strong></div>\n        <span>count:</span>&ensp;<span class=\"cart_count\">{{ cart_count }}</span><br>\n        <span>amount:</span>&ensp;<span class=\"cart_amount\">{{ cart_amount }}</span><br>\n        {% url 'discounts_cart:view_cart' as cart_url %}\n        <a href=\"{% if cart_count %}{{ cart_url }}{% else %}javascript:void(0);{% endif %}\"\n           class=\"cart_view_product_list\" data-cart_url=\"{{ cart_url }}\">\n            <img src=\"{% static 'img/cart.png' %}\"><br><span>Open</span></a>\n    </div>\n\n    <a href=\"{% url 'home' %}\">Home</a>&emsp;\n    <a href=\"{% url 'home' %}?sort_by_optimal_discount=1\">Sort by optimal discount</a>\n    \nhome.html\n^^^^^^^^^\n\n::\n\n    {% extends 'base.html' %}\n    {% load staticfiles discounts_cart %}\n    \n    \n    {% block content %}\n      <!-- View products -->\n      {% for product in products %}\n        <div>\n          <p>\n              Product: {{ product.name }}<br>\n              Discount {{ product.view_optimal_discount }}<br>\n              Price: {{ product.view_price }} < > {{ product.view_optimal_price }} {{ product.currency }}\n          </p>\n    \n          {% cart_add_select_product 'products' 'product' product.id 'In cart' 'From cart' flag_img=True %}\n        </div>\n        <br>\n      {% endfor %}\n    \n      <!-- Возможные варианты использования шаблонного тега cart_add_select_prod -->\n      {% comment %}\n          {% cart_add_select_product 'app' 'model' prod_id 'In cart' 'From cart' %}\n              or\n          {% cart_add_select_product 'app' 'model' prod_id 'In cart' 'From cart' flag_img=True %}\n              or\n          {% cart_add_select_product 'app' 'model' prod_id flag_img=True %}  <!-- only images -->\n      {% endcomment %}\n    \n      <!-- README\n        Аргументы для шаблонного тега - cart_add_select_prod_*:\n            1) app  - ( имя приложения )\n            2) model  - ( класс модели )\n            3) prod_id  - ( ID товара - Пример: product.id)\n            4) name_in_cart default=''  - ( Название ссылок или кнопок - Пример: 'In cart' )\n            5) name_from_cart default=''  - ( Название ссылок или кнопок - Пример: 'From cart' )\n            6) add_more_name default='Add more'  - ( Название ссылок для увеличения количества того же продукта )\n            7) flag_img - default=False - ( логический флаг, позволяет отображать иконки на ссылках или кнопках,\n                                            настройка изображений через классы - cart_img_in, cart_img_from )\n    \n        Classes ( для настройки внешнего вида, ссылок и кнопок - 'In cart' и 'From cart' ):\n            1) cart_controls  - ( обертка <div> для ссылок и кнопок )\n            2) cart_item_select_product  - ( для настройки ссылок и кнопок - 'In cart' и 'From cart' )\n            3) cart_img_in, cart_img_from  - ( для настройки иконок на ссылках и кнопках, если добавлен flag_img=True )\n    \n        CSS:\n        <style type=\"text/css\">\n            .cart_add_more_product {  // обязательно добавить в стили <<<\n              display: none;\n            }\n    \n            .cart_add_more_product_active {  // обязательно добавить в стили <<<\n              display: block;\n            }\n    \n            // Добавить если используется flag_img=True\n            .cart_img_in, .cart_img_from {\n              display: block;\n              width: 40px;\n              height: 40px;\n              background-size: cover;\n            }\n    \n            .cart_img_in {\n              background: url(\"../img/in_cart.png\") no-repeat center;  // добавьте свою иконку\n            }\n    \n            .cart_img_from  {\n              background: url(\"../img/from_cart.png\") no-repeat center;  // добавьте свою иконку\n            }\n        </style>\n      -->\n    {% endblock %}\n\ncart.html\n^^^^^^^^^\n\n::\n\n    {% extends 'base.html' %}\n    {% load staticfiles %}\n    \n    \n    {% block content %}\n      <!-- Products list -->\n      {% for product in products %}\n        <p>\n            Product: {{ product.name }}<br>\n            Count: {{ product.count }}<br>\n            Price: {{ product.view_optimal_price }} {{ product.currency }}\n        </p>\n      {% endfor %}\n    \n      <p>_ _ _ _ _ _ _ _ _ _</p>\n    \n      <!-- Total amount -->\n      <p>Итого</p>\n      <p>Total count:&ensp;<span class=\"cart_count\">{{ cart_count }}</span></p>\n      <p>Total amount:&ensp;<span class=\"cart_amount\">{{ cart_amount }}</span></p>\n      {% if cart_count %}\n    \n      <p>_ _ _ _ _ _ _ _ _ _</p>\n    \n      <!-- Recalculate with a promo-code -->\n      <P>Пересчитать с промо-кодом</P>\n      <p>Total count:&ensp;<span class=\"cart_count_recalculation\">0</span></p>\n      <p>Total amount:&ensp;<span class=\"cart_amount_recalculation\">0</span></p>\n      <form id=\"id_cart_check_promo_code_form\" action=\"{% url 'discounts_cart:recalculation_cart_with_promo_code' %}\" method=\"post\">\n        <input id=\"id_cart_promo_code_text\" type=\"text\" name=\"promo_code\" value=\"\" placeholder=\"Enter promo-code\">\n        <button>Recalculation</button>\n      </form>\n    \n      <p>_ _ _ _ _ _ _ _ _ _</p>\n    \n      <!-- Payment -->\n      <p>Платеж</p>\n      <form id=\"id_cart_payment_form\" action=\"{% url 'payments' %}\" method=\"post\">{% csrf_token %}\n        <input id=\"id_cart_promo_code_text\" type=\"text\" name=\"promo_code\" value=\"\" placeholder=\"Enter promo-code, if present\">\n        <button>Payment</button><br>\n        <label for=\"id_cart_promo_code_text\">( Если промо-код не подходит, он будет не учтен. )</label>\n      </form>\n      {% endif %}\n    {% endblock %}\n\nДля сортировки по оптимальным скидкам\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    Пример:\n    \n    home views.py\n        \n    from products.models import Product  # или Phone или Стиральные машины\n    \n    def home(request):\n    \n        if request.GET.get('sort_by_optimal_discount', False):\n            # Выборка всех активных, плюс сортировка по оптимальным скидкам\n            products = Product.products.sort_by_optimal_discount()\n        else:\n            # Выборка всех активных\n            products = Product.products.active()\n            # или\n            # products = Product.objects.filter(active=True)\n    \n        return render(request, 'home.html', {\n            'products': products\n        })\n\nДля контроля над скидками, после завершения оплаты, добавить\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n( Если промо-коды настроены как удаляемые, они будут удалятся. )\n\n::\n\n    Пример:\n    \n    payment views.py\n    \n    from discounts_cart.utils import control_promo_codes, recalculation_payment\n\n    def payment(request):\n\n        if request.method == 'POST':\n        \n            # Recalculation before payment ( for checking )\n            result = recalculation_payment(request)\n            count_products = result['count']\n            amount = result['amount']\n            \n            # Control promo-codes\n            promo_code = request.POST['promo_code'].strip()\n            control_promo_codes(request, promo_code)\n\nCron\n~~~~\n\n( По желанию, добавить комманды в Cron. )\n\n::\n\n    # Деактивировать использованные скидки\n    python manage.py discounts_cart deact\n    или\n    # Удалить использованные скидки\n    python manage.py discounts_cart del",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/genkosta/django-discounts-cart/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/genkosta/django-discounts-cart",
    "keywords": "django discounts cart commerce e-ecommerce",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-discounts-cart",
    "package_url": "https://pypi.org/project/django-discounts-cart/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-discounts-cart/",
    "project_urls": {
      "Download": "https://github.com/genkosta/django-discounts-cart/tarball/master",
      "Homepage": "https://github.com/genkosta/django-discounts-cart"
    },
    "release_url": "https://pypi.org/project/django-discounts-cart/1.1.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Discounts for online store and management cart",
    "version": "1.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2501765,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9edc45c7192d02f7c16fdb0b2b8c97823d42b27f386351acc56c9bec465f0600",
        "md5": "3a4174a25c0d796f905dc09189f9f014",
        "sha256": "48f29b470ed3cfa1f8bf1cb78fb839e127d898abb1900b2bea2137b575631418"
      },
      "downloads": -1,
      "filename": "django-discounts-cart-1.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "3a4174a25c0d796f905dc09189f9f014",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17395,
      "upload_time": "2016-12-06T06:06:51",
      "upload_time_iso_8601": "2016-12-06T06:06:51.185439Z",
      "url": "https://files.pythonhosted.org/packages/9e/dc/45c7192d02f7c16fdb0b2b8c97823d42b27f386351acc56c9bec465f0600/django-discounts-cart-1.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}