{
  "info": {
    "author": "MDSplus Core Development Team",
    "author_email": "mdsplus_dev@psfc.mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Object Brokering",
      "Topic :: System :: Clustering",
      "Topic :: System :: Distributed Computing",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Networking",
      "Topic :: System :: Systems Administration"
    ],
    "description": "# mdsConnector\nConnect to remote MDSplus server via SSH in python and use MDSplus python objects remotely\n\nThis module requires the rpyc module to be installed on the local host. The MDSplus software package\nis not needed on the local host but you can utilize all of the MDSplus python objects remotely on\nthe server you connect to. The data remains on the remote system unless you retrieve an instance\nof a python primitive object or an numpy array.\n\nThe following example demonstrates how this can be used.\n\n```\n>>> from mdsconnector import mdsConnector\n>>> c = mdsConnector('hostname')\n>>> t = c.Tree('mytree',42)\n>>> n = c.getNode('\\top:signal')\n>>> rec = n.record\n>>> nmpyarray = rec.data()\n>>> ans = c.Data.execute('$ * 10',nmpyarray).data()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MDSplus,Data Managment,Data Acquisition,Magnetic Fusion Energy,Remote Data Access",
    "license": "MIT License  Copyright (c) 2017 MDSplus Software Development project  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdsconnector",
    "package_url": "https://pypi.org/project/mdsconnector/",
    "platform": null,
    "project_url": "https://pypi.org/project/mdsconnector/",
    "project_urls": {
      "Homepage": "https://github.com/MDSplus/mdsConnector"
    },
    "release_url": "https://pypi.org/project/mdsconnector/1.8.0/",
    "requires_dist": [
      "rpyc (==4.1.5)",
      "dill (<=0.3.2)",
      "plumbum (<=1.6.9)",
      "numpy",
      "bumpver ; extra == 'dev'",
      "pip-tools ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">2.5",
    "summary": "Remote call to MDSplus objects",
    "version": "1.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16129417,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9712a8d88bbb79ee6d66e541a6bc52a36ac9f84869919a533a1e16468630d744",
        "md5": "e151302e7e3dc68449501a7fc20e9e9d",
        "sha256": "342968d6b831b0767d44554b3f342890f5877bc247ad1d691eafe80a44f8ce2a"
      },
      "downloads": -1,
      "filename": "mdsconnector-1.8.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e151302e7e3dc68449501a7fc20e9e9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">2.5",
      "size": 14445,
      "upload_time": "2022-12-16T19:07:50",
      "upload_time_iso_8601": "2022-12-16T19:07:50.725855Z",
      "url": "https://files.pythonhosted.org/packages/97/12/a8d88bbb79ee6d66e541a6bc52a36ac9f84869919a533a1e16468630d744/mdsconnector-1.8.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "449f6ae50b973b2d9bbbe8e11cbfbf25050ef5780a7cfb03558fe28c21026293",
        "md5": "cb77ebf7151a32d4d39dfe5cb63d8d49",
        "sha256": "903ad2f0686eea59da732186dd720c0c563692d9726fdd79a9f442f489e40e31"
      },
      "downloads": -1,
      "filename": "mdsconnector-1.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb77ebf7151a32d4d39dfe5cb63d8d49",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">2.5",
      "size": 13942,
      "upload_time": "2022-12-16T19:07:52",
      "upload_time_iso_8601": "2022-12-16T19:07:52.519133Z",
      "url": "https://files.pythonhosted.org/packages/44/9f/6ae50b973b2d9bbbe8e11cbfbf25050ef5780a7cfb03558fe28c21026293/mdsconnector-1.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}