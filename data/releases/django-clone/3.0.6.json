{
  "info": {
    "author": "Tonye Jack",
    "author_email": "jtonye@ymail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "|  Python   | Django  |  Downloads  |   Code Style   |\n|:---------:|:-------:|:-----------:|:--------------:|\n| [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django_clone.svg)](https://pypi.org/project/django-clone) | [![PyPI - Django Version](https://img.shields.io/pypi/djversions/django_clone.svg)](https://docs.djangoproject.com/en/3.2/releases/) | [![Downloads](https://pepy.tech/badge/django-clone)](https://pepy.tech/project/django-clone) | [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) |\n\n|    PyPI         | Test | Vulnerabilities | Coverage | Code Quality  | Dependencies   |  Pre-Commit   |\n|:---------------:|:----:|:---------------:|:--------:|:-------------:|:--------------:|:-------------:|\n| [![PyPI version](https://badge.fury.io/py/django-clone.svg)](https://badge.fury.io/py/django-clone) | [![Test](https://github.com/tj-django/django-clone/workflows/Test/badge.svg)](https://github.com/tj-django/django-clone/actions?query=workflow%3ATest) | [![Known Vulnerabilities](https://snyk.io/test/github/tj-django/django-clone/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/tj-django/django-clone?targetFile=requirements.txt) | [![Codacy Badge](https://app.codacy.com/project/badge/Coverage/b33dd02dbb034d7fa9886a99f5383ea6)](https://www.codacy.com/gh/tj-django/django-clone?utm_source=github.com\\&utm_medium=referral\\&utm_content=tj-django/django-clone\\&utm_campaign=Badge_Coverage) <br/> [![codecov](https://codecov.io/gh/tj-django/django-clone/branch/main/graph/badge.svg?token=2NE21Oe50Q)](https://codecov.io/gh/tj-django/django-clone)| [![Codacy Badge](https://app.codacy.com/project/badge/Grade/b33dd02dbb034d7fa9886a99f5383ea6)](https://www.codacy.com/gh/tj-django/django-clone?utm_source=github.com\\&utm_medium=referral\\&utm_content=tj-django/django-clone\\&utm_campaign=Badge_Grade) | [![Updates](https://pyup.io/repos/github/tj-django/django-clone/shield.svg)](https://pyup.io/repos/github/tj-django/django-clone/) |  [![pre-commit.ci status](https://results.pre-commit.ci/badge/github/tj-django/django-clone/main.svg)](https://results.pre-commit.ci/latest/github/tj-django/django-clone/main) |\n\n## django-clone\n\nCreate copies of a model instance with explicit control on how the instance should be duplicated (limiting fields or related objects copied) with unique field detection.\n\nThis solves the problem introduced by using `instance.pk = None` and `instance.save()` which results in copying more object state than required.\n\n## Features\n\n*   100% test coverage.\n*   More control over how a model instance should be duplicated\n*   Multi Database support i.e Create a duplicate on one or more databases.\n*   Restrict fields used for creating a duplicate instance.\n*   Detect unique fields and naively adds a suffix (`copy {count}`) to each new instance.\n\n## Table of Contents\n\n*   [Installation](#installation)\n*   [Usage](#usage)\n    *   [Subclassing the `CloneModel`](#subclassing-the-clonemodel)\n    *   [Using the `CloneMixin`](#using-the-clonemixin)\n    *   [Duplicating a model instance](#duplicating-a-model-instance)\n        *   [Bulk cloning a model](#bulk-cloning-a-model)\n        *   [Multi database support](#multi-database-support)\n    *   [CloneMixin attributes](#clonemixin-attributes)\n        *   [Explicit (include only these fields)](#explicit-include-only-these-fields)\n        *   [Implicit (include all except these fields)](#implicit-include-all-except-these-fields)\n    *   [Creating clones without subclassing `CloneMixin`.](#creating-clones-without-subclassing-clonemixin)\n    *   [Django Admin](#django-admin)\n        *   [Duplicating Models from the Django Admin view.](#duplicating-models-from-the-django-admin-view)\n            *   [List View](#list-view)\n            *   [Change View](#change-view)\n        *   [CloneModelAdmin class attributes](#clonemodeladmin-class-attributes)\n*   [Compatibility](#compatibility)\n*   [Running locally](#running-locally)\n*   [Found a Bug?](#found-a-bug)\n*   [Contributors ✨](#contributors-)\n\n## Installation\n\nRun\n\n```bash script\npip install django-clone\n```\n\n## Usage\n\n### Subclassing the `CloneModel`\n\n**CHANGE**\n\n```python\nfrom django.db import models\n\nclass MyModel(models.Model):\n    title = models.CharField(max_length=200)\n```\n\n**TO**\n\n```python\nfrom django.db import models\nfrom model_clone import CloneModel\n\nclass MyModel(CloneModel):\n    title = models.CharField(max_length=200)\n```\n\n**Example**\n\n```python\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\nfrom model_clone import CloneModel\n\nclass TestModel(CloneModel):\n    title = models.CharField(max_length=200)\n    tags =  models.ManyToManyField('Tags')\n\n    _clone_m2m_fields = ['tags']\n\n\nclass Tags(models.Model):  #  To enable cloning tags directly use `CloneModel` as shown above.\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return _(self.name)\n```\n\n### Using the `CloneMixin`\n\n```python\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\nfrom model_clone import CloneMixin\n\nclass TestModel(CloneMixin, models.Model):\n    title = models.CharField(max_length=200)\n    tags =  models.ManyToManyField('Tags')\n\n    _clone_m2m_fields = ['tags']\n\n\nclass Tags(models.Model):  #  To enable cloning tags directly use `CloneMixin` as shown above.\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return _(self.name)\n```\n\n### Duplicating a model instance\n\n```python\nIn [1]: test_obj = TestModel.objects.create(title='New')\n\nIn [2]: test_obj.pk\nOut[2]: 1\n\nIn [3]: test_obj.title\nOut[3]: 'New'\n\nIn [4]: test_obj.tags.create(name='men')\n\nIn [4]: test_obj.tags.create(name='women')\n\nIn [5]: test_obj.tags.all()\nOut[5]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [6]: test_obj_clone = test_obj.make_clone()\n\nIn [7]: test_obj_clone.pk\nOut[7]: 2\n\nIn [8]: test_obj_clone.title\nOut[8]: 'New copy 1'\n\nIn [9]: test_obj_clone.tags.all()\nOut[9]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [6]: test_obj_clone = test_obj.make_clone(attrs={'title': 'Updated title'})\n\nIn [7]: test_obj_clone.pk\nOut[7]: 3\n\nIn [8]: test_obj_clone.title\nOut[8]: 'Updated title'\n\nIn [9]: test_obj_clone.tags.all()\nOut[9]: <QuerySet [<Tag: men>, <Tag: women>]>\n```\n\n#### Bulk cloning a model\n\n```python\nIn [1]: test_obj = TestModel.objects.create(title='New')\n\nIn [2]: test_obj.pk\nOut[2]: 1\n\nIn [3]: test_obj.title\nOut[3]: 'New'\n\nIn [4]: test_obj.tags.create(name='men')\n\nIn [4]: test_obj.tags.create(name='women')\n\nIn [5]: test_obj.tags.all()\nOut[5]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [6]: test_obj_clones = test_obj.bulk_clone(1000)\n\nIn [7]: len(test_obj_clones)\nOut[7]: 1000\n\nIn [8]: test_obj_clone = test_obj_clones[0]\n\nIn [9]: test_obj_clone.pk\nOut[9]: 2\n\nIn [10]: test_obj_clone.title\nOut[10]: 'New copy 1'\n\nIn [11]: test_obj_clone.tags.all()\nOut[11]: <QuerySet [<Tag: men>, <Tag: women>]>\n```\n\n#### Multi database support\n\n```python\n\nIn [6]: test_obj_clone = test_obj.make_clone(using='replica')  # Replicate test object to a different database.\n\nIn [7]: test_obj_clone.pk\nOut[7]: 1\n\nIn [8]: test_obj_clone.title\nOut[8]: 'New'\n\nIn [9]: test_obj_clone.tags.all()\nOut[9]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [10]: test_obj_clone._state.db\nOut[10]: 'replica'\n```\n\n### CloneMixin attributes\n\n|    Attribute        |  Description |\n|:------------------------------:|:------------:|\n| `DUPLICATE_SUFFIX` | Suffix to append to duplicates <br> (NOTE: This requires `USE_DUPLICATE_SUFFIX_FOR_NON_UNIQUE_FIELDS` <br> to be enabled and supports string fields). |\n`USE_DUPLICATE_SUFFIX_FOR_NON_UNIQUE_FIELDS` | Enable appending the `DUPLICATE_SUFFIX` to new cloned instances. |\n`UNIQUE_DUPLICATE_SUFFIX` | Suffix to append to unique fields |\n`USE_UNIQUE_DUPLICATE_SUFFIX` | Enable appending the `UNIQUE_DUPLICATE_SUFFIX` to new cloned instances. |\n`MAX_UNIQUE_DUPLICATE_QUERY_ATTEMPTS` | The max query attempt while generating unique values for a case of unique conflicts. |\n\n#### Explicit (include only these fields)\n\n|    Attribute        |  Description |\n|:------------------------------:|:------------:|\n| `_clone_fields` | Restrict the list of fields to copy from the instance (By default: Copies all fields excluding auto-created/non editable model fields) |\n`_clone_m2m_fields` | Restricted Many to many fields (i.e Test.tags) |\n`_clone_m2o_or_o2m_fields` | Restricted Many to One/One to Many fields |\n`_clone_o2o_fields` | Restricted One to One fields |\n\n#### Implicit (include all except these fields)\n\n|  Attribute  | Description |\n|:--------------------:|:-----------:|\n| `_clone_excluded_fields` | Excluded model fields. |\n`_clone_excluded_m2m_fields` | Excluded many to many fields. |\n`_clone_excluded_m2o_or_o2m_fields` |  Excluded Many to One/One to Many fields. |\n`_clone_excluded_o2o_fields` | Excluded one to one fields. |\n\n> **NOTE:** :warning:\n>\n> *   Ensure to either set `_clone_excluded_*` or `_clone_*`. Using both would raise errors.\n\n### Creating clones without subclassing `CloneMixin`.\n\n```python\n\nIn [1]: from model_clone.utils import create_copy_of_instance\n\nIn [2]: test_obj = TestModel.objects.create(title='New')\n\nIn [3]: test_obj.pk\nOut[3]: 1\n\nIn [4]: test_obj.title\nOut[4]: 'New'\n\nIn [5]: test_obj.tags.create(name='men')\n\nIn [6]: test_obj.tags.create(name='women')\n\nIn [7]: test_obj.tags.all()\nOut[7]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [8]: test_obj_clone = create_copy_of_instance(test_obj, attrs={'title': 'Updated title'})\n\nIn [9]: test_obj_clone.pk\nOut[9]: 2\n\nIn [10]: test_obj_clone.title\nOut[10]: 'Updated title'\n\nIn [11]: test_obj_clone.tags.all()\nOut[11]: <QuerySet []>\n```\n\n> **NOTE:** :warning:\n>\n> *   This method won't copy over related objects like Many to Many/One to Many relationships.\n> *   Ensure that required fields skipped from being cloned are passed in using the `attrs` kwargs.\n\n### Django Admin\n\n#### Duplicating Models from the Django Admin view.\n\n**Change**\n\n```python\nfrom django.contrib import admin\nfrom django.contrib.admin import ModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(ModelAdmin):\n    pass\n```\n\n**to**\n\n```python\nfrom model_clone import CloneModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(CloneModelAdmin):\n    pass\n```\n\n##### List View\n\n![Screenshot](Duplicate-action.png)\n\n##### Change View\n\n![Screenshot](Duplicate-button.png)\n\n#### CloneModelAdmin class attributes\n\n```python\n\nfrom model_clone import CloneModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(CloneModelAdmin):\n    # Enables/Disables the Duplicate action in the List view (Defaults to True)\n    include_duplicate_action = True\n    # Enables/Disables the Duplicate action in the Change view (Defaults to True)\n    include_duplicate_object_link = True\n```\n\n> **NOTE:** :warning:\n>\n> *   Ensure that `model_clone` is placed before `django.contrib.admin`\n\n```python\nINSTALLED_APPS = [\n    'model_clone',\n    'django.contrib.admin',\n    '...',\n]\n```\n\n## Compatibility\n\n|  Python      |  Supported version |\n|--------------|--------------------|\n|  Python2.x  |    `<=2.5.3`       |\n|  Python3.5  |    `<=2.9.6`       |\n|  Python3.6+  |    All versions    |\n\n|  Django      |   Supported version |\n|--------------|---------------------|\n|  1.11        |    `<=2.7.2`        |\n|  2.x         |    All versions     |\n|  3.x         |    All versions     |\n\n## Running locally\n\n```shell\n$ git clone git@github.com:tj-django/django-clone.git\n$ make default-user\n$ make run\n```\n\nSpins up a django server running the demo app.\n\nVisit http://127.0.0.1:8000\n\n## Found a Bug?\n\nTo file a bug or submit a patch, please head over to [django-clone on github](https://github.com/tj-django/django-clone/issues).\n\nIf you feel generous and want to show some extra appreciation:\n\nSupport me with a :star:\n\n[![Buy me a coffee][buymeacoffee-shield]][buymeacoffee]\n\n[buymeacoffee]: https://www.buymeacoffee.com/jackton1\n\n[buymeacoffee-shield]: https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\n\n## Contributors ✨\n\nThanks goes to these wonderful people:\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\"><a href=\"http://gerritneven.nl\"><img src=\"https://avatars1.githubusercontent.com/u/2500973?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gerben Neven</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Agerbyzation\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=gerbyzation\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=gerbyzation\" title=\"Code\">💻</a></td>\n      <td align=\"center\"><a href=\"http://sebastian-kindt.com\"><img src=\"https://avatars1.githubusercontent.com/u/2536081?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sebastian Kapunkt</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=SebastianKapunkt\" title=\"Code\">💻</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3ASebastianKapunkt\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=SebastianKapunkt\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\"><a href=\"https://github.com/andresp99999\"><img src=\"https://avatars0.githubusercontent.com/u/1036725?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Andrés Portillo</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Aandresp99999\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\"><a href=\"https://renovate.whitesourcesoftware.com\"><img src=\"https://avatars0.githubusercontent.com/u/25180681?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>WhiteSource Renovate</b></sub></a><br /><a href=\"#maintenance-renovate-bot\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\"><a href=\"https://github.com/yuekui\"><img src=\"https://avatars2.githubusercontent.com/u/2561450?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yuekui</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=yuekui\" title=\"Code\">💻</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Ayuekui\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=yuekui\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\"><a href=\"https://github.com/diesieben07\"><img src=\"https://avatars.githubusercontent.com/u/1915984?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Take Weiland</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=diesieben07\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Adiesieben07\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=diesieben07\" title=\"Code\">💻</a></td>\n      <td align=\"center\"><a href=\"https://github.com/ptrck\"><img src=\"https://avatars.githubusercontent.com/u/1259703?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Patrick</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Aptrck\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=ptrck\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\"><a href=\"https://github.com/Akollek\"><img src=\"https://avatars.githubusercontent.com/u/5873158?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amiel Kollek</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=Akollek\" title=\"Code\">💻</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3AAkollek\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=Akollek\" title=\"Tests\">⚠️</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tj-django/django-clone.git",
    "keywords": "django,django-clone,django clone,django object clone,clone-django,model cloning,django instance duplication,django duplication",
    "license": "MIT/Apache-2.0",
    "maintainer": "Tonye Jack",
    "maintainer_email": "jtonye@ymail.com",
    "name": "django-clone",
    "package_url": "https://pypi.org/project/django-clone/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-clone/",
    "project_urls": {
      "Homepage": "https://github.com/tj-django/django-clone.git"
    },
    "release_url": "https://pypi.org/project/django-clone/3.0.6/",
    "requires_dist": [
      "django",
      "future (>=0.17.1)",
      "conditional (>=1.3)",
      "six",
      "bump2version ; extra == 'deploy'",
      "readme-renderer[md] ; extra == 'deploy'",
      "changes ; extra == 'deploy'",
      "git-changelog ; extra == 'deploy'",
      "twine (==4.0.1) ; extra == 'deploy'",
      "pip-tools ; extra == 'development'",
      "check-manifest ; extra == 'development'",
      "django ; extra == 'development'",
      "future (>=0.17.1) ; extra == 'development'",
      "conditional (>=1.3) ; extra == 'development'",
      "six ; extra == 'development'",
      "tox ; extra == 'development'",
      "tox-gh-actions ; extra == 'development'",
      "pluggy (>=0.7) ; extra == 'development'",
      "mock ; extra == 'development'",
      "unittest-xml-reporting ; extra == 'development'",
      "codacy-coverage ; extra == 'development'",
      "django-migration-fixer ; extra == 'development'",
      "flake8 ; extra == 'development'",
      "yamllint ; extra == 'development'",
      "isort ; extra == 'development'",
      "black ; extra == 'development'",
      "bump2version ; extra == 'development'",
      "readme-renderer[md] ; extra == 'development'",
      "changes ; extra == 'development'",
      "git-changelog ; extra == 'development'",
      "twine (==4.0.1) ; extra == 'development'",
      "flake8 ; extra == 'lint'",
      "yamllint ; extra == 'lint'",
      "isort ; extra == 'lint'",
      "black ; extra == 'lint'",
      "tox ; extra == 'test'",
      "tox-gh-actions ; extra == 'test'",
      "pluggy (>=0.7) ; extra == 'test'",
      "mock ; extra == 'test'",
      "unittest-xml-reporting ; extra == 'test'",
      "codacy-coverage ; extra == 'test'",
      "django-migration-fixer ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Create a clone of a django model instance.",
    "version": "3.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17402619,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c4efad4743d966bc65603ff0748b643db86107d39d22c2f488d890aabbdf5f4",
        "md5": "8dbd33ad38bf3d630e5dcf381f840b55",
        "sha256": "0d12b4d976ed9be5ac19108f8551f017f79042b6676307c92fb8cfc530df861a"
      },
      "downloads": -1,
      "filename": "django_clone-3.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dbd33ad38bf3d630e5dcf381f840b55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22961,
      "upload_time": "2022-09-09T17:48:02",
      "upload_time_iso_8601": "2022-09-09T17:48:02.655097Z",
      "url": "https://files.pythonhosted.org/packages/8c/4e/fad4743d966bc65603ff0748b643db86107d39d22c2f488d890aabbdf5f4/django_clone-3.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac502f063a451c00f386912027c60b9ad9fa0cfd5d6cbb4dc0f0b749791d18e5",
        "md5": "a88356cd9655f20f738ebddabe7cd50e",
        "sha256": "f3bc1e06799a82770da6c8fd6abcdbf1fd41390e7ea14a0cc5a8f12c0765d36e"
      },
      "downloads": -1,
      "filename": "django-clone-3.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a88356cd9655f20f738ebddabe7cd50e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 36512,
      "upload_time": "2022-09-09T17:48:04",
      "upload_time_iso_8601": "2022-09-09T17:48:04.684143Z",
      "url": "https://files.pythonhosted.org/packages/ac/50/2f063a451c00f386912027c60b9ad9fa0cfd5d6cbb4dc0f0b749791d18e5/django-clone-3.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}