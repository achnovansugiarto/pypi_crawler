{
  "info": {
    "author": "Tonye Jack",
    "author_email": "jtonye@ymail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-clone \n------------\n\nCreate copies of a model instance with explicit control on how the instance should be duplicated (limiting fields or related objects) copied and unique field detection. \n\n\n|    PyPI                        |  Python   | Django  |  Downloads  |  Dependencies  |\n|:------------------------------:|:---------:|:-------:|:-----------:|:-------------:|\n| [![PyPI version](https://badge.fury.io/py/django-clone.svg)](https://badge.fury.io/py/django-clone) | [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django_clone.svg)](https://pypi.org/project/django-clone) | [![PyPI - Django Version](https://img.shields.io/pypi/djversions/django_clone.svg)](https://docs.djangoproject.com/en/3.0/releases/) | [![Downloads](https://pepy.tech/badge/django-clone)](https://pepy.tech/project/django-clone) | [![Updates](https://pyup.io/repos/github/tj-django/django-clone/shield.svg)](https://pyup.io/repos/github/tj-django/django-clone/) |\n\n\n\n| Test | Vulnerabilities | Coverage | Code Quality  | Contributors  |  Code Style  |\n|:----:|:---------------:|:--------:|:-------------:|:-------------:| :------------:|\n| [![Test](https://github.com/tj-django/django-clone/workflows/Test/badge.svg)](https://github.com/tj-django/django-clone/actions?query=workflow%3ATest) | [![Known Vulnerabilities](https://snyk.io/test/github/tj-django/django-clone/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/tj-django/django-clone?targetFile=requirements.txt) | [![Codacy Badge](https://app.codacy.com/project/badge/Coverage/b33dd02dbb034d7fa9886a99f5383ea6)](https://www.codacy.com/gh/tj-django/django-clone?utm_source=github.com&utm_medium=referral&utm_content=tj-django/django-clone&utm_campaign=Badge_Coverage) <br/> [![codecov](https://codecov.io/gh/tj-django/django-clone/branch/master/graph/badge.svg?token=2NE21Oe50Q)](https://codecov.io/gh/tj-django/django-clone)| [![Codacy Badge](https://app.codacy.com/project/badge/Grade/b33dd02dbb034d7fa9886a99f5383ea6)](https://www.codacy.com/gh/tj-django/django-clone?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=tj-django/django-clone&amp;utm_campaign=Badge_Grade) | [![All Contributors](https://img.shields.io/badge/all_contributors-5-orange.svg?style=flat-square)](#contributors) | [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) \n\n\n## Table of contents\n\n-   [Installation](#Installation)\n\n-   [Usage](#Usage)\n    -   [Duplicating a Model Instance](#duplicating-a-model-instance)\n    -   [Using the CloneMixin](#clonemixin-attributes)\n    -   [Creating clones without subclassing `CloneMixin`](#creating-clones-without-subclassing-clonemixin)\n    -   [Duplicating Models from Django Admin view](#duplicating-models-from-django-admin-view)\n\n-   [CHANGELOG](./CHANGELOG.md)\n\n## Installation\n\nRun \n```bash script\npip install django-clone\n```\n\n\n## Usage\n\n#### Subclassing the `CloneModel`\n\n```python\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\nfrom model_clone import CloneModel\n\nclass TestModel(CloneModel):\n    title = models.CharField(max_length=200)\n    tags =  models.ManyToManyField('Tags')\n\n    _clone_m2m_fields = ['tags']\n\n\nclass Tags(models.Model):  #  To enable cloning tags directly use `CloneModel` as shown above.\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return _(self.name)\n```\n\n#### Using the `CloneMixin`\n\n```python\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\nfrom model_clone import CloneMixin\n\nclass TestModel(CloneMixin, models.Model):\n    title = models.CharField(max_length=200)\n    tags =  models.ManyToManyField('Tags')\n\n    _clone_m2m_fields = ['tags']\n\n\nclass Tags(models.Model):  #  To enable cloning tags directly use `CloneMixin` as shown above.\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return _(self.name)\n```\n\n### Duplicating a model instance\n\n```python\nIn [1]: test_obj = TestModel.objects.create(title='New')\n\nIn [2]: test_obj.pk\nOut[2]: 1\n\nIn [3]: test_obj.title\nOut[3]: 'New'\n\nIn [4]: test_obj.tags.create(name='men')\n\nIn [4]: test_obj.tags.create(name='women')\n\nIn [5]: test_obj.tags.all()\nOut[5]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [6]: test_obj_clone = test_obj.make_clone()\n\nIn [7]: test_obj_clone.pk\nOut[7]: 2\n\nIn [8]: test_obj_clone.title\nOut[8]: 'New copy 1'\n\nIn [9]: test_obj_clone.tags.all()\nOut[9]: <QuerySet [<Tag: men>, <Tag: women>]>\n```\n\n#### Bulk cloning a model\n\n```python\nIn [1]: test_obj = TestModel.objects.create(title='New')\n\nIn [2]: test_obj.pk\nOut[2]: 1\n\nIn [3]: test_obj.title\nOut[3]: 'New'\n\nIn [4]: test_obj.tags.create(name='men')\n\nIn [4]: test_obj.tags.create(name='women')\n\nIn [5]: test_obj.tags.all()\nOut[5]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [6]: test_obj_clones = test_obj.bulk_clone(1000)\n\nIn [7]: len(test_obj_clones)\nOut[7]: 1000\n\nIn [8]: test_obj_clone = test_obj_clones[0]\n\nIn [9]: test_obj_clone.pk\nOut[9]: 2\n\nIn [10]: test_obj_clone.title\nOut[10]: 'New copy 1'\n\nIn [11]: test_obj_clone.tags.all()\nOut[11]: <QuerySet [<Tag: men>, <Tag: women>]>\n```\n\n### CloneMixin attributes\n\n#### Explicit\n\n|    Field Names        |  Description |\n|:------------------------------:|:------------:|\n| `_clone_fields` | Restrict the list of fields to copy from the instance (By default: Copies all fields excluding auto-created/non editable model fields) |\n`_clone_m2m_fields` | Restricted Many to many fields (i.e Test.tags) |\n`_clone_m2o_or_o2m_fields` | Restricted Many to One/One to Many fields | \n`_clone_o2o_fields` | Restricted One to One fields |\n\n#### Implicit\n\n|  Field Names (include all except these fields.) | Description |\n|:--------------------:|:-----------:|\n| `_clone_excluded_fields` | Excluded model fields. |\n`_clone_excluded_m2m_fields` | Excluded many to many fields. |\n`_clone_excluded_m2o_or_o2m_fields` |  Excluded Many to One/One to Many fields. |\n`_clone_excluded_o2o_fields` | Excluded one to one fields. |\n\n\n> :warning: NOTE: Ensure to either set `_clone_excluded_*` or `_clone_*`. Using both would raise errors. \n\n### Creating clones without subclassing `CloneMixin`.\n\n```python\n\nIn [1]: from model_clone.utils import create_copy_of_instance\n\nIn [2]: test_obj = TestModel.objects.create(title='New')\n\nIn [3]: test_obj.pk\nOut[3]: 1\n\nIn [4]: test_obj.title\nOut[4]: 'New'\n\nIn [5]: test_obj.tags.create(name='men')\n\nIn [6]: test_obj.tags.create(name='women')\n\nIn [7]: test_obj.tags.all()\nOut[7]: <QuerySet [<Tag: men>, <Tag: women>]>\n\nIn [8]: test_obj_clone = create_copy_of_instance(test_obj, attrs={'title': 'Updated title'})\n\nIn [9]: test_obj_clone.pk\nOut[9]: 2\n\nIn [10]: test_obj_clone.title\nOut[10]: 'Updated title'\n\nIn [11]: test_obj_clone.tags.all()\nOut[11]: <QuerySet []>\n```\n\n> :warning: NOTE:\n> - This method won't copy over related objects like Many to Many/One to Many relationships. \n> - Ensure that required fields skipped from being cloned are passed in using the `attrs` dictionary.\n\n### Duplicating Models from Django Admin view.\n\nChange\n\n```python\nfrom django.contrib import admin\nfrom django.contrib.admin import ModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(ModelAdmin):\n    pass\n```\n\nto\n\n```python\nfrom model_clone import CloneModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(CloneModelAdmin):\n    pass\n```\n\n#### List View\n\n![Screenshot](Duplicate-action.png)\n\n#### Change View\n\n![Screenshot](Duplicate-button.png)\n\n### CloneModelAdmin class attributes\n\n```python\n\nfrom model_clone import CloneModelAdmin\n\n@admin.register(TestModel)\nclass TestModelAdmin(CloneModelAdmin):\n    # Enables/Disables the Duplicate action in the List view (Defaults to True)\n    include_duplicate_action = True\n    # Enables/Disables the Duplicate action in the Change view (Defaults to True)\n    include_duplicate_object_link = True\n```\n\n\n> :warning: NOTE: Ensure that `model_clone` is placed before `django.contrib.admin`\n\n```python\nINSTALLED_APPS = [\n    'model_clone',\n    'django.contrib.admin',\n    '...',\n]\n```\n\n## Found a Bug?\nTo file a bug or submit a patch, please head over to [django-clone on github](https://github.com/jackton1/django-clone/issues).\n\n\n## Contributors ✨\n\nThanks goes to these wonderful people:\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://gerritneven.nl\"><img src=\"https://avatars1.githubusercontent.com/u/2500973?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gerben Neven</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Agerbyzation\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=gerbyzation\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=gerbyzation\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://sebastian-kindt.com\"><img src=\"https://avatars1.githubusercontent.com/u/2536081?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sebastian Kapunkt</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=SebastianKapunkt\" title=\"Code\">💻</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3ASebastianKapunkt\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=SebastianKapunkt\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/andresp99999\"><img src=\"https://avatars0.githubusercontent.com/u/1036725?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Andrés Portillo</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Aandresp99999\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://renovate.whitesourcesoftware.com\"><img src=\"https://avatars0.githubusercontent.com/u/25180681?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>WhiteSource Renovate</b></sub></a><br /><a href=\"#maintenance-renovate-bot\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/yuekui\"><img src=\"https://avatars2.githubusercontent.com/u/2561450?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yuekui</b></sub></a><br /><a href=\"https://github.com/tj-django/django-clone/commits?author=yuekui\" title=\"Code\">💻</a> <a href=\"https://github.com/tj-django/django-clone/issues?q=author%3Ayuekui\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/tj-django/django-clone/commits?author=yuekui\" title=\"Tests\">⚠️</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tj-django/django-clone.git",
    "keywords": "django,django-clone,django clone,django object clone,clone-django,model cloning,django instance duplication,django duplication",
    "license": "MIT/Apache-2.0",
    "maintainer": "Tonye Jack",
    "maintainer_email": "jtonye@ymail.com",
    "name": "django-clone",
    "package_url": "https://pypi.org/project/django-clone/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-clone/",
    "project_urls": {
      "Homepage": "https://github.com/tj-django/django-clone.git"
    },
    "release_url": "https://pypi.org/project/django-clone/2.0.1/",
    "requires_dist": [
      "future (>=0.17.1)",
      "conditional (>=1.3)",
      "six",
      "bump2version ; extra == 'deploy'",
      "readme-renderer[md] ; extra == 'deploy'",
      "changes ; extra == 'deploy'",
      "git-changelog ; extra == 'deploy'",
      "twine ; extra == 'deploy'",
      "Django (>=1.11.18) ; extra == 'development'",
      "pip-tools ; extra == 'development'",
      "check-manifest ; extra == 'development'",
      "future (>=0.17.1) ; extra == 'development'",
      "conditional (>=1.3) ; extra == 'development'",
      "six ; extra == 'development'",
      "tox ; extra == 'development'",
      "tox-gh-actions ; extra == 'development'",
      "pluggy (>=0.7) ; extra == 'development'",
      "mock ; extra == 'development'",
      "unittest-xml-reporting ; extra == 'development'",
      "codacy-coverage ; extra == 'development'",
      "flake8 ; extra == 'development'",
      "yamllint ; extra == 'development'",
      "isort ; extra == 'development'",
      "black ; (python_version >= \"3.6\") and extra == 'development'",
      "flake8 ; extra == 'lint'",
      "yamllint ; extra == 'lint'",
      "isort ; extra == 'lint'",
      "black ; (python_version >= \"3.6\") and extra == 'lint'",
      "tox ; extra == 'test'",
      "tox-gh-actions ; extra == 'test'",
      "pluggy (>=0.7) ; extra == 'test'",
      "mock ; extra == 'test'",
      "unittest-xml-reporting ; extra == 'test'",
      "codacy-coverage ; extra == 'test'"
    ],
    "requires_python": ">=2.6",
    "summary": "Create a clone of a django model instance.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17402619,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1f8c9d43c1109cdaaf4adead5d04869e48d42406a2a0061971fcbface9173ea",
        "md5": "ffaac98524f306f49b87ad238384b886",
        "sha256": "89392dfd267e794f52032796d5820976b3ac015e2825b77eaf30d10354de48dc"
      },
      "downloads": -1,
      "filename": "django_clone-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffaac98524f306f49b87ad238384b886",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.6",
      "size": 16154,
      "upload_time": "2021-03-24T16:55:40",
      "upload_time_iso_8601": "2021-03-24T16:55:40.991823Z",
      "url": "https://files.pythonhosted.org/packages/e1/f8/c9d43c1109cdaaf4adead5d04869e48d42406a2a0061971fcbface9173ea/django_clone-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8d5dc8ff9f608cce625458074598babd765c6af067c5e373bd42328e0400f30",
        "md5": "6c994400c4fc4fd36a3354ad21430b63",
        "sha256": "f6cb070ccb21bdd9910f69df4b56f688018afb36c0fa413f9181ae7957a01f42"
      },
      "downloads": -1,
      "filename": "django-clone-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c994400c4fc4fd36a3354ad21430b63",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.6",
      "size": 21084,
      "upload_time": "2021-03-24T16:55:42",
      "upload_time_iso_8601": "2021-03-24T16:55:42.534428Z",
      "url": "https://files.pythonhosted.org/packages/e8/d5/dc8ff9f608cce625458074598babd765c6af067c5e373bd42328e0400f30/django-clone-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}