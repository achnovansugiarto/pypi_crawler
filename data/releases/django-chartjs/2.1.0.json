{
  "info": {
    "author": "Rémy Hubscher",
    "author_email": "hubscher.remy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Django Chartjs\n##############\n\nDjango Chartjs lets you manage charts in your Django application.\n\n.. image:: https://travis-ci.org/peopledoc/django-chartjs.svg?branch=master\n   :target: https://travis-ci.org/peopledoc/django-chartjs\n.. image:: https://coveralls.io/repos/peopledoc/django-chartjs/badge.png?branch=master&style=flat\n   :target: https://coveralls.io/r/peopledoc/django-chartjs?branch=master\n.. image:: https://img.shields.io/pypi/v/django-chartjs.svg\n   :target: https://pypi.python.org/pypi/django-chartjs/\n\n\nThis is compatible with Chart.js and Highcharts JS libraries.\n\nUsing a set of predefined Class Based Views you are able to get\nstarted after writing just your SQL query.\n\n* Authors: Rémy Hubscher and `contributors\n  <https://github.com/peopledoc/django-chartjs/graphs/contributors>`_\n* Licence: BSD\n* Compatibility: Django 1.10, 2.2 and 3.0, python3.6 up to python3.8\n* Project URL: https://github.com/peopledoc/django-chartjs\n\n\nGetting Started\n===============\n\nInstall django-chartjs::\n\n    pip install django-chartjs\n\n\nAdd it to your ``INSTALLED_APPS`` settings::\n\n    INSTALLED_APPS = (\n        '...',\n        'chartjs',\n    )\n\n\nUsing it\n========\n\nA simple Line Chart example.\n\n1. Create the HTML file\n+++++++++++++++++++++++\n\n.. code-block:: html\n\n    {% load staticfiles %}\n    <html>\n        <head>\n            <title>django-chartjs line chart demo</title>\n            <!--[if lte IE 8]>\n                <script src=\"{% static 'js/excanvas.js' %}\"></script>\n            <![endif]-->\n        </head>\n        <body>\n            <h1>Some Line Charts loaded in Ajax!</h1>\n\n            <canvas id=\"myChart\" width=\"500\" height=\"400\"></canvas>\n\n            <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.10.0.min.js\"></script>\n            <script type=\"text/javascript\" src=\"{% static 'js/Chart.min.js' %}\"></script>\n            <script type=\"text/javascript\">\n                $.get('{% url \"line_chart_json\" %}', function(data) {\n                    var ctx = $(\"#myChart\").get(0).getContext(\"2d\");\n                    new Chart(ctx, {\n                        type: 'line', data: data\n                    });\n                });\n            </script>\n        </body>\n    </html>\n\n\n2. Create the view with labels and data definition\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\n.. code-block:: python\n\n    from django.views.generic import TemplateView\n    from chartjs.views.lines import BaseLineChartView\n\n\n    class LineChartJSONView(BaseLineChartView):\n        def get_labels(self):\n            \"\"\"Return 7 labels for the x-axis.\"\"\"\n            return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"]\n\n        def get_providers(self):\n            \"\"\"Return names of datasets.\"\"\"\n            return [\"Central\", \"Eastside\", \"Westside\"]\n\n        def get_data(self):\n            \"\"\"Return 3 datasets to plot.\"\"\"\n\n            return [[75, 44, 92, 11, 44, 95, 35],\n                    [41, 92, 18, 3, 73, 87, 92],\n                    [87, 21, 94, 3, 90, 13, 65]]\n\n\n    line_chart = TemplateView.as_view(template_name='line_chart.html')\n    line_chart_json = LineChartJSONView.as_view()\n\n\n3. Update urls.py with the new urls for TemplateView and AJAX call 'line_chart_json' as in chart.html\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n.. code-block:: python\n\n    from .views import line_chart, line_chart_json\n\n    urlpatterns = [\n      '...',\n      path('chart', line_chart, name='line_chart'),\n      path('chartJSON', line_chart_json, name='line_chart_json'),\n    ]\n\n\n4. Get a Chart.js Line Chart\n++++++++++++++++++++++++++++\n\n.. image:: https://raw.github.com/peopledoc/django-chartjs/master/docs/_static/django-chartjs.png\n\n\nIt is that simple!\n\nFor other examples including a HighCharts line chart, don't hesitate to look at the demo project.\n\nAlso, feel free to contribute your demo!\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peopledoc/django-chartjs",
    "keywords": "django chart chartjs highchart ajax class based views",
    "license": "BSD Licence",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-chartjs",
    "package_url": "https://pypi.org/project/django-chartjs/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-chartjs/",
    "project_urls": {
      "Homepage": "https://github.com/peopledoc/django-chartjs"
    },
    "release_url": "https://pypi.org/project/django-chartjs/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Chart.js and Hightchart ajax views",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12824723,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e06f5f2365531a7a144e63b30abea5dc7a3ceffbba8b61b61df54477c30a52e",
        "md5": "47b746973ed49ca7b3549ae790b3df5e",
        "sha256": "5f08dff93501e57c8d92a1617e8494fe5861728b3bd5050d15224fa9d5967090"
      },
      "downloads": -1,
      "filename": "django_chartjs-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47b746973ed49ca7b3549ae790b3df5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 598417,
      "upload_time": "2020-05-06T13:17:45",
      "upload_time_iso_8601": "2020-05-06T13:17:45.598734Z",
      "url": "https://files.pythonhosted.org/packages/3e/06/f5f2365531a7a144e63b30abea5dc7a3ceffbba8b61b61df54477c30a52e/django_chartjs-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "204a58cfc044885ed1a91eda7986da80dbd06273070da3f4251ef62918ba9f71",
        "md5": "57770c86850d80801511c8e529190761",
        "sha256": "b6cd670244a8cec3234492cf8bad969379b8217d6543f1bed96c4b97a1e69967"
      },
      "downloads": -1,
      "filename": "django-chartjs-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "57770c86850d80801511c8e529190761",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 578228,
      "upload_time": "2020-05-06T13:17:48",
      "upload_time_iso_8601": "2020-05-06T13:17:48.057726Z",
      "url": "https://files.pythonhosted.org/packages/20/4a/58cfc044885ed1a91eda7986da80dbd06273070da3f4251ef62918ba9f71/django-chartjs-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}