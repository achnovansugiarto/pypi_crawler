{
  "info": {
    "author": "Andreas Dedner",
    "author_email": "a.s.dedner@warwick.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3"
    ],
    "description": "Preparing the Sources\n=========================\n\nAdditional to the software mentioned in README you'll need the\nfollowing programs installed on your system:\n\n  cmake >= 3.13.3\n\nGetting started\n---------------\n\nIf these preliminaries are met, you should run\n\n  dunecontrol all\n\nwhich will find all installed dune modules as well as all dune modules\n(not installed) which sources reside in a subdirectory of the current\ndirectory. Note that if dune is not installed properly you will either\nhave to add the directory where the dunecontrol script resides (probably\n./dune-common/bin) to your path or specify the relative path of the script.\n\nMost probably you'll have to provide additional information to dunecontrol\n(e. g. compilers, configure options) and/or make options.\n\nThe most convenient way is to use options files in this case. The files\ndefine four variables:\n\nCMAKE_FLAGS      flags passed to cmake (durin configure)\nMAKE_FLAGS       flags passed to make\n\nAn example options file might look like this:\n\n#use this options to autogen, configure and make if no other options are given\nCMAKE_FLAGS=\" \\\n-DCMAKE_CXX_COMPILER=g++-4.9 \\\n-DCMAKE_CXX_FLAGS='-Wall -pedantic' \\\n-DCMAKE_INSTALL_PREFIX=/install/path\" #Force g++-4.9 and set compiler flags\nMAKE_FLAGS=install #Per default run make install instead of simply make\n\nIf you save this information into example.opts you can pass the opts file to\ndunecontrol via the --opts option, e. g.\n\n  dunecontrol --opts=example.opts all\n\nMore info\n---------\n\nSee\n\n     dunecontrol --help\n\nfor further options.\n\n\nThe full build-system is described in the dune-common/doc/buildsystem (Git version) or under share/doc/dune-common/buildsystem if you installed DUNE!\n\n\ngit-92eb088ad89c9ae64754e3ace968e1ece2dbbec5",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.dune-project.org/dune-fem/dune-vem",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dune-vem",
    "package_url": "https://pypi.org/project/dune-vem/",
    "platform": null,
    "project_url": "https://pypi.org/project/dune-vem/",
    "project_urls": {
      "Homepage": "https://gitlab.dune-project.org/dune-fem/dune-vem"
    },
    "release_url": "https://pypi.org/project/dune-vem/2.9.0/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Implementation of a number of virtual element spaces and bilinear forms",
    "version": "2.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17442007,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "608077404a16fc73de76001219cf78b12df9ddcaf70224c670f1a181dcb1f1e7",
        "md5": "e62cdc35e257cfb0a192ee67574820da",
        "sha256": "6a6db41a509e0f9e40d25ba9e2cd20f6a7b89a0ac2021ffedfb3b3701d2c88a8"
      },
      "downloads": -1,
      "filename": "dune-vem-2.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e62cdc35e257cfb0a192ee67574820da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 1518410,
      "upload_time": "2022-11-07T01:09:14",
      "upload_time_iso_8601": "2022-11-07T01:09:14.051912Z",
      "url": "https://files.pythonhosted.org/packages/60/80/77404a16fc73de76001219cf78b12df9ddcaf70224c670f1a181dcb1f1e7/dune-vem-2.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}