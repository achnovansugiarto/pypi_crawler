{
  "info": {
    "author": "Paul Festor",
    "author_email": "paul.festor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Matrix MDP\nEasily generate an MDP from transition and reward matricies.\n\n## Installation\nAssuming you are in the root directory of the project, run the following command:\n```bash\npip install .\n```\n\n## Usage\n```python\nimport gymnasium as gym\nimport matrix_mdp\nenv = gym.make('matrix_mdp/MatrixMDP-v0')\n```\n\n## Environment documentation\n\n### Description\n\nA flexible environment to have a gym API for discrete MDPs with `N_s` states and `N_a` actions given:\n - A vector of initial state distribution P_0(S)\n - A transition probability matrix P(S' | S, A)\n - A reward vector R(S, A)\n\n### Action Space\n\nThe action is a `ndarray` with shape `(1,)` representing the index of the action to execute.\n\n### Observation Space\n\nThe observation is a `ndarray` with shape `(1,)` representing index of the state the agent is in.\n\n### Rewards\n\nThe reward function is defined according to the reward matrix given at the creation of the environment.\n\n### Starting State\n\nThe starting state is a random state sampled from $P_0$.\n\n### Episode Truncation\n\nThe episode truncates when a terminal state is reached.\nTerminal states are inferred from the transition probability matrix as\n$\\sum_{s' \\in S} \\sum_{s \\in S} \\sum_{a \\in A} P(s' | s, a) = 0$\n\n### Arguments\n\n- `p_Ã `: `ndarray` of shape `(n_states, )` representing the initial state probability distribution.\n- `p`: `ndarray` of shape `(n_states, n_states, n_actions)` representing the transition dynamics $P(S' | S, A)$.\n- `r`: `ndarray` of shape `(n_states, n_actions)` representing the reward matrix.\n\n```python\nimport gymnasium as gym\nimport matrix_mdp\n\ngym.make('MatrixMDP-v0', p_0=p_0, p=p, r=r)\n```\n\n### Version History\n\n* `v0`: Initial versions release\n\n## Acknowledgements\n\nThanks to [Will Dudley](https://github.com/WillDudley) for his help on learning how to put a Python package together/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Paul-543NA/matrix-mdp-gym",
    "keywords": "Reinforcement-Learning Reinforcement-Learning-Environment Gym-Environment Markov-Decision-Processes Gym OpenAI-Gym Gymnasium",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-mdp-gym",
    "package_url": "https://pypi.org/project/matrix-mdp-gym/",
    "platform": null,
    "project_url": "https://pypi.org/project/matrix-mdp-gym/",
    "project_urls": {
      "Homepage": "https://github.com/Paul-543NA/matrix-mdp-gym"
    },
    "release_url": "https://pypi.org/project/matrix-mdp-gym/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An OpenAI gym / Gymnasium environment to seamlessly create discrete MDPs from matrices.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16664774,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5d90ed6e9574190d5f5453bbdd4b47f00fb94937c35d3404ef687303d1659d7",
        "md5": "aea275c19ebaa986c1df82a723e45bff",
        "sha256": "d2d679008d108c9def094450b7eecb46949741904d98ccb220a520b30e3dda50"
      },
      "downloads": -1,
      "filename": "matrix-mdp-gym-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "aea275c19ebaa986c1df82a723e45bff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5136,
      "upload_time": "2022-10-22T16:45:22",
      "upload_time_iso_8601": "2022-10-22T16:45:22.422671Z",
      "url": "https://files.pythonhosted.org/packages/c5/d9/0ed6e9574190d5f5453bbdd4b47f00fb94937c35d3404ef687303d1659d7/matrix-mdp-gym-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}