{
  "info": {
    "author": "LevIT SCS",
    "author_email": "info@levit.be",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "DRF-Base64\n==========\n\n**DRF-Base64** provides a set of serializers to handle Bas64-encoded\nfiles.\n\nCompatibility Matrix\n--------------------\n\n**DRF-Base64** is compatible with the following matrix\n\n+-------------------+---------------+---------------+---------------+---------------+\n|                   | Py 2.7        | Py 3.5        | Py 3.6        | Py 3.7        |\n+===================+===============+===============+===============+===============+\n| **Django 1.8**    | DRF 3.5-3.6   | DRF 3.5-3.6   | DRF 3.5-3.6   | DRF 3.5-3.6   |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 1.9**    | DRF 3.5-3.6   | DRF 3.5-3.6   | DRF 3.5-3.6   | DRF 3.5-3.6   |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 1.10**   | DRF 3.5-3.7   | DRF 3.5-3.7   | DRF 3.5-3.7   | DRF 3.5-3.7   |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 1.11**   | DRF 3.5-3.7   | DRF 3.5-3.7   | DRF 3.5-3.7   | DRF 3.5-3.7   |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 2.0**    | No            | DRF 3.7+      | DRF 3.7+      | DRF 3.7+      |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 2.1**    | No            | DRF 3.7+      | DRF 3.7+      | DRF 3.7+      |\n+-------------------+---------------+---------------+---------------+---------------+\n| **Django 2.2**    | No            | DRF 3.7+      | DRF 3.7+      | DRF 3.7+      |\n+-------------------+---------------+---------------+---------------+---------------+\n\nInstallation\n------------\n\n**DRF-Base64** is compatible with python 2.7 and 3.5+ as well as Django\n1.8+ and DRF 3.5+\n\nWith pip\n~~~~~~~~\n\n``pip install drf-base64``\n\nFrom source\n~~~~~~~~~~~\n\nWithin the source directory:\n\n``python setup.py install``\n\nField Serializers\n-----------------\n\n**DRF-Base64** provides a ``Base64FileField`` and a ``Base64ImageField``\nvery similar to DRF's ``FileField`` and ``ImageField`` with the added\nfunctionality of accepting base64-encoded file strings as input. If\nthose serialiers receive an url (ie: when updating a record containing a\nfile without modifying that said file), it will leave the existing value\nuntouched.\n\nExample usage:\n\n::\n\n    from rest_framework import serializers\n    from base64.fields import Base64ImageField\n\n    from .models import Product\n\n\n    class ProductSerializer(serializers.ModelSerializer):\n\n        picture = Base64ImageField(required=False)\n\n        class Meta:\n            model = Product\n    ...\n\nModel Serializers\n-----------------\n\n**DRF-Base64** also provides a ``ModelSerializer`` and an\n``HyperlinkedModelSerializer`` also similar to DRF's own\n``ModelSerializer`` and ``HyperlinkedModelSerializer`` with the added\nfunctionality of mapping ``django.db.models.FileField``'s to\n``Bas64FileField``'s and ``django.db.models.ImageField``'s to\n``Base64ImageField``'s.\n\nExample usage:\n\n::\n\n    from drf_base64.serializers import ModelSerializer\n\n    from .models import Product\n\n\n    class ProductSerializer(ModelSerializer):\n\n        class Meta:\n            model = Product\n    ...\n\nMixins\n------\n\n``drf_base64.fields.Base64FieldMixin``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you'd like to enable base64 uploading of file for other field types\nthan ``FileField`` or ``ImageField``, **DRF-Base64** provides\n``Base64FieldMixin`` to let you do just that.\n\n``drf_base64.serializers.Base64ModelSerializerMixin``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you wish to use ``Base64FileField`` and ``Base64ImageField`` as\ndefault for model serializers other than the ones provided,\n**DRF-Base64** also provides ``Base64ModelSerializerMixin`` that you can\napply on any other model serializer as long as they use\n```serializer_field_mapping`` <http://www.django-rest-framework.org/api-guide/serializers/#serializer_field_mapping>`__.\n\n--------------\n\nLicense information available `here <LICENSE.md>`__.\n\nContributors code of conduct is available `here <COC.md>`__. Note that\nthis COC **will** be enforced.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/levit_scs/drf_base64",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf_base64",
    "package_url": "https://pypi.org/project/drf_base64/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf_base64/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/levit_scs/drf_base64"
    },
    "release_url": "https://pypi.org/project/drf_base64/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DRF serializers to handle base64-encoded files",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5385175,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bda6d07fa8530489fa4d3d28015a216c1a2aa1e9139cee8f63e5a82f20e4d87",
        "md5": "8b6afc142b932370fe75444e23a77295",
        "sha256": "af0bcb4072087240618dc4944ddc752936e04dc1006bae053d8c0a472c918119"
      },
      "downloads": -1,
      "filename": "drf_base64-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8b6afc142b932370fe75444e23a77295",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3767,
      "upload_time": "2019-06-11T07:32:06",
      "upload_time_iso_8601": "2019-06-11T07:32:06.277317Z",
      "url": "https://files.pythonhosted.org/packages/8b/da/6d07fa8530489fa4d3d28015a216c1a2aa1e9139cee8f63e5a82f20e4d87/drf_base64-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}