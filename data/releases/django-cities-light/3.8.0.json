{
  "info": {
    "author": "James Pic,Dominick Rivard,Alexey Evseev",
    "author_email": "jamespic@gmail.com, dominick.rivard@gmail.com, myhappydo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://secure.travis-ci.org/jazzband/django-cities-light.png?branch=master\n    :target: http://travis-ci.org/jazzband/django-cities-light\n.. image:: https://pypip.in/d/django-cities-light/badge.png\n    :target: https://crate.io/packages/django-cities-light\n.. image:: https://pypip.in/v/django-cities-light/badge.png\n    :target: https://crate.io/packages/django-cities-light\n.. image:: https://codecov.io/github/jazzband/django-cities-light/coverage.svg?branch=stable/3.x.x\n    :target: https://codecov.io/github/jazzband/django-cities-light?branch=stable/3.x.x\n.. image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: Jazzband\n\ndjango-cities-light -- *Simple django-cities alternative*\n=========================================================\n\nThis add-on provides models and commands to import country, subregion, region/state, and\ncity data in your database.\n\nThe data is pulled from `GeoNames\n<http://www.geonames.org/>`_ and contains cities, subregions, regions/states and countries.\n\nSpatial query support is not required by this application.\n\nThis application is very simple and is useful if you want to make a simple\naddress book for example. If you intend to build a fully featured spatial\ndatabase, you should use\n`django-cities\n<https://github.com/coderholic/django-cities>`_.\n\nRequirements:\n\n- Python >= 3.6\n- Django >= 2.0\n- MySQL or PostgreSQL or SQLite.\n\nYes, for some reason, code that used to work on MySQL (not without pain xD)\ndoes not work anymore. So we're now using django.db.transaction.atomic which\ncomes from Django 1.6 just to support MySQL quacks.\n\nUpgrade\n-------\n\nSee CHANGELOG.\n\nInstallation\n------------\n\nInstall django-cities-light::\n\n    pip install django-cities-light\n\nOr the development version::\n\n    pip install -e git+git@github.com:jazzband/django-cities-light.git#egg=cities_light\n\nAdd `cities_light` to your `INSTALLED_APPS`.\n\nConfigure filters to exclude data you don't want, ie.::\n\n    CITIES_LIGHT_TRANSLATION_LANGUAGES = ['fr', 'en']\n    CITIES_LIGHT_INCLUDE_COUNTRIES = ['FR']\n    CITIES_LIGHT_INCLUDE_CITY_TYPES = ['PPL', 'PPLA', 'PPLA2', 'PPLA3', 'PPLA4', 'PPLC', 'PPLF', 'PPLG', 'PPLL', 'PPLR', 'PPLS', 'STLMT',]\n\nNow, run migrations, it will only create tables for models that are not\ndisabled::\n\n    ./manage.py migrate\n\nData import/update\n------------------\n\nFinally, populate your database with command::\n\n    ./manage.py cities_light\n\nThis command is well documented, consult the help with::\n\n    ./manage.py help cities_light\n\nBy default, update procedure attempts to update all fields, including Country/Region/Subregion/City slugs. But there is an option to keep them intact::\n\n    ./manage.py cities_light --keep-slugs\n\n\nGet more cities\n---------------\n\nThe configuration parameter CITIES_LIGHT_CITY_SOURCES, comes with the default value\nhttp://download.geonames.org/export/dump/cities15000.zip that has cities with a population\nover 15000, if you need to load cities with less population please use another source. For the list\nof available source please check here: http://download.geonames.org/export/dump/readme.txt\n\n\n\nUsing fixtures\n--------------\n\nGeonames.org is updated on daily basis and its full import is quite slow, so\nif you want to import the same data multiple times (for example on different\nservers) it is convenient to use fixtures with the helper management command::\n\n    ./manage.py cities_light_fixtures dump\n    ./manage.py cities_light_fixtures load\n\nTo reduce space, JSON fixtures are compressed with bzip2 and can be fetched\nfrom any HTTP server or local filesystem.\n\nConsult the help with::\n\n    ./manage.py help cities_light_fixtures\n\nDevelopment\n-----------\n\nCreate development virtualenv (you need to have tox installed in your base system)::\n\n    tox -e dev\n    source .tox/dev/bin/activate\n\nThen run the full import::\n\n    test_project/manage.py migrate\n    test_project/manage.py cities_light\n\nThere are several environment variables which affect project settings (like DB_ENGINE and CI), you can find them all in test_project/settings.py.\n\nTo run the test suite you need to have postgresql or mysql installed with passwordless login, or just use sqlite. Otherwise the tests which try to create/drop database will fail.\n\nRunning the full test suite::\n\n    tox\n\nTo run the tests in specific environment use the following command::\n\n    tox -e py37-django31-sqlite\n\nAnd to run one specific test use this one::\n\n    tox -e py37-django31-sqlite -- cities_light/tests/test_form.py::FormTestCase::testCountryFormNameAndContinentAlone\n\nTo run it even faster, you can switch to specific tox virtualenv::\n\n    source .tox/py27-django18-sqlite/bin/activate\n    CI=true test_project/manage.py test cities_light.tests.test_form.FormTestCase.testCountryFormNameAndContinentAlone\n\nIf you want to build the docs, use the following steps::\n\n    source .tox/dev/bin/activate\n    cd docs\n    make html\n\nIf you are ready to send a patch, please read YourLabs guidelines: https://github.com/jazzband/community/blob/master/docs/guidelines.rst\n\nResources\n---------\n\nYou could subscribe to the mailing list ask questions or just be informed of\npackage updates.\n\n- `Git graciously hosted\n  <https://github.com/jazzband/django-cities-light/>`_ by `GitHub\n  <http://github.com>`_,\n- `Documentation graciously hosted\n  <http://django-cities-light.rtfd.org>`_ by `RTFD\n  <http://rtfd.org>`_,\n- `Package graciously hosted\n  <http://pypi.python.org/pypi/django-cities-light/>`_ by `PyPi\n  <http://pypi.python.org/pypi>`_,\n- `Continuous integration graciously hosted\n  <http://travis-ci.org/jazzband/django-cities-light>`_ by `Travis-ci\n  <http://travis-ci.org>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yourlabs/django-cities-light",
    "keywords": "django cities countries postal codes",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cities-light",
    "package_url": "https://pypi.org/project/django-cities-light/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cities-light/",
    "project_urls": {
      "Homepage": "https://github.com/yourlabs/django-cities-light"
    },
    "release_url": "https://pypi.org/project/django-cities-light/3.8.0/",
    "requires_dist": [
      "pytz",
      "unidecode (>=0.04.13)",
      "django-autoslug (>=1.9.8)",
      "progressbar2 (>=3.51.4)"
    ],
    "requires_python": "",
    "summary": "Simple alternative to django-cities",
    "version": "3.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14683973,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5c34b7b33278fcf4269b85cee9b31c00aabac23aaaeb7da7890f66311ebed3d",
        "md5": "433ce3343de312335d80ee997c26514d",
        "sha256": "6c0bb3eb531c2f073ee17007a03150a2a7ff37176d1f1f46213f978d8ab837eb"
      },
      "downloads": -1,
      "filename": "django_cities_light-3.8.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "433ce3343de312335d80ee997c26514d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 46045,
      "upload_time": "2020-10-19T16:10:15",
      "upload_time_iso_8601": "2020-10-19T16:10:15.318903Z",
      "url": "https://files.pythonhosted.org/packages/d5/c3/4b7b33278fcf4269b85cee9b31c00aabac23aaaeb7da7890f66311ebed3d/django_cities_light-3.8.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b8ac0448e8bb489d535062873b8d2b376bfa91a525819d419aad61174457e79",
        "md5": "8b9bbd325151f97b27ce1e8fefec729f",
        "sha256": "e7dad6c0cfa5b75410747172807eef629b27c1be77f018e6288f0069bddcbbac"
      },
      "downloads": -1,
      "filename": "django-cities-light-3.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8b9bbd325151f97b27ce1e8fefec729f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38946,
      "upload_time": "2020-10-19T16:10:17",
      "upload_time_iso_8601": "2020-10-19T16:10:17.210514Z",
      "url": "https://files.pythonhosted.org/packages/8b/8a/c0448e8bb489d535062873b8d2b376bfa91a525819d419aad61174457e79/django-cities-light-3.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}