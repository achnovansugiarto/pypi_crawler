{
  "info": {
    "author": "Yonsm",
    "author_email": "Yonsm@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MiService\nXiaoMi Cloud Service for mi.com\n\n## Install\n```\npip3 install miservice\n```\n\n## Library\n```\nMiService：XiaoMi Cloud Service\n  |\n  |-- MiAccount：Account Srvice\n  |-- MiBaseService：(TODO if needed)\n  |     |\n  |     |-- MiIOService：MiIO Service (sid=xiaomiio)\n  |     |     |\n  |     |     |-- MIoT_xxx：MIoT Service, Based on MiIO\n  |     |\n  |     |-- MiNAService：MiAI Service (sid=micoapi)\n  |     |\n  |     |-- MiAPIService：(TODO)\n  |-- MiIOCommand：MiIO Command Style Interface\n```\n\n## Command Line\n```\nUsage: The following variables must be set:\n           export MI_USER=<username>\n           export MI_PASS=<password>\n           export MI_DID=<deviceId>\n\nGet Props: micli.py <siid[-piid]>[,...]\n           micli.py 1,1-2,1-3,1-4,2-1,2-2,3\nSet Props: micli.py <siid[-piid]=[#]value>[,...]\n           micli.py 2=#60,2-2=#false,3=test\nDo Action: micli.py <siid[-piid]> <arg1|#NA> [...] \n           micli.py 2 #NA\n           micli.py 5 Hello\n           micli.py 5-4 Hello #1\n\nCall MIoT: micli.py <cmd=prop/get|/prop/set|action> <params>\n           micli.py action '{\"did\":\"267090026\",\"siid\":5,\"aiid\":1,\"in\":[\"Hello\"]}'\n\nCall MiIO: micli.py /<uri> <data>\n           micli.py /home/device_list '{\"getVirtualModel\":false,\"getHuamiDevices\":1}'\n\nDevs List: micli.py list [name=full|name_keyword] [getVirtualModel=false|true] [getHuamiDevices=0|1]\n           micli.py list Light true 0\n\nMiIO Spec: micli.py spec [model_keyword|type_urn] [format=text|python|json]\n           micli.py spec\n           micli.py spec speaker\n           micli.py spec xiaomi.wifispeaker.lx04\n           micli.py spec urn:miot-spec-v2:device:speaker:0000A015:xiaomi-lx04:1\n```\n\n## 套路，例子：\n\n`请在 Mac OS 或 Linux 下执行，Windows 下要支持也应该容易但可能需要修改？`\n\n### 1. 先设置账号\n\n```\nexport MI_USER=<username>\nexport MI_PASS=<password>\n```\n\n### 2. 查询自己的设备\n\n```\nmicli.py list\n```\n可以显示自己账号下的设备列表，包含名称、类型、DID、Token 等信息。\n\n### 3. 设置 DID\n\n为了后续操作，请设置 Device ID（来自上面这条命令的结果）。\n\n```\nexport MI_DID=<deviceId>\n```\n\n### 4. 查询设备的接口文档\n\n查询设备的 MIoT 接口能力描述：\n```\nmicli.py spec xiaomi.wifispeaker.lx04\n```\n其中分为属性获取、属性设置、动作调用三种描述。\n\n### 5. 查询音量属性\n\n```\nmicli.py 2-1\n```\n其中 `2` 为 `siid`，`1` 为 `piid`（如果是 `1` 则可以省略），可从 spec 接口描述中查得。\n\n### 6. 设置音量属性\n\n```\nmicli.py 2=#60\n```\n`siid` 和 `piid` 规则同属性查询命令。注意 `#` 号的意思是整数类型，如果不带则默认是文本字符串类型，要根据接口描述文档来确定类型。\n\n### 7. 动作调用：TTS 播报和执行文本\n\n以下命令执行后小爱音箱会播报“您好”：\n```\nmicli.py 5 您好\n```\n其中，5 为 `siid`，此处省略了 `1` 的 `aiid`。\n\n以下命令执行后相当于直接对对音箱说“小爱同学，查询天气”是一个效果：\n```\nmicli.py 5-4 查询天气 #1\n```\n\n其中 `#1` 表示设备语音回应，如果要执行默默关灯（不要音箱回应），可以如下：\n```\nmicli.py 5-4 关灯 #0\n```\n\n### 8. 其它应用\n\n在扩展插件中使用，比如，参考 [ZhiMsg 小爱同学 TTS 播报/执行插件](https://github.com/Yonsm/ZhiMsg)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Yonsm/MiService",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miservice2",
    "package_url": "https://pypi.org/project/miservice2/",
    "platform": "",
    "project_url": "https://pypi.org/project/miservice2/",
    "project_urls": {
      "Homepage": "https://github.com/Yonsm/MiService"
    },
    "release_url": "https://pypi.org/project/miservice2/2021.7.25/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "XiaoMi Cloud Service",
    "version": "2021.7.25",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10999194,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a8fd284a117aa318b8d32412d04b9b85287d77413ce8a089ad3a6a1d99eb399",
        "md5": "16f4f4f79f2ef3e228e3aebc32641ebe",
        "sha256": "2c0890e6bc426e5b7c78b9c21e2741fa1c519c18f1581ca87a7846561cbc17b0"
      },
      "downloads": -1,
      "filename": "miservice2-2021.7.25.tar.gz",
      "has_sig": false,
      "md5_digest": "16f4f4f79f2ef3e228e3aebc32641ebe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11900,
      "upload_time": "2021-07-25T14:55:50",
      "upload_time_iso_8601": "2021-07-25T14:55:50.768081Z",
      "url": "https://files.pythonhosted.org/packages/5a/8f/d284a117aa318b8d32412d04b9b85287d77413ce8a089ad3a6a1d99eb399/miservice2-2021.7.25.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}