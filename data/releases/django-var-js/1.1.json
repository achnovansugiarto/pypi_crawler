{
  "info": {
    "author": "Peveri Martin",
    "author_email": "martinpeveri@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-var-js/README.rst\n======\nVar-js\n======\n\nVar-js is a simple Django application that allows communication \nvariables from the server to the client.\n\nInstalling\n----------\n\npip install django-var-js\n\nRequirements\n-----------\n\nJQuery\n\nQuick start\n-----------\n\n1. Include the var-js URLconf in your project urls.py like this::\n\n\turl(r'^', include('var_js.dj_var_js.urls')),\n\t\n2. In the view.py::\n\t\n\tfrom var_js.views import DjVarJs\n\n\tdef example(request):\n\t\t#Values\n\t\tvariable = \"To JavaScript\"\n\t\tdicc = {'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\n\t\t\n\t\t#Instance of class DjVarJs\n\t\tpyvar = DjVarJs()\n\n\t\t#Set values \n\t\tpyvar.set(\"variable\", variable , request)\n\t\tpyvar.set(\"dicc_django\", dicc, request)\n\n\t\treturn render_to_response('example.html', context_instance=RequestContext(request))\n\n3. In the template::\n\t\n\t<!DOCTYPE html>\n\t<html>\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>\n\t\t\t<script src='{{STATIC_URL}}js/var_js/djvarjs.js'></script>\n\t\t\t<script src='{{STATIC_URL}}js/example/main.js'></script>\n\t\t</head>\n\t\t<body>\n\t\t\t<h1>App Django-var-js</h1>\n\t\t\t<label id=\"key_js\"></label>\n\t\t\t<br>\n\t\t\t<label id=\"dict_js\"></label>\n\t\t<body>\n \t</html>\n\n4. In the file .js::\n\n\tvar valor = DjVarJs.getKey(\"variable\");\n\t$(\"#key_js\").text(valor);\n\n\tvar arr = DjVarJs.getDict(\"dicc_django\");\n\t$(\"#dict_js\").text(\"Clave1: \" + arr['clave1'] + \", Clave2: \" + arr['clave2'] + \", Clave3: \" + arr['clave3']);\n\n5. Visit http://127.0.0.1:8000/example/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mapeveri/django-var-js",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-var-js",
    "package_url": "https://pypi.org/project/django-var-js/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-var-js/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/mapeveri/django-var-js"
    },
    "release_url": "https://pypi.org/project/django-var-js/1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Application variables passed from the server to the client.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1490123,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c971e4a2b94c2e23fe8acbbc1590bf086a97df16fa280f43cce6feb3c357b722",
        "md5": "12bb73f1e6d0ce8e07193467cefa6c2d",
        "sha256": "4c11a8b9010f8775d3640a2b8b4f046a1f5faa487744d50b3fb15204ac7b39d6"
      },
      "downloads": -1,
      "filename": "django-var-js-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "12bb73f1e6d0ce8e07193467cefa6c2d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3544,
      "upload_time": "2015-04-03T20:53:07",
      "upload_time_iso_8601": "2015-04-03T20:53:07.534377Z",
      "url": "https://files.pythonhosted.org/packages/c9/71/e4a2b94c2e23fe8acbbc1590bf086a97df16fa280f43cce6feb3c357b722/django-var-js-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}