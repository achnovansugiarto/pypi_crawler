{
  "info": {
    "author": "",
    "author_email": "developers@messagemedia.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MessageMedia Signature Key Management Python SDK\n[![Travis Build Status](https://api.travis-ci.org/messagemedia/webhooks-python-sdk.svg?branch=master)](https://travis-ci.org/messagemedia/webhooks-python-sdk)\n[![PyPI](https://badge.fury.io/py/messagemedia-webhooks-sdk.svg)](https://pypi.python.org/pypi/messagemedia-webhooks-sdk)\n\nThe MessageMedia Signature Key API provides a number of endpoints for managing key used to sign each unique request to ensure security and the requests can't (easily) be spoofed. This is similar to using HMAC in your outbound messaging (rather than HTTP Basic).\n\n## ‚≠êÔ∏è Install via PIP\nRun the following command to install the SDK via pip:\n`pip install messagemedia-signingkeys-sdk`\n\n## üé¨ Get Started\nIt's easy to get started. Simply enter the API Key and secret you obtained from the [MessageMedia Developers Portal](https://developers.messagemedia.com) into the code snippet below.\n\n### üöÄ Create a signature key\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\ncontent_type = 'Content-Type'\naccept = 'Accept'\nbody_value = '''{\n    \"digest\": \"SHA224\",\n    \"cipher\": \"RSA\"\n}'''\n\nbody = json.loads(body_value)\n\nresult = signature_key_management_controller.create_signature_key(content_type, accept, body)\n\n```\n\n### üì• Get signature key details\nYou can get a key_id by looking at the id of the signature key created from the response of the above example.\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\nkey_id = 'key_id'\ncontent_type = 'Content-Type'\naccept = 'Accept'\n\nresult = signature_key_management_controller.get_signature_key_detail(key_id, content_type, accept)\n\n```\n\n### üì• Get signature keys list\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\ncontent_type = 'Content-Type'\naccept = 'Accept'\npage = 'page'\npage_size = 'page_size'\n\nresult = signature_key_management_controller.get_signature_key_list(content_type, accept, page, page_size)\n\n```\n\n### ‚ùå Delete signature key\nYou can get the key_id by looking at the ids of the signature keys returned from the response of the `Get signature keys list` example.\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\nkey_id = 'key_id'\ncontent_type = 'Content-Type'\naccept = 'Accept'\n\nsignature_key_management_controller.delete_signature_key(key_id, content_type, accept)\n\n```\n\n### ‚òëÔ∏è Enable a signature key\nYou can get the key_id by looking at the ids of the signature keys returned from the response of the `Get signature keys list` example.\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\ncontent_type = 'Content-Type'\naccept = 'Accept'\nbody = EnableSignatureKeyRequest()\n\nresult = signature_key_management_controller.update_enable_signature_key(content_type, accept, body)\n\n```\n\n### üì• Get enabled signature key\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\ncontent_type = 'Content-Type'\naccept = 'Accept'\n\nresult = signature_key_management_controller.get_enabled_signature_key(content_type, accept)\n\n```\n\n### üö´ Disable an enabled signature key\n```python\nfrom message_media_signing_keys.message_media_signing_keys_client import MessageMediaSigningKeysClient\n\n# Configuration parameters and credentials\nbasic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\nbasic_auth_password = 'basic_auth_password' # The password to use with basic authentication\n\nclient = MessageMediaSigningKeysClient(basic_auth_user_name, basic_auth_password)\n\nsignature_key_management_controller = client.signature_key_management\n\ncontent_type = 'Content-Type'\naccept = 'Accept'\n\nsignature_key_management_controller.delete_disable_the_current_enabled_signature_key(content_type, accept)\n\n```\n\n## üìï Documentation\nCheck out the [full API documentation](DOCUMENTATION.md) for more detailed information.\n\n## üòï Need help?\nPlease contact developer support at developers@messagemedia.com or check out the developer portal at [developers.messagemedia.com](https://developers.messagemedia.com/)\n\n## üìÉ License\nApache License. See the [LICENSE](LICENSE) file.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/messagemedia/signing-keys-python-sdk",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://developers.messagemedia.com/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "messagemedia-signingkeys-sdk",
    "package_url": "https://pypi.org/project/messagemedia-signingkeys-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/messagemedia-signingkeys-sdk/",
    "project_urls": {
      "Download": "https://github.com/messagemedia/signing-keys-python-sdk",
      "Homepage": "https://developers.messagemedia.com/"
    },
    "release_url": "https://pypi.org/project/messagemedia-signingkeys-sdk/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The MessageMedia Signature Key API provides a number of endpoints for managing key used to sign each unique request to ensure security and the requests can't (easily) be spoofed. This is similar to using HMAC in your outbound messaging (rather than HTTP Basic).",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4031481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb8b758a4cb922629f43033bc35b1a6757573c2707f1e3c46c09e52095cfa089",
        "md5": "f0a69e139fdb6ba7fc4b423d93a82115",
        "sha256": "a6ae70206f104d95cf914be2d1dcc70bc8cfc5ce79b0e34a892041c0a8167acb"
      },
      "downloads": -1,
      "filename": "messagemedia_signingkeys_sdk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0a69e139fdb6ba7fc4b423d93a82115",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21614,
      "upload_time": "2018-06-27T00:31:36",
      "upload_time_iso_8601": "2018-06-27T00:31:36.801674Z",
      "url": "https://files.pythonhosted.org/packages/eb/8b/758a4cb922629f43033bc35b1a6757573c2707f1e3c46c09e52095cfa089/messagemedia_signingkeys_sdk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}