{
  "info": {
    "author": "Tiago Rodrigues/SECTRA Iberia",
    "author_email": "tiagoepr@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MLLP/HTTP(S)\n\n[![PyPI](https://img.shields.io/pypi/v/mllp-https)](https://pypi.org/project/mllp-https/)\n\n\n[Project](https://github.com/tiagoepr/mllp-https/) addapted by: Tiago Rodrigues, SECTRA Iberia, 2022 <br>\n\nThis project results of an enhanced package supporting HTTPS of the [original project](https://pypi.org/project/mllp-http/), whose original credits are given to [Rivet Health](https://pypi.org/user/rivet/)\n\n\n\n<p align=\"center\">\n  <img src=\"https://github.com/tiagoepr/mllp-https/raw/master/doc/logo.png\">\n</p>\n\n## Overview\n\nConvert MLLP to HTTP(S) and vice versa.\n\n`http2mllp` is a HTTP server that translates to MLLP.\n\n`mllp2http` is a MLLP server that translates to HTTP.\n\n`https2mllp` is a HTTPS server that translates to MLLP.\n\n`mllp2https` is a MLLP server that translates to HTTPS.\n\nKeywords: MLLP, HTTP, HTTPS, SSL/TLS, HL7\n\n## Description\n\nMLLP (Minimum Lower Layer Protocol) is the traditional session protocol for HL7\nmessages.\n\nMany modern tools (load balancers, application frameworks, API monitoring) are\ndesigned around HTTP(S). This observation is the foundation for the\n[HL7 over HTTP](https://hapifhir.github.io/hapi-hl7v2/hapi-hl7overhttp/specification.html)\nspecification.\n\nThis project, MLLP/HTTP(S), bridges these two protocols, allowing network engineers\nand application developers to work with familiar HTTP(S) technology while\ninterfacing with MLLP-based programs.\n\nImplements\n[MLLP release 1](https://www.hl7.org/documentcenter/public/wg/inm/mllp_transport_specification.PDF), [HTTP/1.1](https://tools.ietf.org/html/rfc2616), and SSL/TLS (optional). Each MLLP message is\nassumed to have a corresponding response message (e.g. HL7 acknoledgment).\n\nNote that this project deals only with the MLLP layer; it does not process HL7\nmessages themselves. Notably, the HTTP participant must be able to intepret HL7\nmessages and generate acknowledgements. This separation imposes no requirements\nfor HL7 usage and leaves application developers with full access to the features\nof the HL7 protocol.\n\n## Install\n\n\n### By [Pip](https://pypi.org/project/awscli-saml/)\n```sh\npip install mllp-https\n```\n\n### By Command Line\nOn the project folder, run the command:\n```sh\npython setup.py install\n```\n\n\n\n## Run as\n### Command Line\n```sh\nhttp2mllp localhost --mllp_port 2575\n\nmllp2http http://localhost:8000\n\nhttps2mllp localhost --mllp_port 2575\n\nmllp2https https://localhost:8000\n```\n\n#### Notes on SSL/TLS:\nTo use https2mllp as a https server/listener, it is required to provide a valid path for SSL certificate file and private key file. In order to do that, both certificate and key files should be placed on a folder \"C:/ssl/\", such that the files' paths are \"C:/ssl/certfile.crt\" and \"C:/ssl/keyfile.key\". Otherwise, both paths should be passed as argument:\n```sh\nhttps2mllp localhost --mllp_port 2575 --certfile /PATH/TO/certfile.crt --keyfile /PATH/TO/keyfile.key\n```\n\n### [Docker](https://hub.docker.com/r/tiagoepr/mllp-https)\nPull from Docker Hub:\n```sh\ndocker pull tiagoepr/mllp-https\n```\nor build from dockerfile:\n```sh\ndocker build -t tiagoepr/mllp-https .\n```\n\n\nRun as:\n\n```sh\ndocker run -it -p 8000:8000 --rm tiagoepr/mllp-https http2mllp host.docker.internal --mllp_port 2575\n\ndocker run -it -p 2575:2575 --rm tiagoepr/mllp-https mllp2http http://host.docker.internal:8000\n\ndocker run -it -p 8000:8000 --rm tiagoepr/mllp-https https2mllp host.docker.internal --mllp_port 2575  (See note below about SSL certificate)\n\ndocker run -it -p 2575:2575 --rm tiagoepr/mllp-https mllp2https https://host.docker.internal:8000    \n```\n#### Notes on SSL/TLS:\nTo use https2mllp as a https server/listener, it is required to provide a valid path for SSL certificate file and private key file. In order to do that, both certificate and key files should be firstly copied onto the Docker container and then the respective paths given as argument.\n<br>To do that, with the container running, run the command on the host:\n\n```sh\ndocker cp [LOCAL/PATH/TO/ssl] [container_id]:/usr/local/lib/python3.10/site-packages/mllp_http_https/ssl\n```\nwhere [LOCAL/PATH/TO/ssh] is the path for the folder containing the certfile.crt and keyfile.key and [container_id] should be replaced by the container ID which is running.\n<br>Now, on the container bash, run the command:\n```sh\ndocker run -it -p 8000:8000 --rm tiagoepr/mllp-https https2mllp host.docker.internal --mllp_port 2575 --certfile /usr/local/lib/python3.7/site-packages/mllp_http_https/ssl/certfile.crt --keyfile /usr/local/lib/python3.7/site-packages/mllp_http_https/ssl/keyfile.key\n```\n## Usage\n\n### http2mllp\n\n```\nusage: http2mllp [-h] [-H HOST] [-p PORT] [--keep-alive KEEP_ALIVE] [--log-level {error,warn,info}]\n                 [--mllp-keep-alive MLLP_KEEP_ALIVE] [--mllp-max-messages MLLP_MAX_MESSAGES] [--mllp-release {1}]\n                 [--timeout TIMEOUT] [--content-type CONTENT_TYPE] [-v] [--mllp_port MLLP_PORT]\n                 mllp_url\n\n            HTTP server that proxies an MLLP server.\n            Expects an MLLP response message and uses it as the HTTP response.\n\n\npositional arguments:\n  mllp_url              MLLP URL, Defaulf: hostname\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  HTTP host (default: 0.0.0.0)\n  -p PORT, --port PORT  HTTP port (default: 8000)\n  --keep-alive KEEP_ALIVE\n                        keep-alive in milliseconds, or unlimited if -1. (default: -1)\n  --log-level {error,warn,info}\n  --mllp-keep-alive MLLP_KEEP_ALIVE\n                        keep-alive in milliseconds, or unlimited if -1. (default: -1)\n  --mllp-max-messages MLLP_MAX_MESSAGES\n                        maximum number of messages per connection, or unlimited if -1. (default: -1)\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     socket timeout, in milliseconds, or unlimited if 0. (default: 0)\n  --content-type CONTENT_TYPE\n                        HTTP Content-Type header (default: x-application/hl7-v2+er7)\n  -v, --version         show program's version number and exit\n  --mllp_port MLLP_PORT\n                        MLLP PORT (default: 2575)\n```\n\n### mllp2http\n\n```\nusage: mllp2http [-h] [-H HOST] [-p PORT] [--content-type CONTENT_TYPE] [--log-level {error,warn,info}] [--mllp-release {1}]\n                 [--timeout TIMEOUT] [-v]\n                 http_url\n\nMLLP server that proxies an HTTP server. Sends back the HTTP response.\n\npositional arguments:\n  http_url              HTTP URL\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  MLLP host (default: 0.0.0.0)\n  -p PORT, --port PORT  MLLP port (default: 2575)\n  --content-type CONTENT_TYPE\n                        HTTP Content-Type header (default: x-application/hl7-v2+er7)\n  --log-level {error,warn,info}\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     timeout in milliseconds (default: 0)\n  -v, --version         show program's version number and exit\n\nenvironment variables:\n    HTTP_AUTHORIZATION - HTTP Authorization header\n    API_KEY - HTTP X-API-KEY header\n```\n\n\n### https2mllp\n```\nusage: https2mllp [-h] [-H HOST] [-p PORT] [--keep-alive KEEP_ALIVE] [--log-level {error,warn,info}]\n                  [--mllp-keep-alive MLLP_KEEP_ALIVE] [--mllp-max-messages MLLP_MAX_MESSAGES] [--mllp-release {1}]\n                  [--timeout TIMEOUT] [--content-type CONTENT_TYPE] [--mllp_port MLLP_PORT] [--certfile CERTFILE]\n                  [--keyfile KEYFILE] [-v]\n                  mllp_url\n\n            HTTPS server that proxies an MLLP server.\n            Expects an MLLP response message and uses it as the HTTPS response.\n\n\npositional arguments:\n  mllp_url              MLLP URL, Defaulf: hostname\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  HTTPS host (default: 0.0.0.0)\n  -p PORT, --port PORT  HTTPS port (default: 8000)\n  --keep-alive KEEP_ALIVE\n                        keep-alive in milliseconds, or unlimited if -1. (default: -1)\n  --log-level {error,warn,info}\n  --mllp-keep-alive MLLP_KEEP_ALIVE\n                        keep-alive in milliseconds, or unlimited if -1. (default: -1)\n  --mllp-max-messages MLLP_MAX_MESSAGES\n                        maximum number of messages per connection, or unlimited if -1. (default: -1)\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     socket timeout, in milliseconds, or unlimited if 0. (default: 0)\n  --content-type CONTENT_TYPE\n                        HTTPS Content-Type header (default: x-application/hl7-v2+er7)\n  --mllp_port MLLP_PORT\n                        MLLP PORT (default: 2575)\n  --certfile CERTFILE   Path for HTTPS Server's SSL/TLS Certificate. Default: C:/ssl/certfile.crt (default:\n                        C:/ssl/certfile.crt)\n  --keyfile KEYFILE     Path for HTTPS Server's SSL/TLS Private Key. Default: C:/ssl/keyfile.key (default:\n                        C:/ssl/keyfile.key)\n  -v, --version         show program's version number and exit\n```\n\n\n### mllp2https\n\n```\nusage: mllp2https [-h] [-H HOST] [-p PORT] [--content-type CONTENT_TYPE] [--log-level {error,warn,info}]\n                  [--mllp-release {1}] [--timeout TIMEOUT] [--verify {False,True}] [-v]\n                  https_url\n\nMLLP server that proxies an HTTPS server. Sends back the HTTPS response.\n\npositional arguments:\n  https_url             HTTPS URL\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  MLLP host (default: 0.0.0.0)\n  -p PORT, --port PORT  MLLP port (default: 2575)\n  --content-type CONTENT_TYPE\n                        HTTPS Content-Type header (default: x-application/hl7-v2+er7)\n  --log-level {error,warn,info}\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     timeout in milliseconds (default: 0)\n  --verify {False,True}\n                        Verify SSL certificate on server side. True as default (default: True)\n  -v, --version         show program's version number and exit\n\nenvironment variables:\n    HTTP_AUTHORIZATION - HTTP Authorization header\n    X-API-KEY - HTTP X-API-KEY header\n\n```\n\n\n\n## Examples\n\n### mllp2http\n\nRun an HTTP debugging server:\n\n```sh\ndocker run -p 8000:80 --rm kennethreitz/httpbin\n```\n\nRun the MLLP connector:\n\n```sh\nmllp2http http://localhost:8000\n```\n\nSend an MLLP message:\n\n```sh\nprintf '\\x0bMESSAGE\\x1c\\x0d' | socat - TCP:localhost:2575\n```\n\nand see the HTTP server's response (which describes the HTTP request that the\nconnector made):\n\n```json\n{\n  \"args\": {},\n  \"data\": \"MESSAGE\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Connection\": \"keep-alive\",\n    \"Content-Length\": \"7\",\n    \"Content-Type\": \"x-application/hl7-v2+er7\",\n    \"Forwarded\": \"by=127.0.0.1:2575;for=127.0.0.1:54572;proto=mllp\",\n    \"Host\": \"localhost:8000\",\n    \"User-Agent\": \"mllp2http/1.0.2\"\n  },\n  \"json\": null,\n  \"origin\": \"127.0.0.1:54572\",\n  \"url\": \"mllp://localhost:8000/post\"\n}\n```\n\n## Developing\n\nTo install:\n\n```sh\nmake install\n```\n\nBefore committing, format:\n\n```sh\nmake format\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tiagoepr/mllp-https",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mllp-https",
    "package_url": "https://pypi.org/project/mllp-https/",
    "platform": null,
    "project_url": "https://pypi.org/project/mllp-https/",
    "project_urls": {
      "Homepage": "https://github.com/tiagoepr/mllp-https",
      "Issues": "https://github.com/tiagoepr/mllp-https/issues",
      "Original Project by Rivet Health": "https://github.com/rivethealth/mllp-http/"
    },
    "release_url": "https://pypi.org/project/mllp-https/1.2.27/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Translate between MLLP and HTTP/HTTPS",
    "version": "1.2.27",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16240059,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa4ba065b1ce4bdef7dad2e4ec3860afa4e057b23e90cba01b1f2eaa9515073c",
        "md5": "d8537fb81a122b190c4ce23e150fc10a",
        "sha256": "900d8d5574bc21ce41fdd96d0f42e3156a63d78bb777c378563967d490beadb9"
      },
      "downloads": -1,
      "filename": "mllp_https-1.2.27-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8537fb81a122b190c4ce23e150fc10a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 17992,
      "upload_time": "2022-09-16T13:58:02",
      "upload_time_iso_8601": "2022-09-16T13:58:02.890492Z",
      "url": "https://files.pythonhosted.org/packages/aa/4b/a065b1ce4bdef7dad2e4ec3860afa4e057b23e90cba01b1f2eaa9515073c/mllp_https-1.2.27-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "774ff7a42242025f701b0494510fca1a3a0242a4f7298b168f53ad04ff969580",
        "md5": "7923a02905684152ec9e988c6bd3a9e7",
        "sha256": "66e01a7441247cd0613f45decd51c79c4e176896debc7a675a21a5a2e8e8cf90"
      },
      "downloads": -1,
      "filename": "mllp-https-1.2.27.tar.gz",
      "has_sig": false,
      "md5_digest": "7923a02905684152ec9e988c6bd3a9e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16210,
      "upload_time": "2022-09-16T13:58:04",
      "upload_time_iso_8601": "2022-09-16T13:58:04.051471Z",
      "url": "https://files.pythonhosted.org/packages/77/4f/f7a42242025f701b0494510fca1a3a0242a4f7298b168f53ad04ff969580/mllp-https-1.2.27.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}