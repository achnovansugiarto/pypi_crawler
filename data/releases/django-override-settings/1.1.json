{
  "info": {
    "author": "Eric Davis",
    "author_email": "ed@npri.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Testing"
    ],
    "description": "========================\r\ndjango-override-settings\r\n========================\r\n\r\ndjango-override-settings provides an easy way to override settings in\r\nDjango tests.\r\n\r\nThe ``override_settings`` class can be used as either a class or\r\nmethod decorator or as a context manager to temporarily override the\r\nvalues of settings.  After each test case has finished (when using it\r\nas a decorator) or after the context manager has exited, it resets the\r\nvalues in ``django.conf.settings`` to what they were before.  This prevents\r\nside-effects from creeping and lets each test case run in its own\r\nsandbox.\r\n\r\nThis package also provides two convenience functions (``with_apps``\r\nand ``without_apps``) to modify just ``INSTALLED_APPS`` as well as a\r\nspecial object (``SETTING_DELETED``) to run tests without a given\r\nsetting defined.\r\n\r\nThe functionality in this package will eventually be superseded when\r\nDjango 1.4 is released as it will come with a built-in\r\n``override_settings``.  But for those maintaining pre-1.4 codebases,\r\nhopefully this package comes in handy.\r\n\r\nInstallation\r\n------------\r\n\r\nWe're on PyPI_::\r\n\r\n    pip install django-override-settings\r\n\r\n.. _PyPI: http://pypi.python.org/pypi/django-override-settings\r\n\r\nUsage\r\n-----\r\n\r\nIf you have a bunch of tests that require a given setting, you can\r\ndecorate the class and each test case will use that value.  For\r\nexample::\r\n\r\n    from django.conf import settings\r\n    from django.test import TestCase\r\n    from override_settings import override_settings\r\n\r\n    @override_settings(FOO=\"abc\")\r\n    class TestFoo(TestCase):\r\n        def test_foo(self):\r\n            self.assertEqual(settings.FOO, \"abc\")\r\n\r\nOr you can decorate a single test case and have it only apply on that\r\nmethod::\r\n\r\n    @override_settings(BAR=\"123\")\r\n    class TestBar(TestCase):\r\n\r\n        @override_settings(BAR=\"abc\")\r\n        def test_bar(self):\r\n            self.assertEqual(settings.BAR, \"abc\")\r\n\r\n        def test_bar_no_decoration(self):\r\n            self.assertEqual(settings.BAR, \"123\")\r\n\r\nYou can also use it as a context manager::\r\n\r\n    class TestBar(TestCase):\r\n        @override_settings(BAR=\"123\")\r\n        def test_bar(self):\r\n            self.assertEqual(settings.BAR, \"123\")\r\n\r\n            with override_settings(BAR=\"abc\")\r\n                self.assertEqual(settings.BAR, \"abc\")\r\n\r\n            self.assertEqual(settings.BAR, \"123\")\r\n\r\nTo modify just ``INSTALLED_APPS``, use ``with_apps`` or\r\n``without_apps``::\r\n\r\n    from override_settings import with_apps, without_apps\r\n\r\n    class TestAppModifiers(TestCase):\r\n        @with_apps('django.contrib.humanize')\r\n        def test_humanize(self):\r\n            # ...\r\n\r\n        @without_apps('django.contrib.sites')\r\n        def test_no_sites(self):\r\n            # ...\r\n\r\nTo run tests without a setting, use ``SETTING_DELETED``::\r\n\r\n    from override_settings import override_settings, SETTING_DELETED\r\n\r\n    class TestMissingSetting(TestCase):\r\n        @override_settings(CUSTOM_OPTION=SETTING_DELETED)\r\n        def test_delete_custom_option(self):\r\n            \"\"\"\r\n            Useful to make sure a missing setting raises an Exception.\r\n            \"\"\"\r\n            self.assertRaises(AttributeError, getattr, settings, 'CUSTOM_OPTION')\r\n\r\nRequirements\r\n------------\r\n\r\n- Django >= 1.2\r\n\r\nThanks\r\n------\r\n\r\n- `Jannis Leidel`_ for both the `original snippet`_ and his work updating it\r\n  to work when decorating TestCases as part of `Django proper`_.\r\n\r\n- `Joost Cassee`_ for the idea of ``SETTING_DELETED`` as well as\r\n  ``with_apps`` and ``without_apps`` as part of his django-analytical_\r\n  project.\r\n\r\n.. _Jannis Leidel: https://github.com/jezdez\r\n.. _original snippet: http://djangosnippets.org/snippets/2437/\r\n.. _Django proper: https://code.djangoproject.com/browser/django/trunk/django/test/utils.py\r\n.. _Joost Cassee: https://github.com/jcassee\r\n.. _django-analytical: https://github.com/jcassee/django-analytical\r\n\r\nContact\r\n-------\r\n\r\nIf you notice any bugs, please `open a ticket`_.\r\n\r\n.. _open a ticket: https://github.com/edavis/django-override-settings/issues",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/edavis/django-override-settings/",
    "keywords": "",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-override-settings",
    "package_url": "https://pypi.org/project/django-override-settings/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-override-settings/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/edavis/django-override-settings/"
    },
    "release_url": "https://pypi.org/project/django-override-settings/1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Provide a way to override Django's settings when running tests",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 748620,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fda5b56bd6080c2a7ff436d64326709749c90169b92a51b588bf60bffba0df36",
        "md5": "da3281418a5d73ab7c0bea434e6179fe",
        "sha256": "23bf15892abfefccf818e4a76272c0e8037d09edae4650d7acdb81113571131b"
      },
      "downloads": -1,
      "filename": "django-override-settings-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "da3281418a5d73ab7c0bea434e6179fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4153,
      "upload_time": "2011-07-06T20:16:54",
      "upload_time_iso_8601": "2011-07-06T20:16:54.137157Z",
      "url": "https://files.pythonhosted.org/packages/fd/a5/b56bd6080c2a7ff436d64326709749c90169b92a51b588bf60bffba0df36/django-override-settings-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}