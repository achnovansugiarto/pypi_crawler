{
  "info": {
    "author": "Yuriy Zemskov",
    "author_email": "zemskyura@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===============\ndjango_infopush\n===============\n\ndjango_infopush is a Django reusable app, that allows to gather push\nsubscriptions and send web push notifications to browsers.\n\n**It is a full featured reusable app which includes:**\n\n* frontend & backend code which gathers push subscriptions and saves them to DB,\n* service worker to show notifications, manage clicks and basic notification statistics,\n* django admin interface where you create new push tasks (title, text, icon, url, image, time to send) and view stats for the old ones,\n* django management command to perform your tasks (send notifications to subscribers).\n\n.. image:: https://raw.githubusercontent.com/kilgoretrout1985/django_infopush/master/docs/img/push_admin_list_thumb.png\n   :target: https://raw.githubusercontent.com/kilgoretrout1985/django_infopush/master/docs/img/push_admin_list.png\n\nThis app covers 99% webpush needs for content web-sites than you just want\nto send an announcement of a new blog post for example. Just make a new push\ntask in the admin and job is done.\n\n.. image:: https://raw.githubusercontent.com/kilgoretrout1985/django_infopush/master/docs/img/push_admin_add_thumb.png\n   :target: https://raw.githubusercontent.com/kilgoretrout1985/django_infopush/master/docs/img/push_admin_add.png\n\n**Known limitations are:**\n\n* Tested only on Django 1.11 LTS.\n* You better have access to CRON on your server, because push tasks are send using `python manage.py pushsend` management command. And running it manually every time sounds like a bad idea. Although for testing purposes manual calls will do well.\n\nQuick start\n-----------\n\n1. `pip install django-infopush`\n\n2. Add \"commonstuff\" and \"push\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        # ...\n        'commonstuff',\n        'push',\n    ]\n\n3. Enable sites framework in Django, see `official docs\n   <https://docs.djangoproject.com/en/1.11/ref/contrib/sites/#enabling-the-sites-framework>`_.\n\n4. Configure django_infopush in your project settings.py file. At least your\n   DJANGO_INFOPUSH_VAPID_PUBLIC_KEY and DJANGO_INFOPUSH_VAPID_PRIVATE_KEY\n   (you can simply generate them `here <https://web-push-codelab.glitch.me/>`_).\n\n   You also have to set DJANGO_INFOPUSH_VAPID_ADMIN_EMAIL with your\n   site admin or support address, so that push-server administration can\n   reach you if something goes wrong.\n\n   E.g.::\n\n    DJANGO_INFOPUSH_VAPID_PUBLIC_KEY = 'AHf42JhrMtFOXAG2OYTmEoBvKNcEsxmYF5pqvYd4InFEEU0x41HzymPQRtcvJZp9iNpDQK4GuTGMWAgn0E8G8IZ'\n    DJANGO_INFOPUSH_VAPID_PRIVATE_KEY = 'CcmbGJ9wce7596DoObRzyPHNktPRo5CSCdericz7Pf7'\n    DJANGO_INFOPUSH_VAPID_ADMIN_EMAIL = 'admin@mysite.com'\n\n   See `docs/SETTINGS.rst\n   <https://github.com/kilgoretrout1985/django_infopush/blob/master/docs/SETTINGS.rst>`_\n   for more.\n\n5. **If** project uses MySQL, make sure it's version is 5.7.7 or greater\n   and add the following line to project's settings.py::\n\n    SILENCED_SYSTEM_CHECKS = ['mysql.E001']\n\n   See `docs/MYSQL.rst\n   <https://github.com/kilgoretrout1985/django_infopush/blob/master/docs/MYSQL.rst>`_\n   for details.\n\n6. Run `python manage.py migrate` to create push models.\n\n7. Include URLconf in your project urls.py like this::\n\n    from django.conf.urls import url, include\n    from django.conf import settings\n    from django.views.generic import TemplateView\n    from django.views.decorators.cache import cache_page\n\n    urlpatterns = [\n        # ...\n        url(r'^push/', include('push.urls')),\n        url(r'^service-worker.js$', cache_page(1 if settings.DEBUG else 86400)(TemplateView.as_view(\n            template_name=\"push/service-worker.js\",\n            content_type='application/javascript; charset='+settings.DEFAULT_CHARSET,\n        )), name='service-worker.js'),\n    ]\n\n8. Add `{% include 'push/_head_include.html' %}` into head-section of your\n   django-project's html template(s). Do not include it on the pages where you\n   don't want to see push-subscribe browser window. Visit your website to\n   become first subscriber (currently Chrome and FF support webpush, not\n   Safari).\n\n9. Visit http://127.0.0.1:8000/admin/push/ to create first push task.\n\n10. CRON setup for `python manage.py pushsend` management command\n    (every 5-10 minutes). You can also run this command manually for testing\n    purposes.\n\n11. (OPTIONAL) Run `python manage.py test push` for basic check of the app.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kilgoretrout1985/django_infopush",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-infopush",
    "package_url": "https://pypi.org/project/django-infopush/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-infopush/",
    "project_urls": {
      "Homepage": "https://github.com/kilgoretrout1985/django_infopush"
    },
    "release_url": "https://pypi.org/project/django-infopush/1.7.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django reusable app, what allows to send web push.",
    "version": "1.7.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15334692,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95bdcb96b574ef00b68f458cb93e3264727eaf08f7755470a129fafdb1f5e55b",
        "md5": "bea76cb23ecb4a7d9afb196b51f6d440",
        "sha256": "739a0b00480ebceb2f35a322e2f22059354dedb5f76fbe965f16ed78d3d316b0"
      },
      "downloads": -1,
      "filename": "django_infopush-1.7.4.tar.gz",
      "has_sig": false,
      "md5_digest": "bea76cb23ecb4a7d9afb196b51f6d440",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 480615,
      "upload_time": "2019-04-09T06:59:42",
      "upload_time_iso_8601": "2019-04-09T06:59:42.401481Z",
      "url": "https://files.pythonhosted.org/packages/95/bd/cb96b574ef00b68f458cb93e3264727eaf08f7755470a129fafdb1f5e55b/django_infopush-1.7.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}