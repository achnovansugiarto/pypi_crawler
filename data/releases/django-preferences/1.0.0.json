{
  "info": {
    "author": "Praekelt Consulting",
    "author_email": "dev@praekelt.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Django Preferences\n==================\n**Django app allowing users to set app specific preferences through the admin interface.**\n\n.. image:: https://travis-ci.org/praekelt/django-preferences.svg?branch=develop\n    :target: https://travis-ci.org/praekelt/django-preferences\n\n.. image:: https://coveralls.io/repos/github/praekelt/django-preferences/badge.svg?branch=develop\n    :target: https://coveralls.io/github/praekelt/django-preferences?branch=develop\n\n.. image:: https://badge.fury.io/py/django-preferences.svg\n    :target: https://badge.fury.io/py/django-preferences\n\nProvides singleton admin views for Preferences objects and a simple interface to preference values.\nSingleton views ensure only one preference instance per site is available for each ``Preferences`` class.\n\n..\n\n    **Requires** and supports `Django's \"sites\" framework <https://docs.djangoproject.com/en/dev/ref/contrib/sites/>`_, which means you can have multiple preferences, each associated with a particular site.\n\n.. contents:: Contents\n    :depth: 5\n\nRequirements\n------------\n\n#. Python 2.7, 3.5-3.7\n\n#. Django 1.11, 2.0, 2.1\n\n#. django.contrib.sites\n\n\nInstallation\n------------\n\n#. Install or add ``django-preferences`` to your Python path.\n\n#. Add ``preferences`` to your ``INSTALLED APPS`` setting.\n\n#. Add ``django.contrib.sites`` to your ``INSTALLED APPS`` setting. django-preferences associates preferences to specific sites and thus requires Django's \"sites\" framework to be installed.\n\n#. Optionally, add ``preferences.context_processors.preferences_cp`` to your template option settings. This will automatically add a ``preferences`` variable to your template context::\n\n     TEMPLATES = [{\n         ...\n         'OPTIONS': {\n             'context_processors': [\n                 ...\n                 'preferences.context_processors.preferences_cp',\n             ],\n         },\n     }]\n\nUsage\n-----\nTo create preferences for your app create a Django ORM model as usual, with the model inheriting from ``preferences.models.Preferences``. Also specify ``preferences.models`` as your model's module::\n\n    from django.db import models\n    from preferences.models import Preferences\n\n    class MyPreferences(Preferences):\n        portal_contact_email = models.EmailField()\n\nAdmin classes are specified as per usual, except that they have to inherit from or be registered with ``preferences.admin.PreferencesAdmin``, i.e.::\n\n    from django.contrib import admin\n\n    from preferences.admin import PreferencesAdmin\n    from <my_app>.models import MyPreferences\n\n    admin.site.register(MyPreferences, PreferencesAdmin)\n\nWhen your model is registered with admin it will show up under the *Preferences* app label in Django admin.\n\nPreferences can be accessed in Python by importing the ``preferences`` module and traversing to your required preference in the form ``preferences.<ModelName>.<field>``, i.e.::\n\n    from preferences import preferences\n\n    portal_contact_email = preferences.MyPreferences.portal_contact_email\n\n\nIf you've specified the ``preferences.context_processors.preferences_cp`` as a `TEMPLATES <https://docs.djangoproject.com/en/1.11/topics/templates>`_ you can similarly access your preferences within templates through the ``preferences`` variable, i.e.::\n\n    {{ preferences.MyPreferences.portal_contact_email }}\n\nAuthors\n=======\n\nPraekelt Consulting\n-------------------\n* Shaun Sephton\n* Euan Jonker\n* Hedley Roos\n\nChangelog\n=========\n\nnext\n----\n#. Django 2 and Python 3.5 compatibility. Django 1.9 is no longer supported.\n\n\n1.0.0\n---\n#. Support Django 1.11, 2.0 & 2.1 remove support for Django < 1.11\n#. Support Python 2.7, 3.5-3.7\n#. Added tests coverage\n\n0.2\n---\n#. Move to tox for tests.\n#. Django 1.9 to 1.11 support. The official minimum supported version is 1.9.\n\n0.1\n---\n#. Cleanup and fixing of tests courtesy of senyor.\n#. Rewrite distinct query so it works with Oracle backend.\n\n0.0.6\n-----\n#. Better packaging.\n\n0.0.5 (2011-08-17)\n------------------\n#. Added sites support.\n#. Added unittests.\n\n0.0.4 (2011-08-11)\n------------------\n#. Cleanup. Docs polish.\n\n0.0.3\n-----\n#. Spelling correction, thanks tiktuk.\n\n0.0.2\n-----\n#. Doc update to indicate importance of placing url include before admin url include.\n\n0.0.1\n-----\n#. First super alpha release.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/praekelt/django-preferences",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-preferences",
    "package_url": "https://pypi.org/project/django-preferences/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-preferences/",
    "project_urls": {
      "Homepage": "http://github.com/praekelt/django-preferences"
    },
    "release_url": "https://pypi.org/project/django-preferences/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django app allowing users to set app specific preferences through the admin interface.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4711146,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ef78a70ef59880fe4ed36a5cd6255026dcab824287438f69f03b7ba96d28d2a",
        "md5": "0fe490621e49ec7aad7057dfd8c5b05a",
        "sha256": "1601c932da2eafb464bfc0ded6d69371d2c610870a7f27c81769a50f8da522e9"
      },
      "downloads": -1,
      "filename": "django-preferences-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0fe490621e49ec7aad7057dfd8c5b05a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23262,
      "upload_time": "2018-12-20T12:45:31",
      "upload_time_iso_8601": "2018-12-20T12:45:31.928608Z",
      "url": "https://files.pythonhosted.org/packages/1e/f7/8a70ef59880fe4ed36a5cd6255026dcab824287438f69f03b7ba96d28d2a/django-preferences-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}