{
  "info": {
    "author": "Tomas Zulberti",
    "author_email": "tzulberti@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.4",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://travis-ci.org/tzulberti/django-datefilterspec.svg?branch=master\n    :alt: Build status\n    :target: https://travis-ci.org/tzulberti/django-datefilterspec\n\ndjango-daterange-filter\n=======================\n\nAdd the option to filter by a custom date range on the admin. This allows\nto inputs to be used to get the custom date range filters.\n\nSee datefilter.png of a screenshot of how this is seen on the admin.\n\n**IMPORTANT:** this will work with Django 1.4. I won't work with previous Django\nversions.\n\nInstallation\n------------\n\nUse pip/easy_install\n\n.. code-block:: bash\n\n    pip install django-daterange-filter\n\n\nAdd daterange_filter to settings.INSTALLED_APP. For this, edit the setup.py\nfile:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'daterange_filter'\n    )\n\nAfter this, if you have a model like this one:\n\n.. code-block:: python\n\n    class MyModel(models.Model):\n        ...\n        foo = models.CharField(max_length=1, choices=BAR_CHOICES)\n        created_at = models.DateField()\n        \n\nTo allow to filter the **created_at** field using the date ranges, you must\nedit the admin.ModelAdmin referenced to that class:\n\n.. code-block:: python\n\n    from daterange_filter.filter import DateRangeFilter\n    from django.contrib import admin\n    from models import MyModel\n\n    class MyModelAdmin(admin.ModelAdmin):\n        list_filter = (\n            'foo',\n            ('created', DateRangeFilter), # this is a tuple\n            ...\n        )\n\n\nDateRangeFilter honours localization and supports local date \nformats for filtering.\n\nRunning tests\n-------\nFirst :code:`pip install -r requirements.txt`, then :code:`python ./runtests.py`\n\nIf you wanna run tests on all supported Python/Django versions, execute :code:`tox`.\n\nChanges \n-------\n\n1.2.0:\n\n* Added support to Django 1.4. Special thanks to: https://github.com/eduardo-matos\n* Fix calendar location. Special thanks to: https://github.com/sariogonfer\n* Added portugues translations. Special thanks to: https://github.com/Gustavosdo\n\n1.1.1:\n\n* Special thanks to: https://github.com/mightygraf\n\n0.2.0:\n\n* Updated README\n* Works with DateTime (special thanks to Andrea Rabbaglietti)\n\n0.1.1:\n\n* Removed the custom DateRangeField\n* Improved i18n\n* Special thanks to: https://github.com/DXist",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/tzulberti/django-datefilterspec",
    "keywords": "django admin,django date range",
    "license": "License :: OSI Approved :: BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-daterange-filter",
    "package_url": "https://pypi.org/project/django-daterange-filter/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-daterange-filter/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/tzulberti/django-datefilterspec"
    },
    "release_url": "https://pypi.org/project/django-daterange-filter/1.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Allow to filter by a custom date range on the Django Admin",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3707285,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e0924f6fc6f03858a89d5404d02f6db0fa588182a275642fb2070e2af7f1875",
        "md5": "10300b584190ee080c1bfa6bd63b1b17",
        "sha256": "9eae4cabfee4553c0d7e583a9065a369411042a650a811f2b4a7e795db6586eb"
      },
      "downloads": -1,
      "filename": "django-daterange-filter-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "10300b584190ee080c1bfa6bd63b1b17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4806,
      "upload_time": "2015-10-09T00:58:02",
      "upload_time_iso_8601": "2015-10-09T00:58:02.862982Z",
      "url": "https://files.pythonhosted.org/packages/8e/09/24f6fc6f03858a89d5404d02f6db0fa588182a275642fb2070e2af7f1875/django-daterange-filter-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}