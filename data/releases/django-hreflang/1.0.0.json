{
  "info": {
    "author": "Mark V",
    "author_email": "mdilligaf@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\nDjango hreflang\n---------------------------------\n\nProviding hreflang information for your website is recommended by Google. If you are using i18n urls, this Django app can add this hreflang information automatically in one of several ways.\n\nFor more information about hreflang, have a look at https://support.google.com/webmasters/answer/189077?hl=en\n\nInstallation & Configuration:\n-----------------------------\n\nThis assumes that you are using internationalization for your URL patterns, as described at https://docs.djangoproject.com/en/1.7/topics/i18n/translation/#module-django.conf.urls.i18n\n\nYou may need to take zero or one of these steps:\n\n- If you want to use the html tag, add ``hreflang`` to your ``INSTALLED_APPS``\n- If you want to use the middleware, add ``hreflang.AddHreflangToResponse`` to your ``MIDDLEWARE_CLASSES``\n\nIf you have other middleware that changes the Files header, that should be okay if it doesn't overwrite previous headers. You may want to add hreflang as the first middleware when in doubt.\n\nHow to use\n---------------------------------\n\nhreflang information can, in general, be provided in three ways: in the html files's <head>, in the http Files header or through a sitemap. This package supports the first two.\n\nWhich way should I use?\n=================================\n\nMy personal preference is using the HTML <head> links in a special block in the base template. If there are any special documents (e.g. pdf) use the ``hreflang_headers`` function. This allows per-page control with minimal effort (unless you serve mostly special documents).\n\nHTML <head> (template tags)\n=================================\n\nTo include the links in the <head>, follow this minimal example::\n\n    {% load hreflang %}\n    <head>\n        {% hreflang_tags %}\n    </head>\n\n(hreflang must be in installed apps.)\n\nResponse header (manually)\n=================================\n\nThe template tag method works great for normal files. But if you have special files (e.g. pdf) with multiple versions, you can use the response's file header by::\n\n    from hreflang import hreflang_headers\n    def your_view(request):\n        response = your_code()\n        return hreflang_headers(response)\n\nwhich will take care of things.\n\nResponse header (middleware)\n=================================\n\nA more automatic way that captures all kinds of files is to use a middleware. All you have to do is add ``hreflang.AddHreflangToResponse`` to your ``MIDDLEWARE_CLASSES``. You don't need to use ``hreflang_headers`` or ``{% hreflang_tags %}``. This will apply to all responses, it can not be turned on or off for individual responses.\n\n\nUseful extra template tags\n=================================\n\nFor convenience, some more template tags are included.\n\nTo obtain a link to the current document in another language, use::\n\n    {% translate_url 'en' %}\n\nTo get a list of <li>-links to all (other) language versions of the current document, use one of::\n\n    <ul>{% lang_list %}</ul>\n    <ul>{% other_lang_list %}</ul>\n\nUseful extra function(s)\n=================================\n\nhreflang contains a version of ``reverse`` with additional parameters ``lang`` and ``use_lang_prefix``.\n\n* With both parameters left out it behaves just like Django's ``reverse`` (which translates the url to the current language)\n* With ``lang`` you can provide a specific language (by code) into which the url is to be translated.\n* By setting ``use_lang_prefix`` to False, you can obtain an url without language prefix.\n\nLicense\n---------------------------------\n\ndjango_hreflang is available under the revised BSD license, see LICENSE.txt. You can do anything as long as you include the license, don't use my name for promotion and are aware that there is no warranty.\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "git+https://bitbucket.org/mverleg/django_hreflang",
    "keywords": null,
    "license": "Revised BSD License (LICENSE.txt)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_hreflang",
    "package_url": "https://pypi.org/project/django_hreflang/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_hreflang/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "git+https://bitbucket.org/mverleg/django_hreflang"
    },
    "release_url": "https://pypi.org/project/django_hreflang/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Generate the hreflang html header lines when using i18n urls",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3877343,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "701aa32cbaae3573544ad3bae5c57603d900aa9967e41a9750b454cfb6f5a957",
        "md5": "e6b981682fc5f3ba0926c202ffee361f",
        "sha256": "9b767bf84db168fcdb7f0450b8d96f081ed00184ea38d7b35f49631bbf61ab16"
      },
      "downloads": -1,
      "filename": "django_hreflang-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e6b981682fc5f3ba0926c202ffee361f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5963,
      "upload_time": "2015-08-06T17:04:32",
      "upload_time_iso_8601": "2015-08-06T17:04:32.176536Z",
      "url": "https://files.pythonhosted.org/packages/70/1a/a32cbaae3573544ad3bae5c57603d900aa9967e41a9750b454cfb6f5a957/django_hreflang-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}