{
  "info": {
    "author": "Max Linke, Michael Gecht",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "\n===================================\n  Benchmark GROMACS simulations\n===================================\n\n.. image:: https://img.shields.io/pypi/v/mdbenchmark.svg\n    :target: https://pypi.python.org/pypi/mdbenchmark\n\n.. image:: https://img.shields.io/pypi/l/mdbenchmark.svg\n    :target: https://pypi.python.org/pypi/mdbenchmark\n\n.. image:: https://travis-ci.org/bio-phys/MDBenchmark.svg?branch=master\n    :target: https://travis-ci.org/bio-phys/MDBenchmark\n\n.. image:: https://codecov.io/gh/bio-phys/MDBenchmark/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/bio-phys/MDBenchmark\n\n.. image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n    :target: http://makeapullrequest.com\n\n.. image:: https://zenodo.org/badge/112506401.svg\n   :target: https://zenodo.org/badge/latestdoi/112506401\n\n---------------\n\n**MDBenchmark** â€” quickly generate, start and analyze benchmarks for GROMACS simulations.\n\nMDBenchmark is a tool to squeeze the maximum out of your limited computing\nresources. It tries to make it as easy as possible to set up systems on varying\nnumbers of nodes and compare their performances to each other.\n\nYou can also create a plot to get a quick overview of the possible performance\n(and also show of to your friends)! The plot below shows the performance of an\nMD system on up to five nodes with and without GPUs.\n\n.. image:: https://raw.githubusercontent.com/bio-phys/MDBenchmark/master/runtimes.png\n\n\nInstallation\n============\n\nYou can install ``mdbenchmark`` via ``pip`` or ``conda``:\n\n.. code::\n\n    $ pip install mdbenchmark\n\n.. code::\n\n    $ conda install -c conda-forge mdbenchmark\n\nUsage with a virtual environments\n--------------------------------\n\nWe recommend to install the package inside a `conda environment`_. This can\neasily be done with ``conda``. The following commands create an environment\ncalled ``benchmark`` and then installs ``mdbenchmark`` and its dependencies.\n\n.. code::\n\n    $ conda create -n benchmark\n    $ conda install -n benchmark -c conda-forge mdsynthesis click mdbenchmark\n\nBefore every usage of ``mdbenchmark``, you need to first activate the conda\nenvironment. After doing this once, you can use the tool for the whole duration\nof your shell session.\n\n.. code::\n\n   $ source activate benchmark\n   # mdbenchmark should now be usable!\n   $ mdbenchmark\n   Usage: mdbenchmark [OPTIONS] COMMAND [ARGS]...\n\n     Generate and run benchmark jobs for GROMACS simulations.\n\n   Options:\n     --version  Show the version and exit.\n     --help     Show this message and exit.\n\n   Commands:\n     analyze   analyze finished benchmark.\n     generate  Generate benchmark queuing jobs.\n     submit    Start benchmark simulations.\n\nFeatures\n========\n\n- Generates benchmarks for GROMACS systems (contributions for other MD systems are welcome!).\n- Automatically detects the queuing system on your high-performance cluster and submits jobs accordingly.\n- Grabs performance from GROMACS logs and creates a fancy plot.\n- Can benchmark systems either with or without GPUs.\n\nUsage\n=====\n\nAfter installation, the ``mdbenchmark`` command should be available to you\nglobally. If you have installed the package in a virtual environment, make sure\nto activate that first!\n\nAssuming your TPR files is called ``protein.tpr`` and want to run benchmarks\nwith the module ``gromacs/5.1.4-plumed2.3`` on up to ten nodes, use the\nfollowing command:\n\n.. code::\n\n    $ mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --max-nodes 10\n\nTo run benchmarks on GPUs add the ``--gpu`` flag:\n\n.. code::\n\n    $ mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --max-nodes 10 --gpu\n\nYou can also create benchmarks for different versions of GROMACS:\n\n.. code::\n\n    $ mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --module gromacs/2016.4-plumed2.3 --max-nodes 10 --gpu\n\nAfter you generated all benchmark systems, you can start them at once:\n\n.. code::\n\n    $ mdbenchmark start\n\nAs soon as the benchmark simulations have been submitted you can run the\nanalysis script via ``mdbenchmark analysis``. As soon as at least one system has\nfinished the script will produce a ``.csv`` output file or a plot for direct\nusage (via the ``--plot`` option).\n\n.. code::\n\n    $ mdbenchmark analyze\n                       gromacs  nodes  ns/day  run time [min]    gpu        host  ncores\n    0  gromacs/5.1.4-plumed2.3      1  10.878              15  False       draco      32\n    1  gromacs/5.1.4-plumed2.3      2   21.38              15  False       draco      64\n    2  gromacs/5.1.4-plumed2.3      3  34.033              15  False       draco      96\n    3  gromacs/5.1.4-plumed2.3      4  40.274              15  False       draco     128\n    4  gromacs/5.1.4-plumed2.3      5   51.71              15  False       draco     160\n\nDefining Host Templates\n=======================\n\nIt is possible to define your own host templates in addition to the ones shipped\nwith the package. A template file should have the same filename as the UNIX\ncommand ``hostname`` returns to be detected automatically. Otherwise you can\npoint MDBenchmark to a specific template by providing its name via the\n``--host`` option.\n\nAssuming you created a new host template in your home directory ``~/.config/MDBenchmark/my_custom_hostfile~~::\n\n    $ mdbenchmark generate protein --host my_custom_hostfile --module gromacs/5.1.4-plumed2.3\n\nHere is an example job template for the MPG cluster ``hydra``.\n\n.. code::\n\n    # @ shell=/bin/bash\n    #\n    # @ error = {{ name }}.err.$(jobid)\n    # @ output = {{ name }}.out.$(jobid)\n    # @ job_type = parallel\n    # @ node_usage = not_shared\n    # @ node = {{ n_nodes }}\n    # @ tasks_per_node = 20\n    {%- if gpu %}\n    # @ requirements = (Feature==\"gpu\")\n    {%- endif %}\n    # @ resources = ConsumableCpus(1)\n    # @ network.MPI = sn_all,not_shared,us\n    # @ wall_clock_limit = {{ formatted_time }}\n    # @ queue\n\n    module purge\n    module load {{ module }}\n\n    # run {{ module }} for {{ time }} minutes\n    poe gmx_mpi mdrun -deffnm {{ name }} -maxh {{ time / 60 }}\n\nMDBenchmark passes the following variables to each template:\n\n+----------------+---------------------------------------------------------------------+\n| Value          | Description                                                         |\n+================+=====================================================================+\n| name           | Name of the TPR file                                                |\n+----------------+---------------------------------------------------------------------+\n| gpu            | Boolean that is true, if GPUs are requested                         |\n+----------------+---------------------------------------------------------------------+\n| module         | Name of the module to load                                          |\n+----------------+---------------------------------------------------------------------+\n| n_nodes        | Maximal number of nodes to run on                                   |\n+----------------+---------------------------------------------------------------------+\n| time           | Benchmark run time in minutes                                       |\n+----------------+---------------------------------------------------------------------+\n| formatted_time | Run time for the queuing system in human readable format (HH:MM:SS) |\n+----------------+---------------------------------------------------------------------+\n\nTo ensure correct termination of jobs ``formatted_time`` is 5 minutes longer\nthan ``time``.\n\nMDBenchmark will look for user templates in the `xdg`_ config folders defined by\nthe environment variables ``XDG_CONFIG_HOME`` and ``XDG_CONFIG_DIRS`` which by\ndefault are set to ``$HOME/.config/MDBenchmark`` and ``/etc/xdg/MDBenchmark``,\nrespectively. If the variable ``MDBENCHMARK_TEMPLATES`` is set, the script will\nalso search in that directory.\n\nMDBenchmark will first search in ``XDG_CONFIG_HOME`` and ``XDG_CONFIG_DIRS`` for\na suitable template file. This means it is possible to overwrite system-wide\ninstalled templates or templates shipped with the package.\n\nContributing\n============\n\nContributions to the project are welcome! Information on how to contribute to\nthe project can be found in `CONTRIBUTING.md`_ and `DEVELOPER.rst`_.\n\n.. _conda environment: https://conda.io/docs/user-guide/tasks/manage-environments.html\n.. _xdg: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\n.. _CONTRIBUTING.md: https://github.com/bio-phys/MDBenchmark/blob/master/.github/CONTRIBUTING.md\n.. _DEVELOPER.rst: https://github.com/bio-phys/MDBenchmark/blob/master/DEVELOPER.rst\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bio-phys/MDBenchmark",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdbenchmark",
    "package_url": "https://pypi.org/project/mdbenchmark/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdbenchmark/",
    "project_urls": {
      "Homepage": "https://github.com/bio-phys/MDBenchmark"
    },
    "release_url": "https://pypi.org/project/mdbenchmark/1.2.0/",
    "requires_dist": [
      "numpy (>=1.8)",
      "mdsynthesis",
      "click",
      "jinja2",
      "pandas",
      "matplotlib",
      "python-Levenshtein",
      "xdg (<2)"
    ],
    "requires_python": "",
    "summary": "mdbenchmark gromacs simulations",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16884513,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d0957edb92f86af67b5ae4fc8d4866027d2f519f3d13c0fe691bb0a9b15a2f6",
        "md5": "66fbf7c92d45950d27a50f3cb63c6fdb",
        "sha256": "a4ac4d66e1e57fdfae3308d3bde7b56196f210afff26ba96a04e6c5c800e0adc"
      },
      "downloads": -1,
      "filename": "mdbenchmark-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66fbf7c92d45950d27a50f3cb63c6fdb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 32489,
      "upload_time": "2018-02-20T09:08:03",
      "upload_time_iso_8601": "2018-02-20T09:08:03.104153Z",
      "url": "https://files.pythonhosted.org/packages/9d/09/57edb92f86af67b5ae4fc8d4866027d2f519f3d13c0fe691bb0a9b15a2f6/mdbenchmark-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6394e164617163ac9be75996a42e5daadbca104e52979a2ff9bd8829aba168d7",
        "md5": "ac1c3a90332039959aed6fbe43f6fb0c",
        "sha256": "0f0579d68a30ce9681d4325d641f45cc3f983a80d4485fd60c4e773224449909"
      },
      "downloads": -1,
      "filename": "mdbenchmark-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ac1c3a90332039959aed6fbe43f6fb0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 44658,
      "upload_time": "2018-02-20T09:08:05",
      "upload_time_iso_8601": "2018-02-20T09:08:05.935382Z",
      "url": "https://files.pythonhosted.org/packages/63/94/e164617163ac9be75996a42e5daadbca104e52979a2ff9bd8829aba168d7/mdbenchmark-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}