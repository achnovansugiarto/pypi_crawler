{
  "info": {
    "author": "Max Linke, Michael Gecht",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "\n===================================\n  MDBenchmark GROMACS simulations\n===================================\n\n.. image:: https://travis-ci.org/bio-phys/MDBenchmark.svg?branch=master\n   :target: https://travis-ci.org/bio-phys/MDBenchmark\n.. image:: https://codecov.io/gh/bio-phys/MDBenchmark/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/bio-phys/MDBenchmark\n\nQuickly generate, start and analyze benchmarks for GROMACS simulations. Below is\nan example of the scaling plots you can generate quickly with MDBenchmark.\n\n.. image:: https://github.com/bio-phys/MDBenchmark/blob/master/runtimes.png\n\n\nInstallation\n============\n\nYou can install MDBenchmark via pip:\n\n.. code::\n\n    pip install mdbenchmark\n\nIf you are using conda:\n\n.. code::\n\n    conda install -c conda-forge mdbenchmark\n\nUsage\n=====\n\nAfter installation, the ``mdbenchmark`` command should be available to you\nglobally. If you have installed the package in a virtual environment, make sure\nto activate that first!\n\nGenerate 10 benchmarks for our system with the GROMACS module ``gromacs/5.1.4-plumed2.3``.\n\n.. code::\n\n    mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --max-nodes 10\n\nTo run benchmarks on GPUs add the ``--gpu`` flag:\n\n.. code::\n\n    mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --max-nodes 10 --gpu\n\nYou can also create benchmarks for different versions off GROMACS:\n\n.. code::\n\n    mdbenchmark generate --name protein --module gromacs/5.1.4-plumed2.3 --module gromacs/2016.4-plumed2.3 --max-nodes 10 --gpu\n\nAfter you generated all the benchmarks, you can start them at once:\n\n.. code::\n\n    mdbenchmark start\n\nWhen the benchmark simulations have finished, you can run the analysis to\nproduce a ``CSV`` output file or a plot for direct usage (via ``--plot`` option).\n\n.. code::\n\n    mdbenchmark analyze\n\nDefining Host Templates\n=======================\n\nIt is possible to define your own host templates in addition to the ones shipped\nwith the package. A template file should have the same filename as the UNIX\ncommand ``hostname`` returns to be detected automatically. You can also specify\nthe exact template you want to use with ``--host``.\n\nHere is an example template from for the MPG cluster ``hydra``.\n\n.. code::\n\n    # @ shell=/bin/bash\n    #\n    # @ error = {{ name }}.err.$(jobid)\n    # @ output = {{ name }}.out.$(jobid)\n    # @ job_type = parallel\n    # @ node_usage = not_shared\n    # @ node = {{ n_nodes }}\n    # @ tasks_per_node = 20\n    {%- if gpu %}\n    # @ requirements = (Feature==\"gpu\")\n    {%- endif %}\n    # @ resources = ConsumableCpus(1)\n    # @ network.MPI = sn_all,not_shared,us\n    # @ wall_clock_limit = {{ formatted_time }}\n    # @ queue\n\n    module purge\n    module load {{ module }}\n\n    # run {{ module }} for {{ time }} minutes\n    poe gmx_mpi mdrun -deffnm {{ name }} -maxh {{ time / 60 }}\n\nMDBenchmark provides the following values to a template\n\n- **name**: name of benchmark\n- **gpu**: boolean if GPUs are requested\n- **module**: module to load\n- **n_nodes**: number of nodes to run on\n- **time**: program run-time in minutes\n- **formatted_time**: queuing runtime in human readable format (HH:MM:SS)\n\nTo ensure correct termination of jobs ``formatted_time`` is 5 minutes longer\nthen ``time``.\n\nMDBenchmark searches for user templates in the `xdg`_ config folders defined by\n``XDG_CONFIG_HOME`` and ``XDG_CONFIG_DIRS`` which by default are\n``$HOME/.config/MDBenchmark`` and ``/etc/xdg/MDBenchmark`` respectively. If the\nvariable ``MDBENCHMARK_TEMPLATES`` is set, the script will also search in that\ndirectory.\n\nMDBenchmark will first search in ``XDG_CONFIG_HOME`` and ``XDG_CONFIG_DIRS`` for a\nsuitable template file. This means it is possible to overwrite system-wide\ninstalled templates or templates shipped with the package.\n\n.. _xdg: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bio-phys/MDBenchmark",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdbenchmark",
    "package_url": "https://pypi.org/project/mdbenchmark/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdbenchmark/",
    "project_urls": {
      "Homepage": "https://github.com/bio-phys/MDBenchmark"
    },
    "release_url": "https://pypi.org/project/mdbenchmark/1.1.1/",
    "requires_dist": [
      "numpy (>=1.8)",
      "mdsynthesis",
      "click",
      "jinja2",
      "pandas",
      "matplotlib",
      "python-Levenshtein",
      "xdg (<2)"
    ],
    "requires_python": "",
    "summary": "mdbenchmark gromacs simulations",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16884513,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "093ff9709f7b5a67434f890e92f6574c53270537e7faf91f6d21c03beb868b22",
        "md5": "f35c49d7b0b3367007fbce5a27af4349",
        "sha256": "19b50a186ed63f37f03a1b926b8e4ce3acf14dd53a297946660d172020cb6b3e"
      },
      "downloads": -1,
      "filename": "mdbenchmark-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f35c49d7b0b3367007fbce5a27af4349",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 25856,
      "upload_time": "2018-01-20T14:32:28",
      "upload_time_iso_8601": "2018-01-20T14:32:28.591998Z",
      "url": "https://files.pythonhosted.org/packages/09/3f/f9709f7b5a67434f890e92f6574c53270537e7faf91f6d21c03beb868b22/mdbenchmark-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a06c27275443cb37948c55e4210c70eb05e15ba64cc09b4eaa3ead129436a8ed",
        "md5": "04f89134489aab05029a895a2b4037d4",
        "sha256": "7658bbf7a44496a7d376580047deccf0017bd162e2a6e2e028dc28bc2af08cc1"
      },
      "downloads": -1,
      "filename": "mdbenchmark-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "04f89134489aab05029a895a2b4037d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38744,
      "upload_time": "2018-01-20T14:32:34",
      "upload_time_iso_8601": "2018-01-20T14:32:34.757286Z",
      "url": "https://files.pythonhosted.org/packages/a0/6c/27275443cb37948c55e4210c70eb05e15ba64cc09b4eaa3ead129436a8ed/mdbenchmark-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}