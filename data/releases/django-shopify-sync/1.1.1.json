{
  "info": {
    "author": "David Burke",
    "author_email": "dburke@thelabnyc.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. role:: py(code)\n   :language: python\n\n.. default-role:: py\n\n===================\nDjango Shopify Sync\n===================\n\nThis is a maintained fork of https://github.com/discolabs/django-shopify-sync\n\nInstallation\n============\n\n1. `pip install django-shopify-sync`\n2. Add `'shopify_sync',` to `INSTALLED_APPS`\n3. In create a new shopify_sync.Session in Django admin or shell. Enter your Shopify admin API token and site name. If your domain is http://my-site.myshopify.com your site name is my-site.\n\nThis package supports Python 3.X and Django>=1.11\n\nHow to use\n==========\n\nFirst we will get some of the products from shopify\n\n.. code:: python\n\n    from shopify_sync.models import Product, Session\n    session = Session.objects.first()  # Assuming you have just one that you made previously\n    products = Product.objects.sync_all(session, query=\"For bar\")\n\n`sync_all` passes all kwargs to the `shopify_resource.find` so we can\nthen sync only the items that shopify returns from that search. Now we have all\nof the `products` stored locally. Now to update from Django\n\n.. code:: python\n\n    product = Product.objects.first()\n    product.title = \"New Bar Foo\"\n    product.save(push=True)\n\nThe `save` method on the objects also accepts the optional argument `push`\nwhich will push the updated model that is locally to Shopify. Now if a product\nwas edited on shopify through some means other than this Django app, we will\nnot have the current updated model. For this we need to sync\n\n.. code:: python\n\n    changed_product.sync()\n\nthe `changed_product` will get a local copy of the shopify_resource and then\ndo a `.reload()` on it so that we make a request to shopify. Then we sync\nthat back with our database.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/thelabnyc/django-shopify-sync",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-shopify-sync",
    "package_url": "https://pypi.org/project/django-shopify-sync/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-shopify-sync/",
    "project_urls": {
      "Homepage": "https://gitlab.com/thelabnyc/django-shopify-sync"
    },
    "release_url": "https://pypi.org/project/django-shopify-sync/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package for synchronising Django models with Shopify resources.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16981608,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "834efeb12e68be3d17d80ae6641dd8b8aeac4e8911c813707b579fe1d411a1e0",
        "md5": "e5e2c01b56d896d5c85103da2f428881",
        "sha256": "d95168b53b20c21cd8c1196c3bab81f04b155e0fe8f8acb6c8fdb18f67408dce"
      },
      "downloads": -1,
      "filename": "django-shopify-sync-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e5e2c01b56d896d5c85103da2f428881",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22082,
      "upload_time": "2019-01-07T18:01:22",
      "upload_time_iso_8601": "2019-01-07T18:01:22.415271Z",
      "url": "https://files.pythonhosted.org/packages/83/4e/feb12e68be3d17d80ae6641dd8b8aeac4e8911c813707b579fe1d411a1e0/django-shopify-sync-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}