{
  "info": {
    "author": "Mathieu Pasquet",
    "author_email": "kiorky@cryptelium.net",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Buildout",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "******************************************************************************\nRecipe for compiling and installing software with or without minitage\n******************************************************************************\n\n.. contents::\n\n=======================\nIntroduction\n=======================\n\nThe egg has those entry point:\n\n    - *wsgi*: Make a Python paste configuration file eatable by mod_wsgi with\n      all the eggs dependencies you need.\n\nYou can browse the code on minitage's following resources:\n\n    - http://git.minitage.org/git/minitage/eggs/minitage.recipe.wsgi/\n    - http://www.minitage.org/trac/browser/minitage/eggs/minitage.recipe.wsgi\n\n\n\n===============================================\nminitage.recipe.wsgi\n===============================================\n\nAbstract\n-----------------\n\n    - This recipe is inspired by collective.recipe.modwsgi but use\n      minitage code to generate  a wrapper to launch a paste configuration file, suitable for mod_mwsgi.\n    - This recipe inherit from minitage;recipe:egg.\n    - I recommend Spawning to be the WSGI server, but in the wonderful world of system administration, you\n      don't have always the choice of the final technology to use. This will help to to use mod_wsgi with\n      buildout based installations.\n\nSpecific options\n-----------------\n\n    * All the shared options and the options from minitage.recipe:egg +\n    * config-file\n        full path to the paste configuration file to use\n\n\nDetailled documentation\n-------------------------\n\nLet's create a buildout configuration file::\n\n    >>> rmdir(tempdir)\n    >>> mkdir(tempdir)\n    >>> cd(tempdir)\n    >>> a = [mkdir(d) for d in ('eggs', 'develop-eggs', 'bin', 'src')]\n    >>> install_develop_eggs(['minitage.recipe.wsgi'])\n    >>> install_eggs_from_pathes(['zc.buildout'], sys.path)\n    >>> touch('buildout.cfg')\n    >>> sh('buildout -o bootstrap')\n    buildout -o bootstrap...\n    >>> index_url = start_server(os.path.sep.join(tempdir))\n\nInitializing test env.\n+++++++++++++++++++++++\n::\n\n    >>> if os.path.exists('foo'): rmdir(foo)\n    >>> mkdir('foo')\n    >>> mkdir('foo/src/toto')\n    >>> touch('foo/setup.py', data=\"\"\"\n    ... from setuptools import setup, find_packages\n    ... setup(name='foo', version='1.0',\n    ...     packages=find_packages('src'),\n    ...     package_dir = {'': 'src'},\n    ...     include_package_data=True,\n    ...     scripts=['src/toto/toto.py'],\n    ...     entry_points={'console_scripts': ['s=toto.toto:f']},\n    ...     )\n    ... \"\"\")\n    >>> touch('foo/src/toto/__init__.py')\n    >>> touch('toto.cfg')\n    >>> touch('foo/src/toto/toto.py', data=\"\"\"\n    ... def f():\n    ...     print \"foo\"\n    ... if __name__ == '__main__' :\n    ...     print 'called'\n    ...\n    ... \"\"\")\n    >>> noecho = [os.remove(d) for d in os.listdir('.') if '.tar.gz' in d]\n    >>> os.chdir('foo')\n    >>> sh('python setup.py sdist')\n    p...\n    >>> noecho = [shutil.copy(os.path.join('dist', d), os.path.join('..', d)) for d in os.listdir('dist')]\n    >>> os.chdir('..')\n\nGenerating a mod_mwsgi friendly configuration\n+++++++++++++++++++++++++++++++++++++++++++++++++++\nDo not specify the file option.\n\n    >>> data = \"\"\"\n    ... [buildout]\n    ... download-cache=${buildout:directory}\n    ... parts = part\n    ... [part]\n    ... recipe=minitage.recipe.wsgi\n    ... config-file = toto.cfg\n    ... find-links=%(index)s\n    ... eggs=foo\n    ... \"\"\"%{'index': index_url}\n    >>> touch('buildout.cfg', data=data)\n    >>> sh('bin/buildout -vvvvv install')\n    b...\n    minitage.recipe: Generated script: '/tmp/buildout.test/parts/part/wsgi'...\n\n    >>> cat('parts', 'part', 'wsgi')\n    #!...\n    #!!! #GENERATED VIA MINITAGE.recipe !!!...\n    import sys\n    sys.path[0:0] = [ '/tmp/buildout.test/eggs/foo-1.0-py....egg', ]...\n    from paste.deploy import loadapp\n    application = loadapp(\"config:toto.cfg\")...\n\n\n=======================\nCHANGELOG\n=======================\n\n1.35\n-----\n\n    - splitted out from minitage.recipe",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://cheeseshop.python.org/pypi/minitage.recipe.wsgi",
    "keywords": "development buildout recipe",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "minitage.recipe.wsgi",
    "package_url": "https://pypi.org/project/minitage.recipe.wsgi/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/minitage.recipe.wsgi/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://cheeseshop.python.org/pypi/minitage.recipe.wsgi"
    },
    "release_url": "https://pypi.org/project/minitage.recipe.wsgi/1.35/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "zc.buildout recipes to compile and install software or python packages and generate scripts or configuration files.",
    "version": "1.35",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 794821,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06d8a03845359cb57f460f1588b32203e74f7834fe7bb388328180bd8cd06ad9",
        "md5": "70fea71dfc4deb495b5665aae8a1e69a",
        "sha256": "9fe13f94d3c64deb6493006a484d9249b5c7ef33e503d0cfce85052e3e1775a0"
      },
      "downloads": -1,
      "filename": "minitage.recipe.wsgi-1.35.zip",
      "has_sig": false,
      "md5_digest": "70fea71dfc4deb495b5665aae8a1e69a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16912,
      "upload_time": "2009-08-27T21:11:05",
      "upload_time_iso_8601": "2009-08-27T21:11:05.053359Z",
      "url": "https://files.pythonhosted.org/packages/06/d8/a03845359cb57f460f1588b32203e74f7834fe7bb388328180bd8cd06ad9/minitage.recipe.wsgi-1.35.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}