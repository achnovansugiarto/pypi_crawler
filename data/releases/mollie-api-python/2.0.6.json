{
  "info": {
    "author": "Mollie B.V.",
    "author_email": "info@mollie.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Financial"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://info.mollie.com/hubfs/github/python/logo.png\" width=\"128\" height=\"128\"/>\n</p>\n<h1 align=\"center\">Mollie API client for Python</h1>\n\n<img src=\"https://info.mollie.com/hubfs/github/python/editor-1.png\" />\n\nAccepting [iDEAL](https://www.mollie.com/en/payments/ideal/), [Bancontact/Mister Cash](https://www.mollie.com/en/payments/bancontact/), [SOFORT Banking](https://www.mollie.com/en/payments/sofort/), [Creditcard](https://www.mollie.com/en/payments/credit-card/), [SEPA Bank transfer](https://www.mollie.com/en/payments/bank-transfer/), [SEPA Direct debit](https://www.mollie.com/en/payments/direct-debit/), [Bitcoin](https://www.mollie.com/en/payments/bitcoin/), [PayPal](https://www.mollie.com/en/payments/paypal/), [Belfius Direct Net](https://www.mollie.com/en/payments/belfius/), [KBC/CBC](https://www.mollie.com/en/payments/kbc-cbc/), [paysafecard](https://www.mollie.com/en/payments/paysafecard/), [ING Home'Pay](https://www.mollie.com/en/payments/ing-homepay/), [Giftcards](https://www.mollie.com/en/payments/gift-cards/), [Giropay](https://www.mollie.com/en/payments/giropay/) and [EPS](https://www.mollie.com/en/payments/eps/) online payments without fixed monthly costs or any punishing registration procedures. Just use the Mollie API to receive payments directly on your website or easily refund transactions to your customers.\n\n[![PyPI version](https://badge.fury.io/py/mollie-api-python.svg)](http://badge.fury.io/py/mollie-api-python)\n[![Build Status](https://travis-ci.org/mollie/mollie-api-python.svg?branch=master)](https://travis-ci.org/mollie/mollie-api-python)\n\n## Requirements ##\nTo use the Mollie API client, the following things are required:\n\n+ Get yourself a free [Mollie account](https://www.mollie.com/signup). No sign up costs.\n+ Create a new [Website profile](https://www.mollie.com/dashboard/settings/profiles) to generate API keys and setup your webhook.\n+ Now you're ready to use the Mollie API client in test mode.\n+ Follow [a few steps](https://www.mollie.com/dashboard/?modal=onboarding) to enable payment methods in live mode, and let us handle the rest.\n+ Python >= 2.7\n+ Up-to-date OpenSSL (or other SSL/TLS toolkit)\n+ Mollie API client for Python has a dependency on [Requests](http://docs.python-requests.org/en/master/).\n\n## Installation ##\n**Please note:** If you are looking to install the v1 version of the Mollie API client, please refer to the [v1-develop branch](https://github.com/mollie/mollie-api-python/tree/v1-develop) for installation instructions.\n\nBy far the easiest way to install the Mollie API client is to install it with [pip](https://pip.pypa.io). The command below will install the latest released version of the client.\n```\n$ pip install mollie-api-python\n```\nYou may also git checkout or [download all the files](https://github.com/mollie/mollie-api-python/archive/master.zip), and include the Mollie API client manually.\n\nCreate and activate a Python >= 2.7 virtual environment (inside a git checkout or downloaded archive).\n\n```\n$ cd mollie-api-python\n$ python -m virtualenv env\n$ source env/bin/activate\n```\n\nInstall the requirements, then install Mollie itself.\n```\n$ pip install flask\n$ pip install -e .\n```\n\nRun the examples.\n```\nexport MOLLIE_API_KEY=test_YourApiKey\n$ python examples/app.py\n```\n\n## How to receive payments ##\n\nTo successfully receive a payment, these steps should be implemented:\n\n1. Use the Mollie API client to create a payment with the requested amount, currency, description and optionally, a payment method. It is important to specify a unique redirect URL where the customer is supposed to return to after the payment is completed.\n\n2. Immediately after the payment is completed, our platform will send an asynchronous request to the configured webhook to allow the payment details to be retrieved, so you know when exactly to start processing the customer's order.\n\n3. The customer returns, and should be satisfied to see that the order was paid and is now being processed.\n\nFind our full documentation online on [docs.mollie.com](https://docs.mollie.com).\n\n## Getting started ##\n\nImporting the Mollie API Client\n```python\nfrom mollie.api.client import Client\n``` \nInitializing the Mollie API client, and setting your API key\n\n```python\nmollie_client = Client()\nmollie_client.set_api_key('test_dHar4XY7LxsDOtmnkVtjNVWXLSlXsM')\n``` \n\nCreating a new payment.\n\n```python\npayment = mollie_client.payments.create({\n    'amount': {\n        'currency': 'EUR',\n        'value': '10.00' \n    },\n    'description': 'My first API payment',\n    'redirectUrl': 'https://webshop.example.org/order/12345/',\n    'webhookUrl': 'https://webshop.example.org/mollie-webhook/',\n})\n```\n_After creation, the payment id is available in the `payment.id` property. You should store this id with your order._\n\nAfter storing the payment id you can send the customer to the checkout using the `payment.checkout_url`.  \n\nFor a payment create example, see [Example 1 - New Payment](https://github.com/mollie/mollie-api-python/blob/master/examples/01-new-payment.py).\n\nIn general, request body parameters for an API endpoint should be added to a dictionary and provided as the first argument (or `data` keyword argument). Query string parameters can be provided as keyword arguments.\n\n## Retrieving payments ##\nWe can use the `payment.id` to retrieve a payment and check if the payment `isPaid`.\n\n```python\npayment = mollie_client.payments.get(payment.id)\n\nif payment.is_paid():\n    print('Payment received.')\n```\n\nOr retrieve a collection of payments.\n\n```python\npayments = mollie_client.payments.list()\n```\n\nFor an extensive example of listing payments with the details and status, see [Example 5 - Payments History](https://github.com/mollie/mollie-api-python/blob/master/examples/05-payments-history.py).\n\n## Payment webhook ##\n\nWhen the status of a payment changes the `webhookUrl` we specified in the creation of the payment will be called.  \nThere we can use the `id` from our POST parameters to check te status and act upon that, see [Example 2 - Webhook verification](https://github.com/mollie/mollie-api-python/blob/master/examples/02-webhook-verification.py).\n\n\n## Multicurrency ##\nSince the 2.0 version of the API (supported by version 2.0.0 of the client) non-EUR payments for your customers is now supported.\nA full list of available currencies can be found [in our documentation](https://docs.mollie.com/guides/multicurrency).\n\n```python\npayment = mollie_client.payments.create({\n    'amount': {\n        'currency': 'USD', \n        'value': '10.00'\n    },\n    'description': 'Order #12345',\n    'redirectUrl': 'https://webshop.example.org/order/12345/',\n    'webhookUrl': 'https://webshop.example.org/mollie-webhook/',\n})\n```\n_After the customer completes the payment, the `payment.settlement_amount` will contain the amount + currency that will be settled on your account._\n\n### Fully integrated iDEAL payments ###\n\nIf you want to fully integrate iDEAL payments in your web site, some additional steps are required. \nFirst, you need to retrieve the list of issuers (banks) that support iDEAL and have your customer pick the issuer \nhe/she wants to use for the payment.\n\nRetrieve the iDEAL method and include the issuers\n\n```python\nmethod = mollie_client.methods.get(mollie.api.objects.Method.IDEAL, include='issuers')\n```\n\n_`method.issuers` will be a list of Issuer objects. Use the property `id` of this object in the\n API call, and the property `name` for displaying the issuer to your customer. For a more in-depth example, see [Example 4 - iDEAL payment](https://github.com/mollie/mollie-api-python/blob/master/examples/04-ideal-payment.py)._\n\n```python\npayment = mollie_client.payments.create({\n    'amount': {\n        'currency': 'EUR', \n        'value': '10.00'\n    },\n    'description': 'My first API payment',\n    'redirectUrl': 'https://webshop.example.org/order/12345/',\n    'webhookUrl': 'https://webshop.example.org/mollie-webhook/',\n    'method': mollie.api.objects.Method.IDEAL,\n    'issuer': selectedIssuerId,  # e.g. \"ideal_INGBNL2A\"\n})\n```\nThe `payment.checkout_url` is a URL that points directly to the online banking environment of the selected issuer.\n\n### Refunding payments ###\n\nThe API also supports refunding payments. Note that there is no confirmation and that all refunds are immediate and\ndefinitive. Refunds are only supported for iDEAL, credit card, Bancontact, SOFORT Banking, PayPal, Belfius Direct Net, KBC/CBC, \nING Home'Pay and bank transfer payments. Other types of payments cannot be refunded through our API at the moment.\n\n```python\npayment = mollie_client.payments.get(payment.id)\n\n# Refund â‚¬ 2 of this payment\nrefund = mollie_client.refunds.on(payment).create({\n    'amount': {\n        'currency': 'EUR',\n        'value': '2.00'\n    }\n})\n```\n\nFor a working example, see [Example 11 - Refund payment](https://github.com/mollie/mollie-api-python/blob/master/examples/11-refund-payment.py).\n\n## API documentation ##\nIf you wish to learn more about our API, please visit the [Mollie Developer Portal](https://www.mollie.com/en/developers). API Documentation is available in English.\n\n## Want to help us make our API client even better? ##\n\nWant to help us make our API client even better? We take [pull requests](https://github.com/mollie/mollie-api-python/pulls?utf8=%E2%9C%93&q=is%3Apr), sure. But how would you like to contribute to a [technology oriented organization](https://www.mollie.com/nl/blog/post/werken-bij-mollie-als-developer/)? Mollie is hiring developers and system engineers. [Check out our vacancies](https://jobs.mollie.com/) or [get in touch](mailto:personeel@mollie.com).\n\n## License ##\n[BSD (Berkeley Software Distribution) License](https://opensource.org/licenses/bsd-license.php).\nCopyright (c) 2014-2018, Mollie B.V.\n\n## Support ##\nContact: [www.mollie.com](https://www.mollie.com) â€” info@mollie.com â€” +31 20 820 20 70",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mollie/mollie-api-python",
    "keywords": "mollie,payment,service,ideal,creditcard,mistercash,bancontact,sofort,sofortbanking,sepa,bitcoin,paypal,paysafecard,podiumcadeaukaart,banktransfer,direct debit,belfius,belfius direct net,kbc,cbc,refunds,payments,gateway,gift cards,intersolve,fashioncheque,podium cadeaukaart,yourgift,vvv giftcard,webshop giftcard,nationale entertainment card,ing homepay,klarna pay later,klarna slice it",
    "license": "BSD",
    "maintainer": "Four Digits B.V.",
    "maintainer_email": "",
    "name": "mollie-api-python",
    "package_url": "https://pypi.org/project/mollie-api-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/mollie-api-python/",
    "project_urls": {
      "Homepage": "https://github.com/mollie/mollie-api-python"
    },
    "release_url": "https://pypi.org/project/mollie-api-python/2.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mollie API client for Python",
    "version": "2.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17096133,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25779822d6552ff551614eb723ab5b2cf9f97b0f5243e4739e07d1e22a591e38",
        "md5": "f45dc66595ab30c2b93d017153bd2207",
        "sha256": "9f2ddecf74879a2ed59a595ee2f22b08b794532cb34f87b29c5b72c89e835fce"
      },
      "downloads": -1,
      "filename": "mollie-api-python-2.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "f45dc66595ab30c2b93d017153bd2207",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 153565,
      "upload_time": "2018-12-06T09:27:14",
      "upload_time_iso_8601": "2018-12-06T09:27:14.452512Z",
      "url": "https://files.pythonhosted.org/packages/25/77/9822d6552ff551614eb723ab5b2cf9f97b0f5243e4739e07d1e22a591e38/mollie-api-python-2.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}