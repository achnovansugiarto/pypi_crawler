{
  "info": {
    "author": "Innove",
    "author_email": "info@innove.it",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django-gmailapi-json-backend\nEmail backend for Django which sends email via the Gmail API through a JSON credential\n\nThe simple SMTP protocol is disabled by default for Gmail users, since this is included in the Less Secure Apps (LSA) category.\nThis package implements the Gmail API directly with a JSON Google service account as a Django email backend and can be used with 'django-mailer'.\n\n## Requirements\nPython 3.9+\n\n## Installation\nThe package is available through pip. To easily install or upgrade it, do\n```\npip install --upgrade django-gmailapi-json-backend\n```\n\n## Configuration\nIn your `settings.py`:\n1. Add the module into the INSTALLED_APPS\n    ```py\n    INSTALLED_APPS = [\n        ...\n        'django-gmailapi-json-backend',\n        ...\n    ]\n    ```\n2. Set the email backend\n    ```py\n   EMAIL_FROM = 'Company<your-email@domain.com>'\n   GMAIL_USER = 'your-email@domain.com'\n   EMAIL_BACKEND = \"gmailapi_backend.service.GmailApiBackend\"\n   GMAIL_SCOPES = ['https://www.googleapis.com/auth/gmail.send']\n   GOOGLE_SERVICE_ACCOUNT = '{\n         \"type\": \"service_account\",\n         \"project_id\": \"your-project\",\n         \"private_key_id\": \n         ...\n   }'\n    ```\n   If you use *django-mailer* as email backend you can send through gmail API as follow:\n    ```py\n   EMAIL_BACKEND = \"mailer.backend.DbBackend\"\n   MAILER_EMAIL_BACKEND = \"gmailapi_backend.service.GmailApiBackend\"\n    ```\n\n## How to create the Google service account \n1. Create a project on the developer console at https://console.cloud.google.com (it must be a Google Workspace account, not a simple gmail account)\n2. Enable the gmail api from the library menu\n3. On API and services > Credentials, create a new service account as a JSON you should use for GOOGLE_SERVICE_ACCOUNT\n4. Copy your *client id* from the menu IAM and administration > service account. Click on the service you have just created, find the unique id and copy it.\n5. Move to the administrator console at https://admin.google.com/ and choose your user (i.e. EMAIL_FROM)\n6. Go to Security > Data access and control > API controls > Delegation at domain level and add a new one with your *client id* and the services you need like *https://www.googleapis.com/auth/gmail.send* to send email through API.\n\n\n## Usage\nUse the native `EmailMessage` class in Django. Just a sample:\n```py\nmessage = render_to_string('email/ordine_pagato.html', {\n  'ordine': ordine,\n})\nmail_subject = _('This is just a sample')\nemail = EmailMessage(\n  mail_subject, message, settings.EMAIL_FROM, to=['recipient@domain.com']\n)\nemail.content_subtype = \"html\"\nemail.attach(sample_file.file.name, sample_file.file.read(), 'application/pdf')\nemail.send()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/innoveit/django-gmailapi-json-backend",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-gmailapi-json-backend",
    "package_url": "https://pypi.org/project/django-gmailapi-json-backend/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-gmailapi-json-backend/",
    "project_urls": {
      "Bug Tracker": "https://github.com/innoveit/django-gmailapi-json-backend",
      "Homepage": "https://github.com/innoveit/django-gmailapi-json-backend"
    },
    "release_url": "https://pypi.org/project/django-gmailapi-json-backend/1.6/",
    "requires_dist": [
      "django",
      "google-api-python-client",
      "google-auth-httplib2",
      "google-auth-oauthlib"
    ],
    "requires_python": ">=3.9",
    "summary": "Email backend for Django which sends email via the Gmail API through a JSON credential",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15066475,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bee7b0b4f1415161f7dda1b85e2a73fc85e3d8fdea6d7d211c5adda1202ee552",
        "md5": "a760f85ef99412b5160b97a79bbb8b8a",
        "sha256": "a943e34f1efb1c32685f43266d4bef944bba508339a4e24fb9d38aa4ea85753a"
      },
      "downloads": -1,
      "filename": "django_gmailapi_json_backend-1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a760f85ef99412b5160b97a79bbb8b8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 8531,
      "upload_time": "2022-09-09T15:04:41",
      "upload_time_iso_8601": "2022-09-09T15:04:41.450376Z",
      "url": "https://files.pythonhosted.org/packages/be/e7/b0b4f1415161f7dda1b85e2a73fc85e3d8fdea6d7d211c5adda1202ee552/django_gmailapi_json_backend-1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "306518ee214ba095c9939ac729b62526df43e3f5f9293b95928a8772761b4e8e",
        "md5": "cc6d72b5da8ed3e4c48d7d2acb4674f6",
        "sha256": "47066edbe666e7008313b0bf5c7588244ff54beb866866b74f1f3b7a7fa64e06"
      },
      "downloads": -1,
      "filename": "django-gmailapi-json-backend-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "cc6d72b5da8ed3e4c48d7d2acb4674f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 7953,
      "upload_time": "2022-09-09T15:04:42",
      "upload_time_iso_8601": "2022-09-09T15:04:42.898343Z",
      "url": "https://files.pythonhosted.org/packages/30/65/18ee214ba095c9939ac729b62526df43e3f5f9293b95928a8772761b4e8e/django-gmailapi-json-backend-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}