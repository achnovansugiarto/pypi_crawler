{
  "info": {
    "author": "Antoine Millet",
    "author_email": "antoine@inaps.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Text Processing"
    ],
    "description": "=======\nDotconf\n=======\n\nDotconf is an advanced configuration parser which allow nested sections to any\nlevel, typed values in syntax, file include and so more. Dotconf is also\nshipped with a powerful schema validation system.\n\nThe full documentation can be found here: http://dotconf.readthedocs.org\n\n.. image:: https://www.ohloh.net/p/dotconf-python/widgets/project_thin_badge.gif\n   :target: https://www.ohloh.net/p/dotconf-python?ref=sample\n\n\nFeatures\n--------\n\n- Configuration format kept as simple as possible.\n- Developer friendly APIs.\n- Types are expressed in the syntax, so the parser can guess it without\n  validation.\n- Four primitive types: string, number, boolean, or list.\n- More complex composite types can be created using the schema validation\n  system.\n- Nested section of any deep. Sections can take a special \"argument\" value\n  (look at the example).\n- Schema validation system, all schema can be defined using declarative or\n  imperative way.\n- External file include with globbing.\n- Integration with argparse.\n- Tests (only parser is covered yet)\n- Released under MIT license.\n\n\nExample\n-------\n\nThis is an example of configuration file for an imaginary web server::\n\n\n    daemon = True\n    pidfile = '/var/run/myapp.pid'\n    interface = '0.0.0.0:80'\n    interface_ssl = '0.0.0.0:443'\n\n    host 'example.org' {\n        path '/' {\n            rate_limit = 30\n        }\n    }\n\n    host 'protected.example.org' {\n        enable_ssl = yes\n\n        path '/files' {\n            enable_auth = yes\n            user 'foo' {\n                password = 'bar'\n            }\n        }\n    }\n\nYou can access to each values using the developer friendly API::\n\n    >>> from dotconf import Dotconf\n    >>> parsed_conf = Dotconf.from_file('mywebserver.conf')\n    >>> print parsed_conf.get('daemon', False)\n    True\n\n\nEven more exciting, you can create a validation schema to avoid you the\npainful chore of manual configuration file validation::\n\n    from dotconf.schema import many, once\n    from dotconf.schema.containers import Section, Value\n    from dotconf.schema.types import Boolean, Integer, Float, String\n\n    # Schema definition:\n\n    class UserSection(Section):\n        password = Value(String())\n        _meta = {'repeat': many, 'unique': True}\n\n    class PathSection(Section):\n        rate_limit = Value(Float(), default=0)\n        enable_auth = Value(Boolean(), default=False)\n        user = UserSection()\n\n    class VirtualHostSection(Section):\n        base_path = Value(String())\n        enable_ssl = Value(Boolean(), default=False)\n        path = PathSection()\n        _meta = {'repeat': many, 'unique': True}\n\n    class MyWebserverConfiguration(Section):\n        daemon = Value(Boolean()default=False)\n        pidfile = Value(String(), default=None)\n        interface = Value(String(), default='127.0.0.1:80')\n        interface_ssl = Value(String(), default='127.0.0.1:443')\n        host = VirtualHostSection()\n\nThen you can use the API exactly as if it was not validated::\n\n    >>> from dotconf import Dotconf\n    >>> from myconfschema import MyWebserverConfiguration\n    >>> parsed_conf = Dotconf(conf, schema=MyWebserverConfiguration)\n    >>> print 'daemon:', parsed_conf.get('daemon')\n    daemon: True\n    >>> for vhost in parsed_conf.subsections('host'):\n    >>>     print vhost.args[0]\n    >>>     if vhost.get('enable_ssl'):\n    >>>         print '  SSL enabled'\n    >>>     for path in vhost.subsections('path'):\n    >>>         print '  ' + path.args[0]\n    >>>         if path.get('enable_auth'):\n    >>>             print '    Following users can access to this directory:'\n    >>>             for user in path.subsections('user'):\n    >>>                 print '     - ' + user.args[0]\n    >>>\n    example.org\n      /\n    protected.example.org\n      SSL enabled\n      /files\n        Following users can access to this directory:\n          - foo\n\nSetup\n-----\n\nThe fastest and more common way to install Dotconf is using pip::\n\n    pip install dotconf\n\nDebian\n~~~~~~\n\nIf you use Debian, you can also use the Tecknet repositories. Add this lines\nin your ``/etc/apt/source.list`` file::\n\n    deb http://debian.tecknet.org/debian squeeze tecknet\n    deb-src http://debian.tecknet.org/debian squeeze tecknet\n\nAdd the Tecknet repositories key in your keyring:\n\n    # wget http://debian.tecknet.org/debian/public.key -O - | apt-key add -\n\nThen, update and install::\n\n    # aptitude update\n    # aptitude install python-dotconf\n\nArchlinux\n~~~~~~~~~\n\nIf you use Archlinux, a Dotconf package is available in Aur::\n\n    yaourt -S python2-dotconf\n\n\nTODO\n----\n\n- More test.\n\n\nChangelog\n---------\n\nv1.6 released on 09/12/12\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis second stable release bring some bug fixes and features, the API has not\nbeen broken. I also registered the project on travis-ci and I will try to\nimprove the test coverage for the next release.\n\nChanges:\n\n- Added Choice container\n- Added a from_filename constructor the the Dotconf class\n- Added encoding management (by default, files are parsed in UTF-8)\n- Added continuous integration with travis\n- Fixed bug with Float type validation\n- Fixed an error when a section is included by an external file (thanks to\n  DuanmuChun for its bug report and help to fix it)\n- Fixed other minor bugs\n\nNew contributors:\n\n- DuanmuChun (bug report and help to fix it)\n\nv1.5 released on 14/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFirst stable release of Dotconf has been released, development will now take\ncare of API compatibility. The project status has been changed to \"Beta\" on the\nPYPI, and should be \"Stable\" on the next release if no major bug is found.\nPackages will be updated for Debian and Archlinux, feel free to contact me if\nyou want to package it for your distro.\n\nChanges:\n\n- Added Eval, NamedRegex and RegexPattern types\n- Added TypedArray container\n- Fixed bug with scalar values from a singleton list in Value container\n- Fixed argument validation in Section container\n- Updated documentation (new tips and tricks section)\n\nNew contributors:\n\n- AnaÃ«l Beutot (thanks for RegexPattern type and argument validation fix)\n\nv0.4 released on 07/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added debian package\n- Added IPSocketAddress type\n- Added Array container\n- Added release procedure\n- Fixed bug on IPAddress and IPNetwork types when ipaddr is missing\n- Fixed documentation build\n\nv0.3 released on 04/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added IPAddress, IPNetwork, Regex and Url types\n- Added min and max options on Integer type\n- Added units on number parsing (42k == 42000)\n- Fixed bug with validation of long numbers\n\nv0.2 released on 03/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added argparse integration feature & documentation\n- Cleanup\n\nv0.1 released on 24/03/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Initial version.\n\n\nA note on versioning\n--------------------\n\nDotconf use a two numbers X.Y versioning. The Y part is incremented by one on\neach release. The X part is used as API compatibility indicator and will be\nincremented each time the API is broken.\n\n\nContribute\n----------\n\nYou can contribute to Dotconf through these ways:\n\n- Main Git repository: https://idevelop.org/p/dotconf/source/tree/master/\n- Bitbucket: https://bitbucket.org/NaPs/dotconf\n- Github: https://github.com/NaPs/Dotconf\n\nFeel free to contact me for any question/suggestion: <antoine@inaps.org>.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://idevelop.org/p/dotconf/",
    "keywords": "configuration parser dotconf conf",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dotconf",
    "package_url": "https://pypi.org/project/dotconf/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dotconf/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://idevelop.org/p/dotconf/"
    },
    "release_url": "https://pypi.org/project/dotconf/1.6/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Advanced configuration parser for Python",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 860219,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bcb7274436bb23f6b482a48a9a505d6f556a32631cda2f49457467a9b8c1053",
        "md5": "e8eb94f812c6e2e3c6b11451e41ee704",
        "sha256": "536f94ef2c78144a8273d33f77218548fb2572df0c99ac9be10ab76c70b48fb0"
      },
      "downloads": -1,
      "filename": "dotconf-1.6-py2.7.egg",
      "has_sig": false,
      "md5_digest": "e8eb94f812c6e2e3c6b11451e41ee704",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 35815,
      "upload_time": "2012-12-09T15:35:23",
      "upload_time_iso_8601": "2012-12-09T15:35:23.022273Z",
      "url": "https://files.pythonhosted.org/packages/2b/cb/7274436bb23f6b482a48a9a505d6f556a32631cda2f49457467a9b8c1053/dotconf-1.6-py2.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d9a8c98c80ffb9423c73f9dd700164bca5f636f819f3d852163bc90d6ce9dc3",
        "md5": "065eeebc83ad8b2c32ab3eedb400bf65",
        "sha256": "18ae12a027390535ccf35eabf68c4829b73e317ae0e4e30bff65ae0f4db5eb26"
      },
      "downloads": -1,
      "filename": "dotconf-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "065eeebc83ad8b2c32ab3eedb400bf65",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26563,
      "upload_time": "2012-12-09T15:35:21",
      "upload_time_iso_8601": "2012-12-09T15:35:21.637695Z",
      "url": "https://files.pythonhosted.org/packages/1d/9a/8c98c80ffb9423c73f9dd700164bca5f636f819f3d852163bc90d6ce9dc3/dotconf-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}