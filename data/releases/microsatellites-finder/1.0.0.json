{
  "info": {
    "author": "Loris Mularoni",
    "author_email": "loris.mularoni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.4"
    ],
    "description": "Microsatellites Finder\n======================\nThis program searches for microsatellites in fasta sequences.  \nThe available options are the following:  \n\n- ``-i, --input-fasta``: path of the fasta file containing the sequence(s) to analyze. The file can be either a plain text file or a gzip compressed file.  \n- ``-o, --output-file``: path of the file to save with the results of the analysis. The coordinates of the microsatellites will be 0-based.    \n- ``-l, --seed-length``: length of the seed of the microsatellites, i.e. the number of nucleotides that will be repeated. For instance `-l 2` will find microsatellites like ``ACACACAC`` where the seed ``AC`` is repeated 4 times.  \n- ``-r, --minimum_repetitions``: minimum number of repetitions of the seed. For instance ``-r 3`` will find microsatellites like ``CTACTACTA`` or ``CTACTACTACTA`` where the seed ``CTA`` is repeated at least 3 times. The minimum allowed value is 2 and the default value is 3.  \n- ``-im, --imperfect``: include imperfect microsatellites. With this option microsatellites repeated at least ``-r -1`` times that share the same seed and have a distance up to the \"--imperfect\" value will be merged together and will be considered as a single microsatellite. By default this option is disabled and microsatellites are kept separated.  \n- ``-a, --alphabet``: alphabet to use for the microsatellites search. The alphabet can be either **dna** for DNA or **aa** for PROTEINS. Default is \"dna\".\n- ``-c, --cores``: number of CPUs to use in the computation. By default it will use all the available CPUs.  \n- ``-p, --progress``: track the progress of the computation with a progress bar.  \n\n\nRequirements:\n-------------\n- Python 3.4\n\n\nInstallation:\n-------------\n- ``pip install macrosatellites_finder``\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://bitbucket.org/batterio/microsatellites_finder/get/1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/batterio/microsatellites_finder/",
    "keywords": "repeats,microsatellites",
    "license": "The MIT License (MIT)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "microsatellites_finder",
    "package_url": "https://pypi.org/project/microsatellites_finder/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/microsatellites_finder/",
    "project_urls": {
      "Download": "https://bitbucket.org/batterio/microsatellites_finder/get/1.0.0.tar.gz",
      "Homepage": "https://bitbucket.org/batterio/microsatellites_finder/"
    },
    "release_url": "https://pypi.org/project/microsatellites_finder/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python package that searches for microsatellites in fasta sequences",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4468751,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23326e9c76dc8cec49ff4029cd3210c68d5f3574f6d60255af66ea6b3b8c35e3",
        "md5": "6c4cad6f826571369c05df375b622cc2",
        "sha256": "ed74270116e27777787ca349a581b8804312e5e644d7c4fa7f4d7458d1f9cabf"
      },
      "downloads": -1,
      "filename": "microsatellites_finder-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6c4cad6f826571369c05df375b622cc2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5814,
      "upload_time": "2015-08-26T22:12:21",
      "upload_time_iso_8601": "2015-08-26T22:12:21.868303Z",
      "url": "https://files.pythonhosted.org/packages/23/32/6e9c76dc8cec49ff4029cd3210c68d5f3574f6d60255af66ea6b3b8c35e3/microsatellites_finder-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}