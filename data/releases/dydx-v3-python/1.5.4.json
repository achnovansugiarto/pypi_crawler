{
  "info": {
    "author": "dYdX Trading Inc.",
    "author_email": "contact@dydx.exchange",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\"><img src=\"https://s3.amazonaws.com/dydx-assets/dydx_logo_black.svg\" width=\"256\" /></p>\n\n<div align=\"center\">\n  <a href=\"https://circleci.com/gh/dydxprotocol/workflows/dydx-v3-python/tree/master\">\n    <img src=\"https://img.shields.io/circleci/project/github/dydxprotocol/dydx-v3-python.svg?token=089b73e1b03736647446c0d80057bc8609790e2d\" alt='CI' />\n  </a>\n  <a href='https://pypi.org/project/dydx-v3-python'>\n    <img src='https://img.shields.io/pypi/v/dydx-v3-python.svg' alt='PyPI'/>\n  </a>\n  <a href='https://github.com/dydxprotocol/dydx-v3-python/blob/master/LICENSE'>\n    <img src='https://img.shields.io/github/license/dydxprotocol/dydx-v3-python.svg' alt='License' />\n  </a>\n</div>\n<br>\n\nPython client for dYdX (v3 API).\n\nThe library is currently tested against Python versions 2.7, 3.4, 3.5, and 3.6\n\n## Installation\n\nThe `dydx-v3-python` package is available on [PyPI](https://pypi.org/project/dydx-v3-python). Install with `pip`:\n\n```bash\npip install dydx-v3-python\n```\n\n## Getting Started\n\nThe `Client` object can be created with different levels of authentication depending on which features are needed. For more complete examples, see the [examples](./examples/) directory, as well as [the integration tests](./integration_tests/).\n\n### Public endpoints\n\nNo authentication information is required to access public endpoints.\n\n```python\nfrom dydx3 import Client\nfrom web3 import Web3\n\n#\n# Access public API endpoints.\n#\npublic_client = Client(\n    host='http://localhost:8080',\n)\npublic_client.public.get_markets()\n```\n\n### Private endpoints\n\nOne of the following is required:\n* `api_key_credentials`\n* `eth_private_key`\n* `web3`\n* `web3_account`\n* `web3_provider`\n\n```python\n#\n# Access private API endpoints, without providing a STARK private key.\n#\nprivate_client = Client(\n    host='http://localhost:8080',\n    api_key_credentials={ 'key': '...', ... },\n)\nprivate_client.private.get_orders()\nprivate_client.private.create_order(\n    # No STARK key, so signatures are required for orders and withdrawals.\n    signature='...',\n    # ...\n)\n\n#\n# Access private API endpoints, with a STARK private key.\n#\nprivate_client_with_key = Client(\n    host='http://localhost:8080',\n    api_key_credentials={ 'key': '...', ... },\n    stark_private_key='...',\n)\nprivate_client.private.create_order(\n    # Order will be signed using the provided STARK private key.\n    # ...\n)\n```\n\n### Onboarding and API key management endpoints\n\nOne of the following is required:\n* `eth_private_key`\n* `web3`\n* `web3_account`\n* `web3_provider`\n\n```python\n#\n# Onboard a new user or manage API keys, without providing private keys.\n#\nweb3_client = Client(\n    host='http://localhost:8080',\n    web3_provider=Web3.HTTPProvider('http://localhost:8545'),\n)\nweb3_client.onboarding.create_user(\n    stark_public_key='...',\n    ethereum_address='...',\n)\nweb3_client.eth_private.create_api_key(\n    ethereum_address='...',\n)\n\n#\n# Onboard a new user or manage API keys, with private keys.\n#\nweb3_client_with_keys = Client(\n    host='http://localhost:8080',\n    stark_private_key='...',\n    eth_private_key='...',\n)\nweb3_client_with_keys.onboarding.create_user()\nweb3_client_with_keys.eth_private.create_api_key()\n```\n\n### Using the C++ Library for STARK Signing\n\nBy default, STARK curve operations such as signing and verification will use the Python native implementation. These operations occur whenever placing an order or requesting a withdrawal. To use the C++ implementation, initialize the client object with `crypto_c_exports_path`:\n\n```python\nclient = Client(\n    crypto_c_exports_path='./libcrypto_c_exports.so',\n    ...\n)\n```\n\nThe path should point to a C++ shared library file, built from Starkware's `crypto-cpp` library ([CMake target](https://github.com/starkware-libs/crypto-cpp/blob/601de408bee9f897315b8a5cb0c88e2450a91282/src/starkware/crypto/ffi/CMakeLists.txt#L3)) for the particular platform (e.g. Linux, etc.) that you are running your trading program on.\n\n## Running tests\n\nIf you want to run tests when developing the library locally, clone the repo and run:\n\n```\npip install -r requirements.txt\ndocker-compose up # In a separate terminal\nV3_API_HOST=<api-host> tox\n```\n\nNOTE: `api-host` should be `https://api.stage.dydx.exchange` to test in staging.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dydxprotocol/dydx-v3-python",
    "keywords": "dydx exchange rest api defi ethereum eth",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dydx-v3-python",
    "package_url": "https://pypi.org/project/dydx-v3-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/dydx-v3-python/",
    "project_urls": {
      "Homepage": "https://github.com/dydxprotocol/dydx-v3-python"
    },
    "release_url": "https://pypi.org/project/dydx-v3-python/1.5.4/",
    "requires_dist": [
      "dateparser (==1.0.0)",
      "ecdsa (==0.16.0)",
      "eth-keys",
      "eth-account (<0.6.0,>=0.4.0)",
      "mpmath (==1.0.0)",
      "pytest (<5.0.0,>=4.4.0)",
      "requests-mock (==1.6.0)",
      "requests (<3.0.0,>=2.22.0)",
      "setuptools (==50.3.2)",
      "sympy (==1.6)",
      "tox (==3.13.2)",
      "web3 (<6.0.0,>=5.0.0)"
    ],
    "requires_python": "",
    "summary": "dYdX Python REST API for Limit Orders",
    "version": "1.5.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16595635,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdda04df184165cd1ac7116920d599e7d8d85155a8c436dac20b5a35a2977002",
        "md5": "b39f4957475f13f02e4d6d2b102469c2",
        "sha256": "821feb07168e605cb01a09d9515085536b01b05efa03d3f7ff6f4b4a3c9ba7fc"
      },
      "downloads": -1,
      "filename": "dydx_v3_python-1.5.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b39f4957475f13f02e4d6d2b102469c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 108963,
      "upload_time": "2022-05-24T20:52:56",
      "upload_time_iso_8601": "2022-05-24T20:52:56.179230Z",
      "url": "https://files.pythonhosted.org/packages/bd/da/04df184165cd1ac7116920d599e7d8d85155a8c436dac20b5a35a2977002/dydx_v3_python-1.5.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d64f5dfeb754399bd6aba7c2acc191945e8cbe67c74c2b0ab649dc41e37b027",
        "md5": "f0a7bdb70958a8237f77bddac3e0d98b",
        "sha256": "a1c7dc9440ca34f4e43a460d75f2442c1577f5b9393f6e53880dc54a3e2d1698"
      },
      "downloads": -1,
      "filename": "dydx-v3-python-1.5.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f0a7bdb70958a8237f77bddac3e0d98b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 87762,
      "upload_time": "2022-05-24T20:52:57",
      "upload_time_iso_8601": "2022-05-24T20:52:57.626989Z",
      "url": "https://files.pythonhosted.org/packages/5d/64/f5dfeb754399bd6aba7c2acc191945e8cbe67c74c2b0ab649dc41e37b027/dydx-v3-python-1.5.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}