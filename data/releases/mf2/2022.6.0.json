{
  "info": {
    "author": "Sander van Rijn",
    "author_email": "s.j.van.rijn@liacs.leidenuniv.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# MF2: Multi-Fidelity-Functions\n\n| Package Info | Status | Support |\n|--------------|--------|---------|\n| [![PyPI version](https://badge.fury.io/py/mf2.svg)](https://badge.fury.io/py/mf2) | [![Build Status](https://app.travis-ci.com/sjvrijn/mf2.svg?branch=main)](https://app.travis-ci.com/sjvrijn/mf2) | [![Documentation Status](https://readthedocs.org/projects/mf2/badge/?version=latest)][docs-badge] |\n| [![Conda](https://img.shields.io/conda/v/conda-forge/mf2)](https://anaconda.org/conda-forge/mf2) | [![Coverage Status](https://coveralls.io/repos/github/sjvrijn/mf2/badge.svg?branch=master)](https://coveralls.io/github/sjvrijn/mf2?branch=master) | [![Gitter](https://badges.gitter.im/pymf2/community.svg)][gitter-badge] |\n| ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mf2) | [![Codacy Badge](https://api.codacy.com/project/badge/Grade/54144e7d406b4558a14996b06a89adf8)](https://www.codacy.com/manual/sjvrijn/mf2?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=sjvrijn/mf2&amp;utm_campaign=Badge_Grade) | |\n| [![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) | [![Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active) | |\n| [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4540752.svg)](https://doi.org/10.5281/zenodo.4540752) | [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/4231/badge)](https://bestpractices.coreinfrastructure.org/projects/4231) | |\n| [![status](https://joss.theoj.org/papers/2575e93fc693c5c3bfa8736c60c35398/status.svg)](https://joss.theoj.org/papers/2575e93fc693c5c3bfa8736c60c35398) | | |\n\n## Introduction\n\nThe `mf2` package provides consistent, efficient and tested Python\nimplementations of a variety of multi-fidelity benchmark functions. The goal is\nto simplify life for numerical optimization researchers by saving time otherwise\nspent reimplementing and debugging the same common functions, and enabling\ndirect comparisons with other work using the same definitions, improving\nreproducibility in general.\n\nA multi-fidelity function usually reprensents an objective which should be\noptimized. The term 'multi-fidelity' refers to the fact that multiple versions\nof the objective function exist, which differ in the accuracy to describe the\nreal objective. A typical real-world example would be the aerodynamic\nefficiency of an airfoil, e.g., its drag value for a given lift value. The\ndifferent fidelity levels are given by the accuracy of the evaluation method\nused to estimate the efficiency. Lower-fidelity versions of the objective\nfunction refer to less accurate, but simpler approximations of the objective,\nsuch as computational fluid dynamic simulations on rather coarse meshes,\nwhereas higher fidelity levels refer to more accurate but also much more\ndemanding evaluations such as prototype tests in wind tunnels. The hope of\nmulti-fildelity optimization approaches is that many of the not-so-accurate but\nsimple low-fidelity evaluations can be used to achieve improved results on the\nrealistic high-fidelity version of the objective where only very few\nevaluations can be performed.\n\nThe only dependency of the mf2 package is the `numpy` package.\n\nDocumentation is available at [mf2.readthedocs.io][docs]\n\n## Installation\n\nThe recommended way to install `mf2` is with Python's `pip`:\n```\npython3 -m pip install --user mf2\n```\nor alternatively using `conda`:\n```\nconda install -c conda-forge mf2\n```\n\nFor the latest version, you can install directly from source:\n```\npython3 -m pip install --user https://github.com/sjvrijn/mf2/archive/master.zip\n```\n\nTo work in your own version locally, it is best to clone the repository first,\nand additionally install the dev-requirements:\n```\ngit clone https://github.com/sjvrijn/mf2.git\ncd mf2\npython3 -m pip install --user -e .[dev]\n```\n\n## Example Usage\n\n```python\nimport mf2\nimport numpy as np\n\n# set numpy random seed for reproducibility\nnp.random.seed(42)\n# generate 5 random samples in 2D as matrix\nX = np.random.random((5, 2))\n\n# print high fidelity function values\nprint(mf2.branin.high(X))\n# Out: array([36.78994906 34.3332972  50.48149005 43.0569396  35.5268224 ])\n\n# print low fidelity function values\nprint(mf2.branin.low(X))\n# Out: array([-5.8762639  -6.66852889  3.84944507 -1.56314141 -6.23242223])\n```\n\nFor more usage examples, please refer to the full documentation on\n[readthedocs][docs].\n\n## Contributing\n\nContributions to this project such as bug reports or benchmark function\nsuggestions are more than welcome! Please [refer to ``CONTRIBUTING.md``] for more\ndetails.\n\n## Contact\n\nThe [Gitter][gitter] channel is the preferred way to get in touch for any other\nquestions, comments or discussions about this package.\n\n## Citation\n\nWas this package useful to you? Great! If this leads to a publication, we'd\nappreciate it if you would cite our [JOSS paper]:\n\n```\n@article{vanRijn2020,\n  doi = {10.21105/joss.02049},\n  url = {https://doi.org/10.21105/joss.02049},\n  year = {2020},\n  publisher = {The Open Journal},\n  volume = {5},\n  number = {52},\n  pages = {2049},\n  author = {Sander van Rijn and Sebastian Schmitt},\n  title = {MF2: A Collection of Multi-Fidelity Benchmark Functions in Python},\n  journal = {Journal of Open Source Software}\n}\n```\n\n\n[docs]:               https://mf2.readthedocs.io/en/latest/\n[docs-badge]:         https://mf2.readthedocs.io/en/latest/?badge=latest\n[gitter]:             https://gitter.im/pymf2/community\n[gitter-badge]:       https://gitter.im/pymf2/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n[new-issue]:          https://github.com/sjvrijn/mf2/issues/new\n[pytest-regressions]: https://github.com/ESSS/pytest-regressions\n[JOSS paper]:         https://joss.theoj.org/papers/10.21105/joss.02049\n[refer to ``CONTRIBUTING.md``]: https://github.com/sjvrijn/mf2/blob/master/CONTRIBUTING.md\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sjvrijn/mf2",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mf2",
    "package_url": "https://pypi.org/project/mf2/",
    "platform": null,
    "project_url": "https://pypi.org/project/mf2/",
    "project_urls": {
      "Homepage": "https://github.com/sjvrijn/mf2"
    },
    "release_url": "https://pypi.org/project/mf2/2022.6.0/",
    "requires_dist": [
      "numpy",
      "hypothesis[numpy] ; extra == 'dev'",
      "matplotlib ; extra == 'dev'",
      "pandas ; extra == 'dev'",
      "pyprojroot ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-regressions ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "A collection of analytical benchmark functions in multiple fidelities",
    "version": "2022.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14072054,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1755dabb101c8cf25c4b0aa178a3dda7ffd3e9423daada79abd28a9278c801f7",
        "md5": "54a003f26182af5658f410ef9d128611",
        "sha256": "54b2364cb3f0a792f697baf47d8a7b3354f0088e2cdadef124883adb2016a3bc"
      },
      "downloads": -1,
      "filename": "mf2-2022.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54a003f26182af5658f410ef9d128611",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 41409,
      "upload_time": "2022-06-08T17:09:28",
      "upload_time_iso_8601": "2022-06-08T17:09:28.470913Z",
      "url": "https://files.pythonhosted.org/packages/17/55/dabb101c8cf25c4b0aa178a3dda7ffd3e9423daada79abd28a9278c801f7/mf2-2022.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c9749e6d2f793d547a5acc5deed3e2e74a8ee4b2702884a06b681615c57aa1b",
        "md5": "6bf6552652ec3471851863243340deb3",
        "sha256": "6edab8cf9b10379a6c9b5201a1cae60a23ed997be5e168b5bc32423d087e4f37"
      },
      "downloads": -1,
      "filename": "mf2-2022.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6bf6552652ec3471851863243340deb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 38811,
      "upload_time": "2022-06-08T17:09:30",
      "upload_time_iso_8601": "2022-06-08T17:09:30.040482Z",
      "url": "https://files.pythonhosted.org/packages/8c/97/49e6d2f793d547a5acc5deed3e2e74a8ee4b2702884a06b681615c57aa1b/mf2-2022.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}