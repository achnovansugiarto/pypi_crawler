{
  "info": {
    "author": "k1R4",
    "author_email": "srijiith@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "deathnot3\n====\n\n## Description\ndeathnot3 was created as a wrapper for pwntools, but with the addition of the \"l1ght\" submodule, it aims to be a lightweight alternative to pwntools\nwhile providing majority of the essential functionality for exploit scripts.\ndeathnot3 aims to:\n - allow strings and bytes interchageably\n - be lightweight\n - provide basic automation\n - be an all around pwn helper for CTFs\n\n## Requirements\nSupports: Python 3.6+\n\nLibrary Dependency:\n- pwntools\n- zstandard\n- unix_ar\n- requests\n- wget\n\n## Usage\n\n ```py\n  from dn3 import *\n  from pwn import ELF\n\n  binary = ELF(\"./binary\")\n  libc = ELF(\"./libc.so.6\")\n\n  context.mode = str      \n  # recv in string. Can also be set to bytes\n  \n  io = process(\"./binary\")\n  DeathNot3(io, libc=libc) # Initialize deathnot3\n  \n  reu(\"yeet\")              # equivalent of io.recvuntil()\n  sl(b\"leet\")              # equivalent of io.sendline()\n  sla(\"yeet\",8)            # equivalent of io.sendlineafter()\n  s(\"bruh\")                # equivalent of io.send()\n  # bytes, string and integers can be used interchageably to send\n  \n  sl(p64(0xdeadbeef))      # equivalent of p64() but returns string\n  sla(\"oof\", flat([\n\t  0xdeadbeef,\"ABCD\"    # equivalent of flat() but returns string\n\t  ])\n  \n  libc = libcleak(\"puts\")  # Offset integer can be given instead of symbol\n  # Equivalent to\n  # libc = unpack(io.recv(6),48) - libc.symbols.puts\n  # log.info(\"Libc -> %s\" % hex(libc)\n  \n  interactive()             # equivalent of io.interactive()\n  ```\n\n - CLI\n \n\t**`dn3 template <binary_path> -l <libc_path> -r <ip>:<port>`**\n\t - used to generate template exploit on the go, based on a template format\n\t - edit config using `dn3 config` and specify template format url or path (if path prefix with `local:`)\n\t - [example template format](https://raw.githubusercontent.com/k1R4/deathnot3/v1.0.0/template.py)\n\t \n\t**`dn3 linker <binary_path> -l <libc_path>`**\n\t - Find appropriate dynamic linker for given libc and patch binary with it and provided libc using `patchelf`\n\n    **`dn3 config <key(optional)>`**\n     - Edit dn3's config\n     - Config is located at `~/.dn3.conf`\n\n## TODO\n - [ ] Implement ELF similar to that of pwntools\n - [ ] Implement buffering for process, remote\n - [ ] Add automation\n    - [ ] static vulnerability detection\n    - [ ] ret2win\n    - [ ] ret2shellcode\n    - [ ] ret2libc/ROP\n    - [ ] tcache poisoning\n - [ ] Add documentation to wiki\n - [ ] Add support for big endian\n - [ ] Add support for arm based architectures\n    - [ ] aarch64\n    - [ ] arm\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/k1R4/deathnot3/",
    "keywords": "pwn",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dn3",
    "package_url": "https://pypi.org/project/dn3/",
    "platform": null,
    "project_url": "https://pypi.org/project/dn3/",
    "project_urls": {
      "Homepage": "https://github.com/k1R4/deathnot3/"
    },
    "release_url": "https://pypi.org/project/dn3/1.0.0/",
    "requires_dist": [
      "pwntools",
      "zstandard",
      "unix-ar",
      "wget",
      "requests"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Lightweight alternative to pwntools",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17221565,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6a0e281840d32d9157667f5570ac3828fb723e687309f90cafbec69f65e1d57",
        "md5": "080255b77ed32352882669b7ce5431aa",
        "sha256": "dbb756440d05edeb839219d667ae012d9f11e7646880d6f63d445d0e82105738"
      },
      "downloads": -1,
      "filename": "dn3-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "080255b77ed32352882669b7ce5431aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 16620,
      "upload_time": "2022-11-15T16:38:25",
      "upload_time_iso_8601": "2022-11-15T16:38:25.382303Z",
      "url": "https://files.pythonhosted.org/packages/d6/a0/e281840d32d9157667f5570ac3828fb723e687309f90cafbec69f65e1d57/dn3-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bf218d2dd44662a699514dd5f2027a2a3740c7592944c6b7eb72fad8b6418ea",
        "md5": "9a8ab9fae2630616c807e9a422f81600",
        "sha256": "999ad3500368be32a1b5bba7ee63d9c884b4ea7505fa5ff356c66efa916e95c8"
      },
      "downloads": -1,
      "filename": "dn3-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9a8ab9fae2630616c807e9a422f81600",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 13783,
      "upload_time": "2022-11-15T16:38:31",
      "upload_time_iso_8601": "2022-11-15T16:38:31.004386Z",
      "url": "https://files.pythonhosted.org/packages/2b/f2/18d2dd44662a699514dd5f2027a2a3740c7592944c6b7eb72fad8b6418ea/dn3-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}