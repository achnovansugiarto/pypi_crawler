{
  "info": {
    "author": "Alex Tzonkov",
    "author_email": "alex.tzonkov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![PyPI](https://badge.fury.io/py/mmpy-bot.svg)](https://pypi.org/project/mmpy-bot/)\n[![Travis-Ci](https://travis-ci.com/attzonko/mmpy_bot.svg?branch=master)](https://travis-ci.com/attzonko/mmpy_bot)\n[![Codacy](https://api.codacy.com/project/badge/grade/b06f3af1d8a04c6faa9a76a4ae3cb483)](https://www.codacy.com/app/attzonko/mmpy_bot)\n[![Maintainability](https://api.codeclimate.com/v1/badges/809c8d66aea982d9e3da/maintainability)](https://codeclimate.com/github/attzonko/mmpy_bot/maintainability)\n[![Python Support](https://img.shields.io/pypi/pyversions/mmpy-bot.svg)](https://pypi.org/project/mmpy-bot/)\n[![Mattermost](https://img.shields.io/badge/mattermost-4.0+-blue.svg)](http://www.mattermost.org)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](https://pypi.org/project/mmpy-bot/)\n\nDocumentation available at [Read the Docs](http://mmpy_bot.readthedocs.org/).\n\n\n## What is This\n\nA python based chat bot for [Mattermost](http://www.mattermost.org).\n\n## Features\n\n* Based on Mattermost [WebSocket API(V4.0.0)](https://api.mattermost.com)\n* Simple plugins mechanism\n* Messages can be handled concurrently\n* Automatically reconnect to Mattermost when connection is lost\n* Python3 Support\n\n\n## Compatibility\n\n|    Mattermost    |  mmpy_bot   |\n|------------------|:-----------:|\n|     >= 4.0       |  > 1.2.0    |\n|     <  4.0       | unsupported |\n\n\n## Installation\n\n```\npip install mmpy_bot\n```\n\n## Usage\n\n### Registration\n\nFirst you need create the mattermost email/password for your bot.\n\nFor use all API(V4.0.0), you need add bot user to system admin group to avoid 403 error.\n\n### Configuration\n\nThen you need to configure the `BOT_URL`, `BOT_LOGIN`, `BOT_PASSWORD`, `BOT_TEAM` in a python module\n`mmpy_bot_settings.py`, which must be located in a python import path.\n\n\nmmpy_bot_settings.py:\n\n```python\nSSL_VERIFY = True  # Whether to perform SSL cert verification\nBOT_URL = 'http://<mm.example.com>/api/v4'  # with 'http://' and with '/api/v4' path. without trailing slash.\nBOT_LOGIN = '<bot-email-address>'\nBOT_PASSWORD = '<bot-password>'\nBOT_TOKEN = None # or '<bot-personal-access-token>' if you have set bot personal access token.\nBOT_TEAM = '<your-team>'  # possible in lowercase\nWEBHOOK_ID = '<bot-webhook-id>' # otherwise the bot will attempt to create one\n```\n\nAlternatively, you can use the environment variable `MATTERMOST_BOT_URL`,\n`MATTERMOST_BOT_LOGIN`, `MATTERMOST_BOT_PASSWORD`, `MATTERMOST_BOT_TEAM`,\n`MATTERMOST_BOT_SSL_VERIFY`, `MATTERMOST_BOT_TOKEN`\n\nor `MATTERMOST_BOT_SETTINGS_MODULE` environment variable, which provide settings module\n\n```bash\nMATTERMOST_BOT_SETTINGS_MODULE=settings.bot_conf mmpy_bot\n```\n\n\n### Run the bot\n\nUse the built-in cli script and point to your custom settings file.\n\n```bash\nMATTERMOST_BOT_SETTINGS_MODULE=mmpy_bot_settings mmpy_bot\n```\n\nor you can create your own startup file. For example `run.py`:\n\n```python\nfrom mmpy_bot.bot import Bot\n\n\nif __name__ == \"__main__\":\n    Bot().run()\n```\n\nNow you can talk to your bot in your mattermost client!\n\n\n\n## Attachment Support\n\n```python\nfrom mmpy_bot.bot import respond_to\n\n\n@respond_to('webapi')\ndef webapi_reply(message):\n    attachments = [{\n        'fallback': 'Fallback text',\n        'author_name': 'Author',\n        'author_link': 'http://www.github.com',\n        'text': 'Some text here ...',\n        'color': '#59afe1'\n    }]\n    message.reply_webapi(\n        'Attachments example', attachments,\n        username='Mattermost-Bot',\n        icon_url='https://goo.gl/OF4DBq',\n    )\n    # Optional: Send message to specified channel\n    # message.send_webapi('', attachments, channel_id=message.channel)\n```\n\n*Integrations must be allowed for non admins users.*\n\n\n## File Support\n\n```python\nfrom mmpy_bot.bot import respond_to\n\n\n@respond_to('files')\ndef message_with_file(message):\n    # upload_file() can upload only one file at a time\n    # If you have several files to upload, you need call this function several times.\n    file = open('test.txt')\n    result = message.upload_file(file)\n    file.close()\n    if 'file_infos' not in result:\n        message.reply('upload file error')\n    file_id = result['file_infos'][0]['id']\n    # file_id need convert to array\n    message.reply('hello', [file_id])\n```\n\n\n## Plugins\n\nA chat bot is meaningless unless you can extend/customize it to fit your own use cases.\n\nTo write a new plugin, simply create a function decorated by `mmpy_bot.bot.respond_to` or `mmpy_bot.bot.listen_to`:\n\n- A function decorated with `respond_to` is called when a message matching the pattern is sent to the bot (direct message or @botname in a channel/group chat)\n- A function decorated with `listen_to` is called when a message matching the pattern is sent on a channel/group chat (not directly sent to the bot)\n\n```python\nimport re\n\nfrom mmpy_bot.bot import listen_to\nfrom mmpy_bot.bot import respond_to\n\n\n@respond_to('hi', re.IGNORECASE)\ndef hi(message):\n    message.reply('I can understand hi or HI!')\n\n\n@respond_to('I love you')\ndef love(message):\n    message.reply('I love you too!')\n\n\n@listen_to('Can someone help me?')\ndef help_me(message):\n    # Message is replied to the sender (prefixed with @user)\n    message.reply('Yes, I can!')\n\n    # Message is sent on the channel\n    # message.send('I can help everybody!')\n```\n\nTo extract params from the message, you can use regular expression:\n```python\nfrom mmpy_bot.bot import respond_to\n\n\n@respond_to('Give me (.*)')\ndef give_me(message, something):\n    message.reply('Here is %s' % something)\n```\n\nIf you would like to have a command like 'stats' and 'stats start_date end_date', you can create reg ex like so:\n\n```python\nfrom mmpy_bot.bot import respond_to\nimport re\n\n\n@respond_to('stat$', re.IGNORECASE)\n@respond_to('stat (.*) (.*)', re.IGNORECASE)\ndef stats(message, start_date=None, end_date=None):\n    pass\n```\n\nIf you don't want to expose some bot commands to public, you can add `@allowed_users()` or `@allowed_channels()` like so:\n\n```python\n@respond_to('^admin$')\n@allow_only_direct_message() #only trigger by direct message, remove this line if you want call this in channel\n@allowed_users('Your username or email address here','user@email.com') # List of usernames or e-mails allowed\n@allowed_channels('allowed_channel_1','allowed_channel_2')  # List of allowed channels\ndef users_access(message):\n    pass\n```\nKeep in mind the order matters! `@respond_to()` and `@listen_to()`must come before the \"allowed\" decorators.\n\n\nAnd add the plugins module to `PLUGINS` list of mmpy_bot settings, e.g. mmpy_bot_settings.py:\n\n```python\nPLUGINS = [\n    'mmpy_bot.plugins',\n    'devops.plugins',          # e.g. git submodule:  domain:devops-plugins.git\n    'programmers.plugins',     # e.g. python package: package_name.plugins\n    'frontend.plugins',        # e.g. project tree:   apps.bot.plugins\n]\n```\n*For example you can separate git repositories with plugins on your team.*\n\n\nIf you are migrating from `Slack` to the `Mattermost`, and previously you are used `SlackBot`,\nyou can use this battery without any problem. On most cases your plugins will be working properly\nif you are used standard API or with minimal modifications.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/attzonko/mmpy_bot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmpy-bot",
    "package_url": "https://pypi.org/project/mmpy-bot/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmpy-bot/",
    "project_urls": {
      "Homepage": "https://github.com/attzonko/mmpy_bot"
    },
    "release_url": "https://pypi.org/project/mmpy-bot/1.3.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python based chat bot for [Mattermost](http://www.mattermost.org).",
    "version": "1.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17491382,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6906014b437f392ec55bc5b2a1344fefa47bdc99ce20853833624b9795659b99",
        "md5": "7f587e7b4b31614c59be7beedd603582",
        "sha256": "ea3ee0f2149c55bbf03be9dc8cbe5fa4b4bfe01878bf4d2932458004f443eee0"
      },
      "downloads": -1,
      "filename": "mmpy_bot-1.3.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f587e7b4b31614c59be7beedd603582",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18451,
      "upload_time": "2021-02-17T20:59:26",
      "upload_time_iso_8601": "2021-02-17T20:59:26.427185Z",
      "url": "https://files.pythonhosted.org/packages/69/06/014b437f392ec55bc5b2a1344fefa47bdc99ce20853833624b9795659b99/mmpy_bot-1.3.7-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b72c25ff9751322315bc0c36919759d30d10e605f4df14e55c1819ebe7c04ad9",
        "md5": "0231926b2dec46b3234f46d4aee0bb85",
        "sha256": "aa4e59f2a3387c51fe8cda2c215542445fcfde1a9f2c74fb398681c8a0ed3f65"
      },
      "downloads": -1,
      "filename": "mmpy_bot-1.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "0231926b2dec46b3234f46d4aee0bb85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37250,
      "upload_time": "2021-02-17T20:59:31",
      "upload_time_iso_8601": "2021-02-17T20:59:31.896710Z",
      "url": "https://files.pythonhosted.org/packages/b7/2c/25ff9751322315bc0c36919759d30d10e605f4df14e55c1819ebe7c04ad9/mmpy_bot-1.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}