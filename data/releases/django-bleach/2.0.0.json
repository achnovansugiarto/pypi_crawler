{
  "info": {
    "author": "Tim Heap",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "django-bleach - Bleach and sanitise user HTML\n=============================================\n\n.. image:: https://readthedocs.org/projects/django-bleach/badge/?version=latest\n   :target: https://django-bleach.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: http://img.shields.io/pypi/v/django-bleach.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-bleach/\n    :alt: Latest Version\n\n.. image:: http://img.shields.io/pypi/l/django-bleach.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-bleach/\n    :alt: License\n\n|\n\n.. image:: https://codecov.io/gh/marksweb/django-bleach/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/marksweb/django-bleach\n\n.. image:: https://api.codacy.com/project/badge/Grade/c34f923ab0a84a6f96728866c749d511\n   :alt: Codacy Badge\n   :target: https://app.codacy.com/app/marksweb/django-bleach?utm_source=github.com&utm_medium=referral&utm_content=marksweb/django-bleach&utm_campaign=Badge_Grade_Dashboard\n\n.. image:: https://results.pre-commit.ci/badge/github/marksweb/django-bleach/master.svg\n   :target: https://results.pre-commit.ci/latest/github/marksweb/django-bleach/master\n   :alt: pre-commit.ci status\n\n.. image:: http://img.shields.io/pypi/dm/django-bleach.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-bleach/\n    :alt: Downloads\n\n|\n\nBleach_ is a Python module that takes any HTML input, and returns\nvalid, sanitised HTML that contains only an allowed subset of HTML tags,\nattributes and styles. ``django-bleach`` is a Django app that makes using\n``bleach`` extremely easy.\n\n`Read the documentation here`_.\n\nSetup\n-----\n\n1. Install ``django-bleach`` via ``pip``::\n\n    pip install django-bleach\n\n2. Add ``django-bleach`` to your ``INSTALLED_APPS``:\n\n   .. code-block:: python\n\n        INSTALLED_APPS = [\n            # ...\n            'django_bleach',\n            # ...\n        ]\n\n3. Select some sensible defaults for the allowed tags, attributes and styles;\n   and the behaviour when unknown tags are encountered. Each of these are\n   optional, and default to using the ``bleach`` defaults. See the\n   `bleach documentation`_:\n\n   .. code-block:: python\n\n        # Which HTML tags are allowed\n        BLEACH_ALLOWED_TAGS = ['p', 'b', 'i', 'u', 'em', 'strong', 'a']\n\n        # Which HTML attributes are allowed\n        BLEACH_ALLOWED_ATTRIBUTES = ['href', 'title', 'style']\n\n        # Which CSS properties are allowed in 'style' attributes (assuming\n        # style is an allowed attribute)\n        BLEACH_ALLOWED_STYLES = [\n            'font-family', 'font-weight', 'text-decoration', 'font-variant']\n\n        # Strip unknown tags if True, replace with HTML escaped characters if\n        # False\n        BLEACH_STRIP_TAGS = True\n\n        # Strip comments, or leave them in.\n        BLEACH_STRIP_COMMENTS = False\n\n4. Select the default widget for bleach fields. This defaults to\n   ``django.forms.Textarea``, but you will probably want to replace it with a\n   WYSIWYG editor, or something similar:\n\n   .. code-block:: python\n\n        # Use the CKEditorWidget for bleached HTML fields\n        BLEACH_DEFAULT_WIDGET = 'wysiwyg.widgets.WysiwygWidget'\n\n   I use `django-ckeditor`_ in my projects, but what you use is up to you.\n\nUsage\n-----\n\nIn your models\n**************\n\n``django-bleach`` provides three ways of creating bleached output. The simplest\nway of including user-editable HTML content that is automatically sanitised is\nby using the ``BleachField`` model field:\n\n.. code-block:: python\n\n    # in app/models.py\n\n    from django import models\n    from django_bleach.models import BleachField\n\n    class Post(models.Model):\n\n        title = models.CharField()\n        content = BleachField()\n\n        # ...\n\n``BleachField`` takes the following arguments, to customise the output of\n``bleach``. See the `bleach documentation`_ for their use:\n\n* ``allowed_tags``\n* ``allowed_attributes``\n* ``allowed_styles``\n* ``strip_tags``\n* ``strip_comments``\n\nIn addition to the ``bleach``-specific arguments, the ``BleachField`` model field\naccepts all of the normal field attributes. Behind the scenes, it is a\n``TextField``, and accepts all the same arguments as the default ``TextField`` does.\n\nThe ``BleachField`` model field sanitises its value before it is saved to the\ndatabase and is marked safe so it can be immediately rendered in a template\nwithout further intervention.\n\nIn model forms, ``BleachField`` model field are represented with the\n``BleachField`` form field by default.\n\nIn your forms\n*************\n\nA ``BleachField`` form field is provided. This field sanitises HTML input from\nthe user, and presents safe, clean HTML to your Django application and the\nreturned value is marked safe for immediate rendering.\n\nIn your templates\n*****************\n\nIf you have a piece of content from somewhere that needs to be printed in a\ntemplate, you can use the ``bleach`` filter:\n\n.. code-block:: django\n\n    {% load bleach_tags %}\n\n    {{ some_unsafe_content|bleach }}\n\nIf filter has no arguments it uses default settings defined in your\napplication settings. You can override allowed tags by specifying them\nas a parameter to the filter:\n\n.. code-block:: django\n\n    {{ some_unsafe_content|bleach:\"p,span\" }}\n\nThere is also ``bleach_linkify`` which uses the linkify_ function of bleach\nwhich converts URL-like strings in an HTML fragment to links\n\nThis function converts strings that look like URLs, domain names and email\naddresses in text that may be an HTML fragment to links, while preserving:\n\n1. links already in the string\n2. urls found in attributes\n3. email addresses\n\n\n.. _bleach: https://github.com/mozilla/bleach\n.. _Read the documentation here: https://django-bleach.readthedocs.io/\n.. _bleach documentation: https://bleach.readthedocs.io/en/latest/clean.html\n.. _django-ckeditor: https://github.com/shaunsephton/django-ckeditor\n.. _linkify: https://bleach.readthedocs.io/en/latest/linkify.html?highlight=linkify#bleach.linkify \"linkify\"\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marksweb/django-bleach",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Mark Walker",
    "maintainer_email": "theshow+django-bleach@gmail.com",
    "name": "django-bleach",
    "package_url": "https://pypi.org/project/django-bleach/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-bleach/",
    "project_urls": {
      "Homepage": "https://github.com/marksweb/django-bleach"
    },
    "release_url": "https://pypi.org/project/django-bleach/2.0.0/",
    "requires_dist": [
      "bleach (<5,>=1.5.0)",
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Easily use bleach with Django models and templates",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15380484,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a45283dffadb5e2353d08297d6ce7321646eae8c8e5eaeb4a21e044de849ecc",
        "md5": "5df63ee7be2ddb4f0269f1a50ddbc876",
        "sha256": "64c935a418d3f4984951332aefb23096219e189ed87aefa18778cdb0238a2a74"
      },
      "downloads": -1,
      "filename": "django_bleach-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5df63ee7be2ddb4f0269f1a50ddbc876",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13385,
      "upload_time": "2022-04-08T16:31:40",
      "upload_time_iso_8601": "2022-04-08T16:31:40.931693Z",
      "url": "https://files.pythonhosted.org/packages/8a/45/283dffadb5e2353d08297d6ce7321646eae8c8e5eaeb4a21e044de849ecc/django_bleach-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4198baa343a18668f9594ba546dc47f6a4862cd40a74fb364a1562853fdb1e31",
        "md5": "6bcd7c6cc2952363ccecf9dcc2b96ea8",
        "sha256": "377102902d84c52fda320389aeb5225336fd8d3067d8095651eb1443813c650f"
      },
      "downloads": -1,
      "filename": "django-bleach-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6bcd7c6cc2952363ccecf9dcc2b96ea8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20817,
      "upload_time": "2022-04-08T16:31:42",
      "upload_time_iso_8601": "2022-04-08T16:31:42.155000Z",
      "url": "https://files.pythonhosted.org/packages/41/98/baa343a18668f9594ba546dc47f6a4862cd40a74fb364a1562853fdb1e31/django-bleach-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}