{
  "info": {
    "author": "Braden Mars",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: MicroPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "\n# Micropy Cli [![PyPI][pypi-img]][pypi-url] [![PyPI - Python Version][pypiv-img]][pypi-url] [![Travis (.com)][travis-img]][travis-url] [![Coverage Status][cover-img]][cover-url]\n\n\nMicropy Cli is a project management/generation tool for writing [Micropython](https://micropython.org/) code in modern IDEs such as VSCode.\nIts primary goal is to automate the process of creating a workspace complete with:\n\n* **Linting** compatible with Micropython\n* VSCode **Intellisense**\n* **Autocompletion**\n* Dependency Management (_WIP_)\n* VCS Compatibility\n\n<!-- Command line Application for automating Micropython project creation in Visual Studio Code. -->\n\n<p align='center'>\n    <img width='725' src='.github/img/micropy.svg' alt=\"Micropy Demo SVG\">\n</p>\n\n[pypi-img]: https://img.shields.io/pypi/v/micropy-cli.svg?style=popout-square\n[pypi-url]: https://pypi.org/project/micropy-cli/\n[pypiv-img]: https://img.shields.io/pypi/pyversions/micropy-cli.svg?style=popout-square\n[travis-img]: https://img.shields.io/travis/com/BradenM/micropy-cli/master.svg?style=popout-square\n[travis-url]: https://travis-ci.com/BradenM/micropy-cli\n[cover-img]: https://coveralls.io/repos/github/BradenM/micropy-cli/badge.svg\n[cover-url]: https://coveralls.io/github/BradenM/micropy-cli\n\n## Installation\n\nYou can download and install the latest version of this software from the Python package index (PyPI) as follows:\n\n`pip install --upgrade micropy-cli`\n\n## Usage\n\n```sh\nUsage: micropy [OPTIONS] COMMAND [ARGS]...\n\n  CLI Application for creating/managing Micropython Projects.\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  init   Create new Micropython Project\n  stubs  Manage Micropy Stubs\n```\n\n### Creating a Project\n\nCreating a new project folder is as simple as:\n\n1. Executing `micropy init <PROJECT NAME>`\n2. Selecting your target device/firmware\n3. Boom. Your workspace is ready.\n\n#### Micropy Project Environment\n\nWhen creating a project with `micropy-cli`, two special items are added:\n\n* A `.micropy/` folder\n* A `micropy.json` file\n\nThe `.micropy/` contains symlinks from your project to your `$HOME/.micropy/stubs` folder. By doing this, micropy can reference the required stub files for your project as relative to it, rather than using absolute paths to `$HOME/.micropy`. How does this benefit you? Thanks to this feature, you can feel free to push common setting files such as `settings.json` and `.pylint.rc` to your remote git repository. This way, others who clone your repo can achieve a matching workspace in their local environment.\n\n> Note: The generated `.micropy/` folder should be *IGNORED* by your VCS. It is created locally for each environment via the `micropy.json` file.\n\nThe `micropy.json` file contains information micropy needs in order to resolve your projects required files when other clone your repo. Think of it as a `package.json` for micropython.\n\n#### Cloning a Micropy Environment\n\nTo setup a Micropy environment locally, simply:\n\n* Install `micropy-cli`\n* Navigate to the project directory\n* Execute `micropy`\n\nMicropy will automatically configure and install any stubs required a project thanks to its `micropy.json` file.\n\n### Stub Management\n\nStub files are the magic behind how micropy allows features such as linting, Intellisense, and autocompletion to work. To achieve the best results with MicropyCli, its important that you first add the appropriate stubs for the device/firmware your project uses.\n\n> Note: When working in a micropy project, all stub related commands will also be executed on the active project. (i.e if in a project and you run `micropy stubs add <stub-name>`, then that stub retrieved AND added to the active project.)\n\n#### Adding Stubs\n\nAdding stubs to Micropy is a breeze. Simply run: `micropy stubs add <STUB_NAME>`\nBy sourcing [micropy-stubs](https://github.com/BradenM/micropy-stubs), MicroPy has several premade stub packages to choose from.\n\nThese packages generally use the following naming schema:\n\n`<device>-<firmware>-<version>`\n\nFor example, running `micropy stubs add esp32-micropython-1.11.0` will install the following:\n* Micropython Specific Stubs\n* ESP32 Micropython v1.11 Device Specific Stubs\n* Frozen Modules for both device and firmware\n\nYou can search stubs that are made available to Micropy via `micropy stubs search <QUERY>`\n\nAlternatively, using `micropy stubs add <PATH>`, you can manually add stubs to Micropy.\nFor manual stub generation, please see [Josvel/micropython-stubber](https://github.com/Josverl/micropython-stubber).\n\n#### Creating Stubs\n\nUsing `micropy stubs create <PORT/IP_ADDRESS>`, MicropyCli can automatically generate and add stubs from any Micropython device you have on hand. This can be done over both USB and WiFi.\n\n\n#### Viewing Stubs\n\nTo list stubs you have installed, simply run `micropy stubs list`.\n\nTo search for stubs for your device, use `micropy stubs search <QUERY>`.\n\n\n## Acknowledgements\n\n### Micropython-Stubber\n[Josvel/micropython-stubber](https://github.com/Josverl/micropython-stubber)\n\nJosverl's Repo is full of information regarding Micropython compatibility with VSCode and more. To find out more about how this process works, take a look at it.\n\nmicropy-cli and [micropy-stubs](https://github.com/BradenM/micropy-stubs) depend on micropython-stubber for its ability to generate frozen modules, create stubs on a pyboard, and more.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BradenM/micropy-cli",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropy-cli",
    "package_url": "https://pypi.org/project/micropy-cli/",
    "platform": "",
    "project_url": "https://pypi.org/project/micropy-cli/",
    "project_urls": {
      "Homepage": "https://github.com/BradenM/micropy-cli"
    },
    "release_url": "https://pypi.org/project/micropy-cli/1.1.1/",
    "requires_dist": [
      "click",
      "questionary",
      "rshell",
      "jsonschema",
      "jinja2",
      "requests",
      "tqdm",
      "colorama ; platform_system == \"Windows\""
    ],
    "requires_python": ">=3.6.0",
    "summary": "Command line Application for automating Micropython project     setup and management in Visual Studio Code.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17460010,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b9d60f5b2632d8340f6b9670bf56ac1b45300e70d2281433ac103e8aa77d6fa",
        "md5": "3395bc10da888a18b53ddaf79362e4e4",
        "sha256": "c688a5fb45783b84a2bace2a72b4d6115c7927e73504c468cd5ae3444c777a3d"
      },
      "downloads": -1,
      "filename": "micropy_cli-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3395bc10da888a18b53ddaf79362e4e4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 414407,
      "upload_time": "2019-07-17T08:11:27",
      "upload_time_iso_8601": "2019-07-17T08:11:27.804155Z",
      "url": "https://files.pythonhosted.org/packages/3b/9d/60f5b2632d8340f6b9670bf56ac1b45300e70d2281433ac103e8aa77d6fa/micropy_cli-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c8bce0767737bd66c8157e6e96a8122405d5c563efc959fc1ed6535e6a3604a",
        "md5": "e26dccf1991da5ddbc5bcfe9b41c6de9",
        "sha256": "7219c79988a1424ad8494f1465ceebc85eaea5728ad79ad4a67aa971c93afa70"
      },
      "downloads": -1,
      "filename": "micropy-cli-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e26dccf1991da5ddbc5bcfe9b41c6de9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 210630,
      "upload_time": "2019-07-17T08:11:30",
      "upload_time_iso_8601": "2019-07-17T08:11:30.126817Z",
      "url": "https://files.pythonhosted.org/packages/0c/8b/ce0767737bd66c8157e6e96a8122405d5c563efc959fc1ed6535e6a3604a/micropy-cli-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}