{
  "info": {
    "author": "Coumes Quentin",
    "author_email": "coumes.quentin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Python package](https://github.com/qcoumes/django-http-method/workflows/Python%20package/badge.svg)](https://github.com/qcoumes/django-http-method/actions/)\n[![codecov](https://codecov.io/gh/qcoumes/django-http-method/branch/master/graph/badge.svg)](https://codecov.io/gh/qcoumes/django-http-method)\n[![CodeFactor](https://www.codefactor.io/repository/github/qcoumes/django-http-method/badge)](https://www.codefactor.io/repository/github/qcoumes/django-http-method)\n[![PyPI Version](https://badge.fury.io/py/django-http-method.svg)](https://badge.fury.io/py/django-http-method)\n[![Python 3.5+](https://img.shields.io/badge/python-3.5+-brightgreen.svg)](#)\n[![Django 1.8, 1.10+, 2+, 3+](https://img.shields.io/badge/django-1.8%2C%201.10+%2C%20%202.0+%2C%203.0+-brightgreen.svg)](#)\n[![License MIT](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://github.com/qcoumes/django-http-method/blob/master/LICENSE)\n\n# django-http-method\nProvide a workaround to use different method than GET or POST inside HTML forms in django templates. Works only with Class Based View.\n\n## Installation\nFrom source code:\n\n    python setup.py install\n\nFrom pip:\n\n    pip install django-http-method\n\n## Usage\n\n##### Add *django_http_method* to your settings.INSTALLED_APPS\n\n```python\nINSTALLED_APPS = (\n    [...],\n    django_http_method,\n    [...],\n)\n```\n\n##### Add the mixin to a CBV\n\n```python\nfrom django.views.generic import View\nfrom django_http_method import HttpMethodMixin\n\nclass TestView(HttpMethodMixin, View):\n\t\n\tdef get(self, request):\n\t\tpass\n\t\n\tdef delete(self, request):\n\t\tpass\n\t\n\tdef put(self, request):\n\t\tpass\n\t\n\t[...]\n```\n\n##### In your template, load *http_method* and use `{% http_[method] %}` in your forms:\n```html\n{% load http_method %}\n\n<form action=\"/\" method=\"post\">\n    {% csrf_token %}\n    {% http_put %}\n    [...]\n    <button type=\"submit\">Send a PUT request</button>\n</form>\n\n\n<form action=\"/\" method=\"post\">\n    {% csrf_token %}\n    {% http_patch %}\n    [...]\n    <button type=\"submit\">Send a PATCH request</button>\n</form>\n```\n\nThe corresponding method of your View will now be called. For instance, if `{% http_put %}` was used, then `TestView.put()` will be called and any request parameter will be in `request.PUT`.\n\n----------------------------\n\n# Changelog\n\n\n#### 1.1.1\n\n* Now use Github action for testing and deployment\n\n### 1.1.0\n\n* Dropped python 3.4 support\n* Now support django 3.0\n\n\n#### 1.0.2\n\n* Added `pyaml` to setup requirement.\n\n\n#### 1.0.1\n\n* Now use `yaml.safe_load()` instead of `yaml.load()`\n* Added python 3.7 and django 2.1 to test matrix\n\n\n## 1.0.0\n\n* Initial release for python3.4+ and django1.8, 1.10, 1.11 and 2.0+ \n\n\n### 0.4.0\n\n* Will now search for parameters in body for methods PUT and PATCH\n* Method will default to request.method if '_method' parameter was not found\n\n\n#### 0.3.2\n\n* Added end slash '/' at the end of HTML input in templatetags\n\n\n### 0.3.0\n\n* Removing '_method' from request parameters",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qcoumes/django-http-method",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-http-method",
    "package_url": "https://pypi.org/project/django-http-method/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-http-method/",
    "project_urls": {
      "Homepage": "https://github.com/qcoumes/django-http-method"
    },
    "release_url": "https://pypi.org/project/django-http-method/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provide a workaround to use different method from GET or POST inside HTML forms",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11890226,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55a692fff2a63f9cde9bd265cffd33380eaeaad7cc91eaa3f1fd71280b9e77a7",
        "md5": "d9ba0aba0c493f97cc4d4e68f967b6d2",
        "sha256": "d10761449c8c0afd4bc9bc59c2d0da47500ceb961753728716092308f73209c4"
      },
      "downloads": -1,
      "filename": "django-http-method-1.1.1.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "d9ba0aba0c493f97cc4d4e68f967b6d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8143,
      "upload_time": "2020-05-04T15:30:47",
      "upload_time_iso_8601": "2020-05-04T15:30:47.270450Z",
      "url": "https://files.pythonhosted.org/packages/55/a6/92fff2a63f9cde9bd265cffd33380eaeaad7cc91eaa3f1fd71280b9e77a7/django-http-method-1.1.1.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}