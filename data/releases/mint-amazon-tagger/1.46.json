{
  "info": {
    "author": "Jeff Prouty",
    "author_email": "jeff.prouty@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Financial"
    ],
    "description": "# Mint Transactions Tagger for Amazon Purchases\n\n## Overview ##\n\nDo you order a lot from Amazon? Tired of everything showing up as \"Amazon\"\nw/ category \"Shopping\"? Then this tool is for you!\n\nThis tool *does not* save your username or password. It uses a tool call Selenium to drive a clean Chromium browser, which will then use the given Mint and Amazon credentials to log in as you, and then \"drive\" thought all the edits for you.\n\nThis tool *does not* require an Amazon store card/Visa. All you need is to pay for\nyour Amazon orders with an account that is sync'ed with Mint. For example, if\nyou alternate between 5 different credit cards to pay for purchases on your\nAmazon account, only the transactions from credit cards sync'ed with Mint will\nget tagged.\n\nThis tool takes Amazon order reports and merges it with your existing Mint\ntransactions. If it finds exact matches, it will either:\n\n- Update the transaction description/category if there was only 1 item\n- Split the transaction, one line-item per item in the order\n\nThe tagger will try to guess the best Mint category for you. It does this by\nlooking at each item's category from the Amazon Items report. Look at\n`category.py` to see which Amazon categories map to which Mint categories.\n\nAfter running the tagger, if you are not happy with the category,\nsimply change it! Next time you run the tagger, it will attempt to remember\nyour past personalized category and apply it to future purchases of the same\nitem. Caveats: this only works if item names match exactly. also, you must\nchange all (or the majority of) all the past, tagged examples of that item.\nie. if you only change 1 example and you have 10 purchases of that same item\nit will take whatever the most common category used for that item.\n\nThe tagger will _NOT_ retag or touch transactions that have already been\ntagged. So feel free to adjust categories after the fact without fear that the\nnext run will wipe everything out. However, if you _DO_ want to re-tag\npreviously tagged transactions, take a look at --retag_changed and\n--prompt_retag arguments.\n\nSome things the tagger cannot do:\n\n- Amazon credit card award points are not reported anywhere in the order/item reports.\n- Amazon gift cards are not yet supported (see #59)\n\n## Install and Getting started ##\n\n### EASIEST - Pre-built binaries ###\n\nPlease download the latest version from [github's releases page](https://github.com/jprouty/mint-amazon-tagger/releases)\n\n### ADVANCED - Run from python source ###\n\n#### Setup ####\n\n1. `pip3 install mint-amazon-tagger`\n\n2. To get the latest from time to time, update your version:\n`pip3 install --upgrade mint-amazon-tagger`\n\n3. Chromedriver should be fetched automatically. But if you run into issues,\ntry this:\n```\n# Mac:\nbrew tap homebrew/cask\nbrew cask install chromedriver\n\n# Ubuntu/Debian:\n# See also: https://askubuntu.com/questions/539498/where-does-chromedriver-install-to\nsudo apt-get install chromium-chromedriver\n```\n\n#### Running - Full Auto GUI ####\n\nThis mode will fetch your Amazon Order History for you as well as tag mint.\n\n1. `mint-amazon-tagger`\n\n1. Plug in all your info into the app!\n\n#### Running - Full Auto CLI ####\n\nThis mode will fetch your Amazon Order History for you as well as tag mint.\n\n1. `mint-amazon-tagger-cli --amazon_email email@cool.com --mint_email couldbedifferent@aol.com`\n\n#### Running - Semi-Auto ####\n\nThis mode requires you to fetch your Amazon Order History manually, then the\ntagger automates the rest.\n\n1. Generate and download your Amazon Order History Reports.\n\na. Login and visit [Amazon Order History\nReports](https://www.amazon.com/gp/b2b/reports)\n\nb. \"Request Report\" for \"Items\", \"Orders and shipments\", and \"Refunds\". Make sure the\ndate ranges are the same.\n\nc. Download the completed reports. Let's called them\n`Items.csv Orders.csv Refunds.csv` for this walk-through. Note that\nRefunds is optional! Yay.\n\n2. (Optional) Do a dry run! Make sure everything looks right first. Run:\n`mint-amazon-tagger-cli --items_csv Items.csv --orders_csv Orders.csv --refunds_csv Refunds.csv --dry_run --mint_email yourEmail@here.com`\n\n3. Now perform the actual updates, without `--dry_run`:\n`mint-amazon-tagger-cli --items_csv Items.csv --orders_csv Orders.csv --refunds_csv Refunds.csv --mint_email yourEmail@here.com`\n\n4. Sit back and relax! The run time depends on the speed of your machine,\nquality of internet connection, and total number of transactions. For\nreference, my machine did about 14k Mint transactions, finding 2k Amazon\nmatches in under 10 minutes.\n\nTo see all options, see:\n`mint-amazon-tagger-cli --help`\n\n## Tips and Tricks ##\n\nNot every bank treats Amazon purchases the same, or processes transactions as quickly as others. If you're having a low match rate (look at the terminal output after completion), then try adjusting some of the command line flags. To see a complete list, run `mint-amazon-tagger-cli --help`.\n\nSome common options to try:\n\n* --mint_input_include_inferred_description. This allows for more generous consideration of Mint transactions for matching. See [more context here](https://github.com/jprouty/mint-amazon-tagger/issues/50)\n* --mint_input_include_user_description. Similar to above; considers the current description as shown in the Mint tool (including any user edits).\n* --max_days_between_payment_and_shipping. If your bank is slow at posting payments, adjusting this value up to 7 or more will increase your chance of matching. If you have a high volume of purchases, this can increase your chance of mis-tagging items.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jprouty/mint-amazon-tagger",
    "keywords": "amazon mint tagger transactions order history",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mint-amazon-tagger",
    "package_url": "https://pypi.org/project/mint-amazon-tagger/",
    "platform": null,
    "project_url": "https://pypi.org/project/mint-amazon-tagger/",
    "project_urls": {
      "Homepage": "https://github.com/jprouty/mint-amazon-tagger"
    },
    "release_url": "https://pypi.org/project/mint-amazon-tagger/1.46/",
    "requires_dist": [
      "PyQt5",
      "mock",
      "oathtool",
      "outdated",
      "progress",
      "psutil",
      "range-key-dict",
      "readchar",
      "requests",
      "selenium",
      "selenium-requests"
    ],
    "requires_python": ">=3",
    "summary": "Fetches your Amazon order history and matching/tags your Mint transactions",
    "version": "1.46",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17046248,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f5e527adf00f9f17cbc77d8f1598cc48efefe1de6bcb7ce453979639f657ff9",
        "md5": "b9ed6621c1c26349a432e2282a669425",
        "sha256": "f8d372f79138e1f1f03d7c1666942823132766a97b9c831fe0ca3fc82e5afbb8"
      },
      "downloads": -1,
      "filename": "mint_amazon_tagger-1.46-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9ed6621c1c26349a432e2282a669425",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 68665,
      "upload_time": "2022-06-22T21:12:35",
      "upload_time_iso_8601": "2022-06-22T21:12:35.116055Z",
      "url": "https://files.pythonhosted.org/packages/5f/5e/527adf00f9f17cbc77d8f1598cc48efefe1de6bcb7ce453979639f657ff9/mint_amazon_tagger-1.46-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd3350be99e39e3b667d1d153011d1561fadd6f6e8f64b66f6f895cab4bb38b3",
        "md5": "e15406d94cfd67984baf0a8df1deade0",
        "sha256": "b6b07b71901bb7c794e798df3dc9cf9dcbd53c870dbbd38aef352a85768d0c0c"
      },
      "downloads": -1,
      "filename": "mint-amazon-tagger-1.46.tar.gz",
      "has_sig": false,
      "md5_digest": "e15406d94cfd67984baf0a8df1deade0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 61805,
      "upload_time": "2022-06-22T21:12:36",
      "upload_time_iso_8601": "2022-06-22T21:12:36.745235Z",
      "url": "https://files.pythonhosted.org/packages/fd/33/50be99e39e3b667d1d153011d1561fadd6f6e8f64b66f6f895cab4bb38b3/mint-amazon-tagger-1.46.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}