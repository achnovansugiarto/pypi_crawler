{
  "info": {
    "author": "Jeff Prouty",
    "author_email": "jeff.prouty@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Financial"
    ],
    "description": "# Mint Transactions Tagger for Amazon Purchases\n\n## Overview ##\n\nDo you order a lot from Amazon? Tired of everything showing up as \"Amazon\"\nand category \"Shopping\" in mint.com? Then this tool is for you!\n\nThis tool requests \"Amazon Order History Reports\" on your behalf and matches\nyour order history with your Mint transactions. If it finds an exact matches\nit will either:\n\n- Update the transaction description and category if there was only 1 item\n- Itemize the transaction - one line-item per item in the order (via Mint transaction splits)\n\nThe tagger will try to guess the best Mint category for you. The tool will\nlookup the best category via each item's UNSPSC category code. See\n`category.py` for the UNSPSC code to Mint category mappings.\n\nIf the tool chooses poor categories for your transactions simply change it! The next time you run the tool it will remember your past personalized category edits and attempt to apply it to future purchases of the same\nitem. This only works if the item names match exactly. Also, you must\nchange all (or the majority of) all the past, tagged examples of that item for the tool to pick up the hint. Put another way: if you only change 1 past transaction and you have 10 purchases of that same item the tool will take whatever the most common category used for that item.\n\nThis tool **will not** retag or touch transactions that have already been\ntagged. Feel free to adjust categories after the fact without fear that the\nnext run will wipe everything out. If you do want to re-tag\npreviously tagged transactions take a look at the retag_changed option.\n\nThis tool **does not** save your username or password. The tool is powered by the [Selenium framework](https://www.selenium.dev/) to automate an instance of the Chrome/Chromium browser. When running the tool it will prompt for the username and password and then enter it into the browser for you. There are options that allow for manual user operation of the login flows for both Mint and Amazon.\n\nThis tool **does not** require an Amazon store card/Visa. All you need is to pay for your Amazon orders with an account that is synchronized with Mint. For example, if you alternate between 5 different credit cards to pay for purchases on your Amazon account, only the transactions from credit cards synchronized with Mint will get tagged.\n\nSome things the tagger cannot do:\n\n- Amazon credit card award points are not reported anywhere in the order/item reports.\n- Amazon gift cards are not yet supported (see [issue #59](https://github.com/jprouty/mint-amazon-tagger/issues/59))\n\n## Support ##\n\nThis project has been a passion project of [mine](https://github.com/jprouty) to better understand cashflow (critical to trend analysis and budgeting).\n\nIf you have found this tool useful, please consider showing your support:\n\n- [CashApp](https://cash.app/$JeffProuty)\n- [Venmo](https://www.venmo.com/u/jeff-prouty)\n- [Paypal.me](https://paypal.me/jeffprouty)\n- [Patreon](https://patreon.com/jeffprouty) - **recurring**\n- Bitcoin - BTC Address: `3JfvxXzJJ85pxk7wnUmjTUKc6MfDXFWjpg`\n- Ethereum - ETH Address: `0xFcd385b3D18DABa5231a64EEA2327fE1F1b1Ff15`\n\n## Install and Getting started ##\n\n### EASIEST - Pre-built binaries ###\n\nPlease download the latest version from [github's releases page](https://github.com/jprouty/mint-amazon-tagger/releases)\n\n### ADVANCED - Docker Headless CLI ###\n\nYou can run the Mint Amazon Tagger via docker like so:\n\n```\n# Check out this git repo if not already:\ngit clone https://github.com/jprouty/mint-amazon-tagger.git\ncd mint-amazon-tagger\n\n# Build the image:\ndocker build -t mint-amazon-tagger . \n\n# Run the container:\ndocker run -it --rm mint-amazon-tagger\n```\n\nIf you're using ARM, you need to build with:\n\n```\ndocker build --platform linux/amd64 -t mint-amazon-tagger .\n```\n\n### ADVANCED - Run from python source ###\n\n#### Setup ####\n\n1. `pip3 install mint-amazon-tagger`\n\n2. To get the latest from time to time, update your version:\n`pip3 install --upgrade mint-amazon-tagger`\n\n3. Chromedriver should be fetched automatically. But if you run into issues,\ntry this:\n\n```\n# Mac:\nbrew tap homebrew/cask\nbrew cask install chromedriver\n\n# Ubuntu/Debian:\n# See also: https://askubuntu.com/questions/539498/where-does-chromedriver-install-to\nsudo apt-get install chromium-chromedriver\n```\n\n#### Running - Full Auto GUI ####\n\nThis mode will fetch your Amazon Order History for you as well as tag mint.\n\n1. `mint-amazon-tagger`\n\n1. Plug in all your info into the app!\n\n#### Running - Full Auto CLI ####\n\nThis mode will fetch your Amazon Order History for you as well as tag mint.\n\n1. `mint-amazon-tagger-cli --amazon_email email@cool.com --mint_email couldbedifferent@aol.com`\n\n#### Running - Semi-Auto ####\n\nThis mode requires you to fetch your Amazon Order History manually, then the\ntagger automates the rest.\n\n1. Generate and download your Amazon Order History Reports.\n\na. Login and visit [Amazon Order History\nReports](https://www.amazon.com/gp/b2b/reports)\n\nb. \"Request Report\" for \"Items\", \"Orders and shipments\", and \"Refunds\". Make sure the\ndate ranges are the same.\n\nc. Download the completed reports. Let's called them\n`Items.csv Orders.csv Refunds.csv` for this walk-through. Note that\nRefunds is optional! Yay.\n\n2. (Optional) Do a dry run! Make sure everything looks right first. Run:\n`mint-amazon-tagger-cli --items_csv Items.csv --orders_csv Orders.csv --refunds_csv Refunds.csv --dry_run --mint_email yourEmail@here.com`\n\n3. Now perform the actual updates, without `--dry_run`:\n`mint-amazon-tagger-cli --items_csv Items.csv --orders_csv Orders.csv --refunds_csv Refunds.csv --mint_email yourEmail@here.com`\n\n4. Sit back and relax! The run time depends on the speed of your machine,\nquality of internet connection, and total number of transactions. For\nreference, my machine did about 14k Mint transactions, finding 2k Amazon\nmatches in under 10 minutes.\n\nTo see all options, see:\n`mint-amazon-tagger-cli --help`\n\n## Tips and Tricks ##\n\nNot every bank treats Amazon purchases the same, or processes transactions as quickly as others. If you are having a low match rate (look at the terminal output after completion), then try adjusting some of the options or command line flags. To see a complete list, run `mint-amazon-tagger-cli --help`.\n\nSome common options to try:\n\n- --mint_input_include_inferred_description. This allows for more generous consideration of Mint transactions for matching. See [more context here](https://github.com/jprouty/mint-amazon-tagger/issues/50)\n- --mint_input_include_user_description. Similar to above; considers the current description as shown in the Mint tool (including any user edits).\n- --max_days_between_payment_and_shipping. If your bank is slow at posting payments, adjusting this value up to 7 or more will increase your chance of matching. If you have a high volume of purchases, this can increase your chance of mis-tagging items.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jprouty/mint-amazon-tagger",
    "keywords": "amazon mint tagger transactions order history",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mint-amazon-tagger",
    "package_url": "https://pypi.org/project/mint-amazon-tagger/",
    "platform": null,
    "project_url": "https://pypi.org/project/mint-amazon-tagger/",
    "project_urls": {
      "Homepage": "https://github.com/jprouty/mint-amazon-tagger"
    },
    "release_url": "https://pypi.org/project/mint-amazon-tagger/1.62/",
    "requires_dist": [
      "PyQt5",
      "mintapi (>=2.12)",
      "mock",
      "oathtool",
      "outdated",
      "progress",
      "psutil",
      "range-key-dict",
      "readchar",
      "requests",
      "selenium",
      "selenium-requests (>=2.0.3)"
    ],
    "requires_python": ">=3",
    "summary": "Fetches your Amazon order history and matching/tags your Mint transactions",
    "version": "1.62",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17046248,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba448e7b69096698919f870fa94070572d9317911a9b0787dabb8d990048c288",
        "md5": "24c5fd40316a22ba417fedaaab39ff1b",
        "sha256": "496e1a745bc8b720e315235abe02896fc6f6b9f5cf57476f2a832499e23108ec"
      },
      "downloads": -1,
      "filename": "mint_amazon_tagger-1.62-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24c5fd40316a22ba417fedaaab39ff1b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 71623,
      "upload_time": "2023-02-26T06:43:03",
      "upload_time_iso_8601": "2023-02-26T06:43:03.848691Z",
      "url": "https://files.pythonhosted.org/packages/ba/44/8e7b69096698919f870fa94070572d9317911a9b0787dabb8d990048c288/mint_amazon_tagger-1.62-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "475658c369ff118f0012aa73f3bda4351966582105c5808a9964bb1d33c2eb8f",
        "md5": "40bfac01de0aa7c3063107aa5cf3f790",
        "sha256": "8b5083d880eefd47d2de2d07d864bd785692a1b408cb267f72f106849437ad12"
      },
      "downloads": -1,
      "filename": "mint-amazon-tagger-1.62.tar.gz",
      "has_sig": false,
      "md5_digest": "40bfac01de0aa7c3063107aa5cf3f790",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 64324,
      "upload_time": "2023-02-26T06:43:05",
      "upload_time_iso_8601": "2023-02-26T06:43:05.879081Z",
      "url": "https://files.pythonhosted.org/packages/47/56/58c369ff118f0012aa73f3bda4351966582105c5808a9964bb1d33c2eb8f/mint-amazon-tagger-1.62.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}