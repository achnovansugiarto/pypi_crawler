{
  "info": {
    "author": "Dwaiter.com",
    "author_email": "dev@dwaiter.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Software Development :: User Interfaces",
      "Topic :: Utilities"
    ],
    "description": "Django-Front-Edit\n=================\n\nDescription\n-----------\n\nA front end editing app for Django. This app allows one to edit dynamic\ndata on the front end of a website when logged in as a staff member. The\napp allows the editing of dynamic content within any element (See\nExample below).\n\nInstallation\n------------\n\nYou must have setuptools installed.\n\nFrom PyPI:\n\n::\n\n    pip install django_front_edit\n\nOr download a package from the\n`PyPI <https://pypi.python.org/pypi/django_front_edit>`__ or the\n`BitBucket\npage <https://bitbucket.org/dwaiter/django-front-edit/downloads>`__:\n\n::\n\n    pip install <package>\n\nOr unpack the package and:\n\n::\n\n    python setup.py install.\n\nDependencies\n------------\n\nDjango >= 1.4 and its dependencies.\n\nbeautifulsoup4 >= 4.3.2 located at:\nhttp://www.crummy.com/software/BeautifulSoup/ or\nhttps://pypi.python.org/pypi/beautifulsoup4/.\n\ndjango-classy-tags >= 0.5.1 located at:\nhttps://github.com/ojii/django-classy-tags or\nhttps://pypi.python.org/pypi/django-classy-tags.\n\nIntegration\n-----------\n\nIn your Django settings.py file insert the following in an appropriate\nplace:\n\n::\n\n    ...\n    TEMPLATE_CONTEXT_PROCESSORS = [\n        'django.contrib.auth.context_processors.auth',\n        ...\n        'django.core.context_processors.request',\n        ...\n        'front_edit.context_processors.defer_edit'\n    ]\n    ...\n\n    INSTALLED_APPS = [\n        ...\n        \"front_edit\",\n        ...\n    ]\n\n    ...\n\nIn your main urls.py file:\n\n::\n\n    ...\n    url(r'', include('front_edit.urls')),\n    ...\n\nThere is nothing to syncdb or migrate.\n\nUsage\n-----\n\nThis app uses template tags for all its functionality.\n\nTemplate tags\n~~~~~~~~~~~~~\n\nMake sure to load up front\\_edit\\_tags in your template.\n\n    **Edit...EndEdit** > **Arguments:** object.field...[class\\_name]\n\n        **object.field:** This argument consist of multiple arguments of\n        dot separated object/field variables. Currently only fields\n        within the same model object can be edited per tag.\n\n        **class\\_name:** This optional argument is the class name(s) to\n        put on the form, edit button, and overlay in case you need to\n        adjust them.\n\n        This tag specifies an editable region.\n\n    **EditLoader** > **Arguments:** None\n\n        This tag includes all the boilerplate to make the front-end\n        editing work. This tag should always be right before the end\n        ``<body>`` tag in your base template.\n\nJavaScript\n~~~~~~~~~~\n\nThere is one command that you can call if you need to reposition the\nedit elements. You should call this if any JavaScript will change the\noffset of in-flow elements.\n\n::\n\n    $.front_edit('refresh');\n\nExample\n~~~~~~~\n\n::\n\n    {% load front_edit_tags %}\n    <!DOCTYPE html>\n    <html>\n    <head></head>\n    <body>\n        <div>\n            <!-- In a list -->\n            <ul>\n                {% for object in objects %}\n                {% edit object.text_field object.char_field \"class_name\" %}\n                <li>\n                    <span>{{ object.text_field }}</span>\n                    <span>{{ object.char_field }}</span>\n                </li>\n                {% endedit %}\n                {% endfor %}\n            </ul>\n            <!-- In a table -->\n            <table>\n                <tbody>\n                    <tr>\n                        {% for object in objects %}\n                        {% edit object.text_field object.char_field \"class_name\" %}\n                        <td>\n                            <span>{{ object.text_field }}</span>\n                            <span>{{ object.char_field }}</span>\n                        </td>\n                        {% endedit %}\n                        {% endfor %}\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div>\n            <!-- On a span -->\n            {% edit object.text_field \"class_name\" %}\n            <span>{{ object.text_field }}</span>\n            {% endedit %{\n        </div>\n        {% edit_loader %}\n    </body>\n    </html>\n\nAdvanced\n========\n\nSettings\n--------\n\nFRONT\\_EDIT\\_LOGOUT\\_URL\\_NAME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:** \"admin:logout\"\n\n    Set the name of the logout url.\n\nFRONT\\_EDIT\\_CUSTOM\\_FIELDS\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:** []\n\n    A list of dot-separated paths to a custom model field such as a rich\n    text field or file field that has a Media class on its widget.\n\nFRONT\\_EDIT\\_INLINE\\_EDITING\\_ENABLED\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:** True\n\n    Option to disable inline editing.\n\nFRONT\\_EDIT\\_LOADER\\_TEMPLATE\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:**'front\\_edit/loader.html'\n\n    This template is the main boilerplate.\n\nFRONT\\_EDIT\\_TOOLBAR\\_TEMPLATE\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:** 'front\\_edit/includes/toolbar.html'\n\n    This template is the admin toolbar.\n\nFRONT\\_EDIT\\_EDITABLE\\_TEMPLATE\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    **Default:** 'front\\_edit/includes/editable.html'\n\n    This template is the editable. Which includes the form, edit button,\n    and overlay.\n\nCustom Media and JS variables\n-----------------------------\n\nIf the FRONT\\_EDIT\\_CUSTOM\\_FIELDS setting doesn't satisfy your needs\nyou will need to do the following.\n\n1. Change FRONT\\_EDIT\\_LOADER\\_TEMPLATE to your own template, it should\n   have a different name than 'front\\_edit/loader.html'.\n\n2. In your template extend 'front\\_edit/loader.html'.\n\n3. Use the block 'ft\\_extra' to set or run javascript code. No script\n   tags are needed.\n\n4. Use the block 'ft\\_extra\\_media' to define media such as CSS or JS\n   files.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/dwaiter/django-front-edit",
    "keywords": "django front-end editing admin tools dynamic management utilities",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-front-edit",
    "package_url": "https://pypi.org/project/django-front-edit/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-front-edit/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/dwaiter/django-front-edit"
    },
    "release_url": "https://pypi.org/project/django-front-edit/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Front end editing for Django.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3090210,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0071794464ef69aa209e6a16ddf1dbc58912a2841d8c6863872e3fc6dfbc18ca",
        "md5": "1fd01baaa8f200e9358e58ab0673604f",
        "sha256": "787b199024655dc0250f57b8da1dd199800f7eceba621b7be3536c84019da8d9"
      },
      "downloads": -1,
      "filename": "django-front-edit-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1fd01baaa8f200e9358e58ab0673604f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7381,
      "upload_time": "2014-08-19T18:00:55",
      "upload_time_iso_8601": "2014-08-19T18:00:55.340392Z",
      "url": "https://files.pythonhosted.org/packages/00/71/794464ef69aa209e6a16ddf1dbc58912a2841d8c6863872e3fc6dfbc18ca/django-front-edit-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}