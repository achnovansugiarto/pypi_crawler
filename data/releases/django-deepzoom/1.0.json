{
  "info": {
    "author": "David J Cox",
    "author_email": "davidjcox.at@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===============\r\nDjango-deepzoom\r\n===============\r\n\r\nDjango-deepzoom is a drop-in Django app for the creation and use of Deep Zoom \r\ntiled images.  It handily integrates Daniel Gasienica's and Kapil Thangavelu's \r\ndeepzoom.py image generator, Microsoft's SeaDragon deep zoom viewer, and \r\nSean Rice's JavaScript touch events into a set of model classes and template \r\ntags which programmatically generate tiled images and all JavaScript necessary \r\nfor their instantiation into templates.\r\n\r\nDetailed documentation is available on \r\n`ReadTheDocs <http://django-deepzoom.readthedocs.org/en/latest/>`_.\r\n\r\n:Author:    David J Cox\r\n\r\n:Contact:   <davidjcox.at@gmail.com>\r\n\r\n:Version:   1.0\r\n\r\nLet me know what you think of Django-deepzoom.  Share your site (or sites) that use it.  I'm curious.  Cool.\r\n\r\nWhat's New?\r\n-----------\r\n\r\nDjango-deepzoom has been ported to Python 3 and Django 1.6.  Both ports required \r\nintroducing backwards-incompatible changes that have been resolved, for now, with \r\nseparate Django-deepzoom releases.  In the future a unified version will be\r\nattempted.\r\n\r\nPorting to Python 3 involved replacing PIL with Pillow, ensuring uniform Unicode \r\nstring-handling, converting to new function calls, and updating the test code.\r\n\r\nPorting to Django 1.6 mainly involved converting the test code to handle the new \r\ndefault database autocommit behavior.  Tests designed to force errors and exceptions \r\nhad to be wrapped in transaction.atomic() to avoid halting the testrunner.\r\n\r\nTo accommodate these inflection points, three Django-deepzoom releases are available:\r\n\r\n- Version 0.3 is compatible with Python 2 and Django pre-1.6.\r\n\r\n- Version 0.4 is compatible with Python 2 and Django 1.6+.\r\n\r\n- Version 1.0 is compatible with Python 3 and Django 1.6+.\r\n\r\nA summary table is provided in the Quick start section below...\r\n\r\nRun tests\r\n---------\r\nAfter Django-deepzoom has been installed, you may want to sanity check it by running tests, like this::\r\n\r\n    python manage.py test deepzoom --settings=deepzoom.test.test_settings\r\n\r\n.. attention::\r\n        Some of the negative tests are intended to throw exceptions.  The error text will display mixed in with the test results.  THAT IS EXPECTED!\r\n\r\n        If the end result is **OK** then all tests have passed.\r\n\r\n        Enjoy.\r\n\r\n\r\nQuick start\r\n-----------\r\n\r\nBefore you begin, choose the Django-deepzoom version that's compatible with the versions of Python and Django you're using:\r\n\r\n\t+--------+------------+-----------------+\r\n\t| Python |   Django   | Django-deepzoom |\r\n\t+========+============+=================+\r\n\t|   2    |  pre-1.6   |       0.3       |\r\n\t+--------+------------+-----------------+\r\n\t|   2    |    1.6+    |       0.4       |\r\n\t+--------+------------+-----------------+\r\n\t|   3    |    1.6+    |       1.0       |\r\n\t+--------+------------+-----------------+\r\n\r\n\r\n1.) Install Django-deepzoom like this::\r\n\r\n    pip install \"django-deepzoom==1.0\"\r\n\r\n\r\nor, like this::\r\n\r\n    wget https://pypi.python.org/packages/source/d/django-deepzoom/django-deepzoom-1.0.tar.gz\r\n    tar -xvf django-deepzoom-1.0.tar.gz\r\n    cd django-deepzoom-1.0\r\n    python setup.py install\r\n\r\n2.) Add \"deepzoom\" to your INSTALLED_APPS setting like this::\r\n\r\n    (in settings.py)\r\n      \r\n    INSTALLED_APPS = (\r\n\t'django.contrib.auth',\r\n        'django.contrib.staticfiles',\r\n        'django.contrib.admin', \r\n        ...\r\n        'deepzoom',\r\n        ...\r\n    )\r\n\r\n3.) Sub-class the '`UploadedImage`' model class as your own (image-based) class, something like this::\r\n\r\n    (in models.py)\r\n      \r\n    from deepzoom.models import DeepZoom, UploadedImage\r\n      \r\n    class MyImage(UploadedImage):\r\n      '''\r\n      Overrides UploadedImage base class.\r\n      '''\r\n      pass\r\n\r\n4.) Run `python manage.py syncdb` to create the Django-deepzoom models.\r\n\r\n5.) Add an appropriate URL to your Urlconf, something like this::\r\n\r\n    (in urls.py)\r\n    \r\n    from deepzoom.views import deepzoom_view\r\n    \r\n    urlpatterns = patterns('', \r\n        ...\r\n        url(r'^deepzoom/(?P<passed_slug>\\b[a-z0-9\\-]+\\b)', \r\n            deepzoom_view, \r\n            name=\"v_deepzoom\"), \r\n        ...\r\n    )\r\n\r\n6.) Write a view that queries for a specific DeepZoom object and passes it to a template, something like this::\r\n   \r\n    (in views.py)\r\n      \r\n    from deepzoom.models import DeepZoom\r\n      \r\n    def deepzoom_view(request, passed_slug=None):\r\n      try:\r\n          _deepzoom_obj = DeepZoom.objects.get(slug=passed_slug)\r\n      except DeepZoom.DoesNotExist:\r\n          raise Http404\r\n      return render_to_response('deepzoom.html', \r\n                                {'deepzoom_obj': _deepzoom_obj}, \r\n                                context_instance=RequestContext(request))\r\n\r\n7.) In your template, create an empty div with a unique ID.  Load the deepzoom tags and pass the deepzoom object and deepzoom div ID to the template tag inside a <script> block in the body like this::\r\n\r\n    (in e.g. deepzoom.html)\r\n      \r\n    {% extends \"base.html\" %}\r\n      \r\n    {% load deepzoom_tags %}\r\n      \r\n    <div id=\"deepzoom_div\"></div>\r\n    \r\n    <script src=\"{{ STATIC_URL }}js/vendor/seadragon-min.js\"></script>\r\n    \r\n    <script>{% deepzoom_js deepzoom_obj \"deepzoom_div\" %}</script>\r\n\r\n8.) Run `python manage.py collectstatic` to collect your static files into STATIC_ROOT.\r\n\r\n9.) Start the development server and visit `http://127.0.0.1:8000/admin/` to upload an image to the associated model (you'll need the Admin app enabled).  Be sure to check the `Generate deep zoom?` checkbox for that image before saving it.\r\n\r\n10.) Navigate to the page containing the deep zoom image and either click/touch it or click/touch the overlaid controls to zoom into and out of the tiled image::\r\n\r\n    **Behold!**\r\n\r\n.",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/django-deepzoom/",
    "download_url": "https://pypi.python.org/packages/source/d/django-deepzoom/django-deepzoom-1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.invocatum.com/",
    "keywords": "Python 3, Django 1.6, Django 1.7, deepzoom, deepzoom viewer, tiled images",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-deepzoom",
    "package_url": "https://pypi.org/project/django-deepzoom/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-deepzoom/",
    "project_urls": {
      "Download": "https://pypi.python.org/packages/source/d/django-deepzoom/django-deepzoom-1.0.tar.gz",
      "Homepage": "http://www.invocatum.com/"
    },
    "release_url": "https://pypi.org/project/django-deepzoom/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple Django app to create deep zoom tiled images. Python 3 and Django 1.6+ compatible version.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1560090,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ea3717489deb68640227229fe33f883b36065b2dde7884f84d3038b1eb667cd",
        "md5": "d3319b50fab7cc4b02adc146d8ddacd1",
        "sha256": "d10163438a04f0acf8c649040551ee324202501cb1b98aab037b4adf5bd07c52"
      },
      "downloads": -1,
      "filename": "django-deepzoom-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d3319b50fab7cc4b02adc146d8ddacd1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 421349,
      "upload_time": "2014-03-22T16:02:45",
      "upload_time_iso_8601": "2014-03-22T16:02:45.183880Z",
      "url": "https://files.pythonhosted.org/packages/8e/a3/717489deb68640227229fe33f883b36065b2dde7884f84d3038b1eb667cd/django-deepzoom-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}