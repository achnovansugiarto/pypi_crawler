{
  "info": {
    "author": "OohlaLabs Limited",
    "author_email": "packages@oohlalabs.co.nz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. note::\r\n\r\n   For the latest source, discussions, etc., please visit the\r\n   `GitHub repository <https://github.com/OohlaLabs/django-pods>`_\r\n\r\n\r\n===========\r\nDjango Pods\r\n===========\r\n\r\n.. image:: https://pypip.in/version/django-pods/badge.svg\r\n    :target: https://pypi.python.org/pypi/django-pods/\r\n\r\n.. image:: https://pypip.in/format/django-pods/badge.svg\r\n    :target: https://pypi.python.org/pypi/django-pods/\r\n\r\n.. image:: https://travis-ci.org/OohlaLabs/django-pods.svg?branch=master\r\n    :target: https://travis-ci.org/OohlaLabs/django-pods\r\n\r\n.. image:: https://coveralls.io/repos/OohlaLabs/django-pods/badge.png?branch=master\r\n    :target: https://coveralls.io/r/OohlaLabs/django-pods\r\n\r\n.. image:: https://landscape.io/github/OohlaLabs/django-pods/master/landscape.png\r\n    :target: https://landscape.io/github/OohlaLabs/django-pods/master\r\n\r\n.. image:: https://pypip.in/py_versions/django-pods/badge.svg\r\n    :target: https://pypi.python.org/pypi/django-pods/\r\n\r\n.. image:: https://pypip.in/license/django-pods/badge.svg\r\n    :target: https://pypi.python.org/pypi/django-pods/\r\n\r\nDjango Pods is a minimalist package that lets you configure default settings for your `reusable apps <https://docs.djangoproject.com/en/dev/intro/reusable-apps/>`_, and allows developers using your apps to override these defaults in their own project settings.\r\n\r\nThis package is largely inspired by `Django Rest Framework <http://www.django-rest-framework.org/>`_ and `Django AllAuth <http://www.intenct.nl/projects/django-allauth/>`_ and adapted to work with `Django 1.7 Applications <https://docs.djangoproject.com/en/dev/ref/applications/>`_, but also with any classes extending ``pods.apps.AppSettings``.\r\n\r\n\r\nPreview\r\n-------\r\n\r\nDjango Pods allows developers to customise app settings in two ways:\r\n\r\n\r\n1. Dictionary style (as per `Django Rest Framework <http://www.django-rest-framework.org/>`_)::\r\n\r\n\r\n    YOUR_APP = {\r\n        \"SETTING\": \"VALUE\"\r\n    }\r\n\r\n\r\n2. Prefix style::\r\n\r\n\r\n    YOUR_APP_SETTING = \"VALUE\"\r\n\r\n\r\nInstallation\r\n------------\r\n::\r\n\r\n    pip install django-pods\r\n\r\n\r\nUsage in Reusable Apps\r\n----------------------\r\n\r\n1. Add ``django-pods`` to the ``install_requires`` of your ``setup.py``::\r\n\r\n\r\n    setup(\r\n        name=\"rock_n_roll\",\r\n        install_requires=[\"django-pods\", ...],\r\n        ...\r\n    )\r\n\r\n\r\n2. Add the ``AppSettings`` mixin to your AppConfig implementation in ``rock_n_roll/apps.py``::\r\n\r\n\r\n    from django.apps import AppConfig\r\n    from pods.apps import AppSettings\r\n\r\n\r\n    class RockNRollConfig(AppSettings, AppConfig):\r\n        name = 'rock_n_roll'\r\n        verbose_name = \"Rock ’n’ roll\"\r\n\r\n        # Path to app settings module\r\n        settings_module = \"rock_n_roll.app_settings\"\r\n\r\n        # Optional\r\n        settings_imports = (\"CLASS_TO_IMPORT\",)\r\n\r\n        # Optional\r\n        # defaults to the capitalized class name, e.g. ROCK_N_ROLL_CONFIG\r\n        settings_key = \"ROCK_N_ROLL\"\r\n\r\n\r\n3. Declare your default app settings in ``rock_n_roll/app_settings.py``::\r\n\r\n\r\n    QUESTION = \"What is your favourite band?\"\r\n    ANSWER = \"The Rolling Stones\"\r\n    CLASS_TO_IMPORT = \"path.to.ClassToImport\"\r\n\r\n\r\n4. Access your settings anywhere in your package::\r\n\r\n\r\n    from django.apps import apps\r\n\r\n    app = apps.get_app_config('rock_n_roll')\r\n\r\n    app.QUESTION\r\n    # What is your favourite band?\r\n\r\n    app.ANSWER\r\n    # The Beatles\r\n\r\n    app.CLASS_TO_IMPORT\r\n    # <class 'path.to.ClassToImport'>\r\n\r\n\r\nSettings can also be accessed directly via the class::\r\n\r\n\r\n    from rock_n_roll.apps import RockNRollConfig\r\n\r\n\r\n    RockNRollConfig.QUESTION\r\n    RockNRollConfig.ANSWER\r\n    RockNRollConfig.CLASS_TO_IMPORT\r\n\r\n\r\n.. note:: **AppSettings ``settings`` Property**\r\n\r\n    ``AppSettings`` implements ``__getattr__`` to proxy to the ``settings`` attributes of the class::\r\n\r\n\r\n        app.QUESTION == app.settings.QUESTION\r\n\r\n        # or\r\n\r\n        RockNRollConfig.QUESTION == RockNRollConfig.settings.QUESTION\r\n\r\n\r\n.. note:: **Usage with Django < 1.7**\r\n\r\n    Prior to Django 1.7, there wasn't a logical place to create a class representing an app. However, any class can extend ``AppSettings``. For example, in ``models.py``::\r\n\r\n        from pods.apps import AppSettings\r\n\r\n\r\n        class AnyClass(AppSettings):\r\n            settings_module = \"rock_n_roll.app_settings\"\r\n\r\n\r\n    Import your app class directly::\r\n\r\n        from .models import AnyClass\r\n\r\n        AnyClass.QUESTION\r\n\r\n\r\n\r\nUsage in Projects\r\n-----------------\r\n\r\n\r\n1. Install the app that uses Django Pods::\r\n\r\n \r\n    pip install rock_n_roll\r\n\r\n\r\n2. Add the app to the ``INSTALLED_APPS`` of your ``project/settings.py``::\r\n\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        \"rock_n_roll\",\r\n        ...\r\n    )\r\n\r\n\r\n3. Override the app's settings as needed::\r\n\r\n\r\n    # Dictionary style\r\n    ROCK_N_ROLL = {\r\n        \"ANSWER\": \"The Beatles\",\r\n    }\r\n\r\n\r\n    # Prefix style\r\n    ROCK_N_ROLL_ANSWER = \"The Beatles\"\r\n\r\n\r\nRunning Tests\r\n-------------\r\n::\r\n\r\n    tox\r\n\r\n\r\nContributions\r\n-------------\r\n\r\nAll contributions and comments are welcome.\r\n\r\nChange Log\r\n----------\r\n\r\nv1.1.1\r\n~~~~~~\r\n* Switch to Semantic Versioning\r\n* Fix issue with parse_requirements for newer versions of pip (>=6.0.0)\r\n* Fix typo in AppSettingsMeta\r\n\r\nv1.1\r\n~~~~\r\n* Exclude tests and docs from the build\r\n\r\nv1.0\r\n~~~~\r\n* Add support for prefix style overrides\r\n* Documentation changes\r\n\r\nv0.4\r\n~~~~\r\n* Fix bug with default settings_key not set correctly if none given\r\n\r\nv0.3\r\n~~~~\r\n* Unit tests now use Django 1.7 final and support Django 1.6 and 1.5\r\n* Fix PyPI classifiers for supported python versions\r\n\r\nv0.2\r\n~~~~\r\n* Fix compatibility with Django 1.6\r\n\r\nv0.1\r\n~~~~\r\n* Initial",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OohlaLabs/django-pods",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pods",
    "package_url": "https://pypi.org/project/django-pods/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pods/",
    "project_urls": {
      "Homepage": "https://github.com/OohlaLabs/django-pods"
    },
    "release_url": "https://pypi.org/project/django-pods/1.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "App Settings for Django 1.7",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3492569,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e120413da607d5c4472a81feda9e1856bc1468ac21c0485a86da3186d54c1980",
        "md5": "4a6f551cef5714383f5849fce75315ef",
        "sha256": "65ea6482eb1bd03ebfbb0f3c79f5a648605e1f56aa03e609614d4784ba846c4f"
      },
      "downloads": -1,
      "filename": "django_pods-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a6f551cef5714383f5849fce75315ef",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7288,
      "upload_time": "2015-01-30T00:16:48",
      "upload_time_iso_8601": "2015-01-30T00:16:48.456253Z",
      "url": "https://files.pythonhosted.org/packages/e1/20/413da607d5c4472a81feda9e1856bc1468ac21c0485a86da3186d54c1980/django_pods-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "340f22a0d38f3633260515368ea3d08b0c2feda4649d51f756b53098f4827428",
        "md5": "6c1f089bf7c5fa8da15dc6839d8703f1",
        "sha256": "e615dde7b32d75f3c83d06daa3b931f03410257506e53abced8ded1f23a9b4fa"
      },
      "downloads": -1,
      "filename": "django-pods-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c1f089bf7c5fa8da15dc6839d8703f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6231,
      "upload_time": "2015-01-30T00:16:27",
      "upload_time_iso_8601": "2015-01-30T00:16:27.266103Z",
      "url": "https://files.pythonhosted.org/packages/34/0f/22a0d38f3633260515368ea3d08b0c2feda4649d51f756b53098f4827428/django-pods-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}