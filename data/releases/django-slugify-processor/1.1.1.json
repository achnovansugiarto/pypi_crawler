{
  "info": {
    "author": "Tony Narlock",
    "author_email": "tony@git-pull.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "pipeline for handling slugification edgecases\n\n[![Python Package](https://img.shields.io/pypi/v/django-slugify-processor.svg)](http://badge.fury.io/py/django-slugify-processor)\n[![Build Status](https://github.com/tony/django-slugify-processor/workflows/tests/badge.svg)](https://github.com/tony/django-slugify-processor/actions?query=workflow%3Atests)\n[![Docs](https://github.com/tony/django-slugify-processor/workflows/docs/badge.svg)](https://github.com/tony/django-slugify-processor/actions?query=workflow%3Adocs)\n[![Code Coverage](https://codecov.io/gh/tony/django-slugify-processor/branch/master/graph/badge.svg)](https://codecov.io/gh/tony/django-slugify-processor)\n[![License](https://img.shields.io/github/license/tony/django-slugify-processor.svg)](https://github.com/tony/django-slugify-processor/blob/master/LICENSE)\n\n# What are slugs?\n\n_Slugs_ are URL's, typically generated from post titles, that you want to be both human readable and\na valid URL. They are SEO friendly.\n\nDjango provides a\n[slugify function](https://docs.djangoproject.com/en/4.0/ref/utils/#django.utils.text.slugify) in\n`django.utils.text.slugify` which is also made available as a\n[default filter](https://github.com/django/django/blob/4.0.0/django/template/defaultfilters.py#L247-255).\n\nDjango slugs can be automatically generated in django models via packages such as:\n\n- [django-autoslug](https://pypi.python.org/pypi/django-autoslug)\n  ([docs](https://pythonhosted.org/django-autoslug/))\n  ([github](https://github.com/neithere/django-autoslug))\n- [django-extensions](https://pypi.python.org/pypi/django-extensions) via\n  [AutoSlugField](https://django-extensions.readthedocs.io/en/latest/field_extensions.html)\n  ([docs](https://django-extensions.readthedocs.io/en/latest/))\n  ([github](https://github.com/django-extensions/django-extensions))\n\n# The problem\n\nThis project is based on an article from [devel.tech](https://devel.tech) covering\n[django's import strings](https://devel.tech/tips/n/djms3tTe/how-django-uses-deferred-imports-to-scale/).\n\nCorner cases exist with slugification. For instance: Corner cases exist with slugification. For\ninstance:\n\n| Term | [`django.utils.text.slugify`] | What you want |\n| ---- | ----------------------------- | ------------- |\n| C    | c (correct)                   | n/a           |\n| C++  | c                             | cpp           |\n| C#   | c                             | c-sharp       |\n\nTo make matters worse, if using a specialized model field like `AutoSlugField` from django-autoslug\nor django-extensions, the default behavior may be to name the slugs for C++ and C# to \"c-1\", \"c-2\"\nafter \"c\" is taken.\n\nHere's another case, acronyms / shorthands:\n\n| Term              | [`django.utils.text.slugify`] | What you (may) want |\n| ----------------- | ----------------------------- | ------------------- |\n| New York City     | new-york-city                 | nyc                 |\n| Y Combinator      | y-combinator                  | yc                  |\n| Portland          | portland                      | pdx                 |\n| Texas             | texas                         | tx                  |\n| $                 | '' (empty)                    | usd, aud, etc?      |\n| US$               | us                            | usd                 |\n| A$                | a                             | aud                 |\n| bitcoin           | bitcoin                       | btc                 |\n| United States     | united-states                 | usa                 |\n| League of Legends | league-of-legends             | league              |\n| AppleÂ® iPod Touch | apple-ipod-touch              | ipod-touch          |\n\nEach website and niche has its own edge cases for slugs. So we need a solution that can scale, where\nyou can craft your own functions.\n\n# How django-slugify-processor helps\n\nThis builds on top of [`django.utils.text.slugify`] to handle your django project's edgecases. By\ndefault, django-slugify-processor will be a pass through to django's default behavior. Adding\nslugification functions via your Django project's settings file allows you to adjust.\n\n[`django.utils.text.slugify`]:\n  https://github.com/django/django/blob/4.0/django/template/defaultfilters.py#L232\n\n# Installation\n\n```sh\n$ pip install django-slugify-processor\n```\n\n# Configure\n\nTo create a processor, create a function that accepts a string, and returns a string. Assume this is\n_project/app/slugify_processors.py_:\n\n```python\ndef my_processor(value):\n   value = value.replace('++', 'pp')\n   return value\n```\n\nInside of your settings, add a `SLUGIFY_PROCESSORS` list of strings that points to the function.\nAnything that's compatible with\n[import_string](https://docs.djangoproject.com/en/4.0/ref/utils/#django.utils.module_loading.import_string),\nin your settings file:\n\n```python\nSLUGIFY_PROCESSORS = [\n   'project.app.slugify_processors.my_processor'\n]\n```\n\n# Usage\n\n## In normal django code\n\nImport `slugify` from `django_slugify_processor.text`:\n\n```python\nfrom django_slugify_processor.text import slugify\n\nprint(slugify('C++'))\n> 'cpp'\n```\n\n## Template code\n\ndjango-slugify-processor is designed to override the built-in`slugify` filter.\n\n### via load\n\nYou can load by default via `{% load django_slugify_processor %}` in your template.\n\nIn your settings `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    'django_slugify_processor'\n]\n```\n\nIn your template:\n\n```django\n{% load slugify_processor %}\n{{\"C++\"|slugify}}\n```\n\n### via built-in\n\nTo make this available in all templates, in the `OPTIONS` of your template engine, add\n`django_slugify_processor.template_tags`:\n\n```python\nTEMPLATES = [{\n    'BACKEND': 'django.template.backends.django.DjangoTemplates',\n    'OPTIONS': {\n        'builtins': [\n            'django_slugify_processor.templatetags.slugify_processor',\n        ],\n    },\n}]\n```\n\nFrom within the template file:\n\n```django\n{{\"C++\"|slugify}}\n```\n\nOutput should be: cpp\n\n## Models\n\nFor the most up to date documentation, view the documetation for the plugin you're using (e.g.\ndjango-autoslug or django-extensions).\n\nTo use django-slugify-processor's `slugify` instead of django's default, there will be a field\noption to use the function.\n\n### django-extensions\n\nTested with 1.9.7 (2017-11-26):\n\n```python\nfrom django.db import models\n\nfrom django_extensions.db.fields import AutoSlugField\nfrom django_slugify_processors.text import slugify\n\nclass MyModel(models.Model):\n    title = models.CharField(max_length=255)\n    slug = AutoSlugField(\n        populate_from='title',\n        slugify_function=slugify\n    )\n```\n\n### django-autoslug\n\nTested with 1.9.3 (2017-11-26):\n\n```python\nfrom django.db import models\n\nfrom autoslug import AutoSlugField\nfrom django_slugify_processors.text import slugify\n\nclass MyModel(models.Model):\n    title = models.CharField(max_length=255)\n    slug = AutoSlugField(\n        populate_from='title',\n        slugify=slugify\n    )\n```\n\n# Credits\n\n- tox.ini based off DRF's (BSD 2-clause licensed)\n- yapf configuration based off RTD / devel.tech's (MIT-licensed)\n\n# Project details\n\n- python support >= 3.6, pypy3\n- django support 2.2, > 3.1,\n- Source https://github.com/tony/django-slugify-processor\n- Docs https://django-slugify-processor.git-pull.com\n- API https://django-slugify-processor.git-pull.com/api.html\n- Changelog https://django-slugify-processor.git-pull.com/history.html\n- Issues https://github.com/tony/django-slugify-processor/issues\n- Test Coverage https://codecov.io/gh/tony/django-slugify-processor\n- pypi https://pypi.python.org/pypi/django-slugify-processor\n- Open Hub https://www.openhub.net/p/django-slugify-processor\n- License MIT\n- git repo\n\n  ```bash\n  $ git clone https://github.com/tony/django-slugify-processor.git\n  ```\n\n- install stable\n\n  ```bash\n  $ pip install django-slugify-processor\n  ```\n\n- install dev\n\n  ```bash\n  $ git clone https://github.com/tony/django-slugify-processor.git\n  $ cd ./django-slugify-processor\n  $ pipenv install --dev --skip-lock\n  $ pipenv shell\n  ```\n\n- tests\n\n  ```bash\n   $ make test\n  ```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://django-slugify-processor.git-pull.com",
    "keywords": "django,slug,text",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-slugify-processor",
    "package_url": "https://pypi.org/project/django-slugify-processor/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-slugify-processor/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tony/django-slugify-processor/issues",
      "Changes": "https://github.com/tony/django-slugify-processor/blob/master/CHANGES",
      "Documentation": "https://django-slugify-processor.git-pull.com",
      "Homepage": "https://django-slugify-processor.git-pull.com",
      "Repository": "https://github.com/tony/django-slugify-processor"
    },
    "release_url": "https://pypi.org/project/django-slugify-processor/1.1.1/",
    "requires_dist": [
      "django-extensions; extra == \"test\"",
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "pipeline for slugification edgecases in django",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15136949,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c9c1faa4d5eb4908d21fa664703e9bbc14ca6d77be9a686b46856c13d783bc5",
        "md5": "b04afbb40851ee5df1721fbc7db5ae5f",
        "sha256": "c683904f0afe5c625ceac62b58029d938292c10dd2ca4acb548fb8accfd72090"
      },
      "downloads": -1,
      "filename": "django_slugify_processor-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b04afbb40851ee5df1721fbc7db5ae5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 7050,
      "upload_time": "2022-03-09T00:50:48",
      "upload_time_iso_8601": "2022-03-09T00:50:48.810174Z",
      "url": "https://files.pythonhosted.org/packages/5c/9c/1faa4d5eb4908d21fa664703e9bbc14ca6d77be9a686b46856c13d783bc5/django_slugify_processor-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5900a823e528e666cb0f15a3f2f63796313d669e3d724fd7290573cdf11efda7",
        "md5": "8e98251cae8ff28b42c2735911d0f178",
        "sha256": "b284a4e7865ea2f0f9b41b8e02f6238780d23bdc75a13421ba74622371f03647"
      },
      "downloads": -1,
      "filename": "django-slugify-processor-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8e98251cae8ff28b42c2735911d0f178",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 10172,
      "upload_time": "2022-03-09T00:50:47",
      "upload_time_iso_8601": "2022-03-09T00:50:47.349916Z",
      "url": "https://files.pythonhosted.org/packages/59/00/a823e528e666cb0f15a3f2f63796313d669e3d724fd7290573cdf11efda7/django-slugify-processor-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}