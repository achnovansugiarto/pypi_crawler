{
  "info": {
    "author": "Arcensoth",
    "author_email": "arcensoth@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Minecraft Command Query\nMinecraft command query program. Inspired by the in-game help command, with added features like multiple version support and expandable regex search.\n\n## Database setup\nMCCQ requires access to generated server files (namely `commands.json`), and so is compatible with [Minecraft snapshot 18w01a](https://minecraft.net/en-us/article/minecraft-snapshot-18w01a) and up.\n\nEach version directory must remain as generated by the server, and all version directories should be in the same root database directory:\n\n```\ndatabase_root/\n  18w01a/\n    generated/\n      reports/\n        commands.json\n  18w02a/\n    generated/\n      reports/\n        commands.json\n```\n\nThese files can be loaded either from the local filesystem or [the internet](https://github.com/Arcensoth/mcdata).\n\n## Basic usage\nEnter the CLI (command line interface) by providing it a default version `-s` to query and a database location `-d` where version directories are located:\n```bash\npython -m mccq -s 18w01a -d \"https://raw.githubusercontent.com/Arcensoth/mcdata\"\n```\n\nStart with a basic command:\n```bash\n> say\n```\n\nThis produces some output:\n```bash\n# 18w01a\nsay <message>\n```\nWhich will generally outline all possible variations of the command for the specified version(s).\n\nTry something a little more involved:\n```bash\n> effect\n# 18w01a\neffect clear|give ...\n```\nThe command is rolled out until a choice can be made, which saves on vertical space and is often more readable than assigning a separate line to each possibility.\n\n## Program options\nVarious flags and options can be written **before the command query** to augment behaviour.\n\nNormally several subcommands/arguments are condensed to one line, but `-e` can be used to forcibly expand the command:\n```bash\n> -e effect\n# 18w01a\neffect clear <targets>\neffect clear <targets> <effect>\neffect give <targets> <effect>\neffect give <targets> <effect> <seconds>\neffect give <targets> <effect> <seconds> <amplifier>\neffect give <targets> <effect> <seconds> <amplifier> <hideParticles>\n```\nBe warned that this can cause a large amount of output for commands with many subcommands/arguments.\n\nSearch for specific subcommands/arguments:\n```bash\n> tag targets add\n# 18w01a\ntag <targets> add <name>\n```\nNotice how arguments are shown between `<>` but can be searched by name just like subcommands.\n\nSpeaking of arguments, use `-t` to render their types:\n```bash\n> -t tag targets add\n# 18w01a\ntag <targets: entity> add <name: string>\n```\n\nUse `-v VERSION` to query a particular version:\n```bash\n> -v 18w02a execute\n# 18w02a\nexecute align|anchored|as|at|facing|if|in|positioned|rotated|run|store|unless ...\n```\n\nRepeat `-v VERSION` to query several versions at once:\n```bash\n> -v 18w01a -v 18w02a execute\n# 18w01a\nexecute align|as|at|if|offset|run|store|unless ...\n# 18w02a\nexecute align|anchored|as|at|facing|if|in|positioned|rotated|run|store|unless ...\n```\n\nFor more precise control than `-e` can offer, provide `-c CAPACITY` to define a threshold for expansion:\n```bash\n> -c 5 time set\n# 18w01a\ntime set day\ntime set midnight\ntime set night\ntime set noon\ntime set <time>\n> -c 4 time set\n# 18w01a\ntime set day|midnight|night|noon|<time>\n```\nThis allows a command to expand so long as the total number of subcommands/arguments it contains does not exceed the given threshold.\n\n## Dynamic search\nEach whitespace-separated search term of the provided query is treated as a regex pattern:\n```bash\n> execute a.*\n# 18w01a\nexecute align <axes> -> execute\nexecute as <targets> -> execute\nexecute at <targets> -> execute\n```\n\nAnd so any combination of subcommands/arguments can be flexibly queried:\n```bash\n> t.* targets\n# 18w01a\ntag <targets> add <name>\ntag <targets> list\ntag <targets> remove <name>\nteleport <targets> <destination>|<location> ...\ntellraw <targets> <message>\ntitle <targets> actionbar|clear|reset|subtitle|times|title ...\n```\n\nSearch terms are case-insensitive:\n```bash\n> gamerule .*mob.*\n# 18w01a\ngamerule doMobLoot\ngamerule doMobLoot <value>\ngamerule doMobSpawning\ngamerule doMobSpawning <value>\ngamerule mobGriefing\ngamerule mobGriefing <value>\n```\n\nSpecial case: a single `.` is treated as a wildcard and will match any term:\n```bash\n> clone . . . masked\n# 18w01a\nclone <begin> <end> <destination> masked\nclone <begin> <end> <destination> masked force|move|normal\n```\nWhich is a convenient way of quickly diving into the command.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Arcensoth/mccq",
    "keywords": "minecraft command query help utility",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mccq",
    "package_url": "https://pypi.org/project/mccq/",
    "platform": "",
    "project_url": "https://pypi.org/project/mccq/",
    "project_urls": {
      "Homepage": "https://github.com/Arcensoth/mccq"
    },
    "release_url": "https://pypi.org/project/mccq/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Minecraft command query program. Inspired by the in-game help command, with added features like multiple version support and expandable regex search.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4513075,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45419635a91716affbd5a4bbd146f88374daf21f7ce0b5f0c40034c3167cf92c",
        "md5": "9b83c25b9642524b6690ad249b8bc57e",
        "sha256": "ff98b8f3f2acca065564a8f97d4ce1ba792598a7da1a2c078916307e7e9e6c89"
      },
      "downloads": -1,
      "filename": "mccq-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b83c25b9642524b6690ad249b8bc57e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17239,
      "upload_time": "2018-07-13T02:36:10",
      "upload_time_iso_8601": "2018-07-13T02:36:10.696113Z",
      "url": "https://files.pythonhosted.org/packages/45/41/9635a91716affbd5a4bbd146f88374daf21f7ce0b5f0c40034c3167cf92c/mccq-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54d2c6a27bacb210d3d83e7f58a0e3070bd5ce5314a17c19df6b89c75d5aeac3",
        "md5": "f5e96d55395a306a0b80e0a82de6e4f2",
        "sha256": "e58e091b7e534e0f56613d1da790356951eaa723a9e3b775ae624c4d1ca1dcf0"
      },
      "downloads": -1,
      "filename": "mccq-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f5e96d55395a306a0b80e0a82de6e4f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11822,
      "upload_time": "2018-07-13T02:36:11",
      "upload_time_iso_8601": "2018-07-13T02:36:11.726877Z",
      "url": "https://files.pythonhosted.org/packages/54/d2/c6a27bacb210d3d83e7f58a0e3070bd5ce5314a17c19df6b89c75d5aeac3/mccq-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}