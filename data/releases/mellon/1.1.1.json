{
  "info": {
    "author": "Setty Lab",
    "author_email": "msetty@fredhutch.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
    ],
    "description": ".. image:: https://zenodo.org/badge/558998366.svg\n   :target: https://zenodo.org/badge/latestdoi/558998366\n.. image:: https://codecov.io/github/settylab/Mellon/branch/main/graph/badge.svg?token=TKIKXK4MPG \n    :target: https://codecov.io/github/settylab/Mellon\n\nMellon is a non-parametric density estimator based on the NearestNeighbors distribution.\n\nInstallation\n============\n\nTo install with pip you can run:\n\n.. code-block:: bash\n\n   pip install mellon\n\nDocumentation\n=============\n\nPlease read the\n`documentation <https://mellon.readthedocs.io/en/latest/index.html>`_\nor use this\n`basic tutorial notebook <https://github.com/settylab/Mellon/blob/main/notebooks/basic_tutorial.ipynb>`_.\n\n\nBasic Usage\n===========\n\n.. code-block:: python\n\n    import mellon\n    import numpy as np\n\n    X = np.random.rand(100, 10)  # 10-dimensional state representation for 100 cells\n    Y = np.random.rand(100, 10)  # arbitrary test data\n\n    model = mellon.DensityEstimator()\n    log_density_x = model.fit_predict(X)\n    log_density_y = model.predict(Y)\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/settylab/mellon",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mellon",
    "package_url": "https://pypi.org/project/mellon/",
    "platform": null,
    "project_url": "https://pypi.org/project/mellon/",
    "project_urls": {
      "Homepage": "https://github.com/settylab/mellon"
    },
    "release_url": "https://pypi.org/project/mellon/1.1.1/",
    "requires_dist": [
      "jax",
      "jaxopt",
      "scikit-learn"
    ],
    "requires_python": "",
    "summary": "Non-parametric density estimator.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17438009,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2d07dc6f8b8245dc39140052612ef11f543e68a6aa288c611e642b25c1cce6e",
        "md5": "fe503a1424e851823e2de38608d29e8a",
        "sha256": "e8a0dd179bf75d9d38e659fadca65d053d0056e69a5c47b2cafc30fd91eec854"
      },
      "downloads": -1,
      "filename": "mellon-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe503a1424e851823e2de38608d29e8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 32113,
      "upload_time": "2023-03-25T01:28:04",
      "upload_time_iso_8601": "2023-03-25T01:28:04.682868Z",
      "url": "https://files.pythonhosted.org/packages/a2/d0/7dc6f8b8245dc39140052612ef11f543e68a6aa288c611e642b25c1cce6e/mellon-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "016623dcf45e304cf68001ff966e721092f8515fe6ea5d11057f0ea35642a4eb",
        "md5": "89cf41e4b9e001afb9aabf480d6bc46d",
        "sha256": "96eb6228a050d996120bf829fda60617ccc768d9ad2a86419d017118fee7ade4"
      },
      "downloads": -1,
      "filename": "mellon-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "89cf41e4b9e001afb9aabf480d6bc46d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28733,
      "upload_time": "2023-03-25T01:28:07",
      "upload_time_iso_8601": "2023-03-25T01:28:07.165332Z",
      "url": "https://files.pythonhosted.org/packages/01/66/23dcf45e304cf68001ff966e721092f8515fe6ea5d11057f0ea35642a4eb/mellon-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}