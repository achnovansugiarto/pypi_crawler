{
  "info": {
    "author": "MailboxValidator.com",
    "author_email": "support@mailboxvalidator.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "MailboxValidator Python Module\n==============================\n\nThis Python module provides an easy way to call the MailboxValidator API which validates if an email address is a valid one.\n\nThis module can be used in many types of projects such as:\n\n - validating a user's email during sign up\n - cleaning your mailing list prior to an email marketing campaign\n - a form of fraud check\n\n\nInstallation\n============\n\nTo install this module type the following:\n\n\tpip install MailboxValidator\n\n\nDependencies\n============\n\nAn API key is required for this module to function.\n\nGo to https://www.mailboxvalidator.com/plans#api to sign up for FREE API plan and you'll be given an API key.\n\n\nUsage for validating emails\n===========================\n\n```python\nimport MailboxValidator\n\n\tmbv = MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\n\tresults = mbv.ValidateEmail('example@example.com')\n\n\tif results is None:\n\t\tprint(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\tprint('email_address = ' + results['email_address'] + \"\\n\")\n\t\tprint('domain = ' + results['domain'] + \"\\n\")\n\t\tprint('is_free = ' + results['is_free'] + \"\\n\")\n\t\tprint('is_syntax = ' + results['is_syntax'] + \"\\n\")\n\t\tprint('is_domain = ' + results['is_domain'] + \"\\n\")\n\t\tprint('is_smtp = ' + results['is_smtp'] + \"\\n\")\n\t\tprint('is_verified = ' + results['is_verified'] + \"\\n\")\n\t\tprint('is_server_down = ' + results['is_server_down'] + \"\\n\")\n\t\tprint('is_greylisted = ' + results['is_greylisted'] + \"\\n\")\n\t\tprint('is_disposable = ' + results['is_disposable'] + \"\\n\")\n\t\tprint('is_suppressed = ' + results['is_suppressed'] + \"\\n\")\n\t\tprint('is_role = ' + results['is_role'] + \"\\n\")\n\t\tprint('is_high_risk = ' + results['is_high_risk'] + \"\\n\")\n\t\tprint('is_catchall = ' + results['is_catchall'] + \"\\n\")\n\t\tprint('mailboxvalidator_score = ' + str(results['mailboxvalidator_score']) + \"\\n\")\n\t\tprint('time_taken = ' + str(results['time_taken']) + \"\\n\")\n\t\tprint('status = ' + results['status'] + \"\\n\")\n\t\tprint('credits_available = ' + str(results['credits_available']) + \"\\n\")\n\telse:\n\t\tprint('error_code = ' + results['error_code'] + \"\\n\")\n\t\tprint('error_message = ' + results['error_message'] + \"\\n\")\n```\n\nFunctions\n=========\n\n### SingleValidation(api_key)\n\nCreates a new instance of the MailboxValidator object with the API key.\n\n### ValidateEmail(email_address)\n\nPerforms email validation on the supplied email address.\n\nResult Fields\n=============\n\n### email_address\n\nThe input email address.\n\n### domain\n\nThe domain of the email address.\n\n### is_free\n\nWhether the email address is from a free email provider like Gmail or Hotmail.\n\nReturn values: True, False\n\n### is_syntax\n\nWhether the email address is syntactically correct.\n\nReturn values: True, False\n\n### is_domain\n\nWhether the email address has a valid MX record in its DNS entries.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_smtp\n\nWhether the mail servers specified in the MX records are responding to connections.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_verified\n\nWhether the mail server confirms that the email address actually exist.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_server_down\n\nWhether the mail server is currently down or unresponsive.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_greylisted\n\nWhether the mail server employs greylisting where an email has to be sent a second time at a later time.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_disposable\n\nWhether the email address is a temporary one from a disposable email provider.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_suppressed\n\nWhether the email address is in our blacklist.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_role\n\nWhether the email address is a role-based email address like admin@example.net or webmaster@example.net.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_high_risk\n\nWhether the email address contains high risk keywords.\n\nReturn values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### is_catchall\n\nWhether the email address is a catch-all address.\n\nReturn values: True, False, Unknown, -&nbsp;&nbsp;&nbsp;(- means not applicable)\n\n### mailboxvalidator_score\n\nEmail address reputation score.\n\nScore > 0.70 means good; score > 0.40 means fair; score <= 0.40 means poor.\n\n### time_taken\n\nThe time taken to get the results in seconds.\n\n### status\n\nWhether our system think the email address is valid based on all the previous fields.\n\nReturn values: True, False\n\n### credits_available\n\nThe number of credits left to perform validations.\n\n### error_code\n\nThe error code if there is any error. See error table below.\n\n### error_message\n\nThe error message if there is any error. See error table below.\n\n\nUsage for checking if an email is from a disposable email provider\n===================================================================\n\n```python\nimport MailboxValidator\n\n\tmbv = MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\n\tresults = mbv.DisposableEmail('example@example.com')\n\n\tif results is None:\n\t\tprint(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\tprint('email_address = ' + results['email_address'] + \"\\n\")\n\t\tprint('is_disposable = ' + results['is_disposable'] + \"\\n\")\n\t\tprint('credits_available = ' + str(results['credits_available']) + \"\\n\")\n\telse:\n\t\tprint('error_code = ' + results['error_code'] + \"\\n\")\n\t\tprint('error_message = ' + results['error_message'] + \"\\n\")\n```\n\nFunctions\n=========\n\n### SingleValidation(api_key)\n\nCreates a new instance of the MailboxValidator object with the API key.\n\n### DisposableEmail(email_address)\n\nCheck if the supplied email address is from a disposable email provider.\n\nResult Fields\n=============\n\n### email_address\n\nThe input email address.\n\n### is_disposable\n\nWhether the email address is a temporary one from a disposable email provider.\n\nReturn values: True, False\n\n### credits_available\n\nThe number of credits left to perform validations.\n\n### error_code\n\nThe error code if there is any error. See error table below.\n\n### error_message\n\nThe error message if there is any error. See error table below.\n\n\nUsage for checking if an email is from a free email provider\n============================================================\n\n```python\nimport MailboxValidator\n\n\tmbv = MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\n\tresults = mbv.FreeEmail('example@example.com')\n\n\tif results is None:\n\t\tprint(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\tprint('email_address = ' + results['email_address'] + \"\\n\")\n\t\tprint('is_free = ' + results['is_free'] + \"\\n\")\n\t\tprint('credits_available = ' + str(results['credits_available']) + \"\\n\")\n\telse:\n\t\tprint('error_code = ' + results['error_code'] + \"\\n\")\n\t\tprint('error_message = ' + results['error_message'] + \"\\n\")\n```\n\nFunctions\n=========\n\n### SingleValidation(api_key)\n\nCreates a new instance of the MailboxValidator object with the API key.\n\n### FreeEmail(email_address)\n\nCheck if the supplied email address is from a free email provider.\n\nResult Fields\n=============\n\n### email_address\n\nThe input email address.\n\n### is_free\n\nWhether the email address is from a free email provider like Gmail or Hotmail.\n\nReturn values: True, False\n\n### credits_available\n\nThe number of credits left to perform validations.\n\n### error_code\n\nThe error code if there is any error. See error table below.\n\n### error_message\n\nThe error message if there is any error. See error table below.\n\n\nErrors\n======\n\n| error_code | error_message |\n| ---------- | ------------- |\n| 100 | Missing parameter. |\n| 101 | API key not found. |\n| 102 | API key disabled. |\n| 103 | API key expired. |\n| 104 | Insufficient credits. |\n| 105 | Unknown error. |\n\nCopyright\n=========\n\nCopyright (C) 2018 by MailboxValidator.com, support@mailboxvalidator.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MailboxValidator/mailboxvalidator-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MailboxValidator",
    "package_url": "https://pypi.org/project/MailboxValidator/",
    "platform": "",
    "project_url": "https://pypi.org/project/MailboxValidator/",
    "project_urls": {
      "Homepage": "https://github.com/MailboxValidator/mailboxvalidator-python"
    },
    "release_url": "https://pypi.org/project/MailboxValidator/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Email verification module for Python using MailboxValidator API. It validates if the email is valid, from a free provider, contains high-risk keywords, whether it's a catch-all address and so much more.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10833108,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "191ccb6d111437dc132919b2c8c548ebe1f7cdf1df7fff2ad0387d125ae0e4b6",
        "md5": "dd7f97a26d5b7b66059058e20eb59783",
        "sha256": "61679f43913da1f97a3cf8babb84f3f9524b6621bdd2db76911ac544e6a4ac07"
      },
      "downloads": -1,
      "filename": "MailboxValidator-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd7f97a26d5b7b66059058e20eb59783",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3832,
      "upload_time": "2018-09-26T02:16:50",
      "upload_time_iso_8601": "2018-09-26T02:16:50.489602Z",
      "url": "https://files.pythonhosted.org/packages/19/1c/cb6d111437dc132919b2c8c548ebe1f7cdf1df7fff2ad0387d125ae0e4b6/MailboxValidator-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}