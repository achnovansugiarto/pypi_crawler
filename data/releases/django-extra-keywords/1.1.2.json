{
  "info": {
    "author": "Thomas Khyn",
    "author_email": "thomas@ksytek.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Internationalization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "Extra keywords for Django\n=========================\n\n|copyright| 2014-2015 Thomas Khyn\n\nTested with Django 1.4 to 1.8 and all supported versions of Python.\n\nAbout\n-----\n\nThe django ``makemessage`` management command parses the code of an application\nto generate .pot and .po files, provided the strings to be translated are\ncalled by the gettext-like functions (gettext, ugettext, ngettext,\nugettext_lazy, etc.) or the ``_`` alias.\n\nHowever, it is quite common to use other aliases than ``_``, for example for\nlazy translation, where ``_l`` can be used.\n\nBefore version 1.7, Django does not provide a way to specify other aliases\nthat may be used for translation strings. This plugin fills this gap, without\nhaving to patch the django code itself.\n\nFrom version 1.7, it is possible to use the ``xgettext_options`` in a custom\n``makemessages`` command. Using this app saves you the hassle of programming\na custom command.\n\n\nInstallation\n------------\n\nAs straightforward as it can be, using ``pip``::\n\n   pip install django-extra_keywords\n\nThen you will need to add ``'extra_keywords'`` to your ``INSTALLED_APPS``.\nNote that it does not make any sense to have this application installed in\nproduction and that it may only used in a development settings module.\n\n\nUsage\n-----\n\nOnce installed, you can:\n\n- either define ``GETTEXT_EXTRA_KEYWORDS`` in your ``settings`` module as a\n  tuple or list containing the keywords you would like to add::\n\n   GETTEXT_EXTRA_KEYWORDS = ('_l', '_n:1,2')\n\n- or use it from the command line, using the ``--extra-keyword`` option (with\n  no s, to add several keywords you have to repeat the option)::\n\n   manage.py makemessages [...] --extra-keyword=_l [...]\n\n\nKeyword format\n--------------\n\nWhen using aliases for one-argument functions (``ugettext``, ``ugettext_lazy``\n...), simply use the alias as a keyword. When using aliases for several\narguments functions, you need to specify them, according to the following\ntable:\n\n.. table::\n\n   =============  ==============\n   Function type  Keyword format\n   =============  ==============\n   gettext\\*      X\n   ngettext\\*     X:1,2\n   pgettext\\*     X:1c,2\n   npgettext\\*    X:1c,2,3\n   =============  ==============\n\nExample: if ``_n`` is an alias for ``ungettext``, the keyword to use in\n``GETTEXT_EXTRA_KEYWORDS`` or the ``makemessages`` command is ``'_n:1,2'``.\n\n\n.. |copyright| unicode:: 0xA9",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/tkhyn/django-extra_keywords",
    "keywords": "i18n,translation,gettext,keywords",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-extra_keywords",
    "package_url": "https://pypi.org/project/django-extra_keywords/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-extra_keywords/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/tkhyn/django-extra_keywords"
    },
    "release_url": "https://pypi.org/project/django-extra_keywords/1.1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Extra gettext keywords handling in Django",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1506972,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e078aa87a2c1baa5355a65bab311ce609045e9c148bf82bd6421c296ea8f7029",
        "md5": "1c1784861f8a3e1711e0339b086d33b2",
        "sha256": "9ff99ee6118de1a79e20dba3c8f04f32dbbb5e13ac45d85b64051e5d557b316a"
      },
      "downloads": -1,
      "filename": "django-extra_keywords-1.1.2.zip",
      "has_sig": false,
      "md5_digest": "1c1784861f8a3e1711e0339b086d33b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11283,
      "upload_time": "2015-04-15T21:40:33",
      "upload_time_iso_8601": "2015-04-15T21:40:33.174976Z",
      "url": "https://files.pythonhosted.org/packages/e0/78/aa87a2c1baa5355a65bab311ce609045e9c148bf82bd6421c296ea8f7029/django-extra_keywords-1.1.2.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}