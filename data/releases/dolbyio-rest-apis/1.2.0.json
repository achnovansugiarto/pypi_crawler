{
  "info": {
    "author": "Dolby.io",
    "author_email": "fabien.lavocat@dolby.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Dolby.io REST APIs\n\nPython wrapper for the dolby.io REST APIs [Communications](https://docs.dolby.io/interactivity/reference/authentication-api). All the functions are using the async pattern.\n\n## Install this project\n\nCheck the [dolbyio-rest-apis](https://pypi.org/project/dolbyio-rest-apis/) package on PyPI. To install the latest stable python package run the following command: \n\n```bash\npython3 -m pip install  dolbyio-rest-apis\n```\n\nUpgrade your package to the latest version:\n\n```bash\npython3 -m pip install --upgrade dolbyio-rest-apis\n```\n\n## Logging\n\nYou can change the log level by using the Python (logging)[https://docs.python.org/3/library/logging.html] library.\n\n```python\nimport logging\n\nlogging.basicConfig(level=\"DEBUG\")\n```\n\n## Communications Examples\n\n### Authenticate\n\nTo get an access token that will be used by the client SDK for an end user to open a session against dolby.io, use the following code:\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import authentication\n\nCONSUMER_KEY = \"YOUR_CONSUMER_KEY\"\nCONSUMER_SECRET = \"YOUR_CONSUMER_SECRET\"\n\nloop = asyncio.get_event_loop()\ntask = authentication.get_client_access_token(CONSUMER_KEY, CONSUMER_SECRET)\nat = loop.run_until_complete(task)\n\nprint(f\"Access Token: {at.access_token}\")\n```\n\nYou can write an async function like that:\n\n```python\nfrom dolbyio_rest_apis.communications import authentication\n\nCONSUMER_KEY = \"YOUR_CONSUMER_KEY\"\nCONSUMER_SECRET = \"YOUR_CONSUMER_SECRET\"\n\nasync def get_client_access_token():\n    at = await authentication.get_client_access_token(CONSUMER_KEY, CONSUMER_SECRET)\n    print(f\"Access Token: {at.access_token}\")\n\n```\n\nTo get an access token that will be used by your server to perform backend operations like creating a conference, use the following code.\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import authentication\n\nCONSUMER_KEY = \"YOUR_CONSUMER_KEY\"\nCONSUMER_SECRET = \"YOUR_CONSUMER_SECRET\"\n\nloop = asyncio.get_event_loop()\ntask = authentication.get_api_access_token(CONSUMER_KEY, CONSUMER_SECRET)\nat = loop.run_until_complete(task)\n\nprint(f\"Access Token: {at.access_token}\")\n```\n\n### Create a conference\n\nTo create a Dolby Voice conference, you first must retrieve an API Access Token, then use the following code to create the conference.\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import conference\nfrom dolbyio_rest_apis.communications.models import Participant, Permission, VideoCodec\n\naccess_token = \"\" # Retrieve an API Access Token\nowner_id = \"\" # Identifier of the owner of the conference\nalias = \"\" # Conference alias\n\nparticipants = [\n    Participant(\"hostA\", [Permission.JOIN, Permission.SEND_AUDIO, Permission.SEND_VIDEO], notify=True),\n    Participant(\"listener1\", [Permission.JOIN], notify=False),\n]\n\nloop = asyncio.get_event_loop()\ntask = conference.create_conference(\n    access_token,\n    owner_id,\n    alias,\n    video_codec=VideoCodec.VP8,\n    participants=participants\n)\nconf = loop.run_until_complete(task)\n\nprint(f\"Conference created: {conf.id}\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dolbyio-samples/dolbyio-rest-apis-client-python",
    "keywords": "",
    "license": "CC0 1.0 Universal",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dolbyio-rest-apis",
    "package_url": "https://pypi.org/project/dolbyio-rest-apis/",
    "platform": "",
    "project_url": "https://pypi.org/project/dolbyio-rest-apis/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dolbyio-samples/dolbyio-rest-apis-client-python/issues",
      "Documentation": "https://docs.dolby.io/interactivity/reference",
      "Homepage": "https://github.com/dolbyio-samples/dolbyio-rest-apis-client-python",
      "Source": "https://github.com/dolbyio-samples/dolbyio-rest-apis-client-python"
    },
    "release_url": "https://pypi.org/project/dolbyio-rest-apis/1.2.0/",
    "requires_dist": [
      "aiohttp (>=3.7.4)",
      "aiofiles (>=0.7.0)",
      "aiohttp-retry (>=2.4.6)",
      "Deprecated"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python wrapper for the Dolby.io REST APIs.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17213151,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "070035b6a8c703167e2845c513cc269be68009d0387015b30a3ac25884fd7aa6",
        "md5": "3b7162ed2ca5ff1003898b46076ce0db",
        "sha256": "d2b789761b2b4ea71a9042e094923ebd00f09414ef46b80d0fd6808c926f1d64"
      },
      "downloads": -1,
      "filename": "dolbyio_rest_apis-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b7162ed2ca5ff1003898b46076ce0db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 27545,
      "upload_time": "2021-12-23T17:50:53",
      "upload_time_iso_8601": "2021-12-23T17:50:53.083931Z",
      "url": "https://files.pythonhosted.org/packages/07/00/35b6a8c703167e2845c513cc269be68009d0387015b30a3ac25884fd7aa6/dolbyio_rest_apis-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c90768cdb3f65d08909796e65b957dfcb93a581cd58d516df0189d60044d24a",
        "md5": "1638d96cdaeffb06f719df85c183aad1",
        "sha256": "040b6b7043e5e80fd2b3ec121d2bd5ef4f6560634f02bc1b027a59d916cb9836"
      },
      "downloads": -1,
      "filename": "dolbyio-rest-apis-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1638d96cdaeffb06f719df85c183aad1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30870,
      "upload_time": "2021-12-23T17:50:55",
      "upload_time_iso_8601": "2021-12-23T17:50:55.761395Z",
      "url": "https://files.pythonhosted.org/packages/6c/90/768cdb3f65d08909796e65b957dfcb93a581cd58d516df0189d60044d24a/dolbyio-rest-apis-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}