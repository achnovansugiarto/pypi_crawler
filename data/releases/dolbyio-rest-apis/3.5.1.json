{
  "info": {
    "author": "Dolby.io",
    "author_email": "fabien.lavocat@dolby.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Dolby.io REST APIs Client for Python\n\nPython wrapper for the dolby.io REST [Communications](https://docs.dolby.io/communications-apis/reference/authentication-api), [Streaming](https://docs.dolby.io/streaming-apis/reference) and [Media](https://docs.dolby.io/media-processing/reference/media-enhance-overview) APIs.\n\n## Install this project\n\nCheck the [dolbyio-rest-apis](https://pypi.org/project/dolbyio-rest-apis/) package on PyPI. To install the latest stable python package run the following command: \n\n```bash\npython3 -m pip install dolbyio-rest-apis\n```\n\nUpgrade your package to the latest version:\n\n```bash\npython3 -m pip install --upgrade dolbyio-rest-apis\n```\n\n## Logging\n\nYou can change the log level by using the Python (logging)[https://docs.python.org/3/library/logging.html] library.\n\n```python\nimport logging\n\nlogging.basicConfig(level=\"DEBUG\")\n```\n\n## Communications Examples\n\n### Authenticate\n\nTo get an access token that will be used by the client SDK for an end user to open a session against dolby.io, use the following code:\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import authentication\n\nAPP_KEY = \"YOUR_APP_KEY\"\nAPP_SECRET = \"YOUR_APP_SECRET\"\n\nloop = asyncio.get_event_loop()\ntask = authentication.get_api_token(APP_KEY, APP_SECRET)\nat = loop.run_until_complete(task)\n\nprint(f\"Access Token: {at.access_token}\")\n```\n\nYou can write an async function like that:\n\n```python\nfrom dolbyio_rest_apis.communications import authentication\n\nAPP_KEY = \"YOUR_APP_KEY\"\nAPP_SECRET = \"YOUR_APP_SECRET\"\n\nasync def get_client_access_token():\n    at = await authentication.get_client_access_token(APP_KEY, APP_SECRET)\n    print(f\"Access Token: {at.access_token}\")\n\n```\n\nTo get an access token that will be used by your server to perform backend operations like creating a conference, use the following code.\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import authentication\n\nAPP_KEY = \"YOUR_APP_KEY\"\nAPP_SECRET = \"YOUR_APP_SECRET\"\n\nloop = asyncio.get_event_loop()\ntask = authentication.get_api_access_token(APP_KEY, APP_SECRET)\nat = loop.run_until_complete(task)\n\nprint(f\"Access Token: {at.access_token}\")\n```\n\n### Create a conference\n\nTo create a Dolby Voice conference, you first must retrieve an API Access Token, then use the following code to create the conference.\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.communications import conference\nfrom dolbyio_rest_apis.communications.models import Participant, Permission, VideoCodec\n\naccess_token = \"\" # Retrieve an API Access Token\nowner_id = \"\" # Identifier of the owner of the conference\nalias = \"\" # Conference alias\n\nparticipants = [\n    Participant(\"hostA\", [Permission.JOIN, Permission.SEND_AUDIO, Permission.SEND_VIDEO], notify=True),\n    Participant(\"listener1\", [Permission.JOIN], notify=False),\n]\n\nloop = asyncio.get_event_loop()\ntask = conference.create_conference(\n    access_token,\n    owner_id,\n    alias,\n    video_codec=VideoCodec.VP8,\n    participants=participants\n)\nconf = loop.run_until_complete(task)\n\nprint(f\"Conference created: {conf.id}\")\n```\n\n## Real-time Streaming Examples\n\n### Create a publish token\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.streaming import publish_token\nfrom dolbyio_rest_apis.streaming.models.publish_token import CreatePublishToken, CreateUpdatePublishTokenStream\n\napi_secret = \"\" # Retrieve your API Secret from the dashboard\n\ncreate_token = CreatePublishToken('my_token')\ncreate_token.streams.append(CreateUpdatePublishTokenStream('feed1', False))\n\nloop = asyncio.get_event_loop()\ntask = publish_token.create(api_secret, create_token)\ntoken = loop.run_until_complete(task)\n\nprint(token)\n```\n\n### Create a subscribe token\n\n```python\nconst dolbyio = require('@dolbyio/dolbyio-rest-apis-client');\n\nconst subscribeToken = await dolbyio.streaming.subscribeToken.create('api_secret', {\n    label: 'My token',\n    streams: [\n        {\n            streamName: 'feedA',\n        },\n    ],\n});\nconsole.log(subscribeToken);\n```\n\n## Media Examples\n\n### Media Input and Output\n\nUpload a media file to the temporary Dolby.io cloud storage for processing:\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.media import io\n\nACCESS_TOKEN = \"YOUR_API_TOKEN\"\n\n# Get an Upload URL\ntask = io.get_upload_url(\n    access_token=ACCESS_TOKEN,\n    dlb_url='dlb://in/file.mp4'\n)\nupload_url = loop.run_until_complete(task)\n\nprint(f\"Upload URL: {upload_url}\")\n\n# Upload the file\ntask = io.upload_file(\n    upload_url=upload_url,\n    file_path='/path/to/file.mp4'\n)\nloop.run_until_complete(task)\n```\n\nDownload a file that was processed by the API:\n\n```python\nimport asyncio\nfrom dolbyio_rest_apis.media import io\n\nACCESS_TOKEN = \"YOUR_API_TOKEN\"\n\ntask = io.download_file(\n    access_token=ACCESS_TOKEN,\n    dlb_url='dlb://out/file.mp4',\n    file_path='/path/to/processed_file.mp4'\n)\nloop.run_until_complete(task)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dolbyio/dolbyio-rest-apis-client-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dolbyio-rest-apis",
    "package_url": "https://pypi.org/project/dolbyio-rest-apis/",
    "platform": null,
    "project_url": "https://pypi.org/project/dolbyio-rest-apis/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dolbyio/dolbyio-rest-apis-client-python/issues",
      "Documentation": "https://docs.dolby.io/communications-apis/reference",
      "Homepage": "https://github.com/dolbyio/dolbyio-rest-apis-client-python",
      "Source": "https://github.com/dolbyio/dolbyio-rest-apis-client-python"
    },
    "release_url": "https://pypi.org/project/dolbyio-rest-apis/3.5.1/",
    "requires_dist": [
      "Deprecated",
      "aiofiles (>=0.7.0)",
      "aiohttp-retry (>=2.4.6)",
      "aiohttp (>=3.7.4)",
      "certifi (>=2022.12.7)"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python wrapper for the Dolby.io REST APIs.",
    "version": "3.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17213151,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ef9e3adaaa9648b20c1793ab01553d12aef154fa9b9e9e39cdacddac6945f38",
        "md5": "20ff36ab9dc1fd50901282ca466b9b52",
        "sha256": "11ba6d0ca05fc979bb42583c2a38121ac5e485ac016786366ed09b4caddc22b6"
      },
      "downloads": -1,
      "filename": "dolbyio_rest_apis-3.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "20ff36ab9dc1fd50901282ca466b9b52",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 58004,
      "upload_time": "2023-02-18T02:27:53",
      "upload_time_iso_8601": "2023-02-18T02:27:53.956809Z",
      "url": "https://files.pythonhosted.org/packages/4e/f9/e3adaaa9648b20c1793ab01553d12aef154fa9b9e9e39cdacddac6945f38/dolbyio_rest_apis-3.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b50d85bbc70a8fa54e3833c2c7fe2975041f75969061a8fa4bfc5ed7f91d6528",
        "md5": "e22cd72827daf6255434d8ccae1f3d89",
        "sha256": "801b176fdafd015df82ec74f49322fbcf941a1e29de17b9a6c4d8a91f85e2388"
      },
      "downloads": -1,
      "filename": "dolbyio-rest-apis-3.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e22cd72827daf6255434d8ccae1f3d89",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 57527,
      "upload_time": "2023-02-18T02:27:56",
      "upload_time_iso_8601": "2023-02-18T02:27:56.563476Z",
      "url": "https://files.pythonhosted.org/packages/b5/0d/85bbc70a8fa54e3833c2c7fe2975041f75969061a8fa4bfc5ed7f91d6528/dolbyio-rest-apis-3.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}