{
  "info": {
    "author": "Yurzs",
    "author_email": "yurzs+mdocument@yurzs.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "MDocument\n=========\n\n|pipeline status| |coverage report| |pypi link|\n\n.. |pipeline status| image:: https://git.yurzs.dev/yurzs/mdocument/badges/master/pipeline.svg\n   :target: https://git.yurzs.dev/yurzs/mdocument/-/commits/master\n\n.. |coverage report| image:: https://git.yurzs.dev/yurzs/mdocument/badges/master/coverage.svg\n   :target: https://git.yurzs.dev/yurzs/mdocument/-/commits/master\n\n.. |pypi link| image:: https://badge.fury.io/py/mdocument.svg\n   :target: https://pypi.org/project/mdocument\n\n.. |code style| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n\n.. |imports: isort| image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n   :target: https://pycqa.github.io/isort\n\n.. role:: strike\n    :class: strike\n\nMDocument is a simple ORM for MongoDB with addition of relations.\n\nUsage\n-----\n\nThere are two ways of using mdocument:\n1. Specify database, colleciton and client in class.\n2. Use modified mongo motor client.\n\nSpecifying document parameters in class\n---------------------------------------\n\n.. code-block:: python\n\n    import asyncio\n\n    import motor.motor_asyncio\n\n    from mdocument import MDocument, relations, model\n\n    client = motor.motor_asyncio.AsyncIOMotorClient()\n\n    class Video(MDocument):\n        __collection__ = \"videos\"\n        __database__ = \"mdocument\"\n        __client__ = client\n\n        class Model(MDocument.Model):\n            title = model.Field(str)\n            views_count = model.Field(int)\n            public_id = model.Field(str, unique=True)\n\n    class Comment(MDocument):\n        __collection__ = \"comments\"\n        __database__ = \"mdocument\"\n        __client__ = client\n\n        class Model(MDocument.Model):\n            text = model.Field(str)\n            video = model.FieldSync(Video, relation=relations.RelationOneToMany, synced_fields=[\"_id\", \"title\"])\n\n\n    async def main():\n        video = await Video.create({\"title\": \"Test\"})\n\n        comment1 = await Comment.create(\n            video=video._id,\n            message=\"First!\",\n        )\n\n        comment2 = await Comment.create(\n            video=video._id,\n            message=\"Second!\"\n        )\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\nNow we can easily access our comments using our related documents\n\nTODO: REWRITE DOCUMENTATION!\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.yurzs.dev/yurzs/MDocument",
    "keywords": "mongo,motor,Document,ORM",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdocument",
    "package_url": "https://pypi.org/project/mdocument/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdocument/",
    "project_urls": {
      "Homepage": "https://git.yurzs.dev/yurzs/MDocument"
    },
    "release_url": "https://pypi.org/project/mdocument/4.0.1611942696/",
    "requires_dist": [
      "motor"
    ],
    "requires_python": "",
    "summary": "Simple DRM for motor client",
    "version": "4.0.1611942696",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13162189,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8eedb0cee0f40f71389e59534d873e873b2c57fdb4145db42c69b31c77d94bb",
        "md5": "55ba037fc607162d2168af756bfb08c3",
        "sha256": "46a0ae0aa8cd17eb05b554f88b9b2fc514b488a311bea04030317ff1ce0e1c01"
      },
      "downloads": -1,
      "filename": "mdocument-4.0.1611942696-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55ba037fc607162d2168af756bfb08c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13128,
      "upload_time": "2021-01-29T17:51:38",
      "upload_time_iso_8601": "2021-01-29T17:51:38.095404Z",
      "url": "https://files.pythonhosted.org/packages/b8/ee/db0cee0f40f71389e59534d873e873b2c57fdb4145db42c69b31c77d94bb/mdocument-4.0.1611942696-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff40f3754e642a34845974f312c98598301dff2e151b203c5eddd43d180574b2",
        "md5": "f43d0f280b715bcf4ef1f5651bfda74f",
        "sha256": "56b67afffa893074759819e342f67784a49aacbcbc7d1d27dc1eab9a63ef2cad"
      },
      "downloads": -1,
      "filename": "mdocument-4.0.1611942696.tar.gz",
      "has_sig": false,
      "md5_digest": "f43d0f280b715bcf4ef1f5651bfda74f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10525,
      "upload_time": "2021-01-29T17:51:39",
      "upload_time_iso_8601": "2021-01-29T17:51:39.385023Z",
      "url": "https://files.pythonhosted.org/packages/ff/40/f3754e642a34845974f312c98598301dff2e151b203c5eddd43d180574b2/mdocument-4.0.1611942696.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}