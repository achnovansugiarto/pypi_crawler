{
  "info": {
    "author": "Sorin Sbarnea",
    "author_email": "sorin.sbarnea@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# mk\n\n`mk` is a CLI tool that aims to ease contribution to any open-source project\nby hiding repository implementation details from the casual contributor.\nWith it, you can contribute without having to know all the build\nand testing tools that the project team already uses, which often have\nstrange requirements.\n\nIf you ever asked yourself one of the below questions, probably you would\nwant to try `mk` and if it can help you\n\n* How do I run tests locally?\n* Which are the test suites I can run?\n* Is my change ready to be reviewed?\n* How can I propose a change for review?\n\nRun `mk` inside any cloned repository to display which options you have. No\nconfiguration file is needed as the tool will look for\ncommon tools used by the repository and expose their commands.\n\n`mk` is inspired by the tools listed below, but it does not aim to replace them.\n\n* [make](https://www.gnu.org/software/make/)\n* [waf](https://gitlab.com/ita1024/waf)\n* [tox](https://github.com/tox-dev/tox/) and [nox](https://nox.thea.codes/en/stable/)\n* [npm](https://www.npmjs.com/) and [yarn](https://yarnpkg.com/)\n* [pre-commit](https://pre-commit.com/)\n\n## Installation\n\nWe recommend using [`pipx`](https://pipxproject.github.io/pipx/) to install\n`mk` in order to avoid potential dependency conflicts. You can use\n`pip3 install mk` as well.\n\n```shell\npipx install mk\n```\n\n## Run it\n\n```text\n$ mk\nUsage: mk [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version\n  -v, --verbose         Increase verbosity.  [default: 0]\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n\n  --help                Show this message and exit.\n\nCommands:\n  detect     Display detected information about current project.\n  lint       ... (from pre-commit)\n  lint2      ... (from tox)\n  packaging  ... (from tox)\n  py         ... (from tox)\n  up         Upload current change by creating or updating a CR/PR.\n```\n\n## How it works\n\n`mk` inspects the current core repository and detects build tools used\nby the project, like pre-commit, tox, npm and exposes their commands to\nthe user in a **predictable** way.\n\nFor example, you should be able to lint any code repository running only\n`mk lint`, regardless of author preference for picking one way to execute\nthem or another.\n\nBe assured that `mk` does not make use of AI to guess what needs to\nrun. As most projects use relatively similar patterns, it is easy to identify\nthe one to execute.\n\nAt this moment, if two tools expose the same command name, the tool will add\na number to its name. In the future, we may decide to either chain them under\na single name or allow some tools to shadow others and avoid duplicates.\n\n## What are the main benefits\n\nOne of the benefits of `mk` is that it should reduce the amount of\nhow-to-contribute documentation the author needs to write.\n\nA considerable amount of maintainer effort can go into producing documentation\nthat makes it easier for someone to make a contribution to a project.\n\nSome projects are less affected than others. That is usually related to\nhow well do the potential contributors know the practices used by the\nproject. Still, if your project has a wide range of uses, you will quickly\ndiscover that newbie contributors may hit a knowledge wall. Such a barrier will\nlikely prevent most of them from becoming active contributors. The remaining\nones will flood the project with questions, distracting other maintainers from\ndoing more advanced tasks.\n\nUnless you want to deter contributions, you should plan to make it as easy as\npossible for people to contribute. That is one area where `mk` aims to help.\n\n## Using mk to propose changes to projects\n\nInstead of writing long list of tasks to follow, we can use a tool that\ntells him what to do next. For example, `mk` has a build-in command named\n`up(load)` that aims to ease preparing a local change from being\nproposed to the project.\n\nThis command detects if it should use GitHub workflow or\nGerrit and will run the appropriate commands for opening or updating a CR/PR. Users\nwill be allowed to upload a change only after passing the minimal set of local\ntests, preventing noisy mistakes or clog CI/CD pipelines.\n\nIn addition to linting, it will also check that the repository is\nnot in dirty status or that the testing did not leave untracked files on disk.\n\n## Planned features\n\n* Allow command aliases like git. If you type `mk l` it should directly run\n  lint unless there is another command starting with `l`. (#19)\n* Persistent state of each command run - This means that it will know if a\n  specific command was run and if it failed or not. The state would be linked\n  to the repository state, so modifying a tracked file would reset the state\n  to be unknown. (#20)\n* Configuration file where additional actions can be added. (#21)\n* Dependencies between commands. While some tools support dependencies,\n  many do not. You should be able to declare that a specific command would\n  run only after another one already passed. (#22)\n* Ability to generate CI/CD pipelines so the user would spend less time writing\n  non-portable configuration. (#23)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pycontribs/mk",
    "keywords": "mk",
    "license": "MIT",
    "maintainer": "Sorin Sbarnea",
    "maintainer_email": "sorin.sbarnea@gmail.com",
    "name": "mk",
    "package_url": "https://pypi.org/project/mk/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mk/",
    "project_urls": {
      "Homepage": "https://github.com/pycontribs/mk",
      "Source": "https://github.com/pycontribs/mk",
      "Tracker": "https://github.com/pycontribs/mk"
    },
    "release_url": "https://pypi.org/project/mk/1.1.0/",
    "requires_dist": [
      "GitPython",
      "diskcache (>=5.2.1)",
      "blessings",
      "build (>=0.3.1.post1)",
      "click (>=7.1.2)",
      "click-help-colors",
      "colorama",
      "importlib-metadata",
      "pip (>=21.0.1)",
      "pluggy",
      "pygments",
      "pyyaml",
      "rich (>=9.0)",
      "shellingham",
      "subprocess-tee (>=0.3.1)",
      "twine (>=3.4.1)",
      "typer",
      "dataclasses ; python_version < \"3.7\"",
      "cached-property (>=1.5.2) ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "mk",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17366833,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e300a540823d3ce32ab525564d60ea460ccc0b6a4bd61ca40f7e4e1f8c3e25b",
        "md5": "7d711d291804477fe94d3edf9cc0218c",
        "sha256": "6c87a0977900be2a7195687bfa40a5caa48a22fdae73561ee815226a47f4966f"
      },
      "downloads": -1,
      "filename": "mk-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d711d291804477fe94d3edf9cc0218c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17323,
      "upload_time": "2021-06-22T11:15:03",
      "upload_time_iso_8601": "2021-06-22T11:15:03.593490Z",
      "url": "https://files.pythonhosted.org/packages/5e/30/0a540823d3ce32ab525564d60ea460ccc0b6a4bd61ca40f7e4e1f8c3e25b/mk-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b85a1463daa3be7ee87592f83ae3359f7a18864d542432d4ab4b082ef04580cc",
        "md5": "112bec24fd7d3c0a135ac34828928de5",
        "sha256": "35305e34586da1fc3ac9fd355d04fa82b495ed6e6704242d36c4da9177b35047"
      },
      "downloads": -1,
      "filename": "mk-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "112bec24fd7d3c0a135ac34828928de5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47416,
      "upload_time": "2021-06-22T11:15:05",
      "upload_time_iso_8601": "2021-06-22T11:15:05.146344Z",
      "url": "https://files.pythonhosted.org/packages/b8/5a/1463daa3be7ee87592f83ae3359f7a18864d542432d4ab4b082ef04580cc/mk-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}