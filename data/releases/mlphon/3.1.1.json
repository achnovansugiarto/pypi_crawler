{
  "info": {
    "author": "Kavya Manohar",
    "author_email": "sakhi.kavya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Python Interface for Malayalam phonetic analyser\n==================================================\n.. image:: https://img.shields.io/pypi/v/mlphon.svg\n    :target: https://pypi.python.org/pypi/mlphon\n    :alt: PyPI Version\n\nThis is python interface for the `Malayalam phonetic analyser - mlphon`_.\n\nInstallation\n------------\n\nUsing Virtual Environment (https://docs.python.org/3/library/venv.html) is recommended. \n\n  .. code-block:: console\n\n    $ pip install mlphon\n\n\nSyllablize a Malayalam Word\n---------------------------\n\nThe following python snippet will split a word in Malayalam script into syllables.\n\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser\n    mlphon = PhoneticAnalyser()\n    mlphon.split_to_syllables('കേരളം')\n\nIt will give the result\n\n    ['കേ', 'ര', 'ളം']\n\nPhonetically analyse a Malayalam Word\n-------------------------------------\n\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser\n    mlphon = PhoneticAnalyser()\n    mlphon.analyse('കേരളം')\n\nIt gives the result as a sequence of ipa and associated phonetic tags.\n\n    [{'phonemes': [{'ipa': 'k', 'tags': ['plosive', 'voiceless', 'unaspirated', 'velar']}, {'ipa': 'eː', 'tags': ['v_sign']}]}, {'phonemes': [{'ipa': 'ɾ', 'tags': ['flapped', 'alveolar']}, {'ipa': 'a', 'tags': ['inherentvowel']}]}, {'phonemes': [{'ipa': 'ɭ', 'tags': ['lateral', 'retroflex']}, {'ipa': 'a', 'tags': ['inherentvowel']}, {'ipa': 'm', 'tags': ['anuswara']}]}]\n\nMalayalam g2p : Grapheme to Phoneme conversion\n----------------------------------------------\n\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser\n    mlphon = PhoneticAnalyser()\n    mlphon.grapheme_to_phoneme('കാറ്റ്')\n\nIt gives the ipa sequence as output.\n\n    ['kaːṯṯə']\n\nMalayalam p2g : Phoneme to Grapheme conversion\n----------------------------------------------\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser\n    mlphon = PhoneticAnalyser()\n    mlphon.phoneme_to_grapheme('paːlə')\n\nIt gives the corresponding grapheme sequences as output.\n\n    [പാല്']\n\n\nCommand Line Interface for the above operations: `mlphon`\n----------------------------------------------------------\n  .. code-block:: console\n\n    usage:\n    \n    mlphon [-h] [-s] [-a] [-p] [-pe string] [-se string] [-g] [-i INFILE]\n            [-o OUTFILE] [-v]\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -s, --syllablize      Syllablize the input Malayalam string\n    -a, --analyse         Phonetically analyse the input Malayalam string\n    -p, --tophoneme       Transcribe the input Malayalam grapheme to phoneme\n                            sequence\n    -pe string, --phoneme_end string\n                            String to be inserted at end of phoneme\n    -se string, --syllable_end string\n                            String to be inserted at end of syllable\n    -g, --tographeme      Transcribe the input phoneme sequence to Malayalam\n                            grapheme\n    -i INFILE, --input INFILE\n                            source of analysis data\n    -o OUTFILE, --output OUTFILE\n                            target of generated strings\n    -v, --verbose         print verbosely while processing\n\nFor example to perform g2p operation on a set of words stored in input.txt with one Malayalam word per line,\n  .. code-block:: console\n\n    mlphon -p -pe \" \" -se \".\" -i path/to/inputfile.txt -o path/to/outputfile.txt\n\nInputfile contents:\n  .. code-block:: console\n\n    cat path/to/inputfile.txt\n    അകത്തുള്ളത്\n    അകപ്പെട്ടത്\n    അകലെ\n\nOutputfile contents:\n  .. code-block:: console\n\n\tഅകത്തുള്ളത് a .k a .t̪ t̪ u .ɭ ɭ a .t̪ ə .\n\tഅകപ്പെട്ടത്        a .k a .p p e .ʈ ʈ a .t̪ ə .\n\tഅകലെ    a .k a .l e .\n\nApplication: Using `mlphon` to create a phonetic lexicon\n--------------------------------------------------------\nA typical use case of phonetic analysis is to create a phonetic lexicon to be used in Automatic Speech Recognition or Text to Speech Synthesis. The phonetic representation with each phoneme separated by a space can be obtained as below:\n\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser, split_as_phonemes\n    mlphon = PhoneticAnalyser()\n    analysis = mlphon.analyse('എന്നാൽ')\n    for result in analysis:\n      split_as_phonemes(result)\n\nIt results in the output, two different valid phoneme sequences:\n\n    'e n̪ n̪ aː l'\n    \n    'e n n aː l'\n\nThe phonetic representation with each syllable separated by a space can be obtained as below:\n\n  .. code-block:: python\n\n    from mlphon import PhoneticAnalyser, split_as_syllables\n    mlphon = PhoneticAnalyser()\n    analysis = mlphon.analyse('ഇന്ത്യയുടെ')\n    for result in analysis:\n      split_as_syllables(result)\n\nIt results in the output:\n\n    'i n̪t̪ja ju ʈe'\n\nTo get phonemes and syllables with user defined end-marker strings as below:\n\n    .. code-block:: python\n  \n      from mlphon import PhoneticAnalyser, phonemize\n      mlphon = PhoneticAnalyser()\n      analysis = mlphon.analyse('ഇന്ത്യയുടെ')\n      for result in analysis:\n        phonemize(result, \" \", \".\")\n  \nIt results in the output with a 'space' after every phoneme and a 'period' after every syllable\n  \n      'i .n̪ t̪ j a .j u .ʈ e .'\n\n\n\n.. _`Malayalam Phonetic Analyser - mlphon`: https://gitlab.com/smc/mlphon\n.. _`venv`: https://docs.python.org/3/library/venv.html",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/smc/mlphon",
    "keywords": "Malayalam phonetic FST analyser generator IPA syllable",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlphon",
    "package_url": "https://pypi.org/project/mlphon/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlphon/",
    "project_urls": {
      "Homepage": "https://gitlab.com/smc/mlphon"
    },
    "release_url": "https://pypi.org/project/mlphon/3.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Malayalam phonetic analyser",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11457795,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4ccf81b6a98133d51dfee1506df04723f1932d07506e8a99ba1d4bef11e8e87",
        "md5": "077b1466dec2ccbd03a69d4b0b3a939f",
        "sha256": "174b3f6cddbc400023fb6bb6ecda8419cf342032e24096da04737d22a1ab07a3"
      },
      "downloads": -1,
      "filename": "mlphon-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "077b1466dec2ccbd03a69d4b0b3a939f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21223,
      "upload_time": "2021-07-31T12:54:05",
      "upload_time_iso_8601": "2021-07-31T12:54:05.249438Z",
      "url": "https://files.pythonhosted.org/packages/c4/cc/f81b6a98133d51dfee1506df04723f1932d07506e8a99ba1d4bef11e8e87/mlphon-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}