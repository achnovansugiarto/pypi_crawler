{
  "info": {
    "author": "chaarlottte",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DortSolver Python API\r\n(absolute insanity)\r\n\r\nUsing [dort](https://github.com/discord-trollering)'s API, which you can purchase at [discord.gg/funcaptcha](https://discord.gg/funcaptcha).\r\n\r\nNot going to be hosted on pip for now, maybe later when I have more time lol.\r\n\r\nNow also featuring Dort's tempmail services! You can purchase it at [discord.gg/emails](https://discord.gg/emails).\r\n\r\n## Quick, bad documentation\r\n\r\n### Installation\r\n```sh\r\n$ pip install dort\r\n```\r\n\r\n### Solve FunCaptcha\r\n```python\r\nfrom dort.captcha import FuncaptchaTask\r\n\r\nfuncapSolver = FuncaptchaTask(\r\n    apiKey=\"your api key\", # Your DortSolver API key.\r\n    publicKey=\"B7D8911C-5CC8-A9A3-35B0-554ACEE604DA\", # The Funcaptcha public key of the website you wish to solve on.\r\n    siteUrl=\"https://iframe.arkoselabs.com\", # The URL of the site you are wishing to solve on (e.g. https://iframe.arkoselabs.com for outlook)\r\n    apiUrl=\"https://client-api.arkoselabs.com\", # Optional. Defaults to https://client-api.arkoselabs.com/.\r\n    blob=\"blob\", # Optional. Not needed for Outlook, or any other site I've tried besides ROBLOX.\r\n    proxy=\"socks5://user:pass@host:port\"\r\n)\r\n\r\nprint(funcapSolver.solve())\r\n```\r\n\r\n### Solve HCaptcha\r\n```python\r\nfrom dort.captcha import HCaptchaTask\r\n\r\nhcapSolver = HCaptchaTask(\r\n    apiKey=\"your api key\", # Your DortSolver API key.\r\n    publicKey=\"a5f74b19-9e45-40e0-b45d-47ff91b7a6c2\",  # The HCaptcha public key of the website you wish to solve on.\r\n    siteUrl=\"https://accounts.hcaptcha.com/demo/\", # The URL of the site you are wishing to solve on \r\n    proxy=\"socks5://user:pass@host:port\" # (Optional) Your proxy URL. Formatted as protocol://user:pass@host:port\r\n)\r\n\r\nprint(hcapSolver.solve())\r\n```\r\n\r\n### Solve ReCaptchaV3\r\n```python\r\nfrom dort.captcha import ReCaptchaV3Task\r\n\r\nrecapSolver = ReCaptchaV3Task(\r\n    apiKey=\"your api key\",\r\n    publicKey=\"6LdyC2cUAAAAACGuDKpXeDorzUDWXmdqeg-xy696\", \r\n    siteUrl=\"https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\",\r\n    callback=\"https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php?token=\"\r\n)\r\nprint(recapSolver.solve())\r\n```\r\n\r\n### DortGen Email Example\r\n```python\r\nfrom dort.mail import DortMail\r\nfrom imap_tools import MailMessage\r\n\r\nmail = DortMail(\"apiKey\") # Replace with your API key.\r\n\r\nprint(mail.getTypes()) # Print out the currently available email types.\r\nprint(mail.getBalance()) # Print out your current balance.\r\n\r\ndortMail = mail.purchaseMails(type=1, amount=1)[0] # Returns an array of type DortMailAddress.\r\n\r\nx: MailMessage # This is included with the imap_tools library, used for fetching emails.\r\nfor x in dortMail.getMailbox(): # Get the entire mailbox\r\n    print(x.subject) # Print out the subject of the message.\r\n\r\nx: MailMessage\r\nfor x in address.getEmailsFromSender(\"noreply@discord.com\"): # This will do the same as above, but only show emails from a specific address.\r\n    print(x.subject)\r\n```\r\n\r\nYou can also simply login to any outlook/hotmail email address and check it with this API, but it's essentially wrapping a pre-existing IMAP library, so it may be in your best interest to instead just use that. You can find said IMAP library [here](https://pypi.org/project/imap-tools/).\r\n\r\n```python\r\nfrom dort.mail import DortMailAddress\r\nfrom imap_tools import MailMessage\r\n\r\naddress = DortMailAddress(\"stevemolon75353@outlook.com\", \"L3yf$DortGen\") # Login to account with email and password\r\n\r\nx: MailMessage # This is included with the imap_tools library, used for fetching emails.\r\nfor x in dortMail.getMailbox(): # Get the entire mailbox\r\n    print(x.subject) # Print out the subject of the message.\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chaarlottte/dortsolver-python-api",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dort",
    "package_url": "https://pypi.org/project/dort/",
    "platform": null,
    "project_url": "https://pypi.org/project/dort/",
    "project_urls": {
      "Homepage": "https://github.com/chaarlottte/dortsolver-python-api"
    },
    "release_url": "https://pypi.org/project/dort/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "dort solver/email api wrapper for python",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17288945,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67a1d3474abb65f64023be91c79cf2fda2ace387caebc23927603962fc3ecd6c",
        "md5": "4c735194d53dd27f3175664ac90b8628",
        "sha256": "97d497f4eaefb665f1cab9644521c0e98892916c5ebcf10190ecc87ae052c478"
      },
      "downloads": -1,
      "filename": "dort-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4c735194d53dd27f3175664ac90b8628",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6251,
      "upload_time": "2023-03-05T21:10:05",
      "upload_time_iso_8601": "2023-03-05T21:10:05.385017Z",
      "url": "https://files.pythonhosted.org/packages/67/a1/d3474abb65f64023be91c79cf2fda2ace387caebc23927603962fc3ecd6c/dort-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}