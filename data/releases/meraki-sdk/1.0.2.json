{
  "info": {
    "author": "APIMatic SDK Generator",
    "author_email": "support@apimatic.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Getting started\n\nThe Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\n\n## What can the API be used for?\nThe Dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\n\n* Add new organizations, admins, networks, devices, VLANs, and more\n* Configure networks at scale\n* Automatically on-board and off-board new employees’ teleworker setups\n* Build your own dashboard for store managers, field techs, or unique use cases\n\n## Enabling the Dashboard API\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization > Settings**\n\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\n\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\n\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\n\n*Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\n\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\n\nCopy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\n\nEvery request must specify an API key via a request header.\n\nThe API key must be specified in the URL header. The API will return a 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\n\n`X-Cisco-Meraki-API-Key: <secret key>`\n\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\n\n\n## Versioning\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\n\n* Adding new API resources\n\n* Adding new optional request parameters to existing API methods\n\n* Adding new properties to existing API responses\n\n* Changing the order of properties in existing API responses\n\n## Rate Limit\n* The Dashboard API is limited to **5 calls per second**, per organization.\n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.\n\n\n## Additional Details\nIdentifiers in the API are opaque strings. A `{networkId}`, for example, might be the string “126043”, whereas an `{orderId}` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\n\nVerbs in the API follow the usual REST conventions:\n\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/{organizationId}` returns a particular organization.\n\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/{organizationId}/admins`, or performs some other non-idempotent change.\n\n`PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value.\n\n`DELETE` removes a resource.\n\n\n## How to Build\n\n\nYou must have Python ```2 >=2.7.9``` or Python ```3 >=3.4``` installed on your system to install and run this SDK. This SDK package depends on other Python packages like nose, jsonpickle etc. \nThese dependencies are defined in the ```requirements.txt``` file that comes with the SDK.\nTo resolve these dependencies, you can use the PIP Dependency manager. Install it by following steps at [https://pip.pypa.io/en/stable/installing/](https://pip.pypa.io/en/stable/installing/).\n\nPython and PIP executables should be defined in your PATH. Open command prompt and type ```pip --version```.\nThis should display the version of the PIP Dependency Manager installed if your installation was successful and the paths are properly defined.\n\n* Using command line, navigate to the directory containing the generated files (including ```requirements.txt```) for the SDK.\n* Run the command ```pip install -r requirements.txt```. This should install all the required dependencies.\n\n![Building SDK - Step 1](https://apidocs.io/illustration/python?step=installDependencies&workspaceFolder=Meraki-Python)\n\n\n## How to Use\n\nThe following section explains how to use the Meraki SDK package in a new project.\n\n### 1. Open Project in an IDE\n\nOpen up a Python IDE like PyCharm. The basic workflow presented here is also applicable if you prefer using a different editor or IDE.\n\n![Open project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=pyCharm)\n\nClick on ```Open``` in PyCharm to browse to your generated SDK directory and then click ```OK```.\n\n![Open project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=openProject0&workspaceFolder=Meraki-Python)     \n\nThe project files will be displayed in the side bar as follows:\n\n![Open project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=openProject1&workspaceFolder=Meraki-Python&projectName=meraki_sdk)     \n\n### 2. Add a new Test Project\n\nCreate a new directory by right clicking on the solution name as shown below:\n\n![Add a new project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=createDirectory&workspaceFolder=Meraki-Python&projectName=meraki_sdk)\n\nName the directory as \"test\"\n\n![Add a new project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=nameDirectory)\n\nAdd a python file to this project with the name \"testsdk\"\n\n![Add a new project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=createFile&workspaceFolder=Meraki-Python&projectName=meraki_sdk)\n\nName it \"testsdk\"\n\n![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=nameFile)\n\nIn your python file you will be required to import the generated python library using the following code lines\n\n```Python\nfrom meraki_sdk.meraki_sdk_client import MerakiSdkClient\n```\n\n![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=projectFiles&workspaceFolder=Meraki-Python&libraryName=meraki_sdk.meraki_sdk_client&projectName=meraki_sdk&className=MerakiSdkClient)\n\nAfter this you can write code to instantiate an API client object, get a controller object and  make API calls. Sample code is given in the subsequent sections.\n\n### 3. Run the Test Project\n\nTo run the file within your test project, right click on your Python file inside your Test project and click on ```Run```\n\n![Run Test Project - Step 1](https://apidocs.io/illustration/python?step=runProject&workspaceFolder=Meraki-Python&libraryName=meraki_sdk.meraki_sdk_client&projectName=meraki_sdk&className=MerakiSdkClient)\n\n\n## How to Test\n\nYou can test the generated SDK and the server with automatically generated test\ncases. unittest is used as the testing framework and nose is used as the test\nrunner. You can run the tests as follows:\n\n  1. From terminal/cmd navigate to the root directory of the SDK.\n  2. Invoke ```pip install -r test-requirements.txt```\n  3. Invoke ```nosetests```\n\n## Initialization\n\n### Authentication\nIn order to setup authentication and initialization of the API client, you need the following information.\n\n| Parameter | Description |\n|-----------|-------------|\n| x_cisco_meraki_api_key | Demo DevNet Sandbox |\n\n\n\nAPI client can be initialized as following.\n\n```python\n# Configuration parameters and credentials\nx_cisco_meraki_api_key = '15da0c6ffff295f16267f88f98694cf29a86ed87' # Demo DevNet Sandbox\n\nclient = MerakiSdkClient(x_cisco_meraki_api_key)\n```\n\n\n\n# Class Reference\n\n## <a name=\"list_of_controllers\"></a>List of Controllers\n\n* [OrganizationsController](#organizations_controller)\n* [MX1ManyNATRulesController](#mx1_many_nat_rules_controller)\n* [FirewalledServicesController](#firewalled_services_controller)\n* [TrafficShapingController](#traffic_shaping_controller)\n* [WirelessHealthController](#wireless_health_controller)\n* [AlertSettingsController](#alert_settings_controller)\n* [AdminsController](#admins_controller)\n* [ActionBatchesController](#action_batches_controller)\n* [SwitchPortsController](#switch_ports_controller)\n* [SsidsController](#ssids_controller)\n* [SplashSettingsController](#splash_settings_controller)\n* [SplashLoginAttemptsController](#splash_login_attempts_controller)\n* [SMController](#sm_controller)\n* [NamedTagScopeController](#named_tag_scope_controller)\n* [SAMLRolesController](#saml_roles_controller)\n* [PIIController](#pii_controller)\n* [OpenAPISpecController](#open_api_spec_controller)\n* [ManagementInterfaceSettingsController](#management_interface_settings_controller)\n* [MRL3FirewallController](#mrl3_firewall_controller)\n* [MXL7FirewallController](#mxl7_firewall_controller)\n* [GroupPoliciesController](#group_policies_controller)\n* [NetworksController](#networks_controller)\n* [MVSenseController](#mv_sense_controller)\n* [VlansController](#vlans_controller)\n* [UplinkSettingsController](#uplink_settings_controller)\n* [StaticRoutesController](#static_routes_controller)\n* [MXPortForwardingRulesController](#mx_port_forwarding_rules_controller)\n* [MX11NATRulesController](#mx11_nat_rules_controller)\n* [ContentFilteringRulesController](#content_filtering_rules_controller)\n* [ContentFilteringCategoriesController](#content_filtering_categories_controller)\n* [SyslogServersController](#syslog_servers_controller)\n* [SwitchStacksController](#switch_stacks_controller)\n* [SwitchProfilesController](#switch_profiles_controller)\n* [SwitchSettingsController](#switch_settings_controller)\n* [SNMPSettingsController](#snmp_settings_controller)\n* [MalwareSettingsController](#malware_settings_controller)\n* [IntrusionSettingsController](#intrusion_settings_controller)\n* [RadioSettingsController](#radio_settings_controller)\n* [ClientsController](#clients_controller)\n* [APIUsageController](#api_usage_controller)\n* [NetFlowSettingsController](#net_flow_settings_controller)\n* [MerakiAuthUsersController](#meraki_auth_users_controller)\n* [HTTPServersController](#http_servers_controller)\n* [MXVPNFirewallController](#mxvpn_firewall_controller)\n* [MXL7ApplicationCategoriesController](#mxl7_application_categories_controller)\n* [MXL3FirewallController](#mxl3_firewall_controller)\n* [MXCellularFirewallController](#mx_cellular_firewall_controller)\n* [DevicesController](#devices_controller)\n* [ConfigTemplatesController](#config_templates_controller)\n* [CamerasController](#cameras_controller)\n* [BluetoothClientsController](#bluetooth_clients_controller)\n* [SecurityEventsController](#security_events_controller)\n* [WebhookLogsController](#webhook_logs_controller)\n\n## <a name=\"organizations_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".OrganizationsController\") OrganizationsController\n\n### Get controller instance\n\nAn instance of the ``` OrganizationsController ``` class can be accessed from the API Client.\n\n```python\n organizations_controller = client.organizations\n```\n\n### <a name=\"get_organizations\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organizations\") get_organizations\n\n> List the organizations that the user has privileges on\n\n```python\ndef get_organizations(self)\n```\n\n#### Example Usage\n\n```python\n\nresult = organizations_controller.get_organizations()\n\n```\n\n\n### <a name=\"update_organization_third_party_vpn_peers\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.update_organization_third_party_vpn_peers\") update_organization_third_party_vpn_peers\n\n> Update the third party VPN peers for an organization\n\n```python\ndef update_organization_third_party_vpn_peers(self,\n                                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationThirdPartyVPNPeers |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nupdate_organization_third_party_vpn_peers = UpdateOrganizationThirdPartyVPNPeersModel()\ncollect['update_organization_third_party_vpn_peers'] = update_organization_third_party_vpn_peers\n\n\nresult = organizations_controller.update_organization_third_party_vpn_peers(collect)\n\n```\n\n\n### <a name=\"get_organization_third_party_vpn_peers\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization_third_party_vpn_peers\") get_organization_third_party_vpn_peers\n\n> Return the third party VPN peers for an organization\n\n```python\ndef get_organization_third_party_vpn_peers(self,\n                                               organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = organizations_controller.get_organization_third_party_vpn_peers(organization_id)\n\n```\n\n\n### <a name=\"get_organization_uplinks_loss_and_latency\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization_uplinks_loss_and_latency\") get_organization_uplinks_loss_and_latency\n\n> Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago\n\n```python\ndef get_organization_uplinks_loss_and_latency(self,\n                                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes. |\n| uplink |  ``` Optional ```  | Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks. |\n| ip |  ``` Optional ```  | Optional filter for a specific destination IP. Default will return all destination IPs. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nuplink = 'uplink'\ncollect['uplink'] = uplink\n\nip = 'ip'\ncollect['ip'] = ip\n\n\nresult = organizations_controller.get_organization_uplinks_loss_and_latency(collect)\n\n```\n\n\n### <a name=\"claim_organization\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.claim_organization\") claim_organization\n\n> Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.\n\n```python\ndef claim_organization(self,\n                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| claimOrganization |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nclaim_organization = ClaimOrganizationModel()\ncollect['claim_organization'] = claim_organization\n\n\nresult = organizations_controller.claim_organization(collect)\n\n```\n\n\n### <a name=\"get_organization_device_statuses\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization_device_statuses\") get_organization_device_statuses\n\n> List the status of every Meraki device in the organization\n\n```python\ndef get_organization_device_statuses(self,\n                                         id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nid = 'id'\n\nresult = organizations_controller.get_organization_device_statuses(id)\n\n```\n\n\n### <a name=\"get_organization_inventory\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization_inventory\") get_organization_inventory\n\n> Return the inventory for an organization\n\n```python\ndef get_organization_inventory(self,\n                                   id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nid = 'id'\n\nresult = organizations_controller.get_organization_inventory(id)\n\n```\n\n\n### <a name=\"get_organization_license_state\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization_license_state\") get_organization_license_state\n\n> Return the license state for an organization\n\n```python\ndef get_organization_license_state(self,\n                                       id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nid = 'id'\n\nresult = organizations_controller.get_organization_license_state(id)\n\n```\n\n\n### <a name=\"clone_organization\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.clone_organization\") clone_organization\n\n> Create a new organization by cloning the addressed organization\n\n```python\ndef clone_organization(self,\n                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| cloneOrganization |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nid = 'id'\ncollect['id'] = id\n\nclone_organization = CloneOrganizationModel()\ncollect['clone_organization'] = clone_organization\n\n\nresult = organizations_controller.clone_organization(collect)\n\n```\n\n\n### <a name=\"update_organization\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.update_organization\") update_organization\n\n> Update an organization\n\n```python\ndef update_organization(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganization |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nid = 'id'\ncollect['id'] = id\n\nupdate_organization = UpdateOrganizationModel()\ncollect['update_organization'] = update_organization\n\n\nresult = organizations_controller.update_organization(collect)\n\n```\n\n\n### <a name=\"get_organization\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.get_organization\") get_organization\n\n> Return an organization\n\n```python\ndef get_organization(self,\n                         id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nid = 'id'\n\nresult = organizations_controller.get_organization(id)\n\n```\n\n\n### <a name=\"create_organization\"></a>![Method: ](https://apidocs.io/img/method.png \".OrganizationsController.create_organization\") create_organization\n\n> Create a new organization\n\n```python\ndef create_organization(self,\n                            create_organization=None)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| createOrganization |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncreate_organization = CreateOrganizationModel()\n\nresult = organizations_controller.create_organization(create_organization)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mx1_many_nat_rules_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MX1ManyNATRulesController\") MX1ManyNATRulesController\n\n### Get controller instance\n\nAn instance of the ``` MX1ManyNATRulesController ``` class can be accessed from the API Client.\n\n```python\n mx_1_many_nat_rules_controller = client.mx_1_many_nat_rules\n```\n\n### <a name=\"update_network_one_to_many_nat_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MX1ManyNATRulesController.update_network_one_to_many_nat_rules\") update_network_one_to_many_nat_rules\n\n> Set the 1:Many NAT mapping rules for an MX network\n\n```python\ndef update_network_one_to_many_nat_rules(self,\n                                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkOneToManyNatRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_one_to_many_nat_rules = UpdateNetworkOneToManyNatRulesModel()\ncollect['update_network_one_to_many_nat_rules'] = update_network_one_to_many_nat_rules\n\n\nresult = mx1_many_nat_rules_controller.update_network_one_to_many_nat_rules(collect)\n\n```\n\n\n### <a name=\"get_network_one_to_many_nat_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MX1ManyNATRulesController.get_network_one_to_many_nat_rules\") get_network_one_to_many_nat_rules\n\n> Return the 1:Many NAT mapping rules for an MX network\n\n```python\ndef get_network_one_to_many_nat_rules(self,\n                                          network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx1_many_nat_rules_controller.get_network_one_to_many_nat_rules(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"firewalled_services_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".FirewalledServicesController\") FirewalledServicesController\n\n### Get controller instance\n\nAn instance of the ``` FirewalledServicesController ``` class can be accessed from the API Client.\n\n```python\n firewalled_services_controller = client.firewalled_services\n```\n\n### <a name=\"update_network_firewalled_service\"></a>![Method: ](https://apidocs.io/img/method.png \".FirewalledServicesController.update_network_firewalled_service\") update_network_firewalled_service\n\n> Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')\n\n```python\ndef update_network_firewalled_service(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| service |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkFirewalledService |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nservice = 'service'\ncollect['service'] = service\n\nupdate_network_firewalled_service = UpdateNetworkFirewalledServiceModel()\ncollect['update_network_firewalled_service'] = update_network_firewalled_service\n\n\nresult = firewalled_services_controller.update_network_firewalled_service(collect)\n\n```\n\n\n### <a name=\"get_network_firewalled_service\"></a>![Method: ](https://apidocs.io/img/method.png \".FirewalledServicesController.get_network_firewalled_service\") get_network_firewalled_service\n\n> Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')\n\n```python\ndef get_network_firewalled_service(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| service |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nservice = 'service'\ncollect['service'] = service\n\n\nresult = firewalled_services_controller.get_network_firewalled_service(collect)\n\n```\n\n\n### <a name=\"get_network_firewalled_services\"></a>![Method: ](https://apidocs.io/img/method.png \".FirewalledServicesController.get_network_firewalled_services\") get_network_firewalled_services\n\n> List the appliance services and their accessibility rules\n\n```python\ndef get_network_firewalled_services(self,\n                                        network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = firewalled_services_controller.get_network_firewalled_services(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"traffic_shaping_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".TrafficShapingController\") TrafficShapingController\n\n### Get controller instance\n\nAn instance of the ``` TrafficShapingController ``` class can be accessed from the API Client.\n\n```python\n traffic_shaping_controller = client.traffic_shaping\n```\n\n### <a name=\"get_network_ssid_traffic_shaping\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.get_network_ssid_traffic_shaping\") get_network_ssid_traffic_shaping\n\n> Display the traffic shaping settings for a SSID on an MR network\n\n```python\ndef get_network_ssid_traffic_shaping(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\n\nresult = traffic_shaping_controller.get_network_ssid_traffic_shaping(collect)\n\n```\n\n\n### <a name=\"update_network_ssid_traffic_shaping\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.update_network_ssid_traffic_shaping\") update_network_ssid_traffic_shaping\n\n> Update the traffic shaping settings for an SSID on an MR network\n\n```python\ndef update_network_ssid_traffic_shaping(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSsidTrafficShaping |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\nupdate_network_ssid_traffic_shaping = UpdateNetworkSsidTrafficShapingModel()\ncollect['update_network_ssid_traffic_shaping'] = update_network_ssid_traffic_shaping\n\n\nresult = traffic_shaping_controller.update_network_ssid_traffic_shaping(collect)\n\n```\n\n\n### <a name=\"get_network_traffic_shaping\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.get_network_traffic_shaping\") get_network_traffic_shaping\n\n> Display the traffic shaping settings for an MX network\n\n```python\ndef get_network_traffic_shaping(self,\n                                    network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = traffic_shaping_controller.get_network_traffic_shaping(network_id)\n\n```\n\n\n### <a name=\"update_network_traffic_shaping\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.update_network_traffic_shaping\") update_network_traffic_shaping\n\n> Update the traffic shaping settings for an MX network\n\n```python\ndef update_network_traffic_shaping(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkTrafficShaping |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_traffic_shaping = UpdateNetworkTrafficShapingModel()\ncollect['update_network_traffic_shaping'] = update_network_traffic_shaping\n\n\nresult = traffic_shaping_controller.update_network_traffic_shaping(collect)\n\n```\n\n\n### <a name=\"get_network_traffic_shaping_application_categories\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.get_network_traffic_shaping_application_categories\") get_network_traffic_shaping_application_categories\n\n> Returns the application categories for traffic shaping rules.\n\n```python\ndef get_network_traffic_shaping_application_categories(self,\n                                                           network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = traffic_shaping_controller.get_network_traffic_shaping_application_categories(network_id)\n\n```\n\n\n### <a name=\"get_network_traffic_shaping_dscp_tagging_options\"></a>![Method: ](https://apidocs.io/img/method.png \".TrafficShapingController.get_network_traffic_shaping_dscp_tagging_options\") get_network_traffic_shaping_dscp_tagging_options\n\n> Returns the available DSCP tagging options for your traffic shaping rules.\n\n```python\ndef get_network_traffic_shaping_dscp_tagging_options(self,\n                                                         network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = traffic_shaping_controller.get_network_traffic_shaping_dscp_tagging_options(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"wireless_health_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".WirelessHealthController\") WirelessHealthController\n\n### Get controller instance\n\nAn instance of the ``` WirelessHealthController ``` class can be accessed from the API Client.\n\n```python\n wireless_health_controller = client.wireless_health\n```\n\n### <a name=\"get_network_client_connection_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_client_connection_stats\") get_network_client_connection_stats\n\n> Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.\n\n```python\ndef get_network_client_connection_stats(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\n\nresult = wireless_health_controller.get_network_client_connection_stats(collect)\n\n```\n\n\n### <a name=\"get_network_latency_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_latency_stats\") get_network_latency_stats\n\n> Aggregated latency info for this network\n\n```python\ndef get_network_latency_stats(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| fields |  ``` Optional ```  | Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nfields = 'fields'\ncollect['fields'] = fields\n\n\nresult = wireless_health_controller.get_network_latency_stats(collect)\n\n```\n\n\n### <a name=\"get_network_devices_latency_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_devices_latency_stats\") get_network_devices_latency_stats\n\n> Aggregated latency info for this network, grouped by node\n\n```python\ndef get_network_devices_latency_stats(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| fields |  ``` Optional ```  | Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nfields = 'fields'\ncollect['fields'] = fields\n\n\nresult = wireless_health_controller.get_network_devices_latency_stats(collect)\n\n```\n\n\n### <a name=\"get_network_device_latency_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_device_latency_stats\") get_network_device_latency_stats\n\n> Aggregated latency info for a given AP on this network\n\n```python\ndef get_network_device_latency_stats(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| fields |  ``` Optional ```  | Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nfields = 'fields'\ncollect['fields'] = fields\n\n\nresult = wireless_health_controller.get_network_device_latency_stats(collect)\n\n```\n\n\n### <a name=\"get_network_clients_latency_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_clients_latency_stats\") get_network_clients_latency_stats\n\n> Aggregated latency info for this network, grouped by clients\n\n```python\ndef get_network_clients_latency_stats(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| fields |  ``` Optional ```  | Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nfields = 'fields'\ncollect['fields'] = fields\n\n\nresult = wireless_health_controller.get_network_clients_latency_stats(collect)\n\n```\n\n\n### <a name=\"get_network_client_latency_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_client_latency_stats\") get_network_client_latency_stats\n\n> Aggregated latency info for a given client on this network. Clients are identified by their MAC.\n\n```python\ndef get_network_client_latency_stats(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| fields |  ``` Optional ```  | Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nfields = 'fields'\ncollect['fields'] = fields\n\n\nresult = wireless_health_controller.get_network_client_latency_stats(collect)\n\n```\n\n\n### <a name=\"get_network_failed_connections\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_failed_connections\") get_network_failed_connections\n\n> List of all failed client connection events on this network in a given time range\n\n```python\ndef get_network_failed_connections(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n| serial |  ``` Optional ```  | Filter by AP |\n| clientId |  ``` Optional ```  | Filter by client MAC |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\nserial = 'serial'\ncollect['serial'] = serial\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\n\nresult = wireless_health_controller.get_network_failed_connections(collect)\n\n```\n\n\n### <a name=\"get_network_clients_connection_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_clients_connection_stats\") get_network_clients_connection_stats\n\n> Aggregated connectivity info for this network, grouped by clients\n\n```python\ndef get_network_clients_connection_stats(self,\n                                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\n\nresult = wireless_health_controller.get_network_clients_connection_stats(collect)\n\n```\n\n\n### <a name=\"get_network_device_connection_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_device_connection_stats\") get_network_device_connection_stats\n\n> Aggregated connectivity info for a given AP on this network\n\n```python\ndef get_network_device_connection_stats(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\n\nresult = wireless_health_controller.get_network_device_connection_stats(collect)\n\n```\n\n\n### <a name=\"get_network_devices_connection_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_devices_connection_stats\") get_network_devices_connection_stats\n\n> Aggregated connectivity info for this network, grouped by node\n\n```python\ndef get_network_devices_connection_stats(self,\n                                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\n\nresult = wireless_health_controller.get_network_devices_connection_stats(collect)\n\n```\n\n\n### <a name=\"get_network_connection_stats\"></a>![Method: ](https://apidocs.io/img/method.png \".WirelessHealthController.get_network_connection_stats\") get_network_connection_stats\n\n> Aggregated connectivity info for this network\n\n```python\ndef get_network_connection_stats(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 180 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. |\n| ssid |  ``` Optional ```  | Filter results by SSID |\n| vlan |  ``` Optional ```  | Filter results by VLAN |\n| apTag |  ``` Optional ```  | Filter results by AP Tag |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 37\ncollect['timespan'] = timespan\n\nssid = 37\ncollect['ssid'] = ssid\n\nvlan = 37\ncollect['vlan'] = vlan\n\nap_tag = 'apTag'\ncollect['ap_tag'] = ap_tag\n\n\nresult = wireless_health_controller.get_network_connection_stats(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"alert_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".AlertSettingsController\") AlertSettingsController\n\n### Get controller instance\n\nAn instance of the ``` AlertSettingsController ``` class can be accessed from the API Client.\n\n```python\n alert_settings_controller = client.alert_settings\n```\n\n### <a name=\"get_network_alert_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".AlertSettingsController.get_network_alert_settings\") get_network_alert_settings\n\n> Return the alert configuration for this network\n\n```python\ndef get_network_alert_settings(self,\n                                   network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = alert_settings_controller.get_network_alert_settings(network_id)\n\n```\n\n\n### <a name=\"update_network_alert_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".AlertSettingsController.update_network_alert_settings\") update_network_alert_settings\n\n> Update the alert configuration for this network\n\n```python\ndef update_network_alert_settings(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkAlertSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_alert_settings = UpdateNetworkAlertSettingsModel()\ncollect['update_network_alert_settings'] = update_network_alert_settings\n\n\nresult = alert_settings_controller.update_network_alert_settings(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"admins_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".AdminsController\") AdminsController\n\n### Get controller instance\n\nAn instance of the ``` AdminsController ``` class can be accessed from the API Client.\n\n```python\n admins_controller = client.admins\n```\n\n### <a name=\"delete_organization_admin\"></a>![Method: ](https://apidocs.io/img/method.png \".AdminsController.delete_organization_admin\") delete_organization_admin\n\n> Revoke all access for a dashboard administrator within this organization\n\n```python\ndef delete_organization_admin(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\nadmins_controller.delete_organization_admin(collect)\n\n```\n\n\n### <a name=\"create_organization_admin\"></a>![Method: ](https://apidocs.io/img/method.png \".AdminsController.create_organization_admin\") create_organization_admin\n\n> Create a new dashboard administrator\n\n```python\ndef create_organization_admin(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| createOrganizationAdmin |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\ncreate_organization_admin = CreateOrganizationAdminModel()\ncollect['create_organization_admin'] = create_organization_admin\n\n\nresult = admins_controller.create_organization_admin(collect)\n\n```\n\n\n### <a name=\"get_organization_admins\"></a>![Method: ](https://apidocs.io/img/method.png \".AdminsController.get_organization_admins\") get_organization_admins\n\n> List the dashboard administrators in this organization\n\n```python\ndef get_organization_admins(self,\n                                organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = admins_controller.get_organization_admins(organization_id)\n\n```\n\n\n### <a name=\"update_organization_admin\"></a>![Method: ](https://apidocs.io/img/method.png \".AdminsController.update_organization_admin\") update_organization_admin\n\n> Update an administrator\n\n```python\ndef update_organization_admin(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationAdmin |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\nupdate_organization_admin = UpdateOrganizationAdminModel()\ncollect['update_organization_admin'] = update_organization_admin\n\n\nresult = admins_controller.update_organization_admin(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"action_batches_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ActionBatchesController\") ActionBatchesController\n\n### Get controller instance\n\nAn instance of the ``` ActionBatchesController ``` class can be accessed from the API Client.\n\n```python\n action_batches_controller = client.action_batches\n```\n\n### <a name=\"delete_organization_action_batch\"></a>![Method: ](https://apidocs.io/img/method.png \".ActionBatchesController.delete_organization_action_batch\") delete_organization_action_batch\n\n> Delete an action batch\n\n```python\ndef delete_organization_action_batch(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\naction_batches_controller.delete_organization_action_batch(collect)\n\n```\n\n\n### <a name=\"get_organization_action_batch\"></a>![Method: ](https://apidocs.io/img/method.png \".ActionBatchesController.get_organization_action_batch\") get_organization_action_batch\n\n> Return an action batch\n\n```python\ndef get_organization_action_batch(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\nresult = action_batches_controller.get_organization_action_batch(collect)\n\n```\n\n\n### <a name=\"get_organization_action_batches\"></a>![Method: ](https://apidocs.io/img/method.png \".ActionBatchesController.get_organization_action_batches\") get_organization_action_batches\n\n> Return the list of action batches in the organization\n\n```python\ndef get_organization_action_batches(self,\n                                        organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = action_batches_controller.get_organization_action_batches(organization_id)\n\n```\n\n\n### <a name=\"create_organization_action_batch\"></a>![Method: ](https://apidocs.io/img/method.png \".ActionBatchesController.create_organization_action_batch\") create_organization_action_batch\n\n> Create an action batch\n\n```python\ndef create_organization_action_batch(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| createOrganizationActionBatch |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\ncreate_organization_action_batch = CreateOrganizationActionBatchModel()\ncollect['create_organization_action_batch'] = create_organization_action_batch\n\n\nresult = action_batches_controller.create_organization_action_batch(collect)\n\n```\n\n\n### <a name=\"update_organization_action_batch\"></a>![Method: ](https://apidocs.io/img/method.png \".ActionBatchesController.update_organization_action_batch\") update_organization_action_batch\n\n> Update an action batch\n\n```python\ndef update_organization_action_batch(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationActionBatch |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\nupdate_organization_action_batch = UpdateOrganizationActionBatchModel()\ncollect['update_organization_action_batch'] = update_organization_action_batch\n\n\nresult = action_batches_controller.update_organization_action_batch(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"switch_ports_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SwitchPortsController\") SwitchPortsController\n\n### Get controller instance\n\nAn instance of the ``` SwitchPortsController ``` class can be accessed from the API Client.\n\n```python\n switch_ports_controller = client.switch_ports\n```\n\n### <a name=\"update_device_switch_port\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchPortsController.update_device_switch_port\") update_device_switch_port\n\n> Update a switch port\n\n```python\ndef update_device_switch_port(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n| updateDeviceSwitchPort |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nserial = 'serial'\ncollect['serial'] = serial\n\nnumber = 'number'\ncollect['number'] = number\n\nupdate_device_switch_port = UpdateDeviceSwitchPortModel()\ncollect['update_device_switch_port'] = update_device_switch_port\n\n\nresult = switch_ports_controller.update_device_switch_port(collect)\n\n```\n\n\n### <a name=\"get_device_switch_port\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchPortsController.get_device_switch_port\") get_device_switch_port\n\n> Return a switch port\n\n```python\ndef get_device_switch_port(self,\n                               options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nserial = 'serial'\ncollect['serial'] = serial\n\nnumber = 'number'\ncollect['number'] = number\n\n\nresult = switch_ports_controller.get_device_switch_port(collect)\n\n```\n\n\n### <a name=\"get_device_switch_ports\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchPortsController.get_device_switch_ports\") get_device_switch_ports\n\n> List the switch ports for a switch\n\n```python\ndef get_device_switch_ports(self,\n                                serial)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nserial = 'serial'\n\nresult = switch_ports_controller.get_device_switch_ports(serial)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"ssids_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SsidsController\") SsidsController\n\n### Get controller instance\n\nAn instance of the ``` SsidsController ``` class can be accessed from the API Client.\n\n```python\n ssids_controller = client.ssids\n```\n\n### <a name=\"update_network_ssid\"></a>![Method: ](https://apidocs.io/img/method.png \".SsidsController.update_network_ssid\") update_network_ssid\n\n> Update the attributes of an SSID\n\n```python\ndef update_network_ssid(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSsid |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\nupdate_network_ssid = UpdateNetworkSsidModel()\ncollect['update_network_ssid'] = update_network_ssid\n\n\nresult = ssids_controller.update_network_ssid(collect)\n\n```\n\n\n### <a name=\"get_network_ssid\"></a>![Method: ](https://apidocs.io/img/method.png \".SsidsController.get_network_ssid\") get_network_ssid\n\n> Return a single SSID\n\n```python\ndef get_network_ssid(self,\n                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\n\nresult = ssids_controller.get_network_ssid(collect)\n\n```\n\n\n### <a name=\"get_network_ssids\"></a>![Method: ](https://apidocs.io/img/method.png \".SsidsController.get_network_ssids\") get_network_ssids\n\n> List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.\n\n```python\ndef get_network_ssids(self,\n                          network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = ssids_controller.get_network_ssids(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"splash_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SplashSettingsController\") SplashSettingsController\n\n### Get controller instance\n\nAn instance of the ``` SplashSettingsController ``` class can be accessed from the API Client.\n\n```python\n splash_settings_controller = client.splash_settings\n```\n\n### <a name=\"update_network_ssids_plash_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SplashSettingsController.update_network_ssids_plash_settings\") update_network_ssids_plash_settings\n\n> Modify the splash page settings for the given SSID\n\n```python\ndef update_network_ssids_plash_settings(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetwork_ssids_PlashSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\nupdate_network_ssids_plash_settings = UpdateNetworkSsidsPlashSettingsModel()\ncollect['update_network_ssids_plash_settings'] = update_network_ssids_plash_settings\n\n\nresult = splash_settings_controller.update_network_ssids_plash_settings(collect)\n\n```\n\n\n### <a name=\"get_network_ssids_plash_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SplashSettingsController.get_network_ssids_plash_settings\") get_network_ssids_plash_settings\n\n> Display the splash page settings for the given SSID\n\n```python\ndef get_network_ssids_plash_settings(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\n\nresult = splash_settings_controller.get_network_ssids_plash_settings(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"splash_login_attempts_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SplashLoginAttemptsController\") SplashLoginAttemptsController\n\n### Get controller instance\n\nAn instance of the ``` SplashLoginAttemptsController ``` class can be accessed from the API Client.\n\n```python\n splash_login_attempts_controller = client.splash_login_attempts\n```\n\n### <a name=\"get_network_splash_login_attempts\"></a>![Method: ](https://apidocs.io/img/method.png \".SplashLoginAttemptsController.get_network_splash_login_attempts\") get_network_splash_login_attempts\n\n> List the splash login attempts for a network\n\n```python\ndef get_network_splash_login_attempts(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| ssidNumber |  ``` Optional ```  | Only return the login attempts for the specified SSID |\n| loginIdentifier |  ``` Optional ```  | The username, email, or phone number used during login |\n| timespan |  ``` Optional ```  | The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nid = 'id'\ncollect['id'] = id\n\nssid_number = 'ssidNumber'\ncollect['ssid_number'] = ssid_number\n\nlogin_identifier = 'loginIdentifier'\ncollect['login_identifier'] = login_identifier\n\ntimespan = 'timespan'\ncollect['timespan'] = timespan\n\n\nresult = splash_login_attempts_controller.get_network_splash_login_attempts(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"sm_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SMController\") SMController\n\n### Get controller instance\n\nAn instance of the ``` SMController ``` class can be accessed from the API Client.\n\n```python\n sm_controller = client.sm\n```\n\n### <a name=\"get_network_sm_softwares\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_softwares\") get_network_sm_softwares\n\n> Get a list of softwares associated with a device\n\n```python\ndef get_network_sm_softwares(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_softwares(collect)\n\n```\n\n\n### <a name=\"get_network_sm_user_softwares\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_user_softwares\") get_network_sm_user_softwares\n\n> Get a list of softwares associated with a user\n\n```python\ndef get_network_sm_user_softwares(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| userId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nuser_id = 'userId'\ncollect['user_id'] = user_id\n\n\nresult = sm_controller.get_network_sm_user_softwares(collect)\n\n```\n\n\n### <a name=\"get_network_sm_users\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_users\") get_network_sm_users\n\n> List the owners in an SM network with various specified fields and filters\n\n```python\ndef get_network_sm_users(self,\n                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| ids |  ``` Optional ```  | Filter users by id(s). Multiple ids can be passed in as comma separated values. |\n| usernames |  ``` Optional ```  | Filter users by username(s). Multiple usernames can be passed in as comma separated values. |\n| emails |  ``` Optional ```  | Filter users by email(s). Multiple emails can be passed in as comma separated values. |\n| scope |  ``` Optional ```  | Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nids = 'ids'\ncollect['ids'] = ids\n\nusernames = 'usernames'\ncollect['usernames'] = usernames\n\nemails = 'emails'\ncollect['emails'] = emails\n\nscope = 'scope'\ncollect['scope'] = scope\n\n\nresult = sm_controller.get_network_sm_users(collect)\n\n```\n\n\n### <a name=\"get_network_sm_connectivity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_connectivity\") get_network_sm_connectivity\n\n> Returns historical connectivity data (whether a device is regularly checking in to Dashboard).\n\n```python\ndef get_network_sm_connectivity(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\nper_page = 'perPage'\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = sm_controller.get_network_sm_connectivity(collect)\n\n```\n\n\n### <a name=\"get_network_sm_device_command_logs\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_device_command_logs\") get_network_sm_device_command_logs\n\n>     Return historical records of commands sent to Systems Manager devices.\n>     <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n>     by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n>     of any reports.</p>\n> \n\n```python\ndef get_network_sm_device_command_logs(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\nper_page = 'perPage'\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = sm_controller.get_network_sm_device_command_logs(collect)\n\n```\n\n\n### <a name=\"get_network_sm_desktop_logs\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_desktop_logs\") get_network_sm_desktop_logs\n\n> Return historical records of various Systems Manager network connection details for desktop devices.\n\n```python\ndef get_network_sm_desktop_logs(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\nper_page = 'perPage'\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = sm_controller.get_network_sm_desktop_logs(collect)\n\n```\n\n\n### <a name=\"get_network_sm_performance_history\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_performance_history\") get_network_sm_performance_history\n\n> Return historical records of various Systems Manager client metrics for desktop devices.\n\n```python\ndef get_network_sm_performance_history(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\nper_page = 'perPage'\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = sm_controller.get_network_sm_performance_history(collect)\n\n```\n\n\n### <a name=\"get_network_sm_cellular_usage_history\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_cellular_usage_history\") get_network_sm_cellular_usage_history\n\n> Return the client's daily cellular data usage history. Usage data is in kilobytes.\n\n```python\ndef get_network_sm_cellular_usage_history(self,\n                                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_cellular_usage_history(collect)\n\n```\n\n\n### <a name=\"get_network_sm_profiles\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_profiles\") get_network_sm_profiles\n\n> List all the profiles in the network\n\n```python\ndef get_network_sm_profiles(self,\n                                network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = sm_controller.get_network_sm_profiles(network_id)\n\n```\n\n\n### <a name=\"unenroll_network_sm_device\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.unenroll_network_sm_device\") unenroll_network_sm_device\n\n> Unenroll a device\n\n```python\ndef unenroll_network_sm_device(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.unenroll_network_sm_device(collect)\n\n```\n\n\n### <a name=\"move_network_sm_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.move_network_sm_devices\") move_network_sm_devices\n\n> Move a set of devices to a new network\n\n```python\ndef move_network_sm_devices(self,\n                                options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| moveNetworkSmDevices |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nmove_network_sm_devices = MoveNetworkSmDevicesModel()\ncollect['move_network_sm_devices'] = move_network_sm_devices\n\n\nresult = sm_controller.move_network_sm_devices(collect)\n\n```\n\n\n### <a name=\"checkin_network_sm_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.checkin_network_sm_devices\") checkin_network_sm_devices\n\n> Force check-in a set of devices\n\n```python\ndef checkin_network_sm_devices(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| checkinNetworkSmDevices |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncheckin_network_sm_devices = CheckinNetworkSmDevicesModel()\ncollect['checkin_network_sm_devices'] = checkin_network_sm_devices\n\n\nresult = sm_controller.checkin_network_sm_devices(collect)\n\n```\n\n\n### <a name=\"wipe_network_sm_device\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.wipe_network_sm_device\") wipe_network_sm_device\n\n> Wipe a device\n\n```python\ndef wipe_network_sm_device(self,\n                               options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| wipeNetworkSmDevice |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nwipe_network_sm_device = WipeNetworkSmDeviceModel()\ncollect['wipe_network_sm_device'] = wipe_network_sm_device\n\n\nresult = sm_controller.wipe_network_sm_device(collect)\n\n```\n\n\n### <a name=\"lock_network_sm_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.lock_network_sm_devices\") lock_network_sm_devices\n\n> Lock a set of devices\n\n```python\ndef lock_network_sm_devices(self,\n                                options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| lockNetworkSmDevices |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nlock_network_sm_devices = LockNetworkSmDevicesModel()\ncollect['lock_network_sm_devices'] = lock_network_sm_devices\n\n\nresult = sm_controller.lock_network_sm_devices(collect)\n\n```\n\n\n### <a name=\"update_network_sm_device_fields\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.update_network_sm_device_fields\") update_network_sm_device_fields\n\n> Modify the fields of a device\n\n```python\ndef update_network_sm_device_fields(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmDeviceFields |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_sm_device_fields = UpdateNetworkSmDeviceFieldsModel()\ncollect['update_network_sm_device_fields'] = update_network_sm_device_fields\n\n\nresult = sm_controller.update_network_sm_device_fields(collect)\n\n```\n\n\n### <a name=\"update_network_sm_devices_tags\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.update_network_sm_devices_tags\") update_network_sm_devices_tags\n\n> Add, delete, or update the tags of a set of devices\n\n```python\ndef update_network_sm_devices_tags(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmDevicesTags |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_sm_devices_tags = UpdateNetworkSmDevicesTagsModel()\ncollect['update_network_sm_devices_tags'] = update_network_sm_devices_tags\n\n\nresult = sm_controller.update_network_sm_devices_tags(collect)\n\n```\n\n\n### <a name=\"get_network_sm_certs\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_certs\") get_network_sm_certs\n\n> List the certs on a device\n\n```python\ndef get_network_sm_certs(self,\n                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_certs(collect)\n\n```\n\n\n### <a name=\"get_network_sm_restrictions\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_restrictions\") get_network_sm_restrictions\n\n> List the restrictions on a device\n\n```python\ndef get_network_sm_restrictions(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_restrictions(collect)\n\n```\n\n\n### <a name=\"get_network_sm_security_centers\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_security_centers\") get_network_sm_security_centers\n\n> List the security centers on a device\n\n```python\ndef get_network_sm_security_centers(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_security_centers(collect)\n\n```\n\n\n### <a name=\"get_network_sm_wlan_lists\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_wlan_lists\") get_network_sm_wlan_lists\n\n> List the saved SSID names on a device\n\n```python\ndef get_network_sm_wlan_lists(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_wlan_lists(collect)\n\n```\n\n\n### <a name=\"get_network_sm_network_adapters\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_network_adapters\") get_network_sm_network_adapters\n\n> List the network adapters of a device\n\n```python\ndef get_network_sm_network_adapters(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_network_adapters(collect)\n\n```\n\n\n### <a name=\"get_network_sm_device_profiles\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_device_profiles\") get_network_sm_device_profiles\n\n> Get the profiles associated with a device\n\n```python\ndef get_network_sm_device_profiles(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| deviceId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ndevice_id = 'deviceId'\ncollect['device_id'] = device_id\n\n\nresult = sm_controller.get_network_sm_device_profiles(collect)\n\n```\n\n\n### <a name=\"get_network_sm_user_device_profiles\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_user_device_profiles\") get_network_sm_user_device_profiles\n\n> Get the profiles associated with a user\n\n```python\ndef get_network_sm_user_device_profiles(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| userId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nuser_id = 'userId'\ncollect['user_id'] = user_id\n\n\nresult = sm_controller.get_network_sm_user_device_profiles(collect)\n\n```\n\n\n### <a name=\"delete_network_sm_app_polaris\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.delete_network_sm_app_polaris\") delete_network_sm_app_polaris\n\n> Delete a Cisco Polaris app\n\n```python\ndef delete_network_sm_app_polaris(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| appId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\napp_id = 'appId'\ncollect['app_id'] = app_id\n\n\nsm_controller.delete_network_sm_app_polaris(collect)\n\n```\n\n\n### <a name=\"update_network_sm_app_polaris\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.update_network_sm_app_polaris\") update_network_sm_app_polaris\n\n> Update an existing Polaris app\n\n```python\ndef update_network_sm_app_polaris(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| appId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmAppPolaris |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\napp_id = 'appId'\ncollect['app_id'] = app_id\n\nupdate_network_sm_app_polaris = UpdateNetworkSmAppPolarisModel()\ncollect['update_network_sm_app_polaris'] = update_network_sm_app_polaris\n\n\nresult = sm_controller.update_network_sm_app_polaris(collect)\n\n```\n\n\n### <a name=\"get_network_sm_app_polaris\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_app_polaris\") get_network_sm_app_polaris\n\n> Get details for a Cisco Polaris app if it exists\n\n```python\ndef get_network_sm_app_polaris(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| bundleId |  ``` Optional ```  | The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nbundle_id = 'bundleId'\ncollect['bundle_id'] = bundle_id\n\n\nresult = sm_controller.get_network_sm_app_polaris(collect)\n\n```\n\n\n### <a name=\"create_network_sm_app_polaris\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.create_network_sm_app_polaris\") create_network_sm_app_polaris\n\n> Create a new Polaris app\n\n```python\ndef create_network_sm_app_polaris(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkSmAppPolaris |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\ncreate_network_sm_app_polaris = CreateNetworkSmAppPolarisModel()\ncollect['create_network_sm_app_polaris'] = create_network_sm_app_polaris\n\n\nresult = sm_controller.create_network_sm_app_polaris(collect)\n\n```\n\n\n### <a name=\"delete_network_sm_profile_umbrella\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.delete_network_sm_profile_umbrella\") delete_network_sm_profile_umbrella\n\n> Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload\n\n```python\ndef delete_network_sm_profile_umbrella(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\n\nsm_controller.delete_network_sm_profile_umbrella(collect)\n\n```\n\n\n### <a name=\"get_network_sm_profile_umbrella\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_profile_umbrella\") get_network_sm_profile_umbrella\n\n> Get details for a Cisco Umbrella payload\n\n```python\ndef get_network_sm_profile_umbrella(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\n\nresult = sm_controller.get_network_sm_profile_umbrella(collect)\n\n```\n\n\n### <a name=\"add_network_sm_profile_umbrella\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.add_network_sm_profile_umbrella\") add_network_sm_profile_umbrella\n\n> Add a Cisco Umbrella payload to an existing profile\n\n```python\ndef add_network_sm_profile_umbrella(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n| addNetworkSmProfileUmbrella |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\nadd_network_sm_profile_umbrella = AddNetworkSmProfileUmbrellaModel()\ncollect['add_network_sm_profile_umbrella'] = add_network_sm_profile_umbrella\n\n\nresult = sm_controller.add_network_sm_profile_umbrella(collect)\n\n```\n\n\n### <a name=\"update_network_sm_profile_umbrella\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.update_network_sm_profile_umbrella\") update_network_sm_profile_umbrella\n\n> Update an existing profile containing a Cisco Umbrella payload\n\n```python\ndef update_network_sm_profile_umbrella(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmProfileUmbrella |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\nupdate_network_sm_profile_umbrella = UpdateNetworkSmProfileUmbrellaModel()\ncollect['update_network_sm_profile_umbrella'] = update_network_sm_profile_umbrella\n\n\nresult = sm_controller.update_network_sm_profile_umbrella(collect)\n\n```\n\n\n### <a name=\"create_network_sm_profile_umbrella\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.create_network_sm_profile_umbrella\") create_network_sm_profile_umbrella\n\n> Create a new profile containing a Cisco Umbrella payload\n\n```python\ndef create_network_sm_profile_umbrella(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkSmProfileUmbrella |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\ncreate_network_sm_profile_umbrella = CreateNetworkSmProfileUmbrellaModel()\ncollect['create_network_sm_profile_umbrella'] = create_network_sm_profile_umbrella\n\n\nresult = sm_controller.create_network_sm_profile_umbrella(collect)\n\n```\n\n\n### <a name=\"delete_network_sm_profile_clarity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.delete_network_sm_profile_clarity\") delete_network_sm_profile_clarity\n\n> Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.\n\n```python\ndef delete_network_sm_profile_clarity(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\n\nsm_controller.delete_network_sm_profile_clarity(collect)\n\n```\n\n\n### <a name=\"get_network_sm_profile_clarity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_profile_clarity\") get_network_sm_profile_clarity\n\n> Get details for a Cisco Clarity payload\n\n```python\ndef get_network_sm_profile_clarity(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\n\nresult = sm_controller.get_network_sm_profile_clarity(collect)\n\n```\n\n\n### <a name=\"add_network_sm_profile_clarity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.add_network_sm_profile_clarity\") add_network_sm_profile_clarity\n\n> Add a Cisco Clarity payload to an existing profile\n\n```python\ndef add_network_sm_profile_clarity(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n| addNetworkSmProfileClarity |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\nadd_network_sm_profile_clarity = AddNetworkSmProfileClarityModel()\ncollect['add_network_sm_profile_clarity'] = add_network_sm_profile_clarity\n\n\nresult = sm_controller.add_network_sm_profile_clarity(collect)\n\n```\n\n\n### <a name=\"update_network_sm_profile_clarity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.update_network_sm_profile_clarity\") update_network_sm_profile_clarity\n\n> Update an existing profile containing a Cisco Clarity payload\n\n```python\ndef update_network_sm_profile_clarity(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| profileId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmProfileClarity |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\nprofile_id = 'profileId'\ncollect['profile_id'] = profile_id\n\nupdate_network_sm_profile_clarity = UpdateNetworkSmProfileClarityModel()\ncollect['update_network_sm_profile_clarity'] = update_network_sm_profile_clarity\n\n\nresult = sm_controller.update_network_sm_profile_clarity(collect)\n\n```\n\n\n### <a name=\"create_network_sm_profile_clarity\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.create_network_sm_profile_clarity\") create_network_sm_profile_clarity\n\n> Create a new profile containing a Cisco Clarity payload\n\n```python\ndef create_network_sm_profile_clarity(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkSmProfileClarity |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'network_id'\ncollect['network_id'] = network_id\n\ncreate_network_sm_profile_clarity = CreateNetworkSmProfileClarityModel()\ncollect['create_network_sm_profile_clarity'] = create_network_sm_profile_clarity\n\n\nresult = sm_controller.create_network_sm_profile_clarity(collect)\n\n```\n\n\n### <a name=\"get_network_sm_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".SMController.get_network_sm_devices\") get_network_sm_devices\n\n> List the devices enrolled in an SM network with various specified fields and filters\n\n```python\ndef get_network_sm_devices(self,\n                               options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| fields |  ``` Optional ```  | Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion. |\n| wifiMacs |  ``` Optional ```  | Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values. |\n| serials |  ``` Optional ```  | Filter devices by serial(s). Multiple serials can be passed in as comma separated values. |\n| ids |  ``` Optional ```  | Filter devices by id(s). Multiple ids can be passed in as comma separated values. |\n| scope |  ``` Optional ```  | Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values. |\n| batchToken |  ``` Optional ```  | On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n    If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n    the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n    additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n    passed in with the batchToken will be ignored. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nfields = 'fields'\ncollect['fields'] = fields\n\nwifi_macs = 'wifiMacs'\ncollect['wifi_macs'] = wifi_macs\n\nserials = 'serials'\ncollect['serials'] = serials\n\nids = 'ids'\ncollect['ids'] = ids\n\nscope = 'scope'\ncollect['scope'] = scope\n\nbatch_token = 'batchToken'\ncollect['batch_token'] = batch_token\n\n\nresult = sm_controller.get_network_sm_devices(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"named_tag_scope_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".NamedTagScopeController\") NamedTagScopeController\n\n### Get controller instance\n\nAn instance of the ``` NamedTagScopeController ``` class can be accessed from the API Client.\n\n```python\n named_tag_scope_controller = client.named_tag_scope\n```\n\n### <a name=\"get_network_sm_target_group\"></a>![Method: ](https://apidocs.io/img/method.png \".NamedTagScopeController.get_network_sm_target_group\") get_network_sm_target_group\n\n> Return a target group\n\n```python\ndef get_network_sm_target_group(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| targetGroupId |  ``` Required ```  | TODO: Add a parameter description |\n| withDetails |  ``` Optional ```  | Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ntarget_group_id = 'targetGroupId'\ncollect['target_group_id'] = target_group_id\n\nwith_details = True\ncollect['with_details'] = with_details\n\n\nresult = named_tag_scope_controller.get_network_sm_target_group(collect)\n\n```\n\n\n### <a name=\"delete_network_sm_target_group\"></a>![Method: ](https://apidocs.io/img/method.png \".NamedTagScopeController.delete_network_sm_target_group\") delete_network_sm_target_group\n\n> Delete a target group from a network\n\n```python\ndef delete_network_sm_target_group(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| targetGroupId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ntarget_group_id = 'targetGroupId'\ncollect['target_group_id'] = target_group_id\n\n\nnamed_tag_scope_controller.delete_network_sm_target_group(collect)\n\n```\n\n\n### <a name=\"update_network_sm_target_group\"></a>![Method: ](https://apidocs.io/img/method.png \".NamedTagScopeController.update_network_sm_target_group\") update_network_sm_target_group\n\n> Update a target group\n\n```python\ndef update_network_sm_target_group(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| targetGroupId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSmTargetGroup |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ntarget_group_id = 'targetGroupId'\ncollect['target_group_id'] = target_group_id\n\nupdate_network_sm_target_group = UpdateNetworkSmTargetGroupModel()\ncollect['update_network_sm_target_group'] = update_network_sm_target_group\n\n\nresult = named_tag_scope_controller.update_network_sm_target_group(collect)\n\n```\n\n\n### <a name=\"create_network_sm_target_group\"></a>![Method: ](https://apidocs.io/img/method.png \".NamedTagScopeController.create_network_sm_target_group\") create_network_sm_target_group\n\n> Add a target group\n\n```python\ndef create_network_sm_target_group(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkSmTargetGroup |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_sm_target_group = CreateNetworkSmTargetGroupModel()\ncollect['create_network_sm_target_group'] = create_network_sm_target_group\n\n\nresult = named_tag_scope_controller.create_network_sm_target_group(collect)\n\n```\n\n\n### <a name=\"get_network_sm_target_groups\"></a>![Method: ](https://apidocs.io/img/method.png \".NamedTagScopeController.get_network_sm_target_groups\") get_network_sm_target_groups\n\n> List the target groups in this network\n\n```python\ndef get_network_sm_target_groups(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| withDetails |  ``` Optional ```  | Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nwith_details = True\ncollect['with_details'] = with_details\n\n\nresult = named_tag_scope_controller.get_network_sm_target_groups(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"saml_roles_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SAMLRolesController\") SAMLRolesController\n\n### Get controller instance\n\nAn instance of the ``` SAMLRolesController ``` class can be accessed from the API Client.\n\n```python\n saml_roles_controller = client.saml_roles\n```\n\n### <a name=\"update_organization_saml_role\"></a>![Method: ](https://apidocs.io/img/method.png \".SAMLRolesController.update_organization_saml_role\") update_organization_saml_role\n\n> Update a SAML role\n\n```python\ndef update_organization_saml_role(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationSamlRole |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\nupdate_organization_saml_role = UpdateOrganizationSamlRoleModel()\ncollect['update_organization_saml_role'] = update_organization_saml_role\n\n\nresult = saml_roles_controller.update_organization_saml_role(collect)\n\n```\n\n\n### <a name=\"delete_organization_saml_role\"></a>![Method: ](https://apidocs.io/img/method.png \".SAMLRolesController.delete_organization_saml_role\") delete_organization_saml_role\n\n> Remove a SAML role\n\n```python\ndef delete_organization_saml_role(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\nsaml_roles_controller.delete_organization_saml_role(collect)\n\n```\n\n\n### <a name=\"get_organization_saml_role\"></a>![Method: ](https://apidocs.io/img/method.png \".SAMLRolesController.get_organization_saml_role\") get_organization_saml_role\n\n> Return a SAML role\n\n```python\ndef get_organization_saml_role(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\nresult = saml_roles_controller.get_organization_saml_role(collect)\n\n```\n\n\n### <a name=\"create_organization_saml_role\"></a>![Method: ](https://apidocs.io/img/method.png \".SAMLRolesController.create_organization_saml_role\") create_organization_saml_role\n\n> Create a SAML role\n\n```python\ndef create_organization_saml_role(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| createOrganizationSamlRole |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\ncreate_organization_saml_role = CreateOrganizationSamlRoleModel()\ncollect['create_organization_saml_role'] = create_organization_saml_role\n\n\nresult = saml_roles_controller.create_organization_saml_role(collect)\n\n```\n\n\n### <a name=\"get_organization_saml_roles\"></a>![Method: ](https://apidocs.io/img/method.png \".SAMLRolesController.get_organization_saml_roles\") get_organization_saml_roles\n\n> List the SAML roles for this organization\n\n```python\ndef get_organization_saml_roles(self,\n                                    organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = saml_roles_controller.get_organization_saml_roles(organization_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"pii_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".PIIController\") PIIController\n\n### Get controller instance\n\nAn instance of the ``` PIIController ``` class can be accessed from the API Client.\n\n```python\n pii_controller = client.pii\n```\n\n### <a name=\"get_network_pii_sm_owners_for_key\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.get_network_pii_sm_owners_for_key\") get_network_pii_sm_owners_for_key\n\n> Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/smOwnersForKey\n> ```\n\n```python\ndef get_network_pii_sm_owners_for_key(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| username |  ``` Optional ```  | The username of a Systems Manager user |\n| email |  ``` Optional ```  | The email of a network user account or a Systems Manager device |\n| mac |  ``` Optional ```  | The MAC of a network client device or a Systems Manager device |\n| serial |  ``` Optional ```  | The serial of a Systems Manager device |\n| imei |  ``` Optional ```  | The IMEI of a Systems Manager device |\n| bluetoothMac |  ``` Optional ```  | The MAC of a Bluetooth client |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nusername = 'username'\ncollect['username'] = username\n\nemail = 'email'\ncollect['email'] = email\n\nmac = 'mac'\ncollect['mac'] = mac\n\nserial = 'serial'\ncollect['serial'] = serial\n\nimei = 'imei'\ncollect['imei'] = imei\n\nbluetooth_mac = 'bluetoothMac'\ncollect['bluetooth_mac'] = bluetooth_mac\n\n\nresult = pii_controller.get_network_pii_sm_owners_for_key(collect)\n\n```\n\n\n### <a name=\"get_network_pii_sm_devices_for_key\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.get_network_pii_sm_devices_for_key\") get_network_pii_sm_devices_for_key\n\n> Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/smDevicesForKey\n> ```\n\n```python\ndef get_network_pii_sm_devices_for_key(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| username |  ``` Optional ```  | The username of a Systems Manager user |\n| email |  ``` Optional ```  | The email of a network user account or a Systems Manager device |\n| mac |  ``` Optional ```  | The MAC of a network client device or a Systems Manager device |\n| serial |  ``` Optional ```  | The serial of a Systems Manager device |\n| imei |  ``` Optional ```  | The IMEI of a Systems Manager device |\n| bluetoothMac |  ``` Optional ```  | The MAC of a Bluetooth client |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nusername = 'username'\ncollect['username'] = username\n\nemail = 'email'\ncollect['email'] = email\n\nmac = 'mac'\ncollect['mac'] = mac\n\nserial = 'serial'\ncollect['serial'] = serial\n\nimei = 'imei'\ncollect['imei'] = imei\n\nbluetooth_mac = 'bluetoothMac'\ncollect['bluetooth_mac'] = bluetooth_mac\n\n\nresult = pii_controller.get_network_pii_sm_devices_for_key(collect)\n\n```\n\n\n### <a name=\"get_network_pii_pii_keys\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.get_network_pii_pii_keys\") get_network_pii_pii_keys\n\n> List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/piiKeys\n> ```\n\n```python\ndef get_network_pii_pii_keys(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| username |  ``` Optional ```  | The username of a Systems Manager user |\n| email |  ``` Optional ```  | The email of a network user account or a Systems Manager device |\n| mac |  ``` Optional ```  | The MAC of a network client device or a Systems Manager device |\n| serial |  ``` Optional ```  | The serial of a Systems Manager device |\n| imei |  ``` Optional ```  | The IMEI of a Systems Manager device |\n| bluetoothMac |  ``` Optional ```  | The MAC of a Bluetooth client |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nusername = 'username'\ncollect['username'] = username\n\nemail = 'email'\ncollect['email'] = email\n\nmac = 'mac'\ncollect['mac'] = mac\n\nserial = 'serial'\ncollect['serial'] = serial\n\nimei = 'imei'\ncollect['imei'] = imei\n\nbluetooth_mac = 'bluetoothMac'\ncollect['bluetooth_mac'] = bluetooth_mac\n\n\nresult = pii_controller.get_network_pii_pii_keys(collect)\n\n```\n\n\n### <a name=\"delete_network_pii_request\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.delete_network_pii_request\") delete_network_pii_request\n\n> Delete a restrict processing PII request\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/requests/{requestId}\n> ```\n\n```python\ndef delete_network_pii_request(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| requestId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nrequest_id = 'requestId'\ncollect['request_id'] = request_id\n\n\npii_controller.delete_network_pii_request(collect)\n\n```\n\n\n### <a name=\"get_network_pii_request\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.get_network_pii_request\") get_network_pii_request\n\n> Return a PII request\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/requests/{requestId}\n> ```\n\n```python\ndef get_network_pii_request(self,\n                                options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| requestId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nrequest_id = 'requestId'\ncollect['request_id'] = request_id\n\n\nresult = pii_controller.get_network_pii_request(collect)\n\n```\n\n\n### <a name=\"create_network_pii_request\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.create_network_pii_request\") create_network_pii_request\n\n> Submit a new delete or restrict processing PII request\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/requests\n> ```\n\n```python\ndef create_network_pii_request(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkPiiRequest |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_pii_request = CreateNetworkPiiRequestModel()\ncollect['create_network_pii_request'] = create_network_pii_request\n\n\nresult = pii_controller.create_network_pii_request(collect)\n\n```\n\n\n### <a name=\"get_network_pii_requests\"></a>![Method: ](https://apidocs.io/img/method.png \".PIIController.get_network_pii_requests\") get_network_pii_requests\n\n> List the PII requests for this network or organization\n> \n> ## ALTERNATE PATH\n> \n> ```\n> /organizations/{organizationId}/pii/requests\n> ```\n\n```python\ndef get_network_pii_requests(self,\n                                 network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = pii_controller.get_network_pii_requests(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"open_api_spec_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".OpenAPISpecController\") OpenAPISpecController\n\n### Get controller instance\n\nAn instance of the ``` OpenAPISpecController ``` class can be accessed from the API Client.\n\n```python\n open_api_spec_controller = client.open_api_spec\n```\n\n### <a name=\"get_organization_openapi_spec\"></a>![Method: ](https://apidocs.io/img/method.png \".OpenAPISpecController.get_organization_openapi_spec\") get_organization_openapi_spec\n\n> Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON\n\n```python\ndef get_organization_openapi_spec(self,\n                                      organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = open_api_spec_controller.get_organization_openapi_spec(organization_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"management_interface_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ManagementInterfaceSettingsController\") ManagementInterfaceSettingsController\n\n### Get controller instance\n\nAn instance of the ``` ManagementInterfaceSettingsController ``` class can be accessed from the API Client.\n\n```python\n management_interface_settings_controller = client.management_interface_settings\n```\n\n### <a name=\"update_network_device_management_interface_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".ManagementInterfaceSettingsController.update_network_device_management_interface_settings\") update_network_device_management_interface_settings\n\n> Update the management interface settings for a device\n\n```python\ndef update_network_device_management_interface_settings(self,\n                                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkDeviceManagementInterfaceSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nupdate_network_device_management_interface_settings = UpdateNetworkDeviceManagementInterfaceSettingsModel()\ncollect['update_network_device_management_interface_settings'] = update_network_device_management_interface_settings\n\n\nresult = management_interface_settings_controller.update_network_device_management_interface_settings(collect)\n\n```\n\n\n### <a name=\"get_network_device_management_interface_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".ManagementInterfaceSettingsController.get_network_device_management_interface_settings\") get_network_device_management_interface_settings\n\n> Return the management interface settings for a device\n\n```python\ndef get_network_device_management_interface_settings(self,\n                                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = management_interface_settings_controller.get_network_device_management_interface_settings(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mrl3_firewall_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MRL3FirewallController\") MRL3FirewallController\n\n### Get controller instance\n\nAn instance of the ``` MRL3FirewallController ``` class can be accessed from the API Client.\n\n```python\n mr_l3_firewall_controller = client.mr_l3_firewall\n```\n\n### <a name=\"update_network_ssid_l3_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MRL3FirewallController.update_network_ssid_l3_firewall_rules\") update_network_ssid_l3_firewall_rules\n\n> Update the L3 firewall rules of an SSID on an MR network\n\n```python\ndef update_network_ssid_l3_firewall_rules(self,\n                                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSsidL3FirewallRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\nupdate_network_ssid_l3_firewall_rules = UpdateNetworkSsidL3FirewallRulesModel()\ncollect['update_network_ssid_l3_firewall_rules'] = update_network_ssid_l3_firewall_rules\n\n\nresult = mr_l3_firewall_controller.update_network_ssid_l3_firewall_rules(collect)\n\n```\n\n\n### <a name=\"get_network_ssid_l3_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MRL3FirewallController.get_network_ssid_l3_firewall_rules\") get_network_ssid_l3_firewall_rules\n\n> Return the L3 firewall rules for an SSID on an MR network\n\n```python\ndef get_network_ssid_l3_firewall_rules(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| number |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nnumber = 'number'\ncollect['number'] = number\n\n\nresult = mr_l3_firewall_controller.get_network_ssid_l3_firewall_rules(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mxl7_firewall_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXL7FirewallController\") MXL7FirewallController\n\n### Get controller instance\n\nAn instance of the ``` MXL7FirewallController ``` class can be accessed from the API Client.\n\n```python\n mx_l7_firewall_controller = client.mx_l7_firewall\n```\n\n### <a name=\"update_network_l7_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXL7FirewallController.update_network_l7_firewall_rules\") update_network_l7_firewall_rules\n\n> Update the MX L7 firewall rules for an MX network\n\n```python\ndef update_network_l7_firewall_rules(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkL7FirewallRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_l7_firewall_rules = UpdateNetworkL7FirewallRulesModel()\ncollect['update_network_l7_firewall_rules'] = update_network_l7_firewall_rules\n\n\nresult = mx_l7_firewall_controller.update_network_l7_firewall_rules(collect)\n\n```\n\n\n### <a name=\"get_network_l7_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXL7FirewallController.get_network_l7_firewall_rules\") get_network_l7_firewall_rules\n\n> List the MX L7 firewall rules for an MX network\n\n```python\ndef get_network_l7_firewall_rules(self,\n                                      network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx_l7_firewall_controller.get_network_l7_firewall_rules(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"group_policies_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".GroupPoliciesController\") GroupPoliciesController\n\n### Get controller instance\n\nAn instance of the ``` GroupPoliciesController ``` class can be accessed from the API Client.\n\n```python\n group_policies_controller = client.group_policies\n```\n\n### <a name=\"update_network_group_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".GroupPoliciesController.update_network_group_policy\") update_network_group_policy\n\n> Update a group policy\n\n```python\ndef update_network_group_policy(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| groupPolicyId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkGroupPolicy |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ngroup_policy_id = 'groupPolicyId'\ncollect['group_policy_id'] = group_policy_id\n\nupdate_network_group_policy = UpdateNetworkGroupPolicyModel()\ncollect['update_network_group_policy'] = update_network_group_policy\n\n\nresult = group_policies_controller.update_network_group_policy(collect)\n\n```\n\n\n### <a name=\"delete_network_group_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".GroupPoliciesController.delete_network_group_policy\") delete_network_group_policy\n\n> Delete a group policy\n\n```python\ndef delete_network_group_policy(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| groupPolicyId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ngroup_policy_id = 'groupPolicyId'\ncollect['group_policy_id'] = group_policy_id\n\n\ngroup_policies_controller.delete_network_group_policy(collect)\n\n```\n\n\n### <a name=\"get_network_group_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".GroupPoliciesController.get_network_group_policy\") get_network_group_policy\n\n> Display a group policy\n\n```python\ndef get_network_group_policy(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| groupPolicyId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ngroup_policy_id = 'groupPolicyId'\ncollect['group_policy_id'] = group_policy_id\n\n\nresult = group_policies_controller.get_network_group_policy(collect)\n\n```\n\n\n### <a name=\"create_network_group_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".GroupPoliciesController.create_network_group_policy\") create_network_group_policy\n\n> Create a group policy\n\n```python\ndef create_network_group_policy(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkGroupPolicy |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_group_policy = CreateNetworkGroupPolicyModel()\ncollect['create_network_group_policy'] = create_network_group_policy\n\n\nresult = group_policies_controller.create_network_group_policy(collect)\n\n```\n\n\n### <a name=\"get_network_group_policies\"></a>![Method: ](https://apidocs.io/img/method.png \".GroupPoliciesController.get_network_group_policies\") get_network_group_policies\n\n> List the group policies in a network\n\n```python\ndef get_network_group_policies(self,\n                                   network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = group_policies_controller.get_network_group_policies(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"networks_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".NetworksController\") NetworksController\n\n### Get controller instance\n\nAn instance of the ``` NetworksController ``` class can be accessed from the API Client.\n\n```python\n networks_controller = client.networks\n```\n\n### <a name=\"get_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network\") get_network\n\n> Return a network\n\n```python\ndef get_network(self,\n                    network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.get_network(network_id)\n\n```\n\n\n### <a name=\"create_organization_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.create_organization_network\") create_organization_network\n\n> Create a network\n\n```python\ndef create_organization_network(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| createOrganizationNetwork |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\ncreate_organization_network = CreateOrganizationNetworkModel()\ncollect['create_organization_network'] = create_organization_network\n\n\nresult = networks_controller.create_organization_network(collect)\n\n```\n\n\n### <a name=\"get_organization_networks\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_organization_networks\") get_organization_networks\n\n> List the networks in an organization\n\n```python\ndef get_organization_networks(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| configTemplateId |  ``` Optional ```  | An optional parameter that is the ID of a config template. Will return all networks bound to that template. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nconfig_template_id = 'configTemplateId'\ncollect['config_template_id'] = config_template_id\n\n\nresult = networks_controller.get_organization_networks(collect)\n\n```\n\n\n### <a name=\"update_network_bluetooth_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.update_network_bluetooth_settings\") update_network_bluetooth_settings\n\n> Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n\n```python\ndef update_network_bluetooth_settings(self,\n                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkBluetoothSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_bluetooth_settings = UpdateNetworkBluetoothSettingsModel()\ncollect['update_network_bluetooth_settings'] = update_network_bluetooth_settings\n\n\nresult = networks_controller.update_network_bluetooth_settings(collect)\n\n```\n\n\n### <a name=\"get_network_bluetooth_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network_bluetooth_settings\") get_network_bluetooth_settings\n\n> Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.\n\n```python\ndef get_network_bluetooth_settings(self,\n                                       network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.get_network_bluetooth_settings(network_id)\n\n```\n\n\n### <a name=\"delete_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.delete_network\") delete_network\n\n> Delete a network\n\n```python\ndef delete_network(self,\n                       network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nnetworks_controller.delete_network(network_id)\n\n```\n\n\n### <a name=\"update_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.update_network\") update_network\n\n> Update a network\n\n```python\ndef update_network(self,\n                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetwork |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network = UpdateNetworkModel()\ncollect['update_network'] = update_network\n\n\nresult = networks_controller.update_network(collect)\n\n```\n\n\n### <a name=\"update_network_site_to_site_vpn\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.update_network_site_to_site_vpn\") update_network_site_to_site_vpn\n\n> Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.\n\n```python\ndef update_network_site_to_site_vpn(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSiteToSiteVpn |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_site_to_site_vpn = UpdateNetworkSiteToSiteVpnModel()\ncollect['update_network_site_to_site_vpn'] = update_network_site_to_site_vpn\n\n\nresult = networks_controller.update_network_site_to_site_vpn(collect)\n\n```\n\n\n### <a name=\"get_network_site_to_site_vpn\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network_site_to_site_vpn\") get_network_site_to_site_vpn\n\n> Return the site-to-site VPN settings of a network. Only valid for MX networks.\n\n```python\ndef get_network_site_to_site_vpn(self,\n                                     network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.get_network_site_to_site_vpn(network_id)\n\n```\n\n\n### <a name=\"split_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.split_network\") split_network\n\n> Split a combined network into individual networks for each type of device\n\n```python\ndef split_network(self,\n                      network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.split_network(network_id)\n\n```\n\n\n### <a name=\"combine_organization_networks\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.combine_organization_networks\") combine_organization_networks\n\n> Combine multiple networks into a single network\n\n```python\ndef combine_organization_networks(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| combineOrganizationNetworks |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\ncombine_organization_networks = CombineOrganizationNetworksModel()\ncollect['combine_organization_networks'] = combine_organization_networks\n\n\nresult = networks_controller.combine_organization_networks(collect)\n\n```\n\n\n### <a name=\"get_network_access_policies\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network_access_policies\") get_network_access_policies\n\n> List the access policies for this network. Only valid for MS networks.\n\n```python\ndef get_network_access_policies(self,\n                                    network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.get_network_access_policies(network_id)\n\n```\n\n\n### <a name=\"unbind_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.unbind_network\") unbind_network\n\n> Unbind a network from a template.\n\n```python\ndef unbind_network(self,\n                       network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = networks_controller.unbind_network(network_id)\n\n```\n\n\n### <a name=\"bind_network\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.bind_network\") bind_network\n\n> Bind a network to a template.\n\n```python\ndef bind_network(self,\n                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| bindNetwork |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nbind_network = BindNetworkModel()\ncollect['bind_network'] = bind_network\n\n\nresult = networks_controller.bind_network(collect)\n\n```\n\n\n### <a name=\"get_network_air_marshal\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network_air_marshal\") get_network_air_marshal\n\n> List Air Marshal scan results from a network\n\n```python\ndef get_network_air_marshal(self,\n                                options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 31 days from today. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\ntimespan = 87\ncollect['timespan'] = timespan\n\n\nresult = networks_controller.get_network_air_marshal(collect)\n\n```\n\n\n### <a name=\"get_network_traffic\"></a>![Method: ](https://apidocs.io/img/method.png \".NetworksController.get_network_traffic\") get_network_traffic\n\n> The traffic analysis data for this network.\n> <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n> \n\n```python\ndef get_network_traffic(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| timespan |  ``` Required ```  | The timespan for the data. Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.) |\n| deviceType |  ``` Optional ```  | Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ntimespan = 'timespan'\ncollect['timespan'] = timespan\n\ndevice_type = 'deviceType'\ncollect['device_type'] = device_type\n\n\nresult = networks_controller.get_network_traffic(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mv_sense_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MVSenseController\") MVSenseController\n\n### Get controller instance\n\nAn instance of the ``` MVSenseController ``` class can be accessed from the API Client.\n\n```python\n mv_sense_controller = client.mv_sense\n```\n\n### <a name=\"get_device_camera_analytics_live\"></a>![Method: ](https://apidocs.io/img/method.png \".MVSenseController.get_device_camera_analytics_live\") get_device_camera_analytics_live\n\n> Returns live state from camera of analytics zones\n\n```python\ndef get_device_camera_analytics_live(self,\n                                         serial)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nserial = 'serial'\n\nresult = mv_sense_controller.get_device_camera_analytics_live(serial)\n\n```\n\n\n### <a name=\"get_device_camera_analytics_recent\"></a>![Method: ](https://apidocs.io/img/method.png \".MVSenseController.get_device_camera_analytics_recent\") get_device_camera_analytics_recent\n\n> Returns most recent record for analytics zones\n\n```python\ndef get_device_camera_analytics_recent(self,\n                                           serial)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nserial = 'serial'\n\nresult = mv_sense_controller.get_device_camera_analytics_recent(serial)\n\n```\n\n\n### <a name=\"get_device_camera_analytics_zones\"></a>![Method: ](https://apidocs.io/img/method.png \".MVSenseController.get_device_camera_analytics_zones\") get_device_camera_analytics_zones\n\n> Returns all configured analytic zones for this camera\n\n```python\ndef get_device_camera_analytics_zones(self,\n                                          serial)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nserial = 'serial'\n\nresult = mv_sense_controller.get_device_camera_analytics_zones(serial)\n\n```\n\n\n### <a name=\"get_device_camera_analytics_zone_history\"></a>![Method: ](https://apidocs.io/img/method.png \".MVSenseController.get_device_camera_analytics_zone_history\") get_device_camera_analytics_zone_history\n\n> Return historical records for analytic zones\n\n```python\ndef get_device_camera_analytics_zone_history(self,\n                                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| zoneId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 14 hours after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour. |\n| resolution |  ``` Optional ```  | The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nserial = 'serial'\ncollect['serial'] = serial\n\nzone_id = 'zoneId'\ncollect['zone_id'] = zone_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 87\ncollect['timespan'] = timespan\n\nresolution = 87\ncollect['resolution'] = resolution\n\n\nresult = mv_sense_controller.get_device_camera_analytics_zone_history(collect)\n\n```\n\n\n### <a name=\"get_device_camera_analytics_overview\"></a>![Method: ](https://apidocs.io/img/method.png \".MVSenseController.get_device_camera_analytics_overview\") get_device_camera_analytics_overview\n\n> Returns an overview of aggregate analytics data for a timespan\n\n```python\ndef get_device_camera_analytics_overview(self,\n                                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 7 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nserial = 'serial'\ncollect['serial'] = serial\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 87\ncollect['timespan'] = timespan\n\n\nresult = mv_sense_controller.get_device_camera_analytics_overview(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"vlans_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".VlansController\") VlansController\n\n### Get controller instance\n\nAn instance of the ``` VlansController ``` class can be accessed from the API Client.\n\n```python\n vlans_controller = client.vlans\n```\n\n### <a name=\"get_network_vlans\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.get_network_vlans\") get_network_vlans\n\n> List the VLANs for an MX network\n\n```python\ndef get_network_vlans(self,\n                          network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = vlans_controller.get_network_vlans(network_id)\n\n```\n\n\n### <a name=\"get_network_vlans_enabled_state\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.get_network_vlans_enabled_state\") get_network_vlans_enabled_state\n\n> Returns the enabled status of VLANs for the network\n\n```python\ndef get_network_vlans_enabled_state(self,\n                                        network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = vlans_controller.get_network_vlans_enabled_state(network_id)\n\n```\n\n\n### <a name=\"delete_network_vlan\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.delete_network_vlan\") delete_network_vlan\n\n> Delete a VLAN from a network\n\n```python\ndef delete_network_vlan(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| vlanId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nvlan_id = 'vlanId'\ncollect['vlan_id'] = vlan_id\n\n\nvlans_controller.delete_network_vlan(collect)\n\n```\n\n\n### <a name=\"create_network_vlan\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.create_network_vlan\") create_network_vlan\n\n> Add a VLAN\n\n```python\ndef create_network_vlan(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkVlan |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_vlan = CreateNetworkVlanModel()\ncollect['create_network_vlan'] = create_network_vlan\n\n\nresult = vlans_controller.create_network_vlan(collect)\n\n```\n\n\n### <a name=\"update_network_vlans_enabled_state\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.update_network_vlans_enabled_state\") update_network_vlans_enabled_state\n\n> Enable/Disable VLANs for the given network\n\n```python\ndef update_network_vlans_enabled_state(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetwork_vlans_EnabledState |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_vlans_enabled_state = UpdateNetworkVlansEnabledStateModel()\ncollect['update_network_vlans_enabled_state'] = update_network_vlans_enabled_state\n\n\nresult = vlans_controller.update_network_vlans_enabled_state(collect)\n\n```\n\n\n### <a name=\"update_network_vlan\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.update_network_vlan\") update_network_vlan\n\n> Update a VLAN\n\n```python\ndef update_network_vlan(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| vlanId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkVlan |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nvlan_id = 'vlanId'\ncollect['vlan_id'] = vlan_id\n\nupdate_network_vlan = UpdateNetworkVlanModel()\ncollect['update_network_vlan'] = update_network_vlan\n\n\nresult = vlans_controller.update_network_vlan(collect)\n\n```\n\n\n### <a name=\"get_network_vlan\"></a>![Method: ](https://apidocs.io/img/method.png \".VlansController.get_network_vlan\") get_network_vlan\n\n> Return a VLAN\n\n```python\ndef get_network_vlan(self,\n                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| vlanId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nvlan_id = 'vlanId'\ncollect['vlan_id'] = vlan_id\n\n\nresult = vlans_controller.get_network_vlan(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"uplink_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".UplinkSettingsController\") UplinkSettingsController\n\n### Get controller instance\n\nAn instance of the ``` UplinkSettingsController ``` class can be accessed from the API Client.\n\n```python\n uplink_settings_controller = client.uplink_settings\n```\n\n### <a name=\"update_network_uplink_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".UplinkSettingsController.update_network_uplink_settings\") update_network_uplink_settings\n\n> Updates the uplink settings for your MX network.\n\n```python\ndef update_network_uplink_settings(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkUplinkSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_uplink_settings = UpdateNetworkUplinkSettingsModel()\ncollect['update_network_uplink_settings'] = update_network_uplink_settings\n\n\nresult = uplink_settings_controller.update_network_uplink_settings(collect)\n\n```\n\n\n### <a name=\"get_network_uplink_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".UplinkSettingsController.get_network_uplink_settings\") get_network_uplink_settings\n\n> Returns the uplink settings for your MX network.\n\n```python\ndef get_network_uplink_settings(self,\n                                    network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = uplink_settings_controller.get_network_uplink_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"static_routes_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".StaticRoutesController\") StaticRoutesController\n\n### Get controller instance\n\nAn instance of the ``` StaticRoutesController ``` class can be accessed from the API Client.\n\n```python\n static_routes_controller = client.static_routes\n```\n\n### <a name=\"delete_network_static_route\"></a>![Method: ](https://apidocs.io/img/method.png \".StaticRoutesController.delete_network_static_route\") delete_network_static_route\n\n> Delete a static route from a network\n\n```python\ndef delete_network_static_route(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| srId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nsr_id = 'srId'\ncollect['sr_id'] = sr_id\n\n\nstatic_routes_controller.delete_network_static_route(collect)\n\n```\n\n\n### <a name=\"get_network_static_route\"></a>![Method: ](https://apidocs.io/img/method.png \".StaticRoutesController.get_network_static_route\") get_network_static_route\n\n> Return a static route\n\n```python\ndef get_network_static_route(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| srId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nsr_id = 'srId'\ncollect['sr_id'] = sr_id\n\n\nresult = static_routes_controller.get_network_static_route(collect)\n\n```\n\n\n### <a name=\"create_network_static_route\"></a>![Method: ](https://apidocs.io/img/method.png \".StaticRoutesController.create_network_static_route\") create_network_static_route\n\n> Add a static route\n\n```python\ndef create_network_static_route(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkStaticRoute |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_static_route = CreateNetworkStaticRouteModel()\ncollect['create_network_static_route'] = create_network_static_route\n\n\nresult = static_routes_controller.create_network_static_route(collect)\n\n```\n\n\n### <a name=\"get_network_static_routes\"></a>![Method: ](https://apidocs.io/img/method.png \".StaticRoutesController.get_network_static_routes\") get_network_static_routes\n\n> List the static routes for this network\n\n```python\ndef get_network_static_routes(self,\n                                  network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = static_routes_controller.get_network_static_routes(network_id)\n\n```\n\n\n### <a name=\"update_network_static_route\"></a>![Method: ](https://apidocs.io/img/method.png \".StaticRoutesController.update_network_static_route\") update_network_static_route\n\n> Update a static route\n\n```python\ndef update_network_static_route(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| srId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkStaticRoute |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nsr_id = 'srId'\ncollect['sr_id'] = sr_id\n\nupdate_network_static_route = UpdateNetworkStaticRouteModel()\ncollect['update_network_static_route'] = update_network_static_route\n\n\nresult = static_routes_controller.update_network_static_route(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mx_port_forwarding_rules_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXPortForwardingRulesController\") MXPortForwardingRulesController\n\n### Get controller instance\n\nAn instance of the ``` MXPortForwardingRulesController ``` class can be accessed from the API Client.\n\n```python\n mx_port_forwarding_rules_controller = client.mx_port_forwarding_rules\n```\n\n### <a name=\"update_network_port_forwarding_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXPortForwardingRulesController.update_network_port_forwarding_rules\") update_network_port_forwarding_rules\n\n> Update the port forwarding rules for an MX network\n\n```python\ndef update_network_port_forwarding_rules(self,\n                                             options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkPortForwardingRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_port_forwarding_rules = UpdateNetworkPortForwardingRulesModel()\ncollect['update_network_port_forwarding_rules'] = update_network_port_forwarding_rules\n\n\nresult = mx_port_forwarding_rules_controller.update_network_port_forwarding_rules(collect)\n\n```\n\n\n### <a name=\"get_network_port_forwarding_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXPortForwardingRulesController.get_network_port_forwarding_rules\") get_network_port_forwarding_rules\n\n> Return the port forwarding rules for an MX network\n\n```python\ndef get_network_port_forwarding_rules(self,\n                                          network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx_port_forwarding_rules_controller.get_network_port_forwarding_rules(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mx11_nat_rules_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MX11NATRulesController\") MX11NATRulesController\n\n### Get controller instance\n\nAn instance of the ``` MX11NATRulesController ``` class can be accessed from the API Client.\n\n```python\n mx_1_1_nat_rules_controller = client.mx_1_1_nat_rules\n```\n\n### <a name=\"get_network_one_to_one_nat_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MX11NATRulesController.get_network_one_to_one_nat_rules\") get_network_one_to_one_nat_rules\n\n> Return the 1:1 NAT mapping rules for an MX network\n\n```python\ndef get_network_one_to_one_nat_rules(self,\n                                         network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx11_nat_rules_controller.get_network_one_to_one_nat_rules(network_id)\n\n```\n\n\n### <a name=\"update_network_one_to_one_nat_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MX11NATRulesController.update_network_one_to_one_nat_rules\") update_network_one_to_one_nat_rules\n\n> Set the 1:1 NAT mapping rules for an MX network\n\n```python\ndef update_network_one_to_one_nat_rules(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkOneToOneNatRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_one_to_one_nat_rules = UpdateNetworkOneToOneNatRulesModel()\ncollect['update_network_one_to_one_nat_rules'] = update_network_one_to_one_nat_rules\n\n\nresult = mx11_nat_rules_controller.update_network_one_to_one_nat_rules(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"content_filtering_rules_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ContentFilteringRulesController\") ContentFilteringRulesController\n\n### Get controller instance\n\nAn instance of the ``` ContentFilteringRulesController ``` class can be accessed from the API Client.\n\n```python\n content_filtering_rules_controller = client.content_filtering_rules\n```\n\n### <a name=\"update_network_content_filtering\"></a>![Method: ](https://apidocs.io/img/method.png \".ContentFilteringRulesController.update_network_content_filtering\") update_network_content_filtering\n\n> Update the content filtering settings for an MX network\n\n```python\ndef update_network_content_filtering(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkContentFiltering |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_content_filtering = UpdateNetworkContentFilteringModel()\ncollect['update_network_content_filtering'] = update_network_content_filtering\n\n\nresult = content_filtering_rules_controller.update_network_content_filtering(collect)\n\n```\n\n\n### <a name=\"get_network_content_filtering\"></a>![Method: ](https://apidocs.io/img/method.png \".ContentFilteringRulesController.get_network_content_filtering\") get_network_content_filtering\n\n> Return the content filtering settings for an MX network\n\n```python\ndef get_network_content_filtering(self,\n                                      network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = content_filtering_rules_controller.get_network_content_filtering(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"content_filtering_categories_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ContentFilteringCategoriesController\") ContentFilteringCategoriesController\n\n### Get controller instance\n\nAn instance of the ``` ContentFilteringCategoriesController ``` class can be accessed from the API Client.\n\n```python\n content_filtering_categories_controller = client.content_filtering_categories\n```\n\n### <a name=\"get_network_content_filtering_categories\"></a>![Method: ](https://apidocs.io/img/method.png \".ContentFilteringCategoriesController.get_network_content_filtering_categories\") get_network_content_filtering_categories\n\n> List all available content filtering categories for an MX network\n\n```python\ndef get_network_content_filtering_categories(self,\n                                                 network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = content_filtering_categories_controller.get_network_content_filtering_categories(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"syslog_servers_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SyslogServersController\") SyslogServersController\n\n### Get controller instance\n\nAn instance of the ``` SyslogServersController ``` class can be accessed from the API Client.\n\n```python\n syslog_servers_controller = client.syslog_servers\n```\n\n### <a name=\"update_network_syslog_servers\"></a>![Method: ](https://apidocs.io/img/method.png \".SyslogServersController.update_network_syslog_servers\") update_network_syslog_servers\n\n> Update the syslog servers for a network\n\n```python\ndef update_network_syslog_servers(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSyslogServers |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_syslog_servers = UpdateNetworkSyslogServersModel()\ncollect['update_network_syslog_servers'] = update_network_syslog_servers\n\n\nresult = syslog_servers_controller.update_network_syslog_servers(collect)\n\n```\n\n\n### <a name=\"get_network_syslog_servers\"></a>![Method: ](https://apidocs.io/img/method.png \".SyslogServersController.get_network_syslog_servers\") get_network_syslog_servers\n\n> List the syslog servers for a network\n\n```python\ndef get_network_syslog_servers(self,\n                                   network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = syslog_servers_controller.get_network_syslog_servers(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"switch_stacks_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SwitchStacksController\") SwitchStacksController\n\n### Get controller instance\n\nAn instance of the ``` SwitchStacksController ``` class can be accessed from the API Client.\n\n```python\n switch_stacks_controller = client.switch_stacks\n```\n\n### <a name=\"remove_network_switch_stack\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.remove_network_switch_stack\") remove_network_switch_stack\n\n> Remove a switch from a stack\n\n```python\ndef remove_network_switch_stack(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkID |  ``` Required ```  | TODO: Add a parameter description |\n| switchStackId |  ``` Required ```  | TODO: Add a parameter description |\n| removeNetworkSwitchStack |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkID'\ncollect['network_id'] = network_id\n\nswitch_stack_id = 'switchStackId'\ncollect['switch_stack_id'] = switch_stack_id\n\nremove_network_switch_stack = RemoveNetworkSwitchStackModel()\ncollect['remove_network_switch_stack'] = remove_network_switch_stack\n\n\nresult = switch_stacks_controller.remove_network_switch_stack(collect)\n\n```\n\n\n### <a name=\"add_network_switch_stack\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.add_network_switch_stack\") add_network_switch_stack\n\n> Add a switch to a stack\n\n```python\ndef add_network_switch_stack(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| switchStackId |  ``` Required ```  | TODO: Add a parameter description |\n| addNetworkSwitchStack |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nswitch_stack_id = 'switchStackId'\ncollect['switch_stack_id'] = switch_stack_id\n\nadd_network_switch_stack = AddNetworkSwitchStackModel()\ncollect['add_network_switch_stack'] = add_network_switch_stack\n\n\nresult = switch_stacks_controller.add_network_switch_stack(collect)\n\n```\n\n\n### <a name=\"delete_network_switch_stack\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.delete_network_switch_stack\") delete_network_switch_stack\n\n> Delete a stack\n\n```python\ndef delete_network_switch_stack(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| switchStackId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nswitch_stack_id = 'switchStackId'\ncollect['switch_stack_id'] = switch_stack_id\n\n\nswitch_stacks_controller.delete_network_switch_stack(collect)\n\n```\n\n\n### <a name=\"get_network_switch_stack\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.get_network_switch_stack\") get_network_switch_stack\n\n> Show a switch stack\n\n```python\ndef get_network_switch_stack(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| switchStackId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nswitch_stack_id = 'switchStackId'\ncollect['switch_stack_id'] = switch_stack_id\n\n\nresult = switch_stacks_controller.get_network_switch_stack(collect)\n\n```\n\n\n### <a name=\"create_network_switch_stack\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.create_network_switch_stack\") create_network_switch_stack\n\n> Create a stack\n\n```python\ndef create_network_switch_stack(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkSwitchStack |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_switch_stack = CreateNetworkSwitchStackModel()\ncollect['create_network_switch_stack'] = create_network_switch_stack\n\n\nresult = switch_stacks_controller.create_network_switch_stack(collect)\n\n```\n\n\n### <a name=\"get_network_switch_stacks\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchStacksController.get_network_switch_stacks\") get_network_switch_stacks\n\n> List the switch stacks in a network\n\n```python\ndef get_network_switch_stacks(self,\n                                  network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = switch_stacks_controller.get_network_switch_stacks(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"switch_profiles_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SwitchProfilesController\") SwitchProfilesController\n\n### Get controller instance\n\nAn instance of the ``` SwitchProfilesController ``` class can be accessed from the API Client.\n\n```python\n switch_profiles_controller = client.switch_profiles\n```\n\n### <a name=\"get_organization_config_template_switch_profiles\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchProfilesController.get_organization_config_template_switch_profiles\") get_organization_config_template_switch_profiles\n\n> List the switch profiles for your switch template configuration\n\n```python\ndef get_organization_config_template_switch_profiles(self,\n                                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| configTemplateId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nconfig_template_id = 'configTemplateId'\ncollect['config_template_id'] = config_template_id\n\n\nresult = switch_profiles_controller.get_organization_config_template_switch_profiles(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"switch_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SwitchSettingsController\") SwitchSettingsController\n\n### Get controller instance\n\nAn instance of the ``` SwitchSettingsController ``` class can be accessed from the API Client.\n\n```python\n switch_settings_controller = client.switch_settings\n```\n\n### <a name=\"update_network_switch_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchSettingsController.update_network_switch_settings\") update_network_switch_settings\n\n> Update switch network settings\n\n```python\ndef update_network_switch_settings(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSwitchSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_switch_settings = UpdateNetworkSwitchSettingsModel()\ncollect['update_network_switch_settings'] = update_network_switch_settings\n\n\nresult = switch_settings_controller.update_network_switch_settings(collect)\n\n```\n\n\n### <a name=\"get_network_switch_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SwitchSettingsController.get_network_switch_settings\") get_network_switch_settings\n\n> Returns the switch network settings\n\n```python\ndef get_network_switch_settings(self,\n                                    network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = switch_settings_controller.get_network_switch_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"snmp_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SNMPSettingsController\") SNMPSettingsController\n\n### Get controller instance\n\nAn instance of the ``` SNMPSettingsController ``` class can be accessed from the API Client.\n\n```python\n snmp_settings_controller = client.snmp_settings\n```\n\n### <a name=\"update_organization_snmp\"></a>![Method: ](https://apidocs.io/img/method.png \".SNMPSettingsController.update_organization_snmp\") update_organization_snmp\n\n> Update the SNMP settings for an organization\n\n```python\ndef update_organization_snmp(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationSnmp |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nupdate_organization_snmp = UpdateOrganizationSnmpModel()\ncollect['update_organization_snmp'] = update_organization_snmp\n\n\nresult = snmp_settings_controller.update_organization_snmp(collect)\n\n```\n\n\n### <a name=\"get_organization_snmp\"></a>![Method: ](https://apidocs.io/img/method.png \".SNMPSettingsController.get_organization_snmp\") get_organization_snmp\n\n> Return the SNMP settings for an organization\n\n```python\ndef get_organization_snmp(self,\n                              organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = snmp_settings_controller.get_organization_snmp(organization_id)\n\n```\n\n\n### <a name=\"update_network_snmp_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SNMPSettingsController.update_network_snmp_settings\") update_network_snmp_settings\n\n> Update the SNMP settings for a network\n\n```python\ndef update_network_snmp_settings(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSnmpSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_snmp_settings = UpdateNetworkSnmpSettingsModel()\ncollect['update_network_snmp_settings'] = update_network_snmp_settings\n\n\nresult = snmp_settings_controller.update_network_snmp_settings(collect)\n\n```\n\n\n### <a name=\"get_network_snmp_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".SNMPSettingsController.get_network_snmp_settings\") get_network_snmp_settings\n\n> Return the SNMP settings for a network\n\n```python\ndef get_network_snmp_settings(self,\n                                  network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = snmp_settings_controller.get_network_snmp_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"malware_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MalwareSettingsController\") MalwareSettingsController\n\n### Get controller instance\n\nAn instance of the ``` MalwareSettingsController ``` class can be accessed from the API Client.\n\n```python\n malware_settings_controller = client.malware_settings\n```\n\n### <a name=\"update_network_security_malware_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".MalwareSettingsController.update_network_security_malware_settings\") update_network_security_malware_settings\n\n> Set the supported malware settings for an MX network\n\n```python\ndef update_network_security_malware_settings(self,\n                                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSecurityMalwareSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_security_malware_settings = UpdateNetworkSecurityMalwareSettingsModel()\ncollect['update_network_security_malware_settings'] = update_network_security_malware_settings\n\n\nresult = malware_settings_controller.update_network_security_malware_settings(collect)\n\n```\n\n\n### <a name=\"get_network_security_malware_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".MalwareSettingsController.get_network_security_malware_settings\") get_network_security_malware_settings\n\n> Returns all supported malware settings for an MX network\n\n```python\ndef get_network_security_malware_settings(self,\n                                              network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = malware_settings_controller.get_network_security_malware_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"intrusion_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".IntrusionSettingsController\") IntrusionSettingsController\n\n### Get controller instance\n\nAn instance of the ``` IntrusionSettingsController ``` class can be accessed from the API Client.\n\n```python\n intrusion_settings_controller = client.intrusion_settings\n```\n\n### <a name=\"update_organization_security_intrusion_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".IntrusionSettingsController.update_organization_security_intrusion_settings\") update_organization_security_intrusion_settings\n\n> Sets supported intrusion settings for an organization\n\n```python\ndef update_organization_security_intrusion_settings(self,\n                                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationSecurityIntrusionSettings |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nupdate_organization_security_intrusion_settings = UpdateOrganizationSecurityIntrusionSettingsModel()\ncollect['update_organization_security_intrusion_settings'] = update_organization_security_intrusion_settings\n\n\nresult = intrusion_settings_controller.update_organization_security_intrusion_settings(collect)\n\n```\n\n\n### <a name=\"get_organization_security_intrusion_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".IntrusionSettingsController.get_organization_security_intrusion_settings\") get_organization_security_intrusion_settings\n\n> Returns all supported intrusion settings for an organization\n\n```python\ndef get_organization_security_intrusion_settings(self,\n                                                     organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = intrusion_settings_controller.get_organization_security_intrusion_settings(organization_id)\n\n```\n\n\n### <a name=\"update_network_security_intrusion_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".IntrusionSettingsController.update_network_security_intrusion_settings\") update_network_security_intrusion_settings\n\n> Set the supported instrusion settings for an MX network\n\n```python\ndef update_network_security_intrusion_settings(self,\n                                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkSecurityIntrusionSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_security_intrusion_settings = UpdateNetworkSecurityIntrusionSettingsModel()\ncollect['update_network_security_intrusion_settings'] = update_network_security_intrusion_settings\n\n\nresult = intrusion_settings_controller.update_network_security_intrusion_settings(collect)\n\n```\n\n\n### <a name=\"get_network_security_intrusion_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".IntrusionSettingsController.get_network_security_intrusion_settings\") get_network_security_intrusion_settings\n\n> Returns all supported intrusion settings for an MX network\n\n```python\ndef get_network_security_intrusion_settings(self,\n                                                network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = intrusion_settings_controller.get_network_security_intrusion_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"radio_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".RadioSettingsController\") RadioSettingsController\n\n### Get controller instance\n\nAn instance of the ``` RadioSettingsController ``` class can be accessed from the API Client.\n\n```python\n radio_settings_controller = client.radio_settings\n```\n\n### <a name=\"get_network_wireless_rf_profiles\"></a>![Method: ](https://apidocs.io/img/method.png \".RadioSettingsController.get_network_wireless_rf_profiles\") get_network_wireless_rf_profiles\n\n> List the non-basic RF profiles for this network\n\n```python\ndef get_network_wireless_rf_profiles(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| includeTemplateProfiles |  ``` Optional ```  | If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n      should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ninclude_template_profiles = True\ncollect['include_template_profiles'] = include_template_profiles\n\n\nresult = radio_settings_controller.get_network_wireless_rf_profiles(collect)\n\n```\n\n\n### <a name=\"update_network_device_wireless_radio_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".RadioSettingsController.update_network_device_wireless_radio_settings\") update_network_device_wireless_radio_settings\n\n> Update the radio settings of a device\n\n```python\ndef update_network_device_wireless_radio_settings(self,\n                                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkDeviceWirelessRadioSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nupdate_network_device_wireless_radio_settings = UpdateNetworkDeviceWirelessRadioSettingsModel()\ncollect['update_network_device_wireless_radio_settings'] = update_network_device_wireless_radio_settings\n\n\nresult = radio_settings_controller.update_network_device_wireless_radio_settings(collect)\n\n```\n\n\n### <a name=\"get_network_device_wireless_radio_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".RadioSettingsController.get_network_device_wireless_radio_settings\") get_network_device_wireless_radio_settings\n\n> Return the radio settings of a device\n\n```python\ndef get_network_device_wireless_radio_settings(self,\n                                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = radio_settings_controller.get_network_device_wireless_radio_settings(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"clients_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ClientsController\") ClientsController\n\n### Get controller instance\n\nAn instance of the ``` ClientsController ``` class can be accessed from the API Client.\n\n```python\n clients_controller = client.clients\n```\n\n### <a name=\"get_network_client_latency_history\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_latency_history\") get_network_client_latency_history\n\n> Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.\n\n```python\ndef get_network_client_latency_history(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 791 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 791 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day. |\n| resolution |  ``` Optional ```  | The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 179\ncollect['timespan'] = timespan\n\nresolution = 179\ncollect['resolution'] = resolution\n\n\nresult = clients_controller.get_network_client_latency_history(collect)\n\n```\n\n\n### <a name=\"get_network_clients\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_clients\") get_network_clients\n\n> List the clients that have used this network in the timespan\n\n```python\ndef get_network_clients(self,\n                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 31 days from today. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\ntimespan = 179\ncollect['timespan'] = timespan\n\nper_page = 179\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = clients_controller.get_network_clients(collect)\n\n```\n\n\n### <a name=\"get_network_client_splash_authorization_status\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_splash_authorization_status\") get_network_client_splash_authorization_status\n\n> Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_splash_authorization_status(self,\n                                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\n\nresult = clients_controller.get_network_client_splash_authorization_status(collect)\n\n```\n\n\n### <a name=\"get_network_client_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_policy\") get_network_client_policy\n\n> Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_policy(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\n\nresult = clients_controller.get_network_client_policy(collect)\n\n```\n\n\n### <a name=\"get_network_client_usage_history\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_usage_history\") get_network_client_usage_history\n\n> Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_usage_history(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\n\nresult = clients_controller.get_network_client_usage_history(collect)\n\n```\n\n\n### <a name=\"provision_network_clients\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.provision_network_clients\") provision_network_clients\n\n> Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.\n\n```python\ndef provision_network_clients(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| provisionNetworkClients |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nprovision_network_clients = ProvisionNetworkClientsModel()\ncollect['provision_network_clients'] = provision_network_clients\n\n\nresult = clients_controller.provision_network_clients(collect)\n\n```\n\n\n### <a name=\"get_network_client_events\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_events\") get_network_client_events\n\n> Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_events(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 100. Default is 100. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nper_page = 179\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = clients_controller.get_network_client_events(collect)\n\n```\n\n\n### <a name=\"get_network_client_traffic_history\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client_traffic_history\") get_network_client_traffic_history\n\n> Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_traffic_history(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nper_page = 179\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = clients_controller.get_network_client_traffic_history(collect)\n\n```\n\n\n### <a name=\"get_device_clients\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_device_clients\") get_device_clients\n\n> List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.\n\n```python\ndef get_device_clients(self,\n                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 31 days from today. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nserial = 'serial'\ncollect['serial'] = serial\n\nt0 = 't0'\ncollect['t0'] = t0\n\ntimespan = 179\ncollect['timespan'] = timespan\n\n\nresult = clients_controller.get_device_clients(collect)\n\n```\n\n\n### <a name=\"update_network_client_splash_authorization_status\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.update_network_client_splash_authorization_status\") update_network_client_splash_authorization_status\n\n> Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef update_network_client_splash_authorization_status(self,\n                                                          options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkClientSplashAuthorizationStatus |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nupdate_network_client_splash_authorization_status = UpdateNetworkClientSplashAuthorizationStatusModel()\ncollect['update_network_client_splash_authorization_status'] = update_network_client_splash_authorization_status\n\n\nresult = clients_controller.update_network_client_splash_authorization_status(collect)\n\n```\n\n\n### <a name=\"update_network_client_policy\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.update_network_client_policy\") update_network_client_policy\n\n> Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef update_network_client_policy(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkClientPolicy |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nupdate_network_client_policy = UpdateNetworkClientPolicyModel()\ncollect['update_network_client_policy'] = update_network_client_policy\n\n\nresult = clients_controller.update_network_client_policy(collect)\n\n```\n\n\n### <a name=\"get_network_client\"></a>![Method: ](https://apidocs.io/img/method.png \".ClientsController.get_network_client\") get_network_client\n\n> Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client(self,\n                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\n\nresult = clients_controller.get_network_client(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"api_usage_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".APIUsageController\") APIUsageController\n\n### Get controller instance\n\nAn instance of the ``` APIUsageController ``` class can be accessed from the API Client.\n\n```python\n api_usage_controller = client.api_usage\n```\n\n### <a name=\"get_organization_api_requests\"></a>![Method: ](https://apidocs.io/img/method.png \".APIUsageController.get_organization_api_requests\") get_organization_api_requests\n\n> List the API requests made by an organization\n\n```python\ndef get_organization_api_requests(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 31 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 31 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| adminId |  ``` Optional ```  | Filter the results by the ID of the admin who made the API requests |\n| path |  ``` Optional ```  | Filter the results by the path of the API requests |\n| method |  ``` Optional ```  | Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE') |\n| responseCode |  ``` Optional ```  | Filter the results by the response code of the API requests |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 179\ncollect['timespan'] = timespan\n\nper_page = 179\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\nadmin_id = 'adminId'\ncollect['admin_id'] = admin_id\n\npath = 'path'\ncollect['path'] = path\n\nmethod = 'method'\ncollect['method'] = method\n\nresponse_code = 179\ncollect['response_code'] = response_code\n\n\nresult = api_usage_controller.get_organization_api_requests(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"net_flow_settings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".NetFlowSettingsController\") NetFlowSettingsController\n\n### Get controller instance\n\nAn instance of the ``` NetFlowSettingsController ``` class can be accessed from the API Client.\n\n```python\n net_flow_settings_controller = client.net_flow_settings\n```\n\n### <a name=\"update_network_netflow_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".NetFlowSettingsController.update_network_netflow_settings\") update_network_netflow_settings\n\n> Update the NetFlow traffic reporting settings for a network\n\n```python\ndef update_network_netflow_settings(self,\n                                        options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkNetflowSettings |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_netflow_settings = UpdateNetworkNetflowSettingsModel()\ncollect['update_network_netflow_settings'] = update_network_netflow_settings\n\n\nresult = net_flow_settings_controller.update_network_netflow_settings(collect)\n\n```\n\n\n### <a name=\"get_network_netflow_settings\"></a>![Method: ](https://apidocs.io/img/method.png \".NetFlowSettingsController.get_network_netflow_settings\") get_network_netflow_settings\n\n> Return the NetFlow traffic reporting settings for a network\n\n```python\ndef get_network_netflow_settings(self,\n                                     network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = net_flow_settings_controller.get_network_netflow_settings(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"meraki_auth_users_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MerakiAuthUsersController\") MerakiAuthUsersController\n\n### Get controller instance\n\nAn instance of the ``` MerakiAuthUsersController ``` class can be accessed from the API Client.\n\n```python\n meraki_auth_users_controller = client.meraki_auth_users\n```\n\n### <a name=\"get_network_meraki_auth_user\"></a>![Method: ](https://apidocs.io/img/method.png \".MerakiAuthUsersController.get_network_meraki_auth_user\") get_network_meraki_auth_user\n\n> Return the Meraki Auth splash or RADIUS user\n\n```python\ndef get_network_meraki_auth_user(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\n\nresult = meraki_auth_users_controller.get_network_meraki_auth_user(collect)\n\n```\n\n\n### <a name=\"get_network_meraki_auth_users\"></a>![Method: ](https://apidocs.io/img/method.png \".MerakiAuthUsersController.get_network_meraki_auth_users\") get_network_meraki_auth_users\n\n> List the splash or RADIUS users configured under Meraki Authentication for a network\n\n```python\ndef get_network_meraki_auth_users(self,\n                                      network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = meraki_auth_users_controller.get_network_meraki_auth_users(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"http_servers_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".HTTPServersController\") HTTPServersController\n\n### Get controller instance\n\nAn instance of the ``` HTTPServersController ``` class can be accessed from the API Client.\n\n```python\n http_servers_controller = client.http_servers\n```\n\n### <a name=\"get_network_http_servers_webhook_test\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.get_network_http_servers_webhook_test\") get_network_http_servers_webhook_test\n\n> Return the status of a webhook test\n\n```python\ndef get_network_http_servers_webhook_test(self,\n                                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\n\nresult = http_servers_controller.get_network_http_servers_webhook_test(collect)\n\n```\n\n\n### <a name=\"create_network_http_servers_webhook_test\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.create_network_http_servers_webhook_test\") create_network_http_servers_webhook_test\n\n> Send a test webhook\n\n```python\ndef create_network_http_servers_webhook_test(self,\n                                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkHttpServersWebhookTest |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_http_servers_webhook_test = CreateNetworkHttpServersWebhookTestModel()\ncollect['create_network_http_servers_webhook_test'] = create_network_http_servers_webhook_test\n\n\nresult = http_servers_controller.create_network_http_servers_webhook_test(collect)\n\n```\n\n\n### <a name=\"delete_network_http_server\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.delete_network_http_server\") delete_network_http_server\n\n> Delete an HTTP server\n\n```python\ndef delete_network_http_server(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\n\nhttp_servers_controller.delete_network_http_server(collect)\n\n```\n\n\n### <a name=\"update_network_http_server\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.update_network_http_server\") update_network_http_server\n\n> Update an HTTP server\n\n```python\ndef update_network_http_server(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkHttpServer |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\nupdate_network_http_server = UpdateNetworkHttpServerModel()\ncollect['update_network_http_server'] = update_network_http_server\n\n\nresult = http_servers_controller.update_network_http_server(collect)\n\n```\n\n\n### <a name=\"get_network_http_server\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.get_network_http_server\") get_network_http_server\n\n> Return an HTTP server\n\n```python\ndef get_network_http_server(self,\n                                options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nid = 'id'\ncollect['id'] = id\n\n\nresult = http_servers_controller.get_network_http_server(collect)\n\n```\n\n\n### <a name=\"create_network_http_server\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.create_network_http_server\") create_network_http_server\n\n> Add an HTTP server\n\n```python\ndef create_network_http_server(self,\n                                   options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| createNetworkHttpServer |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\ncreate_network_http_server = CreateNetworkHttpServerModel()\ncollect['create_network_http_server'] = create_network_http_server\n\n\nresult = http_servers_controller.create_network_http_server(collect)\n\n```\n\n\n### <a name=\"get_network_http_servers\"></a>![Method: ](https://apidocs.io/img/method.png \".HTTPServersController.get_network_http_servers\") get_network_http_servers\n\n> List the HTTP servers for a network\n\n```python\ndef get_network_http_servers(self,\n                                 network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = http_servers_controller.get_network_http_servers(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mxvpn_firewall_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXVPNFirewallController\") MXVPNFirewallController\n\n### Get controller instance\n\nAn instance of the ``` MXVPNFirewallController ``` class can be accessed from the API Client.\n\n```python\n mx_vpn_firewall_controller = client.mx_vpn_firewall\n```\n\n### <a name=\"update_organization_vpn_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXVPNFirewallController.update_organization_vpn_firewall_rules\") update_organization_vpn_firewall_rules\n\n> Update the firewall rules of an organization's site-to-site VPN\n\n```python\ndef update_organization_vpn_firewall_rules(self,\n                                               options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| updateOrganizationVpnFirewallRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nupdate_organization_vpn_firewall_rules = UpdateOrganizationVpnFirewallRulesModel()\ncollect['update_organization_vpn_firewall_rules'] = update_organization_vpn_firewall_rules\n\n\nresult = mx_vpn_firewall_controller.update_organization_vpn_firewall_rules(collect)\n\n```\n\n\n### <a name=\"get_organization_vpn_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXVPNFirewallController.get_organization_vpn_firewall_rules\") get_organization_vpn_firewall_rules\n\n> Return the firewall rules for an organization's site-to-site VPN\n\n```python\ndef get_organization_vpn_firewall_rules(self,\n                                            organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = mx_vpn_firewall_controller.get_organization_vpn_firewall_rules(organization_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mxl7_application_categories_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXL7ApplicationCategoriesController\") MXL7ApplicationCategoriesController\n\n### Get controller instance\n\nAn instance of the ``` MXL7ApplicationCategoriesController ``` class can be accessed from the API Client.\n\n```python\n mx_l7_application_categories_controller = client.mx_l7_application_categories\n```\n\n### <a name=\"get_network_l7_firewall_rules_application_categories\"></a>![Method: ](https://apidocs.io/img/method.png \".MXL7ApplicationCategoriesController.get_network_l7_firewall_rules_application_categories\") get_network_l7_firewall_rules_application_categories\n\n> Return the L7 firewall application categories and their associated applications for an MX network\n\n```python\ndef get_network_l7_firewall_rules_application_categories(self,\n                                                             network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx_l7_application_categories_controller.get_network_l7_firewall_rules_application_categories(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mxl3_firewall_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXL3FirewallController\") MXL3FirewallController\n\n### Get controller instance\n\nAn instance of the ``` MXL3FirewallController ``` class can be accessed from the API Client.\n\n```python\n mx_l3_firewall_controller = client.mx_l3_firewall\n```\n\n### <a name=\"update_network_l3_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXL3FirewallController.update_network_l3_firewall_rules\") update_network_l3_firewall_rules\n\n> Update the L3 firewall rules of an MX network\n\n```python\ndef update_network_l3_firewall_rules(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkL3FirewallRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_l3_firewall_rules = UpdateNetworkL3FirewallRulesModel()\ncollect['update_network_l3_firewall_rules'] = update_network_l3_firewall_rules\n\n\nresult = mx_l3_firewall_controller.update_network_l3_firewall_rules(collect)\n\n```\n\n\n### <a name=\"get_network_l3_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXL3FirewallController.get_network_l3_firewall_rules\") get_network_l3_firewall_rules\n\n> Return the L3 firewall rules for an MX network\n\n```python\ndef get_network_l3_firewall_rules(self,\n                                      network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx_l3_firewall_controller.get_network_l3_firewall_rules(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"mx_cellular_firewall_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".MXCellularFirewallController\") MXCellularFirewallController\n\n### Get controller instance\n\nAn instance of the ``` MXCellularFirewallController ``` class can be accessed from the API Client.\n\n```python\n mx_cellular_firewall_controller = client.mx_cellular_firewall\n```\n\n### <a name=\"update_network_cellular_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXCellularFirewallController.update_network_cellular_firewall_rules\") update_network_cellular_firewall_rules\n\n> Update the cellular firewall rules of an MX network\n\n```python\ndef update_network_cellular_firewall_rules(self,\n                                               options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkCellularFirewallRules |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nupdate_network_cellular_firewall_rules = UpdateNetworkCellularFirewallRulesModel()\ncollect['update_network_cellular_firewall_rules'] = update_network_cellular_firewall_rules\n\n\nresult = mx_cellular_firewall_controller.update_network_cellular_firewall_rules(collect)\n\n```\n\n\n### <a name=\"get_network_cellular_firewall_rules\"></a>![Method: ](https://apidocs.io/img/method.png \".MXCellularFirewallController.get_network_cellular_firewall_rules\") get_network_cellular_firewall_rules\n\n> Return the cellular firewall rules for an MX network\n\n```python\ndef get_network_cellular_firewall_rules(self,\n                                            network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = mx_cellular_firewall_controller.get_network_cellular_firewall_rules(network_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"devices_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".DevicesController\") DevicesController\n\n### Get controller instance\n\nAn instance of the ``` DevicesController ``` class can be accessed from the API Client.\n\n```python\n devices_controller = client.devices\n```\n\n### <a name=\"blink_network_device_leds\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.blink_network_device_leds\") blink_network_device_leds\n\n> Blink the LEDs on a device\n\n```python\ndef blink_network_device_leds(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| blinkNetworkDeviceLeds |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nblink_network_device_leds = BlinkNetworkDeviceLedsModel()\ncollect['blink_network_device_leds'] = blink_network_device_leds\n\n\nresult = devices_controller.blink_network_device_leds(collect)\n\n```\n\n\n### <a name=\"reboot_network_device\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.reboot_network_device\") reboot_network_device\n\n> Reboot a device\n\n```python\ndef reboot_network_device(self,\n                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = devices_controller.reboot_network_device(collect)\n\n```\n\n\n### <a name=\"remove_network_device\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.remove_network_device\") remove_network_device\n\n> Remove a single device\n\n```python\ndef remove_network_device(self,\n                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = devices_controller.remove_network_device(collect)\n\n```\n\n\n### <a name=\"claim_network_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.claim_network_devices\") claim_network_devices\n\n> Claim a device into a network\n\n```python\ndef claim_network_devices(self,\n                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| claimNetworkDevices |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclaim_network_devices = ClaimNetworkDevicesModel()\ncollect['claim_network_devices'] = claim_network_devices\n\n\nresult = devices_controller.claim_network_devices(collect)\n\n```\n\n\n### <a name=\"get_network_device_uplink\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_device_uplink\") get_network_device_uplink\n\n> Return the uplink information for a device.\n\n```python\ndef get_network_device_uplink(self,\n                                  options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = devices_controller.get_network_device_uplink(collect)\n\n```\n\n\n### <a name=\"get_network_device_performance\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_device_performance\") get_network_device_performance\n\n> Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.\n\n```python\ndef get_network_device_performance(self,\n                                       options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = devices_controller.get_network_device_performance(collect)\n\n```\n\n\n### <a name=\"get_network_device\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_device\") get_network_device\n\n> Return a single device\n\n```python\ndef get_network_device(self,\n                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\n\nresult = devices_controller.get_network_device(collect)\n\n```\n\n\n### <a name=\"get_network_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_devices\") get_network_devices\n\n> List the devices in a network\n\n```python\ndef get_network_devices(self,\n                            network_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\nnetwork_id = 'networkId'\n\nresult = devices_controller.get_network_devices(network_id)\n\n```\n\n\n### <a name=\"update_network_device\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.update_network_device\") update_network_device\n\n> Update the attributes of a device\n\n```python\ndef update_network_device(self,\n                              options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| updateNetworkDevice |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nupdate_network_device = UpdateNetworkDeviceModel()\ncollect['update_network_device'] = update_network_device\n\n\nresult = devices_controller.update_network_device(collect)\n\n```\n\n\n### <a name=\"get_organization_devices\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_organization_devices\") get_organization_devices\n\n> List the devices in an organization\n\n```python\ndef get_organization_devices(self,\n                                 options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = devices_controller.get_organization_devices(collect)\n\n```\n\n\n### <a name=\"get_network_device_lldp_cdp\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_device_lldp_cdp\") get_network_device_lldp_cdp\n\n> List LLDP and CDP information for a device\n\n```python\ndef get_network_device_lldp_cdp(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| timespan |  ``` Optional ```  | The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\ntimespan = 'timespan'\ncollect['timespan'] = timespan\n\n\nresult = devices_controller.get_network_device_lldp_cdp(collect)\n\n```\n\n\n### <a name=\"get_network_device_loss_and_latency_history\"></a>![Method: ](https://apidocs.io/img/method.png \".DevicesController.get_network_device_loss_and_latency_history\") get_network_device_loss_and_latency_history\n\n> Get the uplink loss percentage and latency in milliseconds for a wired network device.\n\n```python\ndef get_network_device_loss_and_latency_history(self,\n                                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| ip |  ``` Required ```  | The destination IP used to obtain the requested stats. This is required. |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 31 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day. |\n| resolution |  ``` Optional ```  | The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60. |\n| uplink |  ``` Optional ```  | The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\nip = 'ip'\ncollect['ip'] = ip\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 15\ncollect['timespan'] = timespan\n\nresolution = 15\ncollect['resolution'] = resolution\n\nuplink = 'uplink'\ncollect['uplink'] = uplink\n\n\nresult = devices_controller.get_network_device_loss_and_latency_history(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"config_templates_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ConfigTemplatesController\") ConfigTemplatesController\n\n### Get controller instance\n\nAn instance of the ``` ConfigTemplatesController ``` class can be accessed from the API Client.\n\n```python\n config_templates_controller = client.config_templates\n```\n\n### <a name=\"delete_organization_config_template\"></a>![Method: ](https://apidocs.io/img/method.png \".ConfigTemplatesController.delete_organization_config_template\") delete_organization_config_template\n\n> Remove a configuration template\n\n```python\ndef delete_organization_config_template(self,\n                                            options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| id |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nid = 'id'\ncollect['id'] = id\n\n\nconfig_templates_controller.delete_organization_config_template(collect)\n\n```\n\n\n### <a name=\"get_organization_config_templates\"></a>![Method: ](https://apidocs.io/img/method.png \".ConfigTemplatesController.get_organization_config_templates\") get_organization_config_templates\n\n> List the configuration templates for this organization\n\n```python\ndef get_organization_config_templates(self,\n                                          organization_id)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\norganization_id = 'organizationId'\n\nresult = config_templates_controller.get_organization_config_templates(organization_id)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"cameras_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".CamerasController\") CamerasController\n\n### Get controller instance\n\nAn instance of the ``` CamerasController ``` class can be accessed from the API Client.\n\n```python\n cameras_controller = client.cameras\n```\n\n### <a name=\"generate_network_camera_snapshot\"></a>![Method: ](https://apidocs.io/img/method.png \".CamerasController.generate_network_camera_snapshot\") generate_network_camera_snapshot\n\n> Generate a snapshot of what the camera sees at the specified time and return a link to that image.\n\n```python\ndef generate_network_camera_snapshot(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| generateNetworkCameraSnapshot |  ``` Optional ```  | TODO: Add a parameter description |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\ngenerate_network_camera_snapshot = GenerateNetworkCameraSnapshotModel()\ncollect['generate_network_camera_snapshot'] = generate_network_camera_snapshot\n\n\nresult = cameras_controller.generate_network_camera_snapshot(collect)\n\n```\n\n\n### <a name=\"get_network_camera_video_link\"></a>![Method: ](https://apidocs.io/img/method.png \".CamerasController.get_network_camera_video_link\") get_network_camera_video_link\n\n> Returns video link for the specified camera. If a timestamp supplied, it links to that time.\n\n```python\ndef get_network_camera_video_link(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| serial |  ``` Required ```  | TODO: Add a parameter description |\n| timestamp |  ``` Optional ```  | The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nserial = 'serial'\ncollect['serial'] = serial\n\ntimestamp = 'timestamp'\ncollect['timestamp'] = timestamp\n\n\nresult = cameras_controller.get_network_camera_video_link(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"bluetooth_clients_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".BluetoothClientsController\") BluetoothClientsController\n\n### Get controller instance\n\nAn instance of the ``` BluetoothClientsController ``` class can be accessed from the API Client.\n\n```python\n bluetooth_clients_controller = client.bluetooth_clients\n```\n\n### <a name=\"get_network_bluetooth_clients\"></a>![Method: ](https://apidocs.io/img/method.png \".BluetoothClientsController.get_network_bluetooth_clients\") get_network_bluetooth_clients\n\n> List the Bluetooth clients seen by APs in this network\n\n```python\ndef get_network_bluetooth_clients(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| timespan |  ``` Optional ```  | The timespan, in seconds, used to look back from now for bluetooth clients |\n| includeConnectivityHistory |  ``` Optional ```  | Include the connectivity history for this client |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\ntimespan = 'timespan'\ncollect['timespan'] = timespan\n\ninclude_connectivity_history = 'includeConnectivityHistory'\ncollect['include_connectivity_history'] = include_connectivity_history\n\n\nresult = bluetooth_clients_controller.get_network_bluetooth_clients(collect)\n\n```\n\n\n### <a name=\"get_network_bluetooth_client\"></a>![Method: ](https://apidocs.io/img/method.png \".BluetoothClientsController.get_network_bluetooth_client\") get_network_bluetooth_client\n\n> Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.\n\n```python\ndef get_network_bluetooth_client(self,\n                                     options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| bluetoothClientId |  ``` Required ```  | TODO: Add a parameter description |\n| includeConnectivityHistory |  ``` Optional ```  | Include the connectivity history for this client |\n| connectivityHistoryTimespan |  ``` Optional ```  | The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nbluetooth_client_id = 'bluetoothClientId'\ncollect['bluetooth_client_id'] = bluetooth_client_id\n\ninclude_connectivity_history = 'includeConnectivityHistory'\ncollect['include_connectivity_history'] = include_connectivity_history\n\nconnectivity_history_timespan = 'connectivityHistoryTimespan'\ncollect['connectivity_history_timespan'] = connectivity_history_timespan\n\n\nresult = bluetooth_clients_controller.get_network_bluetooth_client(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"security_events_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".SecurityEventsController\") SecurityEventsController\n\n### Get controller instance\n\nAn instance of the ``` SecurityEventsController ``` class can be accessed from the API Client.\n\n```python\n security_events_controller = client.security_events\n```\n\n### <a name=\"get_organization_security_events\"></a>![Method: ](https://apidocs.io/img/method.png \".SecurityEventsController.get_organization_security_events\") get_organization_security_events\n\n> List the security events for an organization\n\n```python\ndef get_organization_security_events(self,\n                                         options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 365 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 15\ncollect['timespan'] = timespan\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = security_events_controller.get_organization_security_events(collect)\n\n```\n\n\n### <a name=\"get_network_security_events\"></a>![Method: ](https://apidocs.io/img/method.png \".SecurityEventsController.get_network_security_events\") get_network_security_events\n\n> List the security events for a network\n\n```python\ndef get_network_security_events(self,\n                                    options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 365 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 365 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 15\ncollect['timespan'] = timespan\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = security_events_controller.get_network_security_events(collect)\n\n```\n\n\n### <a name=\"get_network_client_security_events\"></a>![Method: ](https://apidocs.io/img/method.png \".SecurityEventsController.get_network_client_security_events\") get_network_client_security_events\n\n> List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n```python\ndef get_network_client_security_events(self,\n                                           options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| networkId |  ``` Required ```  | TODO: Add a parameter description |\n| clientId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 791 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 791 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\nnetwork_id = 'networkId'\ncollect['network_id'] = network_id\n\nclient_id = 'clientId'\ncollect['client_id'] = client_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 15\ncollect['timespan'] = timespan\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\n\nresult = security_events_controller.get_network_client_security_events(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"webhook_logs_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".WebhookLogsController\") WebhookLogsController\n\n### Get controller instance\n\nAn instance of the ``` WebhookLogsController ``` class can be accessed from the API Client.\n\n```python\n webhook_logs_controller = client.webhook_logs\n```\n\n### <a name=\"get_organization_webhook_logs\"></a>![Method: ](https://apidocs.io/img/method.png \".WebhookLogsController.get_organization_webhook_logs\") get_organization_webhook_logs\n\n> Return the log of webhook POSTs sent\n\n```python\ndef get_organization_webhook_logs(self,\n                                      options=dict())\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| organizationId |  ``` Required ```  | TODO: Add a parameter description |\n| t0 |  ``` Optional ```  | The beginning of the timespan for the data. The maximum lookback period is 90 days from today. |\n| t1 |  ``` Optional ```  | The end of the timespan for the data. t1 can be a maximum of 31 days after t0. |\n| timespan |  ``` Optional ```  | The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day. |\n| perPage |  ``` Optional ```  | The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50. |\n| startingAfter |  ``` Optional ```  | A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| endingBefore |  ``` Optional ```  | A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. |\n| url |  ``` Optional ```  | The URL the webhook was sent to |\n\n\n\n#### Example Usage\n\n```python\ncollect = {}\n\norganization_id = 'organizationId'\ncollect['organization_id'] = organization_id\n\nt0 = 't0'\ncollect['t0'] = t0\n\nt1 = 't1'\ncollect['t1'] = t1\n\ntimespan = 15\ncollect['timespan'] = timespan\n\nper_page = 15\ncollect['per_page'] = per_page\n\nstarting_after = 'startingAfter'\ncollect['starting_after'] = starting_after\n\nending_before = 'endingBefore'\ncollect['ending_before'] = ending_before\n\nurl = 'url'\ncollect['url'] = url\n\n\nresult = webhook_logs_controller.get_organization_webhook_logs(collect)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://create.meraki.io",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meraki-sdk",
    "package_url": "https://pypi.org/project/meraki-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/meraki-sdk/",
    "project_urls": {
      "Homepage": "https://create.meraki.io"
    },
    "release_url": "https://pypi.org/project/meraki-sdk/1.0.2/",
    "requires_dist": [
      "requests (<3.0,>=2.9.1)",
      "jsonpickle (<1.0,>=0.7.1)",
      "cachecontrol (<1.0,>=0.11.7)",
      "python-dateutil (<3.0,>=2.5.3)"
    ],
    "requires_python": "",
    "summary": "Python client library for Meraki Dashboard API",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6075130,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2f9dacca14f73577aa77ff0c089b584a55949d6d2435fc19c9deae252caecba",
        "md5": "bfd7793c79dc7a2be04825b2efb1cad4",
        "sha256": "3dbee61fcb3f0cb45821a503db440111d63efaa285e84d02726aaae92f4c3ae6"
      },
      "downloads": -1,
      "filename": "meraki_sdk-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bfd7793c79dc7a2be04825b2efb1cad4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 305389,
      "upload_time": "2019-07-15T13:16:42",
      "upload_time_iso_8601": "2019-07-15T13:16:42.516138Z",
      "url": "https://files.pythonhosted.org/packages/a2/f9/dacca14f73577aa77ff0c089b584a55949d6d2435fc19c9deae252caecba/meraki_sdk-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79b2c42fcb5d8e44fa6c943e288bee5d98884ded9af3e814f9e94179f57235a4",
        "md5": "0a90e049d711aa032593894e8419ebd8",
        "sha256": "ce4efcef9d98a495004338b6633d0771fbeaf74220c8e8e579925f724de3a607"
      },
      "downloads": -1,
      "filename": "meraki-sdk-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0a90e049d711aa032593894e8419ebd8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 174690,
      "upload_time": "2019-07-15T13:16:48",
      "upload_time_iso_8601": "2019-07-15T13:16:48.736506Z",
      "url": "https://files.pythonhosted.org/packages/79/b2/c42fcb5d8e44fa6c943e288bee5d98884ded9af3e814f9e94179f57235a4/meraki-sdk-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}