{
  "info": {
    "author": "Robert S.",
    "author_email": "admin@robert-s.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![Tests](https://github.com/Wallvon/mofh/actions/workflows/tests.yml/badge.svg)\n# mofh by Robert S.\nAn API wrapper for [MyOwnFreeHost](https://myownfreehost.net).\n\n## Installation\nTo install from PyPi run\n```bash\npip install mofh\n```\n\n## Documentation\nhttps://mofh.readthedocs.io\n\n## Versioning\nmofh uses the following versioning pattern:\n\n**major.minor.patch**\n- **Major**: Breaking changes, the bot is no longer compatible with previous versions.\n- **Minor**: New features, no breaking changes.\n- **Patch**: Bug fixes and small improvements.\n\n## Usage\n\n### Basic usage (creating an account)\nSync:\n\n```python\nimport mofh\n\n# With a context manager\nwith mofh.Client(username=\"example\", password=\"password\") as client:\n    response = client.create(username='example', password='password', contactemail='example@example.com',\n                         domain='subdomain.example.com', plan='MyAwesomePlan')\n    print(response)\n\n# ---\n\n# Without a context manager\nclient = mofh.Client(username=\"example\", password=\"password\")\n\nresponse = client.create(username='example', password='password', contactemail='example@example.com',\n                         domain='subdomain.example.com', plan='MyAwesomePlan')\nprint(response)\n\nclient.close()\n```\n\nAsync:\n\n```python\nimport mofh\n\n# With a context manager\nasync with mofh.AsyncClient(username=\"example\", password=\"password\") as client:\n    response = await client.create(username='example', password='password', contactemail='example@example.com',\n                         domain='subdomain.example.com', plan='MyAwesomePlan')\n    print(response)\n\n# ---\n\n# Without a context manager\nclient = mofh.AsyncClient(username=\"example\", password=\"password\")\n\nresponse = await client.create(username='example', password='password', contactemail='example@example.com',\n                         domain='subdomain.example.com', plan='MyAwesomePlan')\nprint(response)\n\nawait client.close()\n```\n\n### Custom session\nIt is possible to use custom requests or aiohttp session with configured timeouts and other settings.\n\nSync:\n\n```python\nimport mofh\nfrom requests import Session\n\nclient = mofh.Client(username=\"example\", password=\"password\", session=Session())\n```\n\nAsync:\n\n```python\nimport mofh\nfrom aiohttp import ClientSession, ClientTimeout\n\nclient = mofh.AsyncClient(username=\"example\", password=\"password\", session=ClientSession(timeout=ClientTimeout))\n```\n\n### Custom API URL\nIn case URL gets changed for some reason it is possible to overwrite the API URL:\n\n```python\nimport mofh\n\nclient = mofh.Client(username=\"example\", password=\"password\", api_url=\"https://panel.myownfreehost.net/xml-api/\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Wallvon/mofh",
    "keywords": "mofh,myownfreehost,vistapanel,vpanel,byet,ifastnet,byethost,freehosting,free-hosting,api-wrapper,api,wrapper",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mofh",
    "package_url": "https://pypi.org/project/mofh/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/mofh/",
    "project_urls": {
      "Homepage": "https://github.com/Wallvon/mofh"
    },
    "release_url": "https://pypi.org/project/mofh/1.0.0/",
    "requires_dist": [
      "aiohttp[speedups] (>=3.8.1)",
      "asyncio (>=3.4.3)",
      "uvloop (>=0.16.0)",
      "requests (>=2.28.1)",
      "flake8 (==5.0.4) ; extra == 'testing'",
      "tox (==3.25.1) ; extra == 'testing'",
      "pytest (==7.1.2) ; extra == 'testing'",
      "pytest-cov (==3.0.0) ; extra == 'testing'",
      "pytest-asyncio (==0.19.0) ; extra == 'testing'",
      "mypy (==0.971) ; extra == 'testing'",
      "sphinx (==5.1.1) ; extra == 'testing'"
    ],
    "requires_python": ">=3.8",
    "summary": "API wrapper for https://myownfreehost.net",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15126227,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f14d1a907046ebe74c083af1e8420da43d7353465798fb30df0285057861f6b2",
        "md5": "c01e91f4a3b201d48c3d91bfa435db04",
        "sha256": "7f955304a8a6801818f0d5be7121c6d453d881232755e4162bc992ec872dddfe"
      },
      "downloads": -1,
      "filename": "mofh-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c01e91f4a3b201d48c3d91bfa435db04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17539,
      "upload_time": "2022-08-07T14:13:34",
      "upload_time_iso_8601": "2022-08-07T14:13:34.105314Z",
      "url": "https://files.pythonhosted.org/packages/f1/4d/1a907046ebe74c083af1e8420da43d7353465798fb30df0285057861f6b2/mofh-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c3030961a2d3700c1046c9e62783f746d966efefd4b2d00d2a9b61b8a2ff802",
        "md5": "a774f36127ff16c43c977a4262621a4e",
        "sha256": "d1cb1a50e6a3558e5ab12da87ca025ea2feaec0d3897b8b28b1ba66f142e1304"
      },
      "downloads": -1,
      "filename": "mofh-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a774f36127ff16c43c977a4262621a4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 18583,
      "upload_time": "2022-08-07T14:13:35",
      "upload_time_iso_8601": "2022-08-07T14:13:35.903978Z",
      "url": "https://files.pythonhosted.org/packages/9c/30/30961a2d3700c1046c9e62783f746d966efefd4b2d00d2a9b61b8a2ff802/mofh-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [],
      "details": "The `xml.etree.ElementTree` module that mofh used up until version `1.0.1` implements a simple and efficient API for parsing and creating XML data. But it makes the application vulnerable to:\n\n- [Billion Laughs attack](https://en.wikipedia.org/wiki/Billion_laughs_attack): It is a type of denial-of-service attack aimed at XML parsers. It uses multiple levels of nested entities. If one large entity is repeated with a couple of thousand chars repeatedly, the parser gets overwhelmed.  \n- [Quadratic blowup attack](https://www.acunetix.com/vulnerabilities/web/xml-quadratic-blowup-denial-of-service-attack/): It is similar to a Billion Laughs attack. It abuses entity expansion, too. Instead of nested entities, it repeats one large entity with a couple of thousand chars repeatedly.\n\nThe Problem has been patched starting from version `1.0.1` by utilising the `defusedxml` package instead of `xml.etree.ElementTree`.\n\n### Workarounds\nFor this vulnerability to be exploited the user must be using a custom API URL, which has to be manually given using the `api_url` argument, or MyOwnFreeHost's API must be hacked. So, if the user did not use a custom API URL they _should_ be fine, however, upgrading is still advised.\n\nAnother workaround could be to call `defusedxml.defuse_stdlib()` before making any requests using the client.",
      "fixed_in": [
        "1.0.1"
      ],
      "id": "GHSA-7r9x-qrpr-3cxw",
      "link": "https://osv.dev/vulnerability/GHSA-7r9x-qrpr-3cxw",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}