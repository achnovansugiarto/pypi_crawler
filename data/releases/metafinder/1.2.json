{
  "info": {
    "author": "Josue Encinar (@JosueEncinar)",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "**MetaFinder - Metadata search through Search Engines**\n=======================================================\n\nInstallation:\n-------------\n\n    > pip3 install metafinder\n\nUpgrades are also available using:\n\n    > pip3 install metafinder --upgrade\n\nUsage\n-----\n\nMetaFinder can be used in 2 ways:\n\nCLI\n---\n\n    metafinder -d domain.com -l 20 -o folder [-t 10] -go -bi -ba \n\nParameters: \n\n-  d: Specifies the target domain. \n-  l: Specify the maximum number of results to be searched. \n-  o: Specify the path to save the report. \n-  t: Optional. Used to configure the threads (4 by default). \n-  v: Show Metafinder version.\n-  go: Optional. Search in Google. (Default) \n-  bi: Optional. Search in Bing. \n-  ba: Optional. Search in Baidu. (Experimental)\n\nIn Code\n-------\n\n    import metafinder.extractor as metadata_extractor\n\n    documents_limit = 5\n    domain = \"target_domain\"\n    result = metadata_extractor.extract_metadata_from_google_search(domain, documents_limit)\n    # result = metadata_extractor.extract_metadata_from_bing_search(domain, documents_limit)\n    # result = metadata_extractor.extract_metadata_from_baidu_search(domain, documents_limit)\n    authors = result.get_authors()\n    software = result.get_software()\n    for k,v in result.get_metadata().items():\n        print(f\"{k}:\")\n        print(f\"|_ URL: {v['url']}\")\n        for metadata,value in v['metadata'].items():\n            print(f\"|__ {metadata}: {value}\")\n\n    document_name = \"test.pdf\"\n    try:\n        metadata_file = metadata_extractor.extract_metadata_from_document(document_name)\n        for k,v in metadata_file.items():\n            print(f\"{k}: {v}\")\n    except FileNotFoundError:\n        print(\"File not found\")\n\nAuthor\n======\n\nThis project has been developed by:\n\n-  **Josué Encinar García** -- https://twitter.com/JosueEncinar\n\nContributors\n============\n\n-  **Félix Brezo Fernández** -- https://twitter.com/febrezo\n\nDisclaimer!\n===========\n\nThe software is designed to leave no trace in the documents we upload to a domain. The author is not responsible for any\nillegitimate use.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Josue87/MetaFinder",
    "keywords": "",
    "license": "GNU GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metafinder",
    "package_url": "https://pypi.org/project/metafinder/",
    "platform": "",
    "project_url": "https://pypi.org/project/metafinder/",
    "project_urls": {
      "Homepage": "https://github.com/Josue87/MetaFinder"
    },
    "release_url": "https://pypi.org/project/metafinder/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MetaFinder - Metadata search through Search Engines",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10986542,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "886bc382465a51de8dff2b96d0991ac3ed66c639a30538ec7be876c055a2a0f8",
        "md5": "ec33a1fa4b3f5f1026cd0d15acdeb027",
        "sha256": "066d901d2eebf7d28d8c010a95be91a5b939154a919018045f502c145638b3a3"
      },
      "downloads": -1,
      "filename": "metafinder-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ec33a1fa4b3f5f1026cd0d15acdeb027",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11454,
      "upload_time": "2021-07-23T13:09:46",
      "upload_time_iso_8601": "2021-07-23T13:09:46.960797Z",
      "url": "https://files.pythonhosted.org/packages/88/6b/c382465a51de8dff2b96d0991ac3ed66c639a30538ec7be876c055a2a0f8/metafinder-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}