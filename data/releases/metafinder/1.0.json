{
  "info": {
    "author": "Josue Encinar (@JosueEncinar)",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "|Supported Python versions| |License|\n\n**MetaFinder - Metadata search through Search Engines**\n=======================================================\n\n::\n\n       _____               __             ___________ .__               .___                   \n      /     \\     ____   _/  |_  _____    \\_   _____/ |__|   ____     __| _/   ____   _______  \n     /  \\ /  \\  _/ __ \\  \\   __\\ \\__  \\    |    __)   |  |  /    \\   / __ |  _/ __ \\  \\_  __ \\ \n    /    Y    \\ \\  ___/   |  |    / __ \\_  |     \\    |  | |   |  \\ / /_/ |  \\  ___/   |  | \\/ \n    \\____|__  /  \\___  >  |__|   (____  /  \\___  /    |__| |___|  / \\____ |   \\___  >  |__|    \n            \\/       \\/               \\/       \\/               \\/       \\/       \\/          \n            \n    |_ Author: @JosueEncinar\n    |_ Description: Search for documents in a domain through Search Engines. The objective is to extract metadata\n    |_ Usage: metafinder -d domain.com -l 50 -o /tmp -go -bi\n\nInstallation:\n-------------\n\n::\n\n    > pip3 install metafinder\n\nUpgrades are also available using:\n\n::\n\n    > pip3 install metafinder --upgrade\n\nUsage\n-----\n\nCLI\n~~~\n\n::\n\n    metafinder -d domain.com -l 20 -o folder [-t 10] -go -bi -ba \n\nParameters: \n\n-  d: Specifies the target domain. \n-  l: Specify the maximum number of results to be searched. \n-  o: Specify the path to save the report. \n-  t: Optional. Used to configure the threads (4 by default). \n-  v: Show Metafinder version.\n-  go: Optional. Search in Google. (Default) \n-  bi: Optional. Search in Bing. \n-  ba: Optional. Search in Baidu. (Experimental)\n\nIn Code\n~~~~~~~\n\n::\n\n    import metafinder.extractor as metadata_extractor\n\n    documents_limit = 5\n    domain = \"target_domain\"\n    result = metadata_extractor.extract_metadata_from_google_search(domain, documents_limit)\n    # result = metadata_extractor.extract_metadata_from_bing_search(domain, documents_limit)\n    # result = metadata_extractor.extract_metadata_from_baidu_search(domain, documents_limit)\n    authors = result.get_authors()\n    software = result.get_software()\n    for k,v in result.get_metadata().items():\n        print(f\"{k}:\")\n        print(f\"|_ URL: {v['url']}\")\n        for metadata,value in v['metadata'].items():\n            print(f\"|__ {metadata}: {value}\")\n\n    document_name = \"test.pdf\"\n    try:\n        metadata_file = metadata_extractor.extract_metadata_from_document(document_name)\n        for k,v in metadata_file.items():\n            print(f\"{k}: {v}\")\n    except FileNotFoundError:\n        print(\"File not found\")\n\nAuthor\n======\n\nThis project has been developed by:\n\n-  **Josué Encinar García** -- https://twitter.com/JosueEncinar\n\nContributors\n============\n\n-  **Félix Brezo Fernández** -- https://twitter.com/febrezo\n\nDisclaimer!\n===========\n\nThe software is designed to leave no trace in the documents we upload to a domain. The author is not responsible for any\nillegitimate use.\n\n.. |Supported Python versions| image:: https://img.shields.io/badge/python-3.6+-blue.svg?style=flat-square&logo=python\n.. |License| image:: https://img.shields.io/badge/license-GNU-green.svg?style=flat-square&logo=gnu",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Josue87/MetaFinder",
    "keywords": "",
    "license": "GNU GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metafinder",
    "package_url": "https://pypi.org/project/metafinder/",
    "platform": "",
    "project_url": "https://pypi.org/project/metafinder/",
    "project_urls": {
      "Homepage": "https://github.com/Josue87/MetaFinder"
    },
    "release_url": "https://pypi.org/project/metafinder/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MetaFinder - Metadata search through Search Engines",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10986542,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d11e01391701e59b5e2a2056954edffb1fa728f21004092afe9dffa2dacfffbb",
        "md5": "8c6afd323db4f3267ded4369c13e8e5c",
        "sha256": "a9cebea2e79f12f9a834e0ba3d8f4a75a8b7abe4615562740f2315c07ae51212"
      },
      "downloads": -1,
      "filename": "metafinder-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8c6afd323db4f3267ded4369c13e8e5c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11708,
      "upload_time": "2021-05-13T17:15:14",
      "upload_time_iso_8601": "2021-05-13T17:15:14.149106Z",
      "url": "https://files.pythonhosted.org/packages/d1/1e/01391701e59b5e2a2056954edffb1fa728f21004092afe9dffa2dacfffbb/metafinder-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}