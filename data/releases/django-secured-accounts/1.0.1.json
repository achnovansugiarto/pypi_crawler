{
  "info": {
    "author": "Ahmed Shehab",
    "author_email": "ahbox@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "========\nAccounts\n========\n\nAccounts is a Django app handles essential user security\n\n- Email verification upon register\n- Phone is enforced and mandatory \"handled by Twilio sms service\"\n- Device access location \"handled by geoip2 and maxmind db\"\n- Activity stream for user access\n\nIndeed it is opinionated user app as follows:\n\n* User class is AbstractUser has a Profile foreign key\n* Profile with has fields like photo and date_of_birth\n\nCheck the docs for deep details.\n\nQuick start\n-----------\n\n1. Add \"accounts\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'accounts',\n    ]\n\n    TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['accounts/templates'],\n        ...\n    }]\n2. Include the accounts URLconf in your project urls.py like this::\n\n        path('accounts/',\n        include(('accounts.urls', 'accounts'), namespace='auth'))\n\n\n* Note: mind the namespace as it is used in templates and testing.\n\n3. Set mandatory settings::\n\n    # refers to the user model\n    AUTH_USER_MODEL = 'accounts.User'\n    MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n    MEDIA_URL = '/media/'\n    # this is on-demand auth backends\n    AUTHENTICATION_BACKENDS = [\n        'accounts.authentication.EmailAuthBackend',\n        'accounts.authentication.PhoneAuthBackend',\n        'accounts.authentication.UsernameAuthBackend',\n    ]\n    # your favorite email backend\n    # just for testing it is set to console\n    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n\n    # maxmind db required\n    # follow https://docs.djangoproject.com/en/3.1/ref/contrib/gis/geoip2/\n    GEOIP_PATH = os.path.join(BASE_DIR, 'path/to/maxmind/db')\n\n    # Twilio required sms validation\n    # get keys from https://www.twilio.com/\n    TWILIO_API_KEY = \"\"\n    TWILIO_AUTH_TOKEN = \"\"\n    TWILIO_PHONE_NUMBER = \"\"\n\n\n4. Run ``python manage.py migrate`` to create the accounts models.\n\n5. Start the development server and visit http://127.0.0.1:8000/accounts/login/\n\n- Full documentation on https://django-secured-accounts.readthedocs.io/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-secured-accounts",
    "package_url": "https://pypi.org/project/django-secured-accounts/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-secured-accounts/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-secured-accounts/1.0.1/",
    "requires_dist": [
      "Django",
      "six",
      "Pillow",
      "user-agents",
      "geoip2",
      "phonenumbers",
      "django-phonenumber-field",
      "maxminddb",
      "twilio"
    ],
    "requires_python": "",
    "summary": "Full featured user app with built-in verification and activity stream",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8800988,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06899af3b2f61161a38f78c21a706570c563b236be7c65ef9cd52058870ab978",
        "md5": "3f6508e7eb512ea5210584234d3849ac",
        "sha256": "a646ab9cc003b6227c75780b441ef15fd4942306196e16146eb2783aa60ffd75"
      },
      "downloads": -1,
      "filename": "django_secured_accounts-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f6508e7eb512ea5210584234d3849ac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 41873,
      "upload_time": "2020-12-02T13:38:02",
      "upload_time_iso_8601": "2020-12-02T13:38:02.734268Z",
      "url": "https://files.pythonhosted.org/packages/06/89/9af3b2f61161a38f78c21a706570c563b236be7c65ef9cd52058870ab978/django_secured_accounts-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12ee18f33f6f41d499ba3a33122d75c65cb91d6140eec92ce35f72eb05a60e39",
        "md5": "6920e2c5fa4e25b7fcadd31c78a14c11",
        "sha256": "1f9af45ba826c67ec09a6d21046cc6762f6c94a74eb5faeab4b9e5df61a05f71"
      },
      "downloads": -1,
      "filename": "django-secured-accounts-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6920e2c5fa4e25b7fcadd31c78a14c11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17091746,
      "upload_time": "2020-12-02T13:38:44",
      "upload_time_iso_8601": "2020-12-02T13:38:44.252859Z",
      "url": "https://files.pythonhosted.org/packages/12/ee/18f33f6f41d499ba3a33122d75c65cb91d6140eec92ce35f72eb05a60e39/django-secured-accounts-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}