{
  "info": {
    "author": "Steven Myint",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "============\ndocformatter\n============\n\n.. |CI| image:: https://img.shields.io/github/workflow/status/PyCQA/docformatter/CI\n    :target: https://github.com/PyCQA/docformatter/actions/workflows/ci.yml\n.. |COVERALLS| image:: https://img.shields.io/coveralls/github/PyCQA/docformatter\n    :target: https://coveralls.io/github/PyCQA/docformatter\n.. |CONTRIBUTORS| image:: https://img.shields.io/github/contributors/PyCQA/docformatter\n    :target: https://github.com/PyCQA/docformatter/graphs/contributors\n.. |COMMIT| image:: https://img.shields.io/github/last-commit/PyCQA/docformatter\n.. |BLACK| image:: https://img.shields.io/badge/%20style-black-000000.svg\n    :target: https://github.com/psf/black\n.. |ISORT| image:: https://img.shields.io/badge/%20imports-isort-%231674b1\n    :target: https://pycqa.github.io/isort/\n.. |SELF| image:: https://img.shields.io/badge/%20formatter-docformatter-fedcba.svg\n    :target: https://github.com/PyCQA/docformatter\n.. |DOCSTYLE| image:: https://img.shields.io/badge/%20style-numpy-459db9.svg\n    :target: https://numpydoc.readthedocs.io/en/latest/format.html\n\n.. |VERSION| image:: https://img.shields.io/pypi/v/docformatter\n.. |LICENSE| image:: https://img.shields.io/pypi/l/docformatter\n.. |PYVERS| image:: https://img.shields.io/pypi/pyversions/docformatter\n.. |PYMAT| image:: https://img.shields.io/pypi/format/docformatter\n.. |DD| image:: https://img.shields.io/pypi/dd/docformatter\n\n+----------------+----------------------------------------------------------+\n| **Code**       + |BLACK| |ISORT|                                          +\n+----------------+----------------------------------------------------------+\n| **Docstrings** + |SELF| |DOCSTYLE|                                        +\n+----------------+----------------------------------------------------------+\n| **GitHub**     + |CI| |CONTRIBUTORS| |COMMIT|                             +\n+----------------+----------------------------------------------------------+\n| **PyPi**       + |VERSION| |LICENSE| |PYVERS| |PYMAT| |DD|                +\n+----------------+----------------------------------------------------------+\n\nFormats docstrings to follow `PEP 257`_.\n\n.. _`PEP 257`: http://www.python.org/dev/peps/pep-0257/\n\nFeatures\n========\n\n``docformatter`` automatically formats docstrings to follow a subset of the PEP\n257 conventions. Below are the relevant items quoted from PEP 257.\n\n- For consistency, always use triple double quotes around docstrings.\n- Triple quotes are used even though the string fits on one line.\n- Multi-line docstrings consist of a summary line just like a one-line\n  docstring, followed by a blank line, followed by a more elaborate\n  description.\n- Unless the entire docstring fits on a line, place the closing quotes\n  on a line by themselves.\n\n``docformatter`` also handles some of the PEP 8 conventions.\n\n- Don't write string literals that rely on significant trailing\n  whitespace. Such trailing whitespace is visually indistinguishable\n  and some editors (or more recently, reindent.py) will trim them.\n\nSee the the full documentation at `read-the-docs`_.\n\n.. _read-the-docs: https://docformatter.readthedocs.io\n\nInstallation\n============\n\nFrom pip::\n\n    $ pip install --upgrade docformatter\n\nOr, if you want to use pyproject.toml to configure docformatter::\n\n    $ pip install --upgrade docformatter[tomli]\n\nExample\n=======\n\nAfter running::\n\n    $ docformatter --in-place example.py\n\nthis code\n\n.. code-block:: python\n\n    \"\"\"   Here are some examples.\n\n        This module docstring should be dedented.\"\"\"\n\n\n    def launch_rocket():\n        \"\"\"Launch\n    the\n    rocket. Go colonize space.\"\"\"\n\n\n    def factorial(x):\n        '''\n\n        Return x factorial.\n\n        This uses math.factorial.\n\n        '''\n        import math\n        return math.factorial(x)\n\n\n    def print_factorial(x):\n        \"\"\"Print x factorial\"\"\"\n        print(factorial(x))\n\n\n    def main():\n        \"\"\"Main\n        function\"\"\"\n        print_factorial(5)\n        if factorial(10):\n            launch_rocket()\n\n\ngets formatted into this\n\n.. code-block:: python\n\n    \"\"\"Here are some examples.\n\n    This module docstring should be dedented.\n    \"\"\"\n\n\n    def launch_rocket():\n        \"\"\"Launch the rocket.\n\n        Go colonize space.\n        \"\"\"\n\n\n    def factorial(x):\n        \"\"\"Return x factorial.\n\n        This uses math.factorial.\n        \"\"\"\n        import math\n        return math.factorial(x)\n\n\n    def print_factorial(x):\n        \"\"\"Print x factorial.\"\"\"\n        print(factorial(x))\n\n\n    def main():\n        \"\"\"Main function.\"\"\"\n        print_factorial(5)\n        if factorial(10):\n            launch_rocket()\n\nMarketing\n=========\nDo you use *docformatter*?  What style docstrings do you use?  Add some badges to your project's **README** and let everyone know.\n\n|SELF|\n\n.. code-block::\n\n\t.. image:: https://img.shields.io/badge/%20formatter-docformatter-fedcba.svg\n  \t  :target: https://github.com/PyCQA/docformatter\n\n.. image:: https://img.shields.io/badge/%20style-google-3666d6.svg\n\t    :target: https://google.github.io/styleguide/pyguide.html#s3.8-comments-and-docstrings\n\n.. code-block::\n\n\t.. image:: https://img.shields.io/badge/%20style-google-3666d6.svg\n\t    :target: https://google.github.io/styleguide/pyguide.html#s3.8-comments-and-docstrings\n\n|DOCSTYLE|\n\n.. code-block::\n\n\t.. image:: https://img.shields.io/badge/%20style-numpy-459db9.svg\n  \t  :target: https://numpydoc.readthedocs.io/en/latest/format.html\n\n.. image:: https://img.shields.io/badge/%20style-sphinx-0a507a.svg\n\t    :target: https://www.sphinx-doc.org/en/master/usage/index.html\n\n.. code-block::\n\n\t.. image:: https://img.shields.io/badge/%20style-sphinx-0a507a.svg\n\t    :target: https://www.sphinx-doc.org/en/master/usage/index.html\n\nIssues\n======\n\nBugs and patches can be reported on the `GitHub page`_.\n\n.. _`GitHub page`: https://github.com/PyCQA/docformatter/issues\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PyCQA/docformatter",
    "keywords": "PEP 257,pep257,style,formatter,docstrings",
    "license": "Expat",
    "maintainer": "Doyle Rowland",
    "maintainer_email": "doyle.rowland@reliaqual.com",
    "name": "docformatter",
    "package_url": "https://pypi.org/project/docformatter/",
    "platform": null,
    "project_url": "https://pypi.org/project/docformatter/",
    "project_urls": {
      "Documentation": "https://github.com/PyCQA/docformatter",
      "Homepage": "https://github.com/PyCQA/docformatter",
      "Repository": "https://github.com/PyCQA/docformatter"
    },
    "release_url": "https://pypi.org/project/docformatter/1.5.0/",
    "requires_dist": [
      "tomli (<2.0.0); (python_version < \"3.7\") and (extra == \"tomli\")",
      "tomli (>=2.0.0,<3.0.0); python_version >= \"3.7\"",
      "untokenize (>=0.1.1,<0.2.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Formats docstrings to follow PEP 257",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16129466,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2cca10ed80c9fd1f3779eaf46537cb06f0961ca83124f3041d61a809db2c0ea",
        "md5": "fc58a03ba9890f7e1870faa2f1d28680",
        "sha256": "ae56c64822c3184602ac83ec37650c9785e80dfec17b4eba4f49ad68815d71c0"
      },
      "downloads": -1,
      "filename": "docformatter-1.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc58a03ba9890f7e1870faa2f1d28680",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 14287,
      "upload_time": "2022-08-19T15:57:25",
      "upload_time_iso_8601": "2022-08-19T15:57:25.736942Z",
      "url": "https://files.pythonhosted.org/packages/d2/cc/a10ed80c9fd1f3779eaf46537cb06f0961ca83124f3041d61a809db2c0ea/docformatter-1.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f705812faba28882695291c7dc61e64249081ee6394c9459987a6ce599c10ef5",
        "md5": "06b5296201afb4e4d76ff46daf9b0f10",
        "sha256": "9dc71659d3b853c3018cd7b2ec34d5d054370128e12b79ee655498cb339cc711"
      },
      "downloads": -1,
      "filename": "docformatter-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "06b5296201afb4e4d76ff46daf9b0f10",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 15745,
      "upload_time": "2022-08-19T15:57:27",
      "upload_time_iso_8601": "2022-08-19T15:57:27.918613Z",
      "url": "https://files.pythonhosted.org/packages/f7/05/812faba28882695291c7dc61e64249081ee6394c9459987a6ce599c10ef5/docformatter-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}