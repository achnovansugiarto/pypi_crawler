{
  "info": {
    "author": "Komissarov Andrey",
    "author_email": "Komissar.off.andrey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n# Mapping Shortcuts\n\n[![Build Status](https://app.travis-ci.com/moff4/ShortCuts.svg?branch=master)](https://app.travis-ci.com/moff4/ShortCuts)\n[![CodeFactor](https://www.codefactor.io/repository/github/moff4/shortcuts/badge)](https://www.codefactor.io/repository/github/moff4/shortcuts)\n\npython package with useful mapping shortcuts\n\n## Contains  \n\n - Function decorator for mapping factory\n - Class decorator for mapping factory\n - Metaclass for mapping factory\n - Function for import all subpackages in package  \n\n### Decorator factory for mapping\n\n#### function decorator\n```python\n\nfrom mapping_shortcuts.decors import create_collector\n\ndecorator, collection = create_collector(\n    raise_on_duplicate=True,  # default: True\n)\n\n@decorator('key1')\ndef func1():\n    ...\n\n@decorator('key2')\ndef func2():\n    ...\n\nprint(collection) \n'''\noutput: {\n    'key1': <function func1 at 0x104adc430>,\n    'key2': <function func2 at 0x104adc4c0>,\n}\n'''\n\n```\n\n#### class decorator\n```python\n\nfrom mapping_shortcuts.decors import create_class_collector\n\ndecorator, collection = create_class_collector(\n    raise_on_duplicate=True,  # default: True\n    key_getter=lambda x: x.key  # default: lambda x: x.__name__\n)\n\n@decorator\nclass SomeClass1:\n    key = 123\n\n@decorator\nclass SomeClass2:\n    key = 456 \n\nprint(collection) \n'''\noutput: {\n    123: <class '__main__.SomeClass1'>,\n    456: <class '__main__.SomeClass2'>,\n}\n'''\n\n```\n\n### Metaclass factory for mapping\n\n```python\nimport abc\nfrom mapping_shortcuts.meta import create_collection_meta\n\nMetaClass, collections = create_collection_meta(\n    base=abc.ABCMeta,  # default: type\n    getter=lambda x: x.__name__,  # default: lambda x: str(x)\n    raise_on_duplicate = True,  # default: True\n)\n\n\nclass A(metaclass=MetaClass):\n    ...\n\nclass B(metaclass=MetaClass):\n    ...\n\nprint(collections)\n'''\noputput: {\n    'A': <class '__main__.A'>,\n    'B': <class '__main__.B'>,\n}\n'''\n```\n\n### Function for import all subpackages in package\n\nFor exmaple with have five files:\n- python code `app/tools.py`\n- empty file `app/providers/a/__init__.py`\n- empty file `app/providers/b/__init__.py`\n- python code in `app/providers/a/module.py`\n- python code in`app/providers/b/module.py`\n\n`app/tools.py` be like:\n\n```python\nfrom mapping_shortcuts.decors import create_collector\n\ndecorator, collection = create_collector()\n```\n\n`app/providers/a/module.py` is: \n```python\nfrom app.tools import decorator\n\n@decorator('A-func')\ndef function_a():\n    ...\n```\n\n`app/providers/b/module.py` is: \n```python\nfrom app.tools import decorator\n\n@decorator('B-func')\ndef function_b():\n    ...\n```\n\nexecute `load_package()`:\n```python\n\nfrom mapping_shortcuts.dirtools import load_package\nfrom app.tools import collection\n\nload_package('app.providers')\nprint(collection)\n'''\noutput: {\n    'A-func': <function function_a at 0x104cfa0e0>,\n    'B-func': <function function_b at 0x104cfa290>,\n}\n'''\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/moff4/shortcuts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapping-shortcuts",
    "package_url": "https://pypi.org/project/mapping-shortcuts/",
    "platform": null,
    "project_url": "https://pypi.org/project/mapping-shortcuts/",
    "project_urls": {
      "Homepage": "https://github.com/moff4/shortcuts"
    },
    "release_url": "https://pypi.org/project/mapping-shortcuts/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Useful shortcuts for create mappings",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15823746,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea06a2c1e60c5cbd9e381471e734ef973b0e9db1ef98dfcabf5bf423cc1292bb",
        "md5": "8945801e158f49e9af213293dbf8678c",
        "sha256": "b9649eb22094a072f70bd959d13a80e849543559db9712c3e1ae5d90f753b56e"
      },
      "downloads": -1,
      "filename": "mapping_shortcuts-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8945801e158f49e9af213293dbf8678c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5935,
      "upload_time": "2022-08-04T21:43:40",
      "upload_time_iso_8601": "2022-08-04T21:43:40.545294Z",
      "url": "https://files.pythonhosted.org/packages/ea/06/a2c1e60c5cbd9e381471e734ef973b0e9db1ef98dfcabf5bf423cc1292bb/mapping_shortcuts-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97a9a2332edfc9f0fd9c442556b0fd42582108e46271b136f3d079726628067b",
        "md5": "3506682721d6b235dc33f3b52769ef63",
        "sha256": "9f547ad99a48af141e9ab92de96cd56af860401cecc744ace5f019b3fc84f2eb"
      },
      "downloads": -1,
      "filename": "mapping_shortcuts-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3506682721d6b235dc33f3b52769ef63",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4530,
      "upload_time": "2022-08-04T21:43:42",
      "upload_time_iso_8601": "2022-08-04T21:43:42.423531Z",
      "url": "https://files.pythonhosted.org/packages/97/a9/a2332edfc9f0fd9c442556b0fd42582108e46271b136f3d079726628067b/mapping_shortcuts-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}