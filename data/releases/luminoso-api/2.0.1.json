{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Topic :: Scientific/Engineering",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "Python bindings for the Luminoso client API\n===========================================\n\nThis package contains Python code for interacting with a Luminoso text\nprocessing server through its REST API.\n\nIn this code, instead of having to authenticate each request separately,\nyou make a \"session\" object that keeps track of your login information,\nand call methods on it that will be properly authenticated.\n\n\nImportant note: API version and client version\n----------------------------------------------\n\nThis page covers the client that connects to the v5 API; this client is the\nobject named `luminoso_api.LuminosoClient`, which is an alias for\n`luminoso_api.v5_client.LuminosoClient`.\n\nThe v4 API is still available for user and account management purposes, as is a\nclient for using it. That client can be accessed as\n`luminoso_api.V4LuminosoClient` (or directly at\n`luminoso_api.v4_client.LuminosoClient`). Documentation for the old client can\nbe found\n[here](https://github.com/LuminosoInsight/luminoso-api-client-python/blob/master/V4_README.md).\nThis client will be maintained until we have set up user and account management\nendpoints in the v5 API, at which point the v4 endpoints and this client will\nenter a sunset period.\n\nInstallation\n------------\nThis client API is designed to be used with Python 3.\n\nYou can download and install it using a Python package manager:\n\n    pip install luminoso-api\n\nor\n\n    easy_install luminoso-api\n\nOr you can download this repository and install it the usual way:\n\n    python setup.py install\n\nIf you are installing into the main Python environment on a Mac or Unix\nsystem, you will probably need to prefix those commands with `sudo` and\nenter your password, as in `sudo python setup.py install`.\n\nGetting started\n---------------\nYou interact with the API using a LuminosoClient object, which sends HTTP\nrequests to URLs starting with a given path, and keeps track of your\nauthentication information.\n\nBefore you can connect to an API, you will need to go to the UI on the web and\nget a long-lived API token.  (To get a token, go to the \"User settings\" option\nin the upper right dropdown menu, and click the \"API tokens\" button.)  Once you\nhave one, you can use it to connect to the API.\n\n```python\nfrom luminoso_api import LuminosoClient\nproject = LuminosoClient.connect('/projects/my_project_id', token='my_token')\n\n# And then, for instance:\ndocs = project.get('docs', limit=10)\n```\n\nInstead of specifying the token when connecting, you can also use the\nLuminosoClient to save a token to a file, at which point you can connect\nwithout having to specify a token.\n\n```python\nfrom luminoso_api import LuminosoClient\nLuminosoClient.save_token('my_token')\nproject = LuminosoClient.connect('/projects/my_project_id')\ndocs = project.get('docs', limit=10)\n```\n\nThere is also a method, provided temporarily to ease the transition from the v4\nAPI, that allows you to connect with a username and password:\n\n```python\nfrom luminoso_api import LuminosoClient\nproject = LuminosoClient.connect_with_username_and_password('/projects/my_project_id', username='my_username')\n```\n\nNote that all leading and trailing slashes in paths are optional, because the\nLuminosoClient ensures that slashes are put in the right places.  For example,\nall of the following calls will go to the endpoint\n`https://daylight.luminoso.com/api/v5/projects/my_project_id/docs/`:\n\n```python\nLuminosoClient.connect('/projects/my_project_id').get('docs')\nLuminosoClient.connect('projects/my_project_id/').get('/docs')\nLuminosoClient.connect('/projects/my_project_id/').get('docs/')\nLuminosoClient.connect('projects/my_project_id').get('/docs/')\n```\n\nBoth of the connect methods also provide an optional timeout parameter. This \nwill set both the connect and read timeout used in the underlying request. If \nthis is set and the connection or reading the response on the requests times \nout then a LuminosoTimeoutError exception will be raised. \n\nHTTP methods\n------------\n\nThe URLs you can communicate with are documented at https://daylight.luminoso.com/api/v5/.\nThat documentation is the authoritative source for what you can do with the\nAPI, and this Python code is just here to help you do it.\n\nA LuminosoClient object has methods such as `.get`, `.post`, and `.put`,\nwhich correspond to the corresponding HTTP methods that the API uses. For\nexample, `.get` is used for retrieving information without changing anything,\n`.post` is generally used for creating new things or taking actions, and `.put`\nis generally used for updating information.\n\nExamples\n--------\n\nMost of the time, you'll want your LuminosoClient to refer to a particular\nproject, but one case where you don't is to get a list of projects in the first\nplace:\n\n```python\nfrom luminoso_api import LuminosoClient\nclient = LuminosoClient.connect()\nproject_info_list = client.get('/projects/')\nprint(project_info_list)\n```\n\nAn example of working with a project, including the use of the convenience method `.wait_for_build`:\n\n```python\nfrom luminoso_api import LuminosoClient\nclient = LuminosoClient.connect()\n\n# Create a new project by POSTing its name and language\nproject_id = client.post('/projects/', name='testproject', language='en')['project_id']\n\n# use that project from here on\nproject = client.client_for_path('/projects/' + project_id)\n\ndocs = [{'title': 'First example', 'text': 'This is an example document.'},\n        {'title': 'Second example', 'text': 'Examples are a great source of inspiration.'},\n        {'title': 'Third example', 'text': 'Great things come in threes.'}]\nproject.post('upload', docs=docs)\nproject.post('build')\nproject.wait_for_build()\n\n# When the previous call finishes:\nresponse = project.get('concepts')\nfor concept in response['result']:\n    print('%s - %f' % (concept['texts'][0], concept['relevance']))\n```\n\nVectors\n-------\nThe semantics of terms are represented by \"vector\" objects, which this API\nwill return as inscrutable base64-encoded strings like this:\n\n    'WAB6AJG6kL_6D_6yAHE__R9kSAE8BlgKMo_80y8cCOCCSN-9oAQcABP_TMAFhAmMCUA'\n\nIf you want to look inside these vectors and compare them to each other,\ndownload our library called `pack64`, available as `pip install pack64`. It\nwill turn these into NumPy vectors, so it requires NumPy.\n\n```python\n>>> from pack64 import unpack64\n>>> unpack64('WAB6AJG6kL_6D_6y')\narray([ 0.00046539,  0.00222015, -0.08491898, -0.0014534 , -0.00127411], dtype=float32)\n```\n\nUsing the API from the command line\n-----------------------------------\n\nThis library includes three experimental tools usable from the command line:\n`lumi-api`, `lumi-upload`, and `lumi-download`.  Running them with `-h` will\nprovide more detailed documentation on available parameters.  In addition, the\nfollowing examples may provide some guidance on using `lumi-api` to access the\nAPI:\n\n```\n# get a project list\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token get /projects\n\n# get a project list in CSV format\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token get /projects -c\n\n# get a project list and save the token so the next call wouldn't need \"-t my_token\" parameter\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token -s get /projects -c\n\n# create a project\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token post /projects/ -p 'name=project name' -p 'language=en'\n\n# upload documents\n# my_data.json format: {\"docs\":[{\"text\": \"..\", \"title\": \"..\", \"metadata\": [..]}, {\"text\": \"..\", \"title\": \"..\", \"metadata\": [..]}]}\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_tokens post /projects/my_project_id/upload my_data.json\n\n# build project\n# this takes time, if you want to be notified via email when the build is done, add -j '{\"notify\": true}' parameter\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_tokens post /projects/my_project_id/build\n\n# get concepts from project\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_tokens get /projects/my_project_id/concepts\n\n# get project's match counts\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token get /projects/my_project_id/concepts/match_counts\n\n# create a saved concept\nlumi-api -b https://daylight.luminoso.com/api/v5/ -t my_token post /projects/my_project_id/concepts/saved -j '{\"concepts\": [{\"texts\": [\"My new concept text\"]}]}'\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://github.com/LuminosoInsight/luminoso-api-client-python/tarball/v2.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/LuminosoInsight/luminoso-api-client-python",
    "keywords": "",
    "license": "",
    "maintainer": "Luminoso Technologies, Inc.",
    "maintainer_email": "info@luminoso.com",
    "name": "luminoso-api",
    "package_url": "https://pypi.org/project/luminoso-api/",
    "platform": "any",
    "project_url": "https://pypi.org/project/luminoso-api/",
    "project_urls": {
      "Download": "http://github.com/LuminosoInsight/luminoso-api-client-python/tarball/v2.0.1",
      "Homepage": "http://github.com/LuminosoInsight/luminoso-api-client-python"
    },
    "release_url": "https://pypi.org/project/luminoso-api/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client library for communicating with the Luminoso REST API",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10988657,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21bef4a743944363358ad17ab6c6a4acb780ec291d4259b458f2b18c709d910d",
        "md5": "596c4ce5e78fb2e8bffc76499762815e",
        "sha256": "766f70a40e86471591c572127c10585e7e8933a556da2c50fdc57192dd035540"
      },
      "downloads": -1,
      "filename": "luminoso-api-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "596c4ce5e78fb2e8bffc76499762815e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20176,
      "upload_time": "2020-07-10T22:47:28",
      "upload_time_iso_8601": "2020-07-10T22:47:28.349494Z",
      "url": "https://files.pythonhosted.org/packages/21/be/f4a743944363358ad17ab6c6a4acb780ec291d4259b458f2b18c709d910d/luminoso-api-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}