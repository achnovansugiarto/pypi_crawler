{
  "info": {
    "author": "David Betz",
    "author_email": "dfb@davidbetz.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Middleware for Python\n=====================\n\n**Copyright (c) 2016 David Betz**\n\nInstallation\n------------\n\n::\n\n    pip install middleware\n\n|Build Status| |PyPI version|\n\nCompatibility\n-------------\n\nPython 2 and 3\n\nPurpose\n-------\n\nMost everyone needs a concept of middleware.\n\nFollowing are examples of using this, see ``test_middleware.py`` for\nfull examples.\n\n::\n\n    class AdditionMiddleware1(Middleware):\n        def create(self):\n            def func(mwa, context):\n                try:\n                    counter = context['counter']\n                except:\n                    counter = 0\n                context['counter'] = counter + 1\n\n                return next(mwa)\n\n            return func\n\nWhen using a class, add a ``create`` function which returns a function.\nThis inner fuction accepts the middleware array and the data context and\nreturns ``next(mwa)`` to create a middleware chain.\n\nFor this example, I'll add two more:\n\n::\n\n    class AdditionMiddleware2(AdditionMiddleware1):\n        pass\n\n\n    class AdditionMiddleware3(AdditionMiddleware2):\n        pass\n\nNow to run it. Use ``set`` to set an array of middleware and ``add`` to\nadd one to the array. ``set`` overwrites everything. That's just what\n``set`` means.\n\n::\n\n        handler = Handler()\n        handler.set([AdditionMiddleware1, AdditionMiddleware2])\n        handler.add(AdditionMiddleware3)\n        handler.execute()\n\n        # handler['counter'] == 3\n\nIn this case, there is no initial context and each of the three\nmiddleware increment a counter ending with ``handler['counter'] == 3``.\n\nYou can skip the entire class stuff too:\n\n::\n\n    handler = Handler()\n    def inline(wma, context):\n        context['myvalue'] = 12\n    handler.add(inline)\n    handler.execute()\n    # handler['myvalue'] == 12\n\nUse the following to send initial context:\n\n::\n\n    handler = Handler(counter=1)\n\nIt's actually ``kwargs``, so you can load it up:\n\n::\n\n    handler = Handler(**{'a': 1, 'b': 2})\n    def inline(wma, context):\n        context['a'] = context['a'] + context['b']\n    handler.add(inline)\n    handler.execute()\n\n.. |Build Status| image:: https://travis-ci.org/davidbetz/middleware.svg?branch=master\n   :target: https://travis-ci.org/davidbetz/middleware\n.. |PyPI version| image:: https://badge.fury.io/py/middleware.svg\n   :target: https://badge.fury.io/py/middleware",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidbetz/middleware",
    "keywords": "middleware",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "middleware",
    "package_url": "https://pypi.org/project/middleware/",
    "platform": "",
    "project_url": "https://pypi.org/project/middleware/",
    "project_urls": {
      "Homepage": "https://github.com/davidbetz/middleware"
    },
    "release_url": "https://pypi.org/project/middleware/1.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python module to add general middleware",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3030280,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10815b9d9972ca106e1bde01ab6e1b3f9a7a4604c90742993f14bdfd3fc2c7f6",
        "md5": "505e3a6a46ee590af0d17c4c83ada8cd",
        "sha256": "65f3426f4d8792836bc45d87f0d84a87353f8669e153c0b95603966de7352e24"
      },
      "downloads": -1,
      "filename": "middleware-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "505e3a6a46ee590af0d17c4c83ada8cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4203,
      "upload_time": "2017-07-15T14:20:44",
      "upload_time_iso_8601": "2017-07-15T14:20:44.321183Z",
      "url": "https://files.pythonhosted.org/packages/10/81/5b9d9972ca106e1bde01ab6e1b3f9a7a4604c90742993f14bdfd3fc2c7f6/middleware-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}