{
  "info": {
    "author": "Derrick Lyndon Pallas",
    "author_email": "derrick@pallas.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Networking"
    ],
    "description": "# pyllhttp\nPython wrapper for llhttp\n======\n\nA simple Python wrapper around [llhttp](https://github.com/nodejs/llhttp),\nthe HTTP parser for [Node.js](https://nodejs.org/).\n\n## Install\n\n[llhttp](https://pypi.org/project/llhttp/) via PyPI, or `pip install llhttp`\n\n## Usage\n\n```python\nimport llhttp\nfrom pprint import pprint\n\npprint({\"version\": llhttp.version})\n\nclass request_parser(llhttp.Request):\n    headers = {}\n\n    url = b''\n    current_header_field = None\n    current_header_value = None\n\n    def on_message_begin(self):\n        print(f\"MESSAGE BEGIN\")\n\n    def on_url(self, url):\n        self.url += url\n        self.pause()\n\n    def on_url_complete(self):\n        print(f\"URL {self.url}\")\n\n    def on_header_field(self, field):\n        assert self.current_header_value is None\n        if self.current_header_field is None:\n            self.current_header_field = bytearray(field)\n        else:\n            self.current_header_field += field\n\n    def on_header_field_complete(self):\n        self.current_header_field = self.current_header_field.decode('iso-8859-1').lower()\n        assert self.current_header_field not in self.headers\n\n    def on_header_value(self, value):\n        assert self.current_header_field is not None\n        if self.current_header_value is None:\n            self.current_header_value = bytearray(value)\n        else:\n            self.current_header_value += value\n\n    def on_header_value_complete(self):\n        assert self.current_header_field is not None\n        self.current_header_value = bytes(self.current_header_value)\n        print(f\"HEADER {self.current_header_field}: {self.current_header_value}\")\n        self.headers[self.current_header_field] = self.current_header_value\n        self.current_header_field = None\n        self.current_header_value = None\n\n    def on_headers_complete(self):\n        assert self.current_header_field is None\n        assert self.current_header_value is None\n\n    def on_message_complete(self):\n        print(\"MESSAGE COMPLETE\")\n\nparser = request_parser()\n\nassert parser.lenient_headers is not True\nparser.lenient_headers = True\nparser.reset()\nassert parser.lenient_headers is True\n\nbuffer = b\"GET /test HTTP/1.1\\r\\nlOl:wut\\r\\nOH: hai\\r\\n\\r\\n\"\nwhile buffer:\n    consumed = parser.execute(buffer[:2])\n    buffer = buffer[consumed:]\n    if parser.is_paused:\n        print(\"UNPAUSING\")\n        parser.unpause()\n\nparser.finish()\npprint({\n    \"method\": parser.method,\n    \"url\": parser.url,\n    \"version\": f\"{parser.major}.{parser.minor}\",\n    \"headers\": parser.headers,\n})\n```\n\n```\n{'version': '3.0.0'}\nMESSAGE BEGIN\nUNPAUSING\nUNPAUSING\nUNPAUSING\nURL b'/test'\nHEADER lol: b'wut'\nHEADER oh: b'hai'\nMESSAGE COMPLETE\n{'headers': {'lol': b'wut', 'oh': b'hai'},\n 'method': 'GET',\n 'url': b'/test',\n 'version': '1.1'}\n```\n\n## Extra\n\nThis project is a toy, started to reacquaint myself with Python\n[c-api](https://docs.python.org/3/c-api/) modules.  If you find it useful,\nplease let me know.\n\nThe version number tracks the version of the incorporated llhttp.\n\nLicense: [MIT](https://opensource.org/licenses/MIT)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/pallas/pyllhttp",
    "keywords": "www http parser",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "llhttp",
    "package_url": "https://pypi.org/project/llhttp/",
    "platform": "",
    "project_url": "https://pypi.org/project/llhttp/",
    "project_urls": {
      "Homepage": "http://github.com/pallas/pyllhttp"
    },
    "release_url": "https://pypi.org/project/llhttp/6.0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "llhttp in python",
    "version": "6.0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14644710,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a02b45a28516739ed97fb7b7cbddb81e206234d3b851a0fc9b262843e89a2a6a",
        "md5": "1b03f67566eb22f58eafb567476e4d30",
        "sha256": "275e39f65b4dcefd137c715906faa86b765aa94c7ab026346a4fc39f8368391e"
      },
      "downloads": -1,
      "filename": "llhttp-6.0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1b03f67566eb22f58eafb567476e4d30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39905,
      "upload_time": "2021-05-13T20:01:26",
      "upload_time_iso_8601": "2021-05-13T20:01:26.426152Z",
      "url": "https://files.pythonhosted.org/packages/a0/2b/45a28516739ed97fb7b7cbddb81e206234d3b851a0fc9b262843e89a2a6a/llhttp-6.0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}