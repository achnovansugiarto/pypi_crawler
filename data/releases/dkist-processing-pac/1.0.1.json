{
  "info": {
    "author": "NSO / AURA",
    "author_email": "\"dkistdc@nso.edu\"",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "dkist-processing-pac\n====================\n\nModules to both determine telescope polarization parameters and compute instrument demodulation matrices\n\nIt is primarily a library used by the DKIST automated processing pipelines\n\nDeployment\n----------\ndkist-processing-pac is deployed to `PyPI <https://pypi.org/project/dkist-processing-pac/>`_\n\nDevelopment\n-----------\n.. code-block:: bash\n\n    git clone git@bitbucket.org:dkistdc/dkist-processing-pac.git\n    cd dkist-processing-pac\n    pre-commit install\n    pip install -e .[test]\n    pytest -v --cov dkist_processing_pac\n\nChangelog\n#########\n\nWhen you make **any** change to this repository it **MUST** be accompanied by a changelog file.\nThe changelog for this repository uses the `towncrier <https://github.com/twisted/towncrier>`__ package.\nEntries in the changelog for the next release are added as individual files (one per change) to the ``changelog/`` directory.\n\nWriting a Changelog Entry\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA changelog entry accompanying a change should be added to the ``changelog/`` directory.\nThe name of a file in this directory follows a specific template::\n\n  <PULL REQUEST NUMBER>.<TYPE>[.<COUNTER>].rst\n\nThe fields have the following meanings:\n\n* ``<PULL REQUEST NUMBER>``: This is the number of the pull request, so people can jump from the changelog entry to the diff on BitBucket.\n* ``<TYPE>``: This is the type of the change and must be one of the values described below.\n* ``<COUNTER>``: This is an optional field, if you make more than one change of the same type you can append a counter to the subsequent changes, i.e. ``100.bugfix.rst`` and ``100.bugfix.1.rst`` for two bugfix changes in the same PR.\n\nThe list of possible types is defined the the towncrier section of ``pyproject.toml``, the types are:\n\n* ``feature``: This change is a new code feature.\n* ``bugfix``: This is a change which fixes a bug.\n* ``doc``: A documentation change.\n* ``removal``: A deprecation or removal of public API.\n* ``misc``: Any small change which doesn't fit anywhere else, such as a change to the package infrastructure.\n\n\nRendering the Changelog at Release Time\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen you are about to tag a release first you must run ``towncrier`` to render the changelog.\nThe steps for this are as follows:\n\n* Run `towncrier build --version vx.y.z` using the version number you want to tag.\n* Agree to have towncrier remove the fragments.\n* Add and commit your changes.\n* Tag the release.\n\n**NOTE:** If you forget to add a Changelog entry to a tagged release (either manually or automatically with ``towncrier``)\nthen the Bitbucket pipeline will fail. To be able to use the same tag you must delete it locally and on the remote branch:\n\n.. code-block:: bash\n\n    # First, actually update the CHANGELOG and commit the update\n    git commit\n\n    # Delete tags\n    git tag -d vWHATEVER.THE.VERSION\n    git push --delete origin vWHATEVER.THE.VERSION\n\n    # Re-tag with the same version\n    git tag vWHATEVER.THE.VERSION\n    git push --tags origin main\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/dkistdc/dkist-processing-pac/src/main/",
    "keywords": "",
    "license": "unknown",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dkist-processing-pac",
    "package_url": "https://pypi.org/project/dkist-processing-pac/",
    "platform": null,
    "project_url": "https://pypi.org/project/dkist-processing-pac/",
    "project_urls": {
      "Documentation": "https://docs.dkist.nso.edu/projects/pac",
      "Homepage": "https://bitbucket.org/dkistdc/dkist-processing-pac/src/main/"
    },
    "release_url": "https://pypi.org/project/dkist-processing-pac/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "PA&C Pipeline",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17388823,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bb3926f77f35c845cf097db60563e126b5c9fdc9c4c84d7e0fd35de84908706",
        "md5": "0049cf49822d624c58843df9691f5339",
        "sha256": "6e4c4bc2ef819fd764b25bbc1db7069ef39e209b0b1a91d3a204cd2c7957e5f8"
      },
      "downloads": -1,
      "filename": "dkist-processing-pac-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0049cf49822d624c58843df9691f5339",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 547502,
      "upload_time": "2022-12-15T16:44:00",
      "upload_time_iso_8601": "2022-12-15T16:44:00.537599Z",
      "url": "https://files.pythonhosted.org/packages/4b/b3/926f77f35c845cf097db60563e126b5c9fdc9c4c84d7e0fd35de84908706/dkist-processing-pac-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}