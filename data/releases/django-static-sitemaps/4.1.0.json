{
  "info": {
    "author": "Filip Varecha",
    "author_email": "xaralis@centrum.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-static-sitemaps\n========================\n\nThere are times when your site is too big to serve the ``sitemap.xml`` by your Django application. This little app is meant to help you with such cases. Instead of serving the sitemap.xml from Django, it features a **management command**/**celery task** that generates the ``sitemap.xml`` to the separate files.\n\nFeature highlights:\n\n* **NEW:** Python 3 compatible\n* Generate sitemap files to your STATIC/MEDIA/(own choice) directory\n* Split sitemap files when limit for size is reached\n* gzip the sitemap files when required\n* Set different domain for sitemap file\n* Ping google that sitemap has changed\n\nRequirements\n------------\n\nThe only requirement is Django 1.8+. App should work with older Django versions with some settings\ntweaks. In matter of fact just defining ``STATICSITEMAPS_ROOT_DIR`` (in case\nyou have no ``STATIC_ROOT`` defined) should be enough.\n\nUsage\n------\n\nInstall via standard Python way::\n\n\tpip install django-static-sitemaps\n\nAdd to you ``INSTALLED_APPS``::\n\n\tINSTALLED_APPS = (\n\t\t...\n\t\t'static_sitemaps',\n\t\t...\n\t)\n\nSet ``STATICSITEMAPS_ROOT_SITEMAP`` variable in your ``settings.py`` to point\nto dictionary holding the sitemaps configuration (as seen in Django docs)::\n\n\tSTATICSITEMAPS_ROOT_SITEMAP = 'myproject.sitemaps.sitemaps'\n\nInclude ``static_sitemaps.urls`` to your ``urls.py`` to serve the root\n``sitemap.xml`` if you want to serve index file through Django (might be\nusefull sometimes when it's hard for you to serve it by webserver itself)::\n\n\turlpatterns = [\n\t\turl(r'^sitemap.xml', include('static_sitemaps.urls')),\n\t]\n\nSetup your cron to run::\n\n\tdjango-admin.py refresh_sitemap\n\nperiodically. Usually, it's enough to set it to run once by 30 minutes or so.\n\nDone.\n\nAlternatively, you can run this using a Celery task runner. For details, look below.\n\n**Note:** Your sitemap files will be served from ``STATIC_URL`` by default. If your\n``STATIC_URL`` is a relative one (e.g. ``/static/``), the result will be\nprepended the domain to respect the current ``Site`` object. If your\n``STATIC_URL`` is absolute (generally doesn't start with a '/'), sitemaps\nURL will respect it completely. If you need more detailed control, see\n``STATICSITEMAPS_URL`` setting.\n\n**Note about sitemap index lastmod:** In the static_sitemaps app the sitemaps\nindex works slightly different than the Django's default behaviour. Just like\nDjango it also gathers all urls from the generated sitemaps but it also\nincludes a new XML tag ``lastmod``. The date/time set in this tag comes\nfrom the first element of the generated file, so reverse sorting your query\nby your date field will keep this information accurate. This is important to\ninform the crawler how fresh is the information inside each sitemap inside the\nsitemap_index.xml.\n\nRunning as celery task\n----------------------\n\nIf you run celery as your task runner, you should be ready to go out of the box. django-static-sitemaps includes the ``GenerateSitemap`` task which will be automatically run each ``STATICSITEMAPS_REFRESH_AFTER`` minutes (defaults to 60 ~ 1 hour). You can optionally bypass it by setting it to ``None``.\n\nAdvanced settings\n------------------\n\n``STATICSITEMAPS_ROOT_DIR``\n    Filesystem path to generate the sitemaps files to. Defaults to ``STATIC_ROOT`` directory.\n\n``STATICSITEMAPS_USE_GZIP``\n\tDefaults to ``True``. If ``True``, gzip compression will be used when generating the sitemaps files (which is very possible by sitemaps specification).\n\n``STATICSITEMAPS_GZIP_METHOD``\n    Gzip method to use. Must be in ['python', 'system', ].\n\n``STATICSITEMAPS_SYSTEM_GZIP_PATH``\n    Path to the gzip binary if use STATICSITEMAPS_GZIP_METHOD == 'system'.\n\n``STATICSITEMAPS_FILENAME_TEMPLATE``\n\tTemplate for sitemap parts. Defaults to ``sitemap-%(section)s-%(page)s.xml``.\n\n``STATICSITEMAPS_INDEX_TEMPLATE``\n    Template path for sitemap index. Defaults to ``static_sitemaps/sitemap_index.xml``.\n\n``STATICSITEMAPS_URL``\n\tSet this to the URL from which you want to serve the sitemaps. Can be an URL with and without domain, e.g. http://example.com/media/sitemaps/ or /media/sitemaps/.\n\tIf no domain is given, the domain of the current Django site is used. Default is STATIC_URL.\n\n``STATICSITEMAPS_LANGUAGE``\n    Language code to use when generating the sitemaps. Defaults to ``LANGUAGE_CODE`` setting.\n\n``STATICSITEMAPS_PING_GOOGLE``\n    Boolean determining whether to ping google after sitemaps have been updated. Defaults to ``True``. Please note that google will only be notified if something changed in the sitemap file set.\n\n``STATICSITEMAPS_REFRESH_AFTER``\n    How often (in minutes) should the celery task be run. Defaults to 60 minutes.\n\n``STATICSITEMAPS_MOCK_SITE``\n    True|False setting if you want to mock the Django sites framework. Useful if you want to use package without enabling django.contrib.sites. Defaults to False.\n\n``STATICSITEMAPS_MOCK_SITE_NAME``\n    URL of the site your mocking. This is what will show up in your sitemap as the URL. For example: 'www.yoursite.com'. Defaults to None.\n\n``STATICSITEMAPS_MOCK_SITE_PROTOCOL``\n    Protocol to use when mocking above site name. Defaults to 'http'.\n\n\nUsing a custom template\n-----------------------\n\nIf you need to use a template different from the Django's default (for example\nto generate a Google News sitemap) you can extend the you Sitemap class and\nsetting a ``sitemap_template`` attribute. For Example:\n\n.. sourcecode::\n\n    from django.contrib.sitemaps import GenericSitemap\n\n    class GoogleNewsSitemap(GenericSitemap):\n        sitemap_template = 'sitemap_googlenews.xml'\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/xaralis/django-static-sitemaps",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-static-sitemaps",
    "package_url": "https://pypi.org/project/django-static-sitemaps/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-static-sitemaps/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/xaralis/django-static-sitemaps"
    },
    "release_url": "https://pypi.org/project/django-static-sitemaps/4.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Tool for generating sitemaps as static files",
    "version": "4.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13779755,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2573c0ce67b5b03bcce293aa936f4561f869ab954ccb73009165efe9e8a86bc2",
        "md5": "1cf1134a8ebeb86e1eedb630a2399db1",
        "sha256": "ad9d305feaea06fdfdf5e9b9683aac64e3bc81187c4b5e2c908a2dbb50fc33b0"
      },
      "downloads": -1,
      "filename": "django-static-sitemaps-4.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1cf1134a8ebeb86e1eedb630a2399db1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10260,
      "upload_time": "2016-05-05T06:53:37",
      "upload_time_iso_8601": "2016-05-05T06:53:37.511261Z",
      "url": "https://files.pythonhosted.org/packages/25/73/c0ce67b5b03bcce293aa936f4561f869ab954ccb73009165efe9e8a86bc2/django-static-sitemaps-4.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}