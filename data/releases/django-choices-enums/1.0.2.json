{
  "info": {
    "author": "gojuukaze",
    "author_email": "ikaze_email@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "django-choices-enums\n====================\n\nThe enum type used for Django choices enables Django’s choices to\nsupport code prompts!!\n\n用于django choices的枚举类型，使得django的choices支持代码提示！！\n\n依赖\n====\n\n-  python3+\n\nInstallation\n============\n\n::\n\n   pip install django-choices-enums\n\nUsage\n=====\n\n.. code:: python\n\n   from django_choices_enums import DjangoChoicesEnum\n\n   class TypeChoices(DjangoChoicesEnum):\n       Created = (1,'created')\n       Finished = (2,'finished')\n\n   class Foo(models.Model):\n       type = models.IntegerField(choices=TypeChoices.to_django_choices())\n\n-  use enum like this:\n\n.. code:: python\n\n   f = Foo.create(type=TypeChoices.Created)\n\n-  get all values:\n\n.. code:: python\n\n   print(TypeChoices.all_values())\n   # Out: [1, 2]\n\n-  anonymous values:\n\n.. code:: python\n\n   from django_choices_enums import DjangoChoicesEnum\n\n   class MyEnum(DjangoChoicesEnum):\n       A = (1, 'xxx')\n       B = (2, 'xxx')\n\n       anonymous = ((3, 'xx'),\n                    (4, 'xx'),\n                    )\n\n   print(MyEnum.all_values())\n   # Out: [(1, 'xxx'), (2, 'xxx'), (3, 'xx'), (4, 'xx')]\n\n-  get verbose:\n\n.. code:: python\n\n   from django_choices_enums import DjangoChoicesEnum\n\n   class MyEnum(DjangoChoicesEnum):\n       A = (1, 'A ...')\n       B = (2, 'B ...')\n\n       anonymous = ((3, '33'),\n                    (4, '44'),\n                    )\n   print(MyEnum.A.verbose)\n   # Out: A ...\n   print(MyEnum.get_verbose(2))\n   # Out: B ...\n   print(MyEnum.get_verbose(3))\n   # Out: 33\n   print(MyEnum.get_verbose(MyEnum.B))\n   # Out: B ...",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gojuukaze/django-choices-enum",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-choices-enums",
    "package_url": "https://pypi.org/project/django-choices-enums/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/django-choices-enums/",
    "project_urls": {
      "Homepage": "https://github.com/gojuukaze/django-choices-enum"
    },
    "release_url": "https://pypi.org/project/django-choices-enums/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "The enum type used for Django choices enables Django's choices to support code prompts!!",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6240597,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e383c380c55dc89591b8eb41bde2f9758304f58b37a0fd3e4195ce96a9430ea4",
        "md5": "85898a2ddea0684b458904b0af553082",
        "sha256": "ff101b31028aa6be40409a93d76b75ce0ceb2c9a18aef81a1e7b920c6f78483d"
      },
      "downloads": -1,
      "filename": "django-choices-enums-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "85898a2ddea0684b458904b0af553082",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 2489,
      "upload_time": "2019-12-04T09:18:14",
      "upload_time_iso_8601": "2019-12-04T09:18:14.594200Z",
      "url": "https://files.pythonhosted.org/packages/e3/83/c380c55dc89591b8eb41bde2f9758304f58b37a0fd3e4195ce96a9430ea4/django-choices-enums-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}