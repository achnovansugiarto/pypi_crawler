{
  "info": {
    "author": "Dieter Maurer",
    "author_email": "dieter@handshake.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Zope2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Zope Public License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Utilities"
    ],
    "description": "This package contains extensions for ``zope.schema``.\n\n=======\nModules\n=======\n\nverify\n======\n\nA companion to ``zope.interface.verify`` for the schema part of\ninterfaces.\n\nIt contains the function\n``verify_schema(``\\ *iface*, *obj*, *context*\\ ``=None``, *check_declaration*\\ ``=True)``\nwhich verifies that *obj* satisfies the schema part of interface *iface*.\nSchema fields need to get bound to a context before they can be validated.\n*context* specifies this context and defaults to *obj*.\n*check_declaration* checks that *obj* declares to privide *iface*.\n\nschema\n======\n\nThe main content is the mixin class ``SchemaConfigured``. It supports\nconfiguration according the schema part of the interfaces implemented\nby the ``SchemaConfigured`` derived class.\n\nOccasionally, function ``schemadict`` might be usefull. It extracts\nthe schema part of an interface or interface specification as a dictionary.\n\nThe field ``Object`` is a replacement for ``zope.schema.Object``. The\nlatter lacks field information in validation errors\n(https://bugs.launchpad.net/zope.schema/+bug/620324) which makes identification\nof the affected fields unnecessarily difficult. Occasionally, one wants\nto suppress the check that a validated object explicitly declares\nto provide the interface. ``Object`` has the additional\nproperty ``check_declaration`` to control this (defaults to ``True``).\n\n\n========\nExamples\n========\n\nSetup: It defines two schemas ``S1`` and ``S2``, an\ninterface ``I`` and a class ``C`` deriving from ``SchemaConfigured``\nimplementing the schemas and the interface.\n\n>>> from zope.interface import Interface, implements, providedBy\n>>> from zope.schema import Int\n>>> \n>>> from dm.zope.schema.schema import SchemaConfigured, schemadict\n>>> from dm.zope.schema.verify import verify_schema\n>>> \n>>> class S1(Interface): i1 = Int(default=0)\n... \n>>> class S2(Interface): i2 = Int(default=1)\n... \n>>> class I(Interface):\n...   def method(): pass\n... \n>>> class C(SchemaConfigured):\n...   implements(S1, S2, I)\n...   def method(self): pass\n... \n\n\n``C`` instances have attributes corresponding to the schema fields.\nIf no arguments are given for the constructor, they get the field default\nas value. Provided (keyword!) arguments override the defaults.\n\n>>> c = C()\n>>> c.i1\n0\n>>> c.i2\n1\n>>> c = C(i1=5)\n>>> c.i1\n5\n\nThe constructor rejects keyword arguments not defined in the schema\nin order to quickly detect spelling errors. However, this hampers\nthe use of ``super`` in the class hierarchy for the ``__init__`` method.\nMaybe, future versions will provide a means to control this check.\n\n>>> c = C(x=5)\nTraceback (most recent call last):\n  ...\nTypeError: non schema keyword argument: x\n\nIf the field values are appropriate, ``C`` instances provide the\nschemas (as verified by ``verify_schema``). Otherwise, ``verify_schema``\nwill raise an exception. This example should also the elementary use\nof ``verify_schema``.\n\n>>> verify_schema(S1, c)\n>>> c.i1=None\n>>> verify_schema(S1, c)\nTraceback (most recent call last):\n  ...\nzope.schema.interfaces.WrongContainedType: [('i1', RequiredMissing())]",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/dm.zope.schema",
    "keywords": "application development zope schema",
    "license": "ZPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dm.zope.schema",
    "package_url": "https://pypi.org/project/dm.zope.schema/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dm.zope.schema/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/dm.zope.schema"
    },
    "release_url": "https://pypi.org/project/dm.zope.schema/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "'zope.schema' extensions",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11610576,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b964d935fefa7b59a4b023666f74e09f1bfe0d1062baaac92fe1d4ef84a668c3",
        "md5": "db620c1879d19dae6cc6b62083b2feb2",
        "sha256": "aa89f693dabfe2eae1365fef68a6887e819be55e972064f8f5e4412ebf3e0eed"
      },
      "downloads": -1,
      "filename": "dm.zope.schema-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "db620c1879d19dae6cc6b62083b2feb2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4860,
      "upload_time": "2010-08-19T12:02:53",
      "upload_time_iso_8601": "2010-08-19T12:02:53.903256Z",
      "url": "https://files.pythonhosted.org/packages/b9/64/d935fefa7b59a4b023666f74e09f1bfe0d1062baaac92fe1d4ef84a668c3/dm.zope.schema-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}