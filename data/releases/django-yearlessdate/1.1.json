{
  "info": {
    "author": "David Seddon",
    "author_email": "david@seddonym.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "===================\ndjango-yearlessdate\n===================\n\nProvides a Django model and form fields for dates that do not include years.\n\nOne use case is to collect birthdays without requiring the year of birth.\n\n|build-status| |python-versions| |django-versions| |wheel| |license|\n\nPrerequisites\n=============\n\n- Django 1.8 - 1.11, 2.0\n- Python 2.7, 3.6\n\n(Other versions may function, but are untested.)\n\nInstallation\n============\n\n.. code-block:: console\n\n    pip install django-yearlessdate\n\nUsage\n=====\n\nThe package provides two model fields, ``YearlessDateField`` and ``YearField``.\n\nYearlessDateField\n-----------------\n\n``YearlessDateField`` stores a date without a year: January 1st, for example.\n\nIts default widget consists of two dropdowns, one for a day and one for the month.\n\nIt will only allow potentially valid dates. For example, a user won't be able to set\nthe date to April 31st. February 29th is counted as a valid date.\n\nHere's an example ``models.py`` that declares a model with a required yearless date::\n\n    from django.db import models\n    from djangoyearlessdate.models import YearlessDateField\n\n    class MyModel(models.Model):\n        birthday = YearlessDateField()\n\nThe values of ``YearlessDateField`` on the model instances can be accessed like so:\n\n>>> a = MyModel.objects.get(id=1)\n>>> a\n<MyModel: 4 August 2011>\n>>> a.birthday.day\n4\n>>> a.birthday.month\n8\n>>> print a.birthday\n4 August\n\nThey can also be compared or sorted as would be expected, for example:\n\n>>> m = MyModel.objects.all() \n>>> m\n[<MyModel: 4 August 2011>, <MyModel: 30 June 2013>]\n>>> m[0].birthday > m[1].birthday\nTrue\n>>> m.order_by('birthday')\n[<MyModel: 30 June 2013>, <MyModel: 4 August 2011>]\n\nYearField\n---------\n\n``YearField`` is a very simple model field that stores the year as an integer,\nand ensures the year provided lies between 1900 and 2200::\n\n    from django.db import models\n    from djangoyearlessdate.models import YearField\n\n    class MyModel(models.Model):\n        year = YearField(null=True, blank=True)\n\nUse of ``YearField`` is *not recommended* due to its lack of configurability.\nYou're almost certainly better of using a ``SmallIntegerField`` in combination\nwith a ``MinValueValidator`` and a ``MaxValueValidator``.\n\nRunning tests\n=============\n\nSetup\n-----\n\n1. Ensure you have a recent version of tox installed.\n2. Clone this repo.\n\nRunning tests\n-------------\n\nFrom the root of this repo, simply run:\n\n.. code-block:: console\n\n    tox\n\n.. |build-status| image:: https://img.shields.io/circleci/project/github/seddonym/django-yearlessdate.svg\n    :alt: Build status\n    :target: https://circleci.com/gh/seddonym/django-yearlessdate\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/django-yearlessdate.svg\n    :alt: Python versions\n    :target: http://pypi.python.org/pypi/django-yearlessdate/\n\n.. |django-versions| image:: https://img.shields.io/pypi/djversions/django-yearlessdate.svg\n    :alt: Django compatibility\n    :target: http://pypi.python.org/pypi/django-yearlessdate/\n\n.. |wheel| image:: https://img.shields.io/pypi/wheel/django-yearlessdate.svg\n    :alt: django-yearlessdate can be installed via wheel\n    :target: http://pypi.python.org/pypi/django-yearlessdate/\n\n.. |license| image:: https://img.shields.io/pypi/l/django-yearlessdate.svg\n    :alt: django-yearlessdate can be installed via wheel\n    :target: http://pypi.python.org/pypi/django-yearlessdate/\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/seddonym/django-yearlessdate/",
    "keywords": "django date yearlessdate",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-yearlessdate",
    "package_url": "https://pypi.org/project/django-yearlessdate/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-yearlessdate/",
    "project_urls": {
      "Homepage": "http://github.com/seddonym/django-yearlessdate/"
    },
    "release_url": "https://pypi.org/project/django-yearlessdate/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django field for storing dates without years.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4663374,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6219df92e5e0cb044fd4f3803cfa9192a138bdab0e2999c3b0d2149a7cd70622",
        "md5": "16ef461f52464faa3c7f3e6ed7df2e31",
        "sha256": "a53bf3d5559b74884abd0a17a9fed0dda8f6d794c1c2d591f6c68ff61be679ae"
      },
      "downloads": -1,
      "filename": "django_yearlessdate-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16ef461f52464faa3c7f3e6ed7df2e31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5249,
      "upload_time": "2018-05-10T09:56:15",
      "upload_time_iso_8601": "2018-05-10T09:56:15.412407Z",
      "url": "https://files.pythonhosted.org/packages/62/19/df92e5e0cb044fd4f3803cfa9192a138bdab0e2999c3b0d2149a7cd70622/django_yearlessdate-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "873ad1d3adce1c911c993e00062e0b11d24449e790b0086ed97878e97331797f",
        "md5": "8b47042aa59fc9ceed61631e125c59ad",
        "sha256": "35ac19d1eeee97e73dd01a7e9462ea02e01e3ab4e960bfd069e746b7016fbf05"
      },
      "downloads": -1,
      "filename": "django-yearlessdate-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8b47042aa59fc9ceed61631e125c59ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4542,
      "upload_time": "2018-05-10T09:56:17",
      "upload_time_iso_8601": "2018-05-10T09:56:17.085989Z",
      "url": "https://files.pythonhosted.org/packages/87/3a/d1d3adce1c911c993e00062e0b11d24449e790b0086ed97878e97331797f/django-yearlessdate-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}