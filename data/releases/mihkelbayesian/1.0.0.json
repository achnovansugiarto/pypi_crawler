{
  "info": {
    "author": "Mihkel Kaarel Raidal",
    "author_email": "m.k.raidal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mihkelBayesian\n\nThis is a Bayesian optimizer created to optimize hyperparameters different functions and machine learning. \n\n#  Installation\n\nRun the following command:\npip install mihkelBayesian\n\n# How to mihkelBayesian\n\n## Optimizing hyperparameters\n\nIn order to optimize 2 hyperparameters you need to: \n\n>from mihkelBayesian import optimize\n\n>min_val, min_hyperparameters = optimize.run(evaluateFunction, functionConstants, n_iterations,bounds) \n\nevaluateFunction - a string of the same name as the function you wish to evaluate in functions.py. \nfunctionConstans - a list of constants you wish to apply to the evaluateFunction\nn_iterations - how many measurements of the function the optimizer is allower to make\nbounds - (1 x 2) shape numpy array that limits the searchspace in the form of [[x1min,x1max],[x2min,x2max]]\nmin_val - the smallest function value \nmin_hyperparameters - hyperparameter pair corresponding to that value. \n\n(Eg. run(\"rosenbrock\",[1,10],300,np.array([[0,10],[-20,40]])))\n\n## Choosing the function to evaluate\n\nOpen functions.py to see all currently available functions. Each function takes an array XY that is automatically generated by the optimizer and a list of function constants that the function uses. Use one of the pre-existing functions or write your own function that the optimizer will call upon. Custom function can be analytical, machine learning etc. \n\n\n## Testing\n\nPytest is used to test the code. All tests are located in the 'tests' folder.To run the tests, execute:\n\n> pytest\n\n# Notes\n\nYou can vary the hyperparameters of the optimizer in order to get better results.\n\nMore than 500 no_iterations takes long time to compute. Often no more than 300 iterations are needed. \n\nOne run with 500 iterations takes about 4 minutes if the function evaluation is instantaneous.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mihkelKR/mihkelBayesian",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mihkelBayesian",
    "package_url": "https://pypi.org/project/mihkelBayesian/",
    "platform": "",
    "project_url": "https://pypi.org/project/mihkelBayesian/",
    "project_urls": {
      "Homepage": "https://github.com/mihkelKR/mihkelBayesian"
    },
    "release_url": "https://pypi.org/project/mihkelBayesian/1.0.0/",
    "requires_dist": [
      "numpy (>=1.18.1)",
      "matplotlib (>=3.1.3)",
      "sklearn (>=0.0)",
      "scipy (>=1.4.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Machine learning hyperparameter optimiser using the Bayesian model",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7856731,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb14fe9d9d07e22d82d7eac310959e6f9ef4cec423e13c445ae9cb7439d02287",
        "md5": "9b90d080bd6f548bb75ee301a2d911f8",
        "sha256": "b1b27fbc11569a1da17374356d773e4baed04b737a717b71a140698a7a149f42"
      },
      "downloads": -1,
      "filename": "mihkelBayesian-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b90d080bd6f548bb75ee301a2d911f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10178,
      "upload_time": "2020-07-31T18:23:39",
      "upload_time_iso_8601": "2020-07-31T18:23:39.680434Z",
      "url": "https://files.pythonhosted.org/packages/bb/14/fe9d9d07e22d82d7eac310959e6f9ef4cec423e13c445ae9cb7439d02287/mihkelBayesian-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d19acb43463ac8be3cf3ba79a19628b2d015ee083d60e9b8283f4d1f984ecc0",
        "md5": "7245895136e739a50b190fe612a6c561",
        "sha256": "2d8d858f15c64bd1962f90405f54f7d9c92e60b01ac4c547f758bfcb3c3666ec"
      },
      "downloads": -1,
      "filename": "mihkelBayesian-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7245895136e739a50b190fe612a6c561",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8705,
      "upload_time": "2020-07-31T18:23:40",
      "upload_time_iso_8601": "2020-07-31T18:23:40.890844Z",
      "url": "https://files.pythonhosted.org/packages/5d/19/acb43463ac8be3cf3ba79a19628b2d015ee083d60e9b8283f4d1f984ecc0/mihkelBayesian-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}