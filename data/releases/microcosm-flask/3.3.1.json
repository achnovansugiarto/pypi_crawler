{
  "info": {
    "author": "Globality Engineering",
    "author_email": "engineering@globality.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# microcosm-flask\n\nOpinionated Flask services.\n\n[![Circle CI](https://circleci.com/gh/globality-corp/microcosm-flask/tree/develop.svg?style=svg)](https://circleci.com/gh/globality-corp/microcosm-flask/tree/develop)\n\n\n## Conventions\n\n - Classify API endpoints according to an enumerated set of operations with well-defined naming conventions\n - Handle errors consistently using a top-level error and nested sub-errrors\n - Handle UUIDs as route path keys\n - Protect endpoints with basic auth\n - Use HAL JSON links to related resources to each other\n - Use Swagger to publish endpoints for interoperability\n - Automate generation of endpoints according to conventions:\n    - A health check API endpoint exposes service health\n    - RESTful endpoints provide CRUD operations on resources\n    - RESTful endpoints allows one resource to be related to another\n    - API discovery endpoints allow resource data to be discovered/spidered\n    - Swagger endpoints allow endpoint integration to be automated\n\n## Setup\n\nCreate a virtualenv\n\n```\nmkvirtualenv microcosm-flask\n```\n\nInstall dependencies\n\n```\npip install -U -e .\n```\n\n## Tests\n\nRun the tests\n\n```\npython setup.py nosetests\n```\n\n\n## Configuration\n\n - The object graph's `debug` and `testing` flags are propagated to the Flask application",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/globality-corp/microcosm-flask",
    "keywords": "microcosm",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microcosm-flask",
    "package_url": "https://pypi.org/project/microcosm-flask/",
    "platform": "",
    "project_url": "https://pypi.org/project/microcosm-flask/",
    "project_urls": {
      "Homepage": "https://github.com/globality-corp/microcosm-flask"
    },
    "release_url": "https://pypi.org/project/microcosm-flask/3.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Opinionated persistence with FlaskQL",
    "version": "3.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16470487,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d619fee87d58a2724174af877f32d4ec9dfba5733cf4de32644b4dc09e33688",
        "md5": "febef6de4fb46e8c0d12fa061033077a",
        "sha256": "18b543920f80994d1d274148e32a27db7f30475469b5250385019010833779e7"
      },
      "downloads": -1,
      "filename": "microcosm-flask-3.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "febef6de4fb46e8c0d12fa061033077a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 49581,
      "upload_time": "2020-06-18T15:38:53",
      "upload_time_iso_8601": "2020-06-18T15:38:53.855271Z",
      "url": "https://files.pythonhosted.org/packages/3d/61/9fee87d58a2724174af877f32d4ec9dfba5733cf4de32644b4dc09e33688/microcosm-flask-3.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}