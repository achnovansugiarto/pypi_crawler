{
  "info": {
    "author": "Dennis van Gils",
    "author_email": "vangils.dennis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/dvg-ringbuffer\n    :target: https://pypi.org/project/dvg-ringbuffer\n.. image:: https://img.shields.io/pypi/pyversions/dvg-ringbuffer\n    :target: https://pypi.org/project/dvg-ringbuffer\n.. image:: https://travis-ci.org/Dennis-van-Gils/python-dvg-ringbuffer.svg?branch=master\n    :target: https://travis-ci.org/Dennis-van-Gils/python-dvg-ringbuffer\n.. image:: https://coveralls.io/repos/github/Dennis-van-Gils/python-dvg-ringbuffer/badge.svg?branch=master\n    :target: https://coveralls.io/github/Dennis-van-Gils/python-dvg-ringbuffer?branch=master\n.. image:: https://requires.io/github/Dennis-van-Gils/python-dvg-ringbuffer/requirements.svg?branch=master\n    :target: https://requires.io/github/Dennis-van-Gils/python-dvg-ringbuffer/requirements/?branch=master\n    :alt: Requirements Status\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n.. image:: https://img.shields.io/badge/License-MIT-purple.svg\n    :target: https://github.com/Dennis-van-Gils/python-dvg-ringbuffer/blob/master/LICENSE.txt\n\nDvG_RingBuffer\n==============\nNumpy ring buffer at a *fixed* memory address to allow for significantly\nsped up ``numpy``, ``sigpy``, ``numba`` & ``pyFFTW``  calculations.\n\n**Based on:**\n    https://pypi.org/project/numpy_ringbuffer/ by Eric Wieser.\n\n    ``DvG_RingBuffer`` can be used as a drop-in replacement for\n    ``numpy_ringbuffer`` and provides several optimizations and extra features,\n    but requires Python 3.\n\nIf, and only if the ring buffer is completely full, will it return its array\ndata as a contiguous C-style numpy array at a single fixed memory address per\nring buffer instance. It does so by unwrapping the discontiguous ring buffer\narray into a second extra *unwrap* buffer that is a private member of the ring\nbuffer class. This is advantegeous for other accelerated computations by, e.g.,\n``numpy``, ``sigpy``, ``numba`` & ``pyFFTW``, that benefit from being fed with\ncontiguous arrays at the same memory address each time again, such that compiler\noptimizations and data planning are made possible.\n\nWhen the ring buffer is not completely full, it will return its data as a\ncontiguous C-style numpy array, but at different memory addresses. This is how\nthe original ``numpy-buffer`` always operates.\n\nCommonly, ``collections.deque()`` is used to act as a ring buffer. The\nbenefits of a deque is that it is thread safe and fast (enough) for most\nsituations. However, there is an overhead whenever the deque -- a list-like\ncontainer -- needs to be transformed into a numpy array. Because\n``DvG_RingBuffer`` already returns numpy arrays it will outperform a\n``collections.deque()`` easily, tested to be a factor of ~60.\n\n.. warning::\n\n    * This ring buffer is not thread safe. You'll have to implement your own\n      mutex locks when using this ring buffer in multithreaded operations.\n\n    * The data array that is returned by a full ring buffer is a pass by\n      reference of the *unwrap* buffer. It is not a copy! Hence, changing\n      values in the returned data array is identical to changing values in the\n      *unwrap* buffer.\n\nMethods\n-------\n* ``clear()``\n* ``append()``\n* ``appendleft()``\n* ``extend()``\n* ``extendleft()``\n* ``pop()``\n* ``popleft()``\n\nProperties\n----------\n* ``is_full``\n* ``unwrap_address``\n* ``current_address``\n* ``dtype``\n* ``shape``\n* ``maxlen``\n\nIndexing & slicing\n------------------\n* ``[]`` including negative indices and slicing\n\nChangelog\n=========\n\n1.0.0 (2020-06-29)\n------------------\n* First release on PyPI\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dennis-van-Gils/python-dvg-ringbuffer",
    "keywords": "ring buffer,numpy-ringbuffer,numpy,scipy,numba,pyFFTW,deque,speed,fast",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dvg-ringbuffer",
    "package_url": "https://pypi.org/project/dvg-ringbuffer/",
    "platform": "",
    "project_url": "https://pypi.org/project/dvg-ringbuffer/",
    "project_urls": {
      "Homepage": "https://github.com/Dennis-van-Gils/python-dvg-ringbuffer",
      "Issue Tracker": "https://github.com/Dennis-van-Gils/python-dvg-ringbuffer/issues"
    },
    "release_url": "https://pypi.org/project/dvg-ringbuffer/1.0.0/",
    "requires_dist": [
      "numpy (~=1.15)"
    ],
    "requires_python": "~=3.0",
    "summary": "Numpy ringbuffer at a fixed memory address to allow for significantly sped up numpy, sigpy, numba & pyFFTW calculations.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17067471,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f730d8306c6918731e53d4a5790046b26bba44381e58bd64159511a84dc96d2",
        "md5": "2ac430bf66fe95851d9d4ef462bb147a",
        "sha256": "35a86a6e68fe8a0708aad075dffac2ada9db7ea76a7e5ff22ac4d9ee63704544"
      },
      "downloads": -1,
      "filename": "dvg_ringbuffer-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ac430bf66fe95851d9d4ef462bb147a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.0",
      "size": 7808,
      "upload_time": "2020-07-21T21:09:13",
      "upload_time_iso_8601": "2020-07-21T21:09:13.255367Z",
      "url": "https://files.pythonhosted.org/packages/5f/73/0d8306c6918731e53d4a5790046b26bba44381e58bd64159511a84dc96d2/dvg_ringbuffer-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47560c94aa583c62800dafd5f25e2f8fa1af8e9465eb65340a6d88c931c9a121",
        "md5": "ff5b181b4d98098fa753a1c23ee95d02",
        "sha256": "3967019866192333a314ee098f9c36e812eedfa4f66dbd25e000be75f87b4cc9"
      },
      "downloads": -1,
      "filename": "dvg-ringbuffer-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ff5b181b4d98098fa753a1c23ee95d02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.0",
      "size": 10344,
      "upload_time": "2020-07-21T21:09:16",
      "upload_time_iso_8601": "2020-07-21T21:09:16.719464Z",
      "url": "https://files.pythonhosted.org/packages/47/56/0c94aa583c62800dafd5f25e2f8fa1af8e9465eb65340a6d88c931c9a121/dvg-ringbuffer-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}