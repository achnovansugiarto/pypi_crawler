{
  "info": {
    "author": "Ricardo Baltazar Chaves, Willian Antunes",
    "author_email": "Ricardo Baltazar <ricardobchaves6@gmail.com>, Willian Antunes <willian.lima.antunes@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Portuguese (Brazilian)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Django Stomp\n\n[![Build Status](https://dev.azure.com/juntos-somos-mais-loyalty/python/_apis/build/status/django-stomp?branchName=master)](https://dev.azure.com/juntos-somos-mais-loyalty/python/_build/latest?definitionId=23&branchName=master)\n[![Maintainability](https://api.codeclimate.com/v1/badges/381136911e038d1a6887/maintainability)](https://codeclimate.com/github/juntossomosmais/django-stomp/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/381136911e038d1a6887/test_coverage)](https://codeclimate.com/github/juntossomosmais/django-stomp/test_coverage)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nA simple implementation of STOMP with Django.\n\nIn theory it can work with any broker which supports STOMP with none or minor adjustments.\n\n## Installation\n\n`pip install django_stomp`\n\nAdd `django_stomp` in your `INSTALLED_APPS` and so be it.\n\n## Configuration process\n\nNot yet fully available, but feel free to see our tests to get insights.\n\n### Consumer\n\nFirst you must create a function which receives an parameter of type `django_stomp.services.consumer.Payload`. Let's suppose the module `app.sample` with the following content:\n\n```python\nimport logging\n\nfrom django_stomp.services.consumer import Payload\n\nlogger = logging.getLogger(__name__)\n\n\ndef my_honest_logic(payload: Payload) -> None:\n    logger.info(\"Yeah, I received a payload from django-stomp!\")\n\n    my_payload = payload.body\n    my_header = payload.headers\n\n    if my_payload.get(\"my-dict-key\"):\n        payload.ack()\n    else:\n        logger.info(\"To DLQ!\")\n        payload.nack()\n```\n\nNow you must provide broker connection details filling out the following parameters at least:\n\n- STOMP_SERVER_HOST\n- STOMP_SERVER_PORT\n- STOMP_USE_SSL\n\nAnd just create the job issuing the following command:\n\n```bash\npython manage.py pubsub \"/queue/your-stuff\" app.sample.my_honest_logic\n```\n\nThat's it ✌️\n\n## Tests\n\nIn order to execute tests for ActiveMQ, execute the following:\n\n    docker-compose up -d broker-activemq\n\nOr for RabbitMQ:\n\n    docker-compose up -d broker-rabbitmq\n\nThen at last:\n\n    pipenv run tox\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juntossomosmais/django-stomp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-stomp",
    "package_url": "https://pypi.org/project/django-stomp/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-stomp/",
    "project_urls": {
      "Homepage": "https://github.com/juntossomosmais/django-stomp"
    },
    "release_url": "https://pypi.org/project/django-stomp/1.0.1/",
    "requires_dist": [
      "request-id-django-log",
      "stomp.py",
      "tenacity"
    ],
    "requires_python": "",
    "summary": "A simple implementation of STOMP with Django",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16490369,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c13aba09d15ca836de94885f8f2ab9618c39ae73e6df0fb672ed172e7ebfd4f",
        "md5": "482c9754cec23d419b5cf04969104e61",
        "sha256": "99c509de816bfdd18e985210da5a9da8531fef91cb8eb6d32c0bc491391a1563"
      },
      "downloads": -1,
      "filename": "django_stomp-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "482c9754cec23d419b5cf04969104e61",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20605,
      "upload_time": "2019-12-26T19:21:11",
      "upload_time_iso_8601": "2019-12-26T19:21:11.785063Z",
      "url": "https://files.pythonhosted.org/packages/9c/13/aba09d15ca836de94885f8f2ab9618c39ae73e6df0fb672ed172e7ebfd4f/django_stomp-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeaf19b37df31185e864f95e8360e7f2ea5360711fe39ff182235700cda09fe9",
        "md5": "eeb809d2c6d54f9777eaba47b3462311",
        "sha256": "ebb4b006fb132d59ea9e9d787915cbc6833967806fea3353a4086760ec1c51fd"
      },
      "downloads": -1,
      "filename": "django_stomp-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eeb809d2c6d54f9777eaba47b3462311",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13481,
      "upload_time": "2019-12-26T19:21:13",
      "upload_time_iso_8601": "2019-12-26T19:21:13.684197Z",
      "url": "https://files.pythonhosted.org/packages/ae/af/19b37df31185e864f95e8360e7f2ea5360711fe39ff182235700cda09fe9/django_stomp-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}