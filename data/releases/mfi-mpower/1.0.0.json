{
  "info": {
    "author": "",
    "author_email": "\"P. Beckstein\" <p.b-dev+mfi-mpower@mailbox.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Asynchronous Python API for mFi mPower devices\r\n\r\n## Reference\r\nThe \"REST\" API for mFi mPower devices are briefly explained [here](https://community.ui.com/questions/mPower-mFi-Switch-and-mFi-In-Wall-Outlet-HTTP-API/824c1c63-b7e6-44ed-b19a-f1d68cd07269).\r\n\r\n## Usage example\r\n```python\r\nimport asyncio\r\n\r\nimport aiohttp\r\n\r\nfrom mfi_mpower import MPowerDevice\r\n\r\nasync def main():\r\n\r\n    data = {\r\n        \"host\": \"name_or_ip\",\r\n        \"username\": \"ubnt\",\r\n        \"password\": \"ubnt\",\r\n        \"use_ssl\": True,\r\n        \"verify_ssl\": False,\r\n    }\r\n\r\n    async with aiohttp.ClientSession() as session:\r\n        async with MPowerDevice(**data, session=session) as device:\r\n\r\n            # Print device info\r\n            print(device)\r\n\r\n            # Print all sensors and their data\r\n            sensors = await device.create_sensors()\r\n            for sensor in sensors:\r\n                print(sensor)\r\n\r\n            # Print all switches and their state\r\n            switches = await device.create_switches()\r\n            for switch in switches:\r\n                print(switch)\r\n\r\n            # Turn port 1 off and toggle it afterwards back on\r\n            switch1 = await device.create_switch(1)\r\n            await switch1.set(False)\r\n            await asyncio.sleep(5)\r\n            await switch1.toggle()\r\n\r\nasyncio.run(main())\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "ubiquiti,mfi,mpower",
    "license": "MIT License  Copyright (c) 2023 pasbec  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mfi-mpower",
    "package_url": "https://pypi.org/project/mfi-mpower/",
    "platform": null,
    "project_url": "https://pypi.org/project/mfi-mpower/",
    "project_urls": {
      "Homepage": "https://github.com/pasbec/mfi"
    },
    "release_url": "https://pypi.org/project/mfi-mpower/1.0.0/",
    "requires_dist": [
      "aiohttp",
      "yarl",
      "black ; extra == 'dev'",
      "bumpver ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pip-tools ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "build ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Asynchronous Python API for mFi mPower devices",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16349517,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce1a8708d9ce7e242b3a62edda88000843612f72720807270b5fddddf9c67b7f",
        "md5": "0b7a7843f5030027cd32bc417caacf6b",
        "sha256": "3dfd176e8fdd7c6658296c7b93cf548382d814aefeeb3c3ca896c2424ffbe305"
      },
      "downloads": -1,
      "filename": "mfi_mpower-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b7a7843f5030027cd32bc417caacf6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 9196,
      "upload_time": "2023-01-05T23:57:30",
      "upload_time_iso_8601": "2023-01-05T23:57:30.918208Z",
      "url": "https://files.pythonhosted.org/packages/ce/1a/8708d9ce7e242b3a62edda88000843612f72720807270b5fddddf9c67b7f/mfi_mpower-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "935a846bcc8ccab3ad27f7ddb03552206933ea713af70d50ccbeb18f21fe48a2",
        "md5": "6d9bf302c3920dc4b3eb5a50b3e44ee4",
        "sha256": "e7855d13732e3c95b550193c81fa7d5cf68f188c72e5e25babebd2d0f36f2b2c"
      },
      "downloads": -1,
      "filename": "mfi-mpower-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6d9bf302c3920dc4b3eb5a50b3e44ee4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 9129,
      "upload_time": "2023-01-05T23:57:32",
      "upload_time_iso_8601": "2023-01-05T23:57:32.929861Z",
      "url": "https://files.pythonhosted.org/packages/93/5a/846bcc8ccab3ad27f7ddb03552206933ea713af70d50ccbeb18f21fe48a2/mfi-mpower-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}