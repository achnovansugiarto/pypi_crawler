{
  "info": {
    "author": ":Barry-Thomas-Paul: Moss",
    "author_email": "bigbytetech@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business"
    ],
    "description": "# LibreOffice Developer Search\n\nSimplified searching for LibreOffice Developers.\n\n## Installation\n\n### pip\n\nlo-dev-search [PyPI](https://pypi.org/project/lo-dev-search/)\n\n```sh\npip install lo-dev-search\n```\n\n## Finding API Documentation Online\n\nThe online API documentation can be time-consuming to search due to its great size.\n\nIf you want to have a browse, start at [LibreOffice API Namespaces](https://api.libreoffice.org/docs/idl/ref/namespaces.html), which takes a while to load.\n\nEach Office application (e.g. Writer, Draw, Impress, Calc, Base, Math) is supported by multiple modules. For example, most of Writer's API is in Office's \"text\" module, while Impress' functionality comes from the \"presentation\" and \"drawing\" modules. These modules are located in [com.sun.star package](https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star.html).\n\nRather than searching manually through a module for a given class, it's a lot quicker to get a search engine to do it for you. This is the purpose of my `lodoc` cli, which utilizes [Google](https://google.com). For instance, at the command line, you can type:\n\n```sh\nlodoc xtext\n```\n\nand the Office API documentation on the XText interface will open in your browser.\n\n``lodoc`` 'almost' always returns the right page, mainly because Office interfaces, and many of its services, have long unique names. (I'll explain what a service is shortly.) ``lodoc`` can be access by typing ``lodoc`` in the terminal.\n\nService names are less unusual, and so you should probably add the word \"service\" to your search. For instance, if you're looking for the Text service, type:\n\n```sh\nlodoc text service\n```\n\nModule names are also quite common words, so add \"module\" to the search. If you want to reach the \"text\" module (which implements most of Writer), search for:\n\n```sh\nlodoc text module\n```\n\nYou can call lodoc with Office application names, which are mapped to API module names. For instance:\n\n```sh\nlodoc Impress\n```\n\nbrings up the \"presentation\" module page.\n\n## Searching the Online Developer's Guide\n\nThe online Developer's Guide can also be time-consuming to search because it's both long (around 1650 pages), and poorly organized. To help, I've written a `loguide` cli which is quite similar to `lodoc`. It calls [Google](https://google.com), limiting the search to the Developer's Guide web pages, and loads the first matching page into your web browser.\n\nThe first argument of `loguide` must be an Office application name, which restricts the search to the part of the guide focusing on that application's API or otherwise, `general`.\n\nType `loguide -h` for options.\n\nGeneral example:\n\n```sh\nloguide general Lifetime of UNO Objects\n```\n\nloads the guide page with that heading into the browser. A less precise query will probably produce the same page, but even when the result is 'wrong' it'll still be somewhere in the guide.\n\nImpress example:\n\n```sh\nloguide impress Page Formatting\n```\n\nCalling `loguide` with just an application name, opens the guide at the start of the chapter on that topic. For example:\n\n```sh\nloguide writer\n```\n\nopens the guide at the start of the \"Text Documents\" chapter.\n\nCalling `loguide` with no arguments, makes the browser load the first page of the guide.\n\n## loapi\n\n`loapi` uses a local database to narrow class names and namespaces for a more focused search.\n\n### loapi comp\n\n`loapi comp` can search for a components `const`,`enum`, `exception`, `interface`, `singleton`, `service`, `struct`, `typedef` or `any`.\n\nType `loapi comp -h` to see options available for `comp`.\n\nFor example:\n\n```sh\nloapi comp --search writer\nChoose an option (default 1):\n[0],  Cancel\n[1],  UnsupportedOverwriteRequest       - com.sun.star.task.UnsupportedOverwriteRequest           - exception\n[2],  LayerWriter                       - com.sun.star.configuration.backend.xml.LayerWriter      - service\n[3],  ManifestWriter                    - com.sun.star.packages.manifest.ManifestWriter           - service\n[4],  Writer                            - com.sun.star.xml.sax.Writer                             - service\n[5],  XCompatWriterDocProperties        - com.sun.star.document.XCompatWriterDocProperties        - interface\n[6],  XManifestWriter                   - com.sun.star.packages.manifest.XManifestWriter          - interface\n[7],  XSVGWriter                        - com.sun.star.svg.XSVGWriter                             - interface\n[8],  XWriter                           - com.sun.star.xml.sax.XWriter                            - interface\n```\n\nChoosing any number greater than `0` opens the that components url.\nOption `4` would open to <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1xml_1_1sax_1_1Writer.html>\n\nSearch can be narrowed by including `--component-type` option.\n\n```sh\nloapi comp --component-type service --search writer\nChoose an option (default 1):\n[0],  Cancel\n[1],  LayerWriter                       - com.sun.star.configuration.backend.xml.LayerWriter      - service\n[2],  ManifestWriter                    - com.sun.star.packages.manifest.ManifestWriter           - service\n[3],  Writer                            - com.sun.star.xml.sax.Writer                             - service\n```\n\nA search parameter can be more that one word.\n\nFor example:\n\n```sh\nloapi comp --component-type exception --search \"ill arg\"\nChoose an option (default 1):\n[0],  Cancel\n[1],  IllegalArgumentIOException        - com.sun.star.frame.IllegalArgumentIOException           - exception\n[2],  IllegalArgumentException          - com.sun.star.lang.IllegalArgumentException              - exception\n```\n\nsearches for all components of type `exception` that contain `ill` followed by any number of characters and then `arg`.\n\n\n### loapi ns\n\nSimilar to `loapi comp`, `loapi ns` search strictly in namespaces.\n\nType `loapi ns -h` to see options available for `ns`.\n\nFor example:\n\n```sh\nloapi ns --search xml\nChoose an option (default 1):\n[0],  Cancel\n[1],  com.sun.star.xml\n[2],  com.sun.star.xml.crypto.sax\n[3],  com.sun.star.xml.dom\n[4],  com.sun.star.xml.crypto\n[5],  com.sun.star.xml.xslt\n[6],  com.sun.star.xml.input\n[7],  com.sun.star.xml.sax\n[8],  com.sun.star.xml.wrapper\n[9],  com.sun.star.xml.xpath\n[10], com.sun.star.xml.dom.views\n```\n\nChoosing any number greater than `0` opens the that components url.\nOption `4` would open to <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1xml_1_1crypto.html>\n\n## loproc\n\nWhile developing/debugging code, it's quite easy to inadvertently trigger a runtime exception in the Office API. In the worst case, this can cause your program to exit without shutting down the *soffice* process.\n\n`loproc --running` show if the process is running.\n\n`loproc --kill` kills the process if it is running.\n\nThere is no issue running `loproc --kill` without running `loproc --running`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Amourspirit/python_lo_dev_search",
    "keywords": "libreoffice,openofficesearch,searchengine,uno,ooouno,pyuno",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lo-dev-search",
    "package_url": "https://pypi.org/project/lo-dev-search/",
    "platform": null,
    "project_url": "https://pypi.org/project/lo-dev-search/",
    "project_urls": {
      "Homepage": "https://github.com/Amourspirit/python_lo_dev_search"
    },
    "release_url": "https://pypi.org/project/lo-dev-search/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7.0",
    "summary": "LibreOffice Developer Search Engine",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17511248,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2b508922f38ee5606c91fcd66ccab438e530b3d861bf3b196d66bda48eca3f5",
        "md5": "5e0e1742f43ef73b55bc868dcb3963f6",
        "sha256": "53058fab6407b5bf4630c2aa983fd6064b76408fe03405a5795fdc10099c78b0"
      },
      "downloads": -1,
      "filename": "lo_dev_search-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5e0e1742f43ef73b55bc868dcb3963f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 1341790,
      "upload_time": "2022-07-12T00:27:34",
      "upload_time_iso_8601": "2022-07-12T00:27:34.879704Z",
      "url": "https://files.pythonhosted.org/packages/c2/b5/08922f38ee5606c91fcd66ccab438e530b3d861bf3b196d66bda48eca3f5/lo_dev_search-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ba4ca456f2f62d1fb080e70a69860db178251fd049f86020b8869d110c40135",
        "md5": "1150b12bedcbba445d76c23ee0b4a08d",
        "sha256": "faa343c928914529f8f2e428476aa6453642dc7864044eeb04d3594f9d593f7b"
      },
      "downloads": -1,
      "filename": "lo-dev-search-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1150b12bedcbba445d76c23ee0b4a08d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 1323589,
      "upload_time": "2022-07-12T00:27:38",
      "upload_time_iso_8601": "2022-07-12T00:27:38.121033Z",
      "url": "https://files.pythonhosted.org/packages/6b/a4/ca456f2f62d1fb080e70a69860db178251fd049f86020b8869d110c40135/lo-dev-search-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}