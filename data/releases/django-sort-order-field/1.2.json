{
  "info": {
    "author": "Dylan McCall",
    "author_email": "dylan@dylanmccall.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "================\nSort Order Field\n================\n\nSort Order Field provides a Django model field for controlling sort order.\nThe field includes an admin widget which makes it easy to arrange related\nmodels in an inline form.\n\nAt the moment, the admin widget assumes it is the only field which controls\nordering for its model, and it has no awareness of the sort direction. This\nis less powerful than other sort field libraries, but its design may be\nuseful for certain situations.\n\n.. figure:: https://raw.githubusercontent.com/dylanmccall/django-sort-order-field/1.0/docs/images/sort-buttons.gif\n   :alt: screencast showing sort buttons in action\n\n   Easy to use sort buttons.\n\n.. figure:: https://raw.githubusercontent.com/dylanmccall/django-sort-order-field/1.0/docs/images/keyboard-navigation.gif\n   :alt: screencast showing sort buttons in action\n\n   Accessible keyboard navigation and non-sequential sort indexes.\n\n\n\nInstallation\n------------\n\nAdd \"sort_order_field\" to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = [\n        ...\n        'sort_order_field',\n    ]\n\nBasic usage\n-----------\n\nAdd a SortOrderField to one of your models::\n\n    from django.db import models\n    from sort_order_field import SortOrderField\n\n    class Poll(models.Model):\n        question = models.CharField(max_length=100)\n\n    class PollOption(models.Model):\n        class Meta:\n            ordering = ('sort_order',)\n\n        poll = models.ForeignKey('Poll', on_delete=models.CASCADE)\n        sort_order = SortOrderField(_(\"Sort\"))\n        label = models.CharField(max_length=100)\n\nAdd the sortable model to an inline model admin for your parent model::\n\n    from django.contrib import admin\n    from . import models\n\n    class PollOptionInline(admin.TabularInline):\n        model = models.PollOption\n        fields = ('sort_order', 'label',)\n\n    @admin.register(models.Poll)\n    class PollAdmin(admin.ModelAdmin):\n        fields = ('question',)\n        inlines = (PollOptionInline,)\n\nThe sort order field will be rendered as a text field with JavaScript\nenhancements. When the user enters a new sort order value, the inline forms\nwill be reorganized according to that value. The sort order fields will be\nbound by their initial values, which helps to avoid conflicts if the same\nobjects appear in different inlines.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dylanmccall/django-sort-order-field",
    "keywords": "django sort field",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sort-order-field",
    "package_url": "https://pypi.org/project/django-sort-order-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sort-order-field/",
    "project_urls": {
      "Homepage": "https://github.com/dylanmccall/django-sort-order-field"
    },
    "release_url": "https://pypi.org/project/django-sort-order-field/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django model field for controlling sort order.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7346472,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "961fb0d19313ec6e588adc5c74f369da045cb9bf8f61176a72fdb1dd31b0ab65",
        "md5": "12cce7a22d9a327c6b7b92ab030bea7d",
        "sha256": "6a68e3f28f50319430bbbb7dd3cb9b8b880b8b2b9f7f28a00e40f809ae3de014"
      },
      "downloads": -1,
      "filename": "django_sort_order_field-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12cce7a22d9a327c6b7b92ab030bea7d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7601,
      "upload_time": "2020-05-28T18:20:31",
      "upload_time_iso_8601": "2020-05-28T18:20:31.219678Z",
      "url": "https://files.pythonhosted.org/packages/96/1f/b0d19313ec6e588adc5c74f369da045cb9bf8f61176a72fdb1dd31b0ab65/django_sort_order_field-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19711af3458400c270ac56fffdbf826c8bea74a56fe1bc3d0d1b5909148d333e",
        "md5": "bd43d7c8df034b03206869c5b4aaf22a",
        "sha256": "67f8556102b1e740e3712bb9bb0c6c3e63b90c85938a86272e1aaee606ae0650"
      },
      "downloads": -1,
      "filename": "django-sort-order-field-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bd43d7c8df034b03206869c5b4aaf22a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6532,
      "upload_time": "2020-05-28T18:20:32",
      "upload_time_iso_8601": "2020-05-28T18:20:32.538083Z",
      "url": "https://files.pythonhosted.org/packages/19/71/1af3458400c270ac56fffdbf826c8bea74a56fe1bc3d0d1b5909148d333e/django-sort-order-field-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}