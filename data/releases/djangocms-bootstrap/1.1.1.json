{
  "info": {
    "author": "Jacob Rief",
    "author_email": "jacob.rief@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# djangocms-bootstrap\n\nSome templates and templatetags to be used with django-CMS and Bootstrap3/Bootstrap4.\n\nDjango-CMS is frontend agnostic, which is a good thing. However, in combination with Bootstrap3/4\nthe menu structure does not quite fit. This is because Bootstrap3/4 only allows one nested menu level.\n\n[![PyPI](https://img.shields.io/pypi/pyversions/djangocms-bootstrap.svg)]()\n[![PyPI version](https://img.shields.io/pypi/v/djangocms-bootstrap.svg)](https://https://pypi.python.org/pypi/djangocms-bootstrap)\n[![PyPI](https://img.shields.io/pypi/l/djangocms-bootstrap.svg)]()\n[![Twitter Follow](https://img.shields.io/twitter/follow/shields_io.svg?style=social&label=Follow&maxAge=2592000)](https://twitter.com/jacobrief)\n\n\n## Rendering a django-CMS menu\n\n**djangocms-bootstrap** adds a few modified templatetags, which render the existing page tree into a\nmenu structure, suitable for the navbar in Bootstrap3/4.\n\nWith the concept of *mobile first*, there is no mouse-over event we could use to open a drop-down\nelement showing the sub-menu-items. Instead the user has to click onto the main menu item in order\nto open a drop-down element. Now however, there wouldn't be any more distinction between clicking\nonto a menu-item to either open the drop-down or to click onto the page referenced by that menu\nitem.\n\n![Dropdown-Menu](https://raw.githubusercontent.com/jrief/djangocms-bootstrap/master/assets/navbar.png)\n\nIn this example **djangocms-bootstrap** uses a special templatetag to render the navbar. Here the\nCMS page *Catalog* has three children. Clicking onto *Catalog* in the navbar, opens a drop-down menu,\nwhich contains another entry for *Catalog*. This is the link which sends us onto the desired page.\nUsing this approach we can navigate through a django-CMS page-tree, without having to use the\nmouse-over effect to open drop-down menus.\n\n\n### Usage\n\nRendering the navbar to show a menu to navigate though the page-tree in **django-CMS**: \n\n```html\n{% load bootstrap_tags %}\n\n<div class=\"container\">\n  <nav class=\"navbar\" role=\"navigation\">\n    <ul class=\"navbar-nav mr-auto\">\n      {% main_menu \"bootstrap4/menu/navbar.html\" %}\n    </ul>\n  </nav>\n</div>\n```\n\nThe templatetag `{% main_menu ... %}` takes an extra parameter, `template`, which can be used to\nfine-tune the rendering of the navigation items. Also note that only CMS pages, where the checkbox\nfor \"Menu\" is active, show up in the navbar.\n\nIn Bootstrap-3 and 4, the navigation bar normally is much more than the short snippet shown above.\nTherefore **djangocms-bootstrap** is shipped with two HTML snippets, which do the heavy lifting and\nwhich shall be included in the base template of your project. By using\n`{% include \"bootstrap4/includes/nav-navbar.html\" %}` in addition to the navbar, a branding icon\nand a navbar toggle button is rendered, all according to the Bootstrap's style guides.\n\nBy appending `with navbar_classes=\"navbar-light bg-light fixed-top\"` to the `include` statement,\none can style the navbar using the provided CSS classes.\n\n\n## Chosing the language in django-CMS\n\nIf **django-CMS** is configured to run in a multilingual environment, often it is desirable to add\nan option, allowing the user the select his native language. For this purpose **djangocms-bootstrap**\noffers a templatetag `language_chooser` rendering a drop-down menu with all languages available\nthrough the CMS. To render this select options, add this HTML snippet inside or above of the main\nnavbar:\n\n```html\n{% language_chooser \"bootstrap4/includes/language-chooser.html\" %}\n```\n\n![Language Chooser](https://raw.githubusercontent.com/jrief/djangocms-bootstrap/master/assets/language-chooser.png)\n\n\n## Render secondary menus\n\nWrite the docs.\n\n\n## Rendering a paginator\n\nThe Django list view class `django.views.generic.ListView`, by default adds a Paginator object to\nthe rendering context, if there is the member attribute `paginate_by = ...`. To render this\npaginator following Bootstrap's best practices, add this HTML snippet above or below the list of\nitems you are going to render:\n\n```html\n{% load bootstrap_tags %}\n\n<nav aria-label=\"Paginator example\">{% paginator %}</nav>\n```\n\n![Paginator](https://raw.githubusercontent.com/jrief/djangocms-bootstrap/master/assets/paginator.png)\n\nBy prepending `{% with paginator_classes=\"pagination justify-content-center\" %}` to the `paginator`\nstatement, one can style the paginator using the provided CSS classes. Don't forget to append\n`{% endwith %}` afterwards.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrief/djangocms-bootstrap",
    "keywords": "django-cms,bootstrap-3,bootstrap-4",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangocms-bootstrap",
    "package_url": "https://pypi.org/project/djangocms-bootstrap/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/djangocms-bootstrap/",
    "project_urls": {
      "Homepage": "https://github.com/jrief/djangocms-bootstrap"
    },
    "release_url": "https://pypi.org/project/djangocms-bootstrap/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Templates and templatetags to be used with django-CMS with Bootstrap3 or Bootstrap4.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6004622,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffbca8f6acf8629ecad031303f51c3daf46d2b699cca4a3d545cb6f0c428cb0d",
        "md5": "6f2ee5ccd52349b7663c7fbcb998ddb9",
        "sha256": "57084cfc7076afa67495b79b717af8ca26835cacc373dd528c3006bd5247aed6"
      },
      "downloads": -1,
      "filename": "djangocms-bootstrap-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6f2ee5ccd52349b7663c7fbcb998ddb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10012,
      "upload_time": "2019-06-12T19:12:35",
      "upload_time_iso_8601": "2019-06-12T19:12:35.152581Z",
      "url": "https://files.pythonhosted.org/packages/ff/bc/a8f6acf8629ecad031303f51c3daf46d2b699cca4a3d545cb6f0c428cb0d/djangocms-bootstrap-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}