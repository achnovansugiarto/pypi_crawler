{
  "info": {
    "author": "ICRAR DIA Group",
    "author_email": "dfms_prototype@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# dlg-nifty-components\n\n[![codecov](https://codecov.io/gh/ICRAR/dlg-nifty-components/branch/main/graph/badge.svg?token=dlg-nifty-components_token_here)](https://codecov.io/gh/ICRAR/dlg-nifty-components)\n[![CI](https://github.com/ICRAR/dlg-nifty-components/actions/workflows/main.yml/badge.svg)](https://github.com/ICRAR/dlg-nifty-components/actions/workflows/main.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\ndlg-nifty-components contains a collection of cpu and gpu nifty gridding/degridding implementations for radio interferometry datasets.\n\n## Installation\n\nThere are multiple options for the installation, depending on how you are intending to run the DALiuGE engine, directly in a virtual environment (host) or inside a docker container. You can also install it either from PyPI (latest released version).\n\n## Install it from PyPI\n\n### Prerequisites\n\nThe following packages are required before installation such that dlg-nifty-components can compile it's dependencies:\n* g++\n* python3-dev\n* numpy\n* cuda-libraries-dev\n\n### DALiuGE Engine Python App in Docker Container\n\nFor development purposes it is preferable to install and run dlg-nifty-components as a python app for fast recompilation of dynamically linked binaries. To do this you must first install a cuda version in daliuge-common or daliuge-engine followed by python-dev, numpy and g++. daliuge-nifty-components will then compile and install wagg for cuda acceleration.\n\ndaliuge-common/Dockerfile.dev\n\n```bash\nRUN apt install -y wget gnupg2 software-properties-common\nRUN mkdir -p /code && cd /code && \\\n    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin && \\\n    mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub && \\\n    add-apt-repository \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /\" && \\\n    apt update\n\nRUN DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install \\\n    cuda-minimal-build-11-2 cuda-libraries-11-2 cuda-libraries-dev-11-2 && \\\n    ln -s /usr/local/cuda-11.2 /usr/local/cuda && \\\n    ln -s /usr/local/cuda/targets/x86_64-linux/lib /usr/local/cuda/lib && \\\n    ln -s /usr/local/cuda/targets/x86_64-linux/include /usr/local/cuda/include\n```\n\ndaliuge-engine/Dockerfile.dev\n\n```bash\nRUN apt install -y python3-dev g++\n```\n\nrun_engine.sh\n\n```bash\n# append configured nvidia-docker arguments here, e.g.\nDOCKER_OPTS=$DOCKER_OPTS --gpus=all --privileged\n```\n\ndlg-nifty-components may be installed before or after DALiuGE engine is running:\n\n```bash\ndocker exec -t daliuge-engine bash -c 'pip install --prefix=$DLG_ROOT/code dlg_nifty_components'\n```\n\n### EAGLE Palette\n\nAn EAGLE .palette file can be conveniently generated locally using command:\n\n```bash \nbash ./build_palatte.sh\n```\n\n## Usage\n\n### Python\n\nFor example the MS2DirtyApp component will be available to the engine when you specify\n\n```python\nfrom daliuge_component_nifty import MS2DirtyApp\n\nMS2DirtyApp('a','a')\n```\n\nin the AppClass field of a Python Branch component. The EAGLE palette associated with these components are also generated and can be loaded directly into EAGLE. In that case all the fields are correctly populated for the respective components.\n\n### DALiuGE Docker App\n\nOptionallyb uild the container image for use as a daliuge docker app:\n\n```bash\ndocker build -t dlg-nifty-components -f ./Containerfile .\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ICRAR/dlg-nifty-components",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dlg-nifty-components",
    "package_url": "https://pypi.org/project/dlg-nifty-components/",
    "platform": null,
    "project_url": "https://pypi.org/project/dlg-nifty-components/",
    "project_urls": {
      "Homepage": "https://github.com/ICRAR/dlg-nifty-components"
    },
    "release_url": "https://pypi.org/project/dlg-nifty-components/1.1.0/",
    "requires_dist": [
      "daliuge-engine (>=2.1.0)",
      "numpy (>=1.20.0)",
      "ducc0 (>=0.21.0)",
      "ska-gridder-nifty-cuda (>=0.3.0) ; extra == 'cuda'",
      "pytest ; extra == 'test'",
      "coverage ; extra == 'test'",
      "flake8 ; extra == 'test'",
      "black ; extra == 'test'",
      "isort ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "codecov ; extra == 'test'",
      "mypy ; extra == 'test'",
      "gitchangelog ; extra == 'test'",
      "mkdocs ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "nifty gridding components for daliuge-engine created by ICRAR",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13474774,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dde336980f161c12e5b020668827b965a9efe71e408330a17349135d3ac46a4",
        "md5": "1c78975e11313376d1e9b0157664bf8c",
        "sha256": "9bd78218a246bf50bddd861f241eed4e28e78566d75088132ff05ceca1ab4371"
      },
      "downloads": -1,
      "filename": "dlg_nifty_components-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c78975e11313376d1e9b0157664bf8c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10924,
      "upload_time": "2022-04-11T07:54:48",
      "upload_time_iso_8601": "2022-04-11T07:54:48.167793Z",
      "url": "https://files.pythonhosted.org/packages/6d/de/336980f161c12e5b020668827b965a9efe71e408330a17349135d3ac46a4/dlg_nifty_components-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a84811682f143b08946da3eff12ccf8b4ec45a54692f49b555878007f4082297",
        "md5": "3daba2f65f8a04cdbe0d0ca340d27c24",
        "sha256": "fd2dad0f24781018b38117cd35bf1bdc06e8a4233f467cf741169f1ac791ad4a"
      },
      "downloads": -1,
      "filename": "dlg_nifty_components-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3daba2f65f8a04cdbe0d0ca340d27c24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10134,
      "upload_time": "2022-04-11T07:54:49",
      "upload_time_iso_8601": "2022-04-11T07:54:49.309565Z",
      "url": "https://files.pythonhosted.org/packages/a8/48/11682f143b08946da3eff12ccf8b4ec45a54692f49b555878007f4082297/dlg_nifty_components-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}