{
  "info": {
    "author": "Krzysztof Chalupka",
    "author_email": "janchatko@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": ".. image:: https://img.shields.io/badge/License-MIT-yellow.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: License\n\n*A Decision Tree (Conditional) Independence Test (DTIT).*\n\nIntroduction\n-----------\nLet *x, y, z* be random variables. Then deciding whether *P(y | x, z) = P(y | z)* \ncan be difficult, especially if the variables are continuous. This package \nimplements a simple yet efficient and effective conditional independence test,\ndescribed in [link to arXiv when we write it up!]. Important features that differentiate\nthis test from competition:\n\n* It is fast. Worst-case speed scales as O(n_data * log(n_data) * dim), where dim is max(x_dim + z_dim, y_dim). However, amortized speed is O(n_data * log(n_data) * log(dim)).\n\n* It applies to cases where some of x, y, z are continuous and some are discrete, or categorical (one-hot-encoded).\n\n* It is very simple to understand and modify.\n\n* It can be used for unconditional independence testing with almost no changes to the procedure.\n\nWe have applied this test to tens of thousands of samples of thousand-dimensional datapoints in seconds. For smaller dimensionalities and sample sizes, it takes a fraction of a second. The algorithm is described in [arXiv link coming], where we also provide detailed experimental results and comparison with other methods. However for now, you should be able to just look through the code to understand what's going on -- it's only 90 lines of Python, including detailed comments!\n\nUsage\n-----\nBasic usage is simple, and the default settings should work in most cases. To perform an *unconditional test*, use dtit.test(x, y):\n\n.. code:: python\n\n  import numpy as np\n  from dtit import dtit\n\n  x = np.random.rand(1000, 1)\n  y = np.random.randn(1000, 1)\n\n  pval_i = dtit.test(x, y) # p-value should be uniform on [0, 1].\n  pval_d = dtit.test(x, x + y) # p-value should be very small.\n\nTo perform a conditional test, just add the third variable z to the inputs:\n\n.. code:: python\n\n  import numpy as np\n  from dtit import dtit\n\n  # Generate some data such that x is indpendent of y given z.\n  n_samples = 1000\n  z = np.random.dirichlet(alpha=np.ones(2), size=n_samples)\n  x = np.vstack([np.random.multinomial(20, p) for p in z]).astype(float)\n  y = np.vstack([np.random.multinomial(20, p) for p in z]).astype(float)\n\n  # Check that x and y are dependent (p-value should be uniform on [0, 1]).\n  pval_d = dtit.test(x, y)\n  # Check that z d-separates x and y (the p-value should be small).\n  pval_i = dtit.test(x, y, z)\n\nInstallation\n-----------\npip install dtit\n\n\nRequirements\n------------\nTested with Python 3.6 and\n\n    * numpy >= 1.12\n    * scikit-learn >= 0.18.1\n    * scipy >= 0.16.1\n\n.. _pip: http://www.pip-installer.org/en/latest/\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kjchalup/dtit",
    "keywords": "machine learning statistics decision trees",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtit",
    "package_url": "https://pypi.org/project/dtit/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtit/",
    "project_urls": {
      "Homepage": "https://github.com/kjchalup/dtit"
    },
    "release_url": "https://pypi.org/project/dtit/1.2.0/",
    "requires_dist": [
      "joblib",
      "numpy",
      "scipy",
      "sklearn"
    ],
    "requires_python": "",
    "summary": "A decision-tree based conditional independence test",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3454597,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b4e2be0f32e3d37fba98112ee9eb8c6f7e31f468a66f0acb3951a1e382033a3",
        "md5": "00ca3ef53ac29ffe86cfbd26703a2a1c",
        "sha256": "be31eb8b42b882f5f149d0c413ab53ed37128b1282ed5d3a379b7d59fb7a2549"
      },
      "downloads": -1,
      "filename": "dtit-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "00ca3ef53ac29ffe86cfbd26703a2a1c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7623,
      "upload_time": "2018-01-01T15:24:49",
      "upload_time_iso_8601": "2018-01-01T15:24:49.941618Z",
      "url": "https://files.pythonhosted.org/packages/1b/4e/2be0f32e3d37fba98112ee9eb8c6f7e31f468a66f0acb3951a1e382033a3/dtit-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f90ef65ee82665740e4cd1caa8e9e6fe56e2c90b63d74bcdf8c54afe0dfc169",
        "md5": "4552cf8041f9d3b2f067c1732fb2ff08",
        "sha256": "b352ef77bee229f1fc987205c725792098fb5f3294a70e5619592fc9673f133f"
      },
      "downloads": -1,
      "filename": "dtit-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4552cf8041f9d3b2f067c1732fb2ff08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5854,
      "upload_time": "2018-01-01T15:24:51",
      "upload_time_iso_8601": "2018-01-01T15:24:51.926030Z",
      "url": "https://files.pythonhosted.org/packages/6f/90/ef65ee82665740e4cd1caa8e9e6fe56e2c90b63d74bcdf8c54afe0dfc169/dtit-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}