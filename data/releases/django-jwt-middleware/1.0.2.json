{
  "info": {
    "author": "Rizki",
    "author_email": "rizkimaulana348@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django_jwt_middleware\n\n`django_jwt_middleware` is a package used for authorize django request with JSON Web Tokens\n\n## 1. Installation\n\n```bash\npip3 install django-jwt-middleware\n```\n\nor clone\n\n```bash\ngit clone https://github.com/rizki4106/django_jwt_middleware.git\n```\n\n<hr/>\n\n## 2. Example\n\n### with http cookie\n\nIf you store jwt key on cookie you can use `@verify_jwt_cookie` decorator\n\n```python\nfrom django_jwt_middleware import verify_jwt_cookie\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@verify_jwt_cookie(cookie_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@verify_jwt_cookie` takes 3 arguments\n\n| name        | type   | description                                        |\n| ----------- | ------ | -------------------------------------------------- |\n| cookie_name | string | name of cookie that store your jwt token           |\n| jwt_key     | string | jsonwebtoken secret key                            |\n| algoritm    | string | algorithm to decoded your jwt key default is HS256 |\n\n<hr/>\n\n### With http headers\n\nIf you store jwt key http headers you can use `@verify_jwt_header` decorator\n\n```python\nfrom django_jwt_middleware import verify_jwt_header\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@verify_jwt_header(header_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@verify_jwt_header` takes 3 arguments\n\n| name        | type   | description                                        |\n| ----------- | ------ | -------------------------------------------------- |\n| header_name | string | name of header that store your jwt token           |\n| jwt_key     | string | jsonwebtoken secret key                            |\n| algoritm    | string | algorithm to decoded your jwt key default is HS256 |\n\n## 3. Response\n\n| Type    | Description                                        |\n| ------- | -------------------------------------------------- |\n| success | Will continue to request destination               |\n| failed  | Return http status code 403 with the message in it |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rizki4106/django_jwt_middleware",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jwt-middleware",
    "package_url": "https://pypi.org/project/django-jwt-middleware/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-jwt-middleware/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rizki4106/django_jwt_middleware/issues",
      "Homepage": "https://github.com/rizki4106/django_jwt_middleware"
    },
    "release_url": "https://pypi.org/project/django-jwt-middleware/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Authorize request with JSON Web Tokens",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12402617,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db6bb8ecf610fc2f14f948d2398bc899d51c7cb6e4e6cdfc256846c5ffc3615c",
        "md5": "d684577ce7fe2a81867ee44b237f9273",
        "sha256": "f0d47392a73ffe892bf697ba0346e03cd3bcc66c18b9cd9ac2dc9e8b5d878b7f"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d684577ce7fe2a81867ee44b237f9273",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3901,
      "upload_time": "2021-12-23T07:48:52",
      "upload_time_iso_8601": "2021-12-23T07:48:52.480955Z",
      "url": "https://files.pythonhosted.org/packages/db/6b/b8ecf610fc2f14f948d2398bc899d51c7cb6e4e6cdfc256846c5ffc3615c/django_jwt_middleware-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a41b74b7c7a2afde059b33c0fa8c6403a549fb2e254372c623a966b76d85cef4",
        "md5": "a352daebfcb2d4c1b2391d5ddfc08c93",
        "sha256": "913da0418fbb5b8f51b9f244e9a7bde175a120ab0537641c87055306cbfa789c"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a352daebfcb2d4c1b2391d5ddfc08c93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3341,
      "upload_time": "2021-12-23T07:48:56",
      "upload_time_iso_8601": "2021-12-23T07:48:56.680386Z",
      "url": "https://files.pythonhosted.org/packages/a4/1b/74b7c7a2afde059b33c0fa8c6403a549fb2e254372c623a966b76d85cef4/django_jwt_middleware-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}