{
  "info": {
    "author": "Rizki",
    "author_email": "rizkimaulana348@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django_jwt_middleware\n\n`django_jwt_middleware` is a package used for authorize django request with JSON Web Tokens\n\n## 1. Installation\n\n```bash\npip3 install django-jwt-middleware\n```\n\nor clone\n\n```bash\ngit clone https://github.com/rizki4106/django_jwt_middleware.git\n```\n\n<hr/>\n\n## 2. Example\n\n### with http cookie\n\nIf you store jwt key on cookie you can use `@middleware.with_cookie` decorator\n\n```python\nfrom django_jwt_middleware import middleware\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@middleware.with_cookie(cookie_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@middleware.with_cookie` takes 3 arguments\n\n| name        | type   | description                                        |\n| ----------- | ------ | -------------------------------------------------- |\n| cookie_name | string | name of cookie that store your jwt token           |\n| jwt_key     | string | jsonwebtoken secret key                            |\n| algoritm    | string | algorithm to decoded your jwt key default is HS256 |\n\n<hr/>\n\n### With http headers\n\nIf you store jwt key http headers you can use `@middleware.with_header` decorator\n\n```python\nfrom django_jwt_middleware import middleware\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@middleware.with_header(header_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@middleware.with_header` takes 3 arguments\n\n| name        | type   | description                                        |\n| ----------- | ------ | -------------------------------------------------- |\n| header_name | string | name of header that store your jwt token           |\n| jwt_key     | string | jsonwebtoken secret key                            |\n| algoritm    | string | algorithm to decoded your jwt key default is HS256 |\n\n## 3. Response\n\n| Type    | Description                                        |\n| ------- | -------------------------------------------------- |\n| success | Will continue to request destination               |\n| failed  | Return http status code 403 with the message in it |\n\n## 4. Discovered Problems\n\nif you get error and it said `jwt has no attribute decode` try this command\n\n```bash\npip3 uninstall pyjwt\npip3 install pyjwt\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rizki4106/django_jwt_middleware",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jwt-middleware",
    "package_url": "https://pypi.org/project/django-jwt-middleware/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-jwt-middleware/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rizki4106/django_jwt_middleware/issues",
      "Homepage": "https://github.com/rizki4106/django_jwt_middleware"
    },
    "release_url": "https://pypi.org/project/django-jwt-middleware/1.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Authorize request with JSON Web Tokens",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12402617,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19ba09adf2c0ade4ce0ec432a52601b4fa944b71f1d41fbdab2dfa3cdf392b0e",
        "md5": "7bd0d92475d239c7dee317ed58591ff6",
        "sha256": "70616e30049e22befc425d1c01e98c62cc179db5a0ca0f67d982c1981784569e"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bd0d92475d239c7dee317ed58591ff6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4011,
      "upload_time": "2021-12-25T09:02:19",
      "upload_time_iso_8601": "2021-12-25T09:02:19.990892Z",
      "url": "https://files.pythonhosted.org/packages/19/ba/09adf2c0ade4ce0ec432a52601b4fa944b71f1d41fbdab2dfa3cdf392b0e/django_jwt_middleware-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f115359f3c6946982e49d458036005ca789949dc024fe68713452b1f58485db",
        "md5": "86f86633f93e180ec11cbfd1bd5461d1",
        "sha256": "fcc0ce419cfbbbe3e53cc0257de984edea45ba1176e4359761737960731548c7"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "86f86633f93e180ec11cbfd1bd5461d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3408,
      "upload_time": "2021-12-25T09:02:21",
      "upload_time_iso_8601": "2021-12-25T09:02:21.825035Z",
      "url": "https://files.pythonhosted.org/packages/9f/11/5359f3c6946982e49d458036005ca789949dc024fe68713452b1f58485db/django_jwt_middleware-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}