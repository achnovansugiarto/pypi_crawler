{
  "info": {
    "author": "Rizki",
    "author_email": "rizkimaulana348@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django_jwt_middleware\n\n`django_jwt_middleware` is a package used for authorize django request with JSON Web Tokens\n\n## 1. Installation\n\n```bash\npip3 install django_jwt_middleware\n```\n\nor clone\n\n```bash\ngit clone https://github.com/rizki4106/django_jwt_middleware.git\n```\n\n<hr/>\n\n## 2. Example\n\n### with http cookie\n\nIf you store jwt key on cookie you can use `@verify_jwt_cookie` decorator\n\n```python\nfrom django_jwt_middleware import verify_jwt_cookie\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@verify_jwt_cookie(cookie_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@verify_jwt_cookie` takes 3 arguments\n| name | type | description |\n| ---- | ---- | ----------- |\n| cookie_name | string | name of cookie that store your jwt token |\n| jwt_key | string | jsonwebtoken secret key |\n| algoritm | string | algorithm to decoded your jwt key default is HS256 |\n\n<hr/>\n\n### With http headers\n\nIf you store jwt key http headers you can use `@verify_jwt_header` decorator\n\n```python\nfrom django_jwt_middleware import verify_jwt_header\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@verify_jwt_header(header_name=\"example-token\", jwt_key=\"supersecretkey\", algorithm=\"HS256\")\ndef hello_world(request):\n    return Response(data={\n        \"message\": \"hello world\"\n    })\n```\n\n`@verify_jwt_header` takes 3 arguments\n| name | type | description |\n| ---- | ---- | ----------- |\n| header_name | string | name of header that store your jwt token |\n| jwt_key | string | jsonwebtoken secret key |\n| algoritm | string | algorithm to decoded your jwt key default is HS256 |\n\n## 3. Response\n\n| Type    | Description                                        |\n| ------- | -------------------------------------------------- |\n| success | Will continue to request destination               |\n| failed  | Return http status code 403 with the message in it |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rizki4106/django_jwt_middleware",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-jwt-middleware",
    "package_url": "https://pypi.org/project/django-jwt-middleware/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-jwt-middleware/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rizki4106/django_jwt_middleware/issues",
      "Homepage": "https://github.com/rizki4106/django_jwt_middleware"
    },
    "release_url": "https://pypi.org/project/django-jwt-middleware/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Authorize request with JSON Web Tokens",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12402617,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be5d56e0257fcccb446b1c0c5e931f26ee57b76c2fc239a9ff773cf1c1451ea1",
        "md5": "37ef42e1e23f06385d9438adf5fb8ab4",
        "sha256": "84a1c2239faf18965f39ce207c2d49b17ff655a88ebb2881b408b68ccbf87cbf"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37ef42e1e23f06385d9438adf5fb8ab4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3891,
      "upload_time": "2021-12-23T07:48:50",
      "upload_time_iso_8601": "2021-12-23T07:48:50.840398Z",
      "url": "https://files.pythonhosted.org/packages/be/5d/56e0257fcccb446b1c0c5e931f26ee57b76c2fc239a9ff773cf1c1451ea1/django_jwt_middleware-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c75a06e238be3d1989fbabb9fb53718f0aaa3215c40d79d942973041d78a9304",
        "md5": "92c4ec212753fc22307ed0542bfbe012",
        "sha256": "14f0a37c9dc68017ba300a856a8614e77d5fa2041531505da2f9b6025904c5c3"
      },
      "downloads": -1,
      "filename": "django_jwt_middleware-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "92c4ec212753fc22307ed0542bfbe012",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3317,
      "upload_time": "2021-12-23T07:48:54",
      "upload_time_iso_8601": "2021-12-23T07:48:54.836072Z",
      "url": "https://files.pythonhosted.org/packages/c7/5a/06e238be3d1989fbabb9fb53718f0aaa3215c40d79d942973041d78a9304/django_jwt_middleware-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}