{
  "info": {
    "author": "oldcai",
    "author_email": "oldcai.com@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Database",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "## Introduce\nFor performance critical fields and models, and don't want to lose the convenience of getting them like attributes.\n\nYou can adding user page view by `user.statistics.visits += 1` and get the value by `user.statistics.visits.value\n`\n\n## Backends\n\n- redis\n- ssdb\n\n## Install\n`pip install django-in-memory-models`\n\n\n## Example\n\n```\nfrom in_memory.ssdb.fields import SSDBSortedIntegerField as IntegerField\n# from in_memory.redis.fields import RedisSortedIntegerField as IntegerField\n\n\n# InMemoryModel do not create tables when migrating.\n# You can add fields to django.db.models.Model directly.\nclass AccountStatistics(InMemoryModel):\n    user = InMemoryOneToOneKey(User, related_name='statistics')\n    total_subscription = IntegerField(default=0)\n\n    @classmethod\n    def get_by_user(cls, pk):\n        instance = cls(user_id=pk)\n        return instance\n\n    def __str__(self):\n        return '<Account Statistics: %s>' % self.user\n\ns = User.objects.first().statistics\ns.total_subscription.reset()\nprint(s.total_subscription.value)\ns.total_subscription += 1\nprint(s.total_subscription.value)\ns.total_subscription = 200\nprint(s.total_subscription.value)\ntop_users = s.total_subscription.top(1)\nprint(top_users)\ntop_user = top_users[0]\nprint(top_user)\nprint(top_user.user)\nprint(top_user.total_subscription.value)\n```\n\nOutput\n\n```\n0\n1\n200\n[<AccountStatistics: <Account Statistics: oldcai>>]\n<Account Statistics: oldcai>\noldcai\n200\n```\n\n## TODO\n\n- Django system cache backend\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oldcai/django-in-memory-models",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-in-memory-models",
    "package_url": "https://pypi.org/project/django-in-memory-models/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-in-memory-models/",
    "project_urls": {
      "Homepage": "https://github.com/oldcai/django-in-memory-models"
    },
    "release_url": "https://pypi.org/project/django-in-memory-models/1.0.3/",
    "requires_dist": [
      "Django"
    ],
    "requires_python": "",
    "summary": "In memory models for Django, store in memory, query with instance.attribute",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3298017,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d926d0069f549e0e0f125b13c462b920fbe83b18a6286bcea4eeb2fdbadb5e4",
        "md5": "924e47adb4e6ed98d01af38cc62a7934",
        "sha256": "57ef979e29f10459955b20204b6ce866bdcffab8269503c92ba97fe5bfe7f1c4"
      },
      "downloads": -1,
      "filename": "django_in_memory_models-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "924e47adb4e6ed98d01af38cc62a7934",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3700,
      "upload_time": "2017-10-23T06:28:05",
      "upload_time_iso_8601": "2017-10-23T06:28:05.829184Z",
      "url": "https://files.pythonhosted.org/packages/2d/92/6d0069f549e0e0f125b13c462b920fbe83b18a6286bcea4eeb2fdbadb5e4/django_in_memory_models-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80e369a7ed9c9bb9f61793a2e7b259fc317273ed5cea5fd5e62922c5c73b26cc",
        "md5": "91d64b1ff79ebc3d019b7fa37f0d9d36",
        "sha256": "80be44aee4caa73a1cb4bbecf2275c864e766d3286eb051a07d9aa25aae5c9a8"
      },
      "downloads": -1,
      "filename": "django-in-memory-models-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "91d64b1ff79ebc3d019b7fa37f0d9d36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2649,
      "upload_time": "2017-10-23T06:28:07",
      "upload_time_iso_8601": "2017-10-23T06:28:07.332051Z",
      "url": "https://files.pythonhosted.org/packages/80/e3/69a7ed9c9bb9f61793a2e7b259fc317273ed5cea5fd5e62922c5c73b26cc/django-in-memory-models-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}