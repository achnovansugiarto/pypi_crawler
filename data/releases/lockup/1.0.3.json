{
  "info": {
    "author": "Eric McDonald",
    "author_email": "python-lockup@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": ".. vim: set fileencoding=utf-8:\n.. -*- coding: utf-8 -*-\n.. +--------------------------------------------------------------------------+\n   |                                                                          |\n   | Licensed under the Apache License, Version 2.0 (the \"License\");          |\n   | you may not use this file except in compliance with the License.         |\n   | You may obtain a copy of the License at                                  |\n   |                                                                          |\n   |     http://www.apache.org/licenses/LICENSE-2.0                           |\n   |                                                                          |\n   | Unless required by applicable law or agreed to in writing, software      |\n   | distributed under the License is distributed on an \"AS IS\" BASIS,        |\n   | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. |\n   | See the License for the specific language governing permissions and      |\n   | limitations under the License.                                           |\n   |                                                                          |\n   +--------------------------------------------------------------------------+\n\n*******************************************************************************\n                                    lockup\n*******************************************************************************\n\n.. image:: https://img.shields.io/pypi/pyversions/lockup\n   :alt: Python Versions\n\n.. image:: https://img.shields.io/pypi/v/lockup\n   :alt: Project Version\n   :target: https://pypi.org/project/lockup/\n\n.. image:: https://github.com/emcd/python-lockup/actions/workflows/test.yaml/badge.svg?branch=master&event=push\n   :alt: Tests Status\n   :target: https://github.com/emcd/python-lockup/actions/workflows/test.yaml\n\n.. image:: https://codecov.io/gh/emcd/python-lockup/branch/master/graph/badge.svg?token=PA9QI9RL63\n   :target: https://app.codecov.io/gh/emcd/python-lockup\n\n.. image:: https://img.shields.io/pypi/l/lockup\n   :alt: Project License\n   :target: https://github.com/emcd/python-lockup/blob/master/LICENSE.txt\n\n`API Documentation (stable)\n<https://python-lockup.readthedocs.io/en/stable/api.html>`_\n|\n`API Documentation (current) <https://emcd.github.io/python-lockup/api.html>`_\n|\n`Code of Conduct\n<https://emcd.github.io/python-lockup/contribution.html#code-of-conduct>`_\n|\n`Contribution Guide <https://emcd.github.io/python-lockup/contribution.html>`_\n\nOverview\n===============================================================================\n\nEnables the creation of classes, modules, and namespaces on which the following\nproperties are true:\n\n* All attributes are **immutable**. Immutability increases code safety by\n  discouraging monkey-patching and preventing accidental or deliberate changes\n  to state.\n\n  .. code-block:: python\n\n    >>> import sys\n    >>> import lockup\n    >>> lockup.reclassify_module( sys )  # doctest: +SKIP\n    >>> sys.stderr = sys.stdout          # doctest: +SKIP\n    Traceback (most recent call last):\n    ...\n    lockup.exceptions.ImpermissibleAttributeOperation: Attempt to assign immutable attribute 'stderr' on module 'sys'.\n\n  .. code-block:: python\n\n    >>> import lockup\n    >>> ns = lockup.create_namespace( some_constant = 6 )\n    >>> ns.some_constant = 13\n    Traceback (most recent call last):\n    ...\n    lockup.exceptions.ImpermissibleAttributeOperation: Attempt to assign immutable attribute 'some_constant' on class 'lockup.Namespace'.\n\n* Non-public attributes are **concealed**. Concealment means that functions,\n  such as `dir <https://docs.python.org/3/library/functions.html#dir>`_, can\n  report a subset of attributes that are intended for programmers to use\n  (without directly exposing internals).\n\n  .. code-block:: python\n\n    >>> import lockup\n    >>> dir( lockup )\n    ['Class', 'Module', 'NamespaceClass', 'base', 'create_namespace', 'exceptions', 'reclassify_module']\n    >>> len( dir( lockup ) )\n    7\n    >>> len( lockup.__dict__ )  # doctest: +SKIP\n    18\n\nQuick Tour\n===============================================================================\n\n.. _`Class Factory`: https://python-lockup.readthedocs.io/en/stable/api.html#lockup.Class\n.. _Module: https://python-lockup.readthedocs.io/en/stable/api.html#lockup.Module\n.. _`Namespace Factory`: https://python-lockup.readthedocs.io/en/stable/api.html#lockup.NamespaceClass\n\nModule_\n-------------------------------------------------------------------------------\n\nLet us consider the mutable `os <https://docs.python.org/3/library/os.html>`_\nmodule from the Python standard library and how we can alter \"constants\" that\nmay be used in many places:\n\n.. code-block:: python\n\n\t>>> import os\n\t>>> os.EX_OK\n\t0\n\t>>> del os.EX_OK\n\t>>> os.EX_OK\n\tTraceback (most recent call last):\n\t...\n\tAttributeError: module 'os' has no attribute 'EX_OK'\n\t>>> os.EX_OK = 0\n\t>>> type( os )\n\t<class 'module'>\n\nNow, let us see what protection it gains from becoming immutable:\n\n.. code-block:: python\n\n\t>>> import os\n\t>>> import lockup\n\t>>> lockup.reclassify_module( os )\n\t>>> del os.EX_OK\n\tTraceback (most recent call last):\n\t...\n\tlockup.exceptions.ImpermissibleAttributeOperation: Attempt to delete indelible attribute 'EX_OK' on module 'os'.\n\t>>> os.EX_OK = 255\n\tTraceback (most recent call last):\n\t...\n\tlockup.exceptions.ImpermissibleAttributeOperation: Attempt to assign immutable attribute 'EX_OK' on module 'os'.\n\t>>> type( os )\n\t<class 'lockup.Module'>\n\n`Class Factory`_\n-------------------------------------------------------------------------------\n\nLet us monkey-patch a mutable class:\n\n.. code-block:: python\n\n\t>>> class A:\n\t...     def expected_functionality( self ): return 42\n\t...\n\t>>> a = A( )\n\t>>> a.expected_functionality( )\n\t42\n\t>>> def monkey_patch( self ):\n\t...     return 'I selfishly change behavior upon which other consumers depend.'\n\t...\n\t>>> A.expected_functionality = monkey_patch\n\t>>> a = A( )\n\t>>> a.expected_functionality( )\n\t'I selfishly change behavior upon which other consumers depend.'\n\nNow, let us try to monkey-patch an immutable class:\n\n.. code-block:: python\n\n\t>>> import lockup\n\t>>> class B( metaclass = lockup.Class ):\n\t...     def expected_functionality( self ): return 42\n\t...\n\t>>> b = B( )\n\t>>> b.expected_functionality( )\n\t42\n\t>>> def monkey_patch( self ):\n\t...     return 'I selfishly change behavior upon which other consumers depend.'\n\t...\n\t>>> B.expected_functionality = monkey_patch\n\tTraceback (most recent call last):\n\t...\n\tlockup.exceptions.ImpermissibleAttributeOperation: Attempt to assign immutable attribute 'expected_functionality' on class ...\n\t>>> type( B )\n\t<class 'lockup.Class'>\n\t>>> del type( B ).__setattr__\n\tTraceback (most recent call last):\n\t...\n\tlockup.exceptions.ImpermissibleAttributeOperation: Attempt to delete indelible attribute '__setattr__' on class 'lockup.Class'.\n\t>>> issubclass( type( B ), type )\n\tTrue\n\n.. note::\n   Only class attributes are immutable. Instances of immutable classes will\n   have mutable attributes without additional intervention beyond the scope of\n   this package.\n\n`Namespace Factory`_\n-------------------------------------------------------------------------------\n\nAn alternative to `types.SimpleNamespace\n<https://docs.python.org/3/library/types.html#types.SimpleNamespace>`_ is\nprovided. First, let us observe the behaviors on a standard namespace:\n\n.. code-block:: python\n\n\t>>> import types\n\t>>> sn = types.SimpleNamespace( run = lambda: 42 )\n\t>>> sn\n\tnamespace(run=<function <lambda> at ...>)\n\t>>> sn.run( )\n\t42\n\t>>> type( sn )\n\t<class 'types.SimpleNamespace'>\n\t>>> dir( sn )\n\t['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'run']\n\t>>> sn.__dict__\n\t{'run': <function <lambda> at ...>}\n\t>>> type( sn.run )\n\t<class 'function'>\n\t>>> sn.run = lambda: 666\n\t>>> sn.run( )\n\t666\n\t>>> sn( )\n\tTraceback (most recent call last):\n\t...\n\tTypeError: 'types.SimpleNamespace' object is not callable\n\nNow, let us compare those behaviors to an immutable namespace:\n\n.. code-block:: python\n\n    >>> import lockup\n    >>> ns = lockup.create_namespace( run = lambda: 42 )\n    >>> ns\n    NamespaceClass( 'Namespace', ('object',), { ... } )\n    >>> ns.run( )\n    42\n    >>> type( ns )\n    <class 'lockup.NamespaceClass'>\n    >>> ns.__dict__\n    mappingproxy({...})\n    >>> type( ns.run )\n    <class 'function'>\n    >>> ns.run = lambda: 666\n    Traceback (most recent call last):\n    ...\n    lockup.exceptions.ImpermissibleAttributeOperation: Attempt to assign immutable attribute 'run' on class 'lockup.Namespace'.\n    >>> ns.__dict__[ 'run' ] = lambda: 666\n    Traceback (most recent call last):\n    ...\n    TypeError: 'mappingproxy' object does not support item assignment\n    >>> ns( )\n    Traceback (most recent call last):\n    ...\n    lockup.exceptions.ImpermissibleOperation: Impermissible instantiation of class 'lockup.Namespace'.\n\nAlso of note is that we can define namespace classes directly, allowing us to\ncapture imports for internal use in a module without publicly exposing them as\npart of the module API, for example:\n\n.. code-block:: python\n\n\t>>> import lockup\n    >>> class __( metaclass = lockup.NamespaceClass ):\n    ...     from os import O_RDONLY, O_RDWR\n    ...\n    >>> __.O_RDONLY\n    0\n\nThe above technique is used internally within this package itself.\n\nExceptions\n-------------------------------------------------------------------------------\n\nExceptions can be intercepted with appropriate builtin exception classes or\nwith package exception classes:\n\n.. code-block:: python\n\n\t>>> import os\n\t>>> import lockup\n\t>>> from lockup.exceptions import InvalidOperation\n\t>>> os.O_RDONLY\n\t0\n\t>>> lockup.reclassify_module( os )\n\t>>> try: os.O_RDONLY = 15\n\t... except AttributeError as exc:\n\t...     type( exc ).mro( )\n\t...\n\t[<class 'lockup.exceptions.ImpermissibleAttributeOperation'>, <class 'lockup.exceptions.ImpermissibleOperation'>, <class 'lockup.exceptions.InvalidOperation'>, <class 'lockup.exceptions.Exception0'>, <class 'TypeError'>, <class 'AttributeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>]\n\t>>> try: os.does_not_exist\n\t... except InvalidOperation as exc:\n\t...     type( exc ).mro( )\n\t...\n\t[<class 'lockup.exceptions.InaccessibleAttribute'>, <class 'lockup.exceptions.InaccessibleEntity'>, <class 'lockup.exceptions.InvalidOperation'>, <class 'lockup.exceptions.Exception0'>, <class 'AttributeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>]\n\n.. vim: set fileencoding=utf-8:\n.. -*- coding: utf-8 -*-\n.. +--------------------------------------------------------------------------+\n   |                                                                          |\n   | Licensed under the Apache License, Version 2.0 (the \"License\");          |\n   | you may not use this file except in compliance with the License.         |\n   | You may obtain a copy of the License at                                  |\n   |                                                                          |\n   |     http://www.apache.org/licenses/LICENSE-2.0                           |\n   |                                                                          |\n   | Unless required by applicable law or agreed to in writing, software      |\n   | distributed under the License is distributed on an \"AS IS\" BASIS,        |\n   | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. |\n   | See the License for the specific language governing permissions and      |\n   | limitations under the License.                                           |\n   |                                                                          |\n   +--------------------------------------------------------------------------+\n\nChangelog\n===============================================================================\n\nv1.0.3\n-------------------------------------------------------------------------------\n\nDocumentation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Improve presentation of overview in README.\n* Properly fence Python code blocks in README for correct rendering on PyPI.\n\nv1.0.2\n-------------------------------------------------------------------------------\n\nDocumentation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Provide direct link in README to stable API documentation.\n\nv1.0.1\n-------------------------------------------------------------------------------\n\nDocumentation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Improve wording of introduction in README.\n* Add badges in README for supported Python versions, current release, code\n  coverage, and license.\n* Provide direct links in README to current API documentation, code of conduct,\n  and contribution guide.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/emcd/python-lockup",
    "keywords": "api attribute concealment immutability namespace",
    "license": "Apache-2.0",
    "maintainer": "Eric McDonald",
    "maintainer_email": "python-lockup@googlegroups.com",
    "name": "lockup",
    "package_url": "https://pypi.org/project/lockup/",
    "platform": "",
    "project_url": "https://pypi.org/project/lockup/",
    "project_urls": {
      "Documentation": "https://emcd.github.io/python-lockup",
      "Google Group": "https://groups.google.com/g/python-lockup",
      "Homepage": "https://github.com/emcd/python-lockup",
      "Source Code": "https://github.com/emcd/python-lockup"
    },
    "release_url": "https://pypi.org/project/lockup/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Immutable and concealed attributes for classes, modules, and namespaces.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15580300,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf3132a343cfbb2576bbe5029d50188bc9165178de54172dccb48d8df30cc842",
        "md5": "2a736e85d0839950bb2eaf659e19c777",
        "sha256": "fb2dddb8d90239451e7d362c022477db87dbcd8cc4ba93dc086ee05c9e11a48f"
      },
      "downloads": -1,
      "filename": "lockup-1.0.3-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "2a736e85d0839950bb2eaf659e19c777",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16892,
      "upload_time": "2021-11-25T22:15:44",
      "upload_time_iso_8601": "2021-11-25T22:15:44.661447Z",
      "url": "https://files.pythonhosted.org/packages/cf/31/32a343cfbb2576bbe5029d50188bc9165178de54172dccb48d8df30cc842/lockup-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0164613429b0a2091151e0b17202287b0dc0e350752134a5648462dd5de7857",
        "md5": "7a7c6e91f44dbfe0175199b2789aae00",
        "sha256": "8d193abf624e3b49d7122348b0515902afa24dff695357ee4889878a4e5503ca"
      },
      "downloads": -1,
      "filename": "lockup-1.0.3.tar.gz",
      "has_sig": true,
      "md5_digest": "7a7c6e91f44dbfe0175199b2789aae00",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19303,
      "upload_time": "2021-11-25T22:15:46",
      "upload_time_iso_8601": "2021-11-25T22:15:46.806861Z",
      "url": "https://files.pythonhosted.org/packages/e0/16/4613429b0a2091151e0b17202287b0dc0e350752134a5648462dd5de7857/lockup-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}