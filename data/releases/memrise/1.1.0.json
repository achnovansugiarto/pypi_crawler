{
  "info": {
    "author": "Joseph Quang",
    "author_email": "tquang.sdh20@hcmut.edu.vn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: French",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <h1 align=\"center\">Library Scraping Vocabulary Languages</h1>\n</p>\n\n## Features:\n- Support scraping the courses in MEM to take the vocabulary\n- Support scraping IPA of English Language (US and UK)\n- Support translate to your mother language\n\n## Appplication Requires\n\n### Install SQLite3 : [SQLite](https://www.sqlite.org/)\n\n### Install Library: \n<b>Window</b>\n```\n python -m pip install memrise\n```\n<b>Linux</b>\n  ```\n  pip install memrise\n  ```\n <b>macOS</b>\n ```\n sudo pip3 install mateco\n```\n## Guidelines\n\n### How to take Course ID?\n\nAccess the Website: [Memrise](https://app.memrise.com/) and copy the Course ID as the following picture:\n\n![CourseID](https://github.com/tquangsdh20/memrise/blob/main/pic/CourseID.PNG?raw=true)\n\n### Import library and initialize database\n\n```python\nfrom memrise import Course,Database\n#Create file database output\ndb = Database('English.sqlite') #Other format is .db\n#Connect to file database and init\ndb.connect()\ndb.init()\n```\n\n### Scraping course with ID\n\n```python\n#Connect the course to scraping info this maybe take a few momment.\ncourse = Course(1658724,2)\n#Update information about the course\ncourse.update(db)\n#Get all levels in course & scraping all levels information\nlevels = course.get_levels()\nfor level in levels:\n    level.update(db)\n```\n\n### Update course with your language meaning\n\nUse the method `update_db_en()` if the LANGUAGE COURSE is **English** for scraping IPA.  \nUse the method `update_db()` if the Language Course is the others.  \nAbout the parameters of two above methods are the same:  \n- `CourseID` : the ID of the course\n- `Language` : your mother language with format <i>'en', 'fr', 'ko', 'vi'...</i>\n\n```python\n#If your Course is English language use `update_db_en()`, otherwise use `update_db()` method.\ndb.update_db_en(1658724,'fr')\n```\n### Check the output with SQLite\n\nFile output\n\n![OUTPUT](https://github.com/tquangsdh20/memrise/blob/main/pic/OUTPUT.PNG?raw=true)\n\nShow the words table as the following steps: **Browse Data > Table > Word**\n\n![OUTPUT1](https://github.com/tquangsdh20/memrise/blob/main/pic/OUTPUT2.PNG?raw=true)\n\nIf you want to choose the raw meaning, you could run the following SQL statement.\n\n```SQL\nSELECT word, sub, IPA FROM words\n```\nSteps : **Execute SQL > Typing SQL Statements > Run**\n\n![OUTPUT2](https://github.com/tquangsdh20/memrise/blob/main/pic/OUTPUT3.png?raw=true)\n\n### [Github](https://github.com/tquangsdh20/memrise)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tquangsdh20/memrise",
    "keywords": "m,e,m,r,i,s,e",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memrise",
    "package_url": "https://pypi.org/project/memrise/",
    "platform": "",
    "project_url": "https://pypi.org/project/memrise/",
    "project_urls": {
      "Homepage": "https://github.com/tquangsdh20/memrise"
    },
    "release_url": "https://pypi.org/project/memrise/1.1.0/",
    "requires_dist": [
      "requests",
      "bs4",
      "mateco",
      "googletrans (==4.0.0rc1)"
    ],
    "requires_python": "",
    "summary": "Scaping MEM course infomation",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12651367,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3be27f6d91c25e5545ab214f1ccb4117749231b5a0a5b75c2386ce582df7624",
        "md5": "8310f243cc24b6c4d0a0179bceb90a08",
        "sha256": "697b6335b05d2a08b05f668d124bce5ee413ddb29bb89b97b4bf18e9d3a902e2"
      },
      "downloads": -1,
      "filename": "memrise-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8310f243cc24b6c4d0a0179bceb90a08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 87654,
      "upload_time": "2021-10-06T22:55:47",
      "upload_time_iso_8601": "2021-10-06T22:55:47.072373Z",
      "url": "https://files.pythonhosted.org/packages/f3/be/27f6d91c25e5545ab214f1ccb4117749231b5a0a5b75c2386ce582df7624/memrise-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d68c3c44d4aa97f41e4b46e2ab600f5f939ec61b758ca5b519cfd7d216b4881b",
        "md5": "a430059f8719ef6fa732ffc9bcd50214",
        "sha256": "2e31f8f754e2ace0fa5b363350ff87a203899e24cd9c55a1fa1d3c7989727c09"
      },
      "downloads": -1,
      "filename": "memrise-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a430059f8719ef6fa732ffc9bcd50214",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 88935,
      "upload_time": "2021-10-06T22:55:49",
      "upload_time_iso_8601": "2021-10-06T22:55:49.056884Z",
      "url": "https://files.pythonhosted.org/packages/d6/8c/3c44d4aa97f41e4b46e2ab600f5f939ec61b758ca5b519cfd7d216b4881b/memrise-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}