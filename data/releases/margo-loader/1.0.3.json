{
  "info": {
    "author": "",
    "author_email": "Jake Kara <jake@jakekara.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# margo-loader\n\n> Import Jupyter Notebooks notebooks as Python modules\n\n## Video tutorial\n\n[Live Coding Demo: Using Jupyter Notebooks as Python Modules with Margo Loader](https://www.youtube.com/watch?v=6EgsAb56jY0).\n\n## Demo Notebooks\n\n* [Official tutorial (GitHub)](https://github.com/margo-notebooks/modular-notebook-tutorial) on using Margo loader to write Modular Jupyter notebooks. [Binder](https://mybinder.org/v2/gh/margo-notebooks/modular-notebook-tutorial/HEAD)\n* [Quick demo notebook (Google Colab)](https://colab.research.google.com/drive/1X1vuPRrj7SOpGl71wFCwFNgX40W18Kyl#scrollTo=WyrdS8A06eA6) in Google Colaboratory (no install needed).\n* [A more realistic suite of notebooks (GitHub)](https://github.com/jakekara/color-extraction-methodology) for background deletion and color extraction on William Blake prints, written for the Yale Digital Humanities Lab. [Binder](https://mybinder.org/v2/zenodo/10.5281/zenodo.7709475/)\n\n## Installation\n\nTo install margo-loader, run:\n\n```bash\npip install git+https://github.com/margo-notebooks/margo-loader-py\n```\n\n## Importing a notebook\n\nAssuming you have a file called \"notebook.ipynb\":\n\n```python\nimport margo_loader\nimport notebook\n```\n\n## ignore-cell\n\nNot every cell in a Notebook makes sense to include in its module representation.\n\nIf you want to prevent a cell from being exported, start the cell with the specially-formatted comment line `# :: ignore-cell ::`, like this:\n\n```python\n# :: ignore-cell ::\nprint(\"This code will not be executed when imported with margo-loader\")\n```\n\nThis special code comment is called a Margo note. Margo notes in Python cells begin with `# ::` to differentiate them from regular comments, and end with `::`.\n\nLearn more about the underlying Margo syntax [here](https://github.com/jakekara/nbdl/).\n\nAn alias for `ignore-cell` is `skip`. So this does the same thing:\n\n```python\n# :: skip ::\nprint(\"This code will not be executed when imported with margo-loader\")\n``` \n## Creating virtual submodules\n\nYou can organize code cells into virtual submodules within\na notebook. This in effect allows you to group cells from the same notebook.\nHere's an example of a few cells from the file\n`test_notebooks/greetings.ipynb` in this repo.\n\n```python\n# greetings.ipynb\n# :: submodule: \"grumpy\" ::\ndef say_hello(to=\"world\"):\n    return f\"Oh, uhh, hi {to}...\"\n```\n\n```python\n# greetings.ipynb\n# :: submodule: \"nice\" ::\ndef say_hello(to=\"world\"):\n  return f\"Hello, {to}! Nice to see you.\"\n```\n\nNotice we define the same `say_hello` function twice. If the entire notebook\nwere imported, the second `say_hello` would overwrite the first. However, we can\nimport either of these submodules or both using Python's standard import syntax once we\nimport `margo_loader`.\n\n```python\n>>> import margo_loader\n>>> from test_notebooks.greetings import nice, grumpy\n>>> nice.say_hello()\n'Hello, world! Nice to see you.'\n>>> grumpy.say_hello()\n'Oh, uhh, hi world...'\n>>>\n```\n\n## Prevent a notebook from being imported\n\nTo prevent a notebook from being imported, use:\n\n```python\n# :: not-a-module ::\n```\n\nor \n\n```python\n# :: do-not-import ::\n```\n\nThese are currently aliases with the same behavior. If you try to import a notebook that contains a `do-not-import`/`not-a-module` declaration, it will raise an exception.\n\n## Skipping multiple cells\n\nIf you want to ignore a lot of cells during import, you can use\n\n\n```python\n# :: module-stop ::\n```\n\nand\n\n```python\n# :: module-start :: \n```\n\nto exclude blocks of cells.\n\nAny cell including and after a cell that contains `module-stop` will be excluded during import until a `module-start` cell is encountered.\n\nConversely, any cell including and after a cell that contains `module-start` will be excluded during import until a `module-stop` is encountered.\n\nNote that you can also use `start` and `stop` instead of `module-start` and `module-stop`. These are aliases.\n\nYou can use `module-stop` with no subsequent `module-start`. This will have the effect of ignoring all subsequent cells.\n\n## Working with percent-formatted notebooks\n\nThis library works with Jupyter Notebooks (.ipynb files) as well as python files\nwith percent cell formatting using the file extension `.pynb`. These are plain\nsource Python files that use `# %%` to split the document into cells. [Read more\nhere](https://code.visualstudio.com/docs/python/jupyter-support-py).\n\nLook at `test_notebooks/hello_notebook_pynb.pynb` in this repo for an example of\na code-cell notebook.\n\n**STABILITY NOTE:** *This is an alpha feature. The .pynb extension may be changed in a future version*\n\n## Prior art\n\nThis project borrows its implementation approach from [a Jupyter Notebook\ndocumentation\nexample](https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Importing%20Notebooks.html)\nthat imports notebooks in their entirety as if they were `.py` files. The key difference Margo Loader adds is use of Margo notes to create preoprocessor directives  `ignore-cell` and `submodule`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "margo-loader",
    "package_url": "https://pypi.org/project/margo-loader/",
    "platform": null,
    "project_url": "https://pypi.org/project/margo-loader/",
    "project_urls": {
      "Bug Tracker": "https://github.com/margo-notebooks/margo-loader-py/issues",
      "Homepage": "https://github.com/margo-notebooks/margo-loader-py"
    },
    "release_url": "https://pypi.org/project/margo-loader/1.0.3/",
    "requires_dist": [
      "margo-parser<2,>=1",
      "nbformat==5.0.7"
    ],
    "requires_python": ">=3.6",
    "summary": "Import Jupyter notebooks using Margo notebook margin notebook syntax",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17369242,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3813d0f92e761d10b62bcfcc26f84994e4f140af9cc9c8ae9b61dbde91f68c02",
        "md5": "7aab825dbfd25c5e96c21fc66d310c31",
        "sha256": "de8c5bb3508556021f824fdcf2e658d1a726999f8b3ee5327424d77263791f8d"
      },
      "downloads": -1,
      "filename": "margo_loader-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7aab825dbfd25c5e96c21fc66d310c31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13509,
      "upload_time": "2023-03-11T23:01:35",
      "upload_time_iso_8601": "2023-03-11T23:01:35.863898Z",
      "url": "https://files.pythonhosted.org/packages/38/13/d0f92e761d10b62bcfcc26f84994e4f140af9cc9c8ae9b61dbde91f68c02/margo_loader-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d1f84503c76644d64041f8d45e411927be07ce2a327e5538999ce2cad1db411",
        "md5": "7cdec1af39a6e8bde1011ea00af6b73e",
        "sha256": "942c8d9159977b1147370997d8fb121fa831208fac151f10038d3394056adc3d"
      },
      "downloads": -1,
      "filename": "margo_loader-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7cdec1af39a6e8bde1011ea00af6b73e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15591,
      "upload_time": "2023-03-11T23:01:37",
      "upload_time_iso_8601": "2023-03-11T23:01:37.768140Z",
      "url": "https://files.pythonhosted.org/packages/7d/1f/84503c76644d64041f8d45e411927be07ce2a327e5538999ce2cad1db411/margo_loader-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}