{
  "info": {
    "author": "Zhu Sheng Li",
    "author_email": "digglife@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "## maoyan-font\n\n### 简介\n\n将猫眼电影网页中票房、评分等数据的乱码转化成正常数字。\n\n### 用法\n\n```python\n\nfrom maoyan_font import MaoyanFontParser\nparser = MaoyanFontParser()\nfont = parser.load('http://vfile.meituan.net/colorstone/00b9347ca891bde9d2716c49b7e07fd92080.woff')\nfont.normalize('\\ue871.\\ue829')\n# '9.1'\n\n```\n\n### 原理\n\n猫眼为了保护重要数据，对评分和票房数据采用了 网络字体反爬机制。概括而言，就是 HTML 中的数据返回无对应字符的 UNICODE 代码（UNICODE 私人使用区），\n然后使用网络字体在浏览器中渲染出代码对应的数字。\n\n每次请求电影页面，下载的 woff 都不同，每个 woff 中的代码对应的数字也都不同。比如，网络字体 A 中，`\\uE851` 对应的是 数字 0， 网络字体 B 中 数字0 对应的代码可能是 `\\uE748`，没有规律。\n但是字体的字形数据 (glyphs) 是不变的，我们只要获取猫眼的任一 woff，找出字形和数字的对应关系，保存为字典，然后每次抓取时，解析出新字体中的字形，在字典中查询即可获取真正的数字。\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/digglife/maoyan-font",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maoyan-font",
    "package_url": "https://pypi.org/project/maoyan-font/",
    "platform": "",
    "project_url": "https://pypi.org/project/maoyan-font/",
    "project_urls": {
      "Homepage": "https://github.com/digglife/maoyan-font"
    },
    "release_url": "https://pypi.org/project/maoyan-font/2018.12/",
    "requires_dist": [
      "requests",
      "fonttools"
    ],
    "requires_python": "",
    "summary": "将猫眼电影网页中票房、评分等数据的乱码转化成正常数字。",
    "version": "2018.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4567446,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8255514690bb1d78d2b98b9a77d6a54789a4f75e48746eb5a8a5e4ff44ad0ce2",
        "md5": "de3492f1a3029dc06c39542820182cad",
        "sha256": "df3525229b4707255bb8c9fc965f061f52ad7c5fceb92bf94f761a118ba67965"
      },
      "downloads": -1,
      "filename": "maoyan_font-2018.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de3492f1a3029dc06c39542820182cad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3929,
      "upload_time": "2018-12-03T08:22:39",
      "upload_time_iso_8601": "2018-12-03T08:22:39.938337Z",
      "url": "https://files.pythonhosted.org/packages/82/55/514690bb1d78d2b98b9a77d6a54789a4f75e48746eb5a8a5e4ff44ad0ce2/maoyan_font-2018.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f8620b4b2ee71a039c5ac4c15c6e285aaa7ea31be9e8d0cd2ba7396a40c7060",
        "md5": "7f410abfd92e8bc60c5e283c96ac0a37",
        "sha256": "c6de7eb476e45b1d3e3174c205a5a3a790d063cee587b2d2c0928e6f54839c8d"
      },
      "downloads": -1,
      "filename": "maoyan_font-2018.12.tar.gz",
      "has_sig": false,
      "md5_digest": "7f410abfd92e8bc60c5e283c96ac0a37",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2604,
      "upload_time": "2018-12-03T08:22:51",
      "upload_time_iso_8601": "2018-12-03T08:22:51.391786Z",
      "url": "https://files.pythonhosted.org/packages/2f/86/20b4b2ee71a039c5ac4c15c6e285aaa7ea31be9e8d0cd2ba7396a40c7060/maoyan_font-2018.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}