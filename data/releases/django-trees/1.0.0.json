{
  "info": {
    "author": "imtapps",
    "author_email": "serveradmin@imtapps.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "django_trees\n============\n\n.. image:: https://travis-ci.org/imtapps/django-trees.svg?branch=master\n    :target: https://travis-ci.org/imtapps/django-trees\n\nSimple way to create, persist and manipulate reliable tree structures using Django models.\n\n\nInstallation\n============\n\n``pip install django-trees``\n\n\nAPI Usage\n=========\n\nCreate Model\n------------\n\nTo create a model extend ``AbstractNode`` and add desired fields.\n\n.. code:: python\n\n    from django.db import models\n    from django_trees.models import AbstractNode\n    \n    class Folder(AbstractNode):\n        name = models.CharField(max_length=10)\n\n\nCreate Tree Nodes\n-----------------\n\nTo create a tree node, there is nothing different than creating a normal Django model other than you may specify a parent node.\n\n.. code:: python\n\n    root = Folder.objects.create(name=\"Root\")\n    documents = Folder.objects.create(name=\"Documents\", parent=root)\n    downloads = Folder.objects.create(name=\"Downloads\", parent=root)\n    projects = Folder.objects.create(name=\"Projects\", parent=documents)\n\n\nGet Node Descendants\n--------------------\n\nTo retrieve all of the descendants of a node (including children, grandchildren, great grandchildren, etc) use the ``get_descendants`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   root.get_descendants() \n\n\nGet Node Ancestors\n------------------\n\nTo retrieve all of the ancestors of a node (including parents, grandparents, great grandparents, etc) use the ``get_ancestors`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   projects.get_ancestors() \n\n\nGet Node Children\n-----------------\n\nTo retrieve all immediate children of the current node use the ``get_children`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   projects.get_children() \n\n\nMove Node\n---------\n\nTo move a node to a different position in the tree use the ``move`` method passing the new parent node as an argument.\n\n.. code:: python\n\n   projects.move(root)\n\n\nBifurcate Node\n--------------\n\nTo create a separate tree from a branch of an existing tree use the ``bifurcate`` method. The node object will be removed from the previous tree and it along with it's descendants will now be in a new tree.\n\n.. code:: python\n\n   projects.bifurcate()\n\n\nGet ASCII Tree\n--------------\n\nTo get an ascii representation of the tree structure use the ``get_ascii_tree`` method.\n\n.. code:: python\n\n   projects.get_ascii_tree()\n\n\nDemo\n----\n\n.. image:: https://cloud.githubusercontent.com/assets/847632/4188298/1d00fe0a-3771-11e4-8900-ccda9fbb72a1.gif",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/imtapps/django_trees",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_trees",
    "package_url": "https://pypi.org/project/django_trees/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_trees/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/imtapps/django_trees"
    },
    "release_url": "https://pypi.org/project/django_trees/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Simple way to create, persist and manipulate reliable tree structures using Django models.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1218554,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56e27b31d964db84c19704317e1f2f3df30533493ea140c6ed5737ddd01edc50",
        "md5": "9c699996508ae9123190a33b5a81017c",
        "sha256": "c033e26478373510b758b61887dd799615568841259bd28ebbb7938947e0c2b3"
      },
      "downloads": -1,
      "filename": "django_trees-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9c699996508ae9123190a33b5a81017c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9402,
      "upload_time": "2014-09-08T16:01:00",
      "upload_time_iso_8601": "2014-09-08T16:01:00.958272Z",
      "url": "https://files.pythonhosted.org/packages/56/e2/7b31d964db84c19704317e1f2f3df30533493ea140c6ed5737ddd01edc50/django_trees-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}