{
  "info": {
    "author": "Nathan Cahill",
    "author_email": "nathan@nathancahill.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "MimicDB\n-------\n\n|PyPI| |Build Status| |Coverage Status|\n\nPython Implementation of MimicDB\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe Python implementation of MimicDB works with the Boto library and several\ndifferent backends including Redis.\n\nInstallation\n^^^^^^^^^^^^\n\nBy default, MimicDB requires Redis (although other backends can be used\ninstead).\n\n::\n\n    $ pip install boto\n    $ pip install redis\n    $ pip install mimicdb\n\nQuickstart\n^^^^^^^^^^\n\nIf you're using Boto already, replace ``boto`` imports with ``mimicdb``\nimports.\n\nChange:\n\n::\n\n    from boto.s3.connection import S3Connection\n    from boto.s3.key import Key\n\nTo:\n\n::\n\n    from mimicdb.s3.connection import S3Connection\n    from mimicdb.s3.key import Key\n\nAdditionally, import the MimicDB object itself, and initiate the\nbackend:\n\n::\n\n    from mimicdb import MimicDB\n    MimicDB()\n\nAfter establishing a connection for the first time, sync the connection\nto save the metadata locally:\n\n::\n\n    conn = S3Connection(KEY, SECRET)\n    conn.sync()\n\nOr sync only a couple buckets from the connection:\n\n::\n\n    conn.sync('bucket1', 'bucket2')\n\nAfter that, upload, download and list as you usually would. API calls\nthat can be responded to locally will return instantly without hitting\nS3 servers. API calls that are made to S3 using MimicDB will be mimicked\nlocally to ensure consistency with the remote servers.\n\nPass ``force=True`` to most functions to force a call to the S3 API.\nThis also updates the local database.\n\nAlternate Backends\n^^^^^^^^^^^^^^^^^^\n\nBesides the default Redis backend, MimicDB has SQLite and in-memory\nbackends available.\n\n::\n\n    from mimicdb.backends.sqlite import SQLite\n    MimicDB(SQLite())\n\n::\n\n    from mimicdb.backends.memory import Memory\n    MimicDB(Memory())\n\nDocumentation\n^^^^^^^^^^^^^\n\n`mimicdb.readthedocs.org <http://mimicdb.readthedocs.org>`_\n\nContributing\n^^^^^^^^^^^^\n\n1. Fork the repo.\n2. Run tests to ensure a clean, working slate.\n3. Improve/fix the code.\n4. Add test cases if new functionality introduced or bug fixed (100%\n   test coverage).\n5. Ensure tests pass.\n6. Push to your fork and submit a pull request to the develop branch.\n\nTests\n^^^^^\n\nRun tests after installing nose and coverage.\n\n::\n\n    $ nosetests --with-coverage --cover-package=mimicdb\n\nIntegration testing is provided by Travis-CI at\n`travis-ci.org/nathancahill/mimicdb <https://travis-ci.org/nathancahill/mimicdb>`_\n\nTest coverage reporting is provided by Coveralls at\n`coveralls.io/r/nathancahill/mimicdb <https://coveralls.io/r/nathancahill/mimicdb>`_\n\nBenchmarks\n^^^^^^^^^^\n\nRun ``benchmarks.py`` in the root of the repo:\n\n::\n\n    $ python benchmarks.py\n    Boto Time: 0.338411092758\n    MimicDB Time: 0.00015789039612\n    Factor: 2143x faster\n\nLicense\n^^^^^^^\n\nMimicDB is BSD licensed.\n\n.. |PyPI| image:: http://img.shields.io/pypi/v/mimicdb.svg?style=flat\n   :target: https://pypi.python.org/pypi/mimicdb/\n.. |Build Status| image:: http://img.shields.io/travis/nathancahill/mimicdb/master.svg?style=flat\n   :target: https://travis-ci.org/nathancahill/mimicdb\n.. |Coverage Status| image:: http://img.shields.io/coveralls/nathancahill/mimicdb/master.svg?style=flat\n   :target: https://coveralls.io/r/nathancahill/mimicdb",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nathancahill/mimicdb",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MimicDB",
    "package_url": "https://pypi.org/project/MimicDB/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/MimicDB/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/nathancahill/mimicdb"
    },
    "release_url": "https://pypi.org/project/MimicDB/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python implementation of MimicDB",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1513651,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53ba865d877ec693eea6c533af5a281fb7b86731a98c07a274bad6ad2f60ffb5",
        "md5": "b6b72a107ea84f265ed3fee74285a3dd",
        "sha256": "53d03af4720e9913f512b155364f314210d52e4bd138fa22426579f4ae57fd32"
      },
      "downloads": -1,
      "filename": "MimicDB-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b6b72a107ea84f265ed3fee74285a3dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8350,
      "upload_time": "2014-09-02T06:44:02",
      "upload_time_iso_8601": "2014-09-02T06:44:02.501759Z",
      "url": "https://files.pythonhosted.org/packages/53/ba/865d877ec693eea6c533af5a281fb7b86731a98c07a274bad6ad2f60ffb5/MimicDB-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}