{
  "info": {
    "author": "Farama Foundation",
    "author_email": "contact@farama.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Farama-Foundation/Minigrid/master/minigrid-text.png\" width=\"500px\"/>\n</p>\n\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://pre-commit.com/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n<p align=\"center\">\n  <img src=\"figures/door-key-curriculum.gif\" width=200 alt=\"Figure Door Key Curriculum\">\n</p>\n\nThe Minigrid library contains a collection of discrete grid-world environments to conduct research on Reinforcement Learning. The environments follow the [Gymnasium]() standard API and they are designed to be lightweight, fast, and easily customizable. \n\nThe documentation website is at [minigrid.farama.org](https://minigrid.farama.org/), and we have a public discord server (which we also use to coordinate development work) that you can join here: [https://discord.gg/B8ZJ92hu](https://discord.gg/B8ZJ92hu)\n\nNote that the library was previously known as gym-minigrid and it has been referenced in several publications. If your publication uses the Minigrid library and you wish for it to be included in the [list of publications](https://minigrid.farama.org/content/publications/), please create an issue in the [GitHub repository](https://github.com/Farama-Foundation/Minigrid/issues/new/choose).\n\n\n# Installation\n\nTo install the Minigrid library use `pip install minigrid`.\n\nWe support Python 3.7, 3.8, 3.9 and 3.10 on Linux and macOS. We will accept PRs related to Windows, but do not officially support it.\n\n# Environments\nThe included environments can be divided in two groups. The original `Minigrid` environments and the `BabyAI` environments. \n\n## Minigrid\nThe list of the environments that were included in the original `Minigrid` library can be found in the [documentation](https://minigrid.farama.org/environments/minigrid/). These environments have in common a triangle-like agent with a discrete action space that has to navigate a 2D map with different obstacles (Walls, Lava, Dynamic obstacles) depending on the environment. The task to be accomplished is described by a `mission` string returned by the observation of the agent. These mission tasks include different goal-oriented and hierarchical missions such as picking up boxes, opening doors with keys or navigating a maze to reach a goal location. Each environment provides one or more configurations registered with Gymansium. Each environment is also programmatically tunable in terms of size/complexity, which is useful for curriculum learning or to fine-tune difficulty.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://minigrid.farama.org/",
    "keywords": "Memory, Environment, Agent, RL, Gymnasium",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minigrid",
    "package_url": "https://pypi.org/project/minigrid/",
    "platform": null,
    "project_url": "https://pypi.org/project/minigrid/",
    "project_urls": {
      "Homepage": "https://minigrid.farama.org/"
    },
    "release_url": "https://pypi.org/project/minigrid/2.1.0/",
    "requires_dist": [
      "numpy (>=1.18.0)",
      "gymnasium (>=0.26)",
      "matplotlib (>=3.0)",
      "pytest (>=7.0.1) ; extra == 'testing'",
      "pytest-mock (>=3.10.0) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7, <3.11",
    "summary": "Minimalistic gridworld reinforcement learning environments",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17469512,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd78403907aeaf0456f8b048a127187cd4251954059ce83fc9e207f9538a818d",
        "md5": "6d233bce037b784b4eb340fb1c06ec88",
        "sha256": "7f82a994673aadca9fc50a510c8e707134d1b7c70ab93dbda6a6bdf92a950b56"
      },
      "downloads": -1,
      "filename": "Minigrid-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d233bce037b784b4eb340fb1c06ec88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.11",
      "size": 92812,
      "upload_time": "2022-11-13T18:48:09",
      "upload_time_iso_8601": "2022-11-13T18:48:09.117629Z",
      "url": "https://files.pythonhosted.org/packages/fd/78/403907aeaf0456f8b048a127187cd4251954059ce83fc9e207f9538a818d/Minigrid-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "070742282b2445832244467cec72eb9fd07f93e16147dc546a538cc177413d00",
        "md5": "7679518c77339aab7f38f0cdd19091fd",
        "sha256": "986be1e0210ae26e75384760d4c4da12e3681f2fa2ace826a0786e4c8f033e63"
      },
      "downloads": -1,
      "filename": "Minigrid-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7679518c77339aab7f38f0cdd19091fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.11",
      "size": 60809,
      "upload_time": "2022-11-13T18:48:10",
      "upload_time_iso_8601": "2022-11-13T18:48:10.660705Z",
      "url": "https://files.pythonhosted.org/packages/07/07/42282b2445832244467cec72eb9fd07f93e16147dc546a538cc177413d00/Minigrid-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}