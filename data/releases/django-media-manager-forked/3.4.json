{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 1.8"
    ],
    "description": "# Changelog\n\n### 11-17-2014 v4.0.6\n*   Gave FileBrowseField a default max_length of 255. Can be overridden in declaration.\n*   Added a `deconstruct` method that is necessary for Django 1.7 migrations.\n\n### 11-17-2014 v4.0.5\n*   Made FileBrowseField.js more cautious about wether the \"link\" DOM object exists.\n\n### 11-13-2014 v4.0.4\n*   Bug fix. If value on a FileBrowseField is blank, it's set to '' in the database.\n\n### 11-13-2014 v4.0.3\n*   Bug fix. Field now returns None or empty string if blank.\n\n### 11-13-2014 v4.0.2\n*   Bug fix. Field should have had `self.file = None` when no file is assigned.\n\n### 11-13-2014 v4.0.1\n*   Urls are now encoded properly so they can be output anywhere.\n*   `path` property of FileObject is still unencoded to ensure the filename is still available.\n\n### 11-11-2014 v4.0.0\n*   BREAKS BACKWARDS COMPATIBILITY: Due to the default that files are stored with\n    relative filenames rather than absolute.\n*   Uploadify is deprecated; Uses qq uploader now.\n*   Still targeting Python 3 only.\n*   FileBrowseFields can now integrate with imagekit as it mimics an FileField \n    interface now.\n\n### 25-08-2014 v3.4.0\n*   Uses Pillow now.\n*   Python 3 only now.\n\n### 02-07-2013\n*\tRefactor and resolved an issue on window.opener event.\n*\tRefactor FB_Redactor plugin.\n\n### 28-06-2013\n\n*\tSupport for django-suit\n*\tSupport for django-suit-ckeditor\n*\tSupport for django-suit-redactor\n*\tSupport for custom user model\n*\tMandatory django version higher 1.5\n\n## Basic Installation\n\n\tpip install django-media-manager\n\tor\n\tpip install git+ssh://git@bitbucket.org:6ft/django-media-manager.git\n\n*\tAdd filebrowser to INSTALLED_APPS.\n*\tAdd the following line _before_ the admin URLS:\n*\t\t(r'^admin/filebrowser/', include('filebrowser.urls'))\n*\tCollect static files\n*\tAdd __uploads/__ folder to media folder or customize this setting\n\n## Suit support\nThe application have support for [django-suit](https://github.com/darklow/django-suit) template. To use it add on your settings files the following config:\n\n<code>FILEBROWSER_SUIT_TEMPLATE = True</code> \n\nFilebrowser will now use templates for django suit.\n\n## Suit CKEditor/Redactor\nTo use filebrowser on [django-suit-ckeditor](https://github.com/darklow/django-suit-ckeditor) or [django-suit-redactor](https://github.com/darklow/django-suit-redactor) please follow the example bellow:\n\n\t#models.py\n\t\n\tfrom django.db import models\n\tfrom filebrowser.fields import FileBrowseField\n\t\n\tclass MediaPublication(models.Model):\n    \tckeditor = models.TextField(help_text='Editor CKEditor')\n    \tredactor = models.TextField(help_text='Editor Redactor')\n    \timage = FileBrowseField(\"Image\", max_length=200, blank=True, null=True)\n    \timage_initialdir = FileBrowseField(\"Image (Initial Directory)\", max_length=200, directory=\"images/\", blank=True, null=True)\n    \timage_extensions = FileBrowseField(\"Image (Extensions)\", max_length=200, extensions=['.jpg'],\n                                       help_text=\"Only jpg-Images allowed.\", blank=True, null=True)\n    \timage_format = FileBrowseField(\"Image (Format)\", max_length=200, format='Image', blank=True, null=True)\n    \tpdf = FileBrowseField(\"PDF\", max_length=200, directory=\"documents/\", extensions=['.pdf'], format='Document',\n                          blank=True, null=True)\n\n    \tclass Meta:\n        \tordering = ['image',]\n        \tverbose_name = 'publication'\n        \tverbose_name_plural = 'publications'\n\nTo use on admin you need to do some litle tweeks:\n\n\t#admin.py\n\tfrom django.contrib import admin\n\tfrom django.forms import ModelForm, Media\n\tfrom suit_ckeditor.widgets import CKEditorWidget\n\tfrom suit_redactor.widgets import RedactorWidget\n\n\tfrom .models import MediaPublication\n\n\n\tclass Editor(ModelForm):\n    \tclass Meta:\n        \twidgets = {\n            \t'ckeditor': CKEditorWidget(editor_options={'startupFocus': True}),\n            \t'redactor': RedactorWidget(editor_options={\n                \t'lang': 'en',\n                \t'plugins': ['filebrowser']\n            \t}),\n        \t}\n\n    \tclass Media:\n        \tjs = ('filebrowser/js/FB_CKEditor.js', 'filebrowser/js/FB_Redactor.js')\n        \tcss = {\n            \t'all': ('filebrowser/css/suit-filebrowser.css',)\n        \t}\n        \t\n    class AdminPublication(admin.ModelAdmin):\n    \tform = Editor\n\n    \tfieldsets = (\n        \t(None, {\n            \t'classes': ('suit-tab suit-tab-media',),\n            \t'fields': ['image', 'image_initialdir', 'image_extensions', 'image_format', 'pdf'],\n        \t}),\n        \t('CKEditor', {\n            \t'classes': ('full-width',),\n            \t'fields': ('ckeditor',)\n        \t}),\n        \t('Redactor', {\n            \t'classes': ('full-width',),\n            \t'fields': ('redactor',)\n        \t}),\n    \t)\n\n    \tlist_display = ('thumbnail', 'image_extensions', 'pdf')\n    \tsuit_form_tabs = (('media', 'Media'),)\n\n    \tdef thumbnail(self, obj):\n        \tif obj.image:\n            \treturn '<img src=\"%s\" />' % obj.image.url_thumbnail\n        \telse:\n            \treturn \"\"\n    \tthumbnail.allow_tags = True\n\n\n\tadmin.site.register(MediaPublication, AdminPublication)\n   \nThe most important things are on ModelForm (Media and Widgets). To use browser on CKEditor and have the button to navigate on filebrowser you only need to add the js file to Media\n\nFor Redactor you will have to add the plugin option on the widget (plugin name is mandatory - _filebrowser_ ) and add the css and js file to media.\n\nThat's it you are now ready to send all kind of files to ckeditor or redactor.\n\n### Screenshots\n\n![](https://dl.dropboxusercontent.com/u/14340361/works/filebrowser.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/filebrowser-versions.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-browser.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-bt-browser.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/ckeditor-image.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-pop-up.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-import.jpeg)\n![](https://dl.dropboxusercontent.com/u/14340361/works/redactor-files-select.jpeg)\n\n#### TODO\n\nPlease this is a work in progress. If you have ideas or want to make it better please fel free to pull requests.\n\n*\tAdd more options on thumbs sizes\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/realsby/django-media-manager/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/realsby/django-media-manager",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-media-manager-forked",
    "package_url": "https://pypi.org/project/django-media-manager-forked/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-media-manager-forked/",
    "project_urls": {
      "Download": "https://github.com/realsby/django-media-manager/archive/master.zip",
      "Homepage": "https://github.com/realsby/django-media-manager"
    },
    "release_url": "https://pypi.org/project/django-media-manager-forked/3.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Media-Management with the Django Admin-Interface.",
    "version": "3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2042632,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d46e41284a2344e91b982835eb802a22c49e24495f7cb4a1e0f9946fdac1a06",
        "md5": "42f6b8f8c9addfcb022ddf35d78f550f",
        "sha256": "05fe611727aa353a33263e67107852c9ed528250abc6f75972128e9124646d80"
      },
      "downloads": -1,
      "filename": "django-media-manager-forked.tar.gz",
      "has_sig": false,
      "md5_digest": "42f6b8f8c9addfcb022ddf35d78f550f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 111310,
      "upload_time": "2016-04-02T22:38:30",
      "upload_time_iso_8601": "2016-04-02T22:38:30.681074Z",
      "url": "https://files.pythonhosted.org/packages/9d/46/e41284a2344e91b982835eb802a22c49e24495f7cb4a1e0f9946fdac1a06/django-media-manager-forked.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}