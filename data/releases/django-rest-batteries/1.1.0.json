{
  "info": {
    "author": "Define Impossible",
    "author_email": "hi@defineimpossible.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![Build Status](https://travis-ci.org/defineimpossible/django-rest-batteries.svg?branch=master)](https://travis-ci.org/github/defineimpossible/django-rest-batteries)\n[![Coverage](https://codecov.io/gh/defineimpossible/django-rest-batteries/branch/master/graph/badge.svg)](https://codecov.io/gh/defineimpossible/django-rest-batteries)\n\n# Django REST Framework Batteries\n\nBuild clean APIs with DRF faster.\n\n# Overview\n\nHere's a quick overview of what the library has at the moment:\n\n- Action-based serializers for ViewSets\n- Two serializers per request/response cycle for ViewSets and GenericAPIViews\n- Single format for all errors\n\n# Requirements\n\n- Python â‰¥ 3.6\n- Django (2.2, 3.0)\n- Django REST Framework (3.9, 3.10, 3.11)\n\n# Installation\n\n```bash\n$ pip install django-rest-batteries\n```\n\n# Usage\n\n## Action-based serializers for ViewSets\n\nEach of your actions can have a separate serializer:\n\n```python\nfrom rest_batteries.mixins import RetrieveModelMixin, ListModelMixin\nfrom rest_batteries.viewsets import GenericViewSet\n...\n\nclass OrderViewSet(RetrieveModelMixin,\n                   ListModelMixin,\n                   GenericViewSet):\n    response_action_serializer_classes = {\n        'retrieve': OrderSerializer,\n        'list': OrderListSerializer,\n    }\n```\n\n## Two serializers per request/response cycle for ViewSets\n\nWe found that more often than not we need a separate serializer for handling request payload and a separate serializer for generating response data.\n\nHow to achieve it in ViewSet:\n\n```python\nfrom rest_batteries.mixins import CreateModelMixin, ListModelMixin\nfrom rest_batteries.viewsets import GenericViewSet\n...\n\nclass OrderViewSet(CreateModelMixin,\n                   ListModelMixin,\n                   GenericViewSet):\n    request_action_serializer_classes = {\n        'create': OrderCreateSerializer,\n    }\n    response_action_serializer_classes = {\n        'create': OrderResponseSerializer,\n        'list': OrderResponseSerializer,\n        'cancel': OrderResponseSerializer,\n    }\n```\n\nHow to achieve it in GenericAPIView:\n\n```python\nfrom rest_batteries.generics import CreateAPIView\n...\n\n\nclass OrderCreateView(CreateAPIView):\n    request_serializer_class = OrderCreateSerializer\n    response_serializer_class = OrderResponseSerializer\n```\n\n## Single format for all errors\n\nWe believe that having a single format for all errors is good practice. This will make the process of displaying and handling errors much simpler for clients that use your APIs.\n\nAny error always will be a JSON object with a message, code (identifier of the error), and field if the error is specific to a particular field. How your response could look like:\n\n```python\n{\n    \"errors\": [\n        {\n            \"message\": \"Delete or cancel all reservations first.\",\n            \"code\": \"invalid\"\n        },\n        {\n            \"message\": \"Ensure this field has no more than 21 characters.\",\n            \"code\": \"max_length\",\n            \"field\": \"address.work_phone\"\n        },\n        {\n            \"message\": \"This email already exists\",\n            \"code\": \"unique\",\n            \"field\": \"login_email\"\n        }\n    ]\n}\n```\n\nYou will not have a single format out-of-the-box after installation. You need to add an exception handler to your DRF settings:\n\n```python\nREST_FRAMEWORK = {\n    ...\n    'EXCEPTION_HANDLER': 'rest_batteries.exception_handlers.errors_formatter_exception_handler',\n}\n```\n\n# Credits\n\n- [Django-Styleguide by HackSoftware](https://github.com/HackSoftware/Django-Styleguide) - inspiration\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/defineimpossible/django-rest-batteries",
    "keywords": "django rest framework,drf,django,batteries",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-batteries",
    "package_url": "https://pypi.org/project/django-rest-batteries/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-batteries/",
    "project_urls": {
      "Homepage": "https://github.com/defineimpossible/django-rest-batteries",
      "Repository": "https://github.com/defineimpossible/django-rest-batteries"
    },
    "release_url": "https://pypi.org/project/django-rest-batteries/1.1.0/",
    "requires_dist": [
      "django (>=3.0.8,<4.0.0)",
      "djangorestframework (>=3.11.0,<4.0.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Build clean APIs with DRF faster",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8347296,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf84514711f8ac0705f3b536d6208abfbf60559156abf53dfa1e627c32bb2a7b",
        "md5": "c604eb99f43a76f6307e794eddf8a407",
        "sha256": "fa99c23733b8cfe0f16005d2cce3a1ab2f4e717723cb028899d1c4b47b6276cb"
      },
      "downloads": -1,
      "filename": "django_rest_batteries-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c604eb99f43a76f6307e794eddf8a407",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 8710,
      "upload_time": "2020-08-18T04:14:16",
      "upload_time_iso_8601": "2020-08-18T04:14:16.965732Z",
      "url": "https://files.pythonhosted.org/packages/bf/84/514711f8ac0705f3b536d6208abfbf60559156abf53dfa1e627c32bb2a7b/django_rest_batteries-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cffd08a92aaa916793ff66599532fe8af8da4cbcae7e9f08f1ba8ebf10ab4013",
        "md5": "e8b69172ffc4daf746470339c43d3071",
        "sha256": "3598cdd16c6a0c13f8545e33b9cf3416496772a64d6bf0e7b85ce07afb220223"
      },
      "downloads": -1,
      "filename": "django-rest-batteries-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e8b69172ffc4daf746470339c43d3071",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 8425,
      "upload_time": "2020-08-18T04:14:15",
      "upload_time_iso_8601": "2020-08-18T04:14:15.327184Z",
      "url": "https://files.pythonhosted.org/packages/cf/fd/08a92aaa916793ff66599532fe8af8da4cbcae7e9f08f1ba8ebf10ab4013/django-rest-batteries-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}