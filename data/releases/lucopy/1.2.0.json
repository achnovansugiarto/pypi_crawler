{
  "info": {
    "author": "Redkite",
    "author_email": "luco.support@redkite.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Luco API Python SDK\n\nGiles Matthews: giles.matthews@redkite.com\n\n## Purpose\n\nProvide a generalised Python interface to interact with the Luco API.\n\n---\n\n## How to Use\n\nInstall the library from PyPI using PIP\n\n```bash\npip install LucoPy\n```\n\nImport the LucoApi class from the LucoPy library in your script and create an object of the LucoApi class using the appropriate credentials.\n\n```bash\nfrom LucoPy import LucoApi\n\napi = LucoApi(base_url, tenant_id, client_id, client_secret, resource_id)\n```\n\n---\n\n## Authentication\n\nIn order to make calls to the API endpoints, the sdk must be able to generate an authenticated access token. Authentication is managed by the ApiCore class using an identity provided during the instantiation of a LucoApi object.\n\nIn order to use a service principle, the required credentials must be passed as arguments to the LucoApi class when instantiating it. These credentials are:\n\n- tenant_id\n- client_id\n- client_secret\n- resource_id\n\nAlterntively, a managed identity can be passed into the SDK via the `identity` kwarg when instantiating the LucoApi class. The idenity object passed to this kwarg must have a generate_token() method which returns an access token and expiry datetime.\n\n---\n\n### LucoApi Class\n\n`LucoApi(base_url, tenant_id=None, client_id=None, client_secret=None, resource_id=None, identity=None, timeout=20, log=False)`\n\nThis class acts as the gateway to the Luco platform. An instance of this class should be created at the beginning of each script, API calls are then made through the ApiCore which handles the necessary authentication. Use the `log` argument to turn logging on or off. Logs are sent to a log.txt file in the home directory. The `timeout` option defines the maximum time (seconds) to wait for an HTTPS response from the API before causing a fail.\n\n1) `find_slot_id(tag, slot_sequence) --> int`\n\n    GET /slots/search\n\n2) `.get_submission(slot_id, submission_id) --> Submission object`\n\n    GET /slots/{slotId}/submissions/{submissionId}\n\n3) `.create_submission(slot_id) --> Submission object`\n\n    POST /slots/{slotId}/submissions\n\n4) `.find_submission_in_slot_sequence(slotId, submissionId, OnlyCompletedSubmissions=False, TimeDifference=None, FindClosest='historic') --> dict`\n\n    GET /slots/{slotId}/submissions/{submissionId}/search\n\n5) `.find_submissions_by_slot_sequence(slotSequence, onlyLatestSlot=True, onlyDeliveredSlots=True, onlyCompletedSubmissions=True, onlyLatestSubmission=True, expectedAfterUtc=None, expectedBeforeUtc=None) --> dict`\n\n    GET /slotsequences/submissions\n\n6) `.find_latest_submission_by_slot_sequence(slotSequence, expectedAfterUtc=None, expectedBeforeUtc=None) --> slotId, submissionId`\n\n    GET /slotsequences/submissions\n\n### Submission Class\n\n`Submission(slot_id, submission_id, core)`\n\nMuch of the functionality is handled at the Submission level. A Submission object is created by the get_submission or create_submission methods of the LucoApi class. These objects store the definition of the corressponding submission and handle methods relating to it.\n\n1) `.params(group=None, key=None) --> dict or value type`\n\n    Search slot parameters by group name and key name\n\n2) `.get_metrics(stages=None, metrics=None) --> dict`\n\n    GET /slots/{slotID}/submissions/{submissionID}/metrics\n\n3) `.get_quality() --> dict`\n\n    GET /slots/{slotID}/submissions/{submissionID}/quality\n\n4) `.submit_run_environment(stage=None, run_environments=None) --> Bool`\n\n    POST /slots/{slotID}/submissions/{submissionID}/runenvironment\n\n5) `.submit_metrics(stage, metric=None, value=None, metrics=None) --> Bool`\n\n    POST /slots/{slotID}/submissions/{submissionID}/metrics\n\n6) `.submit_quality(stage, tool=None, results=None, dataset=None, action=None) --> Bool`\n\n    POST /slots/{slotID}/submissions/{submissionID}/quality\n\n7) `.submit_status(status, stage=None, type=None, message=None, modified_by=None) --> Bool`\n\n    POST /slots/{slotID}/submissions/{submissionID}/status\n\n8) `.submit_completed_status() --> Bool`\n\n    POST /slots/{slotID}/submissions/{submissionID}/status\n\n---\n\n## Version History\n\nLucoPy-1.2.0\n\n---\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LucoPy",
    "package_url": "https://pypi.org/project/LucoPy/",
    "platform": null,
    "project_url": "https://pypi.org/project/LucoPy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/LucoPy/1.2.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "Python SDK to support the Luco data observability tool.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17402063,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c206afdfa51ef92e4dd64b1d0383dfd55e20474626517180401d5149c15afd8",
        "md5": "a70a230a29b892814aa472192c216080",
        "sha256": "170f87d0ead83780e5dc4dc95f3bf9216ec4d58f999a3f7cdefcca3401930449"
      },
      "downloads": -1,
      "filename": "LucoPy-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a70a230a29b892814aa472192c216080",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9601,
      "upload_time": "2022-05-19T14:02:27",
      "upload_time_iso_8601": "2022-05-19T14:02:27.878890Z",
      "url": "https://files.pythonhosted.org/packages/7c/20/6afdfa51ef92e4dd64b1d0383dfd55e20474626517180401d5149c15afd8/LucoPy-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf2562c68b7466af529748f6e29b0c379026b31fcdd69f537c69b3ae5cf2dfe3",
        "md5": "0b159a0d5b88fa75d81dcc9802279fdd",
        "sha256": "8bf4668cfc62fe4c116039f2d1fadab89e0c5a8de536f18f37cac7db7266f28d"
      },
      "downloads": -1,
      "filename": "LucoPy-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b159a0d5b88fa75d81dcc9802279fdd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7885,
      "upload_time": "2022-05-19T14:02:29",
      "upload_time_iso_8601": "2022-05-19T14:02:29.283701Z",
      "url": "https://files.pythonhosted.org/packages/cf/25/62c68b7466af529748f6e29b0c379026b31fcdd69f537c69b3ae5cf2dfe3/LucoPy-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}