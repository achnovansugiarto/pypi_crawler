{
  "info": {
    "author": "HBQA",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "> 🔔 **We are hiring. 欢迎加入：**[工具链建设](https://zhaopin.meituan.com/job-detail?jobId=676386152) | [所有职位](https://zhaopin.meituan.com/job-list?jobFamily=203&jobFamilyGroup=29&keywords=%E5%88%B0%E5%BA%97%E5%B9%B3%E5%8F%B0%E6%8A%80%E6%9C%AF&pageNo=1)\n\n---\n\n<p align=\"center\"><a herf=\"https://meituan-dianping.github.io/lyrebird/\"><img src=\"./image/lyrebird.png\" width=\"220\"></a></p>\n<h1 align=\"center\">Lyrebird</h1>\n\n![Unit Test](https://github.com/Meituan-Dianping/lyrebird/workflows/Unit%20Test/badge.svg)\n![E2E Test](https://github.com/Meituan-Dianping/lyrebird/workflows/E2E%20Test/badge.svg)\n![Publish to pypi](https://github.com/Meituan-Dianping/lyrebird/workflows/Publish%20to%20pypi/badge.svg)\n![Publish Docker image](https://github.com/Meituan-Dianping/lyrebird/workflows/Publish%20Docker%20image/badge.svg)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/Meituan-Dianping/lyrebird.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Meituan-Dianping/lyrebird/context:python)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/Meituan-Dianping/lyrebird.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Meituan-Dianping/lyrebird/context:javascript)\n\n# [PYPI](https://pypi.org/project/lyrebird/)\n\n[![PyPI](https://img.shields.io/pypi/v/lyrebird.svg)](https://pypi.python.org/pypi/lyrebird)\n![PyPI](https://img.shields.io/pypi/pyversions/lyrebird.svg)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/lyrebird.svg)\n\n```\npip install lyrebird\n```\n\n# [DockerHub](https://hub.docker.com/r/overbridge/lyrebird)\n\n![Docker Image Version (latest semver)](https://img.shields.io/docker/v/overbridge/lyrebird?sort=semver)\n![Docker Image Size (latest by date)](https://img.shields.io/docker/image-size/overbridge/lyrebird?sort=date)\n\n```\ndocker pull overbridge/lyrebird\n```\n\n# [Docs](https://meituan-dianping.github.io/lyrebird)\n\n[![Doc](https://img.shields.io/badge/docs-github_page-green.svg)](https://meituan-dianping.github.io/lyrebird/)\n[![Backers on Open Collective](https://opencollective.com/lyrebird/backers/badge.svg)](#backers)\n[![Sponsors on Open Collective](https://opencollective.com/lyrebird/sponsors/badge.svg)](#sponsors)\n![GitHub](https://img.shields.io/github/license/meituan/lyrebird.svg)\n\n---\n\n- [简介](#简介)\n- [快速开始](#快速开始)\n  - [环境要求](#环境要求)\n  - [安装](#安装)\n  - [启动](#启动)\n  - [连接移动设备](#连接移动设备)\n  - [查看及录制数据](#查看及录制数据)\n  - [使用 Mock 数据](#使用Mock数据)\n  - [Mock 数据管理](#Mock数据管理)\n- [基本命令](#基本命令)\n- [感谢](#感谢)\n\n# 简介\n\n**Lyrebird** 是一个基于拦截以及模拟 HTTP/HTTPS 网络请求的面向移动应用的插件式测试平台。\n\n**Lyrebird** 不只提供 UI 操作，也可以通过 API 控制所有功能。\n\n**Lyrebird** 也可作为服务端接口测试 mock 工具使用。\n\n**Lyrebird** 可以通过**插件**扩展能力，实现埋点自动测试、API 覆盖率统计、移动设备及 App 控制和信息记录、自定义检查脚本等一系列功能。\n\n> Lyrebird (琴鸟) 不但美丽壮观，且能歌善舞。它不但能模仿各种鸟类的鸣叫声，还能学人间的各种声音。如汽车喇叭声、火车喷气声、斧头伐木声、修路碎石机声及领号人的喊叫声等。歌声婉转动听，舞姿轻盈合拍，是澳洲鸟类中最受人喜爱的珍禽之一。\n\n---\n\n# 快速开始\n\n## 环境要求\n\n- macOS/Windows\n\n* Python >= 3.6\n\n```bash\n# macOS系统中推荐使用Homebrew(https://brew.sh/#install)安装Python3\nbrew install python3\n```\n\nWindows 需要的额外步骤：\n\n- 下载并安装[编译版 OpenSSL](https://slproweb.com/products/Win32OpenSSL.html)\n- 设置系统环境变量（根据实际路径调整）\n  - LIB = C:\\Program Files\\OpenSSL-Win64\\lib\n  - INCLUDE = C:\\Program Files\\OpenSSL-Win64\\include\n\n## 安装\n\n```bash\n# 安装lyrebird\npip3 install lyrebird\n```\n\n## 启动\n\n```bash\nlyrebird\n```\n\n## 连接移动设备\n\n- 启动 Lyrebird 后，移动设备需要通过代理的方式将请求数据接入。\n\n- 将移动设备的代理地址设为当前电脑地址，默认端口为 4272（IP 地址可查看 Lyrebird 启动时输出的日志）\n\n- 被测设备上用浏览器打开 http://mitm.it, 选择对应操作系统安装证书\n\n> Lyrebird 接入有两种方式:\n\na. 设置代理\n\n<img src=\"./image/connect-by-proxy.png\" width=\"800\">\n\nb. 直连\n\n<img src=\"./image/direct-connect.png\" width=\"800\">\n\n## 查看及录制数据\n\n> 现在，可以开始操作移动设备了。Lyrebird 将显示捕获到的 HTTP/HTTPS 请求。\n>\n> 选中请求后，可以将它保存到已激活的 mock 数据组中。\n\n<img src=\"./image/inspector.gif\" width=\"800\">\n\n## 使用 Mock 数据\n\n> 激活 mock 数据选择器，选择 mock 数据后。经过 Lyrebird 的请求会被 mock，如果 mock 数据中没有匹配的数据，则会代理该请求。\n>\n> 可以在 DataManager 界面管理 mock 数据。\n\n<img src=\"./image/inspector_mock.gif\" width=\"800\">\n\n## Mock 数据管理\n\n> mock 数据可由左边导航栏切换到 DataManager 界面进行编辑管理\n\n<img src=\"./image/data_manager.gif\" width=\"800\">\n\n---\n\n## 插件\n> 文档在建中\n\n---\n\n# 基本命令\n\n- **lyrebird**\n\n  以缺省参数启动 lyrebird\n\n- **lyrebird -v**\n\n  以输出详细日志模式启动 lyrebird\n\n- **lyrebird -b**\n\n  启动 lyrebird 不默认打开浏览器\n\n- **lyrebird --mock 9090 --proxy 4272 --data . --config your/config/file**\n\n  指定参数启动 lyrebird\n\n  参数：\n\n        --mock 默认9090 ， mock服务及前端端口\n\n        --proxy 默认4272， 代理服务端口\n\n        --data 默认./data, mock数据根目录\n\n        --config 默认~/.lyrebird/conf.json, lyrebird启动配置\n\n---\n\n# 感谢\n\n本工具中的代理功能使用[mitmproxy](https://github.com/mitmproxy/mitmproxy)实现。\n\n## Contributors\n\n<a href=\"https://github.com/Meituan-Dianping/lyrebird/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Meituan-Dianping/lyrebird\" />\n</a>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meituan/lyrebird",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lyrebird",
    "package_url": "https://pypi.org/project/lyrebird/",
    "platform": null,
    "project_url": "https://pypi.org/project/lyrebird/",
    "project_urls": {
      "Homepage": "https://github.com/meituan/lyrebird"
    },
    "release_url": "https://pypi.org/project/lyrebird/2.5.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "2.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17284381,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e1047008a2fdf8ec8abca68f43c5924d52dc00ce9216e07a2a0ab984e355909",
        "md5": "924dc2f682da6c9c4b5c099ddae9f98a",
        "sha256": "169bd7b49cc98fdbf849ea1745d04deeb2d4dd1ee034ff62519bdb4c94a25aa7"
      },
      "downloads": -1,
      "filename": "lyrebird-2.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "924dc2f682da6c9c4b5c099ddae9f98a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4664526,
      "upload_time": "2022-06-01T10:55:04",
      "upload_time_iso_8601": "2022-06-01T10:55:04.660405Z",
      "url": "https://files.pythonhosted.org/packages/8e/10/47008a2fdf8ec8abca68f43c5924d52dc00ce9216e07a2a0ab984e355909/lyrebird-2.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}