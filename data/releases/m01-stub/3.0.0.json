{
  "info": {
    "author": "Roger Ineichen, Projekt01 GmbH",
    "author_email": "dev@projekt01.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Zope3",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Zope Public License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "This package provides a mongodb server stub setup for python doctests.\n\n\n======\nREADME\n======\n\nThis package provides a mongo database server testing stub. You can simply\nsetup such a mongodb stub server in a doctest like::\n\n  import doctest\n  import unittest\n\n  from m01.stub import testing\n\n  def test_suite():\n      return unittest.TestSuite((\n          doctest.DocFileSuite('README.txt',\n              setUp=testing.doctestSetUp,\n              tearDown=testing.doctestTearDown,\n              optionflags=doctest.NORMALIZE_WHITESPACE|doctest.ELLIPSIS),\n          ))\n\n\n  if __name__ == '__main__':\n      unittest.main(defaultTest='test_suite')\n\nThe m01/stub/testing.py module provides a start and stop method which will\ndownload, install, start and stop a mongodb server. All this is done in the\nm01/stub/testing/sandbox folder. Everytime a test get started the mongodb/data\nfolder get removed and a fresh empty database get used.\n\nNote: Also see the zipFolder and unZipFile methods in testing.py which allows\nyou to setup mongodb data and before remove them store them as a zip file\nfor a next test run. Such a zipped data folder can get used in another test run\nby set the path to the zip file as dataSource argument. Also check the\nm01.mongo package for more test use cases.\n\n\nTesting\n-------\n\nLet's use the pymongo package for test our mongodb server stub setup. Note we\nuse a different port for our stub server setup (45017 instead of 27017):\n\n  >>> from pprint import pprint\n  >>> import pymongo\n  >>> conn = pymongo.MongoClient('mongodb://127.0.0.1:45017')\n\nLet's test our mongodb stub setup:\n\n  >>> pprint(conn.server_info())\n  {...,\n   u'ok': 1.0,\n   ...}\n\n\n  >>> conn.database_names()\n  [u'local']\n\nsetup an index:\n\n  >>> conn.testing.test.collection.ensure_index('dummy')\n  u'dummy_1'\n\nadd an object:\n\n  >>> _id = conn.testing.test.save({'__name__': u'foo', 'dummy': u'object'})\n  >>> _id\n  ObjectId('...')\n\nremove them:\n\n  >>> conn.testing.test.remove({'_id': _id})\n  {...}\n\nand check the database names again:\n\n  >>> conn.database_names()\n  [u'local', u'testing']\n\nLet's drop the database:\n\n  >>> conn.drop_database(\"testing\")\n  >>> conn.database_names()\n  [u'local']\n\n\nClose client:\n\n  >>> conn.close()\n\n\n=======\nCHANGES\n=======\n\n3.0.0 (2015-09-28)\n------------------\n\n- pymongo > 3.0.0 compatibility. Support pymongo > 3.0.0 use MongoClient instead\n  of Connection etc. Use 3.0.0 as package version and reflect pymongo > 3.0.0\n  compatibility.\n\n- switch default mongodb download version to 3.0.6\n\n- improve shutdown mongodb server, cleanup client weakref\n\n\n0.5.8 (2015-03-17)\n------------------\n\n- update default mongodb version to 2.4.10\n\n- changed default mongodb allocation space from 100MB to 10MB for faster server\n  startup\n\n- bugfix: startup check didn't fit and it was forced 16 times to sleep for one\n  second. Fix server status ok check from '1.0' to 1\n\n\n0.5.7 (2012-12-10)\n------------------\n\n- bugfix: didn't shutdown with sleep lower the 1\n\n- improve server setup, use unique log files for each startup\n\n- run tests with pymongo 2.4.1\n\n\n0.5.6 (2012-12-09)\n------------------\n\n- switch to mongodb 2.2.2 and support version property in startMongoDBServer\n\n\n0.5.5 (2012-11-18)\n------------------\n\n- bugfix: fix start and stop observer methods. Replaced javascript calls with\n  simpler pymongo connectionn calls for startup check and shutdown\n\n\n0.5.4 (2012-11-18)\n------------------\n\n- update to mongodb 2.2.0\n\n- switch to bson import\n\n- force 64 bit download by default\n\n- use \"sleep\" value only for files and directories, use flexible wait for\n  process\n\n- bugfix: mongo results comes back with a line break\n\n- bugfix: string cmd *only* on Windows\n\n- use shell=False to start mongodb, even on posix (safer). This changes the\n  \"options\" argument: it has to be a list now\n\n- to stop mongodb, we are now sending a command through the \"mongo shell\",\n  we do not use a pid file any more, all we need is the port, which we keep\n  in a global\n\n- we are now repeatedly checking till the mongodb server starts up and\n  answers to an admin query\n\n- move flexible sub-version tests to accomodate OpenBSD\n\n- fixed detection of being on a Mac for mongo db download for tests\n\n- added MANIFEST.in file\n\n\n0.5.3 (2011-08-26)\n------------------\n\n- Fix 32bit linux download (Albertas)\n- Remove temp files after download\n- Fix 64bit linux\n\n\n0.5.2 (2011-08-24)\n------------------\n\n- Still fixing on linux\n\n\n0.5.1 (2011-08-24)\n------------------\n\n- fix on linux\n\n\n0.5.0 (2011-08-19)\n------------------\n\n- initial release tested on win 32bit. NOT tested on win 64bit, mac 32/64bit\n  and posix 32/64bit systems. Please report if something doesn't work on this\n  systems.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/m01.stub",
    "keywords": "Zope3 z3c p01 m01 mongodb server stub setup",
    "license": "ZPL 2.1",
    "maintainer": null,
    "maintainer_email": null,
    "name": "m01.stub",
    "package_url": "https://pypi.org/project/m01.stub/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/m01.stub/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/m01.stub"
    },
    "release_url": "https://pypi.org/project/m01.stub/3.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "MongoDB server stub setup",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3530212,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1558c41beed527f2a46e29dbce251867c9bfa06a52d0bcec39bdc4e78c24ed0",
        "md5": "1186f1e936160bdaf4691d8218178ae0",
        "sha256": "07261b27336e649fe6a054392c68b31e02527a062717bb80afb9f9b34da67cee"
      },
      "downloads": -1,
      "filename": "m01.stub-3.0.0.zip",
      "has_sig": false,
      "md5_digest": "1186f1e936160bdaf4691d8218178ae0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21696,
      "upload_time": "2015-09-28T00:47:24",
      "upload_time_iso_8601": "2015-09-28T00:47:24.302774Z",
      "url": "https://files.pythonhosted.org/packages/d1/55/8c41beed527f2a46e29dbce251867c9bfa06a52d0bcec39bdc4e78c24ed0/m01.stub-3.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}