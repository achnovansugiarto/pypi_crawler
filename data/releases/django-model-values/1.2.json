{
  "info": {
    "author": "Aric Coady",
    "author_email": "aric.coady@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![image](https://img.shields.io/pypi/v/django-model-values.svg)](https://pypi.org/project/django-model-values/)\n![image](https://img.shields.io/pypi/pyversions/django-model-values.svg)\n![image](https://img.shields.io/pypi/djversions/django-model-values.svg)\n[![image](https://pepy.tech/badge/django-model-values)](https://pepy.tech/project/django-model-values)\n![image](https://img.shields.io/pypi/status/django-model-values.svg)\n[![image](https://img.shields.io/travis/coady/django-model-values.svg)](https://travis-ci.org/coady/django-model-values)\n[![image](https://img.shields.io/codecov/c/github/coady/django-model-values.svg)](https://codecov.io/github/coady/django-model-values)\n[![image](https://readthedocs.org/projects/django-model-values/badge)](https://django-model-values.readthedocs.io)\n[![image](https://requires.io/github/coady/django-model-values/requirements.svg)](https://requires.io/github/coady/django-model-values/requirements/)\n[![image](https://api.codeclimate.com/v1/badges/908dc0b46fdda69109ce/maintainability)](https://codeclimate.com/github/coady/django-model-values/maintainability)\n[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://pypi.org/project/black/)\n[![image](http://mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\n[Django](https://docs.djangoproject.com) model utilities for encouraging\ndirect data access instead of unnecessary object overhead. Implemented\nthrough compatible method and operator extensions to `QuerySets` and\n`Managers`.\n\nThe goal is to provide elegant syntactic support for best practices in\nusing Django's ORM. Specifically avoiding the inefficiencies and race\nconditions associated with always using objects.\n\n# Usage\n\nTypical model usage is verbose, inefficient, and incorrect.\n\n```python\nbook = Book.objects.get(pk=pk)\nbook.rating = 5.0\nbook.save()\n```\n\nThe correct method is generally supported, but arguably less readable.\n\n```python\nBook.objects.filter(pk=pk).update(rating=5.0)\n```\n\n`model_values` encourages the better approach with operator support.\n\n```python\nBook.objects[pk]['rating'] = 5.0\n```\n\nSimilarly for queries:\n\n```python\n(book.rating for book in books)\nbooks.values_list('rating', flat=True)\nbooks['rating']\n```\n\nColumn-oriented syntax is common in panel data layers, and the greater\nexpressiveness cascades. `QuerySets` also support aggregation and\nconditionals.\n\n```python\nbooks.values_list('rating', flat=True).filter(rating__gt=0)\nbooks['rating'] > 0\n\nbooks.aggregate(models.Avg('rating'))['rating__avg']\nbooks['rating'].mean()\n```\n\n`Managers` provide a variety of efficient primary key based utilities.\nTo enable, instantiate the `Manager` in your models. As with any custom\n`Manager`, it doesn't have to be named `objects`, but it is designed to\nbe a 100% compatible replacement.\n\n```python\nfrom model_values import Manager\n\nclass Book(models.Model):\n    ...\n    objects = Manager()\n```\n\n`F` expressions are also enhanced, and can be used directly without\nmodel changes.\n\n```python\nfrom model_values import F\n\n.filter(rating__gt=0, last_modified__range=(start, end))\n.filter(F.rating > 0, F.last_modified.range(start, end))\n```\n\n# Installation\n```console\n% pip install django-model-values\n```\n\n# Tests\n100% branch coverage.\n\n```console\n% pytest [--cov]\n```\n\n# Changes\n1.2\n* Python >=3.6 required\n* Django >=2.2 required\n\n1.1\n* Django 3 support\n\n1.0\n* Update related methods moved with deprecation warnings\n* Extensible change detection and updates\n* Django 2.2 functions\n\n0.6\n* Transform functions\n* Named tuples\n* Window functions\n* Distance lookups\n* Django 2.1 functions\n* `EnumField`\n* Annotated `items`\n* Expressions in column selection\n\n0.5\n* `F` expressions operators `any` and `all`\n* Spatial lookups and functions\n* Django 2.0 support\n\n0.4\n* `upsert` method\n* Django 1.9 database functions\n* `bulk_update` supports additional fields\n\n0.3\n* Lookup methods and operators\n* `F` expressions and aggregation methods\n* Database functions\n* Conditional expressions for updates and annotations\n* Bulk updates and change detection\n\n0.2\n* Change detection\n* Groupby functionality\n* Named tuples\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": "https://pythonhosted.org/django-model-values/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/coady/django-model-values",
    "keywords": "values_list pandas column-oriented data mapper pattern orm",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-model-values",
    "package_url": "https://pypi.org/project/django-model-values/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-model-values/",
    "project_urls": {
      "Documentation": "https://django-model-values.readthedocs.io",
      "Homepage": "https://github.com/coady/django-model-values"
    },
    "release_url": "https://pypi.org/project/django-model-values/1.2/",
    "requires_dist": [
      "django (>=2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Taking the O out of ORM.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14648583,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aec94d25244e229022bcc49f0a1e5ae5808d1b0cf4618433d4ed3f94fcd9d4f7",
        "md5": "b74a8c1242e64dd5af1a5bc048f6b77d",
        "sha256": "8ffe981aca633007993bcfff38eaeacc18cd13e0ac508def920c493d56b46f1c"
      },
      "downloads": -1,
      "filename": "django_model_values-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b74a8c1242e64dd5af1a5bc048f6b77d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 10479,
      "upload_time": "2020-08-05T00:57:17",
      "upload_time_iso_8601": "2020-08-05T00:57:17.897963Z",
      "url": "https://files.pythonhosted.org/packages/ae/c9/4d25244e229022bcc49f0a1e5ae5808d1b0cf4618433d4ed3f94fcd9d4f7/django_model_values-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3051ae3e8e0b94aed51ab8c18b55b7b44c3dea4aaadae521af5014dbefc00bbe",
        "md5": "435c2103cd0eafe57c975a4140981c02",
        "sha256": "ad36f3b55c86ab27d5d6abe0cca785461dff52c1e68fa67a126b782dfdf9da61"
      },
      "downloads": -1,
      "filename": "django-model-values-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "435c2103cd0eafe57c975a4140981c02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20221,
      "upload_time": "2020-08-05T00:57:19",
      "upload_time_iso_8601": "2020-08-05T00:57:19.569330Z",
      "url": "https://files.pythonhosted.org/packages/30/51/ae3e8e0b94aed51ab8c18b55b7b44c3dea4aaadae521af5014dbefc00bbe/django-model-values-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}