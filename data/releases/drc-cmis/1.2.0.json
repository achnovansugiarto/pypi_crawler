{
  "info": {
    "author": "Maykin Media, Joeri Bekker, Jorik Kraaikamp, Sergei Maertens, Silvia Amabilino",
    "author_email": "support@maykinmedia.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===========================\nDocumenten API CMIS adapter\n===========================\n\n:Version: 1.2.0\n:Source: https://github.com/open-zaak/cmis-adapter\n:Keywords: CMIS, Documenten API, VNG, Common Ground\n:PythonVersion: 3.7\n\n|build-status| |coverage| |linting| |black| |python-versions| |django-versions| |pypi-version|\n\nA CMIS backend-connector for the `Documenten API`_.\n\nDeveloped by `Maykin Media B.V.`_ commissioned by the municipality of Utrecht\nwith support of the municipality of Súdwest-Fryslân and the Open Zaak project\nteam.\n\n\nIntroduction\n============\n\nThe Documenten API CMIS adapter allows Django implementations of the Documenten\nAPI to easily connect to a CMIS-compatible Document Management System (DMS).\nMost notably it's used by `Open Zaak`_ to use a DMS as backend for the\nDocumenten API rather then using its own backend.\n\n.. _`Open Zaak`: https://github.com/open-zaak/open-zaak/\n\nFeatures\n--------\n\nBoth `CMIS 1.0`_ and `CMIS 1.1`_ are supported but not for all bindings. Below\nis a list of supported bindings for each CMIS version.\n\n.. _`CMIS 1.0`: https://docs.oasis-open.org/cmis/CMIS/v1.0/cmis-spec-v1.0.html\n.. _`CMIS 1.1`: https://docs.oasis-open.org/cmis/CMIS/v1.1/CMIS-v1.1.html\n\n+----------------------+-----------+-----------+\n|                      |  CMIS 1.0 |  CMIS 1.1 |\n+======================+===========+===========+\n| Web Services binding | Supported |  Untested |\n+----------------------+-----------+-----------+\n| AtomPub binding      |  Untested |  Untested |\n+----------------------+-----------+-----------+\n| Browser binding      |    N/A    | Supported |\n+----------------------+-----------+-----------+\n\nFor the supported bindings, the following features are implemented:\n\n* Retrieve from and store documents in a CMIS-compatible DMS.\n* Supports reading and writing of documents.\n* Supports checking out/in of documents.\n* Supports custom data-model for storing additional meta data.\n\nTested against:\n\n* `Corsa platform`_ using CMIS 1.0 Web Services binding (Thanks to `BCT`_)\n* `Alfresco`_ Enterprise 5.2.3 using CMIS 1.1 Browser binding (Thanks to\n  `Contezza`_)\n* `Alfresco CE 6.1.2-ga`_ (Used for CI)\n\n.. _`Corsa platform`: https://www.bctsoftware.com/corsa/\n.. _`BCT`: https://www.bctsoftware.com/\n.. _`Contezza`: https://contezza.nl/\n.. _`Alfresco CE 6.1.2-ga`: https://hub.docker.com/layers/alfresco/alfresco-content-repository-community/6.1.2-ga/images/sha256-6edaf25aded1b16991f06be7754a7030c9d67429353e39ce1da3fd307a5f2e6f?context=explore\n\n\nInstallation\n============\n\n**NOTE: If you are using Open Zaak 1.3.1 or above, the CMIS-adapter is already\nincluded and does not require separate installation.**\n\nRequirements\n------------\n\n* Python 3.7 or above\n* setuptools 30.3.0 or above\n* Django 2.2 or newer\n\nInstall\n-------\n\n1. Install the library in your Django project:\n\n.. code-block:: bash\n\n    $ pip install drc-cmis\n\n2. Add to ``INSTALLED_APPS`` in your Django ``settings.py``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        \"drc_cmis\",\n        ...\n    ]\n\n3. Create a mapping file to match Documenten API attributes to custom\n   properties in your DMS model. See `Mapping configuration`_.\n\n4. In your ``settings.py``, add these settings to enable it:\n\n.. code-block:: python\n\n    # Enables the CMIS-backend and the Django admin interface for configuring\n    # the DMS settings.\n    CMIS_ENABLED = True\n\n    # Absolute path to the mapping of Documenten API attributes to (custom)\n    # properties in your DMS content model.\n    CMIS_MAPPER_FILE = /path/to/cmis_mapper.json\n\n5. Login to the Django admin as superuser and configure the CMIS backend.\n\nMapping configuration\n=====================\n\nThere are 2 important concepts:\n\n* Content model - The DMS configuration to store (custom) properties on folders\n  and documents. These properties are called CMIS properties.\n* CMIS-mapper - a JSON-file containing the translation from Documenten API\n  attributes to CMIS properties.\n\nMapping the Documenten API attributes to (custom) CMIS properties in the DMS\ncontent model should be done with great care. When the DMS stores these\nproperties, the Documenten API relies on their existance to create proper responses.\n\nBelow is a snippet of the CMIS-mapper:\n\n.. code-block:: json\n\n    {\n      \"DOCUMENT_MAP\": {\n        \"titel\": \"drc:document__titel\"\n      }\n    }\n\nThe ``DOCUMENT_MAP`` describes the mapping for the\n``EnkelvoudigInformatieObject`` resource in the Documenten API. In this\nsnippet, only the ``EnkelvoudigInformatieObject.titel`` attribute is mapped to\na custom CMIS property called ``drc:document_titel``.\n\nCommunication between the Documenten API using the CMIS-adapter, is done via\nCMIS. Therefore, when creating a document via the Documenten API, the\nattributes are translated to CMIS properties as shown below (note that this is\na stripped down request example).\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\"?>\n    <soapenv:Envelope xmlmsg:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlmsg:msg=\"http://docs.oasis-open.org/ns/cmis/messaging/200908/\" xmlmsg:core=\"http://docs.oasis-open.org/ns/cmis/core/200908/\">\n    <soapenv:Header />\n    <soapenv:Body>\n      <msg:createDocument>\n        <msg:repositoryId>d6a10501-ef36-41e1-9aae-547154f57838</msg:repositoryId>\n        <msg:properties>\n          <core:propertyString propertyDefinitionId=\"drc:document__titel\">\n          <core:value>example.txt</core:value>\n        </msg:properties>\n        <msg:folderId>workspace://SpacesStore/7c6c7c86-fd63-4eec-bcf8-ffb59f6f6b90</msg:folderId>\n      </msg:createDocument>\n    </soapenv:Body>\n    </soapenv:Envelope>\n\nAn example of the mapping configuration, with all possible Documenten API\nresources and attributes is shown in ``test_app/cmis_mapper.json``\n(`cmis_mapper.json`_). The related DMS content model, that has the definitions\nfor all these CMIS properties, for `Alfresco`_ (an open source DMS) is in\n``/alfresco/extension/alfreso-zsdms-model.xml`` (`alfreso-zsdms-model.xml`_).\nBoth the mapping and the model should be aligned.\n\n.. _`cmis_mapper.json`: https://github.com/open-zaak/cmis-adapter/blob/master/test_app/cmis_mapper.json\n.. _`alfreso-zsdms-model.xml`: https://github.com/open-zaak/cmis-adapter/blob/master/alfresco/extension/alfreso-zsdms-model.xml\n\nMappings\n--------\n\nThe content model and the CMIS-mapper configurations need to be aligned. For\neach object, the API resource, the CMIS objecttype, CMIS basetype and the\n(configuratble) CMIS-mapper object is described.\n\n**Document**\n\nThe document itself, its content and meta data.\n\n+-------------------------+---------------------------------+\n| Documenten API resource | ``EnkelvoudigInformatieObject`` |\n+-------------------------+---------------------------------+\n| CMIS objecttype \\*      | ``drc:document``                |\n+-------------------------+---------------------------------+\n| CMIS basetype           | ``cmis:document``               |\n+-------------------------+---------------------------------+\n| CMIS-mapper object      | ``DOCUMENT_MAP``                |\n+-------------------------+---------------------------------+\n\nThe mapping between API-attributes and CMIS properties can be found in the `cmis_mapper.json`_.\n\n**Gebruiksrechten**\n\nUsage rights. These rights don't need to be enforced by the DMS but are stored\nfor use outside the DMS.\n\n+-------------------------+---------------------------------+\n| Documenten API resource | ``Gebruiksrechten``             |\n+-------------------------+---------------------------------+\n| CMIS objecttype \\*      | ``drc:gebruiksrechten``         |\n+-------------------------+---------------------------------+\n| CMIS basetype           | ``cmis:document``               |\n+-------------------------+---------------------------------+\n| CMIS-mapper object      | ``GEBRUIKSRECHTEN_MAP``         |\n+-------------------------+---------------------------------+\n\nThe mapping between API-attributes and CMIS properties can be found in the `cmis_mapper.json`_.\n\n**ObjectInformatieObject**\n\nRelation between a document and another object, like a Zaak, Besluit or\nsomething else.\n\n+-------------------------+---------------------------------+\n| Documenten API resource | ``ObjectInformatieObject``      |\n+-------------------------+---------------------------------+\n| CMIS objecttype \\*      | ``drc:oio``                     |\n+-------------------------+---------------------------------+\n| CMIS basetype           | ``cmis:document``               |\n+-------------------------+---------------------------------+\n| CMIS-mapper object      | ``OBJECTINFORMATIEOBJECT_MAP``  |\n+-------------------------+---------------------------------+\n\nThe mapping between API-attributes and CMIS properties can be found in the `cmis_mapper.json`_.\n\n**Zaaktype folder**\n\nContains all Zaken from this Zaaktype and has itself some meta data about the\nZaaktype. API-attributes are from the `Catalogi API`_ ``Zaaktype``-resource.\n\n.. _`Catalogi API`: https://vng-realisatie.github.io/gemma-zaken/standaard/catalogi/index\n\n+-------------------------+---------------------------------+\n| Catalogi API resource   | ``Zaaktype``                    |\n+-------------------------+---------------------------------+\n| CMIS objecttype \\*      | ``drc:zaaktypefolder``          |\n+-------------------------+---------------------------------+\n| CMIS basetype           | ``cmis:folder``                 |\n+-------------------------+---------------------------------+\n| CMIS-mapper object      | ``ZAAKTYPE_MAP``                |\n+-------------------------+---------------------------------+\n\nThe mapping between API-attributes and CMIS properties can be found in the `cmis_mapper.json`_.\n\n**Zaak folder**\n\nContains all Zaak-related documents and has itself some meta data about the\nZaak. API-attributes are from the `Zaken API`_ ``Zaak``-resource.\n\n.. _`Zaken API`: https://vng-realisatie.github.io/gemma-zaken/standaard/zaken/index\n\n+-------------------------+---------------------------------+\n| Zaken API resource      | ``Zaak``                        |\n+-------------------------+---------------------------------+\n| CMIS objecttype \\*      | ``drc:zaakfolder``              |\n+-------------------------+---------------------------------+\n| CMIS basetype           | ``cmis:folder``                 |\n+-------------------------+---------------------------------+\n| CMIS-mapper object      | ``ZAAK_MAP``                    |\n+-------------------------+---------------------------------+\n\nThe mapping between API-attributes and CMIS properties can be found in the `cmis_mapper.json`_.\n\n\\* CMIS objecttype: ``cmis:objectTypeId``\n\nDMS Content model configuration\n-------------------------------\n\nThe CMIS mapper configuration must match the content model in the DMS. Each\nproperty, like ``drc:document__titel`` in the example above, must be defined\nin the content model.\n\nThe example shown in ``/alfresco/extension/alfreso-zsdms-model.xml``\nindicates all attributes, types and whether the property is indexed (queryable)\nor not. If these attributes are incorrectly configured, the Documenten API\nmight not work correctly.\n\nDMS folder structure\n--------------------\n\nOpen Zaak uses a folder structure in the DMS similar to the\n`Zaak- en Documentservices 1.2`_. However, due to way the Documenten API works\nthere are differences.\n\n.. _`Zaak- en Documentservices 1.2`: https://www.gemmaonline.nl/index.php/Zaak-_en_Documentservices\n\n**Creating a document**\n\nWhen a document is created via the Documenten API, the document is placed in a\ntemporary folder. By default this is:\n\n.. code-block::\n\n    CMIS Root\n    +-- DRC (cmis:folder)\n        +-- [year] (cmis:folder)\n            +-- [month] (cmis:folder)\n                +-- [day] (cmis:folder)\n                    +-- [filename] (drc:document)\n\nFor example:\n\n.. code-block::\n\n    CMIS Root > DRC > 2020 > 12 > 31 > document.txt\n\nIf nothing else happens, this document will remain here.\n\n**Creating gebruiksrechten**\n\nA document can have Gebruiksrechten. These are stored as a separate document\n(``gebruiksrechten``) in a folder called ``Related data``. This folder is\nalways in the same folder as the document itself and is of type ``cmis:folder``.\n\nThe Gebruiksrechten will always be moved or copied along with the document.\n\nFor example:\n\n.. code-block::\n\n    CMIS Root > DRC > 2020 > 12 > 31 > document.txt\n    CMIS Root > DRC > 2020 > 12 > 31 > Related data > document.txt-gebruiksrechten\n\n**Relating a document to a Zaak**\n\nRelating a document to a Zaak (by creating an ``ObjectInformatieObject``\ninstance in the Documenten API) will cause the document and its Gebruiksrechten\nif it exists, to be **moved** or **copied** to the zaak folder.\n\n.. code-block::\n\n    CMIS Root\n    +-- DRC (cmis:folder)\n        +-- [zaaktype-folder] (drc:zaaktypefolder)\n            +-- [year] (cmis:folder)\n                +-- [month] (cmis:folder)\n                    +-- [day] (cmis:folder)\n                        +-- [zaak-folder] (drc:zaakfolder)\n                            +-- [filename] (drc:document)\n                            +-- Related data (cmis:folder)\n                                +-- [filename]-gebruiksrechten (drc:gebruiksrechten)\n                                +-- [filename]-oio (drc:oio)\n\nA document is **moved** when the document was **not related** to a Zaak before\n(and thus it was in the temporary folder). The document is **copied** to the\nnew zaak folder when the document was **already related** to a Zaak.\n\nThe relation of a document to a Zaak is implicitly described by its path. In\naddition however, this relation is stored as a separate document (``oio``) in\nthe ``Related data`` folder.\n\nFor example:\n\n.. code-block::\n\n    CMIS Root > DRC > Melding Openbare Ruimte > 2020 > 12 > 31 > ZAAK-0000001 > document.txt\n    CMIS Root > DRC > Melding Openbare Ruimte > 2020 > 12 > 31 > ZAAK-0000001 > Related data > document.txt-gebruiksrechten\n    CMIS Root > DRC > Melding Openbare Ruimte > 2020 > 12 > 31 > ZAAK-0000001 > Related data > document.txt-oio\n\n**Relating a document to a Besluit**\n\nWhen a document is related to a Besluit, there's a few different scenario's:\n\n1. The Besluit is **related** to a Zaak and...\n\n   1. The document is **not related** to a Zaak (and thus the document is in\n      the temporary folder): The document is **moved** to the Zaak folder of\n      the Zaak that is related to the Besluit.\n   2. The document is **already related** to a Zaak: The document is **copied**\n      to the new Zaak folder.\n\n2. The Besluit is **not related** to a Zaak and...\n\n   1. The document is **not related** to a Zaak: The document **stays** in its\n      temporary folder.\n   2. The document is **related** to a Zaak: The document is **copied** to the\n      temporary folder.\n\nIn all cases, the relation of a document to a Besluit is stored as a separate\ndocument (``oio``) in the ``Related data`` folder, relative to wherever the new\ndocument is stored.\n\n**Relating a document to another object**\n\nWhen a document is related to any other object, the document is not moved or\ncopied and stays in its temporary folder.\n\nDMS folder structure overview\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can configure the folders used by the CMIS adapter via the admin interface.\nSome folders are templated (indicated with ``{{ }}``) which means their value\ndepends on the current date or the related Zaak.\n\nA complete overview of all default folders and documents are shown below:\n\n**Zaak folder path**\n\nStorage location for documents related to a Zaak.\n\nDefault: ``/DRC/{{ zaaktype }}/{{ year }}/{{ month }}/{{ day }}/{{ zaak }}/``\n\n.. code-block::\n\n    CMIS Root\n    +-- DRC (cmis:folder)\n        +-- [zaaktype-folder] (drc:zaaktypefolder)\n            +-- [year] (cmis:folder)\n                +-- [month] (cmis:folder)\n                    +-- [day] (cmis:folder)\n                        +-- [zaak-folder] (drc:zaakfolder)\n                            +-- [filename] (drc:document)\n                            +-- Related data (cmis:folder)\n                                +-- [filename]-gebruiksrechten (drc:gebruiksrechten)\n                                +-- [filename]-oio (drc:oio)\n\nYou can for example change this to: ``/DRC/{{ zaaktype }}/{{ zaak }}/`` to\nremove the year/month/day folder structure entirely.\n\n**Other folder path**\n\nStorage location for documents not (yet) related to a Zaak.\n\nDefault: ``/DRC/{{ year }}/{{ month }}/{{ day }}/``\n\n.. code-block::\n\n    CMIS Root\n    +-- DRC (cmis:folder)\n        +-- [year] (cmis:folder)\n            +-- [month] (cmis:folder)\n                +-- [day] (cmis:folder)\n                    +-- [filename] (drc:document)\n                    +-- Related data (cmis:folder)\n                        +-- [filename]-gebruiksrechten (drc:gebruiksrechten)\n                        +-- [filename]-oio (drc:oio)\n\n\nReferences\n==========\n\n* `Issues <https://github.com/open-zaak/open-zaak/issues>`_\n* `Code <https://github.com/open-zaak/cmis-adapter>`_\n\n\nLicense\n=======\n\nCopyright © Dimpact 2019 - 2020\n\nLicensed under the EUPL_\n\n.. _EUPL: LICENCE.md\n\n.. _`Maykin Media B.V.`: https://www.maykinmedia.nl\n\n.. _`Alfresco`: https://www.alfresco.com/ecm-software/alfresco-community-editions\n\n.. |build-status| image:: https://github.com/open-zaak/cmis-adapter/workflows/Run%20CI/badge.svg\n    :target: https://github.com/open-zaak/cmis-adapter/actions?query=workflow%3A%22Run+CI%22\n    :alt: Run CI\n\n.. |linting| image:: https://github.com/open-zaak/cmis-adapter/workflows/Code%20quality%20checks/badge.svg\n    :target: https://github.com/open-zaak/cmis-adapter/actions?query=workflow%3A%22Code+quality+checks%22\n    :alt: Code linting\n\n.. |coverage| image:: https://codecov.io/gh/open-zaak/cmis-adapter/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/open-zaak/cmis-adapter\n    :alt: Coverage status\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/drc-cmis.svg\n\n.. |django-versions| image:: https://img.shields.io/pypi/djversions/drc-cmis.svg\n\n.. |pypi-version| image:: https://img.shields.io/pypi/v/drc-cmis.svg\n    :target: https://pypi.org/project/drc-cmis/\n\n.. _Documenten API: https://vng-realisatie.github.io/gemma-zaken/standaard/documenten/index\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/open-zaak/cmis-adapter",
    "keywords": "CMIS,Documenten API,VNG,Common Ground",
    "license": "EUPL-1.2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drc-cmis",
    "package_url": "https://pypi.org/project/drc-cmis/",
    "platform": "",
    "project_url": "https://pypi.org/project/drc-cmis/",
    "project_urls": {
      "Homepage": "https://github.com/open-zaak/cmis-adapter"
    },
    "release_url": "https://pypi.org/project/drc-cmis/1.2.0/",
    "requires_dist": [
      "django (<3.0)",
      "django-choices",
      "cmislib-maykin (>=0.7.2.dev0)",
      "django-solo",
      "iso8601",
      "vng-api-common",
      "python-decouple",
      "pytest-cov ; extra == 'coverage'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "flake8 ; extra == 'pep8'",
      "bumpversion ; extra == 'release'",
      "twine ; extra == 'release'",
      "pytest ; extra == 'tests'",
      "pytest-django ; extra == 'tests'",
      "tox ; extra == 'tests'",
      "isort ; extra == 'tests'",
      "black ; extra == 'tests'",
      "factory-boy (>=3.0.0) ; extra == 'tests'",
      "psycopg2 ; extra == 'tests'",
      "responses ; extra == 'tests'",
      "freezegun ; extra == 'tests'",
      "requests-mock ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "An adapter to manage Documenten API resources in a CMIS backend.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16099795,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d4f75ca9d8732305cd3e996646ca8ef3097c24cdcefaaeb15ee2d86d2acf622",
        "md5": "9151f493e278746e689ecc8f1727a30c",
        "sha256": "3ede75c5cbd4e988184dd1a2b25fcd453a6440e06e38e05d3f71ffc3c26bc887"
      },
      "downloads": -1,
      "filename": "drc_cmis-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9151f493e278746e689ecc8f1727a30c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 91352,
      "upload_time": "2021-02-04T11:23:43",
      "upload_time_iso_8601": "2021-02-04T11:23:43.639003Z",
      "url": "https://files.pythonhosted.org/packages/2d/4f/75ca9d8732305cd3e996646ca8ef3097c24cdcefaaeb15ee2d86d2acf622/drc_cmis-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e613aa971535429e375c512c210a4bbe5d3a3e0c9eeff67dd2e0938c8c5a5647",
        "md5": "56cf3423eef61282fe65d8c92679e92f",
        "sha256": "7d0c7bc34b7b8829152b5ae69befff2924bc89d9ddf2fd5d6bcc5e8b4b3267aa"
      },
      "downloads": -1,
      "filename": "drc-cmis-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "56cf3423eef61282fe65d8c92679e92f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 67361,
      "upload_time": "2021-02-04T11:23:45",
      "upload_time_iso_8601": "2021-02-04T11:23:45.238559Z",
      "url": "https://files.pythonhosted.org/packages/e6/13/aa971535429e375c512c210a4bbe5d3a3e0c9eeff67dd2e0938c8c5a5647/drc-cmis-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}