{
  "info": {
    "author": "Micromechanics Team and Steffen Brinckmann",
    "author_email": "sbrinckm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Linting](https://github.com/micromechanics/micromechanics/actions/workflows/pylint.yml/badge.svg)](https://github.com/micromechanics/micromechanics/actions/workflows/pylint.yml)\n[![Documentation](https://github.com/micromechanics/micromechanics/actions/workflows/docs.yml/badge.svg)](https://github.com/micromechanics/micromechanics/actions/workflows/docs.yml)\n[![pypi.org](https://github.com/micromechanics/micromechanics/actions/workflows/pypi.yml/badge.svg)](https://github.com/micromechanics/micromechanics/actions/workflows/pypi.yml)\n[![Tests](https://github.com/micromechanics/micromechanics/actions/workflows/tests.yml/badge.svg)](https://github.com/micromechanics/micromechanics/actions/workflows/tests.yml)\n\n# Nanoindentation library for experimental micromechanics\nThis library allows to read datafiles from different nanoindenters and allows to analyse it by evaluating the hardness and Young's modulus using the Oliver-Pharr method. It also includes functions for frame stiffness and area function calibration as well as a number of plotting functions.\n\nThe library can read:\n- xls files from the vendors MTS, Agilent, Keysight, which produced the XP and G200 indenters\n- hap files from the Fischer-Scope\n- zip-files which include all the files of the Micromaterials NanoXtreme\n- some common format which is based on the NeXus common data format\n\nInstall by\n``` bash\npip install nanoindentation\n```\n\nRun test using the default data\n``` python\nfrom nanoindentation import Indentation\ni = Indentation()\ni.plotAll()\n```\n\nMore information as well as tutorials can be found at: [Read the docs](https://micromechanics.github.io/micromechanics/)\n\nIf you want to contribute to the development, we develop at [github](https://github.com/micromechanics/micromechanics)\n\n\n# Contributors\n- Steffen Brinckmann\n- Velislava Yonkova\n- Ruomeng (Nicole) Chen\n\n\n# Information for developers\nTest the code: linting, documentation and then the tests from project main directory\n``` bash\npylint micromechanics\nmake -C docs html\npython tests/testVerification.py\npython tests/testAllFiles.py\npython tests/testAgilent_xls.py\npython tests/testMicromaterials_hdf5.py\npython tests/testFischerScope_hdf5.py\n```\nThese tests are also executed as github action once pushed.\n\nor the short form to run all the tests\n``` bash\npython -m unittest tests/test*\n```\n\n#TODO turn all tests into one github action\n\nThen upload/create-pull-request to github, via\n``` bash\n./commit.py 'my message'\n```\n\n## How to find bugs that occurred in a past commit\nSteps:\n- Git history in nice ASCII  => save in file in distant folder; along with notes\n- go to point in history (do not change the present)\n- find diff: always old^ new\n- run your tests\n- undo your changes since checkout\n- go back to present\n\n``` bash\ngit log --oneline --graph\ngit checkout bf0b634\ngit diff e7eac50^ fed7119  #(old^ new)\n# test\ngit reset --hard\ngit checkout main\n```\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://micromechanics.github.io/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micromechanics",
    "package_url": "https://pypi.org/project/micromechanics/",
    "platform": null,
    "project_url": "https://pypi.org/project/micromechanics/",
    "project_urls": {
      "Homepage": "https://micromechanics.github.io/"
    },
    "release_url": "https://pypi.org/project/micromechanics/1.1.0/",
    "requires_dist": [
      "h5py",
      "lmfit",
      "matplotlib",
      "numpy",
      "pandas",
      "scipy",
      "xlrd"
    ],
    "requires_python": ">=3.7",
    "summary": "Investigation of nanoindentation and SEM data",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17511085,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b88c385932c46e1134a1db9d3f5b533893235e7c5d50f99b75926dee1bb8b12",
        "md5": "6f9d1cd330fed5456c8e1994d6f8a42a",
        "sha256": "acb6bde3aa4752527d0cd10c47b6104bd521589b8ca18312ec76498b4fe32415"
      },
      "downloads": -1,
      "filename": "micromechanics-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f9d1cd330fed5456c8e1994d6f8a42a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 47520,
      "upload_time": "2023-02-13T08:35:54",
      "upload_time_iso_8601": "2023-02-13T08:35:54.332034Z",
      "url": "https://files.pythonhosted.org/packages/3b/88/c385932c46e1134a1db9d3f5b533893235e7c5d50f99b75926dee1bb8b12/micromechanics-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}