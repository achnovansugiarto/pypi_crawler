{
  "info": {
    "author": "krohak",
    "author_email": "rohaksinghal14@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Welcome to LWWElementGraph’s documentation!\n\n## LWWElementGraph\n\nModule for a lightweight LWWElementGraph, which uses LWWElementSet.\nHandles merges in a Last Write Wins Manner.\n\n## LWWElementSet\n\nModule for a lightweight LWWElementSet in Python.\nHandles merges in a Last Write Wins Manner.\n\n## Install\n\nTo install packages, perform:\n`pip install -r requirements.txt`\n\n## Tests\n- /tests/testLWWElementSet.py\n- /tests/testLWWElementGraph.py\n- /tests/testIntegration.py\n\n\n# Contents:\n\n* [LWWElementGraph package](#lwwelementgraph-package)\n\n    * [Module contents](#module-contents)\n\n        * [LWWElementGraph.LWWElementGraph module](#class-lwwelementgraphlwwelementgraph)\n\n    * [Submodules](#submodules)\n\n        * [LWWElementGraph.LWWElementSet module](#lwwelementgraphlwwelementset-module)\n\n\n# LWWElementGraph package\n\n## Module contents\n\n### _class_ LWWElementGraph.LWWElementGraph()\nBases: `object`\n\n\n#### \\__init__()\nInitializing Vertices and Edges as LWWElementSet. Maintaining live updating\ngraphState to optimize reads (getNeighborsOf, findPath)\n\n\n#### addEdge(vertex1, vertex2)\nIf vertex1, vertex2 present, add edge to edges.addSet. Maintain graphState \nRuns in O(1)\n\n\n#### addVertex(vertex)\nAdds the Vertex to vertices LWWSet. Also maintains graphState for read optimization\nRuns in O(1)\n\n\n#### findPath(vertex1, vertex2)\nPerform BFS for shortest path. Uses graphState which was optimized for read\nto get all the neighbours of a vertex in O(1).\nRuns in O(V + E)\n\n\n#### getNeighborsOf(vertex)\nO(1) query for all the vertices connected to the query vertex. Uses graphState \nwhich was optimized for read\n\n\n#### isMember(vertex)\nCheck if vertex is valid, runs in O(1)\n\n\n#### mergeGraphs(otherGraph)\nMerging Graphs by merging their Vertice and Edge LLWSet. Remove Edge if Vertex not present\nanymore after merge. Recompute the internal graphState as well. Runs in O(V + E)\n\n\n#### removeEdge(vertex1, vertex2)\nIf edge present, add it to edges.removeSet. Maintain graphState.\nRuns in O(E) because of _removeEdge\n\n\n#### removeVertex(vertex)\nIf vertex is present, then add it to vertices.removeSet. Add each of its edge to \nedges.removeSet. Also maintains graphState for read optimization.\nRuns in O(E) because of _removeVertex\n\n## Submodules\n\n\n## LWWElementGraph.LWWElementSet module\n\n\n### _class_ LWWElementGraph.LWWElementSet.LWWElementSet()\nBases: `object`\n\n\n#### \\__init__()\nInitialize addSet and removeSet to empty dictionary. iData and iTimestamp \nare the index of the data and timestamp respectively\n\n\n#### addElement(element)\nAdds in the addSet. If element already in addSet, replace timestamp with now()\n\n\n#### getMembers()\nReturns all the valid members. Go through addSet, check if it is a member\n\n\n#### isMember(element)\nElement is a member if it is in addSet, and either not removeSet, \nor in removeSet but with an earlier timestamp than it’s timestamp in addSet\n\n\n#### mergeSet(selfSet, otherSet)\nPrioritize Last Write. Since elements are in the form (data, datetime), reverse them to\ncompare by datetime and take max. Then, reverse back the max and store in merged\n\n\n#### mergeWith(otherLWWElementSet)\nMerge self with otherLWWElementSet in LWW manner\n\n\n#### removeElement(element)\nAdds in the removeSet. Cannot remove if not already in addSet\n\n---\n### Made by [krohak](https://github.com/krohak/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/krohak/CDRT",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LWWElementGraph",
    "package_url": "https://pypi.org/project/LWWElementGraph/",
    "platform": "",
    "project_url": "https://pypi.org/project/LWWElementGraph/",
    "project_urls": {
      "Homepage": "https://github.com/krohak/CDRT"
    },
    "release_url": "https://pypi.org/project/LWWElementGraph/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Module for a lightweight LWWElementGraph",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12849819,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b34a5de59f90b4e0ae540b884fec478e0c0540fe2205440945a2010355e8b693",
        "md5": "b083c1f509da182ff356b73a998a9172",
        "sha256": "2849c995fbe1ab760e629e91eb686a739ee5dea924579d9bd369c1b02019b2cc"
      },
      "downloads": -1,
      "filename": "LWWElementGraph-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b083c1f509da182ff356b73a998a9172",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6079,
      "upload_time": "2022-02-10T12:28:31",
      "upload_time_iso_8601": "2022-02-10T12:28:31.545101Z",
      "url": "https://files.pythonhosted.org/packages/b3/4a/5de59f90b4e0ae540b884fec478e0c0540fe2205440945a2010355e8b693/LWWElementGraph-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c81d5dac16630c7c2266e68204d2ce24a7fe26095eef00e9488437dafb922afc",
        "md5": "2c8e159df881dff3a031d972a86f783c",
        "sha256": "4c6f55f05715e2b053937c0669989a91cd01dc6d6e01b016e8636ce85dd4936a"
      },
      "downloads": -1,
      "filename": "LWWElementGraph-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2c8e159df881dff3a031d972a86f783c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4958,
      "upload_time": "2022-02-10T12:28:33",
      "upload_time_iso_8601": "2022-02-10T12:28:33.115409Z",
      "url": "https://files.pythonhosted.org/packages/c8/1d/5dac16630c7c2266e68204d2ce24a7fe26095eef00e9488437dafb922afc/LWWElementGraph-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}