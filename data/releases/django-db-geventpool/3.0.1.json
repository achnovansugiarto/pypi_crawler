{
  "info": {
    "author": "Javier Cordero Martinez",
    "author_email": "jcorderomartinez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "django-db-geventpool\n====================\n\n.. image:: http://img.shields.io/travis/jneight/django-db-geventpool.svg\n   :target: https://travis-ci.org/jneight/django-db-geventpool\n   :alt: travis\n\n.. image:: https://img.shields.io/pypi/v/django-db-geventpool.svg\n   :target: https://pypi.python.org/pypi/django-db-geventpool\n   :alt: pypi version\n\n.. image:: http://img.shields.io/pypi/l/django-db-geventpool.svg\n   :target: https://pypi.python.org/pypi/django-db-geventpool\n   :alt: pypi license\n\nAnother DB pool using gevent for PostgreSQL DB.\n\n*Need Django 1.5.x or newer (check settings for django >= 1.6)*\n\nPython 3 is supported, but if `gevent` is not installed successfully it will use `eventlet`.\n\npsycopg2\n--------\n\ndjango-db-geventpool requires psycopg2:\n\n* ``psycopg2>=2.5.1`` for CPython 2 and 3 (or `psycopg2-binary <https://pypi.org/project/psycopg2-binary/>`_â€”see `notes in the psycopg2 2.7.4 release <http://initd.org/psycopg/articles/2018/02/08/psycopg-274-released/>`_)\n* ``psycopg2cffi>=2.7`` for PyPy\n\n\nPatch psycopg2\n--------------\n\nBefore using the pool, psycopg2 must be patched with psycogreen, if you are using `gunicorn webserver <http://www.gunicorn.org/>`_,\na good place is the `post_fork() <http://docs.gunicorn.org/en/latest/settings.html#post-fork>`_ function at the config file:\n\n.. code:: python\n\n   from psycogreen.gevent import patch_psycopg     # use this if you use gevent workers\n   from psycogreen.eventlet import patch_psycopg   # use this if you use eventlet workers\n\n   def post_fork(server, worker):\n       patch_psycopg()\n       worker.log.info(\"Made Psycopg2 Green\")\n\n\nSettings\n---------\n\n\n  + Set *ENGINE* in your database settings to: \n      + *'django_db_geventpool.backends.postgresql_psycopg2'*\n      + For postgis: *'django_db_geventpool.backends.postgis'*\n  + Add *MAX_CONNS* to *OPTIONS* to set the maximun number of connections allowed to database (default=4)\n  + If using django 1.6 or newer, add *'CONN_MAX_AGE': 0* to settings to disable default django persistent connection feature. And read below note if you are manually spawning greenlets \n\n.. code:: python\n\n    # for django 1.5.x\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django_db_geventpool.backends.postgresql_psycopg2',\n            'NAME': 'db',           # Or path to database file if using sqlite3.\n            'USER': 'postgres',                      # Not used with sqlite3.\n            'PASSWORD': 'postgres',                  # Not used with sqlite3.\n            'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.\n            'PORT': '',                      # Set to empty string for default. Not used with sqlite3.\n            'OPTIONS': {\n                'MAX_CONNS': 20\n            }\n        }\n    }\n\n    # for django 1.6 and newer version, CONN_MAX_AGE must be set to 0, or connections will never go back to the pool\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django_db_geventpool.backends.postgresql_psycopg2',\n            'NAME': 'db',\n            'USER': 'postgres',\n            'PASSWORD': 'postgres',\n            'HOST': '',\n            'PORT': '',\n            'ATOMIC_REQUESTS': False,\n            'CONN_MAX_AGE': 0,\n            'OPTIONS': {\n                'MAX_CONNS': 20\n            }\n        }\n    }\n\nUsing Django 1.6+ ORM when not serving requests\n____________\n\nIf you are using django 1.6+ with celery (or other), or have code that manually spawn greenlets it will not be sufficient to set CONN_MAX_AGE to 0.\nDjango only checks for long-live connections when finishing a request - So if you manually spawn a greenlet (or have a task spawning one) its connections will\nnot get cleaned up and will live until timeout. In production this can cause quite some open connections and while developing it can hamper your tests cases.\n\nTo solve it make sure that each greenlet either sends the django.core.signals.request_finished signal or calls django.db.close_old_connections() right before it ends\n\nThe decorator method is preferred, but the other alternatives are also valid.\n\n.. code:: python\n\n   from django_db_geventpool.utils import close_connection\n\n   @close_connection\n   def greenlet_worker()\n        ...\n\nor \n\n.. code:: python\n\n   from django.core.signals import request_finished\n   def greenlet_worker():\n      ...\n      request_finished.send(sender=\"greenlet\")\n\nor\n\n.. code:: python\n\n   from django.db import close_old_connections\n   def greenlet_worker():\n      ...\n      close_old_connections()\n\n\nOther pools\n------------\n\n* `django-db-pool <https://github.com/gmcguire/django-db-pool>`_\n* `django-postgresql <https://github.com/kennethreitz/django-postgrespool>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jneight/django-db-geventpool",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-db-geventpool",
    "package_url": "https://pypi.org/project/django-db-geventpool/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-db-geventpool/",
    "project_urls": {
      "Homepage": "https://github.com/jneight/django-db-geventpool"
    },
    "release_url": "https://pypi.org/project/django-db-geventpool/3.0.1/",
    "requires_dist": [
      "django (>=1.5)",
      "psycogreen (>=1.0)"
    ],
    "requires_python": "",
    "summary": "Add a DB connection pool using gevent to django",
    "version": "3.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13772967,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "edd2bc8082c5b6dbdbbaadfbc57b777f6b8fff9e288dc3a5dbd0a3dd1fceed39",
        "md5": "c0d8ae7a4bcd1b0370e36eb6bb400113",
        "sha256": "ba5fcf7c1722ecf7e3600034a4e68b66b3bdbbd838ff5dc71dd9fad2e09ea7a3"
      },
      "downloads": -1,
      "filename": "django_db_geventpool-3.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0d8ae7a4bcd1b0370e36eb6bb400113",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13746,
      "upload_time": "2019-01-01T09:36:18",
      "upload_time_iso_8601": "2019-01-01T09:36:18.868439Z",
      "url": "https://files.pythonhosted.org/packages/ed/d2/bc8082c5b6dbdbbaadfbc57b777f6b8fff9e288dc3a5dbd0a3dd1fceed39/django_db_geventpool-3.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7f4054ef0b44f4f9b36c4db4aeb03eb291739e2976d81f36074a754d2a49fdd",
        "md5": "7ed23d1eb17117b6cc291e4e80daf0ee",
        "sha256": "dc2f7109711eec688ca4e640007ea25fe47feaf9646d6eb0b195be9559554dfb"
      },
      "downloads": -1,
      "filename": "django-db-geventpool-3.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7ed23d1eb17117b6cc291e4e80daf0ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11316,
      "upload_time": "2019-01-01T09:36:20",
      "upload_time_iso_8601": "2019-01-01T09:36:20.442523Z",
      "url": "https://files.pythonhosted.org/packages/c7/f4/054ef0b44f4f9b36c4db4aeb03eb291739e2976d81f36074a754d2a49fdd/django-db-geventpool-3.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}