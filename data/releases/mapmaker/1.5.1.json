{
  "info": {
    "author": "Alexander Keil",
    "author_email": "alex@akeil.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Map Maker\n#########\n``mapmaker`` is a simple script to generate map images for \"Slippy Tile\" maps.\nMap tiles are downloaded from services such as OpenStreetMap and are combined\ninto a single image.\n\n\nInstallation\n============\nUse the installation script:\n\n.. code:: shell-session\n\n    $ python setup.py install\n\nOr install using pip:\n\n.. code:: shell-session\n\n    $ pip install mapmaker\n\n\nCommand Line Usage\n==================\nUse ``mapmaker --help`` to show a detailed list of options.\n\n\nBasic Usage\n-----------\nThis will create a file ``map.png`` in the current directory. The map will\ncover the bounding box specified with two pairs of lat/lon coordinates:\n\n.. code:: shell-session\n\n    $ mapmaker  47.44,10.95 47.37,11.13\n\nOne can also specify a center point and a radius:\n\n.. code:: shell-session\n\n    $ mapmaker 63.0695,-151.0074 100km\n\nIf the coordinates start with a negative value, use ``--`` to indicate the\nend of command line flags:\n\n.. code:: shell-session\n\n    $ mapmaker -- -32.653197,-70.0112 100km\n\nCoordinates can also be specified in DMS format:\n\n.. code:: shell-session\n\n    $ mapmaker \"63°4'10.2'' N, 151°0'26.64'' W\" 4km\n\nUse a single quote for minutes (``'``)\nand two single quotes (``''``) for seconds.\nNote the quotes around the command line argument.\n\n\nYou can also specify the **output file** (default is *map.png*):\n\n.. code:: shell-session\n\n    $ mapmaker 63.0695,-151.0074 100km denali.png\n\n\nAdditional Options\n------------------\nSpecify the **zoom level** with the ``--zoom`` flag. The default is 8.\nHigher values mean more detail and result in larger map images.\n\n.. code:: shell-session\n\n    $ mapmaker --zoom 12 63.0695,-151.0074 100km\n\nUse ``--style`` to control the **look** of the map:\n\n.. code:: shell-session\n\n    $ mapmaker --style human 63.0695,-151.0074 100km\n\nUse the ``--shading`` flag to overlay a hillshading layer over the map image.\nNote that hillshading is not available for all regions.\n\n.. code:: shell-session\n\n    $ mapmaker --shading 45.83,6.88 100km\n\nNote that some map styles already come with hillshading.\n\nTo control the resulting image format, use ``--aspect``:\n\n.. code:: shell-session\n\n    $ mapmaker --aspect 16:9 45.83,6.88 100km\n\nThe aspect ratio is given in the format ``W:H`` (e.g. 4:3 or 19:9).\nThe resulting map image will contain the given bounding box (or point w/ radius)\nand max be extended to North/South or East/West to match the aspect ratio.\nNote that the *resolution* of the image depends on the ``--zoom`` factor.\n\n\nDecorations\n-----------\nSet a headline with ``--title``, specify optional ``PLACEMENT``, ``COLOR``\nand ``BORDER`` followed by the title string.\nThe title will be added to the *Margin Area* and will force a margin that is\nlarge enough to accommodate the title.\n\n:PLACEMENT:   one of the cardinal directions e.g. ``NW, NNW, N, NNE, NE, ...``.\n:BORDER:      a single integer value for the border width in in pixels.\n:COLOR:       RGB(A) tuple as a comma separated string, e.g. \"255,0,0\".\n:BACKGROUND:  RGB(A) tuple as a comma separated string, e.g. \"255,0,0\".\n\n.. code:: shell-session\n\n    $ mapmaker --title My Map -- 45.83,6.88 100km\n    $ mapmaker --title NNW My Map -- 45.83,6.88 100km\n    $ mapmaker --title NNW 5 My Map -- 45.83,6.88 100km\n    $ mapmaker --title NNW 5 255,0,0 My Map -- 45.83,6.88 100km\n    $ mapmaker --title NNW 5 255,0,0 0,0,255 My Map -- 45.83,6.88 100km\n\n*Note the ``--`` to indicate the end of non-positional arguments.*\n\nUse ``--comment`` to add a comment in small print. Arguments are the same\nas for ``--title``:\n\n.. code:: shell-session\n\n    $ mapmaker --comment My Comment 45.83,6.88 100km\n    $ mapmaker --comment SE 200,200,200 My Comment 45.83,6.88 100km\n\nUse ``--margin`` and ``--background`` to apply a border around the map.\nNote that some decoration arguments will automatically add a margin area.\n\n``margin`` is given in pixels as a single value (all sides),\na pair of two values (top/bottom and left/right)\nor as four separate values for top, right, bottom, left (clockwise).\n\n.. code:: shell-session\n\n    $ mapmaker --margin 50 45.83,6.88 100km\n    $ mapmaker --margin 20 40 45.83,6.88 100km\n    $ mapmaker --margin 10 15 20 15 45.83,6.88 100km\n\n``background`` is given as a comma separated RGB(A) value:\n\n.. code:: shell-session\n\n    $ mapmaker --background 200,200,200 45.83,6.88 100km\n    $ mapmaker --background 200,200,200,128 45.83,6.88 100km\n\nThe ``--frame`` argument adds a border around the map content, that is between\nthe map and the (optional) margin area.\n``frame`` has up to four optional parameters:\n\n:``WIDTH``:     The width in pixels, e.g. \"8\".\n:``COLOR``:     The main color as an RGB(A) value, e.g. \"0,0,0\" (black).\n:``ALT_COLOR``: The secondary color as an RGB(A) value, e.g. \"255,255,255\" (white).\n:``STYLE``:     The style, either \"solid\" or \"coordinates\".\n\nArguments can be supplied in any order.\n``ALT_COLOR`` is only needed for styles that feature alternating colors,\nif two RGB(A) values are specified, the second is considered the ``ALT_COLOR``.\n\nAll arguments are optional and if ``--frame`` is specified without arguments,\na default frame will be drawn.\n\nExamples:\n\n.. code:: shell-session\n\n    $ mapmaker --frame 45.83,6.88 100km\n    $ mapmaker --frame 12 45.83,6.88 100km\n    $ mapmaker --frame 12 255,0,0 45.83,6.88 100km\n    $ mapmaker --frame 12 255,0,0 0,0,255 coordinates 45.83,6.88 100km\n    $ mapmaker --frame coordinates 45.83,6.88 100km\n\n\nGeoJSON\n-------\nThe ``--geojson`` option can be used to draw `GeoJSON <https://geojson.org/>`_\nobjects onto the map.\n\nThe GeoJSON can contain additional attributes to control the color, line width,\netc. The additional attributes can be part of a *Geometry* or part of the\n``properties`` attribute of a parent *Feature*.\nHave a look hat the module documentation to see which special attributes are\nsupported.\n\n.. code:: json\n\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [12.594474, 55.691438]\n      },\n      \"properties\": {\n        \"symbol\": \"square\",\n        \"color\": [10, 147, 150],\n        \"size\": 12\n      }\n    }\n\nYou can also use any *Geometry* object directly:\n\n.. code:: json\n\n    {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [8.612316, 47.680632],\n        [8.612316, 47.676327],\n        [8.617423, 47.676327],\n        [8.617423, 47.680632]\n      ]\n      \"color\": [60, 9, 108],\n      \"fill\": [60, 9, 108, 120]\n    }\n\nThe ``--geojson`` option supports a path to a JSON file or a JSON formatted\nstring.\n\n\nCreate a Gallery\n----------------\nUse the ``--gallery`` flag to render a set of maps, one for each available style.\nIn this case, you specify an output directory instead of a file (default is the\ncurrent directory).\nThis flag ignores the ``--style`` parameter.\n\n\nConfiguration\n#############\nThe configuration file is located at ``~/.config/mapmaker/config.ini``\n\n\nStyles (Tile Servers)\n=====================\nYou can specify additional map styles like this:\n\n.. code:: ini\n\n    # ~/.config/mapmaker/config.ini\n\n    [services]\n    osm   = https://tile.openstreetmap.org/{z}/{x}/{y}.png\n    topo  = https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\n\nWhere ``osm`` is the name of the style (as used in the ``--style`` flag) and\nthe URL is the URL pattern for downloading tiles.\n\nThe URL pattern contains three variables:\n\n:z: zoom level\n:x: X-coordinate of the tile\n:y: Y-coordinate of the tile\n\nSee for example https://wiki.openstreetmap.org/wiki/Tiles.\n\nThe URL may contain an additional placeholder for an API Key (see below)::\n\n    atlas = https://tile.thunderforest.com/atlas/{z}/{x}/{y}.png?apikey={api}\n                                                                         ^^^\n\n\nAuthorization\n=============\nAuthorization is needed for the following services:\n\n======================= ======= ======================================\nDomain                  Type    Homepage\n======================= ======= ======================================\ntile.thunderforest.com  API Key https://www.thunderforest.com/\nmaps.geoapify.com       API Key https://www.geoapify.com/\napi.mapbox.com          Token   https://mapbox.com/\n======================= ======= ======================================\n\nMost services offer a free plan for limited/non-commercial use. Check out the\nURL from the table above.\n\nOnce you have registered, place your API Keys in a config file like this:\n\n.. code:: ini\n\n    # ~/.config/mapmaker/config.ini\n\n    [keys]\n    tile.thunderforest.com  = YOUR_API_KEY\n    maps.geoapify.com       = YOUR_API_KEY\n    api.mapbox.com          = YOUR_API_KEY\n\nWhere ``tile.thunderforest.com`` is the domain from which the image tiles are\nrequested.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/akeil/mapmaker",
    "keywords": "osm,openstreetmap,tiles,map,image,cli",
    "license": "MIT",
    "maintainer": "Alexander Keil",
    "maintainer_email": "",
    "name": "mapmaker",
    "package_url": "https://pypi.org/project/mapmaker/",
    "platform": null,
    "project_url": "https://pypi.org/project/mapmaker/",
    "project_urls": {
      "Bug Reports": "http://github.com/akeil/mapmaker/issues",
      "Homepage": "http://github.com/akeil/mapmaker",
      "Source": "http://github.com/akeil/mapmaker"
    },
    "release_url": "https://pypi.org/project/mapmaker/1.5.1/",
    "requires_dist": [
      "appdirs",
      "Pillow",
      "requests",
      "geojson"
    ],
    "requires_python": ">=3",
    "summary": "Create map images from slippy map tiles.",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14679730,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69d977d39ac2ec924ea6b028a97771a6d40d98dc5ce4e29ad4cdcdc3659ba2ad",
        "md5": "dd861c94ab8a389b3ed88110a8fc1b4b",
        "sha256": "9cb5eb758bfb38896daaed91ca1fac47048bb48ae86e4d1dc7467091f50d6dc2"
      },
      "downloads": -1,
      "filename": "mapmaker-1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd861c94ab8a389b3ed88110a8fc1b4b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 38627,
      "upload_time": "2022-08-07T12:17:25",
      "upload_time_iso_8601": "2022-08-07T12:17:25.842301Z",
      "url": "https://files.pythonhosted.org/packages/69/d9/77d39ac2ec924ea6b028a97771a6d40d98dc5ce4e29ad4cdcdc3659ba2ad/mapmaker-1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4960ef6c615ce1b97fceeb8d8fb3d08423762e7a7f3bb818cdc2a251b49a9a4f",
        "md5": "fb7ea937fcc198b64b3f2cabaaa8c8e9",
        "sha256": "cefb0e50e6529cf1880bfe584798fe0a136ff888306b5eae2ed306935f19e4a4"
      },
      "downloads": -1,
      "filename": "mapmaker-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fb7ea937fcc198b64b3f2cabaaa8c8e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 41809,
      "upload_time": "2022-08-07T12:17:27",
      "upload_time_iso_8601": "2022-08-07T12:17:27.756648Z",
      "url": "https://files.pythonhosted.org/packages/49/60/ef6c615ce1b97fceeb8d8fb3d08423762e7a7f3bb818cdc2a251b49a9a4f/mapmaker-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}