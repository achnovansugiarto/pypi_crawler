{
  "info": {
    "author": "Michael Rooney",
    "author_email": "mrooney.mintapi@rowk.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "mintapi\n=======\n\na screen-scraping API for Mint.com. |Build Status|\n\nInstallation\n------------\n\nEnsure you have Python 2 or 3 and pip (``easy_install pip``) and then:\n\n.. code:: shell\n\n    pip install mintapi\n\nIf you do not want to manually find and provide your Mint session\ncookies, as described below, then please also install ``selenium`` and\n``chromedriver``:\n\n.. code:: shell\n\n    pip install selenium\n    brew install chromedriver # or sudo apt-get install chromium-chromedriver on Ubuntu/Debian\n\nUsage\n-----\n\nfrom Python\n~~~~~~~~~~~\n\nFrom python, instantiate the Mint class (from the mintapi package) and\nyou can make calls to retrieve account/budget information. We recommend\nusing the ``keyring`` library for persisting credentials.\n\n.. code:: python\n\n      import mintapi\n      # ius_session and thx_guid are optional, and will be automatically extracted if possible (see above for installing selenium/chromedriver)\n      mint = mintapi.Mint(email, password, ius_session, thx_guid)\n\n      # Get basic account information\n      mint.get_accounts()\n\n      # Get extended account detail at the expense of speed - requires an\n      # additional API call for each account\n      mint.get_accounts(True)\n\n      # Get budget information\n      mint.get_budgets()\n\n      # Get transactions\n      mint.get_transactions() # as pandas dataframe\n      mint.get_transactions_csv(include_investment=False) # as raw csv data\n      mint.get_transactions_json(include_investment=False, skip_duplicates=False)\n\n      # Get net worth\n      mint.get_net_worth()\n\n      # Initiate an account refresh\n      mint.initiate_account_refresh()\n\nYou will notice the login step requires an ius\\_session and thx\\_guid.\nThese are session cookies that must persist. If you choose not to\ninstall selenium and chromedriver, you must obtain these values by\nsearching your browser's cookies. In Chrome, for example, visit\nchrome://settings/cookies and type intuit (*not* mint). Alternatively,\nyou can login to Mint manually with your browser in inspect mode and\npoke around in the network tab. Providing these two cookies eliminates\nthe need to 2-step authenticate. Mint requires this with all new\nbrowsers attempting to connect.\n\nfrom anywhere\n-------------\n\nRun it as a sub-process from your favorite language;\n``pip install mintapi`` creates a binary in your $PATH. From the\ncommand-line, the output is JSON:\n\n.. code:: shell\n\n        usage: mintapi [-h] [--accounts] [--budgets] [--net-worth]\n                  [--extended-accounts] [--transactions] [--extended-transactions]\n                  [--start-date [START_DATE]] [--include-investment]\n                  [--skip-duplicates] [--show-pending] [--filename FILENAME]\n                  [--keyring] [--session SESSION] [--thx_guid THX_GUID]\n                  [email] [password]\n\n        positional arguments:\n          email                 The e-mail address for your Mint.com account\n          password              The password for your Mint.com account\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          --accounts            Retrieve account information (default if nothing else\n                                is specified)\n          --budgets             Retrieve budget information\n          --net-worth           Retrieve net worth information\n          --extended-accounts   Retrieve extended account information (slower, implies\n                                --accounts)\n          --transactions, -t    Retrieve transactions\n          --extended-transactions\n                                Retrieve transactions with extra information and\n                                arguments\n          --start-date [START_DATE]\n                                Earliest date for transactions to be retrieved from.\n                                Used with --extended-transactions. Format: mm/dd/yy\n          --include-investment  Used with --extended-transactions\n          --skip-duplicates     Used with --extended-transactions\n          --show-pending        Exclude pending transactions from being retrieved.\n                                Used with --extended-transactions\n          --filename FILENAME, -f FILENAME\n                                write results to file. can be {csv,json} format.\n                                default is to write to stdout.\n          --keyring             Use OS keyring for storing password information\n          --session SESSION     ius_session cookie\n          --thx_guid THX_GUID   thx_guid cookie\n        >>> mintapi --keyring email@example.com\n        [\n          {\n            \"accountName\": \"Chase Checking\",\n            \"lastUpdatedInString\": \"25 minutes\",\n            \"accountType\": \"bank\",\n            \"currentBalance\": 100.12,\n            ...\n          },\n          ...\n        ]\n\nIf you need to avoid using pip or setup.py, you can also clone/download\nthis repository and run: ``python mintapi/api.py``\n\n.. |Build Status| image:: https://travis-ci.org/mrooney/mintapi.svg?branch=master\n   :target: https://travis-ci.org/mrooney/mintapi\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrooney/mintapi",
    "keywords": "",
    "license": "The MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mintapi",
    "package_url": "https://pypi.org/project/mintapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/mintapi/",
    "project_urls": {
      "Homepage": "https://github.com/mrooney/mintapi"
    },
    "release_url": "https://pypi.org/project/mintapi/1.27/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a screen-scraping API for Mint.com",
    "version": "1.27",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17497767,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdb842e2a311cb2a787c1328ef58e4902f416efc1727170cf94a09c3d45bbb14",
        "md5": "070b873d0a829deb04a7d42067f3d685",
        "sha256": "d726be5ede170581ac2dacfa1177071cf353aa8d4fa594b1156d8d8ffc2f74a3"
      },
      "downloads": -1,
      "filename": "mintapi-1.27.tar.gz",
      "has_sig": false,
      "md5_digest": "070b873d0a829deb04a7d42067f3d685",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11641,
      "upload_time": "2017-08-25T07:25:16",
      "upload_time_iso_8601": "2017-08-25T07:25:16.607612Z",
      "url": "https://files.pythonhosted.org/packages/cd/b8/42e2a311cb2a787c1328ef58e4902f416efc1727170cf94a09c3d45bbb14/mintapi-1.27.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}