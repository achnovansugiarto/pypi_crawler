{
  "info": {
    "author": "Michael Rooney",
    "author_email": "mrooney.mintapi@rowk.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# mintapi\n\na screen-scraping API for Mint.com. [![Build Status](https://travis-ci.org/mrooney/mintapi.svg?branch=master)](https://travis-ci.org/mrooney/mintapi)\n\n## Installation\nEnsure you have Python 2 or 3 and pip (`easy_install pip`) and then:\n\n```shell\npip install mintapi\n```\n\nIf you do not want to manually find and provide your Mint session cookies, as described below, then please also install `selenium` and `chromedriver` (version 59+ if you want to use headless mode):\n```shell\npip install selenium\nbrew cask install chromedriver # or sudo apt-get install chromium-chromedriver on Ubuntu/Debian\n```\n\n## Usage\n\n### from Python\n\nFrom python, instantiate the Mint class (from the mintapi package) and you can\nmake calls to retrieve account/budget information.  We recommend using the\n`keyring` library for persisting credentials.\n\n```python\n  import mintapi\n  mint = mintapi.Mint(\n    'your_email@web.com',  # Email used to log in to Mint\n    'password',  # Your password used to log in to mint\n    # Optional parameters\n    mfa_method='sms',  # Can be 'sms' (default) or 'email'.\n                       # if mintapi detects an MFA request, it will trigger the requested method and prompt on the command line.\n    headless=False,  # Whether the chromedriver should work without opening a\n                     # visible window (useful for server-side deployments)\n    mfa_input_callback=None  # A callback accepting a single argument (the prompt)\n                             # which returns the user-inputted 2FA code. By default\n                             # the default Python `input` function is used.\n  )\n\n  # Get basic account information\n  mint.get_accounts()\n\n  # Get extended account detail at the expense of speed - requires an\n  # additional API call for each account\n  mint.get_accounts(True)\n\n  # Get budget information\n  mint.get_budgets()\n\n  # Get transactions\n  mint.get_transactions() # as pandas dataframe\n  mint.get_transactions_csv(include_investment=False) # as raw csv data\n  mint.get_transactions_json(include_investment=False, skip_duplicates=False)\n\n  # Get net worth\n  mint.get_net_worth()\n\n  # Initiate an account refresh\n  mint.initiate_account_refresh()\n```\n\n---\nRun it as a sub-process from your favorite language; `pip install mintapi` creates a binary in your $PATH. From the command-line, the output is JSON:\n\n```shell\n    usage: mintapi [-h] [--accounts] [--budgets] [--net-worth]\n                   [--extended-accounts] [--transactions]\n                   [--extended-transactions] [--start-date [START_DATE]]\n                   [--include-investment] [--skip-duplicates] [--show-pending]\n                   [--filename FILENAME] [--keyring] [--headless]\n                   [--mfa-method {sms,email}]\n                   [email] [password]\n\n    positional arguments:\n      email                 The e-mail address for your Mint.com account\n      password              The password for your Mint.com account\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --accounts            Retrieve account information (default if nothing else\n                            is specified)\n      --budgets             Retrieve budget information\n      --net-worth           Retrieve net worth information\n      --extended-accounts   Retrieve extended account information (slower, implies\n                            --accounts)\n      --transactions, -t    Retrieve transactions\n      --extended-transactions\n                            Retrieve transactions with extra information and\n                            arguments\n      --start-date [START_DATE]\n                            Earliest date for transactions to be retrieved from.\n                            Used with --extended-transactions. Format: mm/dd/yy\n      --include-investment  Used with --extended-transactions\n      --skip-duplicates     Used with --extended-transactions\n      --show-pending        Exclude pending transactions from being retrieved.\n                            Used with --extended-transactions\n      --filename FILENAME, -f FILENAME\n                            write results to file. can be {csv,json} format.\n                            default is to write to stdout.\n      --keyring             Use OS keyring for storing password information\n      --headless            Whether to execute chromedriver with no visible\n                            window.\n      --mfa-method {sms,email}\n                            The MFA method to automate.\n    >>> mintapi --keyring email@example.com\n    [\n      {\n        \"accountName\": \"Chase Checking\",\n        \"lastUpdatedInString\": \"25 minutes\",\n        \"accountType\": \"bank\",\n        \"currentBalance\": 100.12,\n        ...\n      },\n      ...\n    ]\n```\n\nIf you need to avoid using pip or setup.py, you can also clone/download\nthis repository and run: ``python mintapi/api.py``\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrooney/mintapi",
    "keywords": "",
    "license": "The MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mintapi",
    "package_url": "https://pypi.org/project/mintapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/mintapi/",
    "project_urls": {
      "Homepage": "https://github.com/mrooney/mintapi"
    },
    "release_url": "https://pypi.org/project/mintapi/1.34/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a screen-scraping API for Mint.com",
    "version": "1.34",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17497767,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b998a95d3a72277ae02ad668c1a919f0f068a7ab8e1c96f540f734f357ca0708",
        "md5": "c184bb7b111659b1ad5b138ec3332afc",
        "sha256": "2844f1dd810c052e2143a1e5ad7e22284a2f5ab11733bf5575acb489de0ce767"
      },
      "downloads": -1,
      "filename": "mintapi-1.34.tar.gz",
      "has_sig": false,
      "md5_digest": "c184bb7b111659b1ad5b138ec3332afc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13549,
      "upload_time": "2018-10-20T17:14:47",
      "upload_time_iso_8601": "2018-10-20T17:14:47.624805Z",
      "url": "https://files.pythonhosted.org/packages/b9/98/a95d3a72277ae02ad668c1a919f0f068a7ab8e1c96f540f734f357ca0708/mintapi-1.34.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}