{
  "info": {
    "author": "Cameron Lamb",
    "author_email": "live.services@digital.trade.gov.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Django Hawk\n\nThis package can be used to help create HAWK Authenticated views.\n\n## Installation\n\n```\npip install django-hawk\n```\n\nAdd the following to your Django Settings:\n\n```python\nDJANGO_HAWK = {\n    \"HAWK_INCOMING_ACCESS_KEY\": \"xxx\",\n    \"HAWK_INCOMING_SECRET_KEY\": \"xxx\",\n}\n```\n\n## Example Usage\n\nTo use the HAWK Authentication, we need to do 2 things:\n\n1. Make sure the `HawkResponseMiddleware` runs\n2. Check the authentication\n\nAdd the `HawkResponseMiddleware` to the `MIDDLEWARE` setting in your project like so:\n\n```\nMIDDLEWARE = [\n    ...\n    \"django_hawk.middleware.HawkResponseMiddleware\",\n    ...\n]\n```\n\nTo check the authentication you can call `django_hawk.utils.authenticate_request`, if an exception isn't raised then you know that the request is authenticated, see below for examples.\n\n```python\nfrom django.http import HttpResponse\n\nfrom django_hawk.utils import DjangoHawkAuthenticationFailed, authenticate_request\n\ndef simple_view(request):\n    # Try to authenticate with HAWK\n    try:\n        authenticate_request(request=request)\n    except DjangoHawkAuthenticationFailed as e:\n        return HttpResponse(status=401)\n\n    # Continue with normal View code...\n    return HttpResponse(\"This is a simple view\")\n```\n\n## Testing\n\nTests belong in the `/django_hawk/tests/` directory. You can run the tests by installing the requirements like so:\n\n```\nmake setup\n```\n\nNow you can run the tests using the following command:\n\n```\npoetry run python manage.py test\n```\n\n### Tox tests\n\nWe use [tox](https://pypi.org/project/tox/) to test compatibility across different Django versions.\n\nTo run these tests with tox, just run the following:\n\n```\nmake tox\n```\n\n## Pushing to PyPI\n\n- [PyPI Package](https://pypi.org/project/django-hawk/)\n- [Test PyPI Package](https://test.pypi.org/project/django-hawk/)\n\nRunning `make build` will build the package into the `dist/` directory\nRunning `make push-pypi-test` will push the built package to Test PyPI\nRunning `make push-pypi` will push the built package to PyPI\n\n### Setting up poetry for pushing to PyPI\n\nFirst you will need to add the test pypy repository to your poetry config:\n\n```\npoetry config repositories.test-pypi https://test.pypi.org/legacy/\n```\n\nThen go to https://test.pypi.org/manage/account/token/ and generate a token.\n\nThen add it to your poetry config:\n\n```\npoetry config pypi-token.test-pypi XXXXXXXX\n```\n\nThen you also need to go to https://pypi.org/manage/account/token/ to generate a token for the real PyPI.\n\nThen add it to your poetry config:\n\n```\npoetry config pypi-token.pypi XXXXXXXX\n```\n\nNow the make commands should work as expected.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uktrade/django-hawk",
    "keywords": "django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-hawk",
    "package_url": "https://pypi.org/project/django-hawk/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-hawk/",
    "project_urls": {
      "Homepage": "https://github.com/uktrade/django-hawk"
    },
    "release_url": "https://pypi.org/project/django-hawk/1.0.0/",
    "requires_dist": [
      "Django (>=2.2,<4.1)",
      "mohawk (>=1.0.0,<2.0)"
    ],
    "requires_python": ">=3.6.2,<4.0",
    "summary": "Authenticate Django Views with HAWK",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15816265,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a364c41059ebfecc925faa976ed52659294b7cc97313876408c5ce643e7bfbac",
        "md5": "6124062cd110cf60cd1320640b2f93c6",
        "sha256": "dbf4ac05352a86bf1013b81e739f7fc9e75451bfa004a25a9712954939db35c4"
      },
      "downloads": -1,
      "filename": "django_hawk-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6124062cd110cf60cd1320640b2f93c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0",
      "size": 8879,
      "upload_time": "2022-11-16T14:57:51",
      "upload_time_iso_8601": "2022-11-16T14:57:51.008242Z",
      "url": "https://files.pythonhosted.org/packages/a3/64/c41059ebfecc925faa976ed52659294b7cc97313876408c5ce643e7bfbac/django_hawk-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcb714c0eb5a4ca48e94287d6abadd8d95e3cb45828a78771c88461cc8aa8883",
        "md5": "3f67b66080f9f1691ff5be4cacba7ffe",
        "sha256": "c4887281178fe599ee27ab4755513446a51e9a367b6fbc17a8dcfaf7ce801763"
      },
      "downloads": -1,
      "filename": "django_hawk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3f67b66080f9f1691ff5be4cacba7ffe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0",
      "size": 7276,
      "upload_time": "2022-11-16T14:57:52",
      "upload_time_iso_8601": "2022-11-16T14:57:52.086876Z",
      "url": "https://files.pythonhosted.org/packages/bc/b7/14c0eb5a4ca48e94287d6abadd8d95e3cb45828a78771c88461cc8aa8883/django_hawk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}