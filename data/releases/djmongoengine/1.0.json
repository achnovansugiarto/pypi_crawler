{
  "info": {
    "author": "Giorgi Kakulashvili",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django MongoEngine\n\nThis package, unlike [Django-MongoEngine](https://github.com/MongoEngine/django-mongoengine) or [Djongo](https://github.com/nesdis/djongo/), doesn't aim on changing SQL role in Django. Writing backend for NoSQL database is not trivial. Here MongoDB is used as helper database, to increase performance.\n\n\n## Installation\n\nTo install the package by `pip` run following command\n\n```sh\n# From Github\n$ pip install git+https://github.com/giorgi94/djmongoengine.git\n```\n\n\n## Usage\n\nTo start using the package, add `djmongoengine` to `INSTALLED_APPS` and define `MONGODB_DATABASES`\n\n\n```python\n# settings.py\n\nINSTALLED_APPS = [\n    ...\n    djmongoengine\n    ...\n]\n\nMONGODB_DATABASES = {\n    \"default\": {\n        \"name\": \"dbname\",\n        \"host\": '127.0.0.1',\n        \"port\": 27017,\n        \"tz_aware\": True,\n        # \"username\": \"user\",\n        # \"password\": \"pass\"\n    },\n}\n\n\n```\n\nPackage provides mixin for document schema and connector\n\n```python\n# models.py\n\nclass DocumentMixin:\n    @classmethod\n    def UpdateOne(cls, instance):\n        # updates document in MongoDB, which corresponeds to django instance\n\n    @classmethod\n    def from_instance(cls, instance):\n        # create mongoengine document based on django instance\n\n```\n\nWe assume that django `instance.id` is stored in `ID`, since `id` returns `_id` from mongodb. In the `example`, we provide basic example to define mongoengine schema, based on django models\n\n```python\n# myapp/models.py\n\nclass Category(models.Model):\n    title = models.CharField(max_length=50, unique=True)\n    alias = models.CharField(max_length=50)\n\n# myapp/mongo.py\n\nclass Category(EmbeddedDocument):\n\n    ID = fields.IntField()\n\n    title = fields.StringField()\n    alias = fields.StringField()\n\n    @classmethod\n    def from_instance(cls, instance):\n\n        return cls(ID=instance.id, title=instance.title, alias=instance.alias)\n\n```\n\nIn `signals.py` and `receivers.py` are defined functions and signals to sync changes in django to mongodb.\n\n## GraphQL\n\nGraphQL is not directly connected with the package, but documentation for `graphene` is not beginner friendly. There are [graphene-django](https://github.com/graphql-python/graphene-django) and [flask-graphql](https://github.com/graphql-python/flask-graphql), but it doesn't allow to explore full potential of `graphql` and `mongodb`, so we use [graphene-mongo](https://github.com/graphql-python/graphene-mongo) for more diversity. Query is defined in\n\n```python\n# myapp/query.py\n\n\nclass Query(graphene.ObjectType):\n    articles = graphene.List(ArticleQuery, find=FindInput())\n\n    def resolve_articles(self, info, **kwargs):\n        find = kwargs.get(\"find\")\n\n        normilize_find(find)\n\n        if find is not None:\n            return Article.objects(**find)\n        return Article.objects()\n\n\nschema = graphene.Schema(query=Query)\n\n# myapp/views.py\n\nfrom .query import schema\n\n\ndef graphql_view(request):\n    ...\n\n    result = schema.execute(query)\n\n    if result.errors:\n        return JsonResponse({\"errors\": str(result.errors)})\n\n    return JsonResponse({\"query\": result.data})\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/giorgi94/djmongoengine",
    "keywords": "django,mongodb,graphql",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djmongoengine",
    "package_url": "https://pypi.org/project/djmongoengine/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/djmongoengine/",
    "project_urls": {
      "Homepage": "https://github.com/giorgi94/djmongoengine"
    },
    "release_url": "https://pypi.org/project/djmongoengine/1.0/",
    "requires_dist": [
      "Django (>=2.0)",
      "Pillow (>=5.3.0)",
      "mongoengine (>=0.18.2)",
      "pymongo (>=3.9.0)"
    ],
    "requires_python": "",
    "summary": "Application to enhance performance by mongodb engine",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6095252,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ff72bce53b8730b771e63a744ff10cdd093b8605866a9957ed9b8c2aa58b4b4",
        "md5": "15a9ada6fb29ba4495bd8290869006c6",
        "sha256": "c5bf2f35a02da8a8ee0c5c15af839f62241f28f55c5048a86ed8b40744a31e9e"
      },
      "downloads": -1,
      "filename": "djmongoengine-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15a9ada6fb29ba4495bd8290869006c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4152,
      "upload_time": "2019-11-07T18:58:10",
      "upload_time_iso_8601": "2019-11-07T18:58:10.840340Z",
      "url": "https://files.pythonhosted.org/packages/1f/f7/2bce53b8730b771e63a744ff10cdd093b8605866a9957ed9b8c2aa58b4b4/djmongoengine-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d69d5aa54ed6db1f3bfd7aa2fe1e7992b9662aba7f55a8de6b85ec47ac4f6085",
        "md5": "d891bfd9e6439bfb00de31d92f846ae5",
        "sha256": "0945761b1df765142b5f5c8b9bde0b5415ef2c041a94db53a8ffd6861ceec828"
      },
      "downloads": -1,
      "filename": "djmongoengine-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d891bfd9e6439bfb00de31d92f846ae5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3595,
      "upload_time": "2019-11-07T18:58:13",
      "upload_time_iso_8601": "2019-11-07T18:58:13.410381Z",
      "url": "https://files.pythonhosted.org/packages/d6/9d/5aa54ed6db1f3bfd7aa2fe1e7992b9662aba7f55a8de6b85ec47ac4f6085/djmongoengine-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}