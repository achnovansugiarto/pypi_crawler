{
  "info": {
    "author": "Openstack Mistral Team",
    "author_email": "openstack-dev@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Mistral\n=======\n\nWorkflow Service for OpenStack cloud.\n\n\nPrerequisites\n-------------\n\nIt is necessary to install some specific system libs for installing Mistral. They can be installed on most popular operating system using their package manager (for Ubuntu - *apt*, for Fedora, CentOS - *yum*, for Mac OS - *brew* or *macports*).\nThe list of needed packages is shown below:\n\n1. **python-dev**\n2. **python-setuptools**\n3. **python-pip**\n4. **libffi-dev**\n5. **libxslt1-dev (or libxslt-dev)**\n6. **libxml2-dev**\n7. **libyaml-dev**\n8. **libssl-dev**\n\nIn case of ubuntu, just run::\n\n    apt-get install python-dev python-setuptools libffi-dev libxslt1-dev libxml2-dev libyaml-dev libssl-dev\n\n**Mistral can be used without authentication at all or it can works with OpenStack.**\nIn case of OpenStack, it works **only on Keystone v3**, make sure **Keystone v3** is installed.\n\nInstallation\n------------\n\nFirst of all, clone the repo and go to the repo directory::\n\n    git clone https://github.com/stackforge/mistral.git\n    cd mistral\n\n\n**Devstack installation**\n\nInformation about how to install Mistral with devstack can be found here: https://github.com/stackforge/mistral/tree/master/contrib/devstack\n\n**Virtualenv installation**::\n\n    tox\n\nThis will install necessary virtual environments and run all the project tests. Installing virtual environments may take significant time (~10-15 mins).\n\n**Local installation**::\n\n    pip install -e .\n\nor::\n\n    python setup.py install\n\n===================\nConfiguring Mistral\n===================\n\nMistral configuration is needed for getting it work correctly either with real OpenStack environment or without OpenStack environment.\n\n1. Copy mistral.conf::\n\n    cp etc/mistral.conf.sample etc/mistral.conf\n\n  *Note: mistral.conf.sample is the example configuration file.*\n\n2. Edit file *etc/mistral.conf*\n3. **If you are not using OpenStack, skip this item.** Provide valid keystone auth properties::\n\n    [keystone_authtoken]\n    auth_uri = http://<Keystone-host>:5000/v3\n    identity_uri = http://<Keystone-host:35357/\n    auth_version = v3\n    admin_user = <user>\n    admin_password = <password>\n    admin_tenant_name = <tenant>\n\n4. **If you don't use OpenStack**, provide *auth_enable = False* in config file::\n\n    [pecan]\n    auth_enable = False\n\n5. Also, configure rabbit properties: *rabbit_userid*, *rabbit_password*, *rabbit_host* in section *default*.\n\n6. Configure database. **SQLite can't be used in production.** Use *MySQL* or *PostreSQL* instead. Here are the steps how to connect *MySQL* DB to Mistral:\n\n* Make sure you have installed **mysql-server** package on your Mistral machine.\n* Install *MySQL driver* for python::\n\n    pip install mysql-python\n\n  or, if you work in virtualenv, run::\n\n    tox -evenv -- pip install mysql-python\n\n* Create the database and grant privileges::\n\n    mysql -u root -p\n\n    CREATE DATABASE mistral;\n    USE mistral\n    GRANT ALL ON mistral.* TO 'root'@'localhost';\n\n* Configure connection in Mistral config::\n\n    [database]\n    connection = mysql://root:@localhost:3306/mistral\n\nBefore the first run\n--------------------\n\nBefore starting Mistral server, run sync_db script. It prepares the DB, creates in it all standard actions and standard workflows which Mistral provides for all mistral users.\n\n**If you use virtualenv**::\n\n    tools/sync_db.sh --config-file path_to_config*\n\n**Or run sync_db directly**::\n\n    python tools/sync_db.py --config-file path_to_config*\n\n*Note: After local installation you will see **mistral-server** and **mistral-db-manage** commands in your environment*.\n\nMigrations\n----------\n\n*mistral-db-manage* command can be used for migrations. If Mistral is not installed in system then this script can be\n found at *mistral/db/sqlalchemy/migration/cli.py*, it can be executed using Python.\n\nFor updating the database to the latest revision type::\n\n    mistral-db-manage --config-file <path-to-mistral.conf> upgrade head\n\nFor more detailed information about *mistral-db-manage* script please see migration readme here - https://github.com/stackforge/mistral/blob/master/mistral/db/sqlalchemy/migration/alembic_migrations/README.md\n\nRunning Mistral API server\n--------------------------\n\nTo run Mistral API server perform the following command in a shell::\n\n    tox -evenv -- python mistral/cmd/launch.py --server api --config-file path_to_config*\n\nRunning Mistral Engines\n-----------------------\n\nTo run Mistral Engine perform the following command in a shell::\n\n    tox -evenv -- python mistral/cmd/launch.py --server engine --config-file path_to_config*\n\nRunning Mistral Task Executors\n------------------------------\nTo run Mistral Task Executor instance perform the following command in a shell::\n\n    tox -evenv -- python mistral/cmd/launch.py --server executor --config-file path_to_config\n\nNote that at least one Engine instance and one Executor instance should be running so that workflow tasks are processed by Mistral.\n\nIf it is needed to run some tasks on specific executor then *task affinity* feature can be used to send these tasks directly to specific executor. In configuration file edit section \"executor\" *host* property::\n\n    [executor]\n    host = my_favorite_executor\n\nThen start (restart) executor. Use *target* task property to specify this executor::\n\n    ... Workflow YAML ...\n    task1:\n      ...\n      target: my_favorite_executor\n    ... Workflow YAML ...\n\nRunning Multiple Mistral Servers Under the Same Process\n-------------------------------------------------------\nTo run more than one server (API, Engine, or Task Executor) on the same process, perform the following command in a shell::\n\n    tox -evenv -- python mistral/cmd/launch.py --server api,engine --config-file path_to_config\n\nThe --server command line option can be a comma delimited list. The valid options are \"all\" (by default if not specified) or any combination of \"api\", \"engine\", and \"executor\". It's important to note that the \"fake\" transport for the rpc_backend defined in the config file should only be used if \"all\" the Mistral servers are launched on the same process. Otherwise, messages do not get delivered if the Mistral servers are launched on different processes because the \"fake\" transport is using an in process queue.\n\nMistral client\n--------------\n\nPython-mistralclient is available here - https://github.com/stackforge/python-mistralclient\n\n\nDebugging\n---------\n\nTo debug using a local engine and executor without dependencies such as RabbitMQ, create etc/mistral.conf with the following settings::\n\n    [DEFAULT]\n    rpc_backend = fake\n\n    [pecan]\n    auth_enable = False\n\nand run in pdb, PyDev or PyCharm::\n\n    mistral/cmd/launch.py --server all --config-file etc/mistral.conf --use-debugger\n\nRunning examples\n----------------\n\nTo run the examples find them in mistral-extra repository (https://github.com/stackforge/mistral-extra) and follow the instructions on each example.\n\nTests\n-----\n\nThere is an ability to run part of functional tests in non-openstack mode locally. To do this:\n\n1. set *auth_enable = False* in the *mistral.conf* and restart Mistral\n2. execute::\n\n    ./run_functional_tests.sh\n\nTo run tests for only one version need to specify it: bash run_functional_tests.sh v1\n\nMore information about automated tests for Mistral can be found here: https://wiki.openstack.org/wiki/Mistral/Testing",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://launchpad.net/mistral",
    "keywords": null,
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mistral",
    "package_url": "https://pypi.org/project/mistral/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mistral/",
    "project_urls": {
      "Homepage": "https://launchpad.net/mistral"
    },
    "release_url": "https://pypi.org/project/mistral/2015.1.0/",
    "requires_dist": [
      "alembic (>=0.7.2)",
      "amqplib (>=0.6.1)",
      "argparse",
      "Babel (>=1.3)",
      "croniter (>=0.3.4)",
      "eventlet (>=0.16.1,!=0.17.0)",
      "iso8601 (>=0.1.9)",
      "jsonschema (>=2.0.0,<3.0.0)",
      "keystonemiddleware (>=1.5.0,<1.6.0)",
      "kombu (>=2.5.0)",
      "mock (>=1.0)",
      "networkx (>=1.8)",
      "oslo.config (>=1.9.3,<1.10.0)",
      "oslo.db (>=1.7.0,<1.8.0)",
      "oslo.messaging (>=1.8.0,<1.9.0)",
      "oslo.utils (>=1.4.0,<1.5.0)",
      "paramiko (>=1.13.0)",
      "pbr (>=0.6,!=0.7,<1.0)",
      "pecan (>=0.8.0)",
      "posix-ipc",
      "python-cinderclient (>=1.1.0,<1.2.0)",
      "python-glanceclient (>=0.15.0,<0.18.0)",
      "python-heatclient (>=0.3.0,<0.5.0)",
      "python-keystoneclient (>=1.1.0,<1.4.0)",
      "python-neutronclient (>=2.3.11,<2.5.0)",
      "python-novaclient (>=2.22.0,<2.24.0)",
      "PyYAML (>=3.1.0)",
      "requests (>=2.2.0,!=2.4.0)",
      "six (>=1.9.0)",
      "SQLAlchemy (>=0.9.7,<=0.9.99)",
      "stevedore (>=1.3.0,<1.4.0)",
      "WSME (>=0.6)",
      "yaql (==0.2.6)"
    ],
    "requires_python": null,
    "summary": "Mistral Project",
    "version": "2015.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17397519,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be427f8d3d1a132b69968f8cdf75523d4076c8a78a94af87b4938e1594c92a87",
        "md5": "b7c3f5a541244820f4702d5197706049",
        "sha256": "22aa732b67d7355072c2814785f4e30ecbcbbadb4e95db60f389f34e6d0f7889"
      },
      "downloads": -1,
      "filename": "mistral-2015.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7c3f5a541244820f4702d5197706049",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 327702,
      "upload_time": "2015-05-07T07:38:13",
      "upload_time_iso_8601": "2015-05-07T07:38:13.303438Z",
      "url": "https://files.pythonhosted.org/packages/be/42/7f8d3d1a132b69968f8cdf75523d4076c8a78a94af87b4938e1594c92a87/mistral-2015.1.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a48cd5b7af21a6901112d16f322c9913ae4d01d5fea9e3044d99ea93ed17da8e",
        "md5": "0b0aa269ef1ab03bd93c9dc732c7e584",
        "sha256": "adaedb15b2f3cbb2b98ce1f588b8a3edf8d1a7970543edf9d5f467d7237889d1"
      },
      "downloads": -1,
      "filename": "mistral-2015.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b0aa269ef1ab03bd93c9dc732c7e584",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 284561,
      "upload_time": "2015-05-07T07:38:16",
      "upload_time_iso_8601": "2015-05-07T07:38:16.609232Z",
      "url": "https://files.pythonhosted.org/packages/a4/8c/d5b7af21a6901112d16f322c9913ae4d01d5fea9e3044d99ea93ed17da8e/mistral-2015.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}