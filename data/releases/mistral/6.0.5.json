{
  "info": {
    "author": "OpenStack",
    "author_email": "openstack-dev@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: OpenStack",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "========================\nTeam and repository tags\n========================\n\n.. image:: https://governance.openstack.org/tc/badges/mistral.svg\n    :target: https://governance.openstack.org/tc/reference/tags/index.html\n\nMistral\n=======\n\nWorkflow Service for OpenStack cloud. This project aims to provide a mechanism\nto define tasks and workflows without writing code, manage and execute them in\nthe cloud environment.\n\nInstallation\n~~~~~~~~~~~~\n\nThe following are the steps to install Mistral on debian-based systems.\n\nTo install Mistral, you have to install the following prerequisites::\n\n $ apt-get install python-dev python-setuptools libffi-dev \\\n   libxslt1-dev libxml2-dev libyaml-dev libssl-dev\n\n**Mistral can be used without authentication at all or it can work with\nOpenStack.**\n\nIn case of OpenStack, it works **only with Keystone v3**, make sure **Keystone\nv3** is installed.\n\n\nInstall Mistral\n---------------\n\nFirst of all, clone the repo and go to the repo directory::\n\n  $ git clone https://git.openstack.org/openstack/mistral.git\n  $ cd mistral\n\n\n**Devstack installation**\n\nInformation about how to install Mistral with devstack can be found\n`here <https://docs.openstack.org/mistral/latest/contributor/devstack.html>`_.\n\nConfiguring Mistral\n~~~~~~~~~~~~~~~~~~~\n\nMistral configuration is needed for getting it work correctly with and without\nan OpenStack environment.\n\n#. Install and configure a database which can be *MySQL* or *PostgreSQL*\n   (**SQLite can't be used in production.**). Here are the steps to connect\n   Mistral to a *MySQL* database.\n\n   * Make sure you have installed ``mysql-server`` package on your Mistral\n     machine.\n   * Install *MySQL driver* for python::\n\n     $ pip install mysql-python\n\n     or, if you work in virtualenv, run::\n\n     $ tox -evenv -- pip install mysql-python\n\n     NOTE: If you're using Python 3 then you need to install ``mysqlclient``\n     instead of ``mysql-python``.\n\n   * Create the database and grant privileges::\n\n      $ mysql -u root -p\n      mysql> CREATE DATABASE mistral;\n      mysql> USE mistral\n      mysql> GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'localhost' \\\n             IDENTIFIED BY 'MISTRAL_DBPASS';\n      mysql> GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'%' IDENTIFIED BY 'MISTRAL_DBPASS';\n\n#. Generate ``mistral.conf`` file::\n\n    $ oslo-config-generator --config-file tools/config/config-generator.mistral.conf \\\n      --output-file etc/mistral.conf.sample\n\n#. Copy service configuration files::\n\n    $ sudo mkdir /etc/mistral\n    $ sudo chown `whoami` /etc/mistral\n    $ cp etc/event_definitions.yml.sample /etc/mistral/event_definitions.yml\n    $ cp etc/logging.conf.sample /etc/mistral/logging.conf\n    $ cp etc/policy.json /etc/mistral/policy.json\n    $ cp etc/wf_trace_logging.conf.sample /etc/mistral/wf_trace_logging.conf\n    $ cp etc/mistral.conf.sample /etc/mistral/mistral.conf\n\n#. Edit file ``/etc/mistral/mistral.conf`` according to your setup. Pay attention\n   to the following sections and options::\n\n    [oslo_messaging_rabbit]\n    rabbit_host = <RABBIT_HOST>\n    rabbit_userid = <RABBIT_USERID>\n    rabbit_password = <RABBIT_PASSWORD>\n\n    [database]\n    # Use the following line if *PostgreSQL* is used\n    # connection = postgresql://<DB_USER>:<DB_PASSWORD>@localhost:5432/mistral\n    connection = mysql://<DB_USER>:<DB_PASSWORD>@localhost:3306/mistral\n\n#. If you are not using OpenStack, add the following entry to the\n   ``/etc/mistral/mistral.conf`` file and **skip the following steps**::\n\n    [pecan]\n    auth_enable = False\n\n#. Provide valid keystone auth properties::\n\n    [keystone_authtoken]\n    auth_uri = http://keystone-host:port/v3\n    auth_url = http://keystone-host:port\n    auth_type = password\n    username = <user>\n    password = <password>\n    user_domain_name = <usually 'Default'>\n    project_name = <project name>\n    project_domain_name = <usually 'Default'>\n\n#. Register Mistral service and Mistral endpoints on Keystone::\n\n    $ MISTRAL_URL=\"http://[host]:[port]/v2\"\n    $ openstack service create --name mistral workflowv2\n    $ openstack endpoint create mistral public $MISTRAL_URL\n    $ openstack endpoint create mistral internal $MISTRAL_URL\n    $ openstack endpoint create mistral admin $MISTRAL_URL\n\n#. Update the ``mistral/actions/openstack/mapping.json`` file which contains\n   all available OpenStack actions, according to the specific client versions\n   of OpenStack projects in your deployment. Please find more detailed\n   information in the ``tools/get_action_list.py`` script.\n\nBefore the First Run\n--------------------\n\nAfter local installation you will find the commands ``mistral-server`` and\n``mistral-db-manage`` available in your environment. The ``mistral-db-manage``\ncommand can be used for migrating database schema versions. If Mistral is not\ninstalled in system then this script can be found at\n``mistral/db/sqlalchemy/migration/cli.py``, it can be executed using Python\ncommand line.\n\nTo update the database schema to the latest revision, type::\n\n  $ mistral-db-manage --config-file <path_to_config> upgrade head\n\nTo populate the database with standard actions and workflows, type::\n\n  $ mistral-db-manage --config-file <path_to_config> populate\n\nFor more detailed information about ``mistral-db-manage`` script please check\nfile ``mistral/db/sqlalchemy/migration/alembic_migrations/README.md``.\n\nRunning Mistral API server\n--------------------------\n\nTo run Mistral API server::\n\n  $ tox -evenv -- python mistral/cmd/launch.py --server api --config-file <path_to_config>\n\nRunning Mistral Engines\n-----------------------\n\nTo run Mistral Engine::\n\n  $ tox -evenv -- python mistral/cmd/launch.py --server engine --config-file <path_to_config>\n\nRunning Mistral Task Executors\n------------------------------\n\nTo run Mistral Task Executor instance::\n\n  $ tox -evenv -- python mistral/cmd/launch.py --server executor --config-file <path_to_config>\n\nNote that at least one Engine instance and one Executor instance should be\nrunning in order for workflow tasks to be processed by Mistral.\n\nIf you want to run some tasks on specific executor, the *task affinity* feature\ncan be used to send these tasks directly to a specific executor. You can edit\nthe following property in your mistral configuration file for this purpose::\n\n    [executor]\n    host = my_favorite_executor\n\nAfter changing this option, you will need to start (restart) the executor. Use\nthe ``target`` property of a task to specify the executor::\n\n    ... Workflow YAML ...\n    task1:\n      ...\n      target: my_favorite_executor\n    ... Workflow YAML ...\n\nRunning Multiple Mistral Servers Under the Same Process\n-------------------------------------------------------\n\nTo run more than one server (API, Engine, or Task Executor) on the same\nprocess::\n\n  $ tox -evenv -- python mistral/cmd/launch.py --server api,engine --config-file <path_to_config>\n\nThe value for the ``--server`` option can be a comma-delimited list. The valid\noptions are ``all`` (which is the default if not specified) or any combination\nof ``api``, ``engine``, and ``executor``.\n\nIt's important to note that the ``fake`` transport for the ``rpc_backend``\ndefined in the configuration file should only be used if ``all`` Mistral\nservers are launched on the same process. Otherwise, messages do not get\ndelivered because the ``fake`` transport is using an in-process queue.\n\nProject Goals 2018\n------------------\n\n#. **Complete Mistral documentation**.\n\n   Mistral documentation should be more usable. It requires focused work to\n   make it well structured, eliminate gaps in API/Mistral Workflow Language\n   specifications, add more examples and tutorials.\n\n   *Definition of done*:\n   All capabilities are covered, all documentation topics are written using\n   the same style and structure principles. The obvious sub-goal of this goal\n   is to establish these principles.\n\n#. **Finish Mistral multi-node mode**.\n\n   Mistral needs to be proven to work reliably in multi-node mode. In order\n   to achieve it we need to make a number of engine, executor and RPC\n   changes and configure a CI gate to run stress tests on multi-node Mistral.\n\n   *Definition of done*:\n   CI gate supports MySQL, all critically important functionality (join,\n   with-items, parallel workflows, sequential workflows) is covered by tests.\n\nProject Resources\n-----------------\n\n* `Mistral Official Documentation <https://docs.openstack.org/mistral/latest/>`_\n\n* Project status, bugs, and blueprints are tracked on\n  `Launchpad <https://launchpad.net/mistral/>`_\n\n* Additional resources are linked from the project\n  `Wiki <https://wiki.openstack.org/wiki/Mistral/>`_ page\n\n* Apache License Version 2.0 http://www.apache.org/licenses/LICENSE-2.0\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://docs.openstack.org/mistral/latest/",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mistral",
    "package_url": "https://pypi.org/project/mistral/",
    "platform": "",
    "project_url": "https://pypi.org/project/mistral/",
    "project_urls": {
      "Homepage": "https://docs.openstack.org/mistral/latest/"
    },
    "release_url": "https://pypi.org/project/mistral/6.0.5/",
    "requires_dist": [
      "alembic (>=0.8.10)",
      "aodhclient (>=0.9.0)",
      "Babel (!=2.4.0,>=2.3.4)",
      "croniter (>=0.3.4)",
      "cachetools (>=2.0.0)",
      "eventlet (!=0.18.3,!=0.20.1,<0.21.0,>=0.18.2)",
      "gnocchiclient (>=3.3.1)",
      "Jinja2 (!=2.9.0,!=2.9.1,!=2.9.2,!=2.9.3,!=2.9.4,>=2.8)",
      "jsonschema (<3.0.0,>=2.6.0)",
      "keystonemiddleware (>=4.17.0)",
      "mistral-lib (>=0.3.0)",
      "networkx (<2.0,>=1.10)",
      "oslo.concurrency (>=3.25.0)",
      "oslo.config (>=5.1.0)",
      "oslo.context (>=2.19.2)",
      "oslo.db (>=4.27.0)",
      "oslo.i18n (>=3.15.3)",
      "oslo.messaging (>=5.29.0)",
      "oslo.middleware (>=3.31.0)",
      "oslo.policy (>=1.30.0)",
      "oslo.utils (>=3.33.0)",
      "oslo.log (>=3.36.0)",
      "oslo.serialization (!=2.19.1,>=2.18.0)",
      "oslo.service (!=1.28.1,>=1.24.0)",
      "osprofiler (>=1.4.0)",
      "paramiko (>=2.0.0)",
      "pbr (!=2.1.0,>=2.0.0)",
      "pecan (!=1.0.2,!=1.0.3,!=1.0.4,!=1.2,>=1.0.0)",
      "python-barbicanclient (!=4.5.0,!=4.5.1,>=4.0.0)",
      "python-cinderclient (>=3.3.0)",
      "python-designateclient (>=2.7.0)",
      "python-glanceclient (>=2.8.0)",
      "python-glareclient (>=0.3.0)",
      "python-heatclient (>=1.10.0)",
      "python-keystoneclient (>=3.8.0)",
      "python-mistralclient (!=3.2.0,>=3.1.0)",
      "python-magnumclient (>=2.1.0)",
      "python-muranoclient (>=0.8.2)",
      "python-neutronclient (>=6.3.0)",
      "python-novaclient (>=9.1.0)",
      "python-senlinclient (>=1.1.0)",
      "python-swiftclient (>=3.2.0)",
      "python-tackerclient (>=0.8.0)",
      "python-troveclient (>=2.2.0)",
      "python-ironicclient (>=2.2.0)",
      "python-ironic-inspector-client (>=1.5.0)",
      "python-zaqarclient (>=1.0.0)",
      "PyJWT (>=1.0.1)",
      "PyYAML (>=3.10)",
      "requests (>=2.14.2)",
      "tenacity (>=3.2.1)",
      "setuptools (!=24.0.0,!=34.0.0,!=34.0.1,!=34.0.2,!=34.0.3,!=34.1.0,!=34.1.1,!=34.2.0,!=34.3.0,!=34.3.1,!=34.3.2,!=36.2.0,>=16.0)",
      "six (>=1.10.0)",
      "SQLAlchemy (!=1.1.5,!=1.1.6,!=1.1.7,!=1.1.8,>=1.0.10)",
      "stevedore (>=1.20.0)",
      "WSME (>=0.8.0)",
      "yaql (>=1.1.3)",
      "tooz (>=1.58.0)",
      "zake (>=0.1.6)"
    ],
    "requires_python": "",
    "summary": "Mistral Project",
    "version": "6.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17397519,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f2891ff8615b1203bd19fda01949a550b7adb592fba2a599128997deaeb06f1",
        "md5": "e966aa62ddb5880757f0c052c8e0cbcc",
        "sha256": "8e1100e3db1eb01bf068886c9d68578aa4e9d89a0df1578fb6625fb74cc0e161"
      },
      "downloads": -1,
      "filename": "mistral-6.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e966aa62ddb5880757f0c052c8e0cbcc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 600058,
      "upload_time": "2018-10-08T20:45:43",
      "upload_time_iso_8601": "2018-10-08T20:45:43.191628Z",
      "url": "https://files.pythonhosted.org/packages/0f/28/91ff8615b1203bd19fda01949a550b7adb592fba2a599128997deaeb06f1/mistral-6.0.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d2553d733231a7ab1938dd69c7b51f614e57cb3b895a959689ebdc0da8ea6eb",
        "md5": "5c104c963d2f35b780d13698b527f24e",
        "sha256": "63c8c07d3e629053181a0632baffca0ef8c3081fd154fe9b8e6e2661c9cfa77e"
      },
      "downloads": -1,
      "filename": "mistral-6.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5c104c963d2f35b780d13698b527f24e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 696851,
      "upload_time": "2018-10-08T20:45:48",
      "upload_time_iso_8601": "2018-10-08T20:45:48.436954Z",
      "url": "https://files.pythonhosted.org/packages/4d/25/53d733231a7ab1938dd69c7b51f614e57cb3b895a959689ebdc0da8ea6eb/mistral-6.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": [
    {
      "aliases": [
        "CVE-2018-16849"
      ],
      "details": "A flaw was found in openstack-mistral. By manipulating the SSH private key filename, the std.ssh action can be used to disclose the presence of arbitrary files within the filesystem of the executor running the action. Since std.ssh private_key_filename can take an absolute path, it can be used to assess whether or not a file exists on the executor's filesystem.",
      "fixed_in": [
        "7.0.1"
      ],
      "id": "PYSEC-2018-92",
      "link": "https://osv.dev/vulnerability/PYSEC-2018-92",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    },
    {
      "aliases": [
        "CVE-2018-16848"
      ],
      "details": "A Denial of Service (DoS) condition is possible in OpenStack Mistral in versions up to and including 7.0.3. Submitting a specially crafted workflow definition YAML file containing nested anchors can lead to resource exhaustion culminating in a denial of service.",
      "fixed_in": [
        "7.0.4"
      ],
      "id": "PYSEC-2020-240",
      "link": "https://osv.dev/vulnerability/PYSEC-2020-240",
      "source": "osv",
      "summary": null,
      "withdrawn": null
    }
  ]
}