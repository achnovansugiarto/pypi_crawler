{
  "info": {
    "author": "Bertrand Chenal",
    "author_email": "bertrandchenal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Menger\n\nMenger is an ORM-like, ISC-licensed statistics storage.\n\nMenger is designed to receive a flow of data as input and provide\nlive statistics. It works by pre-computing statistics for each\ncombination of possible query. So when a record like the following is\nadded:\n\n    :::python\n    {'date': ['2012', '8', '17'], 'author': \"Bill\", 'nb_words': 523}\n\neight counters (or indices) are updated:\n\n    :::python\n    ([], None)\n    ([], 'Bill')\n    (['2012'], None)\n    (['2012'], 'Bill')\n    (['2012', '8'], None)\n    (['2012', '8'], 'Bill')\n    (['2012', '8', '17'], None)\n    (['2012', '8', '17'], 'Bill')\n\n\nEach counter is stored in a LevelDB database.\n\n\n## Example\n\nLet's say we want to collect statistics about the length of blog posts. We\nstart by creating a `Post` class that inherits from Menger's `Space` class:\n\n    :::python\n    class Post(Space):\n\n        date = dimension.Tree('Category')\n        author = dimension.Flat('Category')\n        nb_words = measure.Sum('Number of Words')\n        nb_typos = measure.Sum('Number of Typos')\n\nA `Space` class comprises one or several dimensions and one or several\nmeasures.\n\nMeasures are caracteristics of the class that can be averaged, or compared\nthrough all objects. Dimensions are caracteristics of the class that can \nact as categories when computing a measure's aggregated value.\n\nThe `load` method allows to store data points (records):\n\n    :::python\n    Post.load([\n        {'date': ['2012', '7', '26'], 'author': 'John', 'nb_words': 148, 'nb_typos': 1},\n        {'date': ['2012', '8', '7'], 'author': 'John', 'nb_words': 34, 'nb_typos': 0},\n        {'date': ['2012', '8', '9'], 'author': 'Bill', 'nb_words': 523, 'nb_typos': 2},\n        ])\n\nWe can now retrieve aggregated measures with `fetch`:\n\n    :::python\n    Post.nb_words.fetch() # prints 705 (148+34+523)\n    Post.nb_words.fetch(author='Bill') # prints 523\n    Post.fetch('nb_words', 'nb_typos', author='John', date=['2012', '7']) # prints (148, 1)\n\nOr `drill` the dimensions (i.e. get subcategories of a dimension):\n\n    :::python\n    Post.date.drill(['2012']) # yields ['2012', '7'] and ['2012', '8']\n\nFull code listing:\n\n    :::python\n    from menger import Space, dimension, measure\n    from menger.common import connect\n\n    class Post(Space):\n\n        date = dimension.Tree('Category')\n        author = dimension.Flat('Category')\n        nb_words = measure.Sum('Number of Words')\n        nb_typos = measure.Sum('Number of Typos')\n\n    with connect('db/Post'):\n        Post.load([\n            {'date': ['2012', '7', '26'], 'author': 'John', 'nb_words': 148, 'nb_typos': 1},\n            {'date': ['2012', '8', '7'], 'author': 'John', 'nb_words': 34, 'nb_typos': 0},\n            {'date': ['2012', '8', '9'], 'author': 'Bill', 'nb_words': 523, 'nb_typos': 2},\n            ])\n\n        print Post.nb_words.fetch() # prints 705 (148+34+523)\n        print Post.nb_words.fetch(author='Bill') # prints 523\n        print Post.fetch('nb_words', 'nb_typos', author='John', date=['2012', '7']) # prints (148, 1)\n\n        print list(Post.date.drill(['2012']))",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/bertrandchenal/menger",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Menger",
    "package_url": "https://pypi.org/project/Menger/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Menger/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/bertrandchenal/menger"
    },
    "release_url": "https://pypi.org/project/Menger/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Statistics storage",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 833292,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dba508c635b44ba17386927d0663c6e3f22c197e97cac7dbc8e178a50ff8094",
        "md5": "716dbcc3330b13bc8126ad273d27afd7",
        "sha256": "b37abda16fcea2c715a0d0548601debfbfda6e416acd9b5e4ea066e26ac378e4"
      },
      "downloads": -1,
      "filename": "Menger-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "716dbcc3330b13bc8126ad273d27afd7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2951,
      "upload_time": "2012-09-07T12:19:15",
      "upload_time_iso_8601": "2012-09-07T12:19:15.820076Z",
      "url": "https://files.pythonhosted.org/packages/5d/ba/508c635b44ba17386927d0663c6e3f22c197e97cac7dbc8e178a50ff8094/Menger-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}