{
  "info": {
    "author": "Rick van Hattem",
    "author_email": "Rick.van.Hattem@Fawo.nl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License"
    ],
    "description": "Overview\n--------\n\nDjango Tags Input is a module that gives you a modified version of the Xoxco jQuery Tags Input library within Django.\n\nThe result is a very pretty interface with tags and autocomplete which can optionally automatically create new items when they are missing.\n\nOne of the most useful features of Django Tags Input is that it stores the elements in the order which you input.\n\nSo if you insert `B, A, C` into the database, it will return it sorted the way you entered it: `B, A, C`.\n\n.. image:: https://raw.githubusercontent.com/WoLpH/django-tags-input/master/docs/example.png\n   :height: 286px\n   :width: 790px\n\nLinks\n-----\n\n - The source: https://github.com/WoLpH/django-tags-input\n - Project page: https://pypi.python.org/pypi/django-tags-input\n - Reporting bugs: https://github.com/WoLpH/django-tags-input/issues\n - Documentation: http://django-tags-input.readthedocs.org/en/latest/\n - My blog: http://w.wol.ph/\n\nHow to install\n--------------\n\nInstalling this module only takes a couple of minutes.\n\nCurrently Django 1.8 and above are supported in combination with Python 2.7, 3.2, 3.3, 3.4, 3.5, Pypy and Pypy3.\n\nFor Django 1.4, Django 1.5, Django 1.6 and Django 1.7 in combination with\nPython 2.6 and 2.7. Python 3.2, 3.3 and 3.4. Pypy and Pypy3 version 2.1.0 can\nbe used.\n\n\n1. Install the module itself\n\n    pip install django-tags-input\n\n    # or\n    \n    easy_install django-tags-input\n\n2. Add ``tags_input`` to your ``INSTALLED_APPS`` setting in the Django ``settings.py``.\n\n    Example:\n\n    .. code-block:: python\n\n        INSTALLED_APPS = (\n            # ... your other installed apps\n            'tags_input',\n        )\n\n3. Add the mappings to your ``settings.py`` file:\n\n    Example:\n\n    .. code-block:: python\n\n        TAGS_INPUT_MAPPINGS = {\n            'some_app.SomeKeyword': {\n                'field': 'some_field',\n            },\n            'some_app.SomeOtherKeyword': {\n                'fields': ('some_field', 'some_other_field'),\n            },\n            'some_app.SomeSortedKeyword': {\n                'field': 'some_field',\n                'ordering': [\n                    'some_field',\n                    'some_other_field',\n                ],\n                'filters': {\n                    'some_field__istartswith': 'a',\n                },\n                'excludes': {\n                    'some_field__iexact': 'foobar',\n                },\n            },\n            'some_app.SomeCreateableKeyword': {\n                'field': 'some_field',\n                'create_missing': True,\n            },\n        }\n\n4. Add the ``tags_input`` urls to your ``urls.py``:\n\n    Example:\n\n   .. code-block:: python\n\n      from django.conf import urls\n\n      urlpatterns = patterns('',\n          url(r'^tags_input/', include('tags_input.urls', namespace='tags_input')),\n          # ... other urls ... \n      )\n\n\nAdmin usage\n-----------\n\n.. code-block:: python\n\n    from django.contrib import admin\n    import models\n    from tags_input import admin as tags_input_admin\n\n    class YourAdmin(tags_input_admin.TagsInputAdmin):\n        pass\n\n    admin.site.register(models.YourModel, YourAdmin)\n\nQuickstart\n----------\n\nTo test the project simply clone the repository, install and run the example:\n\n.. code-block:: bash\n\n    mkvirtualenv django-tags-input\n    git clone https://github.com/WoLpH/django-tags-input.git\n    pip install -e django-tags-input\n    cd django-tags-input/example\n    python manage.py runserver\n\nNow you can go to http://localhost:8000/admin/ and login with username and \npassword `admin` and `admin` respectively.\n\nAfter this you can try adding some extra `Foo` objects through the `Spam` admin\nhere: http://localhost:8000/admin/autocompletionexample/spam/2/\n\nNote that some parts of the example are deliberately broken to test the\nbehaviour in broken environments.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WoLpH/django-tags-input",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-tags-input",
    "package_url": "https://pypi.org/project/django-tags-input/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-tags-input/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/WoLpH/django-tags-input"
    },
    "release_url": "https://pypi.org/project/django-tags-input/3.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django jQuery Tags Input is a Django field and widget\nwrapper that adds an easy to use interface for `ManyToManyField` and\n`ForeignKey` fields in the forms of autocompleting tags with optionally live\ncreation of new linked items",
    "version": "3.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17104252,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "558bb0f12e9234c52168b48cf553857d447e8099c4de608250cd6b84e97384bb",
        "md5": "c530bd190d2b676a1de59b01cd137620",
        "sha256": "7481ca0e77102626168e9cfe27a9174411a663bc975e2fbee89d0940146cc0d2"
      },
      "downloads": -1,
      "filename": "django_tags_input-3.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c530bd190d2b676a1de59b01cd137620",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 148162,
      "upload_time": "2017-04-23T23:25:42",
      "upload_time_iso_8601": "2017-04-23T23:25:42.671374Z",
      "url": "https://files.pythonhosted.org/packages/55/8b/b0f12e9234c52168b48cf553857d447e8099c4de608250cd6b84e97384bb/django_tags_input-3.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a53898f4047407d6c2c638443a170aba76694168b30b01a383757706e2dbc90e",
        "md5": "371c591611633b3d705074445c19566a",
        "sha256": "01254c114eea61a4e33d44caa04667d44c71ab157ef5e6a2b6b64bc9dc3e53f5"
      },
      "downloads": -1,
      "filename": "django-tags-input-3.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "371c591611633b3d705074445c19566a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 115849,
      "upload_time": "2017-04-23T23:25:39",
      "upload_time_iso_8601": "2017-04-23T23:25:39.523277Z",
      "url": "https://files.pythonhosted.org/packages/a5/38/98f4047407d6c2c638443a170aba76694168b30b01a383757706e2dbc90e/django-tags-input-3.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}