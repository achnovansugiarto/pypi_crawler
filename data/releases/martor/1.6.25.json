{
  "info": {
    "author": "Agus Makmun (Summon Agus)",
    "author_email": "summon.agus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "## martor [![pypi version][1]][2] [![paypal donation][3]][4]\n\n[![license][5]][6] [![python version][7]][8] [![django version][9]][10] [![build][11]][12] [![black][18]][19]\n\n**Martor** is a Markdown Editor plugin for Django, supported for _Bootstrap_ & _Semantic-UI_.\n\n\n### Features\n\n* Live Preview\n* Integrated with [_Ace Editor_](https://ace.c9.io)\n* Supported with [_Bootstrap_](https://getbootstrap.com) and [_Semantic-UI_](https://semantic-ui.com)\n* Supported Multiple Fields [_fixed this issue_](https://github.com/agusmakmun/django-markdown-editor/issues/3)\n* Upload Images to imgur.com _(via API)_ and [custom uploader][13]\n* Direct Mention users `@[username]` - _(requires user to logged in)_.\n* Supports embed/iframe video from (Youtube, Vimeo, Dailymotion, Yahoo, Veoh, & Metacafe)\n* Spellchecking (only supports US English at this time)\n* Emoji `:emoji_name:` + Cheat sheets\n* Martor Commands Reference\n* Supports Django Admin\n* Toolbar Buttons\n* Highlight `pre`\n\n\n### Preview\n\n![editor](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-editor.png)\n\n![preview](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-preview.png)\n\n\n### Requirements\n\n* `Django>=3.2`\n* `Markdown>=3.0`\n* `requests>=2.12.4`\n* `bleach`\n\n\n### Installation\n\nMartor is available directly from [PyPI][2]:\n\n**1.** Installing the package.\n\n```\n$ pip install martor\n```\n\n\n**2.** Don't forget to add `'martor'` to your `'INSTALLED_APPS'` setting _(without migrations)_.\n\n```python\n# settings.py\nINSTALLED_APPS = [\n    ....\n    'martor',\n]\n```\n\n\n**3.** Add url pattern to your `urls.py.`\n\n```python\n# urls.py\nurlpatterns = [\n    ...\n    path('martor/', include('martor.urls')),\n]\n```\n\n\n**4.** Collect martor's static files in your `STATIC_ROOT` folder.\n\n```\n./manage.py collectstatic\n```\n\n\n### Setting Configurations `settings.py`\n\nPlease register your application at https://api.imgur.com/oauth2/addclient\nto get `IMGUR_CLIENT_ID` and `IMGUR_API_KEY`.\n\n```python\n# Choices are: \"semantic\", \"bootstrap\"\nMARTOR_THEME = 'bootstrap'\n\n# Global martor settings\n# Input: string boolean, `true/false`\nMARTOR_ENABLE_CONFIGS = {\n    'emoji': 'true',        # to enable/disable emoji icons.\n    'imgur': 'true',        # to enable/disable imgur/custom uploader.\n    'mention': 'false',     # to enable/disable mention\n    'jquery': 'true',       # to include/revoke jquery (require for admin default django)\n    'living': 'false',      # to enable/disable live updates in preview\n    'spellcheck': 'false',  # to enable/disable spellcheck in form textareas\n    'hljs': 'true',         # to enable/disable hljs highlighting in preview\n}\n\n# To show the toolbar buttons\nMARTOR_TOOLBAR_BUTTONS = [\n    'bold', 'italic', 'horizontal', 'heading', 'pre-code',\n    'blockquote', 'unordered-list', 'ordered-list',\n    'link', 'image-link', 'image-upload', 'emoji',\n    'direct-mention', 'toggle-maximize', 'help'\n]\n\n# To setup the martor editor with title label or not (default is False)\nMARTOR_ENABLE_LABEL = False\n\n# Imgur API Keys\nMARTOR_IMGUR_CLIENT_ID = 'your-client-id'\nMARTOR_IMGUR_API_KEY   = 'your-api-key'\n\n# Markdownify\nMARTOR_MARKDOWNIFY_FUNCTION = 'martor.utils.markdownify' # default\nMARTOR_MARKDOWNIFY_URL = '/martor/markdownify/' # default\n\n# Markdown extensions (default)\nMARTOR_MARKDOWN_EXTENSIONS = [\n    'markdown.extensions.extra',\n    'markdown.extensions.nl2br',\n    'markdown.extensions.smarty',\n    'markdown.extensions.fenced_code',\n\n    # Custom markdown extensions.\n    'martor.extensions.urlize',\n    'martor.extensions.del_ins',      # ~~strikethrough~~ and ++underscores++\n    'martor.extensions.mention',      # to parse markdown mention\n    'martor.extensions.emoji',        # to parse markdown emoji\n    'martor.extensions.mdx_video',    # to parse embed/iframe video\n    'martor.extensions.escape_html',  # to handle the XSS vulnerabilities\n]\n\n# Markdown Extensions Configs\nMARTOR_MARKDOWN_EXTENSION_CONFIGS = {}\n\n# Markdown urls\nMARTOR_UPLOAD_URL = '/martor/uploader/' # default\nMARTOR_SEARCH_USERS_URL = '/martor/search-user/' # default\n\n# Markdown Extensions\n# MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://www.webfx.com/tools/emoji-cheat-sheet/graphics/emojis/'     # from webfx\nMARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://github.githubassets.com/images/icons/emoji/'                  # default from github\nMARTOR_MARKDOWN_BASE_MENTION_URL = 'https://python.web.id/author/'                                      # please change this to your domain\n\n# If you need to use your own themed \"bootstrap\" or \"semantic ui\" dependency\n# replace the values with the file in your static files dir\nMARTOR_ALTERNATIVE_JS_FILE_THEME = \"semantic-themed/semantic.min.js\"   # default None\nMARTOR_ALTERNATIVE_CSS_FILE_THEME = \"semantic-themed/semantic.min.css\" # default None\nMARTOR_ALTERNATIVE_JQUERY_JS_FILE = \"jquery/dist/jquery.min.js\"        # default None\n\n# URL schemes that are allowed within links\nALLOWED_URL_SCHEMES = [\n    \"file\", \"ftp\", \"ftps\", \"http\", \"https\", \"irc\", \"mailto\",\n    \"sftp\", \"ssh\", \"tel\", \"telnet\", \"tftp\", \"vnc\", \"xmpp\",\n]\n\n# https://gist.github.com/mrmrs/7650266\nALLOWED_HTML_TAGS = [\n    \"a\", \"abbr\", \"b\", \"blockquote\", \"br\", \"cite\", \"code\", \"command\",\n    \"dd\", \"del\", \"dl\", \"dt\", \"em\", \"fieldset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n    \"hr\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\",\n    \"li\", \"ol\", \"optgroup\", \"option\", \"p\", \"pre\", \"small\", \"span\", \"strong\",\n    \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n]\n\n# https://github.com/decal/werdlists/blob/master/html-words/html-attributes-list.txt\nALLOWED_HTML_ATTRIBUTES = [\n    \"alt\", \"class\", \"color\", \"colspan\", \"datetime\",  # \"data\",\n    \"height\", \"href\", \"id\", \"name\", \"reversed\", \"rowspan\",\n    \"scope\", \"src\", \"style\", \"title\", \"type\", \"width\"\n]\n```\n\nCheck this setting is not set else csrf will not be sent over ajax calls:\n\n```python\nCSRF_COOKIE_HTTPONLY = False\n```\n\n\n### Usage\n\n\n#### Model\n\n```python\nfrom django.db import models\nfrom martor.models import MartorField\n\nclass Post(models.Model):\n    description = MartorField()\n```\n\n\n#### Form\n\n```python\nfrom django import forms\nfrom martor.fields import MartorFormField\n\nclass PostForm(forms.Form):\n    description = MartorFormField()\n```\n\n\n#### Admin\n\n```python\nfrom django.db import models\nfrom django.contrib import admin\n\nfrom martor.widgets import AdminMartorWidget\n\nfrom yourapp.models import YourModel\n\nclass YourModelAdmin(admin.ModelAdmin):\n    formfield_overrides = {\n        models.TextField: {'widget': AdminMartorWidget},\n    }\n\nadmin.site.register(YourModel, YourModelAdmin)\n```\n\n\n#### Template Renderer\n\nSimply safely parse markdown content as html ouput by loading templatetags from `martor/templatetags/martortags.py`.\n\n```html\n{% load martortags %}\n{{ field_name|safe_markdown }}\n\n# example\n{{ post.description|safe_markdown }}\n```\n\n\nDon't miss to include the required css & js files before use.\nYou can take a look at this folder [martor_demo/app/templates][14] for more details.\nThe below example is a one of the way to implement it when you choose the `MARTOR_THEME = 'bootstrap'`:\n\n```html\n{% extends \"bootstrap/base.html\" %}\n{% load static %}\n{% load martortags %}\n\n{% block css %}\n  <link href=\"{% static 'plugins/css/ace.min.css' %}\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n  <link href=\"{% static 'martor/css/martor.bootstrap.min.css' %}\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n{% endblock %}\n\n{% block content %}\n  <div class=\"martor-preview\">\n    <h1>Title: {{ post.title }}</h1>\n    <p><b>Description:</b></p>\n    <hr />\n    {{ post.description|safe_markdown }}\n  </div>\n{% endblock %}\n\n{% block js %}\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/highlight.min.js' %}\"></script>\n  <script>\n    $('.martor-preview pre').each(function(i, block){\n        hljs.highlightBlock(block);\n    });\n  </script>\n{% endblock %}\n```\n\n\n#### Template Editor Form\n\nDifferent with *Template Renderer*, the *Template Editor Form* have more css & javascript dependencies.\n\n```html\n{% extends \"bootstrap/base.html\" %}\n{% load static %}\n\n{% block css %}\n  <link href=\"{% static 'plugins/css/ace.min.css' %}\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n  <link href=\"{% static 'plugins/css/resizable.min.css' %}\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n  <link href=\"{% static 'martor/css/martor.bootstrap.min.css' %}\" type=\"text/css\" media=\"all\" rel=\"stylesheet\" />\n{% endblock %}\n\n{% block content %}\n  <form class=\"form\" method=\"post\">{% csrf_token %}\n    <div class=\"form-group\">\n      {{ form.title }}\n    </div>\n    <div class=\"form-group\">\n      {{ form.description }}\n    </div>\n    <div class=\"form-group\">\n      <button class=\"btn btn-success\">\n        <i class=\"save icon\"></i> Save Post\n      </button>\n    </div>\n  </form>\n{% endblock %}\n\n{% block js %}\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/ace.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/mode-markdown.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/ext-language_tools.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/theme-github.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/typo.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/spellcheck.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/highlight.min.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/resizable.min.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'plugins/js/emojis.min.js' %}\"></script>\n  <script type=\"text/javascript\" src=\"{% static 'martor/js/martor.bootstrap.min.js' %}\"></script>\n{% endblock %}\n```\n\n\n### Custom Uploader\n\nIf you want to save the images uploaded to your storage,\n**Martor** also provides a way to handle this. Please checkout this [WIKI][13]\n\n\n### Test Martor from this Repository\n\nAssuming you are already setup with a virtual enviroment (virtualenv):\n\n```\n$ git clone https://github.com/agusmakmun/django-markdown-editor.git\n$ cd django-markdown-editor/ && python setup.py install\n$ cd martor_demo/\n$ python manage.py makemigrations && python manage.py migrate\n$ python manage.py runserver\n```\n\n\nCheckout at http://127.0.0.1:8000/simple-form/ on your browser.\n\n\n### Martor Commands Reference\n\n![command refference](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-guide.png)\n\n\n### Notes\n\n**Martor** was inspired by these great projects: [django-markdownx][15], [Python Markdown][16] and [Online reStructuredText editor][17].\n\n\n[1]: https://img.shields.io/pypi/v/martor.svg\n[2]: https://pypi.python.org/pypi/martor\n\n[3]: https://img.shields.io/badge/donate-paypal-blue\n[4]: https://www.paypal.com/paypalme/summonagus\n\n[5]: https://img.shields.io/badge/license-GNUGPLv3-blue.svg\n[6]: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/LICENSE\n\n[7]: https://img.shields.io/pypi/pyversions/martor.svg\n[8]: https://pypi.python.org/pypi/martor\n\n[9]: https://img.shields.io/badge/Django-3.2%20%3E=%204.1-green.svg\n[10]: https://www.djangoproject.com\n\n[11]: https://img.shields.io/github/actions/workflow/status/agusmakmun/django-markdown-editor/run-tests.yml?branch=master\n[12]: https://github.com/agusmakmun/django-markdown-editor/actions/workflows/run-tests.yml\n\n[13]: https://github.com/agusmakmun/django-markdown-editor/wiki\n[14]: https://github.com/agusmakmun/django-markdown-editor/tree/master/martor_demo/app/templates\n[15]: https://github.com/adi-/django-markdownx\n[16]: https://github.com/waylan/Python-Markdown\n[17]: http://rst.ninjs.org\n\n[18]: https://img.shields.io/badge/code%20style-black-000000.svg\n[19]: https://github.com/ambv/black\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/agusmakmun/django-markdown-editor/tarball/v1.6.25",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/agusmakmun/django-markdown-editor",
    "keywords": "martor,django markdown,django markdown editor",
    "license": "GNUGPL-v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "martor",
    "package_url": "https://pypi.org/project/martor/",
    "platform": null,
    "project_url": "https://pypi.org/project/martor/",
    "project_urls": {
      "Download": "https://github.com/agusmakmun/django-markdown-editor/tarball/v1.6.25",
      "Homepage": "https://github.com/agusmakmun/django-markdown-editor"
    },
    "release_url": "https://pypi.org/project/martor/1.6.25/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Markdown Editor",
    "version": "1.6.25",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17357552,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bd487a187c73dc28f5fc0d23cffa02ea5a692fdbd3a0ff0fe590b7d7cdd72fa",
        "md5": "1590bcbe520c0d54a553ac5e50870700",
        "sha256": "1a38c2e3e2dca899e491dd3bb94c11d44f6dc15e10aa1e8d4e96d0842fd14aba"
      },
      "downloads": -1,
      "filename": "martor-1.6.25.tar.gz",
      "has_sig": false,
      "md5_digest": "1590bcbe520c0d54a553ac5e50870700",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1448557,
      "upload_time": "2023-03-20T00:43:47",
      "upload_time_iso_8601": "2023-03-20T00:43:47.901227Z",
      "url": "https://files.pythonhosted.org/packages/9b/d4/87a187c73dc28f5fc0d23cffa02ea5a692fdbd3a0ff0fe590b7d7cdd72fa/martor-1.6.25.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}