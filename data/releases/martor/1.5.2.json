{
  "info": {
    "author": "Agus Makmun (Summon Agus)",
    "author_email": "summon.agus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "martor |pypi version|\n------------------------------\n\n.. |pypi version|\n   image:: https://img.shields.io/pypi/v/martor.svg\n   :target: https://pypi.python.org/pypi/martor\n\n.. image:: https://img.shields.io/badge/license-GNUGPLv3-blue.svg\n   :target: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/LICENSE\n\n.. image:: https://img.shields.io/pypi/pyversions/martor.svg\n   :target: https://pypi.python.org/pypi/martor\n\n.. image:: https://img.shields.io/badge/Django-1.8%20%3E=%203.1-green.svg\n  :target: https://www.djangoproject.com\n\n.. image:: https://travis-ci.org/agusmakmun/django-markdown-editor.svg?branch=master\n  :target: https://travis-ci.org/agusmakmun/django-markdown-editor\n\n**Martor** is a Markdown Editor plugin for Django and the new face of **DracEditor**.\n\n\nFeatures\n------------------------------\n\n* Live Preview\n* Integrated with `Ace Editor`_\n* Supported with `Bootstrap`_ and `Semantic-UI`_\n* Supported Multiple Fields (`fixed this issue`_)\n* Upload Images to imgur.com `(via API)` and `custom uploader`_.\n* Direct Mention users ``@[username]`` - `(requires user to logged in)`\n* Supports embed/iframe video from (Youtube, Vimeo, Dailymotion, Yahoo, Veoh, & Metacafe)\n* Emoji ``:emoji_name:`` + Cheat sheets\n* Martor Commands Reference\n* Supports Django Admin\n* Toolbar Buttons\n* Highlight ``pre``\n* Spellchecking (only supports US English at this time)\n\n\nPreview\n------------------------------\n\n.. image:: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-editor.png\n\n.. image:: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-preview.png\n\n\nRequirements\n------------------------------\n\n* ``Django>=2.0``\n* ``Markdown>=3.0``\n* ``requests>=2.12.4``\n\n\nInstallation\n------------------------------\n\nMartor is available directly from `PyPI`_:\n\n1. Installing the package.\n\n::\n\n    $ pip install martor\n\n\n2. Don't forget to add ``'martor'`` to your ``'INSTALLED_APPS'`` setting `(without migrations)`.\n\n::\n\n    # settings.py\n    INSTALLED_APPS = [\n        ....\n        'martor',\n    ]\n\n\n3. Add url pattern to your ``urls.py.``\n\n::\n\n    # urls.py\n    # django >= 2.0\n    urlpatterns = [\n        ...\n        path('martor/', include('martor.urls')),\n    ]\n\n    # django <= 1.9\n    urlpatterns = [\n        ...\n        url(r'^martor/', include('martor.urls')),\n    ]\n\n\n4. Collect martor's static files in your ``STATIC_ROOT`` folder.\n\n::\n\n    ./manage.py collectstatic\n\n\nSetting Configurations ``settings.py``\n---------------------------------------\n\nPlease register your application at https://api.imgur.com/oauth2/addclient\nto get ``IMGUR_CLIENT_ID`` and ``IMGUR_API_KEY``.\n\n::\n\n    # Choices are: \"semantic-ui\", \"bootstrap\"\n    MARTOR_THEME = 'bootstrap'\n\n    # Global martor settings\n    # Input: string boolean, `true/false`\n    MARTOR_ENABLE_CONFIGS = {\n        'emoji': 'true',        # to enable/disable emoji icons.\n        'imgur': 'true',        # to enable/disable imgur/custom uploader.\n        'mention': 'false',     # to enable/disable mention\n        'jquery': 'true',       # to include/revoke jquery (require for admin default django)\n        'living': 'false',      # to enable/disable live updates in preview\n        'spellcheck': 'false',  # to enable/disable spellcheck in form textareas\n        'hljs': 'true',         # to enable/disable hljs highlighting in preview\n    }\n\n    # To show the toolbar buttons\n    MARTOR_TOOLBAR_BUTTONS = [\n        'bold', 'italic', 'horizontal', 'heading', 'pre-code',\n        'blockquote', 'unordered-list', 'ordered-list',\n        'link', 'image-link', 'image-upload', 'emoji',\n        'direct-mention', 'toggle-maximize', 'help'\n    ]\n\n    # To setup the martor editor with title label or not (default is False)\n    MARTOR_ENABLE_LABEL = False\n\n    # Imgur API Keys\n    MARTOR_IMGUR_CLIENT_ID = 'your-client-id'\n    MARTOR_IMGUR_API_KEY   = 'your-api-key'\n\n    # Markdownify\n    MARTOR_MARKDOWNIFY_FUNCTION = 'martor.utils.markdownify' # default\n    MARTOR_MARKDOWNIFY_URL = '/martor/markdownify/' # default\n\n    # Markdown extensions (default)\n    MARTOR_MARKDOWN_EXTENSIONS = [\n        'markdown.extensions.extra',\n        'markdown.extensions.nl2br',\n        'markdown.extensions.smarty',\n        'markdown.extensions.fenced_code',\n\n        # Custom markdown extensions.\n        'martor.extensions.urlize',\n        'martor.extensions.del_ins',      # ~~strikethrough~~ and ++underscores++\n        'martor.extensions.mention',      # to parse markdown mention\n        'martor.extensions.emoji',        # to parse markdown emoji\n        'martor.extensions.mdx_video',    # to parse embed/iframe video\n        'martor.extensions.escape_html',  # to handle the XSS vulnerabilities\n    ]\n\n    # Markdown Extensions Configs\n    MARTOR_MARKDOWN_EXTENSION_CONFIGS = {}\n\n    # Markdown urls\n    MARTOR_UPLOAD_URL = '/martor/uploader/' # default\n    MARTOR_SEARCH_USERS_URL = '/martor/search-user/' # default\n\n    # Markdown Extensions\n    # MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://www.webfx.com/tools/emoji-cheat-sheet/graphics/emojis/'     # from webfx\n    MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://github.githubassets.com/images/icons/emoji/'                  # default from github\n    MARTOR_MARKDOWN_BASE_MENTION_URL = 'https://python.web.id/author/'                                      # please change this to your domain\n\n    # If you need to use your own themed semantic ui dependency\n    # replace the values with the file in your static files dir\n    MARTOR_ALTERNATIVE_JS_FILE_THEME = \"semantic-themed/semantic.min.js\"   # default None\n    MARTOR_ALTERNATIVE_CSS_FILE_THEME = \"semantic-themed/semantic.min.css\" # default None\n    MARTOR_ALTERNATIVE_JQUERY_JS_FILE = \"jquery/dist/jquery.js\"            # default None\n\nCheck this setting is not set else csrf will not be sent over ajax calls:\n\n::\n\n    CSRF_COOKIE_HTTPONLY = False\n\n\nUsage\n------------------------------\n\n**Model**\n\n::\n\n    from django.db import models\n    from martor.models import MartorField\n\n    class Post(models.Model):\n        description = MartorField()\n\n\n**Form**\n\n::\n\n    from django import forms\n    from martor.fields import MartorFormField\n\n    class PostForm(forms.Form):\n        description = MartorFormField()\n\n\n**Admin**\n\n::\n\n    from django.db import models\n    from django.contrib import admin\n\n    from martor.widgets import AdminMartorWidget\n\n    from yourapp.models import YourModel\n\n    class YourModelAdmin(admin.ModelAdmin):\n        formfield_overrides = {\n            models.TextField: {'widget': AdminMartorWidget},\n        }\n\n    admin.site.register(YourModel, YourModelAdmin)\n\n\n**Template**\n\nSimply safely parse markdown content as html ouput by loading templatetags from ``martor/templatetags/martortags.py``.\n\n::\n\n    {% load martortags %}\n    {{ field_name|safe_markdown }}\n\n    # example\n    {{ post.description|safe_markdown }}\n\n\nCustom Uploader\n-----------------\n\nIf you want to save the images uploaded to your storage,\n**Martor** also provides a way to handle this. Please checkout this `WIKI`_.\n\nTest Martor from this Repository\n-------------------------------------\n\nAssuming you are already setup with a virtual enviroment (virtualenv):\n\n::\n\n    $ git clone https://github.com/agusmakmun/django-markdown-editor.git\n    $ cd django-markdown-editor/ && python setup.py install\n    $ cd martor_demo/\n    $ python manage.py makemigrations && python manage.py migrate\n    $ python manage.py runserver\n\n\nCheckout at http://127.0.0.1:8000/simple-form/ on your browser.\n\n\nMartor Commands Reference\n--------------------------------\n\n.. image:: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-guide.png\n\n\nNotes\n--------------------------------\n\n**Martor** was inspired by these great projects: `django-markdownx`_, `Python Markdown`_ and `Online reStructuredText editor`_.\n\n\n.. _Ace Editor: https://ace.c9.io\n.. _Bootstrap: https://getbootstrap.com\n.. _Semantic-UI: https://semantic-ui.com\n.. _PyPI: https://pypi.python.org/pypi/martor\n.. _django-markdownx: https://github.com/adi-/django-markdownx\n.. _Python Markdown: https://github.com/waylan/Python-Markdown\n.. _Online reStructuredText editor: http://rst.ninjs.org\n.. _WIKI: https://github.com/agusmakmun/django-markdown-editor/wiki\n.. _fixed this issue: https://github.com/agusmakmun/django-markdown-editor/issues/3\n.. _custom uploader: https://github.com/agusmakmun/django-markdown-editor/wiki",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/agusmakmun/django-markdown-editor/tarball/v1.5.2",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/agusmakmun/django-markdown-editor",
    "keywords": "martor,django markdown,django markdown editor",
    "license": "GNUGPL-v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "martor",
    "package_url": "https://pypi.org/project/martor/",
    "platform": "",
    "project_url": "https://pypi.org/project/martor/",
    "project_urls": {
      "Download": "https://github.com/agusmakmun/django-markdown-editor/tarball/v1.5.2",
      "Homepage": "https://github.com/agusmakmun/django-markdown-editor"
    },
    "release_url": "https://pypi.org/project/martor/1.5.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Markdown Editor",
    "version": "1.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17357552,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4554345c23f5b8bfcae22eba2da238baa091e68e0ae30c32434e57f95cdc44b",
        "md5": "b3376190689569af48be4b434c40847d",
        "sha256": "92ecfe2162f67724708f7657853539352cb27c32b98d2867c574679a3c24b0e4"
      },
      "downloads": -1,
      "filename": "martor-1.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b3376190689569af48be4b434c40847d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1432122,
      "upload_time": "2020-09-15T16:01:02",
      "upload_time_iso_8601": "2020-09-15T16:01:02.082126Z",
      "url": "https://files.pythonhosted.org/packages/d4/55/4345c23f5b8bfcae22eba2da238baa091e68e0ae30c32434e57f95cdc44b/martor-1.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}