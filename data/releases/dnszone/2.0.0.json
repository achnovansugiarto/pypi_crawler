{
  "info": {
    "author": "Greg Hellings",
    "author_email": "greg.hellings@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Topic :: Internet :: Name Service (DNS)",
      "Topic :: System :: Systems Administration"
    ],
    "description": "dnszone\n========\n\nOverview\n--------\n\nDNSZone is a package to manage the common record types of a\nzone file, including SOA records.  This module sits on top of\nthe dnspython package and provides a higher level abstraction\nfor common zone file manipulation use cases.\n\nhttp://pypi.python.org/pypi/dnszone\nhttps://github.come/greg-hellings/dnszone\n\n\nMain features:\n\n* A high-level abstraction on top of dnspython.\n* Load a zone file into objects.\n* Modify/add/delete zone/record objects.\n* Save back to zone file.\n* Auto-update serial (if necessary).\n\n\nRequirements\n------------\n\n  * dnspython - http://www.dnspython.org/\n\n\nBuild/Test/Install\n------------------\n\nBuild::\n\n  $ python setup.py build\n\nTest::\n\n  $ python setup.py test\n\nInstall::\n\n  $ python setup.py install\n\n\nOR with setuptools::\n\n  $ easy_install dnszone\n\n\nExamples\n--------\n\ndnszone::\n\n  >>> from dnszone import dnszone\n  >>> z = dnszone.zone_from_file('example.com', '/var/namedb/example.com')\n  >>> z.domain\n  'example.com.'\n  >>> z.root.soa.serial\n  2007012902L\n  >>> z.root.records('NS').items\n  ['ns1.example.com.', 'ns2.example.com.']\n  >>> z.root.records('MX').items\n  [(10, 'mail.example.com.'), (20, 'mail2.example.com.')]\n  >>> z.names['foo.example.com.'].records('A').items\n  ['10.0.0.1']\n\n  >>> ns = z.root.records('NS')\n  >>> ns.add('ns3.example.com.')\n  >>> ns.items\n  ['ns1.example.com.', 'ns2.example.com.', 'ns3.example.com.']\n  >>> ns.delete('ns2.example.com')\n  >>> ns.items\n  ['ns1.example.com.', 'ns3.example.com.']\n\n  >>> z.save(autoserial=True)\n\nZoneCheck::\n\n  >>> from dnszone.zone_check import ZoneCheck\n  >>> c = ZoneCheck()\n  >>> c.isValid('example.com', '/var/named/zones/example.com')\n  True\n  >>> c.isValid('foo.com', '/var/named/zones/example.com')\n  False\n  >>> c.error\n  'Bad syntax'\n  >>>\n  >>> c = ZoneCheck(checkzone='/usr/sbin/named-checkzone')\n  >>> c.isValid('example.com', '/var/named/zones/example.com')\n  True\n  >>>\n\nZoneReload::\n\n  >>> from dnszone.zone_reload import ZoneReload\n  >>> r = ZoneReload()\n  >>> r.reload('example.com')\n  zone reload up-to-date\n  >>> r.reload('foo.com')\n  rndc: 'reload' failed: not found\n  Traceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\n    File \"dnszone/zone_reload.py\", line 51, in reload\n      raise ZoneReloadError(\"rndc failed with return code %d\" % r)\n  dnszone.zone_reload.ZoneReloadError: rndc failed with return code 1\n  >>>\n  >>> r = ZoneReload(rndc='/usr/sbin/rndc')\n  >>> r.reload('example.com')\n  zone reload up-to-date\n  >>>\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/greg-hellings/dnszone",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnszone",
    "package_url": "https://pypi.org/project/dnszone/",
    "platform": "",
    "project_url": "https://pypi.org/project/dnszone/",
    "project_urls": {
      "Homepage": "https://github.com/greg-hellings/dnszone"
    },
    "release_url": "https://pypi.org/project/dnszone/2.0.0/",
    "requires_dist": [
      "dnspython",
      "six"
    ],
    "requires_python": "",
    "summary": "Easy Zone - DNS Zone abstraction module",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6719991,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9374904cce1d8f96a8536540f5fb4bd230f9fe1c3a9c28e637ebe9fc221c143",
        "md5": "18b3fc7dade249e081fd8e477141536a",
        "sha256": "123d021edb6eac6a694982edf6b045cc23ce905ccec038d86abaebefe676f101"
      },
      "downloads": -1,
      "filename": "dnszone-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18b3fc7dade249e081fd8e477141536a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8767,
      "upload_time": "2019-02-18T23:52:45",
      "upload_time_iso_8601": "2019-02-18T23:52:45.010633Z",
      "url": "https://files.pythonhosted.org/packages/c9/37/4904cce1d8f96a8536540f5fb4bd230f9fe1c3a9c28e637ebe9fc221c143/dnszone-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50073138f559f95414cc9ec9c14e57cee2ac7b96c151c82e426febf52b512dd0",
        "md5": "d2455257caf030a689d53ce62d849385",
        "sha256": "306dbf5494c3fed2429325b8786649a73bb2ccbe5e4ab385dab888f98fd826ec"
      },
      "downloads": -1,
      "filename": "dnszone-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d2455257caf030a689d53ce62d849385",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7007,
      "upload_time": "2019-02-18T23:52:46",
      "upload_time_iso_8601": "2019-02-18T23:52:46.852621Z",
      "url": "https://files.pythonhosted.org/packages/50/07/3138f559f95414cc9ec9c14e57cee2ac7b96c151c82e426febf52b512dd0/dnszone-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}