{
  "info": {
    "author": "Filip Varecha",
    "author_email": "xaralis@centrum.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-versioned-static\n------------------------\n\nThis little apps helps to manage your staticfiles when you need to minify\nthem for production use. Moreover, it is capable of versioning the assets\nso that whenever you need to alter the static files, users won't be given\nold file from the browser cache.\n\nInstallation\n=============\n\nStandard Django way::\n    \n    pip install django-versioned-static\n    \nAdd to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ..\n        ..,\n        'versioned_static',\n        ...\n    )\n    \nConfigure the assets themselves::\n\n    STATICS_ASSETS = {\n        'css': {\n            'css/mycoolproject.css': {\n                'media': ('screen', 'projection', 'tv'),\n                'files': ('css/jquery-ui-1.8.18.custom.css', 'css/style.css',),\n                'version': 1\n            },\n            'css/print.css': {\n                'media': ('print',),\n                'files': ('css/print.css',),\n                'version': 1\n            }\n        },\n        'js': {\n            'js/mycoolproject.js': {\n                'files': ('js/jquery-1.7.1.min.js',\n                          'js/main.js'),\n                'version': 1\n            }\n        }\n    }\n\nDone!\n\nUsage in templates\n==================\n\nVery simple. Use the ``asset`` template tag. Give it the static type (css or js)\nand the base css alias. It will generate all the necessary HTML for you directly:: \n\n    {% load versioned_static_tags %}\n    {% asset \"css\" \"css/mycoolproject.css\" %}\n    {% asset \"css\" \"css/print.css\" %}\n    {% asset \"js\" \"js/mycoolproject.js\" %}\n    \nIt takes your settings in the account. In development (when ``DEBUG = True``),\nyou will be given unversioned and unminified static files. When you turn \nthe debug off, you will be given versioned asset links.\n\n**Result with DEBUG=True**::\n\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/static/css/jquery-ui-1.8.18.custom.css\" media=\"screen,projection,tv\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/static/css/style.css\" media=\"screen,projection,tv\"/>\n    \n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/static/css/print.css\" media=\"print\"/>\n    \n    <script type=\"text/javascript\" src=\"/static/js/jquery-1.7.1.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/static/js/main.js\"></script>\n    \n**Result with DEBUG=False**::\n    \n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/static/css/mycoolproject.1.css\" media=\"screen,projection,tv\"/>\n    \n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/static/css/print.1.css\" media=\"print\"/>\n    \n    <script type=\"text/javascript\" src=\"/static/js/mycoolproject.1.js\"></script>\n    \n    \nMinifying the files\n===================\n\nThis app features simple management command which helps you create the minified\nfiles for production. Usage goes like this::\n\n    django-admin.py minifystatics (CSS/JS) ASSET_FILE\n    \nReal example for previous scenario::\n\n    django-admin.py minifystatics css css/print.css\n    \nThe command will look in your ``STATIC_ROOT`` by default (so be sure you\nran collectstatic before the minify command) and use it as the root path.\n\n\nNotes\n=========\n\ndjango-versioned-static internally uses YUI library for minifying the CSS/JS assets.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/xaralis/django-versioned-static",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-versioned-static",
    "package_url": "https://pypi.org/project/django-versioned-static/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-versioned-static/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/xaralis/django-versioned-static"
    },
    "release_url": "https://pypi.org/project/django-versioned-static/1.3.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "UNKNOWN",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 790979,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d0a7564f0d04f0d4fa12ee7842fce7f5e8c63d2b420b5350db3bd1ef4b5ee4e",
        "md5": "03cac2f6f4c16ea33671100e69a4f877",
        "sha256": "a09dc46bd2f4da50d9a2ba083756316c3036373e2a9dc250e5f8c67244932592"
      },
      "downloads": -1,
      "filename": "django-versioned-static-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "03cac2f6f4c16ea33671100e69a4f877",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4059,
      "upload_time": "2012-04-14T13:05:11",
      "upload_time_iso_8601": "2012-04-14T13:05:11.626339Z",
      "url": "https://files.pythonhosted.org/packages/7d/0a/7564f0d04f0d4fa12ee7842fce7f5e8c63d2b420b5350db3bd1ef4b5ee4e/django-versioned-static-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}