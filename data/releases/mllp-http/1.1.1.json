{
  "info": {
    "author": "Rivet Health",
    "author_email": "ops@rivethealth.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MLLP <-> HTTP\n\n[![PyPI](https://img.shields.io/pypi/v/mllp-http)](https://pypi.org/project/mllp-http/)\n\nConvert MLLP to HTTP and vice versa.\n\nKeywords: MLLP, HTTP, HL7\n\n## Overview\n\nThe `http2mllp` program is an HTTP server that converts requests to MLLP.\n\nThe `mllp2http` program is an MLLP server that converts messages to HTTP\nrequests.\n\nImplements\n[MLLP release 1](https://www.hl7.org/documentcenter/public/wg/inm/mllp_transport_specification.PDF)\nand [HTTP/1.1](https://tools.ietf.org/html/rfc2616). Each MLLP message is\nassumed to have a corresponding response content (e.g. HL7 acknoledgment).\n\nRoughly compatible with\n[HL7 over HTTP](https://hapifhir.github.io/hapi-hl7v2/hapi-hl7overhttp/specification.html).\n\nNote that this is only MLLP; it does not process HL7v2/HL7v3 messages\nthemselves. Notably, when used for HL7, the HTTP participant must be able to\nread/generate acknowledgements.\n\n## Install\n\n### [Pip](https://pypi.org/project/awscli-saml/)\n\n```sh\npip install mllp-http\n```\n\nRun as\n\n```sh\nhttp2mllp mllp://localhost:2575\n\nmllp2http http://localhost:8000\n```\n\n### [Docker](https://hub.docker.com/r/rivethealth/aws-saml)\n\n```sh\ndocker pull rivethealth/mllp-http\n```\n\nRun as\n\n```sh\ndocker run -it -p 2575:2575 rivethealth/mllp-http http2mllp mllp://localhost:2575\n\ndocker run -it -p 2575:2575 rivethealth/mllp-http mllp2http http://localhost:8000\n```\n\n## Usage\n\n### http2mllp\n\n```\nusage: http2mllp [-h] [-H HOST] [-p PORT] [--keep-alive KEEP_ALIVE] [--log-level {error,warn,info}] [--mllp-max-messages MLLP_MAX_MESSAGES] [--mllp-release {1}]\n                 [--timeout TIMEOUT] [-v]\n                 mllp_url\n\n            HTTP server that proxies an MLLP server.\n            Expects an MLLP response message and uses it as the HTTP response.\n\n\npositional arguments:\n  mllp_url              MLLP URL, e.g. mllp://hostname:port\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  HTTP host (default: 0.0.0.0)\n  -p PORT, --port PORT  HTTP port (default: 8000)\n  --keep-alive KEEP_ALIVE\n                        keep-alive in milliseconds, or unlimited if -1. (default: 0)\n  --log-level {error,warn,info}\n  --mllp-max-messages MLLP_MAX_MESSAGES\n                        maximum number of messages per connection, or unlimited if -1. (default: -1)\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     socket timeout, in milliseconds, or unlimited if 0. (default: 10000)\n  -v, --version         show program's version number and exit\n```\n\n### mllp2http\n\n```\nusage: mllp2http [-h] [-H HOST] [-p PORT] [--content-type CONTENT_TYPE] [--log-level {error,warn,info}] [--mllp-release {1}]\n                 [--timeout TIMEOUT] [-v]\n                 http_url\n\nMLLP server that proxies an HTTP server. Sends back the HTTP response.\n\npositional arguments:\n  http_url              HTTP URL\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  MLLP host (default: 0.0.0.0)\n  -p PORT, --port PORT  MLLP port (default: 2575)\n  --content-type CONTENT_TYPE\n                        HTTP Content-Type header (default: x-application/hl7-v2+er7)\n  --log-level {error,warn,info}\n  --mllp-release {1}    MLLP release version (default: 1)\n  --timeout TIMEOUT     timeout in milliseconds (default: 10000)\n  -v, --version         show program's version number and exit\n\nenvironment variables:\n    HTTP_AUTHORIZATION - HTTP Authorization header\n```\n\n## Examples\n\n### mllp2http\n\nRun the HTTP server:\n\n```sh\ndocker run -p 8000:80 kennethreitz/httpbin\n```\n\nRun the MLLP connector:\n\n```sh\nmllp2http http://localhost:8000/post\n```\n\nSend an MLLP message:\n\n```sh\nprintf '\\x0bMESSAGE\\x1c\\x0d' | socat - TCP:localhost:2575\n```\n\nand see the HTTP server's response, which describes the HTTP request:\n\n```json\n{\n  \"args\": {}, \n  \"data\": \"MESSAGE\", \n  \"files\": {}, \n  \"form\": {}, \n  \"headers\": {\n    \"Accept\": \"*/*\", \n    \"Accept-Encoding\": \"gzip, deflate\", \n    \"Connection\": \"keep-alive\", \n    \"Content-Length\": \"7\", \n    \"Content-Type\": \"x-application/hl7-v2+er7\", \n    \"Forwarded\": \"by=127.0.0.1:2575;for=127.0.0.1:54572;proto=mllp\", \n    \"Host\": \"localhost:8000\", \n    \"User-Agent\": \"mllp2http/1.0.2\"\n  }, \n  \"json\": null, \n  \"origin\": \"127.0.0.1:54572\", \n  \"url\": \"mllp://localhost:8000/post\"\n}\n```\n\n## Developing\n\nTo install:\n\n```sh\nmake install\n```\n\nBefore committing, format:\n\n```sh\nmake format\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rivethealth/mllp-http",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mllp-http",
    "package_url": "https://pypi.org/project/mllp-http/",
    "platform": "",
    "project_url": "https://pypi.org/project/mllp-http/",
    "project_urls": {
      "Homepage": "https://github.com/rivethealth/mllp-http",
      "Issues": "https://github.com/rivethealth/mllp-http/issues"
    },
    "release_url": "https://pypi.org/project/mllp-http/1.1.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Translate between MLLP and HTTP",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12843086,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80c5996a8a4282b12a86ec1579f7de68ed637f5caac35b0d2d44d7267c211512",
        "md5": "c715a7b6a30403be51dd6ccf4f3ca53f",
        "sha256": "9f1606b3cff894e143749904913f2f8e9b69b73d401400638451438acc5245a9"
      },
      "downloads": -1,
      "filename": "mllp_http-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c715a7b6a30403be51dd6ccf4f3ca53f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8912,
      "upload_time": "2021-02-20T18:17:34",
      "upload_time_iso_8601": "2021-02-20T18:17:34.307394Z",
      "url": "https://files.pythonhosted.org/packages/80/c5/996a8a4282b12a86ec1579f7de68ed637f5caac35b0d2d44d7267c211512/mllp_http-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fbff9e9107d724ea907b20791b99cb6874549cb29d9385d9b98cd98b2e4664c",
        "md5": "09daed9c9badc93b3bed705d80f64158",
        "sha256": "d7609cc41e6ef12e2868cf207e55ec4277b602e105ee89a31904239d64f7766d"
      },
      "downloads": -1,
      "filename": "mllp-http-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "09daed9c9badc93b3bed705d80f64158",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9372,
      "upload_time": "2021-02-20T18:17:35",
      "upload_time_iso_8601": "2021-02-20T18:17:35.319429Z",
      "url": "https://files.pythonhosted.org/packages/4f/bf/f9e9107d724ea907b20791b99cb6874549cb29d9385d9b98cd98b2e4664c/mllp-http-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}