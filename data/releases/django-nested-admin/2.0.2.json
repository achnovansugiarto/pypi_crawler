{
  "info": {
    "author": "The Atlantic",
    "author_email": "programmers@theatlantic.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": ".. image:: https://travis-ci.org/theatlantic/django-nested-admin.svg?branch=master\n    :target: https://travis-ci.org/theatlantic/django-nested-admin\n    :alt: Build Status\n\n**django-nested-admin** is a project that makes it possible to nest\nadmin inlines (that is, to define inlines on InlineModelAdmin classes).\ncompatible with Django 1.4-1.7 and Python versions 2.7 and 3.4.\nDjango 1.8 support is in beta.\n\nInstallation\n============\n\nThe recommended way to install django-nested-admin is from\n`PyPI <https://pypi.python.org/pypi/django-nested-admin>`_::\n\n        pip install django-nested-admin\n\nAlternatively, one can install a development copy of django-nested-admin\nfrom source::\n\n        pip install -e git+git://github.com/theatlantic/django-nested-admin.git#egg=django-nested-admin\n\nIf the source is already checked out, use setuptools to install::\n\n        python setup.py develop\n\nConfiguration\n=============\n\nTo use django-nested-admin in your project, ``\"nested_admin\"`` must be\nadded to the ``INSTALLED_APPS`` in your settings and you must include\n``nested_admin.urls`` in your django urlpatterns.\n`django-grappelli <https://github.com/sehmaschine/django-grappelli>`_\nis a requirements of django-nested-admin. Make sure the\n`appropriate version <http://django-grappelli.readthedocs.org/en/latest/#versions>`_\nof Grappelli is installed for your version of Django.\n\n.. code-block:: python\n\n    # settings.py\n\n    INSTALLED_APPS = (\n        # ...\n        'nested_admin',\n    )\n\n    # urls.py\n\n    urlpatterns = patterns('',\n        # ...\n        url(r'^nested_admin/', include('nested_admin.urls')),\n    )\n\nExample Usage\n=============\n\nIn order to use ``django-nested-admin``, use the following classes in\nplace of their django admin equivalents:\n\n========================  ======================\n**django.contrib.admin**  **nested_admin**      \n------------------------  ----------------------\nModelAdmin                NestedAdmin           \nInlineModelAdmin          NestedInlineModelAdmin\nStackedInline             NestedStackedInline   \n========================  ======================\n\n.. code-block:: python\n\n    # An example admin.py for a Table of Contents app\n\n    from django.contrib import admin\n    import nested_admin\n\n    from .models import TableOfContents, TocArticle, TocSection\n\n    class TocArticleInline(nested_admin.NestedStackedInline):\n        model = TocArticle\n        sortable_field_name = \"position\"\n\n    class TocSectionInline(nested_admin.NestedStackedInline):\n        model = TocSection\n        sortable_field_name = \"position\"\n        inlines = [TocArticleInline]\n\n    class TableOfContentsAdmin(nested_admin.NestedAdmin):\n        inlines = [TocSectionInline]\n\n    admin.site.register(TableOfContents, TableOfContentsAdmin)\n\nLicense\n=======\n\nThe django code is licensed under the `Simplified BSD\nLicense <http://opensource.org/licenses/BSD-2-Clause>`_. View the\n``LICENSE`` file under the root directory for complete license and\ncopyright information.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theatlantic/django-nested-admin",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-nested-admin",
    "package_url": "https://pypi.org/project/django-nested-admin/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-nested-admin/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/theatlantic/django-nested-admin"
    },
    "release_url": "https://pypi.org/project/django-nested-admin/2.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django admin classes that allow for nested inlines",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15756618,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12d04b352c21085a9f0c0916b3295214faf4aaf94be4ba893a9be77ae05e21fe",
        "md5": "beeebcb566e9928a68ff88301bcebf08",
        "sha256": "9a6ab15ebf1b80468fdd383f3f486049ce3cc1fc8a573710e0735e15c9c1587b"
      },
      "downloads": -1,
      "filename": "django-nested-admin-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "beeebcb566e9928a68ff88301bcebf08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 92393,
      "upload_time": "2015-04-13T16:59:13",
      "upload_time_iso_8601": "2015-04-13T16:59:13.218600Z",
      "url": "https://files.pythonhosted.org/packages/12/d0/4b352c21085a9f0c0916b3295214faf4aaf94be4ba893a9be77ae05e21fe/django-nested-admin-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}