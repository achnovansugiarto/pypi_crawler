{
  "info": {
    "author": "Qin Fandong",
    "author_email": "shell_way@foxmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# python-dmiparser\n\n## About\n\nThis parse `dmidecode` output to JSON text.\n\n## Installation\n\n### PyPI\n\n```shell\npip3 install -U dmiparser\n```\n\n### RPM\n\n```shell\ngit clone https://github.com/Arondight/python-dmiparser.git\ncd ./python-dmiparser/\npython3 ./setup.py bdist --format=rpm\nsudo dnf install ./dist/dmiparser-*.noarch.rpm\n```\n\n> Tip: Requires the `rpm-build` package in your Linux distribution.\n\n## Usage\n\n### Python 3 script\n\n#### DmiParser\n\nThis accepts a `str` (with the output of `dmidecode`) as argument and converts it to JSON text.\n\n```python\n#!/usr/bin/env python3\nimport json\nfrom dmiparser import DmiParser\nfrom functools import partial\n\n\ndef report(*args: str) -> None:\n    \"\"\"report texts with format\n\n    @param args: text string\n    \"\"\"\n    br = lambda e: print(\"-\" * e)\n    brn = partial(br, 80)\n\n    brn()\n\n    for e in args:\n        print(e)\n        brn()\n\n\nif \"__main__\" == __name__:\n    text = (\n        \"# dmidecode 3.0\\n\"\n        \"Getting SMBIOS data from sysfs.\\n\"\n        \"SMBIOS 2.7 present.\\n\"\n        \"\\n\"\n        \"Handle 0x0003, DMI type 2, 17 bytes\\n\"\n        \"Base Board Information\\n\"\n        \"\\tManufacturer: Intel Corporation\\n\"\n        \"\\tProduct Name: S2600WT2R\\n\"\n        \"\\tVersion: H21573-372\\n\"\n        \"\\tSerial Number: BQWL81150522\\n\"\n        \"\\tAsset Tag: Base Board Asset Tag\\n\"\n        \"\\tFeatures:\\n\"\n        \"\\t\\tBoard is a hosting board\\n\"\n        \"\\t\\tBoard is replaceable\\n\"\n        \"\\tLocation In Chassis: Part Component\\n\"\n        \"\\tChassis Handle: 0x0000\\n\"\n        \"\\tType: Motherboard\\n\"\n        \"\\tContained Object Handles: 0\\n\"\n        \"\\n\"\n    )\n\n    # parser = DmiParser(text)\n    parser = DmiParser(text, sort_keys=True, indent=2)\n\n    parsedStr = str(parser)  # get str\n    parsedObj = json.loads(str(parser))  # get object\n\n    report(parsedStr, parsedObj)\n```\n\n#### DmiDecoder (the default wrapper)\n\nThis run `dmidecode` and converting the output of the command to JSON text.\n\n```python\nfrom dmiparser.dmidecoder import DmiDecoder\nfrom functools import partial\n\n\ndef report(*args: str) -> None:\n    \"\"\"report texts with format\n\n    @param args: text string\n    \"\"\"\n    br = lambda e: print(\"-\" * e)\n    brn = partial(br, 80)\n\n    brn()\n\n    for e in args:\n        print(e)\n        brn()\n\n\ndef getCpuInfo(dmidecoder) -> str:\n    \"\"\"Get CPU information, will return text like below.\n\n    CPU1:\n        Family: Xeon\n        Version: Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz\n        Voltage: 1.8 V\n        Speed: 2200 MHz/4000 MHz\n        Status: Populated, Enabled\n        Core: 10/10\n        Thread: 20\n    CPU2:\n        Family: Xeon\n        Version: Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz\n        Voltage: 1.8 V\n        Speed: 2200 MHz/4000 MHz\n        Status: Populated, Enabled\n        Core: 10/10\n        Thread: 20\n\n    @param: dmidecode: DmiDecode object\n    @return: text of CPU information\n    \"\"\"\n    text = \"\"\n\n    for id, name in dmidecoder.sections:\n        def getFirst(*args):\n            vals = dmidecoder.getProp(*args, id=id, name=name)\n            return vals[0] if len(vals) > 0 else None\n\n        text += \"{}:\\n\".format(getFirst(\"Socket Designation\"))\n        text += \"\\tFamily: {}\\n\".format(getFirst(\"Family\"))\n        text += \"\\tVersion: {}\\n\".format(getFirst(\"Version\"))\n        text += \"\\tVoltage: {}\\n\".format(getFirst(\"Voltage\"))\n        text += \"\\tSpeed: {}/{}\\n\".format(getFirst(\"Current Speed\"), getFirst(\"Max Speed\"))\n        text += \"\\tStatus: {}\\n\".format(getFirst(\"Status\"))\n        text += \"\\tCore: {}/{}\\n\".format(getFirst(\"Core Enabled\"), getFirst(\"Core Count\"))\n        text += \"\\tThread: {}\\n\".format(getFirst(\"Thread Count\"))\n\n    return text\n\n\nif \"__main__\" == __name__:\n    # dmidecoder = DmiDecoder()\n    dmidecoder4 = DmiDecoder(\"-t 4\", sort_keys=True, indent=2)  # Type 4 is Processor\n\n    report(dmidecoder4.text, str(dmidecoder4.data), getCpuInfo(dmidecoder4))\n```\n\n> Tip: Superuser permissions are required here to run `dmidecode`.\n\n### Executable command\n\n#### dmiparser\n\nThis read output of `dmidecode` from pipe and print it as JSON text.\n\n```shell\nsudo dmidecode | dmiparser\nsudo dmidecode -t 4 | dmiparser --format\n```\n\n```shell\nsudo dmidecode >/tmp/dmidecode.txt\ndmiparser </tmp/dmidecode.txt\n```\n\n> Tip: you can run `dmiparser` module as a script (use `python3 -m dmiparser` instead of `dmiparser` command).\n\n#### dmidecoder\n\nThis run `dmidecode` and print the output as JSON text.\n\n```shell\nsudo dmidecoder\nsudo dmidecoder --arguments \"-t 4\" --format\n```\n\n> Tip: you can run `dmiparser.dmidecoder` module as a script (use `python3 -m dmiparser.dmidecoder` instead\n> of `dmidecoder` command).\n\n## Development\n\n### Test\n\n```shell\ntox\n```\n\n### Format\n\n```shell\nblack -l 120 ./dmiparser/ ./tests/\n```\n\n## License\n\n[MIT LICENSE](https://github.com/Arondight/python-dmiparser/blob/master/LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Arondight/python-dmiparser/tags",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Arondight/python-dmiparser",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dmiparser",
    "package_url": "https://pypi.org/project/dmiparser/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/dmiparser/",
    "project_urls": {
      "Download": "https://github.com/Arondight/python-dmiparser/tags",
      "Homepage": "https://github.com/Arondight/python-dmiparser"
    },
    "release_url": "https://pypi.org/project/dmiparser/5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This parse dmidecode output to JSON text",
    "version": "5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14753178,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4690b73659de38ebbedfcb615e5b20c3739d5897928a215459cc4dbf0bf0097b",
        "md5": "5af72250c5b0f7a145e3b87eeca9f333",
        "sha256": "6f7723be6ca6128f67ec26843cc6cbae40d2484e8310a762b9d2db8c137f25f4"
      },
      "downloads": -1,
      "filename": "dmiparser-5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5af72250c5b0f7a145e3b87eeca9f333",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11520,
      "upload_time": "2022-08-14T03:47:30",
      "upload_time_iso_8601": "2022-08-14T03:47:30.042383Z",
      "url": "https://files.pythonhosted.org/packages/46/90/b73659de38ebbedfcb615e5b20c3739d5897928a215459cc4dbf0bf0097b/dmiparser-5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "785fee5ee51a40ad8ff4c4bbaafbf3539b42be5eb532f2893114f415466e9b5d",
        "md5": "342f6bf7e2d5998a6e7d1869af6f9913",
        "sha256": "890aaca9760e541e13dc0c40dd1879645aa88526de6e262d8d2cab2601b3a8a4"
      },
      "downloads": -1,
      "filename": "dmiparser-5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "342f6bf7e2d5998a6e7d1869af6f9913",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8931,
      "upload_time": "2022-08-14T03:47:32",
      "upload_time_iso_8601": "2022-08-14T03:47:32.186024Z",
      "url": "https://files.pythonhosted.org/packages/78/5f/ee5ee51a40ad8ff4c4bbaafbf3539b42be5eb532f2893114f415466e9b5d/dmiparser-5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}