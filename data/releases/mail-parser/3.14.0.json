{
  "info": {
    "author": "Fedele Mantuano",
    "author_email": "mantuano.fedele@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/mail-parser.svg)](https://badge.fury.io/py/mail-parser)\n[![Build Status](https://travis-ci.org/SpamScope/mail-parser.svg?branch=develop)](https://travis-ci.org/SpamScope/mail-parser)\n[![Coverage Status](https://coveralls.io/repos/github/SpamScope/mail-parser/badge.svg?branch=develop)](https://coveralls.io/github/SpamScope/mail-parser?branch=develop)\n[![BCH compliance](https://bettercodehub.com/edge/badge/SpamScope/mail-parser?branch=develop)](https://bettercodehub.com/)\n[![](https://images.microbadger.com/badges/image/fmantuano/spamscope-mail-parser.svg)](https://microbadger.com/images/fmantuano/spamscope-mail-parser \"Get your own image badge on microbadger.com\")\n\n![SpamScope](https://raw.githubusercontent.com/SpamScope/spamscope/develop/docs/logo/spamscope.png)\n\n# mail-parser\n\n## Overview\n\nmail-parser is not only a wrapper for [email](https://docs.python.org/2/library/email.message.html) Python Standard Library.\nIt give you an easy way to pass from raw mail to Python object that you can use in your code.\nIt's the key module of [SpamScope](https://github.com/SpamScope/spamscope).\n\nmail-parser can parse Outlook email format (.msg). To use this feature, you need to install `libemail-outlook-message-perl` package. For Debian based systems:\n\n```\n$ apt-get install libemail-outlook-message-perl\n```\n\nFor more details:\n\n```\n$ apt-cache show libemail-outlook-message-perl\n```\n\nmail-parser supports Python 3.\n\n## mail-parser on Web\n - [Splunk app](https://splunkbase.splunk.com/app/4129/)\n - [FreeBSD port](https://www.freshports.org/mail/py-mail-parser/)\n - [Arch User Repository](https://aur.archlinux.org/packages/mailparser/)\n\n\n## Description\n\nmail-parser takes as input a raw email and generates a parsed object. The properties of this object are the same name of \n[RFC headers](https://www.iana.org/assignments/message-headers/message-headers.xhtml):\n\n  - bcc\n  - cc\n  - date\n  - delivered_to\n  - from\\_ (not `from` because is a keyword of Python)\n  - message_id\n  - received\n  - reply_to\n  - subject\n  - to\n\nThere are other properties to get:\n  - body\n  - body html\n  - body plain\n  - headers\n  - attachments\n  - sender IP address\n  - to domains\n  - timezone\n\nThe `attachments` property is a list of objects. Every object has the following keys:\n  - binary: it's true if the attachment is a binary\n  - charset\n  - content_transfer_encoding\n  - content-disposition\n  - content-id\n  - filename\n  - mail_content_type\n  - payload: attachment payload in base64\n\nTo get custom headers you should replace \"-\" with \"\\_\".\nExample for header `X-MSMail-Priority`:\n\n```\n$ mail.X_MSMail_Priority\n```\n\nThe `received` header is parsed and splitted in hop. The fields supported are:\n - by\n - date\n - date_utc\n - delay (between two hop)\n - envelope_from\n - envelope_sender\n - for\n - from\n - hop\n - with\n\n\nmail-parser can detect defect in mail:\n  - [defects](https://docs.python.org/2/library/email.message.html#email.message.Message.defects): mail with some not compliance RFC part\n\nAll properties have a JSON and raw property that you can get with:\n - name_json\n - name_raw\n\nExample:\n\n```\n$ mail.to (Python object)\n$ mail.to_json (JSON)\n$ mail.to_raw (raw header)\n```\n\nThe command line tool use the JSON format.\n\n### Defects\nThese defects can be used to evade the antispam filter. An example are the mails with a malformed boundary that can hide a not legitimate epilogue (often malware).\nThis library can take these epilogues.\n\n\n### Apache 2 Open Source License\nmail-parser can be downloaded, used, and modified free of charge. It is available under the Apache 2 license.\n\nIf you want support the project:\n\n\n[![Donate](https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif \"Donate\")](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VEPXYP745KJF2)\n\n\n## Authors\n\n### Main Author\n**Fedele Mantuano**: [LinkedIn](https://www.linkedin.com/in/fmantuano/)\n\n\n## Installation\n\nClone repository\n\n```\ngit clone https://github.com/SpamScope/mail-parser.git\n```\n\nand install mail-parser with `setup.py`:\n\n```\n$ cd mail-parser\n\n$ python setup.py install\n```\n\nor use `pip`:\n\n```\n$ pip install mail-parser\n```\n\n## Usage in a project\n\nImport `mailparser` module:\n\n```\nimport mailparser\n\nmail = mailparser.parse_from_bytes(byte_mail)\nmail = mailparser.parse_from_file(f)\nmail = mailparser.parse_from_file_msg(outlook_mail)\nmail = mailparser.parse_from_file_obj(fp)\nmail = mailparser.parse_from_string(raw_mail)\n```\n\nThen you can get all parts\n\n```\nmail.attachments: list of all attachments\nmail.body\nmail.date: datetime object in UTC\nmail.defects: defect RFC not compliance\nmail.defects_categories: only defects categories\nmail.delivered_to\nmail.from_\nmail.get_server_ipaddress(trust=\"my_server_mail_trust\")\nmail.headers\nmail.mail: tokenized mail in a object\nmail.message: email.message.Message object\nmail.message_as_string: message as string\nmail.message_id\nmail.received\nmail.subject\nmail.text_plain: only text plain mail parts in a list\nmail.text_html: only text html mail parts in a list\nmail.text_not_managed: all not managed text (check the warning logs to find content subtype)\nmail.to\nmail.to_domains\nmail.timezone: returns the timezone, offset from UTC\nmail.mail_partial: returns only the mains parts of emails\n```\n\nIt's possible to write the attachments on disk with the method:\n\n```\nmail.write_attachments(base_path)\n```\n\n## Usage from command-line\n\nIf you installed mailparser with `pip` or `setup.py` you can use it with command-line.\n\nThese are all swithes:\n\n```\nusage: mailparser [-h] (-f FILE | -s STRING | -k)\n                   [-l {CRITICAL,ERROR,WARNING,INFO,DEBUG,NOTSET}] [-j] [-b]\n                   [-a] [-r] [-t] [-dt] [-m] [-u] [-c] [-d] [-o]\n                   [-i Trust mail server string] [-p] [-z] [-v]\n\nWrapper for email Python Standard Library\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILE, --file FILE  Raw email file (default: None)\n  -s STRING, --string STRING\n                        Raw email string (default: None)\n  -k, --stdin           Enable parsing from stdin (default: False)\n  -l {CRITICAL,ERROR,WARNING,INFO,DEBUG,NOTSET}, --log-level {CRITICAL,ERROR,WARNING,INFO,DEBUG,NOTSET}                                                                                          \n                        Set log level (default: WARNING)\n  -j, --json            Show the JSON of parsed mail (default: False)\n  -b, --body            Print the body of mail (default: False)\n  -a, --attachments     Print the attachments of mail (default: False)\n  -r, --headers         Print the headers of mail (default: False)\n  -t, --to              Print the to of mail (default: False)\n  -dt, --delivered-to   Print the delivered-to of mail (default: False)\n  -m, --from            Print the from of mail (default: False)\n  -u, --subject         Print the subject of mail (default: False)\n  -c, --receiveds       Print all receiveds of mail (default: False)\n  -d, --defects         Print the defects of mail (default: False)\n  -o, --outlook         Analyze Outlook msg (default: False)\n  -i Trust mail server string, --senderip Trust mail server string\n                        Extract a reliable sender IP address heuristically\n                        (default: None)\n  -p, --mail-hash       Print mail fingerprints without headers (default:\n                        False)\n  -z, --attachments-hash\n                        Print attachments with fingerprints (default: False)\n  -sa, --store-attachments\n                        Store attachments on disk (default: False)\n  -ap ATTACHMENTS_PATH, --attachments-path ATTACHMENTS_PATH\n                        Path where store attachments (default: /tmp)\n  -v, --version         show program's version number and exit\n\nIt takes as input a raw mail and generates a parsed object.\n```\n\nExample:\n\n```shell\n$ mailparser -f example_mail -j\n```\n\nThis example will show you the tokenized mail in a JSON pretty format.\n\nFrom [raw mail](https://gist.github.com/fedelemantuano/5dd702004c25a46b2bd60de21e67458e) to \n[parsed mail](https://gist.github.com/fedelemantuano/e958aa2813c898db9d2d09469db8e6f6).\n\n\n## Exceptions\n\nExceptions hierarchy of mail-parser:\n\n```\nMailParserError: Base MailParser Exception\n|\n\\── MailParserOutlookError: Raised with Outlook integration errors\n|\n\\── MailParserEnvironmentError: Raised when the environment is not correct\n|\n\\── MailParserOSError: Raised when there is an OS error\n|\n\\── MailParserReceivedParsingError: Raised when a received header cannot be parsed\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SpamScope/mail-parser",
    "keywords": "mail,email,parser,wrapper",
    "license": "Apache License, Version 2.0",
    "maintainer": "Fedele Mantuano",
    "maintainer_email": "mantuano.fedele@gmail.com",
    "name": "mail-parser",
    "package_url": "https://pypi.org/project/mail-parser/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/mail-parser/",
    "project_urls": {
      "Homepage": "https://github.com/SpamScope/mail-parser"
    },
    "release_url": "https://pypi.org/project/mail-parser/3.14.0/",
    "requires_dist": [
      "simplejson (>=3.17.0)",
      "six (>=1.14.0)",
      "ipaddress (>=1.0.23) ; python_version < \"3.3\""
    ],
    "requires_python": "",
    "summary": "Wrapper for email standard library",
    "version": "3.14.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9535486,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddcaefd9008adeb02841345e129e863b1f7c495679f8e8d21571efa2092aa7dd",
        "md5": "92040d13de2160004fce09a7339122eb",
        "sha256": "08925a64ed5f535051a25cf54b48f7ced918093e85691f4eba08933e3c7d6934"
      },
      "downloads": -1,
      "filename": "mail_parser-3.14.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92040d13de2160004fce09a7339122eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25334,
      "upload_time": "2020-11-24T18:41:47",
      "upload_time_iso_8601": "2020-11-24T18:41:47.080181Z",
      "url": "https://files.pythonhosted.org/packages/dd/ca/efd9008adeb02841345e129e863b1f7c495679f8e8d21571efa2092aa7dd/mail_parser-3.14.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df4a7a2c8821ef20bb656e38dd7875faf6fa4465a6b3ff02ff887108bf0fad89",
        "md5": "170ebe932d66f4cbe70bb2b512aeb380",
        "sha256": "7577b8479e801be7b42fa7a2f6f66bda845c44c3b61ed0002771a82b3e410387"
      },
      "downloads": -1,
      "filename": "mail-parser-3.14.0.tar.gz",
      "has_sig": false,
      "md5_digest": "170ebe932d66f4cbe70bb2b512aeb380",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17402,
      "upload_time": "2020-11-24T18:41:50",
      "upload_time_iso_8601": "2020-11-24T18:41:50.589413Z",
      "url": "https://files.pythonhosted.org/packages/df/4a/7a2c8821ef20bb656e38dd7875faf6fa4465a6b3ff02ff887108bf0fad89/mail-parser-3.14.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}