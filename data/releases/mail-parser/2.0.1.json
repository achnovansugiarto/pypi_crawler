{
  "info": {
    "author": "Fedele Mantuano",
    "author_email": "mantuano.fedele@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "|PyPI version| |Build Status| |Coverage Status| |BCH compliance|\n\nmail-parser\n===========\n\nOverview\n--------\n\nmail-parser is a wrapper for `email`_ Python Standard Library. Itâ€™s the\nkey module of `SpamScope`_.\n\nmail-parser can parse Outlook email format (.msg). To use this feature, you need to install ``libemail-outlook-message-perl`` package. For Debian based systems:\n\n::\n\n    $ apt-get install libemail-outlook-message-perl\n    $ apt-cache show libemail-outlook-message-perl\n\nmail-parser supports Python 3.\n\nDescription\n-----------\n\nmail-parser takes as input a raw mail and generates a parsed object.\nThis object is a tokenized email with some indicator: \n- body - headers - subject - from - to - attachments - message id - date \n- charset mail - sender IP address - receiveds\n\nWe have also two types of indicator: - anomalies: mail without message id or date\n- `defects`_: mail with some not compliance RFC part\n\nDefects\n~~~~~~~\n\nThese defects can be used to evade the antispam filter. An example are\nthe mails with a malformed boundary that can hide a not legitimate\nepilogue (often malware). This library can take these epilogues.\n\nApache 2 Open Source License\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nmail-parser can be downloaded, used, and modified free of charge. It is\navailable under the Apache 2 license.\n\nAuthors\n-------\n\nMain Author\n~~~~~~~~~~~\n\nFedele Mantuano (**Twitter**:\n[@fedelemantuano](https://twitter.com/fedelemantuano))\n\nInstallation\n------------\n\nClone repository\n\n::\n\n    git clone https://github.com/SpamScope/mail-parser.git\n\nand install mail-parser with ``setup.py``:\n\n::\n\n    cd mail-parser\n\n    python setup.py install\n\nor use ``pip``:\n\n::\n\n    pip install mail-parser\n\nUsage in a project\n-------------------\n\nImport ``mailparser`` module:\n\n::\n\n    import mailparser\n\n    mail = mailparser.parse_from_file(f)\n    mail = mailparser.parse_from_string(raw_mail)\n    mail = mailparser.parse_from_bytes(byte_mail)\n\nThen you can get all parts\n\n::\n\n    mail.body\n    mail.headers\n    mail.message_id\n    mail.to_\n    mail.from_\n    mail.subject\n    mail.text_plain_list: only text plain mail parts in a list\n    mail.attachments_list: list of all attachments\n    mail.date_mail\n    mail.parsed_mail_obj: tokenized mail in a object\n    mail.parsed_mail_json: tokenized mail in a JSON\n    mail.defects: defect RFC not compliance\n    mail.defects_category: only defects categories\n    mail.has_defects\n    mail.anomalies\n    mail.has_anomalies\n    mail.get_server_ipaddress(trust=\"my_server_mail_trust\")\n    mail.receiveds\n\n.. _email: https://docs.python.org/2/library/email.message.html\n.. _SpamScope: https://github.com/SpamScope/spamscope\n.. _defects: https://docs.python.org/2/library/email.message.html#email.message.Message.defects\n\nUsage from command-line\n-----------------------\n\nIf you installed mailparser with ``pip`` or ``setup.py`` you can use it with\ncommand-line.\n\nThese are all swithes:\n\n::\n\n    usage: mailparser [-h] (-f FILE | -s STRING) [-j] [-b] [-a] [-r] [-t] [-m]\n                      [-u] [-c] [-d] [-n] [-i Trust mail server string] [-p] [-z] \n                      [-v]\n\n    Wrapper for email Python Standard Library\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -f FILE_, --file FILE_\n                            Raw email file (default: None)\n      -s STRING_, --string STRING_\n                            Raw email string (default: None)\n      -j, --json            Show the JSON of parsed mail (default: False)\n      -b, --body            Print the body of mail (default: False)\n      -a, --attachments     Print the attachments of mail (default: False)\n      -r, --headers         Print the headers of mail (default: False)\n      -t, --to              Print the to of mail (default: False)\n      -m, --from            Print the from of mail (default: False)\n      -u, --subject         Print the subject of mail (default: False)\n      -c, --receiveds       Print all receiveds of mail (default: False)\n      -d, --defects         Print the defects of mail (default: False)\n      -n, --anomalies       Print the anomalies of mail (default: False)\n      -o, --outlook         Analyze Outlook msg (default: False)\n      -i Trust mail server string, --senderip Trust mail server string\n                            Extract a reliable sender IP address heuristically\n                            (default: None)\n      -p, --mail-hash       Print mail fingerprints without headers (default:\n                            False)\n      -z, --attachments-hash\n                            Print attachments with fingerprints (default: False)\n      -v, --version         show program's version number and exit\n\n    It takes as input a raw mail and generates a parsed object.\n\nExample:\n\n.. code:: shell\n\n    $ mailparser -f example_mail -j\n\nThis example will show you the tokenized mail in a JSON pretty format.\n\n\n.. |PyPI version| image:: https://badge.fury.io/py/mail-parser.svg\n   :target: https://badge.fury.io/py/mail-parser\n.. |Build Status| image:: https://travis-ci.org/SpamScope/mail-parser.svg?branch=develop\n   :target: https://travis-ci.org/SpamScope/mail-parser\n.. |Coverage Status| image:: https://coveralls.io/repos/github/SpamScope/mail-parser/badge.svg?branch=develop\n   :target: https://coveralls.io/github/SpamScope/mail-parser?branch=develop\n.. |BCH compliance| image:: https://bettercodehub.com/edge/badge/SpamScope/mail-parser?branch=devel\n   :target: https://bettercodehub.com/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SpamScope/mail-parser",
    "keywords": "mail",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mail-parser",
    "package_url": "https://pypi.org/project/mail-parser/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/mail-parser/",
    "project_urls": {
      "Homepage": "https://github.com/SpamScope/mail-parser"
    },
    "release_url": "https://pypi.org/project/mail-parser/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wrapper for email standard library",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9535486,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be0b36a2eae61b69a979a000708096760e39dccf7d0b1f707521b8808f560a4f",
        "md5": "bf2a751824897ddc1c5958d67da460ca",
        "sha256": "8682b9b1e3b82c997979e4f94d138ccbf61ce735981d1eb4dbeef6a5e38e87ed"
      },
      "downloads": -1,
      "filename": "mail-parser-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bf2a751824897ddc1c5958d67da460ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10125,
      "upload_time": "2017-10-12T22:31:14",
      "upload_time_iso_8601": "2017-10-12T22:31:14.847518Z",
      "url": "https://files.pythonhosted.org/packages/be/0b/36a2eae61b69a979a000708096760e39dccf7d0b1f707521b8808f560a4f/mail-parser-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}