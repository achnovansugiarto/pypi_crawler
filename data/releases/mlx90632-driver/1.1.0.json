{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# mlx90632-driver\n\n## Validation\n\n| Interface      | Win PC   | Linux PC      | Raspberry Pi (linux) | Nvidia Jetson Nano (linux) |\n| -------------- | -------- | ------------- | -------------------- | -------------------------- |\n| EVB90632(usb)  | 1.1.0    | 1.1.0         | 1.1.0                | 1.1.0                      |\n| FTDI(FT2232H)  | 1.1.0    | 1.1.0         | 1.1.0                | 1.1.0                      |\n| I2C-bus(40pin) | N/A      | N/A           | 1.1.0                | 1.1.0                      |\n\n\n# mlx90632-driver \n\n## Intro\n\nThis python driver for MLX90632 aims to facilitate the interfacing on a PC.\n\nCurrently this driver supports 3 type of interfaces:\n- [Ready] EVB90632 on WinPC, LinuxPC, Raspberry Pi ==> https://www.melexis.com/en/product/EVB90632/EVB90632\n- [Ready] Raspberry Pi on built-in hardware I2C bus ==> https://www.raspberrypi.org/.\n- [Ready] FTDI FT2232H on WinPC, LinuxPC, Raspberry Pi ==> https://www.mikroe.com/click-usb-adapter.\n\n## Getting started\n\n### Installation\n\nhttps://pypi.org/project/mlx90632-driver/\n\n```bash\npip install mlx90632-driver\n```\n\n#### Linux additions\n\nOn any linux platform for interfacing the EVB90632 we need to install `hidapi`.\n\n```bash\nsudo apt update\nsudo apt install libhidapi-libusb0\n```\n\n* For EVB90632 interface:\nAdd these udev-rules to the [file](udev_rules/20-melexis-evb.rules):  \n`/etc/udev/rules.d/20-melexis-evb.rules`  \n\n```txt\n# EVB90632\nSUBSYSTEM==\"usb\", ATTR{manufacturer}==\"Melexis\", ATTR{product}==\"EVB90632\", GROUP=\"plugdev\", MODE=\"0666\"\n```\n\n* For FTDI interface:  \nAdd these udev-rules to the [file](udev_rules/21-ftdi.rules):  \n`/etc/udev/rules.d/21-ftdi.rules`  \n\n```txt\n# FTDI rules\nATTR{idVendor}==\"0403\", ATTR{idProduct}==\"6010\", MODE=\"666\", GROUP=\"dialout\"\nATTR{idVendor}==\"0403\", ATTR{idProduct}==\"6014\", MODE=\"666\", GROUP=\"dialout\"\n```\n\nNow reboot to make the new udev rules active.\n\n#### Raspberry Pi & Nvidia Jetson Nano additions\n\nEnable the I2C interface\n`sudo raspi-config`\n\n  - 'enable i2c' in interface; in case you want to connect MLX9064x on the I2C bus of RPi.\n  - optional: 'enable ssh' in interface; now you can login remotely over the network.\n\n\n### Running the driver demo\n\n* Connect the EVB to your PC.  \n* Open a terminal and run following command:  \n\n\n```bash\nmlx90632-dump\n```\n\nThis program takes 1 optional argument.\n\n```bash\nmlx90632-dump <interface> <reading_count>\n```\n\n`<interface>` can be:\n- `auto` (default) search for the first port available with EVB90632 hardware as interface to MLX90632.\n- `I2C-1` on raspberry pi use the I2C hardware; it requires raspi-config to enable i2c hardware.\n- `mlx://evb:90632/1` use first EVB90632 on USB.\n- `mlx://evb:90632/2` use second EVB90632 on USB.\n- `ftdi://ftdi:2232/1` use first FT2232 port on USB.\n\n### Usage\n\nBelow you can find an example on how to read a sample of the MLX90632 senor with I2C address 0x3A. Please look into mlx90632.py for more advanced features.\n\n```python\nimport mlx.mlx90640 as mlx\n\ndev = mlx.Mlx9064x('COM4', i2c_addr=0x33, frame_rate=8.0) # establish communication between EVB90640 and\n                                                          # PC, the I2C address of the MLX90640 sensor is\n                                                          # 0x33 and change the frame rate to 8Hz\ndev.init()                      # read EEPROM and pre-compute calibration parameters.\nframe = dev.read_frame()        # Read a frame from MLX90640\n                                # In case EVB90640 hw is used, the EVB will buffer up to 4 frames, so possibly you get a cached frame.\nf = dev.do_compensation(frame)  # calculates the temperatures for each pixel\n```\n\n## Issues and new Features\n\nIn case you have any problems with usage of the plugin, please open an issue on GitHub.  \nProvide as many valid information as possible, as this will help us to resolve Issues faster.  \nWe would also like to hear your suggestions about new features which would help your Continuous Integration run better.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/melexis-fir/mlx90632-driver-py/archive/V1.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/melexis-fir/mlx90632-driver-py",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlx90632-driver",
    "package_url": "https://pypi.org/project/mlx90632-driver/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlx90632-driver/",
    "project_urls": {
      "Download": "https://github.com/melexis-fir/mlx90632-driver-py/archive/V1.1.0.tar.gz",
      "Homepage": "https://github.com/melexis-fir/mlx90632-driver-py"
    },
    "release_url": "https://pypi.org/project/mlx90632-driver/1.1.0/",
    "requires_dist": [
      "bincopy (>=17.8.0)",
      "pyftdi (>=0.51.2)",
      "ctypes-callable (>=1.0.0)",
      "Jetson.GPIO (>=2.0.8) ; platform_machine == \"aarch64\"",
      "smbus2 (>=0.3.0) ; platform_machine == \"aarch64\"",
      "RPi.GPIO (>=0.7.0) ; platform_machine == \"armv7l\"",
      "smbus2 (>=0.3.0) ; platform_machine == \"armv7l\"",
      "hid (>=1.0.4) ; platform_system == \"Linux\"",
      "pywinusb (>=0.4.2) ; platform_system == \"Windows\""
    ],
    "requires_python": "",
    "summary": "Python library for MLX90632",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8524794,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e40cdb9715867ca40fabb2857d10ecce79104f3f20bc6d6c24cefd55caedb7ff",
        "md5": "edea5c1fb0374ac06658cff5a9c52866",
        "sha256": "74155ed684648782ddae19d698aa2d99d281dcdbe96f19df35b8cd66dcdf59e8"
      },
      "downloads": -1,
      "filename": "mlx90632_driver-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "edea5c1fb0374ac06658cff5a9c52866",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21373,
      "upload_time": "2020-09-02T21:57:13",
      "upload_time_iso_8601": "2020-09-02T21:57:13.661244Z",
      "url": "https://files.pythonhosted.org/packages/e4/0c/db9715867ca40fabb2857d10ecce79104f3f20bc6d6c24cefd55caedb7ff/mlx90632_driver-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d4f099ace6309c5b5b7d0ff4fd2a41347f7c857c4e1a68fff6e54bbc2a20bd4",
        "md5": "747f4e7f90d7538280b0910dd185f054",
        "sha256": "14db06f7045edd3e71614bfd33692a8409e7fbf86963c8ade86fe82f85fd787c"
      },
      "downloads": -1,
      "filename": "mlx90632-driver-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "747f4e7f90d7538280b0910dd185f054",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17975,
      "upload_time": "2020-09-02T21:57:14",
      "upload_time_iso_8601": "2020-09-02T21:57:14.778393Z",
      "url": "https://files.pythonhosted.org/packages/5d/4f/099ace6309c5b5b7d0ff4fd2a41347f7c857c4e1a68fff6e54bbc2a20bd4/mlx90632-driver-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}