{
  "info": {
    "author": "Mapbox",
    "author_email": "sam@mapbox.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# tilesets-cli\n\n[![Build Status](https://travis-ci.com/mapbox/tilesets-cli.svg?token=wqR3RcWUEprcQ1ttsgiP&branch=master)](https://travis-ci.com/mapbox/tilesets-cli) [![codecov](https://codecov.io/gh/mapbox/tilesets-cli/branch/master/graph/badge.svg?token=YBTKyc2o3j)](https://codecov.io/gh/mapbox/tilesets-cli)\n\nCLI for interacting with and preparing data for the [Mapbox Tiling Service](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\nðŸ“š If you have a question that isn't answered here, please refer to the complete [Mapbox Tiling Service documentation](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\n\n# Contributing\n\n[CONTRIBUTING.md](/CONTRIBUTING.md) includes information about release processes & running tests. :raised_hands:\n\n# Installation\n`pip install mapbox-tilesets`\n\n#### Requirements\n\n- Python >= 3.6 (can be installed via virtualenv)\n- Recommended: [virtualenv](https://virtualenv.pypa.io/) / [virtualenvwrapper](https://virtualenvwrapper.readthedocs.io/en/latest/)\n\n#### Mapbox Access Tokens\n\nIn order to use the tilesets endpoints, you need a Mapbox Access Token with `tilesets:write`, `tilesets:read`, and `tilesets:list` scopes. This is a secret token, so do not share it publicly!\n\nYou can either pass the Mapbox access token to each command with the `--token` flag or export it as an environment variable. Acceptable values are:\n\n* `MAPBOX_ACCESS_TOKEN`\n* `MapboxAccessToken`\n\nSet the environment variable with `export`\n```\nexport MAPBOX_ACCESS_TOKEN=my.token\n```\n\n# Commands\n\n* Tileset Sources\n  * [`upload-source`](#upload-source)\n  * *deprecated* [`add-source`](#deprecated-add-source)\n  * [`validate-source`](#validate-source)\n  * [`view-source`](#view-source)\n  * [`list-sources`](#list-sources)\n  * [`delete-source`](#delete-source)\n  * [`estimate-area`](#estimate-area)\n* Recipes\n  * [`view-recipe`](#view-recipe)\n  * [`validate-recipe`](#validate-recipe)\n  * [`update-recipe`](#update-recipe)\n* Tilesets\n  * [`create`](#create)\n  * [`publish`](#publish)\n  * [`update`](#update)\n  * [`delete`](#delete)\n  * [`status`](#status)\n  * [`job`](#job)\n  * [`jobs`](#jobs)\n  * [`list`](#list)\n  * [`tilejson`](#tilejson)\n\n### upload-source\n\n```shell\ntilesets upload-source <username> <source_id> <file>\n```\n\nUploads GeoJSON files to a source for tiling. Accepts line-delimited GeoJSON or GeoJSON feature collections as files or via `stdin`. The CLI automatically converts data to line-delimited GeoJSON prior to uploading. Can be used to add data to a source or to replace all of the data in a source with the `--replace` flag.\n\nPlease note that if your source data is a FeatureCollection, `tilesets` must read it all into memory to split it up into separate features before uploading it to the Tilesets API. You are strongly encouraged to provide your data in line-delimited GeoJSON format instead, especially if it is large.\n\nFlags:\n\n* `--no-validation` [optional]: do not validate source data locally before uploading\n* `--replace` [optional]: delete all existing source data and replace with data from the file\n* `--quiet` [optional]: do not display an upload progress bar\n\nUsage\n\n```shell\n# single file\ntilesets upload-source <username> <source_id> ./file.geojson\n\n# multiple files\ntilesets upload-source <username> <source_id> file-1.geojson file-4.geojson\n\n# directory of files\n# Reading from a directory will not distinguish between GeoJSON files and non GeoJSON files. All source files will be run through our validator unless you pass the `--no-validation` flag.\ntilesets upload-source <username> <source_id> ./path/to/multiple/files/\n```\n\n### *deprecated* add-source\n\n*WARNING: add-source is maintained for legacy purposes. Please use the `upload-source` command instead.*\n\n```shell\ntilesets add-source <username> <source_id> <file>\n```\n\nAdds GeoJSON files to a source for tiling. Accepts line-delimited GeoJSON or GeoJSON feature collections as files or via `stdin`. The CLI automatically converts data to line-delimited GeoJSON prior to uploading.\n\nPlease note that if your source data is a FeatureCollection, `tilesets` must read it all into memory to split it up into separate features before uploading it to the Tilesets API. You are strongly encouraged to provide your data in line-delimited GeoJSON format instead, especially if it is large.\n\nFlags:\n\n* `--no-validation` [optional]: do not validate source data locally before uploading\n* `--quiet` [optional]: do not display an upload progress bar\n\nUsage\n\n```shell\n# single file\ntilesets add-source <username> <source_id> ./file.geojson\n\n# multiple files\ntilesets add-source <username> <source_id> file-1.geojson file-4.geojson\n\n# directory of files\n# Reading from a directory will not distinguish between GeoJSON files and non GeoJSON files. All source files will be run through our validator unless you pass the `--no-validation` flag.\ntilesets add-source <username> <source_id> ./path/to/multiple/files/\n```\n\n### validate-source\n\n```shell\ntilesets validate-source <path>\n```\n\nValidates a line delimited GeoJSON source file locally. Example error output:\n\n```JSON\nInvalid line delimited geojson.\n```\n\n### view-source\n\n```\ntilesets view-source <username> <source_id>\n```\n\nGet information for a tileset source, such as number of files, the size in bytes, and the ID in mapbox:// protocol format.\n\n### list-sources\n\n```\ntilesets list-sources <username>\n```\n\nList all tileset sources from a particular account. Response is an array of sources.\n\n### delete-source\n\n```\ntilesets delete-source <username> <source_id>\n```\n\nPermanently delete a tileset source and all of its files. This is not a recoverable action!\n\nFlags:\n\n* `-f` or `--force`: Do not ask for confirmation before deleting\n\nUsage\n\n```shell\n# to delete mapbox://tileset-source/user/source_id\ntilesets delete-source user source_id\n```\n\n### estimate-area \n\n```shell\ntilesets estimate-area <features> -p/--precision <precision>\n```\n\nEstimates tiled area (km<sup>2</sup>) of features with a specified precision. Accepts line-delimited GeoJSON or GeoJSON feature collections as files or via `stdin` or a list of string-encoded coordinate pairs of the form \"[lng, lat]\", or \"lng, lat\", or \"lng lat\". Precision must be 10m, 1m, 30cm or 1cm.\n\nFlags:\n\n* `-p` or `--precision` [required]: precision level\n* `--no-validation` [optional]: do not validate source data locally before area calculation\n* `--force-1cm` [optional]: the --force-1cm flag must be present to enable 1cm precision area calculation and may take longer for large feature inputs or data with global extents. 1cm precision for tileset processing is only available upon request after contacting [Mapbox support](https://support.mapbox.com/hc/en-us/requests/new?ticket_form_id=360000291231)\n\nUsage\n\n```shell\n\n# GeoJSON feature files\ntilesets estimate-area ./file1.geojson ./file2.geojson -p <precision>\n\n# GeoJSON features in stdin redirection 1\ntilesets estimate-area -p <precision> < ./file.geojson\n\n# GeoJSON features in stdin redirection 2\ncat ./file.geojson | tilesets estimate-area -p <precision>\n\n# GeoJSON features in stdin stream \ntilesets estimate-area --precision <precision>\n<features>  \n\n# coordinate pairs (must be in quotes)\ntilesets estimate-area \"[lng,lat]\" \"[lng,lat]\" --precision <precision>\n```\n\n### view-recipe\n\nPrints the Recipe JSON to stdout.\n\n```shell\ntilesets view-recipe <tileset_id>\n```\n\n### validate-recipe\n\nValidates a Recipe JSON document.\n\n```shell\ntilesets validate-recipe /path/to/recipe.json\n```\n\nExample `recipe.json`:\n```\n{\n  \"version\": 1,\n  \"layers\": {\n    \"trees\": {\n      \"source\": \"mapbox://tileset-source/{username}/trees-data\",\n      \"minzoom\": 4,\n      \"maxzoom\": 8\n    }\n  }\n}\n```\nSee more details about the recipe spec [here](https://docs.mapbox.com/help/troubleshooting/tileset-recipe-reference).\nSee recipe examples [here](https://docs.mapbox.com/help/troubleshooting/tileset-recipe-examples).\n\nExample error output:\n\n```JSON\n{\n  \"errors\": [\n    \"Unknown top-level key \\\"potato\\\".\"\n  ],\n  \"valid\": false\n}\n```\n\n### update-recipe\n\nUpdate the Recipe JSON for a tileset. Performs a server-side validation of the new document.\n\nThis command only supports tilesets created with the [Mapbox Tiling Service](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\n```shell\ntilesets update-recipe <tileset_id> /path/to/recipe.json\n```\n\n### create\n\nCreates a brand new, empty tileset with a recipe passed in from your local filesystem.\n\n```shell\ntilesets create <tileset_id> --recipe /path/to/recipe.json --name \"My neat tileset\"\n```\nThe `tileset_id` is in the form of `username.handle` - for example \"mapbox.neat-tileset\". The handle may only include \"-\" or \"\\_\" special characters and must be 32 characters or fewer.\n\n\nFlags:\n\n* `--recipe` or `-r` [required]: path to your Recipe JSON document\n* `--name` or `-n` [required]: human-readable name of your tileset. (If your tileset_id is user.my_amazing_tileset, you might want your `name` field to be \"My Amazing Tileset\".)\n* `--description` or `-d`: description of your tileset\n* `--privacy` or `-p`: Set the privacy of the tileset. Allowed values are `private` and `public`. By default, new tilesets are private.\n* `--attribution` or `-a` [optional]: set tileset attribution. Must be a JSON string, specifically an array of attribution objects, each with `text` and `link` keys. Limited to three attribution objects, 80 characters maximum combined across all text values, and 1000 characters maximum combined across all link values.\n\n### publish\n\nQueues a tiling _job_ using the recipe provided. Use to publish a new tileset or update an existing one. Returns a job ID for progress tracking.\n\nThis command only supports tilesets created with the [Mapbox Tiling Service](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\n```\ntilesets publish <tileset_id>\n```\n\n### update\n\nUpdate a tileset's information.\n\n```\ntilesets update <tileset_id>\n  --name \"Hello World\"\n  --description \"Say hi to the world\"\n  --privacy=private\n  --attribution='[{\"text\":\"Â© Hola Mundo\",\"link\":\"http://example.com\"}]'\n```\n\nFlags:\n\n* `--name` or `-n` [optional]: update tileset name\n* `--description` or `-d` [optional]: update tileset description\n* `--privacy` or `-p` [optional]: set your tileset to `public` or `private`\n* `--attribution` or `-a` [optional]: set tileset attribution. Must be a JSON string, specifically an array of attribution objects, each with `text` and `link` keys. Limited to three attribution objects, 80 characters maximum combined across all text values, and 1000 characters maximum combined across all link values.\n\n### delete\n\nDelete a tileset. By default will prompt you for confirmation before deleting.\n\n```\ntilesets delete <tileset_id>\n```\n\nFlags:\n\n* `--force` or `-f` to bypass confirmation prompt.\n\n### status\n\nView the status of the most recent job for a tileset. To get more detailed information about a tileset's jobs, including the timestamps of failed and successful jobs, use the `tilesets jobs <tileset_id>` command.\n\n```\ntilesets status <tileset_id>\n```\n\n### job\n\nRetrieve a single job for a tileset.\n\nThis command only supports tilesets created with the [Mapbox Tiling Service](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\n```shell\ntilesets job <tileset_id> <job_id>\n```\n\n**What is a job?** Each time you generate or regenerate your output tileset via the `publish` command (whether that's a new recipe or new source data), a single job is created that processes your data. A tileset can have many jobs, each with a unique identifier. When you publish a tileset, the HTTP response includes the unique job identifier that corresponds to the most recent job. To read more about HTTP design, see this [documentation](https://docs.mapbox.com/api/maps/#tilesets).\n\n### jobs\n\nCheck all jobs associated with a tileset. You can filter jobs by a particular `stage` - processing, queued, success, or failed.\n\nThis command only supports tilesets created with the [Mapbox Tiling Service](https://docs.mapbox.com/mapbox-tiling-service/overview/).\n\n```shell\ntilesets jobs <tileset_id> --stage=processing\n```\n\nFlags:\n\n* `--stage` [optional]: filter by the stage of jobs\n* `--limit [1-500]` [optional]: the maximum number of results to return, from 1 to 500. The default is 100.\n\n### list\n\nList all tilesets for an account. Just lists tileset IDs by default. Use the `--verbose` option for more information.\n\n```shell\ntilesets list <username>\n```\n\nFlags:\n\n* `--type [vector|raster]` [optional]: filter results by tileset type\n* `--visibility [public|private]` [optional]: filter results by visibility\n* `--sortby [created|modified]` [optional]: sort results by their `created` or `modified` timestamps\n* `--limit [1-500]` [optional]: the maximum number of results to return, from 1 to 500. The default is 100.\n* `--verbose` [optional]: will list out the entire response object from the API\n\n### tilejson\n\nView the TileJSON for a tileset. `tileset_id` can be a comma-separated list of up to 15 tilesets for composited requests.\n\nA TileJSON document, according to the [specification](https://github.com/mapbox/tilejson-spec), attempts to create a standard for representing metadata about multiple types of web-based layers, to aid clients in configuration and browsing.\n\n```\ntilesets tilejson <tileset_id>\n```\n\nFlags:\n\n* `--secure`: By default, resource URLs in the retrieved TileJSON (such as in the \"tiles\" array) will use the HTTP scheme. Include this query parameter in your request to receive HTTPS resource URLs instead.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mapbox/tilesets-cli",
    "keywords": "",
    "license": "BSD-2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapbox-tilesets",
    "package_url": "https://pypi.org/project/mapbox-tilesets/",
    "platform": "",
    "project_url": "https://pypi.org/project/mapbox-tilesets/",
    "project_urls": {
      "Homepage": "https://github.com/mapbox/tilesets-cli"
    },
    "release_url": "https://pypi.org/project/mapbox-tilesets/1.7.2/",
    "requires_dist": [
      "boto3",
      "click (~=7.1.2)",
      "cligj",
      "requests",
      "requests-toolbelt",
      "jsonschema (~=3.0)",
      "jsonseq (~=1.0)",
      "mercantile (~=1.1.6)",
      "supermercado (~=0.2.0)",
      "codecov ; extra == 'test'",
      "pytest (==4.6.11) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pre-commit ; extra == 'test'",
      "black (==20.8b1) ; extra == 'test'",
      "pep8 ; extra == 'test'",
      "toml (==0.10.2) ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "CLI for interacting with and preparing data for the Tilesets API",
    "version": "1.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14927730,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8f6d5f58ff582838c9473bd698006009fcc395a712820c8b0e7d0729690a40f",
        "md5": "481597bbe912d13a04da7e82554f1a92",
        "sha256": "1e0436660ebb173813decf83cb3bd67b7765f08fafa9d3e0cfd20fec5be19445"
      },
      "downloads": -1,
      "filename": "mapbox_tilesets-1.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "481597bbe912d13a04da7e82554f1a92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14718,
      "upload_time": "2021-10-01T18:45:53",
      "upload_time_iso_8601": "2021-10-01T18:45:53.400884Z",
      "url": "https://files.pythonhosted.org/packages/e8/f6/d5f58ff582838c9473bd698006009fcc395a712820c8b0e7d0729690a40f/mapbox_tilesets-1.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfd58de79da4e448496cbae46a165398e6e432f6b51955f5b8a63585804630fc",
        "md5": "4393bc387be7eaad6408cfd2eb572793",
        "sha256": "eae10da84010d58e28bc2d5c6d2ae65a6743ecded05b735bb5fa8ee0d94cf3a0"
      },
      "downloads": -1,
      "filename": "mapbox-tilesets-1.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4393bc387be7eaad6408cfd2eb572793",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13171,
      "upload_time": "2021-10-01T18:45:54",
      "upload_time_iso_8601": "2021-10-01T18:45:54.881162Z",
      "url": "https://files.pythonhosted.org/packages/cf/d5/8de79da4e448496cbae46a165398e6e432f6b51955f5b8a63585804630fc/mapbox-tilesets-1.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}