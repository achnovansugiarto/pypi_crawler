{
  "info": {
    "author": "Tom Nijhof",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: Microsoft",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "luxconnector\n-----\n\nThis is a python wrapper for the Lux Client windows solution.\nThe package will only work on Windows.\n\n# Installation\nTo install this package follow the these steps:\n\n## Step 1: Drivers\nMake sure you have or had a [CytoSmart application installed](http://download.cytosmart.com/). \nRecommend is the cell counter given it do not restart itself after closing.\nThis is needed to have all the correct drivers installed.\nIt doesn't matter if the app is uninstalled afterwards.\n\n## Step 2: pip install\n```\npip install luxconnector\n```\n\n# Usage\n\n## Initialization\n\nMake sure at least one lux is physically connected to your computer via a USB3 port.\nThe luxconnector is an object that maintains the connection with the Lux.\nTo create the object use the following code:\n\n```\nfrom luxconnector import LuxConnector\nconnector = LuxConnector(number_of_devices=2)\n```\n\nNOTE: Make sure number_of_devices is at least the number of devices you have connected.\nIf not the luxconnector will look for the missing devices forever.\n\n## Getting serial numbers\n\nEach physical device has a serial number.\nThis number is needed to send commands to a specific device.\n\n```\nserial_numbers = connector.get_all_serial_numbers()\n```\n\n## Getting a single image\nWhen you want a single image taken at this moment use get_image.\nThis will return the image as a [`pillow image`](https://pillow.readthedocs.io/en/stable/reference/Image.html).\nYou need to give the serial number of the device you want to target\n\n```\nimg = connector.get_image(serial_number)\n```\n\n## Changing the focus\nThis function will change the focus for the luxconnector object.\nEvery image taken after this function will have the new focus.\n\nThe focus is in the range 0 until 1. (0.0 and 1.0 are valid entries)\n\nYou need to give the serial number of the device you want to target\n\n```\nconnector.set_focus(serial_number, 0.5)\nimg1 = connector.get_image(serial_number) # Image with focus of 0.5\nconnector.set_focus(serial_number, 0.7)\nimg2 = connector.get_image(serial_number) # Image with focus of 0.7\nimg3 = connector.get_image(serial_number) # Image with focus of 0.7\n```\n## Getting the temperature\nThis function returns the temperature in celsius of the device.\n\nYou need to give the serial number of the device you want to target\n\n```\ntemperature = connector.get_temperature(serial_number)\n```\n\n## Getting a z-stack\nThis function will return a list of [`pillow images`](https://pillow.readthedocs.io/en/stable/reference/Image.html).\nEach image will be at a different focus level.\n\nThis code will create a z-stack of 6 images.\nThe focuses of these images will be [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n\nYou need to give the serial number of the device you want to target\n\n```\nlist_of_imgs = connector.get_z_stack(serial_number, num_img = 6, start_focus = 0.5, stop_focus = 1)\n```\n\n## Changing zoom modes\nThere are 2 zoom modes: \"IN\" and \"OUT\".\nWhile zoomed in the resolution is higher but the ROI is smaller, zoomed out has a higher ROI but a lower resolution.\n\nChanging this will change it for every image or z-stack taken afterwards.\n\nYou need to give the serial number of the device you want to target\n\n```\nconnector.set_zoom(serial_number, \"IN\")\nimg1 = connector.get_image(serial_number) # Image is zoomed in\nconnector.set_zoom(serial_number, \"OUT\")\nimg2 = connector.get_image(serial_number) # Image is zoomed out\n```\n\n## Live view\nThe live view of the Lux is hosted at http://localhost:3333/luxservice/live.\nThis image can only been seen if the live view is turned on (by default the live view is turned on).\n\nYou need to give the serial number of the device you want to target\n\n```\nconnector.set_liveview(serial_number, True) # in the browser you can see the image being updated\nconnector.set_liveview(serial_number, False) # Led of Lux turns off till you take a picture\n```\n\n# Developers\n\nDevelopers of the luxconnector please look at the [`developers readme`](README_DEV.md)\n\n# Credits\n\n- Tom Nijhof\n- Kyap\n- Nora\n\n\nHistory\n-------\n\n1.0.1 (2021-14-01)\n------------------\n- Added support for LUX3 FL\n\n1.0.0 (2020-09-15)\n------------------\n- Added multi lux support\n- Changed output from numpy array to pillow\n- Require serial number with function to get information\n- Add get_temperature\n\n0.1.2 (2020-06-30)\n------------------\n- Rename failing to pinging in print statement\n\n0.1.1 (2020-06-11)\n------------------\n- Update documentation\n- Make setup.py fit for PyPI\n\n0.1.0 (2020-05-20)\n------------------\n- Update lux server to latest version\n\n0.0.3 (2020-03-30)\n------------------\n- bugfix: files were not copied into package on linux\n\n0.0.2 (2020-03-24)\n------------------\n- Bugfix: stop waiting for response after sending a message\n\n0.0.1 (2020-03-16)\n------------------\n\n- Add function: Copy the luxconnector \n- Add function: focus change option\n- Add function: z-stack\n- Bugfix: add lux app to manifest\n\n0.0.0 (2020-03-13)\n------------------\n\nCopied basic package a start of luxconnector\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cytosmart-bv/luxconnector",
    "keywords": "luxconnector",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "luxconnector",
    "package_url": "https://pypi.org/project/luxconnector/",
    "platform": "",
    "project_url": "https://pypi.org/project/luxconnector/",
    "project_urls": {
      "Homepage": "https://github.com/cytosmart-bv/luxconnector"
    },
    "release_url": "https://pypi.org/project/luxconnector/1.0.1/",
    "requires_dist": [
      "pillow (<8,>=6.2.2)",
      "requests (<3,>=2.24.0)",
      "websocket (<0.3,>=0.2.1)",
      "websocket-client (<0.58,>=0.57.0)"
    ],
    "requires_python": "",
    "summary": "This is a python wrapper around the Lux Client windows solution",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14574684,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e641ca2c30620a9091bd4c3d0ca31293519e22ddf3e9ca96c3d3071bad02e80a",
        "md5": "80e384afcbf0cccba3ba6ac44f36437a",
        "sha256": "772181a35c7344902370e39e9163860bd7b0b007a4b4ff10071444085a0da0e0"
      },
      "downloads": -1,
      "filename": "luxconnector-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80e384afcbf0cccba3ba6ac44f36437a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 19136641,
      "upload_time": "2021-01-18T12:41:37",
      "upload_time_iso_8601": "2021-01-18T12:41:37.056691Z",
      "url": "https://files.pythonhosted.org/packages/e6/41/ca2c30620a9091bd4c3d0ca31293519e22ddf3e9ca96c3d3071bad02e80a/luxconnector-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "744fc2accaeb7c4dd1431ecbd5a01ce996db2e103d20733086ba4c7ce37b0f1e",
        "md5": "148637e192210751553cc919599a2a19",
        "sha256": "64aa73fc772a7063833ee9108dec718c7d8bbd549118e9e20a4193bb310400ca"
      },
      "downloads": -1,
      "filename": "luxconnector-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "148637e192210751553cc919599a2a19",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18261928,
      "upload_time": "2021-01-18T12:41:41",
      "upload_time_iso_8601": "2021-01-18T12:41:41.451133Z",
      "url": "https://files.pythonhosted.org/packages/74/4f/c2accaeb7c4dd1431ecbd5a01ce996db2e103d20733086ba4c7ce37b0f1e/luxconnector-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}