{
  "info": {
    "author": "Dmitriy Vlasov",
    "author_email": "scailer@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "MicroAgent\n==========\n\n.. image:: https://img.shields.io/pypi/v/microagent.svg\n   :target: https://pypi.python.org/pypi/microagent\n\n.. image:: https://img.shields.io/pypi/pyversions/microagent.svg\n  :target: https://pypi.python.org/pypi/microagent\n\n.. image:: https://img.shields.io/pypi/l/microagent.svg\n  :target: https://pypi.python.org/pypi/microagent\n\n.. image:: https://img.shields.io/pypi/status/microagent.svg\n  :target: https://pypi.python.org/pypi/microagent\n\n.. image:: https://img.shields.io/pypi/dd/microagent.svg\n  :target: https://pypi.python.org/pypi/microagent\n\n.. image:: https://codecov.io/gh/scailer/microagent/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/scailer/microagent\n\n.. image:: https://travis-ci.com/scailer/microagent.svg?branch=master\n  :target: https://travis-ci.con/scailer/microagent\n\n.. image:: https://readthedocs.org/projects/microagent/badge/?version=latest&style=flat\n  :target: https://microagent.readthedocs.io/\n\n\nThe goal of this project is to facilitate the creation of **microservices**\ninteracting via a **signal bus** and/or **queue broker**.\n\nThe philosophy of this project is to present a microservice as a software agent\nthat directly interacts only with queues and the event bus, and not with other microservices.\n\nTool is intended for developing:\n\n* distributed apps with **event-driven** architecture\n* distributed apps with **data-driven** architecture\n* multi-processors apps \n\n\nTool provide features:\n\n* running a **periodical tasks** (interval or as CRON)\n* specification of signals (events), their sending and receiving via the bus (aioredis_)\n* description of queues, sending and receiving messages via the queue broker (aioamqp_, kafka_, aioredis_)\n* limited **RPC** via signal bus\n* launching sub-services (in the same process)\n* launching a group of microagents (each in a separate process)\n* mocks for bus and broker\n\n\nSee MicroAgent documentation_.\n\n\n.. code-block:: python\n\n    class Agent(MicroAgent):\n\n        @on('pre_start')\n        async def setup(self):\n            pass  # init connections to DB, REDIS, SMTP and other services\n\n        @periodic(period=5)\n        async def refresh_cache(self):\n            pass  # do something periodicly\n\n        @cron('0 */4 * * *')\n        async def send_report(self):\n            pass  # do something by schedule\n\n        # subscribe to signals (events)\n        @receiver(signals.user_updated, signals.user_deleted)\n        async def send_notification(self, **kwargs):\n            # send signal (event) to bus\n            await self.bus.check_something.send(sender='agent', **kwargs)\n\n        # message consumer from queue\n        @consumer(queues.mailer)\n        async def send_emails(self, **kwargs):\n            # send message to queue\n            await self.broker.statistic_collector.send(kwargs)\n\n\n    async def main():\n        bus = AIORedisSignalBus('redis://localhost/7')\n        broker = AIORedisBroker('redis://localhost/7')\n\n        # usage bus and broker separate from agent\n        await bus.started.send('user_agent')\n        await broker.mailer(data)\n\n        agent = Agent(bus=bus, broker=broker)\n        await agent.start()\n\nInstalling\n----------\n\nWith aioredis_ backend provide signal bus and list-based queues::\n\n    pip install 'microagent[aioredis]'\n\nWith aioamqp_ backend provide queues over AMQP (RabbitMQ)::\n\n    pip install 'microagent[amqp]'\n\nWith kafka_ backend provide queues over Kafka (experemental)::\n\n    pip install 'microagent[kafka]'\n\n\n.. _aioredis: https://pypi.org/project/aioredis/\n.. _aioamqp: https://pypi.org/project/aioamqp/\n.. _kafka: https://pypi.org/project/aiokafka/\n.. _documentation: https://microagent.readthedocs.io/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scailer/microagent",
    "keywords": "async,pubsub,queue,agent,periodic,cron",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microagent",
    "package_url": "https://pypi.org/project/microagent/",
    "platform": "",
    "project_url": "https://pypi.org/project/microagent/",
    "project_urls": {
      "Homepage": "https://github.com/scailer/microagent"
    },
    "release_url": "https://pypi.org/project/microagent/1.5.1/",
    "requires_dist": [
      "aioredis (==2.0) ; extra == 'aioredis'",
      "aioamqp (==0.14) ; extra == 'amqp'",
      "aiokafka (==0.7) ; extra == 'kafka'"
    ],
    "requires_python": "",
    "summary": "Tool for agent ecosystem",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13968323,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce97715aca313d9b72605cd3a48b0bb4ec8b2799a69f47842b85eddf34ce1b55",
        "md5": "80ec82bcd75d3e1c40cca49e267ebcb1",
        "sha256": "effba2252e40cf58ccd1a57a1ce50c0d63449443d214f7018c07d7e72ccc92da"
      },
      "downloads": -1,
      "filename": "microagent-1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80ec82bcd75d3e1c40cca49e267ebcb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 31879,
      "upload_time": "2022-01-22T15:44:10",
      "upload_time_iso_8601": "2022-01-22T15:44:10.808324Z",
      "url": "https://files.pythonhosted.org/packages/ce/97/715aca313d9b72605cd3a48b0bb4ec8b2799a69f47842b85eddf34ce1b55/microagent-1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d44fabd879aa749a94b40eee621484a7b01576f9ae32dd2e74b9deb45f3685cb",
        "md5": "0c3e7069ed353c3392a5d7ba0e025183",
        "sha256": "1f2afbd4dbcebe49c8d497de1a5f5204fbeedff63aeb9fb7f40f40aa266d4c11"
      },
      "downloads": -1,
      "filename": "microagent-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0c3e7069ed353c3392a5d7ba0e025183",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25818,
      "upload_time": "2022-01-22T15:44:12",
      "upload_time_iso_8601": "2022-01-22T15:44:12.719431Z",
      "url": "https://files.pythonhosted.org/packages/d4/4f/abd879aa749a94b40eee621484a7b01576f9ae32dd2e74b9deb45f3685cb/microagent-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}