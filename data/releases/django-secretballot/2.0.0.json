{
  "info": {
    "author": "James Turk",
    "author_email": "dev@jamesturk.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "django-secretballot\n===================\n\n.. image:: https://img.shields.io/pypi/v/django-secretballot.svg\n    :target: https://pypi.python.org/pypi/django-secretballot/\n\n.. image:: https://img.shields.io/pypi/dm/django-secretballot.svg\n    :target: https://pypi.python.org/pypi/django-secretballot/\n\n.. image:: https://img.shields.io/github/license/bashu/django-secretballot.svg\n    :target: https://pypi.python.org/pypi/django-secretballot/\n\n.. image:: https://img.shields.io/travis/bashu/django-secretballot.svg\n    :target: https://travis-ci.com/github/bashu/django-secretballot/\n\nDjango voting application that allows voting without a logged in user.\n\nProvides abstract base model for types that the user wishes to allow voting on as well as related utilities including generic views to ease the addition of 'anonymous' voting to a Django project.\n\nMaintained by `Basil Shubin <https://github.com/bashu/>`_, and some great\n`contributors <https://github.com/bashu/django-secretballot/contributors>`_.\n\nInstallation\n============\n\nFirst install the module, preferably in a virtual environment. It can be installed from PyPI:\n\n.. code-block:: bash\n\n    pip install django-secretballot\n\nSetup\n=====\n\nFirst of all, you must add this project to your list of ``INSTALLED_APPS`` in\n``settings.py`` :\n\n.. code-block:: python\n  \n    INSTALLED_APPS += [\n        \"secretballot\",\n    ]\n\nThere is only one mandatory configuration option you need to set in your ``settings.py``:\n\n.. code-block:: python\n\n    # In order to attach the voting helpers to a particular model it is enough\n    # to list them here...\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {},\n    }\n\nRun ``./manage.py migrate``. This creates the tables in your database\nthat are necessary for operation.\n\nPlease see ``example`` application. This application is used to manually\ntest the functionalities of this package. This also serves as a good\nexample.\n\nYou need Django 1.8 or above to run that. It might run on older\nversions but that is not tested.\n\nUsing voting-enabled models\n===========================\n\nOnce a model is voting-enabled a number of special fields are available on all instances:\n\nFields\n------\n\nVotable objects have the following fields:\n\n``votes``\n*********\n\nManager to of all ``Vote`` objects related to the current model (typically doesn't need to be accessed directly). Can be renamed by passing ``votes_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n    \n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"votes_name\": \"vs\",\n        },\n    }\n    \n``total_upvotes``\n*****************\n\nTotal number of +1 votes. Can be renamed by passing ``upvotes_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"upvotes_name\": \"total_upvs\",\n        },\n    }\n\n``total_downvotes``\n*******************\n\nTotal number of -1 votes. Can be renamed by passing ``downvotes_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"downvotes_name\": \"total_downvs\",\n        },\n    }\n\n``vote_total``\n**************\n    \nShortcut accessor for (``total_upvotes`` minus ``total_downvotes``). Can be renamed by passing ``total_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"total_name\": \"v_total\",\n        },\n    }\n\n``_secretballot_enabled``\n*************************\n\nBoolean indicating that ``secretballot`` is enabled (can be tested for with hasattr). Cannot be renamed, exists for a reliable check that secretballot is available even if all other fields were renamed.\n\nMethods\n-------\n\nVotable objects have the following custom methods:\n\n``add_vote``\n************\n\nFunction that takes a ``token`` and a vote (+1 or -1) and adds or updates the vote for said token. Can be renamed by passing ``add_vote_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"add_vote_name\": \"add_v\",\n        },\n    }\n\n``remove_vote``\n***************\n\nFunction that takes a ``token`` and removes the vote (if present) for said token. Can be renamed by passing ``remove_vote_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"remove_vote_name\": \"remove_v\",\n        },\n    }\n\nManager functions\n-----------------\n\nA special manager is added that enables the inclusion of ``total_upvotes`` and ``total_downvotes`` as well as some extra functionality.\n\nThis manager by default replaces the ``objects`` manager, but this can be altered by passing the ``manager_name`` parameter to ``SECRETBALLOT_FOR_MODELS``, for example:\n\n.. code-block:: python\n\n    SECRETBALLOT_FOR_MODELS = {\n        \"<app_label.model_name>\": {\n            \"manager_name\": \"ballot_custom_manager\",\n        },\n    }\n\n\nThere is also an additional method on the Votable manager:\n\n``from_request(self, request)``\n*******************************\n    \nWhen called on a votable object's queryset will add a ``user_vote`` attribute that is the vote cast by the current 'user' (actually the token assigned to the request), for example:\n\n.. code-block:: python\n\n    def story_view(request, slug):\n        story = Story.objects.from_request(request).get(pk=slug)\n        # story has the following extra attributes\n        # user_vote: -1, 0, or +1\n        # total_upvotes: total number of +1 votes\n        # total_downvotes: total number of -1 votes\n        # vote_total: total_upvotes-total_downvotes\n        # votes: related object manager to get specific votes (rarely needed)\n\n\nTokens and SecretBallotMiddleware\n---------------------------------\n\nWithout user logins it is impossible to be certain that a user does not vote more than once, but there are several methods to limit abuses.  ``secretballot`` takes a fairly hands-off approach to this problem, the Vote object has a ``token`` field that is used to store a uniquely identifying token generated from a request.  To limit how many votes come from a particular ip address it is sufficient to set the token to the IP address, but it is also possible to develop more sophisticated heuristics to limit voters.\n\n``secretballot`` uses a simple piece of middleware to do this task, and makes it trival for users to define their own middleware that will use whatever heuristic they desire.\n\n``SecretBallotMiddleware`` is an abstract class that defines a ``generate_token(request)`` method that should return a string to be used for the token.  \n\nFor convenience several middleware have already been defined:\n\n``SecretBallotIpMiddleware``\n****************************\n\nSimply sets the ``token`` to ``request.META['REMOTE_ADDR']`` -- the user's IP address\n\n``SecretBallotIpUseragentMiddleware``\n*************************************\n\nSets the ``token`` to a hash of the user's ip address and user agent -- hopefully slightly more unique than IP alone\n\nIf you wish to define your own middleware simply derive a class from ``SecretBallotMiddleware`` and implement the ``generate_token`` method. If you come up with something that may be useful for others contributions are always welcome.\n\nGeneric Views\n-------------\n\n``secretballot.views`` includes the following generic views:\n\n``secretballot.views.vote``\n***************************\n\n**Description:**\n\nThis view creates or alters a vote on the object of ``content_type`` with a primary key of ``object_id``.\nIf a vote already exists it will be replaced (unless vote is 0 in which case it will be deleted).\n\nThe ``token`` attribute of the vote that is used to prevent unlimited voting is set within this view based on the active ``SecretBallotMiddleware``.\n\nDepending on the parameters given the return value of this view varies:\n    \n#. if ``redirect_url`` is specified it will be used no matter what\n#. if ``template_name`` is specified it will be used (along with ``template_loader``, ``context_processors`` and etc.)\n#. without ``redirect_url`` or ``template_name`` a text/json response will be returned\n\n**Required arguments:**\n\n* ``content_type`` : class that voting is taking place on (a VotableModel-derived model). \n\n  May be an instance of ``django.contrib.contenttypes.models.ContentType``, the Model class itself, or an ``<app_label.model_name>`` string.\n* ``object_id`` : primary key of object to vote on\n* ``vote`` : value of this vote (+1, 0, or -1) (0 deletes the vote)\n\n**Optional arguments:**\n\n* ``can_vote_test`` : function that allows limiting if user can vote or not. It's an optional argument to the view that can be specified in the urlconf that is called before a vote is recorded for a user.\n\n  Example implementation of ``can_vote_test``:\n\n  .. code-block:: python\n\n      from secretballot.utils import get_vote_model\n\n      def only_three_votes(request, content_type, object_id, vote):\n          return get_vote_model().objects.filter(content_type=content_type, token=request.secretballot_token).count() < 3\n\n  All ``can_vote_test`` methods must take the non-optional parameters to ``secretballot.views.vote`` and should return ``True`` if the vote should be allowed. If the vote is not allowed by default the view will return a 403, but it is also acceptable to raise a different exception.\n\n* ``redirect_url`` : url to redirect to, if present will redirect instead of returning a normal HttpResponse\n* ``template_name`` : template to render to, recieves a context containing ``content_obj`` which is the object voted upon\n* ``template_loader`` : template loader to use, defaults to ``django.template.loader``\n* ``extra_context`` : dictionary containing any extra context, callables will be called at render time\n* ``context_processors`` : list of context processors for this view\n* ``mimetype`` :  mimetype override\n\nCredits\n=======\n\n`django-secretballot <https://github.com/bashu/django-secretballot/>`_ was originally started by `James Turk <https://jamesturk.net/>`_ who has now unfortunately abandoned the project.\n\nLicense\n=======\n\n``django-secretballot`` is released under the BSD license.\n\nChanges\n-------\n\n2.0.0 (2021-10-26)\n------------------\n\n- drop compatibility code for Django 1.10 and below\n- make it possible to customize Vote model per project\n\n1.0.0 (2017-12-05)\n------------------\n\n- final release that supports Django 1.8 and up\n\n0.7.1 (2017-10-03)\n------------------\n\n- improved support for Django 2.0\n\n0.7.0 (2017-05-05)\n------------------\n\n- improved support for Django 1.11\n\n0.6.0 (2016-10-07)\n------------------\n\n- support for Django 1.10 new manager rules\n- add migrations\n- fix case where object is not fetched through correct manager\n\n0.5.0 (2015-11-02)\n------------------\n\n- drop South support\n- drop support for Django < 1.8, add support for Django 1.9\n\n0.4.0 (2015-05-27)\n------------------\n\n- drop South support\n- drop support for Django < 1.7, add support for Django >= 1.7\n- add Python 3 support\n- add a ton of tests\n- fix bug if vote_name was set in enable_voting_on\n\n0.3.0 (2015-04-17)\n------------------\n\n- related_fields and get_object_or_404 fix from François Chapuis\n- add property to check if secretballot is present on a class\n- add indexed timestamps to votes via Simon de Han\n- make response valid JSON for mimetype compatibility via Dan Drinkard\n\n0.2.3 (2010-03-30)\n------------------\n\n- bugfixes, thanks to Gennadiy Potapov\n\n0.2.2 (2009-11-27)\n------------------\n\n- fixed embarassing SyntaxError in vote\n\n0.2.1 (2009-11-24)\n------------------\n\n- fix some documentation issues left from 0.1\n- make content_type more flexible (can now take a model, content_type, or 'app.model' string)\n\n0.2.0 (2009-02-11)\n------------------\n\n- replace inheritance from VotableObject with enable_voting_on\n- when injecting manager methods inherit from existing manager\n\n0.1.0 (2009-01-24)\n------------------\n\n- initial working release\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/bashu/django-secretballot/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bashu/django-secretballot/",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "Basil Shubin",
    "maintainer_email": "basil.shubin@gmail.com",
    "name": "django-secretballot",
    "package_url": "https://pypi.org/project/django-secretballot/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-secretballot/",
    "project_urls": {
      "Download": "https://github.com/bashu/django-secretballot/zipball/master",
      "Homepage": "https://github.com/bashu/django-secretballot/"
    },
    "release_url": "https://pypi.org/project/django-secretballot/2.0.0/",
    "requires_dist": [
      "django-etc (>=1.2.0)",
      "tox ; extra == 'develop'",
      "django ; extra == 'develop'",
      "pytest-django ; extra == 'develop'",
      "pytest ; extra == 'develop'",
      "pytest-django ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Django anonymous voting application.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11841761,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc19cec25accbc9d014175c858931285c9aadf20c864d35d0fc83727c6600241",
        "md5": "a0039b7d4ff31af96620da07b4f95443",
        "sha256": "932a2d7cbbf6b4c059f093a885ea04e9daa2cc8c1f2f02ab9b5ccd19cb006463"
      },
      "downloads": -1,
      "filename": "django_secretballot-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0039b7d4ff31af96620da07b4f95443",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17597,
      "upload_time": "2021-10-27T01:45:28",
      "upload_time_iso_8601": "2021-10-27T01:45:28.015465Z",
      "url": "https://files.pythonhosted.org/packages/fc/19/cec25accbc9d014175c858931285c9aadf20c864d35d0fc83727c6600241/django_secretballot-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71972aea3795ce19ee9eed8490bacc096fd885cde1a50945afdfa508dc3d675b",
        "md5": "579bc189d7f915e093580959a5bd7ece",
        "sha256": "5c1d6ebc3078514ada31fba32ed03a790df93911e436986dca53b607ce544aac"
      },
      "downloads": -1,
      "filename": "django-secretballot-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "579bc189d7f915e093580959a5bd7ece",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12498,
      "upload_time": "2021-10-27T01:45:29",
      "upload_time_iso_8601": "2021-10-27T01:45:29.674677Z",
      "url": "https://files.pythonhosted.org/packages/71/97/2aea3795ce19ee9eed8490bacc096fd885cde1a50945afdfa508dc3d675b/django-secretballot-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}