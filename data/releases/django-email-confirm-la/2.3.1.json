{
  "info": {
    "author": "Vinta Chen",
    "author_email": "vinta.chen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Copyright (c) 2014 Vinta\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nDescription: django-email-confirm-la\n        =======================\n        \n        .. image:: http://img.shields.io/travis/vinta/django-email-confirm-la/master.svg?style=flat-square\n            :target: https://travis-ci.org/vinta/django-email-confirm-la\n        \n        .. image:: https://img.shields.io/coveralls/vinta/django-email-confirm-la/master.svg?style=flat-square\n            :target: https://coveralls.io/github/vinta/django-email-confirm-la\n        \n        .. image:: http://img.shields.io/pypi/v/django-email-confirm-la.svg?style=flat-square\n            :target: https://pypi.python.org/pypi/django-email-confirm-la\n        \n        Django email confirmation for any Model and any Field.\n        \n        Requirements\n        ============\n        \n        - Python (2.6, 2.7, 3.3, 3.4, 3.5)\n        - Django (1.5, 1.6, 1.7, 1.8, 1.9)\n        \n        Installation\n        ============\n        \n        .. code-block:: bash\n        \n            $ pip install django-email-confirm-la\n        \n        \n        In your ``settings.py``:\n        \n        Add the ``email_confirm_la`` app (put it *after* your apps) and set the required settings:\n        \n        .. code-block:: python\n        \n            INSTALLED_APPS = (\n                ...\n                'your_app',\n                'email_confirm_la',\n                ...\n            )\n        \n            EMAIL_CONFIRM_LA_HTTP_PROTOCOL = 'https'\n            EMAIL_CONFIRM_LA_DOMAIN = 'vinta.ws'\n            EMAIL_CONFIRM_LA_AUTOLOGIN = True\n            EMAIL_CONFIRM_LA_TEMPLATE_CONTEXT = {\n                'THE_ANSWER': 42,\n            }\n        \n        If you are using the `sites <https://docs.djangoproject.com/en/dev/ref/contrib/sites/>`_ framework, then ``EMAIL_CONFIRM_LA_DOMAIN`` can be omitted and ``Site.objects.get_current().domain`` will be used.\n        \n        In your ``urls.py``:\n        \n        .. code-block:: python\n        \n            urlpatterns = [\n                ...\n                url(r'^email_confirmation/', include('email_confirm_la.urls', namespace='email_confirm_la')),\n                ...\n            ]\n        \n        then run\n        \n        .. code-block:: bash\n        \n            $ python manage.py migrate\n        \n        Models\n        ======\n        \n        For User Model\n        ==============\n        \n        .. code-block:: python\n        \n            from django.contrib.auth.models import User\n            from email_confirm_la.models import EmailConfirmation\n        \n            user = User.objects.get(username='vinta')\n            email = 'vinta.chen@gmail.com'\n            EmailConfirmation.objects.verify_email_for_object(email, user)\n        \n        For Any Model And Any Field\n        ===========================\n        \n        Assumed you have a model:\n        \n        .. code-block:: python\n        \n            from django.db import models\n            from django.contrib.contenttypes.fields import GenericRelation  # Django 1.7+\n            from django.contrib.contenttypes.generic import GenericRelation\n        \n            class YourModel(models.Model):\n                ...\n                customer_support_email = models.EmailField(max_length=255, null=True, blank=True)\n                marketing_email = models.EmailField(max_length=255, null=True, blank=True)\n                ...\n        \n                # optional, but recommended when you want to perform cascade-deletions\n                email_confirmations = GenericRelation('email_confirm_la.EmailConfirmation', content_type_field='content_type', object_id_field='object_id')\n        \n        And you want to verify some emails:\n        \n        .. code-block:: python\n        \n            from your_app.models import YourModel\n            from email_confirm_la.models import EmailConfirmation\n        \n            some_model_instance = YourModel.objects.get(id=42)\n        \n            EmailConfirmation.objects.verify_email_for_object(\n                email='marvin@therestaurantattheendoftheuniverse.com',\n                content_object=some_model_instance,\n                email_field_name='customer_support_email'\n            )\n        \n            EmailConfirmation.objects.verify_email_for_object(\n                email='arthur.dent@therestaurantattheendoftheuniverse.com',\n                content_object=some_model_instance,\n                email_field_name='marketing_email'\n            )\n        \n        Signals\n        =======\n        \n        - ``post_email_confirmation_send``\n        - ``post_email_confirmation_confirm``\n        \n        In your ``models.py``:\n        \n        .. code-block:: python\n        \n            from django.dispatch import receiver\n            from email_confirm_la.signals import post_email_confirmation_confirm\n        \n            @receiver(post_email_confirmation_confirm)\n            def post_email_confirmation_confirm_callback(sender, confirmation, **kwargs):\n                model_instace = confirmation.content_object\n                email = confirmation.email\n                old_email = kwargs['old_email']\n        \n                do_your_stuff()\n        \n        Commands\n        ========\n        \n        .. code-block:: bash\n        \n            $ python manage.py clear_expired_email_confirmations\n        \n        Templates\n        =========\n        \n        You will want to override the project's email message and confirmation pages.\n        \n        Ensure the ``email_confirm_la`` app in ``INSTALLED_APPS`` is after the app that you will place the customized templates in so that the `django.template.loaders.app_directories.Loader <https://docs.djangoproject.com/en/dev/ref/templates/api/#django.template.loaders.app_directories.Loader>`_ finds *your* templates first.\n        \n        There are following template that you can override:\n        \n        * ``email_confirm_la/email/email_confirmation_subject.txt``: Produces the subject line of the email.\n        * ``email_confirm_la/email/email_confirmation_message.html``: The HTML body of the email.\n        * ``email_confirm_la/email_confirmation_success.html``: What the user sees after clicking a confirmation link (on success).\n        * ``email_confirm_la/email_confirmation_fail.html:`` What the user sees after clicking a invalid confirmation link.\n        * ``email_confirm_la/email_confirmation_expiration.html:`` What the user sees after clicking an expired confirmation link.\n        \n        Settings\n        ========\n        \n        Default values of app settings:\n        \n        .. code-block:: python\n        \n            EMAIL_CONFIRM_LA_HTTP_PROTOCOL = 'http'\n            EMAIL_CONFIRM_LA_DOMAIN = 'example.com'\n            EMAIL_CONFIRM_LA_CONFIRM_EXPIRE_SEC = 60 * 60 * 24 * 1  # 1 day\n            EMAIL_CONFIRM_LA_CONFIRM_URL_REVERSE_NAME = 'email_confirm_la:confirm_email'\n            EMAIL_CONFIRM_LA_TEMPLATE_CONTEXT = {}\n            EMAIL_CONFIRM_LA_AUTOLOGIN = False\n        \n        Run Tests\n        =========\n        \n        .. code-block:: bash\n        \n            $ pip install -r requirements_test.txt\n            $ python setup.py test\n        \n            # or\n        \n            $ docker build -t email_confirm_la .\n            $ docker run --rm=true -v `pwd`:/app email_confirm_la\n        \n        \n        Changes\n        =======\n        \n        2.3.0 (2016-09-09)\n        ++++++++++++++++++\n        \n        - Support automatically login after email confirmation via `EMAIL_CONFIRM_LA_AUTOLOGIN` setting\n        - Use `uuid.uuid4()` to generate confirmation key\n        \n        \n        2.2.0 (2016-07-25)\n        ++++++++++++++++++\n        \n        - Fix migration dependencies\n        - New parameter ``old_email`` in `post_email_confirmation_confirm` signal\n        \n        \n        2.1.0 (2016-07-25)\n        ++++++++++++++++++\n        \n        - Reset migration\n        - Fix ``EmailConfirmationValidator``\n        \n        \n        2.0.0 (2016-07-22)\n        ++++++++++++++++++\n        \n        - **v2.0.0 is a BACKWARD-INCOMPATIBLE release!**\n        - Full refactoring\n        - Drop support for Django 1.4\n        \n        \n        0.2.3 (2015-03-08)\n        ++++++++++++++++++\n        \n        - Fix `#14 <https://github.com/vinta/django-email-confirm-la/issues/14>`_ Admin raises an `AttributeError` when `content_object` doesn't exist\n        \n        \n        0.2.2 (2014-11-13)\n        ++++++++++++++++++\n        \n        - New admin action: Re-send confirmation email\n        - New setting: ``EMAIL_CONFIRM_LA_EMAIL_BACKEND``\n        - Change ``EMAIL_CONFIRM_LA_DOMAIN`` default value to ``''``, fail fast\n        - Fix circular import\n        \n        \n        0.2.1 (2014-11-09)\n        ++++++++++++++++++\n        \n        - Django 1.6 compatibility: ``transaction.atomic``\n        - Django 1.4 compatibility: ``update_fields``\n        \n        \n        0.2.0 (2014-11-08)\n        ++++++++++++++++++\n        \n        - Django 1.7 compatibility: ``migrations``\n        \n        \n        0.1.0 (2014-10-31)\n        ++++++++++++++++++\n        \n        - Initial release\n        \nKeywords: django,email,mail,confirm,confirmation,content type\nPlatform: UNKNOWN\nClassifier: Development Status :: 4 - Beta\nClassifier: Environment :: Web Environment\nClassifier: Framework :: Django\nClassifier: Intended Audience :: Developers\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nClassifier: Programming Language :: Python\nClassifier: Programming Language :: Python :: 2\nClassifier: Programming Language :: Python :: 2.6\nClassifier: Programming Language :: Python :: 2.7\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Topic :: Communications :: Email\nClassifier: Topic :: Internet\nClassifier: Topic :: Software Development :: Libraries\nClassifier: Topic :: Software Development :: Libraries :: Python Modules\nClassifier: Topic :: Utilities\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vinta/django-email-confirm-la",
    "keywords": "",
    "license": "The MIT License (MIT)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-email-confirm-la",
    "package_url": "https://pypi.org/project/django-email-confirm-la/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-email-confirm-la/",
    "project_urls": {
      "Homepage": "https://github.com/vinta/django-email-confirm-la"
    },
    "release_url": "https://pypi.org/project/django-email-confirm-la/2.3.1/",
    "requires_dist": [
      "django (>=1.5)"
    ],
    "requires_python": "",
    "summary": "Django email confirmation for any Model and any Field.",
    "version": "2.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8982559,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0507e1c39d30fc0f752e86eed36e0ba76ff69df819b20b8f492908075d6a8b2",
        "md5": "ca2c88da6548076beba17caa405dc29f",
        "sha256": "08662bd8bf45639acd28637c6d2d55b50416bc6a5a598852d85f4e1c62310697"
      },
      "downloads": -1,
      "filename": "django_email_confirm_la-2.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ca2c88da6548076beba17caa405dc29f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 23381,
      "upload_time": "2017-07-14T06:33:02",
      "upload_time_iso_8601": "2017-07-14T06:33:02.506934Z",
      "url": "https://files.pythonhosted.org/packages/e0/50/7e1c39d30fc0f752e86eed36e0ba76ff69df819b20b8f492908075d6a8b2/django_email_confirm_la-2.3.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}