{
  "info": {
    "author": "Johann Haselberger",
    "author_email": "johann.haselberger@hs-kempten.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/Minka.png\">\n\n## About\nMinka is ment to be a middleware between your optimization problem and a modular set of supporting tools to:\n\n* automatically perform hyperparameter optimization\n* store the results, parameter sets and custom data\n* compare different training runs\n* visualize the results and training processes\n\nThe aim of the project is to provide a simple as possible interface without the need to change your existing code.\n\n## One line to change it all \nCould it be easier than just adding one line?\n```python\nminka(yourOptimizationTask, 'configuration.json').opt(numberOfRuns)\n```\n\n## Architecture overview\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/minka_overview2.png\">\n\n## Usage\n### Installation\n```\n!pip install --upgrade PyYAML==4.2b4 optuna sacred python-telegram-bot dnspython loguru wandb pymongo\n```\n\n### Preparation\n* In order to store the data, a mongoDB is required. You can host your own free one here: https://cloud.mongodb.com\n* If you want to use the w&b interface, an account is needed. Create one here: https://app.wandb.ai\n\n### Define your optimization problem\nMinka uses a very simple combination of a configuration json file and the actual optimization task, represented as a single class.\n\n#### optimization class\noptimization template:\n```python\nclass yourOptimizationTask:\n    def __init__(self):\n        pass\n\n    def prepare(self):\n        pass\n\n    def run(self, config):\n        x = config['x']\n        result = (x - 2) ** 2\n\n        evalMetrics = {\n            'error': result\n        }\n\n        logArrays = {\n            'someValues': [1,2,3,4]\n        }\n\n        return result, evalMetrics, logArrays\n\n    def cleanup(self):\n        pass\n\n```\n\n#### parameter configuration\ncontent of the configuration.json file:\n```json\n\n{\n    \"comment\": \"parameter types: fix, categorical, discrete_uniform, int, loguniform, uniform\",\n    \"parameters\": {\n        \"batchSize\": {\"type\": \"fix\",\"values\": 256},\n        \"epochs\": {\"type\": \"fix\",\"values\": 75},\n        \"x\": {\"type\": \"categorical\",\"values\": [11,22,26]}\n    }\n}\n\n```\n\n## Screenshots\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/omni.png\">\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/wandb.png\">\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minka-johann-haselberger",
    "package_url": "https://pypi.org/project/minka-johann-haselberger/",
    "platform": "",
    "project_url": "https://pypi.org/project/minka-johann-haselberger/",
    "project_urls": {
      "Homepage": "https://github.com/"
    },
    "release_url": "https://pypi.org/project/minka-johann-haselberger/1.0.0/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "PyYAML (==4.2b4)",
      "optuna",
      "sacred",
      "python-telegram-bot",
      "dnspython",
      "loguru",
      "wandb",
      "pymongo"
    ],
    "requires_python": ">=3.6",
    "summary": "The minka package",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6228028,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5831665013030bfcf1fea84f28a9ea61ca200d2b8af60e8e9549a9a5b55e2eca",
        "md5": "55726f11f79d723adeef5400dcdbee88",
        "sha256": "909f70a7f7b0e48b373edfb2d1cc6e33bd5783b93e3c25c816f7a29ff8d646d5"
      },
      "downloads": -1,
      "filename": "minka_johann_haselberger-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55726f11f79d723adeef5400dcdbee88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4297,
      "upload_time": "2019-12-02T11:00:03",
      "upload_time_iso_8601": "2019-12-02T11:00:03.509419Z",
      "url": "https://files.pythonhosted.org/packages/58/31/665013030bfcf1fea84f28a9ea61ca200d2b8af60e8e9549a9a5b55e2eca/minka_johann_haselberger-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10d6ef6b5cb0cf2d13aceb89ed40e03a84e5f15cbf0f47da3b187611801f117e",
        "md5": "686a96e9a7239ae0325e129565f54dfa",
        "sha256": "7bda98b5707222f4e8378df45c596d2a701d1cabfe8c65906cb3ce88d6ff0bbd"
      },
      "downloads": -1,
      "filename": "minka-johann-haselberger-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "686a96e9a7239ae0325e129565f54dfa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4012,
      "upload_time": "2019-12-02T11:00:17",
      "upload_time_iso_8601": "2019-12-02T11:00:17.380527Z",
      "url": "https://files.pythonhosted.org/packages/10/d6/ef6b5cb0cf2d13aceb89ed40e03a84e5f15cbf0f47da3b187611801f117e/minka-johann-haselberger-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}