{
  "info": {
    "author": "Alexey Kuleshevich",
    "author_email": "lehins@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-smartfields\n##################\n\n.. image:: https://travis-ci.org/lehins/django-smartfields.svg?branch=master   \n   :target: https://travis-ci.org/lehins/django-smartfields\n   :alt: Travis-CI\n\n.. image:: https://coveralls.io/repos/lehins/django-smartfields/badge.png?branch=master \n   :target: https://coveralls.io/r/lehins/django-smartfields\n   :alt: Tests Coverage\n\n.. image:: https://landscape.io/github/lehins/django-smartfields/master/landscape.png\n   :target: https://landscape.io/github/lehins/django-smartfields/master\n   :alt: Code Health\n\n.. image:: https://pypip.in/download/django-smartfields/badge.svg\n   :target: https://pypi.python.org/pypi/django-smartfields/\n   :alt: Downloads\n\n.. image:: https://readthedocs.org/projects/django-smartfields/badge/?version=latest\n   :target: https://readthedocs.org/projects/django-smartfields/?badge=latest\n   :alt: Documentation Status\n\nDjango Model Fields that are smart.\n-----------------------------------\n\nThis app introduces a declarative way of handling fields' values. It can be especially useful when one field depends on a value from another field, even if a field depends on itself. At first it might sound useless, but, as it turns out, it is an amazing concept that helps in writing clear, concise and DRY code.\n\nBest way to descibe is on a simple example. Let's say there is a field where you store a custom html page and you would like to have another field attached to the same model store the same page but with html tags stripped out, moreover you would like it to update whenever the first field changes it's value. A common way to handle that issue is to overwrite model's ``save`` method and put all the logic there, right? What if you could just give a field a function that does the stripping and everything else is taking care of? Wouldn't that be nice, huh? Well, that's one of many things this app let's you do. \n\nAnother great example is django's ``ImageField`` that can update ``width_field`` and ``height_field`` whenever image is changed. This app uses similar concepts to achive that functionality. But here is a more powerful example that demonstrates the value of this app. Let's say you would like to have a user be able to upload an image in any format and automatically add another version of this image converted to JPEG and shrunk to fit in a box size of 1024x768. Here is how it could look with utilization of `django-smartfields`:\n\n.. code-block:: python\n\n    from django.db import models\n    \n    from smartfields import fields\n    from smartfields.dependencies import FileDependency\n    from smartfields.processors import ImageProcessor\n\n    class User(models.Model):\n        # ... more fields ....\n        avatar = fields.ImageField(upload_to='avatar', dependencies=[\n            attname='avatar_jpeg', FileDependency(processor=ImageProcessor(\n                format='JPEG', scale={'max_width': 1024, 'max_height': 768})),\n        ])\n        avatar_jpeg = fields.ImageField(upload_to='avatar')\n        # ... more fields ...\n\nThat's it. Did I mention that it will also clean up old files, when new ones are uploaded?\n\nSo hopefully I got you convinced to give this app a try. There is full documentation also on the way, but for now you can check out 'tests' folder for some examples.\n\n\nDependencies\n------------\n* `Django <https://djangoproject.com/>`_ (for now only version >= 1.7, will add support for earlier versions later).\n* `Python Pillow <https://pypi.python.org/pypi/Pillow/>`_ - (optional) used for image conversion/resizing.\n* `ffmpeg <https://www.ffmpeg.org/>`_ - (optional) for video conversion. (could be easily adopted for libav).\n* `BeautifulSoup4 <https://pypi.python.org/pypi/beautifulsoup4/>`_ - (optional) for HTML stripping\n* `django-crispy-forms <https://readthedocs.org/projects/django-crispy-forms/>`_ - (optional) for ajax uploading.\n* `Plupload <http://www.plupload.com/>`_ - (optional) for ajax uploading.\n\n\n\nChangelog\n=========\n\n1.0.0\n-----\n\n* Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lehins/django-smartfields",
    "keywords": "django,model fields,declarative,FileField cleanup,FileField conversion,ajax uploading",
    "license": "GNU GPL v2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-smartfields",
    "package_url": "https://pypi.org/project/django-smartfields/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-smartfields/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/lehins/django-smartfields"
    },
    "release_url": "https://pypi.org/project/django-smartfields/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Model Fields that are smart.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8769790,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaf3c5a6ef2df0b5f38cb91381c5c4ddc23f1ad1d6f2cc61957e36182f8091f6",
        "md5": "aaeaa4274da14bd3846ba422532afadf",
        "sha256": "103e5286990f219eaf9a15f1f27eb8b81587456c676d67bd1ca2e828909c8bac"
      },
      "downloads": -1,
      "filename": "django_smartfields-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aaeaa4274da14bd3846ba422532afadf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 41308,
      "upload_time": "2014-12-23T11:55:24",
      "upload_time_iso_8601": "2014-12-23T11:55:24.585504Z",
      "url": "https://files.pythonhosted.org/packages/ea/f3/c5a6ef2df0b5f38cb91381c5c4ddc23f1ad1d6f2cc61957e36182f8091f6/django_smartfields-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b498e0103059ce5aa45c9a2cecca697c1ceb60171c8e00ada69c6e809235e4d3",
        "md5": "17146bdfbbcfdef909fba0b16ac7a274",
        "sha256": "f1cb77a6b6b9a2ea1f08efb436bc7678c99232ba030e77ee214a4642c3b761be"
      },
      "downloads": -1,
      "filename": "django-smartfields-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "17146bdfbbcfdef909fba0b16ac7a274",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38162,
      "upload_time": "2014-12-23T11:55:28",
      "upload_time_iso_8601": "2014-12-23T11:55:28.116216Z",
      "url": "https://files.pythonhosted.org/packages/b4/98/e0103059ce5aa45c9a2cecca697c1ceb60171c8e00ada69c6e809235e4d3/django-smartfields-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}