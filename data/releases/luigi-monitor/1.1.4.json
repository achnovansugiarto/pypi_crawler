{
  "info": {
    "author": "Hudl",
    "author_email": "alex.debrie@hudl.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "## Luigi Monitor\n\n[![Pypi Latest Version](https://img.shields.io/pypi/v/luigi-monitor.svg)](https://img.shields.io/pypi/v/luigi-monitor.svg)\n[![License](https://img.shields.io/pypi/l/luigi-monitor.svg)](https://img.shields.io/pypi/l/luigi-monitor.svg)\n[![Python Versions](https://img.shields.io/pypi/pyversions/luigi-monitor.svg)](https://img.shields.io/pypi/pyversions/luigi-monitor.svg)\n[![Pypi Format](https://img.shields.io/pypi/format/luigi-monitor.svg)](https://img.shields.io/pypi/format/luigi-monitor.svg)\n[![Build Status](https://travis-ci.org/hudl/luigi-monitor.svg?branch=master)](https://travis-ci.org/hudl/luigi-monitor)\n\n\n![message](https://raw.github.com/hudl/luigi-monitor/master/message.png)\n\nSend summary messages of your Luigi jobs to Slack.\n\n### Overview\n\n[Luigi](https://github.com/spotify/luigi) is a great tool for making\njob pipelines, but it's hard to know the status of a run. Luigi has\nsupport for error emails, but this requires configuring your machine\nto send email, which is a hassle for short-lived EMR clusters. Further,\nit sends an email for every failure, which can quickly swamp your inbox.\n\nBy contrast, this tool gathers all your failures and missing dependencies\nand sends a summary Slack message when the job is finished.\n\n### Usage\n\nWith default app username:\n```python\nimport luigi\nfrom luigi_monitor import monitor\n\n...\n\nif __name__ == \"__main__\":\n    with monitor(slack_url=<your_slack_url>, max_print=10):\n        luigi.run(main_task_cls=MainClass)\n\n```\n\nWith dynamic app username:\n```python\nimport luigi\nfrom luigi_monitor import monitor\n\n...\n\nif __name__ == \"__main__\":\n    with monitor(slack_url=<your_slack_url>, max_print=10, username=\"FooBar Monitor\"):\n        luigi.run(main_task_cls=MainClass)\n\n```\n\nMonitoring and notifying on various events:\n\nCurrently supports: `SUCCESS`, `DEPENDENCY_MISSING`, and `FAILURE` \n\nBy default, all three of the above are monitored and notified on. If, `SUCCESS` event is monitored and \nall tasks succeed then the notification text is \"Job ran successfully\" instead of listing _all_ \nsuccessful tasks. \n\n```python\nimport luigi\nfrom luigi_monitor import monitor\n\n...\n\nif __name__ == \"__main__\":\n    with monitor(slack_url=<your_slack_url>, events=['DEPENDENCY_MISSING', 'FAILURE']):\n        luigi.run(main_task_cls=MainClass)\n```\n\nAlternatively:\n\n`luigi-monitor --module path.to.module TaskName`\n\nNB: if you plan to use luigi-monitor from the command line, set options using `luigi.cfg`:\n```\n[luigi-monitor]\nslack_url=<slack_hook>\nmax_print=<int>\nusername=<string>\n```\n\n\nThis is a work in progress. Particularly, note that:\n\n* It only sends notifications via Slack\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hudl/luigi-monitor",
    "keywords": "luigi",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "luigi-monitor",
    "package_url": "https://pypi.org/project/luigi-monitor/",
    "platform": "",
    "project_url": "https://pypi.org/project/luigi-monitor/",
    "project_urls": {
      "Homepage": "https://github.com/hudl/luigi-monitor"
    },
    "release_url": "https://pypi.org/project/luigi-monitor/1.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Send summary messages of your Luigi jobs to Slack.",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4176878,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c303a4355514559a00a36370dc29358214049daa6cd9dc968e34db8274b227ce",
        "md5": "9961913090f9438458f71d10c1136e2b",
        "sha256": "3dad3b2e9a67c9edffa7234e9d28631d680b009bf4f68e4971737c829477ee53"
      },
      "downloads": -1,
      "filename": "luigi_monitor-1.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9961913090f9438458f71d10c1136e2b",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "requires_python": null,
      "size": 7030,
      "upload_time": "2018-08-16T14:41:39",
      "upload_time_iso_8601": "2018-08-16T14:41:39.327765Z",
      "url": "https://files.pythonhosted.org/packages/c3/03/a4355514559a00a36370dc29358214049daa6cd9dc968e34db8274b227ce/luigi_monitor-1.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61a4b170904b6a9a5c49a39231c582bd7bed3692ed4326542f6319437803b427",
        "md5": "b86467e678b10706774d4c8c85dfdadd",
        "sha256": "111661fc9771f7da5404d16d1415f2fe75d9b65ca7c926fe4b718218d35aae77"
      },
      "downloads": -1,
      "filename": "luigi-monitor-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b86467e678b10706774d4c8c85dfdadd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4303,
      "upload_time": "2018-08-16T14:41:37",
      "upload_time_iso_8601": "2018-08-16T14:41:37.595794Z",
      "url": "https://files.pythonhosted.org/packages/61/a4/b170904b6a9a5c49a39231c582bd7bed3692ed4326542f6319437803b427/luigi-monitor-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}