{
  "info": {
    "author": "Amartya Sanyal",
    "author_email": "amartya18x@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "========\nmatSHEEP\n========\n\nThis library is a programmatic interface in python to generate a circuit for the bigger and more useful SHEEP library.\n\nThe library has a few data types :\n\n * variables - A single bit (Could also be used as a normal scalar)\n  \n * enc_vec - One dimensional bit vector (Could be used a one dimensional vector of any data type)\n\n * enc_mat - Two dimensional bit matrix (Could be used a one dimensional vector of any data type)\n\n * enc_tensor3 - Three dimensional bit tensor.\n\n\nTo create a circuit, the basic class to inherit is `mini_mod` in `mathsheep.interactions`. To add more components, you can use `self.add(component)` inside the `create` function as shown below.::\n\n  class oneb_adder(mini_mod):\n       def __init__(self, name, inputs, outputs, nb=None,\n                       randomize_temps=1, carry=True):\n\t    mini_mod.__init__(self, name, inputs, outputs)\n            self.create(...)\n\n       def create(self, ...):\n    \t     self.add(..)\n\n\nTwo types of components can be added.\n1. Assignments (`from matSHEEP.interactions`):\n\n   * mono_assign\n     * alias\n     * negate\n   * bi_assign\n     * xor\n     * and\n     * or\n     * constand\n   * tri_assign\n     * mux\n\n2. Other mini_mods\n   \nThere are a few predefined mini_mods. They can be found in\n\n1. `matSHEEP.reusable_modules`\n   * oneb_adder - Add two bits\n   * nb_adder  - Adders x and y with incoming carrt where input is `[cin x y]`\n   * nb_adder_xy - Adds x and y with  `input = (x, y)`\n   * compare_cp - Compares ciphertext with plaintext with `input = (c,p)`\n2. `matSHEEP.functions`\n   * reduce_add - Counts the number of ones in a bit vector.\n3. `matSHEEP.nn_layer`\n   * sign_fn\n   * linear_layer_1d - Inner Product of a weight vector with encrypted bit vector  followed by a sign function.\n   * linear_layer - Inner Product of a weight matrix with an encrypted bit vector followed by a sign function.\n   * conv_layer - A convolution Layer. (Look at examples)\n4. `matSHEEP.vector_ops`\n   * vec_mono_op_cond - Takes a plaintext `cond` vector, a plaintext tuple `ass_types` containing only `alias` and `negate` as values and an encrypted bit vector `input`. It outputs an encrypted bit vector where the ith position has the `ass_types[cond[idx]]` operation applied on  `input[idx]`.\n   * Similar operation for matrix and tensor.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matSHEEP",
    "package_url": "https://pypi.org/project/matSHEEP/",
    "platform": "",
    "project_url": "https://pypi.org/project/matSHEEP/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/matSHEEP/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Programmatic interface to SHEEP",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3947314,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf8213486bb29e9c7e70b3870ae8d3922dd13d5cf09ee108138d5562d2fe71c8",
        "md5": "fb0c83ef4e83d5237300aab1b9a9bfc4",
        "sha256": "105595538db7b6628314ad12b99507f42a731590de9fe7db6f257b481b5cc5bc"
      },
      "downloads": -1,
      "filename": "matSHEEP-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fb0c83ef4e83d5237300aab1b9a9bfc4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15099,
      "upload_time": "2018-06-07T13:58:32",
      "upload_time_iso_8601": "2018-06-07T13:58:32.125170Z",
      "url": "https://files.pythonhosted.org/packages/cf/82/13486bb29e9c7e70b3870ae8d3922dd13d5cf09ee108138d5562d2fe71c8/matSHEEP-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}