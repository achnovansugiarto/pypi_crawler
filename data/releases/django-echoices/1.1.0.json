{
  "info": {
    "author": "Marc Bourqui",
    "author_email": "https://github.com/mbourqui",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Utilities"
    ],
    "description": "|Python| |Django| |License| |PyPI| |Build Status| |Coverage Status|\n\nDjango-EChoices, choices for Django model fields as enumeration\n===============================================================\n\nFeatures\n--------\n\nSpecialized enum types\n~~~~~~~~~~~~~~~~~~~~~~\n\n-  ``enums.EChoice`` is the base enum type. Each enum element is a tuple\n   ``(value, label)``, where [t]he first element in each tuple is the\n   actual value to be set on the model, and the second element is the\n   human-readable nameÂ \n   \\ `doc <https://docs.djangoproject.com/en/1.11/ref/models/fields/#choices>`__\\ .\n   Values **must** be unique. Can be derived for further customization.\n-  ``enums.EOrderedChoice`` supports ordering of elements.\n   ``EOrderedChoice.choices()`` takes an extra optional argument,\n   ``order``, which supports three values: 'sorted', 'reverse' or\n   'natural' (default). If ``sorted``, the choices are ordered according\n   to their value. If ``reverse``, the choices are ordered according to\n   their value as if each comparison were reversed. If ``natural``, the\n   order is the one used when instantiating the enumeration.\n-  ``enums.EAutoChoice``, generates auto-incremented numeric values.\n   It's then used like\n\n   ::\n\n       class EStates(EAutoChoice):\n           # format is: label -> str\n           CREATED = 'Created'\n           SUBMITTED = 'Submitted'\n\nAPI\n^^^\n\nOverriden EnumMeta methods\n''''''''''''''''''''''''''\n\n-  ``EChoice.__getitem__()``, such that you can retrieve an ``EChoice``\n   instance using ``EChoice['my_value']``\n\nAdditional classmethods\n'''''''''''''''''''''''\n\n-  ``choices()`` generates the choices as expected by a Django model\n   field\n-  ``max_value_length()`` returns the max length for the Django model\n   field, if the values are strings\n-  ``values()`` returns a list of all the values\n-  ``get(value, default=None)`` returns the EChoice instance having that\n   value, else returns the default\n\nSpecialized model fields\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  ``fields.EChoiceCharField`` deals directly with the enum instances\n   instead of their value. Internal representation is using CharField,\n   thus only works for textual labels.\n-  ``fields.EChoiceIntegerField``, same as ``EChoiceCharField`` but\n   using IntegerField, thus only works for numeric labels. `**Not yet\n   implemented** <#1>`__.\n-  ``fields.MultipleEChoiceField``, similar to previous fields, but\n   supports multiple values to be selected. `**Not yet\n   implemented** <#3>`__.\n\nRequirements\n------------\n\n-  Django >= 1.8.18\n\nInstallation\n------------\n\n1. Run ``pip install django-echoices``\n\nUsage\n-----\n\nFirst, define your choices enumeration (in your ``models.py`` for\nexample):\n\n::\n\n    from enum import unique\n    from echoices.enums import EChoice\n\n    @unique\n    class EStates(EChoice):\n        # format is: (value -> char or str or int, label -> str)\n        CREATED = ('c', 'Created')\n        SUBMITTED = ('s', 'Submitted')\n\nThen, either use a regular model field:\n\n::\n\n    from django.db import models\n\n    class MyModel(models.Model):\n        state = models.CharField(max_length=EStates.max_value_length(),\n                                 choices=EStates.choices(),\n                                 default=EStates.CREATED.value)\n\n**Note**: If your value is an ``int``, you can use\n``models.IntegerField`` instead.\n\nor a specialized field:\n\n::\n\n    from django.db import models\n    from echoices.fields import EChoiceCharField\n\n    class MyModel(models.Model):\n        # `max_length` is set automatically\n        state = EChoiceCharField(EStates, default=EStates.CREATED)\n\nDerivation\n~~~~~~~~~~\n\n::\n\n    from echoices.enums import EChoice\n\n    class EMyChoice(EChoice):\n        \"\"\"\n        You can add your own fields to the `value` and `label` ones. To do so, you have to override the\n        __init__() and your signature must look like: `self, value, label, *args` where you replace `*args`\n        with your own positional arguments, as you would do when defining a custom Enum.\n        Do *not* call the super().__init__(), as `value` and `label` are already set by `EChoice`.\n\n        As when dealing with a derived Enum, you can also add your own methods.\n\n        \"\"\"\n\n        MY_CHOICE = (1, 'First choice', 'my value')\n\n        def __init__(self, value, label, my_arg):\n            self.my_arg = my_arg\n            # Note: super().__init__() shall *not* be called!\n\n.. |Python| image:: https://img.shields.io/badge/Python-3.4,3.5,3.6-blue.svg?style=flat-square\n   :target: /\n.. |Django| image:: https://img.shields.io/badge/Django-1.8,1.9,1.10-blue.svg?style=flat-square\n   :target: /\n.. |License| image:: https://img.shields.io/badge/License-GPLv3-blue.svg?style=flat-square\n   :target: /LICENSE\n.. |PyPI| image:: https://img.shields.io/pypi/v/django_echoices.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/django-echoices\n.. |Build Status| image:: https://travis-ci.org/mbourqui/django-echoices.svg?branch=master\n   :target: https://travis-ci.org/mbourqui/django-echoices\n.. |Coverage Status| image:: https://coveralls.io/repos/github/mbourqui/django-echoices/badge.svg?branch=master\n   :target: https://coveralls.io/github/mbourqui/django-echoices?branch=master",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbourqui/django-echoices",
    "keywords": "django choices models enum",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-echoices",
    "package_url": "https://pypi.org/project/django-echoices/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-echoices/",
    "project_urls": {
      "Homepage": "https://github.com/mbourqui/django-echoices"
    },
    "release_url": "https://pypi.org/project/django-echoices/1.1.0/",
    "requires_dist": [
      "Django (>=1.8.18)"
    ],
    "requires_python": "",
    "summary": "Choices for Django model fields as enumeration",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7750680,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a60b81047f6b39885f45ba7a519b20a05b345cf3607039b3244b6b02a7ba9b77",
        "md5": "61f1ac9d2f79a4f6748b17dca078c1bc",
        "sha256": "5d86ce4d7f19b0be6ffca6cd0d6288f6d729b37dccf2bf822da7c23fb155c6ad"
      },
      "downloads": -1,
      "filename": "django_echoices-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61f1ac9d2f79a4f6748b17dca078c1bc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16135,
      "upload_time": "2017-05-18T12:05:53",
      "upload_time_iso_8601": "2017-05-18T12:05:53.116519Z",
      "url": "https://files.pythonhosted.org/packages/a6/0b/81047f6b39885f45ba7a519b20a05b345cf3607039b3244b6b02a7ba9b77/django_echoices-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe5de2fd1efcdf068711d95517d29d680f2656dcc5407faabba310b20f8b65c5",
        "md5": "22d3c8b762398ca4c66376259670fb1a",
        "sha256": "1c228d8bef32ae1904ce037ec301091db099366bfab0d27d10a617cdb84998b8"
      },
      "downloads": -1,
      "filename": "django-echoices-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "22d3c8b762398ca4c66376259670fb1a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24615,
      "upload_time": "2017-05-18T12:05:55",
      "upload_time_iso_8601": "2017-05-18T12:05:55.104131Z",
      "url": "https://files.pythonhosted.org/packages/fe/5d/e2fd1efcdf068711d95517d29d680f2656dcc5407faabba310b20f8b65c5/django-echoices-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}