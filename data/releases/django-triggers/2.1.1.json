{
  "info": {
    "author": "Unleashed NV",
    "author_email": "operations@unleashed.be",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "[![Coverage Status](https://coveralls.io/repos/github/vikingco/django-triggers/badge.svg)](https://coveralls.io/github/vikingco/django-triggers)\n[![CI Status](https://travis-ci.org/vikingco/django-triggers.svg?branch=master)](https://travis-ci.org/vikingco/django-triggers)\n\nAbout\n-----\n\nDjango Triggers is a light-weight framework for having one part of an\napplication generate a trigger while another part responds to to it.\nTriggers are persistent and can be scheduled to be processed at a later\ntime.\n\nUsage\n-----\n\nTriggers are defined by subclassing the `Trigger` model. `Trigger` defines\ncommon data structures and logic for all child triggers. The only thing a\nchild should have to do is override the `_process` method and set `typed` to\na unique slug.\n\nSettings\n--------\n\nThe following settings are used:\n- `DJTRIGGERS_TRIES_BEFORE_WARNING`: the number of times a task can be retried before a warning is logged. Defaults to 3.\n- `DJTRIGGERS_TRIES_BEFORE_ERROR`: the number of times a task can be retried before an error is raised. Defaults to 5.\n- `DJTRIGGERS_ASYNC_HANDLING`: whether processing should be asynchronous (using Celery) or not. Default to False.\n- `DJTRIGGERS_CELERY_TASK_MAX_RETRIES`: the number of times the Celery task for a trigger should be retried. Defaults to 0.\n- `DJTRIGGERS_TYPE_TO_TABLE`: mapping of trigger types to database tables. Used for the cleanup script. Defaults to `{}`.\n- `DJTRIGGERS_REDIS_URL`: the URL of the Redis instance used for locks.\n- `DJTRIGGERS_LOGGERS`: separate logging config for django-triggers. Defaults to `()`.\n\n\nExamples\n--------\n\nGeneral use\n===========\n\n```python\n\nfrom djtriggers.models import Trigger\n\nclass BreakfastTrigger(Trigger):\n    class Meta:\n        # There is no trigger specific data so make a proxy model.\n        # This ensures no additional db table is created.\n        proxy = True\n    typed = 'breakfast'\n\n    def _process(self, dictionary={}):\n        prepare_toast()\n        prepare_juice()\n        eat()\n\n```\n\nTrigger specific data\n=====================\n\n```python\n\nfrom djtriggers.models import Trigger\n\nclass PayBill(Trigger):\n    class Meta:\n        # We need a regular model as the trigger specific data needs a\n        # place to live in the db.\n        proxy = False\n\n    amount = models.IntegerField()\n    recipient = models.ForeignKey(User)\n\n    def _process(self, dictionary={}):\n        amount = self.amount\n        recipient = self.recipient\n        check_balance()\n        pay_bill(amount, recipient)\n\n```\n\nTrigger processing\n==================\n\n```python\n\nfrom .models import BreakfastTrigger\nfrom .exceptions import ProcessError\n\ntrigger = BreakfastTrigger.objects.get(pk=1)\ntry:\n    trigger.process()\nexcept ProcessError as e:\n    report_error(e)\n\n```\n\nDelayed processing\n==================\n\n```python\n\nfrom .models import BreakfastTrigger\n\ntrigger = BreakfastTrigger()\n# Process 8 hours later (this can be any datetime)\ntrigger.process_after = now() + timedelta(hour=8)\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vikingco/django-triggers",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-triggers",
    "package_url": "https://pypi.org/project/django-triggers/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-triggers/",
    "project_urls": {
      "Homepage": "https://github.com/vikingco/django-triggers"
    },
    "release_url": "https://pypi.org/project/django-triggers/2.1.1/",
    "requires_dist": [
      "Django (<2.3,>=2.1.5)",
      "celery (>=4.0.0)",
      "python-dateutil",
      "redis (>=3.0.0)"
    ],
    "requires_python": "",
    "summary": "Framework to create and process triggers.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11935087,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52773ad36cf7b2bee45fce00689135ce6307c0e55a87f85b0e1fb7efd92631f2",
        "md5": "d829ea1bfcb2ed7713afc90c84369d90",
        "sha256": "6b107b630f72db5f8cfa583f0562d092e47b058178ded09623331fac02b18ddb"
      },
      "downloads": -1,
      "filename": "django_triggers-2.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d829ea1bfcb2ed7713afc90c84369d90",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 21030,
      "upload_time": "2019-12-04T13:59:37",
      "upload_time_iso_8601": "2019-12-04T13:59:37.844333Z",
      "url": "https://files.pythonhosted.org/packages/52/77/3ad36cf7b2bee45fce00689135ce6307c0e55a87f85b0e1fb7efd92631f2/django_triggers-2.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4516a46539063ec35d0dd7a8efe266ebe67c29ccccf21b527f20d77917666f7e",
        "md5": "1ead5af03f8f63c0ef5660900753bdc3",
        "sha256": "17214fd298fe45176225bf9e013f3e2f401bcc3dd61d3e32a6f29a5fc2c481df"
      },
      "downloads": -1,
      "filename": "django-triggers-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1ead5af03f8f63c0ef5660900753bdc3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11668,
      "upload_time": "2019-12-04T13:59:39",
      "upload_time_iso_8601": "2019-12-04T13:59:39.335391Z",
      "url": "https://files.pythonhosted.org/packages/45/16/a46539063ec35d0dd7a8efe266ebe67c29ccccf21b527f20d77917666f7e/django-triggers-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}