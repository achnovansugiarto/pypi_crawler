{
  "info": {
    "author": "OASIS Cyber Threat Intelligence Technical Committee",
    "author_email": "cti-users@lists.oasis-open.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security"
    ],
    "description": "cti-taxii-server\r\n================\r\n\r\nThis is an `OASIS TC Open Repository <https://www.oasis-open.org/resources/open-repositories/>`_.\r\nSee the `Governance`_ section for more information.\r\n\r\nTrusted Automated Exchange of Intelligence Information (TAXIIâ„¢) is an application layer\r\nprotocol for the communication of cyber threat information in a simple and scalable manner.\r\n\r\n*Medallion* is a minimal implementation of a TAXII 2.1 Server in Python.\r\n\r\n**WARNING:** *medallion* was designed as a prototype and reference\r\nimplementation of TAXII 2.1, and is not intended for production use.\r\n\r\n*medallion* has been designed to be a simple front-end REST server providing\r\naccess to the endpoints defined in that specification.\r\nIt uses the python framework - `Flask <http://flask.pocoo.org/>`_.  *medallion*\r\ndepends on back-end \"plugins\" which handle the persistence of the TAXII data and\r\nmetadata. The TAXII specification is agnostic to what type of data a TAXII\r\nserver stores, but this will usually be STIX 2 content.\r\n\r\nTwo back-end plugins are provided with *medallion*: the Memory back-end and the\r\nMongoDB back-end.  The Memory back-end persists data \"in memory\".  It is\r\ninitialized using a json file that contains TAXII data and metadata.\r\nIt is possible to save the current state of the in memory store, but this\r\nback-end is really intended only for testing purposes.  The MongoDB backend is\r\nsomewhat more robust and makes use of a MongoDB server, installed independently.\r\nThe MongoDB back-end can only be used if the pymongo python package is\r\ninstalled. An error message will result if it is used without that package.\r\n\r\nFor more information, see `the documentation <https://medallion.readthedocs.io/>`__ on\r\nReadTheDocs.\r\n\r\nInstallation\r\n------------\r\n\r\nThe easiest way to install *medallion* is with pip\r\n\r\n.. code-block:: bash\r\n\r\n  $ pip install medallion\r\n\r\nUsage\r\n-----\r\n\r\nAs a script\r\n-----------\r\n\r\nMedallion provides a command-line interface to start the TAXII Server\r\n\r\n.. code-block:: text\r\n\r\n    usage: medallion [-h]\r\n        [--host HOST]\r\n        [--port PORT]\r\n        [--debug-mode]\r\n        [--log-level {DEBUG,INFO,WARN,ERROR,CRITICAL}]\r\n        CONFIG_PATH\r\n\r\n    medallion v2.0.1\r\n\r\n    positional arguments:\r\n      CONFIG_PATH           The location of the JSON configuration file to use.\r\n\r\n    optional arguments:\r\n      -h, --help            show this help message and exit\r\n\r\n      --host HOST           The host to listen on.\r\n\r\n      --port PORT           The port of the web server.\r\n\r\n      --debug-mode          If set, start application in debug mode.\r\n\r\n      --log-level {DEBUG,INFO,WARN,ERROR,CRITICAL}\r\n                            The logging output level for medallion.\r\n\r\nTo run *medallion*\r\n\r\n.. code-block:: bash\r\n\r\n    $ python medallion/scripts/run.py <config-file>\r\n\r\nMake sure medallion is using the same port that your TAXII client will be connecting on. You can specify which port medallion runs on using the `--port` option, for example\r\n\r\n.. code-block:: bash\r\n\r\n    $ medallion --port 80 config_file.json\r\n\r\nThe <config_file> contains:\r\n\r\n- configuration information for the backend plugin\r\n- a simple user name/password dictionary\r\n\r\nTo use the Memory back-end plug, include the following in the <config-file>:\r\n\r\n.. code-block:: json\r\n\r\n    {\r\n        \"backend\": {\r\n            \"module\": \"medallion.backends.memory_backend\",\r\n            \"module_class\": \"MemoryBackend\",\r\n            \"filename\": \"<path to json file with initial data>\"\r\n        }\r\n    }\r\n\r\nTo use the Mongo DB back-end plug, include the following in the <config-file>:\r\n\r\n.. code-block:: json\r\n\r\n    {\r\n         \"backend\": {\r\n            \"module\": \"medallion.backends.mongodb_backend\",\r\n            \"module_class\": \"MongoBackend\",\r\n            \"uri\": \"<Mongo DB server url>  # e.g., 'mongodb://localhost:27017/'\"\r\n         }\r\n    }\r\n\r\n*Note: A Mongo DB should be available at some URL when using the Mongo DB back-end*\r\n\r\nA description of the Mongo DB structure expected by the mongo db backend code is\r\ndescribed in `the documentation <https://medallion.readthedocs.io/en/latest/mongodb_schema.html>`_.\r\n\r\nAs required by the TAXII specification, *medallion* supports HTTP Basic\r\nauthorization.  However, the user names and passwords are currently stored in\r\nthe <config_file> in plain text.\r\n\r\nHere is an example:\r\n\r\n.. code-block:: json\r\n\r\n    {\r\n        \"users\": {\r\n           \"admin\": \"Password0\",\r\n           \"user1\": \"Password1\",\r\n           \"user2\": \"Password2\"\r\n        }\r\n    }\r\n\r\nThe authorization is enabled using the python package\r\n`flask_httpauth <https://flask-httpauth.readthedocs.io>`_.\r\nAuthorization could be enhanced by changing the method \"decorated\" using\r\n@auth.get_password in medallion/__init__.py\r\n\r\nConfigs may also contain a \"taxii\" section as well, as shown below:\r\n\r\n.. code-block:: json\r\n\r\n    {\r\n        \"taxii\": {\r\n           \"max_page_size\": 100\r\n        }\r\n    }\r\n\r\nAll TAXII servers require a config, though if any of the sections specified above\r\nare missing, they will be filled with default values.\r\n\r\nWe welcome contributions for other back-end plugins.\r\n\r\nDocker\r\n------\r\n\r\nWe also provide a Docker image to make it easier to run *medallion*\r\n\r\n.. code-block:: bash\r\n\r\n    $ docker build . -t medallion\r\n\r\nIf operating behind a proxy, add the following option (replacing `<proxy>` with\r\nyour proxy location and port): ``--build-arg https_proxy=<proxy>``.\r\n\r\nThen run the image\r\n\r\n.. code-block:: bash\r\n\r\n    $ docker run --rm -p 5000:5000 -v <directory>:/var/taxii medallion\r\n\r\nReplace ``<directory>`` with the full path to the directory containing your\r\nmedallion configuration.\r\n\r\nGovernance\r\n----------\r\n\r\nThis GitHub public repository (\r\n**https://github.com/oasis-open/cti-taxii-server** ) was created at the request\r\nof the `OASIS Cyber Threat Intelligence (CTI) TC <https://www.oasis-open.org/committees/cti/>`__\r\nas an `OASIS TC Open Repository <https://www.oasis-open.org/resources/open-repositories/>`__ to support\r\ndevelopment of open source resources related to Technical Committee work.\r\n\r\nWhile this TC Open Repository remains associated with the sponsor TC, its\r\ndevelopment priorities, leadership, intellectual property terms, participation\r\nrules, and other matters of governance are `separate and distinct\r\n<https://github.com/oasis-open/cti-taxii-server/blob/master/CONTRIBUTING.md#governance-distinct-from-oasis-tc-process>`__\r\nfrom the OASIS TC Process and related policies.\r\n\r\nAll contributions made to this TC Open Repository are subject to open source\r\nlicense terms expressed in the `BSD-3-Clause License\r\n<https://www.oasis-open.org/sites/www.oasis-open.org/files/BSD-3-Clause.txt>`__.\r\nThat license was selected as the declared `\"Applicable License\"\r\n<https://www.oasis-open.org/resources/open-repositories/licenses>`__ when the\r\nTC Open Repository was created.\r\n\r\nAs documented in `\"Public Participation Invited <https://github.com/oasis-open/cti-taxii-server/blob/master/CONTRIBUTING.md#public-participation-invited>`__\",\r\ncontributions to this OASIS TC Open Repository are invited from all parties,\r\nwhether affiliated with OASIS or not. Participants must have a GitHub account,\r\nbut no fees or OASIS membership obligations are required. Participation is\r\nexpected to be consistent with the `OASIS TC Open Repository Guidelines and Procedures <https://www.oasis-open.org/policies-guidelines/open-repositories>`__, the open\r\nsource `LICENSE <https://github.com/oasis-open/cti-taxii-server/blob/master/LICENSE>`__\r\ndesignated for this particular repository, and the requirement for an\r\n`Individual Contributor License Agreement <https://www.oasis-open.org/resources/open-repositories/cla/individual-cla>`__\r\nthat governs intellectual property.\r\n\r\nMaintainers\r\n-----------\r\n\r\nTC Open Repository `Maintainers <https://www.oasis-open.org/resources/open-repositories/maintainers-guide>`__\r\nare responsible for oversight of this project's community development\r\nactivities, including evaluation of GitHub `pull requests <https://github.com/oasis-open/cti-taxii-server/blob/master/CONTRIBUTING.md#fork-and-pull-collaboration-model>`__\r\nand `preserving <https://www.oasis-open.org/policies-guidelines/open-repositories#repositoryManagement>`__\r\nopen source principles of openness and fairness. Maintainers are recognized and\r\ntrusted experts who serve to implement community goals and consensus design\r\npreferences.\r\n\r\nInitially, the associated TC members have designated one or more persons to\r\nserve as Maintainer(s); subsequently, participating community members may select\r\nadditional or substitute Maintainers, per `consensus agreements <https://www.oasis-open.org/resources/open-repositories/maintainers-guide#additionalMaintainers>`__.\r\n\r\nCurrent Maintainers of this TC Open Repository\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n-  `Chris Lenk <mailto:clenk@mitre.org>`__; GitHub ID: https://github.com/clenk/; WWW: `MITRE Corporation <https://www.mitre.org/>`__\r\n-  `Rich Piazza <mailto:rpiazza@mitre.org>`__; GitHub ID: https://github.com/rpiazza/; WWW: `MITRE Corporation <https://www.mitre.org/>`__\r\n-  `Emmanuelle Vargas-Gonzalez <mailto:emmanuelle@mitre.org>`__; GitHub ID: https://github.com/emmanvg/; WWW: `MITRE Corporation <https://www.mitre.org/>`__\r\n-  `Jason Keirstead <mailto:Jason.Keirstead@ca.ibm.com>`__; GitHub ID: https://github.com/JasonKeirstead; WWW: `IBM <http://www.ibm.com/>`__\r\n\r\nAbout OASIS TC Open Repositories\r\n--------------------------------\r\n\r\n-  `TC Open Repositories: Overview and Resources <https://www.oasis-open.org/resources/open-repositories/>`__\r\n-  `Frequently Asked Questions <https://www.oasis-open.org/resources/open-repositories/faq>`__\r\n-  `Open Source Licenses <https://www.oasis-open.org/resources/open-repositories/licenses>`__\r\n-  `Contributor License Agreements (CLAs) <https://www.oasis-open.org/resources/open-repositories/cla>`__\r\n-  `Maintainers' Guidelines and Agreement <https://www.oasis-open.org/resources/open-repositories/maintainers-guide>`__\r\n\r\nFeedback\r\n--------\r\n\r\nQuestions or comments about this TC Open Repository's activities should be composed\r\nas GitHub issues or comments. If use of an issue/comment is not possible or\r\nappropriate, questions may be directed by email to the Maintainer(s) `listed\r\nabove <#currentMaintainers>`__. Please send general questions about Open\r\nRepository participation to OASIS Staff at repository-admin@oasis-open.org and\r\nany specific CLA-related questions to repository-cla@oasis-open.org.\r\n\r\n.. |Build_Status| image:: https://travis-ci.org/oasis-open/cti-taxii-server.svg?branch=master\r\n   :target: https://travis-ci.org/oasis-open/cti-taxii-server\r\n.. |Coverage| image:: https://codecov.io/gh/oasis-open/cti-taxii-server/branch/master/graph/badge.svg\r\n   :target: https://codecov.io/gh/oasis-open/cti-taxii-server\r\n.. |Version| image:: https://img.shields.io/pypi/v/medallion.svg?maxAge=3600\r\n   :target: https://pypi.python.org/pypi/medallion/\r\n   :alt: Version 2.0.1\r\n.. |Documentation_Status| image:: https://readthedocs.org/projects/medallion/badge/?version=latest\r\n   :target: https://medallion.readthedocs.io/en/latest/\r\n   :alt: Documentation Status\r\n\r\n\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://oasis-open.github.io/cti-documentation/",
    "keywords": "taxii taxii2 server json cti cyber threat intelligence",
    "license": "BSD",
    "maintainer": "Emmanuelle Vargas-Gonzalez",
    "maintainer_email": "emmanuelle@mitre.org",
    "name": "medallion",
    "package_url": "https://pypi.org/project/medallion/",
    "platform": "",
    "project_url": "https://pypi.org/project/medallion/",
    "project_urls": {
      "Bug Tracker": "https://github.com/oasis-open/cti-taxii-server/issues/",
      "Documentation": "https://medallion.readthedocs.io/",
      "Homepage": "https://oasis-open.github.io/cti-documentation/",
      "Source Code": "https://github.com/oasis-open/cti-taxii-server/"
    },
    "release_url": "https://pypi.org/project/medallion/2.0.1/",
    "requires_dist": [
      "flask (>=0.12.1)",
      "Flask-HTTPAuth",
      "pytz",
      "six",
      "sphinx ; extra == 'docs'",
      "sphinx-prompt ; extra == 'docs'",
      "pymongo ; extra == 'mongo'",
      "coverage ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "tox ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "A TAXII 2.1 Server implementing required endpoints",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13403767,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d2d23297488b9561d214eec935bf5ca3cbae765774d14f81232f8bdf329d0b5",
        "md5": "e08b7304bbcd0d2e5d705187e9c190ec",
        "sha256": "b2065f3ae412903904ad0aa79c3f834e47bc9c64c86606ea6ae17975c596db5f"
      },
      "downloads": -1,
      "filename": "medallion-2.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e08b7304bbcd0d2e5d705187e9c190ec",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 35454,
      "upload_time": "2020-04-03T17:07:07",
      "upload_time_iso_8601": "2020-04-03T17:07:07.419604Z",
      "url": "https://files.pythonhosted.org/packages/9d/2d/23297488b9561d214eec935bf5ca3cbae765774d14f81232f8bdf329d0b5/medallion-2.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38145d8af7619856aa83358b10a5ff897faf265ef2924bf1ca5375bf33a016b3",
        "md5": "1475f6083fa0f21cc8bb8fa5f9712456",
        "sha256": "44ffc5b37c3498cf8c961a62a0f3f6f0199e27bfb17e2b0349d8c61a5898f67a"
      },
      "downloads": -1,
      "filename": "medallion-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1475f6083fa0f21cc8bb8fa5f9712456",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29594,
      "upload_time": "2020-04-03T17:07:09",
      "upload_time_iso_8601": "2020-04-03T17:07:09.096384Z",
      "url": "https://files.pythonhosted.org/packages/38/14/5d8af7619856aa83358b10a5ff897faf265ef2924bf1ca5375bf33a016b3/medallion-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}