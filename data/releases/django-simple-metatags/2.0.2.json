{
  "info": {
    "author": "Andrey Butenko",
    "author_email": "whitespysoftware@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "======================\ndjango-simple-metatags\n======================\n\n.. image:: https://secure.travis-ci.org/whitespy/django-simple-metatags.svg\n    :target: http://travis-ci.org/whitespy/django-simple-metatags\n\n.. image:: https://badge.fury.io/py/django-simple-metatags.svg\n    :target: https://badge.fury.io/py/django-simple-metatags\n\n.. image:: https://codecov.io/gh/whitespy/django-simple-metatags/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/whitespy/django-simple-metatags\n\n.. image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n    :target: https://pycqa.github.io/isort/\n\n|\n\nThe django application allows to add title, keywords and description meta tags to site's pages.\n\nFeatures\n--------\n\n- Attaching meta tags to model instances\n- Attaching meta tags to URL paths\n- Caching\n- Integration with the django-modeltranslation application\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install django-simple-metatags\n\nConfiguration\n-------------\n\n1. Add 'metatags' to your INSTALLED_APPS:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        # ...\n        'metatags',\n    )\n\n2. Run the migrate management command:\n\n.. code:: bash\n\n    python manage.py migrate metatags\n\n3. Customize model admin classes:\n\nTo be able to attach meta tags to a model instance you should slightly adjust a model admin class.\n\nThe first way by adding the **MetaTagInline** class in inlines sequence:\n\n.. code:: python\n\n    from metatags.admin import MetaTagInline\n\n\n    class CustomModelAdmin(admin.ModelAdmin):\n        # ...\n        inlines = (MetaTagInline,)\n\nThe second way by using **MetaTagAbleMixin**:\n\n.. code:: python\n\n    from metatags.admin import MetaTagAbleMixin\n\n\n    class CustomModelAdmin(MetaTagAbleMixin, admin.ModelAdmin):\n        # ...\n\nThe third and way by using **MetaTagAbleModelAdmin**:\n\n.. code:: python\n\n    from metatags.admin import MetaTagAbleModelAdmin\n\n\n    class CustomModelAdmin(MetaTagAbleModelAdmin):\n        # ...\n\n.. warning::\n\n    Meta tags can be attached only to models that has auto-incrementing or positive integer primary key.\n\n.. note::\n\n    Also django-simple-metatags application has an own model admin class that allows to attach meta tags to URL\n    paths.\n\n4. Load the metatags template library and add the include_metatags template tag in template.\n\nAdd the include_metatags template tag with the model_instance argument to use meta tags attached to a model instance.\n\n.. code:: html\n\n    {% load metatags %}\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n        {% include_metatags object default_title='Foo' default_keywords='Foo, bar, baz' %}\n    </head>\n\n.. note::\n\n    The model_instance attribute is just an instance of arbitrary model like User, FlatPage, etc. with attached via\n    Django's admin meta tags. A variable than contains a model instance must be included in the template context.\n\nAdd the include_metatags without the model_instance argument to use meta tags attached to an URL path.\n\n.. code:: html\n\n    {% load metatags %}\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n        {% include_metatags default_title='Foo' default_keywords='Foo, bar, baz' %}\n    </head>\n\nArguments of include_metatags template tag\n------------------------------------------\n\nAll arguments are optional.\n\n**model_instance** - A model instance with attached meta tags. Defaults to **None**.\n\n**default_title** - A default title of page. Defaults to **''**.\n\n**default_keywords** - Default keywords of page. Defaults to **''**.\n\n**default_description** - Default description of page. Defaults to **''**.\n\nCaching\n-------\n\nSince version 2.0.0 application gained caching support. See settings section for more details.\n\nSettings\n--------\n\n**METATAGS_CACHE_ENABLED** - Enables meta tags caching to minimize database access. Defaults to **False**.\n\n.. note::\n\n    Django's caching system must be configured.\n\n**METATAGS_CACHE_ALIAS** - A name of cache backend used by meta tags caching feature. Defaults to **default**.\n\n**METATAGS_CACHE_TIMEOUT** - Timeout in seconds to use for meta tags caching. If value set up to **None**\ncached meta tags never expire. Defaults to **None**.\n\n.. note::\n\n    Value of **0** causes meta tags to immediately expire.\n\nManagement command\n------------------\n\n**resetmetatagscache** - Removes all cached meta tags.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whitespy/django-simple-metatags",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-simple-metatags",
    "package_url": "https://pypi.org/project/django-simple-metatags/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-simple-metatags/",
    "project_urls": {
      "Homepage": "https://github.com/whitespy/django-simple-metatags"
    },
    "release_url": "https://pypi.org/project/django-simple-metatags/2.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The django application allows to add title, keywords and description meta tags to site's pages.",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12050872,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f96f0c11c30df946c5863290383f10bbf5035753a987889d09c1aa0117d1d1c",
        "md5": "66b2459efa3cd4d810b0e787e83fa84f",
        "sha256": "221e2f27b0e961f320b5254751437b6a752f0ec9ea7bdb4b38cae3c6a88079ce"
      },
      "downloads": -1,
      "filename": "django_simple_metatags-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66b2459efa3cd4d810b0e787e83fa84f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20735,
      "upload_time": "2021-04-21T12:04:51",
      "upload_time_iso_8601": "2021-04-21T12:04:51.398299Z",
      "url": "https://files.pythonhosted.org/packages/0f/96/f0c11c30df946c5863290383f10bbf5035753a987889d09c1aa0117d1d1c/django_simple_metatags-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76b35fb173112958f3d0edc4408570cece891e2a71139b641ddd812f5039e05b",
        "md5": "0f76ffa1f00c1e9ac2da6db1429e8de6",
        "sha256": "745c41e83a33ad1e306f80d56493822731a44407b63ed7040c205d464f37ea5d"
      },
      "downloads": -1,
      "filename": "django-simple-metatags-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0f76ffa1f00c1e9ac2da6db1429e8de6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12676,
      "upload_time": "2021-04-21T12:04:53",
      "upload_time_iso_8601": "2021-04-21T12:04:53.280513Z",
      "url": "https://files.pythonhosted.org/packages/76/b3/5fb173112958f3d0edc4408570cece891e2a71139b641ddd812f5039e05b/django-simple-metatags-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}