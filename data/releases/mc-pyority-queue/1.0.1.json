{
  "info": {
    "author": "MC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Map colonies - priority queue management package\n<br />\n\n\n ## Overview\n Pyority-Queue - python priority queue package provides ability to manage queue by handle tasks statuses and report tasks liveness.\n\n <br />\n\n ##  Installation:\n\n <br />\n\nFrom PyPi\n\n```\n $ pip install mc-pyority-queue\n ```\n\n<br />\n<br />\n\n\n## Getting Started\n\n<br />\n\n*Import & Initialize*\n\n\n\n```\nfrom mc-pyority-queue.task_handler import TaskHandler\n\ntask_handler = TaskHandler('job_type', 'task_type',\n    'http://localhost:8081', 'http://localhost:8080/heartbeat', 1.0)\n```\nabove example uses TaskHanler class and initializing it follow the request params:\n\n`task_handler = TaskHandler(job_type, task_type, job_mngr_url, heartbeat_url, interval_ms, logger)`\n\n\n\n\n\n<br />\n\n* **Dequeue** \n\n```\nfrom mc-pyority-queue.task_handler import TaskHandler\n\nasync def main():\n    task_handler = TaskHandler('job_type', 'task_type',\n    'http://localhost:8081', 'http://localhost:8080/heartbeat', 1.0, logger_instance)\n\n    await task_hanlder.dequeue(interval_ms)\n\n\nloop = asyncio.get_event_loop()\ntask = loop.run_until_complete(main())\n```\n\nconsume task from the job manager service and start send heartbeat to the heartbeat service\n\n<br />\n\n* **Reject**\n\n```\n await task_hanlder.reject(job_id, task_id, is_recoverable, reason)\n```\nreject handle error by stop sending task's heartbeat and handle task's status - depends if task is recoverable or not.\n\n<br />\n\n* **ack**\n\n```\nawait task_hanlder.ack(job_id, task_id)\n```\nack handle completed task - stops sending task's heartbeat and handle complete task status\n\n<br />\n\n* **update_progress**\n\n```\nawait task_hanlder.update_progress(job_id, task_id, percentage)\n```\nhandle task progress - sends job manager updated percentage on progress \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MapColonies/pyority-queue.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mc-pyority-queue",
    "package_url": "https://pypi.org/project/mc-pyority-queue/",
    "platform": "",
    "project_url": "https://pypi.org/project/mc-pyority-queue/",
    "project_urls": {
      "Homepage": "https://github.com/MapColonies/pyority-queue.git"
    },
    "release_url": "https://pypi.org/project/mc-pyority-queue/1.0.1/",
    "requires_dist": [
      "wheel",
      "aiohttp",
      "setuptools (~=50.3.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Map colonies priority queue management service for records",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11259691,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1658649bebdc57fa38dbccd05a408432d3fd230992f827b4cc6538e48b613e61",
        "md5": "bc32034e98624b287eb293553995cf64",
        "sha256": "df746b1125b7f7f7c66c9c56171b81a01c45fa4602693dc86c3646d5968847f1"
      },
      "downloads": -1,
      "filename": "mc_pyority_queue-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc32034e98624b287eb293553995cf64",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7212,
      "upload_time": "2021-08-24T06:51:13",
      "upload_time_iso_8601": "2021-08-24T06:51:13.449258Z",
      "url": "https://files.pythonhosted.org/packages/16/58/649bebdc57fa38dbccd05a408432d3fd230992f827b4cc6538e48b613e61/mc_pyority_queue-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}