{
  "info": {
    "author": "Will LaShell",
    "author_email": "wlashell@lyrical.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "=====\nLyrical Page\n=====\n\nLyrical Page is a website development app for the Django framework. Roughly based\non the original Django flatpages contrib app with ideas pulled from a variety sources\nacross the internet.\n\nThe system is designed to be modular and compliment Django's philosophy of staying out\nof the way of the developer. The code base has continued to evolve through real world use\nin different types of websites.\n\nDetailed documentation is a work in progress.\n\nQuick start\n-----------\n\n1.  Add site_content, and site_seo to your INSTALLED_APPS in the following manner:\n\n    INSTALLED_APPS = (\n    ...\n    'lyrical.site_content',\n    'lyrical.site_seo',\n    )\n\n2.  If you are using the site_seo app, add the context processor to your settings file:\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n    ...\n    'lyrical.site_seo.context_processors.site_seo',\n    )\n\n3.  Add the middleware classes to your settings file.  These middlware should be the last\n    entries in your list/tuple.\n    \n    MIDDLEWARE_CLASSES = (\n    ...\n    'lyrical.site_content.middleware.SitePageFallbackMiddleware',\n    'lyrical.site_seo.middleware.SiteSeoMiddleware',\n    )\n\n4.  Run 'python manage.py syncdb' to create new database tables and supplemental database\n    actions.\n\n5.  Log into the Django admin site and you can now add site_content site pages as you need.\n\nWill LaShell <wlashell@lyrical.net>",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.lyrical.net/projects/lyrical_page/",
    "keywords": null,
    "license": "Apache Software License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lyrical_page",
    "package_url": "https://pypi.org/project/lyrical_page/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lyrical_page/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.lyrical.net/projects/lyrical_page/"
    },
    "release_url": "https://pypi.org/project/lyrical_page/3.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Website content system based on a mashup of ideas from the Django contrib flatpage appp, joomla!, and many years of systems development..",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2527350,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32f40e5ba2f700b3b334d2468e632bf3bd262e94bcc8af950fcc4fd1f1a87eed",
        "md5": "4673a363ca60fb5ae543dda5d515cc5c",
        "sha256": "326c07d71fec7ba43d9bef8cea04211a556e9050ec9e2941457c9ad51f85e569"
      },
      "downloads": -1,
      "filename": "lyrical_page-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4673a363ca60fb5ae543dda5d515cc5c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 809952,
      "upload_time": "2014-11-17T21:03:26",
      "upload_time_iso_8601": "2014-11-17T21:03:26.173942Z",
      "url": "https://files.pythonhosted.org/packages/32/f4/0e5ba2f700b3b334d2468e632bf3bd262e94bcc8af950fcc4fd1f1a87eed/lyrical_page-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}