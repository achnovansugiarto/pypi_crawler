{
  "info": {
    "author": "Adam Johnson",
    "author_email": "me@adamj.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "django-settings-file\n====================\n\n.. image:: https://img.shields.io/travis/adamchainz/django-settings-file/master.svg\n        :target: https://travis-ci.org/adamchainz/django-settings-file\n\n.. image:: https://img.shields.io/pypi/v/django-settings-file.svg\n        :target: https://pypi.python.org/pypi/django-settings-file\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n\nLet Django use settings from an arbitrary Python file instead of an importable module.\n\nAs per `James Pic's idea posted on the django-developers mailing list\n<https://groups.google.com/forum/#!msg/django-developers/mzkwaGQtpOk/LZkxLUMwBQAJ>`_.\n\nRequirements\n------------\n\nPython 3.5 to 3.8 and Django 1.11 to 3.0 are supported.\n\nUsage\n-----\n\n1. Install with ``pip install django-settings-file``.\n\n2. Edit your ``manage.py`` and ``wsgi.py`` to swap out Django's default logic for setting ``DJANGO_SETTINGS_MODULE`` to\n   instead do:\n\n   .. code-block:: python\n\n       import django_settings_file\n       django_settings_file.setup()\n\n3. Add ``os.environ.setdefault('DJANGO_SETTINGS_FILE', '/path/to/default.py')`` before the ``setup()`` call, unless you\n   can be sure ``DJANGO_SETTINGS_FILE`` will always be defined in your environment. You might need to figure out the\n   path relative to your ``manage.py`` with some ``os.path`` manipulation.\n\n4. Run it! If ``DJANGO_SETTINGS_MODULE`` is defined, it will raise a ``DjangoSettingsFileError`` with a message about\n   how only ``DJANGO_SETTINGS_FILE`` is allowed now. If ``DJANGO_SETTINGS_FILE`` is not defined, it will also fail with\n   a ``DjangoSettingsFileError`` with a message about defining it. Otherwise Django should start with the settings!\n\nHow it works\n------------\n\n``django-settings-file`` imports the contents of the specified file using the import machinery available on your Python\nversion (different logic for 2 and 3) and copies it contents into its own module, which Django sees as the settings\nfile defined via the traditional ``DJANGO_SETTINGS_MODULE``. Nothing about Django is really touched, it's just a\nhacky module.\n\nCaveats\n-------\n\n* If the Python file defined by ``DJANGO_SETTINGS_FILE`` tries to do any imports, the directory the file is in will not\n  be on ``PYTHONPATH``, so the author of the settings file might get some surprises.\n* Additionally, you might experience other problems from loading a file whilst it's not on ``PYTHONPATH``.\n* If you want your settings file to extend another one, it will probably find it easiest to ``import`` the base one\n  from a location on ``PYTHONPATH``, otherwise it too will have to do use the same import 'hacks' to load the default\n  settings.\n* File paths are not portable between operating systems, so you may need logic to support both Unix and Windows at\n  once.\n* File paths are not portable between ``.py`` and ``.pyc`` files. In most cases this means a ``.pyc`` file will not be\n  used for settings since it can't be guaranteed to be there, slightly slowing down import time.\n* ``DJANGO_SETTINGS_MODULE`` and ``DJANGO_SETTINGS_FILE`` can't both be used by the same project, since the module is\n  required for the file-based logic. You might be able to allow them both with extra logic, pull requests accepted.\n* ``¯\\_(ツ)_/¯`` - this is kind of unknown territory, this library has not been tested in any real project, just with\n  the example project in the test folder.\n\nHistory\n=======\n\n2.1.0 (2019-12-19)\n------------------\n\n* Update Python support to 3.5-3.8, as 3.4 has reached its end of life.\n* Converted setuptools metadata to configuration file. This meant removing the\n  ``__version__`` attribute from the package. If you want to inspect the\n  installed version, use\n  ``importlib.metadata.version(\"django-settings-file\")``\n  (`docs <https://docs.python.org/3.8/library/importlib.metadata.html#distribution-versions>`__ /\n  `backport <https://pypi.org/project/importlib-metadata/>`__).\n* Tested with Django 3.0. No changes were required for compatibility.\n\n2.0.1 (2019-04-28)\n------------------\n\n* Tested with Django 2.2. No changes were required for compatibility.\n\n2.0.0 (2019-02-02)\n------------------\n\n* Drop Python 2 support, only Python 3.4+ is supported now.\n* Drop Django 1.8, 1.9, and 1.10 support. Only Django 1.11+ is supported now.\n\n1.0.0 (2017-04-14)\n------------------\n\n* First version, supporting ``DJANGO_SETTINGS_FILE`` instead of\n  ``DJANGO_SETTINGS_MODULE``\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-settings-file",
    "keywords": "Django",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-settings-file",
    "package_url": "https://pypi.org/project/django-settings-file/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-settings-file/",
    "project_urls": {
      "Changelog": "https://github.com/adamchainz/django-settings-file/blob/master/HISTORY.rst",
      "Homepage": "https://github.com/adamchainz/django-settings-file"
    },
    "release_url": "https://pypi.org/project/django-settings-file/2.1.0/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": ">=3.5",
    "summary": "Let Django use settings from an arbitrary Python file instead of an importable module",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16015415,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59c40e9abb0d3d69ba87a68ce11d67c1b5a155793f90d8b278fad66ae8171901",
        "md5": "c12c2b5cc4ef026a9650abfbf54c3cea",
        "sha256": "80f6e0d3e77d485772033435f96668764ab468556c1ad64ad50853bc40189126"
      },
      "downloads": -1,
      "filename": "django_settings_file-2.1.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "c12c2b5cc4ef026a9650abfbf54c3cea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 4825,
      "upload_time": "2019-12-19T22:55:19",
      "upload_time_iso_8601": "2019-12-19T22:55:19.267849Z",
      "url": "https://files.pythonhosted.org/packages/59/c4/0e9abb0d3d69ba87a68ce11d67c1b5a155793f90d8b278fad66ae8171901/django_settings_file-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "736969c3195030b2a1004d136684bfe181a02d73891f556d717daa23845d1eac",
        "md5": "8a09de8192262bba71e39b55659cd789",
        "sha256": "546ba4eb71b88cbf97402560737884a12e0cba8513bbbd85d8f795c4ae1f2b0e"
      },
      "downloads": -1,
      "filename": "django-settings-file-2.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "8a09de8192262bba71e39b55659cd789",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 6201,
      "upload_time": "2019-12-19T22:55:21",
      "upload_time_iso_8601": "2019-12-19T22:55:21.199308Z",
      "url": "https://files.pythonhosted.org/packages/73/69/69c3195030b2a1004d136684bfe181a02d73891f556d717daa23845d1eac/django-settings-file-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}