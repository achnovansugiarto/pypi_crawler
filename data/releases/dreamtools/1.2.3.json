{
  "info": {
    "author": "Thomas Cokelaer",
    "author_email": "cokelaer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "############################################################################\r\nDREAMTools\r\n############################################################################\r\n\r\n.. image:: https://badge.fury.io/py/dreamtools.svg\r\n    :target: https://pypi.python.org/pypi/dreamtools\r\n\r\n.. image:: https://secure.travis-ci.org/dreamtools/dreamtools.png\r\n    :target: http://travis-ci.org/dreamtools/dreamtools\r\n\r\n.. image:: https://coveralls.io/repos/dreamtools/dreamtools/badge.png?branch=master\r\n   :target: https://coveralls.io/r/dreamtools/dreamtools?branch=master\r\n\r\n.. image:: https://badge.waffle.io/dreamtools/dreamtools.png?label=ready&title=ready\r\n   :target: https://waffle.io/dreamtools/dreamtools\r\n   \r\n.. image:: https://zenodo.org/badge/18543/dreamtools/dreamtools.svg\r\n   :target: https://zenodo.org/badge/latestdoi/18543/dreamtools/dreamtools\r\n\r\n:Note: DREAMTools is compatible for Python 2.7, 3.3, 3.4, 3.5\r\n:Note about coverage: We do not run the entire test suite on Travis, which\r\n                      reports a 40% test coverage. Note however, that the actual\r\n                      test coverage is about 80%.\r\n:Contributions: Please join https://github.com/dreamtools/dreamtools and share your notebooks https://github.com/dreamtools/dreamtools/notebooks\r\n\r\n:Online documentation: `On pypi website <http://pythonhosted.org/dreamtools/>`_\r\n:Issues and bug reports: `On github <https://github.com/dreamtools/dreamtools/issues>`_\r\n:How to cite: Cokelaer T, Bansal M, Bare C et al. DREAMTools: a Python \r\n    package for scoring collaborative challenges [version 1; referees: \r\n    awaiting peer review] F1000Research 2015, 4:1030 \r\n    (doi: 10.12688/f1000research.7118.1)\r\n    `F1000 link <http://f1000research.com/articles/4-1030/v1>`_\r\n\r\n\r\n.. contents::\r\n\r\nOverview\r\n----------------\r\n\r\nMotivation\r\n~~~~~~~~~~~~\r\n\r\n**DREAMTools** aims at sharing code used in the scoring of `DREAM <http://dreamchallenges.org>`_ challenges that pose fundamental questions about system biology and translational medicine.\r\n\r\nThe main goals of **DREAMTools** are to provide:\r\n\r\n#. scoring functions equivalent to those used during past DREAM challenges for **end-users** via a standalone application (called **dreamtools**).\r\n#. a common place for **developers** involved in the DREAM challenges to share code\r\n\r\n**DREAMTools** does not provide code related to aggregation,\r\nleaderboards, or more complex analysis even though such code\r\nmay be provided (e.g., in D8C1 challenge). \r\n\r\nNote that many scoring functions requires data hosted on `Synapse <www.synapse.org>`_ . We therefore strongly encourage you to **register to Synapse**. Depending on the challenge, you may be requested to accept terms of agreements to use the data. \r\n\r\nUsage\r\n~~~~~~~~~\r\n**DREAMTools** can be used by developers as a Python package::\r\n\r\n    >>> from dreamtools import D6C3\r\n    >>> s = D6C3()\r\n    >>> s.score(s.download_template())\r\n    {'results': chi2            53.980741\r\n    R-square        34.733565\r\n    Spearman(Sp)     0.646917\r\n    Pearson(Cp)      0.647516\r\n    dtype: float64}\r\n\r\nA standalone application can be used from a terminal. The executable is called **dreamtools**. Here is an example::\r\n\r\n    dreamtools --challenge D6C3 --submission path_to_a_file\r\n\r\nSee below for more details about the usage of the standalone application.\r\n\r\n\r\n\r\n\r\nInstallation\r\n---------------\r\n\r\nAlthough there is a dedicated documentation related to the http://pythonhosted.org/dreamtools/installation.html#installation  of **DREAMTools** (in doc/source/installation.rst), we provide here below \r\na brief summary.\r\n\r\n\r\nFamiliar with Python ecosystem ?\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nIf you are familiar with Python and the **pip** application and your system \r\nis already configured (compilers, development libraries available)), these \r\ntwo commands should install **DREAMTools** and its dependencies (in unix or\r\nwindows terminal)::\r\n\r\n    pip install cython\r\n    pip install dreamtools\r\n\r\n\r\nIf you are new to Python\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nIf you are not familiar with Python, or have issues with the previous method\r\n(e.g., compilation failure), or do not have root access, we would recommend to\r\nuse the `Anaconda <https://www.continuum.io/downloads>`_ solution.\r\n\r\nAnaconda is a free Python distribution. It includes most popular Python packages\r\nfor science and data analysis. Anaconda will install most of the software \r\nrequired by **DREAMTools**. Besides, since it does not require root access, it \r\nshould not interfere with your system.\r\n\r\nYou will need to choose between 2 versions of Python (2.X or 3.5). Since **DREAMTools** is \r\ncompatible with Python 2.7 and 3.5, the version should not matter. **Note, however, that \r\nfor Windows' users, we would recommend to use Python 2.7** (see http://pythonhosted.org/dreamtools/installation.html#installation for explanations).\r\n\r\n\r\nHere below are 4 steps checked on Unix and Windows platforms. \r\n\r\n**For Mac and Linux users:**\r\n\r\n#. Download Anaconda\r\n#. Open an Anaconda shell (or a unix shell)\r\n#. Download `conda_install.sh <https://raw.githubusercontent.com/dreamtools/dreamtools/master/conda_install.sh>`_ \r\n#. Execute the script (e.g. for Python2)::\r\n\r\n    sh conda_install.sh python=2\r\n\r\nSimilarly for **For Windows**:\r\n\r\n#. Download Anaconda2 (Python2) for windows\r\n#. Open an Anaconda prompt (from the Start->All program->Anaconda2->Anaconda\r\n   Prompt\r\n#. Download `conda_install.bat <https://raw.githubusercontent.com/dreamtools/dreamtools/master/conda_install.bat>`_ \r\n#. Execute the script::\r\n\r\n    conda_install.bat\r\n\r\nIf there is an issue, please visit the http://pythonhosted.org/dreamtools/installation.html#installation where details about the installation scripts can be found.\r\n\r\n\r\nInstallation from source\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe command::\r\n\r\n    pip install dreamtools\r\n    \r\ninstall the latest release of **DREAMTools**. If you prefer to use the source code, you can also get the github repository and install **DREAMTools** as \r\nfollows (dependencies such as numpy or scipy will need to be compiled if \r\nnot found)::\r\n\r\n\r\n   git clone git@github.com:dreamtools/dreamtools.git\r\n   cd dreamtools\r\n   python setup.py install\r\n\r\n\r\n\r\nThe **dreamtools** executable\r\n------------------------------------------\r\n\r\n**DREAMTools** provides functions to obtain the template and gold \r\nstandard(s) used in a given challenge. Some challenge have restrictions \r\nof data access and require the user to accept conditions of use. Such data \r\nare stored on http://www.synapse.org. You will need to create a \r\nlogin/password on www.synapse.org website. The first time you run a \r\nchallenge within DREAMTools, files will be downloaded from Synapse. You \r\nmay be asked to accept some conditions of use (e.g. D8C1 challenge) \r\ndirectly on the website. \r\n\r\nFor users, **DREAMTools** package provides an executable called \r\n**dreamtools**, which should be installed automatically. \r\n\r\nTo obtain some help, type::\r\n\r\n    dreamtools --help\r\n\r\nYou should see a list of challenges: D2C1,D2C3, D2C3,... Those are aliases to \r\nDREAM challenges. Information about a challenge can be (in general) obtained\r\nfrom the Synapse page of the challenge using the --onweb option::\r\n\r\n    dreamtools --challenge D6C3 --onweb\r\n\r\nBrief information can also be printed in the terminal as follows::\r\n\r\n    dreamtools --challenge D6C3 --info\r\n\r\nNext, you may want to score one of your submission. We provide access to\r\ntemplates for each challenge. For instance::\r\n\r\n    dreamtools --challenge D6C3 --download-template\r\n\r\nThis command prints the location of the template on your system. Copy that file\r\nin local/temporary place. Now that you have a copy of the template, you can fill \r\nits contents with your own data and score it (let us assume it is called D6C3_template.txt)::\r\n\r\n    dreamtools --challenge D6C3 --submission D6C3_template.txt\r\n\r\nThis command should print some information and the score of the submission \r\nfor instance for the example above, we get the following results::\r\n\r\n    {'results': chi2            53.980741\r\n     R-square        34.733565\r\n     Spearman(Sp)     0.646917\r\n     Pearson(Cp)      0.647516\r\n     dtype: float64}\r\n\r\nAll outputs will contain a json-like output. The synapse page of the challenge\r\nshould give information about the scoring methodology.\r\n\r\nNote that some challenges (like the D8C1 challenge) have sub-challenges. For instance in D8C1, there are 4 sub-challenges names (e.g., SC1A). So, you would need to be more specific and to provide the name of a sub-challenge. For instance:: \r\n\r\n    dreamtools --challenge D8C1 --download-template --sub-challenge SC1A\r\n\r\n.. note:: In D8C1, you will also need to accept the conditions of use \r\n    of the data on a Synapse page, which should pop up.\r\n\r\nThe sub-challenge names can be obtained using --info option (see here above). Similarly to the simpler case shown above, you can now score that submission as follows::  \r\n\r\n    dreamtools --challenge D8C1 --sub-challenge SC1A \\\r\n        --submission D8C1_example.zip\r\n\r\nAgain, you should get an output with the results::\r\n\r\n     Solution for alphabeta-Network.zip in challenge d8c1 (sub-challenge sc1a) is :\r\n     meanAUROC: 0.803628919403\r\n\r\n\r\nAvailable challenges\r\n-------------------------\r\n\r\n**DREAMTools** includes about 80% of DREAM challenges from DREAM2 to DREAM9.5\r\nPlease visit `F1000 link <http://f1000research.com/articles/4-1030/v1>`_  (Table 1).\r\n\r\n\r\nGold standards\r\n-----------------\r\n\r\nAll gold standards are retrieved automatically. You can obtain the location of a gold standard file as\r\nfollows::\r\n\r\n    dreamtools --challenge D6C3 --download-goldstandard\r\n\r\nIssues\r\n-----------\r\n\r\nPlease fill bug report in https://github.com/dreamtools/dreamtools/issues\r\n\r\n\r\nContributions\r\n---------------\r\n\r\nPlease join https://github.com/dreamtools/dreamtools\r\n\r\n\r\nFor developers\r\n----------------\r\n\r\nPlease see doc/source/developers.rst\r\n\r\nCredits\r\n-----------\r\n\r\nPlease see doc/source/credits.rst\r\n\r\n\r\nMore documentation ?\r\n------------------------\r\n\r\nPlease see the doc directory, which is processed and posted on \r\n`pypi website <http://pythonhosted.org/dreamtools/>`_ with each release.",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/dreamtools/",
    "download_url": "http://pypi.python.org/pypi/dreamtools",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dreamtools/dreamtools",
    "keywords": "DREAM challenges,DREAM,System Biology,Leaderboard,ROC,scoring,synapse,statistics",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dreamtools",
    "package_url": "https://pypi.org/project/dreamtools/",
    "platform": "Linux,Unix,MacOsX,Windows",
    "project_url": "https://pypi.org/project/dreamtools/",
    "project_urls": {
      "Download": "http://pypi.python.org/pypi/dreamtools",
      "Homepage": "https://github.com/dreamtools/dreamtools"
    },
    "release_url": "https://pypi.org/project/dreamtools/1.2.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Scoring functions for the DREAM / SAGE challenges",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2016249,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "965dde1205bd539641d19f1f21ca41124eb06d9530a70d1aa1896af4c4794d77",
        "md5": "d50b8a3c573881f4b3ec7a7146c06c2c",
        "sha256": "04111939b4fd18f8da31dad61959b638ed5389cd3332e4fdedf3508b8f3362e7"
      },
      "downloads": -1,
      "filename": "dreamtools-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d50b8a3c573881f4b3ec7a7146c06c2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3344828,
      "upload_time": "2016-01-18T20:51:49",
      "upload_time_iso_8601": "2016-01-18T20:51:49.455306Z",
      "url": "https://files.pythonhosted.org/packages/96/5d/de1205bd539641d19f1f21ca41124eb06d9530a70d1aa1896af4c4794d77/dreamtools-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}