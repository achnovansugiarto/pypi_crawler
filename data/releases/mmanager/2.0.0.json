{
  "info": {
    "author": "falcon",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "ï»¿# Welcome to Modelmanager-api!\n\n## This is a api model for interacting with modelmanager.\n\n> **Note:**\n>\n> - Example files are are in example_script directory.\n> - Example assets are in api_assets directory.\n> - It contains scripts for different actions(Add, Update, Delete).\n\n---\n\n## **Example Codes**\n\n## Add Project\n\n```python\nfrom mmanager.mmanager import Usecase\nsecret_key = 'Secret-Key'\nurl = 'URL'\ndata = {\n\t\t\"name\": \"UsecaseName\",\n\t\t\"author\": \"AuthorName\",\n\t\t\"description\": \"UsecaseDescription\",\n\t\t\"source\": \"UsecasSource\",\n\t\t\"contributor\": \"UsecaseContributor\",\n\t\t\"image\": 'image.jpg' , #path to image file\n\t\t\"banner\": 'banner.jpg' , #path to banner file\n\t}\nUsecase(secret_key, url).post_usecase(data)\n```\n\n---\n\n## Update Project\n\n```python\nfrom mmanager.mmanager import Usecase\nsecret_key = 'Secret-Key'\nurl = 'URL'\nproject_id = Project_id #use model_id number to update\ndata = {\n\t\t\"author\": \"AuthorName\",\n\t\t\"description\": \"UsecaseDescription\",\n\t\t\"source\": \"UsecasSource\",\n\t\t\"contributor\": \"UsecaseContributor\",\n\t\t\"image\": 'image.jpg' , #path to image file\n\t\t\"banner\": 'banner.jpg' , #path to banner file\n\t}\nUsecase(secret_key, url).patch_usecase(data, project_id)\n```\n\n---\n\n## Delete Project\n\n```python\nfrom mmanager.mmanager import Usecase\nsecret_key = 'Secret-Key'\nurl = 'URL'\nproject_id = Project_id #use project_id number to delete\nUsecase(secret_key,url).delete_usecase(project_id)\n```\n\n---\n\n---\n\n## Add Model, Dataset OnPrem\n\n```python\nfrom mmanager.mmanager import Model\nsecret_key = 'Secret-Key'\nurl = 'URL'\nmodel_data = {\n    \"project\": \"<project-id>\", #project-id\n    \"transformerType\": \"Classification\",\n    \"algorithmType\": \"Xgboost\",\n    \"modelFramework\": \"other\",\n    \"weight\": \"\",\n    \"datasetinsertionType\": \"Manual\", #To upload datasets and model form local to server\n    \"training_dataset\": \"%s/model_assets/train.csv\" % path, #path to csv file\n    \"pred_dataset\": \"%s/model_assets/pred.csv\" % path, #path to csv file\n    \"actual_dataset\": \"%s/model_assets/truth.csv\" % path, #path to csv file\n    \"test_dataset\": \"%s/model_assets/test.csv\" % path, #path to csv file\n    \"model_image_path\": \"%s/model_assets/model_image.jpg\" % path, #path to model image file\n    \"model_summary_path\": \"%s/model_assets/summary.json\" % path,\n    \"model_file_path\": \"%s/model_assets/model.h5\" % path, #path to model file\n    \"scoring_file_path\": \"\",\n    \"target_column\": \"label\",\n    \"note\": \"\",\n    \"model_area\": \"apiUpload\",\n    \"model_dependencies\": \"\",\n    \"model_usage\": \"\",\n    \"model_adjustment\": \"\",\n    \"model_developer\": \"\",\n    \"model_approver\": \"\",\n    \"model_maintenance\": \"\",\n    \"documentation_code\": \"\",\n    \"implementation_plateform\": \"\",\n    \"error_traceback\": \"\",\n    \"distribution_error\": False,\n    \"current_date\": \"\",\n    \"production\": \"observation\",\n    \"regulations\": \"\",\n    \"score_data\": \"\",\n    \"sweetviz\": \"\",\n    \"error_traceback_distribution\": \"\",\n    \"binarize_scoring_flag\": False, #True if binary data\n    \"model_input_data\": \"\",\n    \"modelscore_compute\": False,\n\t\"amlCred\": \"\",\n}\nml_options = {\n    \"credPath\": \"config.json\",\n    \"datasetUploadPath\": \"api_upload_test\",\n    \"fetchOption\": \"\", #Not required\n    \"modelName\": \"model-name\",\n    \"dataPath\": \"\", #Not required\n    \"registryOption\": [\"Model\"], #To register model, add [\"Model\", \"Dataset\"] to register both\n}\nModel(secret_key, url).post_model(model_data, ml_options)\n```\n\n## Add Model, Dataset From Azure ML\n\n```python\nfrom mmanager.mmanager import Model\nsecret_key = 'Secret-Key'\nurl = 'URL'\nmodel_data = {\n    \"project\": \"<project-id>\", #project-id\n    \"transformerType\": \"Classification\",\n    \"algorithmType\": \"Xgboost\",\n    \"modelFramework\": \"other\",\n    \"weight\": \"\",\n    \"datasetinsertionType\": \"AzureML\",\n    \"training_dataset\": \"\",\n    \"pred_dataset\": \"\",\n    \"actual_dataset\": \"\",\n    \"test_dataset\": \"\",\n    \"model_image_path\": \"\",\n    \"model_summary_path\": \"\",\n    \"model_file_path\": \"\",\n    \"scoring_file_path\": \"\",\n    \"target_column\": \"label\",\n    \"note\": \"\",\n    \"model_area\": \"apiUpload\",\n    \"model_dependencies\": \"\",\n    \"model_usage\": \"\",\n    \"model_adjustment\": \"\",\n    \"model_developer\": \"\",\n    \"model_approver\": \"\",\n    \"model_maintenance\": \"\",\n    \"documentation_code\": \"\",\n    \"implementation_plateform\": \"\",\n    \"error_traceback\": \"\",\n    \"distribution_error\": False,\n    \"current_date\": \"\",\n    \"production\": \"observation\",\n    \"regulations\": \"\",\n    \"score_data\": \"\",\n    \"sweetviz\": \"\",\n    \"error_traceback_distribution\": \"\",\n    \"binarize_scoring_flag\": False, #True if binary data\n    \"model_input_data\": \"\",\n    \"modelscore_compute\": False,\n    \"amlCred\": \"\",\n}\nml_options = {\"credPath\": \"config.json\",\n              \"datasetUploadPath\": \"\",\n              \"fetchOption\": [\"Model\"], #To fetch model, add [\"Model\", \"Dataset\"] to fetch both model and datasets\n              \"modelName\": \"model-name\",\n              \"dataPath\": \"dataset-name\",\n              \"registryOption\": \"\",\n              }\nModel(secret_key, url).post_model(model_data, ml_options)\n```\n\n---\n\n## Update Model\n\n```python\nfrom mmanager.mmanager import Model\nsecret_key = 'Secret-Key'\nurl = 'URL'\nmodel_id = Model_id #use model_id number to update\ndata = {\n\t\t\"transformerType\": \"logistic\",\n\t\t\"target_column\": \"id\",\n\t\t\"note\": \"api script Model\",\n\t\t\"model_area\": \"api script Model\",\n\t\t\"model_dependencies\": \"api script Model\",\n\t\t\"model_usage\": \"api script Model\",\n\t\t\"model_audjustment\": \"api script Model\",\n\t\t\"model_developer\": \"api script Model\",\n\t\t\"model_approver\": \"api script Model\",\n\t\t\"model_maintenance\": \"api script Model\",\n\t\t\"documentation_code\": \"api script Model\",\n\t\t\"implementation_plateform\": \"api script Model\",\n\t\t\"training_dataset\": \"train.csv\", #path to csv file\n\t\t\"pred_dataset\": \"submissionsample.csv\", #path to csv file\n\t\t\"actual_dataset\": \"truth.csv\", #path to csv file\n\t\t\"test_dataset\": \"test.csv\", #path to csv file\n\t\t\"model_file_path\":\"\",\n\t    \"scoring_file_path\":\"\",\n\t\t\"model_image_path\":\"\" ,\n    \t\"model_summary_path\":\"\",\n\t}\nModel(secret_key, url).patch_model(data, model_id)\n```\n\n---\n\nDelete Model\n\n---\n\n```python\nfrom mmanager.mmanager import Model\nsecret_key = 'Secret-Key'\nurl = 'URL'\nmodel_id = Model_id #use model_id number to delete\nModel(secret_key,url).delete_model(model_id)\n```\n\n---\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmanager",
    "package_url": "https://pypi.org/project/mmanager/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmanager/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mmanager/2.0.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Modelmanager API With Azure ML Integration",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15644889,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "672aa40639723cf4d1d4d03e7143966bab53f253b47b693931b27b6894244351",
        "md5": "ec96025796d4fef32ea8f81af87b1475",
        "sha256": "12081068c809da0385ff45e31eb8a8d50a07511c4990bb5437dafde2c6f6a96e"
      },
      "downloads": -1,
      "filename": "mmanager-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec96025796d4fef32ea8f81af87b1475",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 91523955,
      "upload_time": "2022-01-10T17:05:47",
      "upload_time_iso_8601": "2022-01-10T17:05:47.243666Z",
      "url": "https://files.pythonhosted.org/packages/67/2a/a40639723cf4d1d4d03e7143966bab53f253b47b693931b27b6894244351/mmanager-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}