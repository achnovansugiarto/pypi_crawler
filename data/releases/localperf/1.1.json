{
  "info": {
    "author": "Timoth√© Boulet",
    "author_email": "timothe.boulet0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Local Python performance measurement\n\nThis project aims to create an easy-to-use package for measuring the performance of python in any machine, in terms of CPU, multiprocessing and GPU (pytorch with CUDA), and also verify that the GPU is used.\n\n# Installation\n\nInstall the requirements in requirements.txt, then install from source:\n\n```bash\npip install localperf\n```\n\n\n# Usage\n\nYou can measure the performance of your machine in terms of CPU, multiprocessing and GPU (pytorch and tensorflow) by running the commands below.\n\nRelevant arguments for visualization are:\n- `--plot` : plot the results (default False)\n- `--log_dir` [log directory] : directory where to save the results (default no logging)\n- `--image_dir` [image directory]: directory where to save the images (default no image saving)\n- `--no-progess` : do not show progress bar (default behavior is to show)\n\n# CPU\n\n<p align=\"center\">\n  <img src=\"assets/cpu.png\" alt=\"CPU performances\" width=\"60%\"/>\n</p>\n\nTo measure the performance of your machine in terms of CPU, run the following command:\n```bash\npython3 -m localperf.cpu\n```\n\nRelevant arguments for the benchmark are:\n- `log_n_data` [log n data] : maximum number of data to do the benchmark (in log10 scale)\n- `n_measures` [n measures] : number of measures to do for each data size\n\n# Multiprocessing\n\n<p align=\"center\">\n  <img src=\"assets/multiprocessing.png\" alt=\"Multiprocessing performances\" width=\"60%\"/>\n</p>\n\nTo measure the performance of your machine in terms of multiprocessing, run the following command:\n```bash\npython3 -m localperf.multiprocessing\n```\n\nRelevant arguments for the benchmark are:\n- `log_n_data` [log n data] : maximum number of data to do the benchmark (in log10 scale)\n- `log2_n_process` [log2 n process] : maximum number of processes to do the benchmark (in log2 scale)\n- `n_measures` [n measures] : number of measures to do for each data size\n\n# GPU (pytorch)\n\n## Install CUDA for pytorch\n\n<p align=\"center\">\n  <img src=\"assets/gpu_torch.png\" alt=\"GPU with torch performances\" width=\"60%\"/>\n</p>\n\nFirst, install pytorch with CUDA following the instructions on the [pytorch website](https://pytorch.org/get-started/locally/). \nIf this code returns `True`, it means pytorch and CUDA are installed and its a good sign your GPU is used but this is not a guarantee:\n```python\nimport torch\nprint(torch.cuda.is_available())\n```\nYou may use the command `nvidia-smi` to check if your GPU is recognized by the system.\n\n    nvidia-smi\n<p align=\"center\">\n  <img src=\"assets/nvidia_smi.png\" alt=\"nvidia-smi sceenshot\" width=\"60%\"/>\n</p>\nThis give you information about each GPU recognized by the system : the name, the VRAM used. You can run this command in a separate terminal to see the GPU usage during your code :\n\n    watch -n 0.1 nvidia-smi\n\n## Run the benchmark\n\nTo measure the performance of your machine in terms of GPU, run the following command:\n```bash\npython3 -m localperf.gpu_torch\n```\nRelevant arguments for the benchmark are:\n- `log_n_data` [log n data] : maximum number of data to do the benchmark (in log10 scale)\n- `n_measures` [n measures] : number of measures to do for each data size\n- `n_measures_gpu` [n measures gpu] : number of measures to do for each data size, on the GPU. If not specified, the same number of measures as on the CPU is done.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tboulet/Local-Python-Performance",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "localperf",
    "package_url": "https://pypi.org/project/localperf/",
    "platform": null,
    "project_url": "https://pypi.org/project/localperf/",
    "project_urls": {
      "Homepage": "https://github.com/tboulet/Local-Python-Performance"
    },
    "release_url": "https://pypi.org/project/localperf/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Measure of python performance in local.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17059439,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea36cd663b61816a46c75695d3b9d620269df041a73875d1b4fabfc8bc5d50e5",
        "md5": "957e5c27feb247d46dca312a4c289d31",
        "sha256": "cc5f2d0da472d9033ae006687ef7c5c5d39c6d405f8f4d6d912908e4c254cf61"
      },
      "downloads": -1,
      "filename": "localperf-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "957e5c27feb247d46dca312a4c289d31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19030,
      "upload_time": "2023-01-12T23:51:55",
      "upload_time_iso_8601": "2023-01-12T23:51:55.420659Z",
      "url": "https://files.pythonhosted.org/packages/ea/36/cd663b61816a46c75695d3b9d620269df041a73875d1b4fabfc8bc5d50e5/localperf-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97095b2a19d3b0d957cb087bcd8c1adbee2e6729a21c93189b286ea2b89ff4d3",
        "md5": "537576dd3b3b99719a9f08e0b00973dd",
        "sha256": "be691451bfe6de362e400b15722fda6bc7fde0cf4cf149c80059dba87b23656a"
      },
      "downloads": -1,
      "filename": "localperf-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "537576dd3b3b99719a9f08e0b00973dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10448,
      "upload_time": "2023-01-12T23:51:58",
      "upload_time_iso_8601": "2023-01-12T23:51:58.397704Z",
      "url": "https://files.pythonhosted.org/packages/97/09/5b2a19d3b0d957cb087bcd8c1adbee2e6729a21c93189b286ea2b89ff4d3/localperf-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}