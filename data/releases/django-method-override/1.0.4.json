{
  "info": {
    "author": "LocalMed",
    "author_email": "pete.browne@localmed.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Django Method Override\n\nDjango middleware that overrides the HTTP method through either a `_method` form param (Ruby on Rails style) or the X-HTTP-Method-Override header.\n\n## Installation\n\n1.  Install via pip:\n\n    ```bash\n    pip install django-method-override\n    ```\n\n2.  Add the `MethodOverrideMiddleware` **after** Django's `CsrfViewMiddleware`:\n\n    ```python\n    MIDDLEWARE = (\n        # ...\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'method_override.middleware.MethodOverrideMiddleware',\n        # ...\n    )\n    ```\n\n3.  Add `method_override` to your `INSTALLED_APPS`:\n\n    ```python\n    INSTALLED_APPS = (\n        # ...\n        'method_override',\n    )\n    ```\n\n## Usage\n\nUse the provided template tag in your form to add the desired form:\n\n```html+django\n{% load method_override %}\n<form action=\"{% url 'post-detail' %}\" method=\"POST\">\n    {% csrf_token %}\n    {% method_override 'PUT' %}\n</form>\n```\n\nNow, you may use `put` in you Class-based views. Django Method Override will even copy over the form data to `request.PUT`:\n\n```python\nclass PostView(View):\n    def put(self, request):\n        form = Form(request.PUT)\n        # ...\n```\n\nThe X-HTTP-Method-Override header is also supported. So for the above view, this will work too:\n\n```javascript\n$.ajax({\n    headers: { \"X-HTTP-Method-Override\": \"PUT\" },\n    type: \"POST\",\n    url: \"http://localhost:8000/posts/1/\"\n    // ...\n});\n```\n\n## Configuration\n\nDjango Method Override can be customized from your Django `settings.py` file:\n\n### `METHOD_OVERRIDE_ALLOWED_HTTP_METHODS`\n\nA list of the allowed methods for overriding. Defaults to:\n\n```python\n['GET', 'HEAD', 'PUT', 'POST', 'DELETE', 'OPTIONS', 'PATCH']\n```\n\n### `METHOD_OVERRIDE_PARAM_KEY`\n\nThe form param key used to override the method. Defaults to `'_method'`.\n\n### `METHOD_OVERRIDE_HTTP_HEADER`\n\nThe HTTP header to check. Defaults to `'HTTP_X_HTTP_METHOD_OVERRIDE'`\n\n### `METHOD_OVERRIDE_INPUT_TEMPLATE`\n\nThe string tempalte used to render the input for the form param. It will based to kwargs, `name` and `value`. Defaults to:\n\n```python\n'<input type=\"hidden\" name=\"{name}\" value=\"{value}\">'\n```\n\n## Copyright\n\nCopyright (c) 2013 [LocalMed, Inc.](http://www.localmed.com/). See LICENSE for details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/localmed/django-method-override",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-method-override",
    "package_url": "https://pypi.org/project/django-method-override/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-method-override/",
    "project_urls": {
      "Homepage": "https://gitlab.com/localmed/django-method-override"
    },
    "release_url": "https://pypi.org/project/django-method-override/1.0.4/",
    "requires_dist": [
      "django (>=2.0)"
    ],
    "requires_python": "",
    "summary": "Django Middleware for HTTP Method Override Form Params & Header",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6404186,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cdcfe63aa3cd22217c00b004953cb8049d1d0879611b7fac3638b0229b981c4",
        "md5": "060224b781c7c6cca7dff87a7b74f923",
        "sha256": "0df5f7b84b8c41a8c6dc2e487a9e5782aa969dff0991fa8d9ba61f437fbf66f4"
      },
      "downloads": -1,
      "filename": "django_method_override-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "060224b781c7c6cca7dff87a7b74f923",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5200,
      "upload_time": "2020-01-06T20:13:37",
      "upload_time_iso_8601": "2020-01-06T20:13:37.993722Z",
      "url": "https://files.pythonhosted.org/packages/0c/dc/fe63aa3cd22217c00b004953cb8049d1d0879611b7fac3638b0229b981c4/django_method_override-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc63ff0cb908aefce5b0dcf122c435d4a9bd55fe15745e7faf663e7a407395ae",
        "md5": "9f80c82f1db842095d1acd05036566b5",
        "sha256": "e8c9b6d4f5c565b63703f6619d89a2c5e6d5b1b2e7304372c275d779c8934fea"
      },
      "downloads": -1,
      "filename": "django-method-override-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9f80c82f1db842095d1acd05036566b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4073,
      "upload_time": "2020-01-06T20:13:40",
      "upload_time_iso_8601": "2020-01-06T20:13:40.026786Z",
      "url": "https://files.pythonhosted.org/packages/bc/63/ff0cb908aefce5b0dcf122c435d4a9bd55fe15745e7faf663e7a407395ae/django-method-override-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}