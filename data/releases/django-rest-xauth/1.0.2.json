{
  "info": {
    "author": "Orinda Harrison",
    "author_email": "mitch@xently.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development"
    ],
    "description": "# Welcome to django-rest-xauth\n\n[![Build Status](https://travis-ci.com/ajharry69/django-rest-xauth.svg?branch=master)](https://travis-ci.com/ajharry69/django-rest-xauth)\n[![Coverage Status](https://coveralls.io/repos/github/ajharry69/django-rest-xauth/badge.svg?branch=master)](https://coveralls.io/github/ajharry69/django-rest-xauth?branch=master)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/5c5b5dbbe3204b3bae605d6b81800d73)](https://www.codacy.com/manual/ajharry69/django-rest-xauth?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ajharry69/django-rest-xauth&amp;utm_campaign=Badge_Grade)\n[![Documentation Status](https://readthedocs.org/projects/django-rest-xauth/badge/?version=latest)](https://django-rest-xauth.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/django-rest-xauth.svg)](https://badge.fury.io/py/django-rest-xauth)\n\nA [custom user model][django-customizing-user-model-url] based package with features ranging from JWT and Basic authentication to REST API end-points for signup,signin,\nemail verification, password resetting and account activation.\n\nEmail verification and password resetting are based on hashed verification-code and temporary password respectively. And \naccount activation is based on a combination of user selected security question(provided through the admin portal by site \nadministrator(superuser)) and an answer.\n\n## Classes dependency structure\n\n`TokenKey` > `Token` > `User` > `AuthenticationBackend` > `Serializer` > `View` > `url_patterns`\n\nMost of the package's features are designed to be independently usable and customizable to suit most needs.\n\n>**NOTE:** the  closer the dependency(use) get to the `url_patterns` the harder it becomes to extend and customize the \n>classes and features before it's predecessor. For example, modifying a `Serializer` without modifying it's dependant \n>`View` and still using unmodified `url_patterns` would most likely result in unexpected behaviour. But on the other \n>hand an extension to the `User` class without a dependency on it's dependant classes(`AuthenticationBackend` e.t.c) \n>will most likely work as expected.\n\n## What makes django-rest-xauth different\n\n- Custom user class provides most common **optional** fields with reasonable complementary-helper methods e.g. \n`date_of_birth` field that also comes with an age-calculation helper method to help estimate users age\n- Access logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Failed Sign-in attempts logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Password-reset logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Encrypted JWT tokens\n- Security question based account activation in-case account was deactivated\n- Mobile apps friendly:\n    - temporary password based user password reset\n    - verification code based user account activation.\n\n>**N/B:** _temporary passwords_ and _verification codes_ are both generated and returned from the `User` model hence \n>opting to SMS based sending of the _verification codes_ and _temporary passwords_ should be as easy as extending the \n>`User` model, overriding a single method(that also generates and returns the code) and finally changing django's \n>`AUTH_USER_MODEL` to your model name as [explained here][django-auth-user-model-setting-url].\n\n## Quick start\n- Install package `pip install django-rest-xauth`\n\n### Modify your Django project's `settings.py` file\n\n- Add **xauth** to your `INSTALLED_APPS` setting like this\n```python\nINSTALLED_APPS = [\n    ...,\n    'xauth',\n]\n```\n- Add/modify your `AUTH_USER_MODEL` setting to\n```python\nAUTH_USER_MODEL = 'xauth.User' # Can also be a modified direct subclass of `xauth.models.User`\n```\n- Add/modify your `REST_FRAMEWORK` setting to\n```python\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'xauth.authentication.BasicTokenAuthentication',\n        ...,\n    ],\n    'EXCEPTION_HANDLER': 'xauth.utils.exceptions.exception_handler',\n}\n```\n- Include the xauth URLconf in your project `urls.py` like this\n```python\nurlpatterns = [\n    path('accounts/', include('xauth.urls', namespace='xauth')),\n    ...,\n]\n```\n- Run `python manage.py migrate` to create the xauth models.\n- Run `python manage.py createsuperuser` to create a superuser account.\n- Run `python manage.py runserver` to start the development server.\n- Visit `http://127.0.0.1:8000/accounts/signup/` to register a new account.\n\n## API endpoints\nRead more [here][documentation-endpoints-url].\n\n## Documentation and support\nFull documentation for the project is available [here][documentation-url].\n\n## Contributing\nPlease be sure to review [contributing guidelines](docs/about/contributing.md) to learn how to help the project.\n\n[django-auth-user-model-setting-url]: https://docs.djangoproject.com/en/dev/ref/settings/#auth-user-model\n[django-customizing-user-model-url]: https://docs.djangoproject.com/en/dev/topics/auth/customizing/\n[documentation-url]: https://django-rest-xauth.readthedocs.io/en/latest/\n[documentation-endpoints-url]: https://django-rest-xauth.readthedocs.io/en/latest/api-guide/endpoints/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ajharry69/django-rest-xauth",
    "keywords": "django django-rest-framework jwt-bearer-tokens basic-authentication encryption-decryption authorization authentication",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-xauth",
    "package_url": "https://pypi.org/project/django-rest-xauth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-xauth/",
    "project_urls": {
      "Homepage": "https://github.com/ajharry69/django-rest-xauth",
      "Source": "https://github.com/ajharry69/django-rest-xauth"
    },
    "release_url": "https://pypi.org/project/django-rest-xauth/1.0.2/",
    "requires_dist": [
      "djangorestframework",
      "jwcrypto",
      "timeago"
    ],
    "requires_python": ">=3.6",
    "summary": "A custom user-model based package with features ranging from JWT and Basic authentication to REST API end-points for signup, signin, email verification, password resetting and account activation.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15463070,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8e49f83defb1e7b2a1b44af73224a23caa4b924817df1710e72c9a99bf12cb6",
        "md5": "f76ada53c56b76d8a76f2f65dcbbd03e",
        "sha256": "4269514a6b09dd07d9355fea616c55637e2a028916d341e1aa7814f08881bd5a"
      },
      "downloads": -1,
      "filename": "django_rest_xauth-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f76ada53c56b76d8a76f2f65dcbbd03e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33934,
      "upload_time": "2020-06-06T23:34:27",
      "upload_time_iso_8601": "2020-06-06T23:34:27.266839Z",
      "url": "https://files.pythonhosted.org/packages/e8/e4/9f83defb1e7b2a1b44af73224a23caa4b924817df1710e72c9a99bf12cb6/django_rest_xauth-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "319bdf9b1d20dfc8312823f1e91a5d0815f49fc9dce7fb494751e9341fab05e4",
        "md5": "60825d71544f574f8a0aa913a0af10ff",
        "sha256": "b7497a6262dc50937fa91833d10c2775fab23dcbd8e661f249cf10eede26d740"
      },
      "downloads": -1,
      "filename": "django-rest-xauth-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "60825d71544f574f8a0aa913a0af10ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 38311,
      "upload_time": "2020-06-06T23:34:29",
      "upload_time_iso_8601": "2020-06-06T23:34:29.473906Z",
      "url": "https://files.pythonhosted.org/packages/31/9b/df9b1d20dfc8312823f1e91a5d0815f49fc9dce7fb494751e9341fab05e4/django-rest-xauth-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}