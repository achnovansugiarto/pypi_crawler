{
  "info": {
    "author": "Orinda Harrison",
    "author_email": "mitch@xently.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development"
    ],
    "description": "# Welcome to django-rest-xauth\n\n[![Build Status](https://travis-ci.com/ajharry69/django-rest-xauth.svg?branch=master)](https://travis-ci.com/ajharry69/django-rest-xauth)\n[![Coverage Status](https://coveralls.io/repos/github/ajharry69/django-rest-xauth/badge.svg?branch=master)](https://coveralls.io/github/ajharry69/django-rest-xauth?branch=master)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/5c5b5dbbe3204b3bae605d6b81800d73)](https://www.codacy.com/manual/ajharry69/django-rest-xauth?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ajharry69/django-rest-xauth&amp;utm_campaign=Badge_Grade)\n[![Documentation Status](https://readthedocs.org/projects/django-rest-xauth/badge/?version=latest)](https://django-rest-xauth.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/django-rest-xauth.svg)](https://badge.fury.io/py/django-rest-xauth)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-rest-xauth)\n\nA [custom user model][django-customizing-user-model-url] based django-package to implement a **secure and easily \ncustomizable [JWT][jwt-url] and [Basic][basic-auth-url]** authentication in 5 simple steps for django project(s). It \n provides JSON formatted REST API end-points for signup, signin, email verification, password resetting and account \n activation.\n\nEmail verification and password resetting are based on hashed verification-code and temporary password respectively. \nAccount activation is based on a combination of user selected security question(provided through the admin portal by \nsite administrator(superuser)) and an answer.\n\n## What makes django-rest-xauth different\n\n- Custom user class provides some common **optional** fields with reasonable complementary helper methods. For example, \n`date_of_birth` field that also comes with an age calculation helper method\n- Access logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Failed Sign-in attempts logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Password-reset logging(IP-address should be provided as a `X-Forwarded-For` header)\n- Encrypted JWT tokens\n- Security question based account activation in-case account was deactivated\n- Temporary password based user password reset\n- Verification code based user account activation.\n\n>**N/B:** _temporary passwords_ and _verification codes_ are both generated and returned from the `User` model hence \n>opting to SMS based sending of the _verification codes_ and _temporary passwords_ should be as easy as extending the \n>`User` model, overriding a single method(that also generates and returns the code) and finally changing django's \n>`AUTH_USER_MODEL` to your model name as [explained here][django-auth-user-model-setting-url].\n\n## Quick start\n- Install package `pip install django-rest-xauth`\n\n### Modify your Django project's `settings.py` file\n\n- Add **xauth** to your `INSTALLED_APPS` setting like this\n```python\nINSTALLED_APPS = [\n    ...,\n    'xauth',\n    'rest_framework',\n]\n```\n- Add/modify your `AUTH_USER_MODEL` setting to\n```python\nAUTH_USER_MODEL = 'xauth.User' # Can also be a modified direct subclass of `xauth.models.User`\n```\n- Add/modify your `REST_FRAMEWORK` setting to\n```python\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'xauth.authentication.BasicTokenAuthentication',\n        ...,\n    ],\n    'EXCEPTION_HANDLER': 'xauth.utils.exceptions.exception_handler',\n}\n```\n- Include the xauth URLconf in your project `urls.py` like this\n```python\nurlpatterns = [\n    path('accounts/', include('xauth.urls', namespace='xauth')),\n    ...,\n]\n```\n- Run `python manage.py migrate` to create the xauth models.\n- Run `python manage.py createsuperuser` to create a superuser account.\n- Run `python manage.py runserver` to start the development server.\n- Visit `http://127.0.0.1:8000/accounts/signup/` to register a new account.\n\n## API endpoints\nRead more [here][documentation-endpoints-url].\n\n## Documentation and support\nFull documentation for the project is available [here][documentation-url].\n\n## Contributing\nPlease be sure to review [contributing guidelines](docs/about/contributing.md) to learn how to help the project.\n\n## Postman Team\n[Join][postman-team-join-url] postman team.\n\n[jwt-url]: https://jwt.io/\n[basic-auth-url]: https://en.wikipedia.org/wiki/Basic_access_authentication\n[postman-team-join-url]: https://app.getpostman.com/join-team?invite_code=b3ee38bf5dc02c6e7be11bd2e2e15573&ws=5e9ffb87-2dc7-4778-aece-4c8230419340\n[django-auth-user-model-setting-url]: https://docs.djangoproject.com/en/dev/ref/settings/#auth-user-model\n[django-customizing-user-model-url]: https://docs.djangoproject.com/en/dev/topics/auth/customizing/\n[documentation-url]: https://django-rest-xauth.readthedocs.io/en/latest/\n[documentation-endpoints-url]: https://django-rest-xauth.readthedocs.io/en/latest/api-guide/endpoints/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ajharry69/django-rest-xauth",
    "keywords": "django django-rest-framework jwt-bearer-tokens basic-authentication encryption-decryption authorization authentication",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-xauth",
    "package_url": "https://pypi.org/project/django-rest-xauth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-xauth/",
    "project_urls": {
      "Homepage": "https://github.com/ajharry69/django-rest-xauth",
      "Source": "https://github.com/ajharry69/django-rest-xauth"
    },
    "release_url": "https://pypi.org/project/django-rest-xauth/1.0.4/",
    "requires_dist": [
      "djangorestframework",
      "django-templated-email",
      "jwcrypto",
      "timeago"
    ],
    "requires_python": ">=3.6",
    "summary": "A custom user-model based package with features ranging from JWT and Basic authentication to REST API end-points for signup, signin, email verification, password resetting and account activation.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15463070,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c93c1fc4ecb9fdb508e39054bbbc5e80ee68ddeedd4718b5a5c022a0d5672215",
        "md5": "6b510a001b7141f8d8f5d1891b6bf898",
        "sha256": "379a3e3f116a5bb85b1c089d57ab93226c9866e4e188f6e861ce0ad03eb81539"
      },
      "downloads": -1,
      "filename": "django_rest_xauth-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b510a001b7141f8d8f5d1891b6bf898",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35473,
      "upload_time": "2020-06-10T21:49:58",
      "upload_time_iso_8601": "2020-06-10T21:49:58.294986Z",
      "url": "https://files.pythonhosted.org/packages/c9/3c/1fc4ecb9fdb508e39054bbbc5e80ee68ddeedd4718b5a5c022a0d5672215/django_rest_xauth-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "203d27c58d1fcdf75091627cf8ec080fb83df350852c5eed0e60e870b6700cc6",
        "md5": "b07b5ba815d530dbc92fc48c3ab6fb8b",
        "sha256": "a38b15d08036faf070d94c136d57af16508a688aa4f18707a4b044f52403e87b"
      },
      "downloads": -1,
      "filename": "django-rest-xauth-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b07b5ba815d530dbc92fc48c3ab6fb8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39354,
      "upload_time": "2020-06-10T21:49:59",
      "upload_time_iso_8601": "2020-06-10T21:49:59.907747Z",
      "url": "https://files.pythonhosted.org/packages/20/3d/27c58d1fcdf75091627cf8ec080fb83df350852c5eed0e60e870b6700cc6/django-rest-xauth-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}