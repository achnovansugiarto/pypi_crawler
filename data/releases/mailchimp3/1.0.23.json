{
  "info": {
    "author": "Charles TISSIER",
    "author_email": "charles@vingtcinq.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|mailchimp3 v1.0.17 on PyPi| |MIT license| |Stable|\n\npython-mailchimp-api\n====================\n\nA straighforward python client for v3 of MailChimp API using requests >=\n2.7.0.\n\nGet Stated\n----------\n\nInstallation\n~~~~~~~~~~~~\n\nThis client is hosted at PyPi under the name ``mailchimp3``, to install\nit, simply run\n\n``pip install mailchimp3``\n\nInitialization\n~~~~~~~~~~~~~~\n\nGrab ``YOUR SECRET KEY`` from your mailchimp account (Account > Extra >\nApi Keys). ``YOUR USERNAME`` is the one you use to login.\n\n::\n\n    from mailchimp3 import MailChimp\n\n    client = MailChimp('YOUR USERNAME', 'YOUR SECRET KEY')\n\nExamples\n~~~~~~~~\n\n::\n\n    # returns all the lists\n    client.list.all()\n\n    # returns all members inside list '123456'\n    client.member.all('123456')\n\n    # same query, but with query params\n    client.member.all('123456', count=100, offset=0, fields=\"members.email_address\")\n\n    # returns the list matching id '123456'\n    client.list.get('123456')  \n\n    # add John Doe with email john.doe@example.com to list matching id '123456'\n    client.member.create('123456', {\n        'email_address': 'john.doe@example.com',\n        'status': 'subscribed',\n        'merge_fields': {\n            'FNAME': 'John',\n            'LNAME': 'Doe',\n        },\n    })\n\n    # returns all the campaigns\n    client.campaign.all()\n\nPagination\n~~~~~~~~~~\n\nSimply add ``count`` and ``offset`` arguments in your function like so:\n\n::\n\n    client.member.all('123456', count=100, offset=0)\n\nFields\n~~~~~~\n\nSimply add ``fields`` arguments in your function. The following only\ndisplay email\\_address and id for each member:\n\n::\n\n    client.member.all('123456', fields=\"members.email_address,members.id\")\n\nAPI\n---\n\nAuthorized Apps\n~~~~~~~~~~~~~~~\n\n::\n\n    client.authorizedapp.all()\n    client.authorizedapp.get(app_id='')\n\nAutomation\n~~~~~~~~~~\n\nAutomation\n^^^^^^^^^^\n\n::\n\n    client.automation.all()\n    client.automation.get(workflow_id='')\n    client.automation.pause(workflow_id='')\n    client.automation.start(workflow_id='')\n\nAutomation Email\n^^^^^^^^^^^^^^^^\n\n::\n\n    client.automationemail.all(workflow_id='')\n    client.automationemail.get(workflow_id='', email_id='')\n    client.automationemail.pause(workflow_id='', email_id='')\n    client.automationemail.start(workflow_id='', email_id='')\n\nAutomation Email Queue\n^^^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    client.automationemailqueue.all(workflow_id='', email_id='')\n    client.automationemailqueue.get(workflow_id='', email_id='', member_id='')\n    client.automationemailqueue.create(workflow_id='', email_id='', data='')\n\nAutomation Removed Subscribers\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    client.automationeremovedsubscriber.all(workflow_id='')\n    client.automationeremovedsubscriber.create(workflow_id='', data='')\n\nCampaign\n~~~~~~~~\n\nCampaign\n^^^^^^^^\n\n::\n\n    client.campaign.all()\n    client.campaign.create(data={})\n    client.campaign.get(campaign_id='')\n    client.campaign.delete(campaign_id='')\n    client.campaign.patch(campaign_id='', data={})\n    client.campaign.cancel(campaign_id='')\n    client.campaign.get_content(campaign_id='', \\*\\*queryparams)\n    client.campaign.set_content(campaign_id='', data={})\n\nCampaigns feedback\n^^^^^^^^^^^^^^^^^^\n\n::\n\n    client.feedback.all(campaign_id='')\n    client.feedback.create(campaign_id='', data={})\n    client.feedback.get(campaign_id='', feedback_id='')\n    client.feedback.update(campaign_id='', feedback_id='', data={})\n    client.feedback.delete(campaign_id='', feedback_id='')\n\nConversations\n~~~~~~~~~~~~~\n\n::\n\n    client.conversation.all()\n    client.conversation.get(conversation_id='')\n\nFiles\n~~~~~\n\n::\n\n    client.file.all()\n    client.file.create(data='')\n\nInterest\n~~~~~~~~\n\n::\n\n    client.interest.all(list_id, category_id, count=100)\n    client.interest.create(list_id, category_id, post_data)\n    client.interest.get(list_id, category_id, interest_id)\n    client.interest.update(list_id, category_id, interest_id, post_data)\n    client.interest.delete(list_id, category_id, interest_id)\n\nLists\n~~~~~\n\n::\n\n    client.list.all()\n    client.list.get(list_id='')\n    client.list.create(data='')\n    client.list.update(list_id='', data='')\n    client.list.delete(list_id='')\n\nMembers\n~~~~~~~\n\n::\n\n    client.member.all(list_id='', \\*\\*queryparams)\n\nReports\n~~~~~~~\n\n::\n\n    client.report.all()\n    client.report.get(report_id='')\n\nTemplates\n~~~~~~~~~\n\n::\n\n    client.template.all()\n    client.template.get(template_id='')\n    client.template.update(template_id='', data='')\n    client.template.delete(template_id='')\n\nRoot\n~~~~\n\n::\n\n    client.root.get()\n\nSupport\n-------\n\nIf you are having issues, please let us know.\n\nLicense\n-------\n\nThe project is licensed under the MIT License.\n\n.. |mailchimp3 v1.0.17 on PyPi| image:: https://img.shields.io/badge/pypi-1.0.17-green.svg\n   :target: https://pypi.python.org/pypi/mailchimp3\n.. |MIT license| image:: https://img.shields.io/badge/licence-MIT-blue.svg\n.. |Stable| image:: https://img.shields.io/badge/status-stable-green.svg",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/charlesthk/python-mailchimp",
    "keywords": "mailchimp api v3 client wrapper",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mailchimp3",
    "package_url": "https://pypi.org/project/mailchimp3/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mailchimp3/",
    "project_urls": {
      "Homepage": "https://github.com/charlesthk/python-mailchimp"
    },
    "release_url": "https://pypi.org/project/mailchimp3/1.0.23/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A python client for v3 of MailChimp API",
    "version": "1.0.23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12788129,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d54fac2dd9c9416a5a30faa341ab865c4ddfe813f4ff18b56fe6e6f712ec2fa",
        "md5": "9a9fa56ffcf51da40564cde1ff2db109",
        "sha256": "44848f952c15e6bb45669e44988b12b0413f7712e6a8dfee299317364c596a2f"
      },
      "downloads": -1,
      "filename": "mailchimp3-1.0.23-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a9fa56ffcf51da40564cde1ff2db109",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 22891,
      "upload_time": "2016-07-27T19:46:13",
      "upload_time_iso_8601": "2016-07-27T19:46:13.136792Z",
      "url": "https://files.pythonhosted.org/packages/7d/54/fac2dd9c9416a5a30faa341ab865c4ddfe813f4ff18b56fe6e6f712ec2fa/mailchimp3-1.0.23-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}