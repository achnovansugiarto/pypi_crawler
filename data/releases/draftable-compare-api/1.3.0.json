{
  "info": {
    "author": "Draftable",
    "author_email": "contact@draftable.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "Draftable Compare API - Python Client Library\n=============================================\n\n[![pypi ver](https://img.shields.io/pypi/v/draftable-compare-api)](https://pypi.org/project/draftable-compare-api/)\n[![pypi pyver](https://img.shields.io/pypi/pyversions/draftable-compare-api)](https://pypi.org/project/draftable-compare-api/)\n[![pypi dlm](https://img.shields.io/pypi/dm/draftable-compare-api)](https://pypi.org/project/draftable-compare-api/)\n[![license](https://img.shields.io/github/license/draftable/compare-api-python-client)](https://choosealicense.com/licenses/mit/)\n\n[![travis](https://api.travis-ci.com/draftable/compare-api-python-client.svg?branch=stable)](https://app.travis-ci.com/github/draftable/compare-api-python-client)\n[![codecov](https://codecov.io/gh/draftable/compare-api-python-client/branch/stable/graph/badge.svg)](https://codecov.io/gh/draftable/compare-api-python-client)\n[![codestyle](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n[![Open in Visual Studio Code](https://open.vscode.dev/badges/open-in-vscode.svg)](https://open.vscode.dev/draftable/compare-api-python-client)\n\nA thin Python client for the [Draftable API](https://draftable.com/rest-api) which wraps all available endpoints and handles authentication and signing.\n\nSee the [full API documentation](https://api.draftable.com) for an introduction to the API, usage notes, and other reference material.\n\n- [Requirements](#requirements)\n- [Getting started](#getting-started)\n- [CLI usage](#cli-usage)\n- [API reference](#api-reference)\n  - [Initializing the client](#initializing-the-client)\n  - [Retrieving comparisons](#retrieving-comparisons)\n  - [Deleting comparisons](#deleting-comparisons)\n  - [Creating comparisons](#creating-comparisons)\n  - [Displaying comparisons](#displaying-comparisons)\n  - [Exporting comparisons](#exporting-comparisons)\n  - [Utility functions](#utility-functions)\n- [Other information](#other-information)\n  - [Self-signed certificates](#self-signed-certificates)\n\nRequirements\n------------\n\n- Operating system: Any maintained Linux, macOS, or Windows release\n- Python runtime: Any [maintained version](https://devguide.python.org/#status-of-python-branches) (currently 3.6, 3.7, 3.8, 3.9, or 3.10)\n\nGetting started\n---------------\n\n- Create a free [API account](https://api.draftable.com)\n- Retrieve your [credentials](https://api.draftable.com/account/credentials)\n- Install the library\n\n```sh\npip install draftable-compare-api\n```\n\n- Instantiate a client\n\n```python\nimport draftable\nclient = draftable.Client('<yourAccountId>', '<yourAuthToken>')\ncomparisons = client.comparisons\n```\n\n- Start creating comparisons\n\n```python\ncomparison = comparisons.create(\n    'https://api.draftable.com/static/test-documents/code-of-conduct/left.rtf',\n    'https://api.draftable.com/static/test-documents/code-of-conduct/right.pdf'\n)\nprint(\"Comparison created: {}\".format(comparison))\n\n# Generate a signed viewer URL to access the private comparison. The expiry\n# time defaults to 30 minutes if the valid_until parameter is not provided.\nviewer_url = comparisons.signed_viewer_url(comparison.identifier)\nprint(\"Viewer URL (expires in 30 mins): {}\".format(viewer_url))\n```\n\nCLI usage\n---------\n\nA helper utility, `dr-compare`, is included for interacting with the API from the command-line. After installing the library run `dr-compare` to view the built-in help.\n\nThe CLI tool will only be available in the environment under which the library is installed (e.g. a given *virtualenv*). To ensure it's accessible outside of any given environment install the library user or system-wide (e.g. `sudo pip install draftable-compare-api`).\n\nAPI reference\n-------------\n\n- The handling of `datetime` objects is as follows:\n  - Any _naive_ `datetime` objects provided in a method call are assumed to be in UTC time.\n  - Returned `datetime` objects are always \"_aware_\" (include timezone information) and use UTC.\n\n### Initializing the client\n\nThe package provides a module, `draftable`, which exports a class to create a `Client` for your API account.\n\n`Client` provides a `comparisons` property which yields a `ComparisonsEndpoint` to manage the comparisons for your API account.\n\nCreating a `Client` differs slightly based on the API endpoint being used:\n\n```python\nimport draftable\n\n# Draftable API (default endpoint)\naccount_id = '<yourAccountId>'  # Replace with your API credentials from:\nauth_token = '<yourAuthToken>'  # https://api.draftable.com/account/credentials\nclient = draftable.Client(account_id, auth_token)\ncomparisons = client.comparisons\n\n# Draftable API regional endpoint or Self-hosted\nbase_url = 'https://draftable.example.com/api/v1'  # Replace with the endpoint URL\naccount_id = '<yourAccountId>'  # Replace with your API credentials from the regional\nauth_token = '<yourAuthToken>'  # Draftable API endpoint or your Self-hosted container\nclient = draftable.Client(account_id, auth_token, base_url)\ncomparisons = client.comparisons\n```\n\nFor API Self-hosted you may need to [suppress TLS certificate validation](#self-signed-certificates) if the server is using a self-signed certificate (the default).\n\n### Retrieving comparisons\n\nInstances of the `ComparisonsEndpoint` class provide the following methods for retrieving comparisons:\n\n- `all()`  \n  Returns a `list` of all your comparisons, ordered from newest to oldest. This is potentially an expensive operation.\n- `get(identifier: str)`  \n  Returns the specified `Comparison` or raises a `NotFound` exception if the specified comparison identifier does not exist.\n\n`Comparison` objects have the following properties:\n\n- `identifier: str`  \n  The unique identifier of the comparison\n- `left: object` / `right: object`  \n  Information about each side of the comparison\n  - `file_type: str`  \n    The file extension\n  - `source_url: str` _(optional)_  \n    The URL for the file if the original request was specified by URL, otherwise `None`\n  - `display_name: str` _(optional)_  \n    The display name for the file if given in the original request, otherwise `None`\n- `public: bool`  \n  Indicates if the comparison is public\n- `creation_time: datetime`  \n  Time in UTC when the comparison was created\n- `expiry_time: datetime` _(optional)_  \n  The expiry time if the comparison is set to expire, otherwise `None`\n- `ready: bool`  \n  Indicates if the comparison is ready to display\n\nIf a `Comparison` is _ready_ (i.e. it has been processed) it has the following additional properties:\n\n- `ready_time: datetime`  \n  Time in UTC the comparison became ready\n- `failed: bool`  \n  Indicates if comparison processing failed\n- `error_message: str` _(only present if `failed`)_  \n  Reason processing of the comparison failed\n\n#### Example usage\n\n```python\nfrom draftable.endpoints import exceptions\n\nidentifier = '<identifier>'\n\ntry:\n    comparison = comparisons.get(identifier)\n\n    print(\"Comparison '{identifier}' ({visibility}) is {status}.\".format(\n        identifier = identifier,\n        visibility = 'public' if comparison.public else 'private',\n        status = 'ready' if comparison.ready else 'not ready'\n    ))\n\n    if comparison.ready:\n        elapsed = comparison.ready_time - comparison.creation_time\n        print(\"The comparison took {} seconds.\".format(elapsed.total_seconds()))\n\n        if comparison.failed:\n            print(\"The comparison failed with error: {}\".format(comparison.error_message))\n\nexcept exceptions.NotFound:\n    print(\"Comparison '{}' does not exist.\".format(identifier))\n```\n\n### Deleting comparisons\n\nInstances of the `ComparisonsEndpoint` class provide the following methods for deleting comparisons:\n\n- `delete(identifier: str)`  \n  Returns nothing on successfully deleting the specified comparison or raises a `NotFound` exception if no such comparison exists.\n\n#### Example usage\n\n```python\noldest_comparisons = comparisons.all()[-10:]\nprint(\"Deleting oldest {} comparisons ...\".format(len(oldest_comparisons)))\n\nfor comparison in oldest_comparisons:\n    comparisons.delete(comparison.identifier)\n    print(\"Comparison '{}' deleted.\".format(comparison.identifier))\n```\n\n### Creating comparisons\n\nInstances of the `ComparisonsEndpoint` class provide the following methods for retrieving comparisons:\n\n- `create(left: ComparisonSide, right: ComparisonSide, identifier: str = None, public: bool = False, expires: datetime | timedelta = None)`  \n  Returns a `Comparison` representing the newly created comparison.\n\n`create` accepts the following arguments:\n\n- `left` / `right`  \n  Describes the left and right files (see following section)\n- `identifier` _(optional)_  \n  Identifier to use for the comparison:\n  - If specified, the identifier must be unique (i.e. not already be in use)\n  - If unspecified or `None`, the API will automatically generate a unique identifier\n- `public` _(optional)_  \n  Specifies the comparison visibility:\n  - If `False` or unspecified authentication is required to view the comparison\n  - If `True` the comparison can be accessed by anyone with knowledge of the URL\n- `expires` _(optional)_  \n  Time at which the comparison will be deleted:\n  - Must be specified as a `datetime` or a `timedelta` (UTC if naive)\n  - If specified, the provided expiry time must be UTC and in the future\n  - If unspecified or `None`, the comparison will never expire (but may be explicitly deleted)\n\nThe following exceptions may be raised:\n\n- `BadRequest`  \n  The request could not be processed (e.g. `identifier` already in use)\n- `InvalidArgument`  \n  Failure in parameter validation (e.g. `expires` is in the past)\n\n#### Creating comparison sides\n\nThe `draftable` module provides the following static methods for creating comparison sides:\n\n- `draftable.make_side(url_or_file_path: str, file_type: str = None, display_name: str = None)`  \n  Returns a `ComparisonSide` for a file or URL by attempting to guess from the `url_or_file_path` parameter.\n\nAlternatively, for explicitly creating a file or URL comparison side, the following static methods can be used:\n\n- `draftable.endpoints.comparisons.sides.side_from_file(file: object, file_type: str, display_name: str = None)`  \n  Returns a `ComparisonSide` for a locally accessible file.\n- `draftable.endpoints.comparisons.sides.side_from_url(url: str, file_type: str, display_name: str = None)`  \n  Returns a `ComparisonSide` for a remotely accessible file referenced by URL.\n\nThese methods accept the following arguments:\n\n- `url_or_file_path` _(`make_side` only)_  \n  The file or URL path for a comparison side\n- `file` _(`side_from_file` only)_  \n  A file object to be read and uploaded\n  - The file must be opened for reading in _binary mode_\n- `url` _(`side_from_url` only)_  \n  The URL from which the server will download the file\n- `file_type`  \n  The type of file being submitted:\n  - PDF: `pdf`\n  - Word: `docx`, `docm`, `doc`, `rtf`\n  - PowerPoint: `pptx`, `pptm`, `ppt`\n- `display_name` _(optional)_  \n  The name of the file shown in the comparison viewer\n\nThe following exceptions may be raised:\n\n- `InvalidArgument`\n  Failure in parameter validation (e.g. `file_type` is invalid, `url` is malformed, or `file` is not opened in _binary mode_)\n\nThe `make_side` method may additionally raise the following exceptions:\n\n- `InvalidPath`  \n  The provided path uses a file URI scheme (i.e. `file:`) but references a remote host or the file doesn't exist.\n- `ValueError`  \n  The provided path was not a URL or the file doesn't exist.\n\n#### Example usage\n\n```python\nfrom datetime import timedelta\n\nidentifier = draftable.generate_identifier()\n\ncomparison = comparisons.create(\n    identifier = identifier,\n\n    left = draftable.make_side(\n        'https://domain.com/left.pdf',\n        file_type='pdf',\n        display_name='Document.pdf'\n    ),\n\n    right = draftable.make_side(\n        'path/to/right/file.docx',\n        file_type='docx',\n        display_name='Document (revised).docx'\n    ),\n\n    # Expire this comparison in 2 hours (default is no expiry)\n    expires = timedelta(hours=2)\n)\nprint(\"Created comparison: {}\".format(comparison))\n```\n\n### Displaying comparisons\n\nInstances of the `ComparisonsEndpoint` class provide the following methods for displaying comparisons:\n\n- `public_viewer_url(identifier: str, wait: bool = False)`  \n  Generates a public viewer URL for the specified comparison\n- `signed_viewer_url(identifier: str, valid_until: datetime | timedelta = None, wait: bool = False)`  \n  Generates a signed viewer URL for the specified comparison\n\nBoth methods use the following common parameters:\n\n- `identifier`  \n  Identifier of the comparison for which to generate a _viewer URL_\n- `wait` _(optional)_  \n  Specifies the behaviour of the viewer if the provided comparison does not exist\n  - If `False` or unspecified, the viewer will show an error if the `identifier` does not exist\n  - If `True`, the viewer will wait for a comparison with the provided `identifier` to exist  \n    Note this will result in a perpetual loading animation if the `identifier` is never created\n\nThe `signed_viewer_url` method also supports the following parameters:\n\n- `valid_until` _(optional)_  \n  Time at which the URL will expire (no longer load)\n  - Must be specified as a `datetime` or a `timedelta`\n  - If specified, the provided expiry time must be UTC and in the future\n  - If unspecified or `None`, the URL will be generated with the default 30 minute expiry\n\nSee the displaying comparisons section in the [API documentation](https://api.draftable.com) for additional details.\n\n#### Example usage\n\n```python\nidentifier = '<identifier>'\n\n# Retrieve a signed viewer URL which is valid for 1 hour. The viewer will wait\n# for the comparison to exist in the event processing has not yet completed.\nviewer_url = comparisons.signed_viewer_url(identifier, timedelta(hours=1), wait=True)\nprint(\"Viewer URL (expires in 1 hour): {}\".format(viewer_url))\n```\n\n### Exporting comparisons\n\nTo perform comparison exports retrieve an `ExportsEndpoint` instance via the `exports` property of your `Client` instance:\n\n```python\nexports = client.exports\n```\n\n#### Creating comparison exports\n\nInstances of the `ExportsEndpoint` class provide the following methods for exporting comparisons:\n\n- `create(comparison: Union[Comparison, str], kind: str = 'single_page')`  \n  Returns a `Export` representing the newly created export.\n\n`create` accepts the following arguments:\n\n- `comparison`  \n  The comparison to export provided as a `Comparison` instance or a comparison identifier\n- `kind`  \n  The type of export to perfom (see below)\n\nThe following export kinds are supported for the `kind` parameter:\n\n- `single_page`  \n  Exports only the right-side of the comparison with highlights and deletion markers\n- `combined`  \n  Exports both the left and right sides\n- `left`  \n  Export the left side only\n- `right`  \n  Exports the right side only\n\n##### Example usage\n\n```python\nexports = client.exports\n\nexport = exports.create(comparison, kind='single_page')\n```\n\n#### Retrieving comparison exports\n\nInstances of the `ExportsEndpoint` class provide the following methods for retrieving exports:\n\n- `get(identifier: str)`  \n  Returns the specified `Export` or raises a `NotFound` exception if the specified export identifier does not exist.\n\n`Export` objects have the same properties as `Comparison` objects.\n\nAs with comparison requests, export requests need to be processed. Typically processing only takes a few seconds, but this can vary based on numerous factors (e.g. size of the documents being exported, number of changes in the comparison, etc ...). To determine if an export has been processed the `ready` property of the `Export` instance should be inspected and polling can be utilised to wait until the export has been completed.\n\n##### Example usage\n\n```python\nimport time\n\nexport = client.exports.create(comparison.identifier)\n\nwhile not export.ready:\n    time.sleep(1)\n    export = client.exports.get(export.identifier)\n    if export.ready:\n        print(export.url)\n```\n\n### Utility functions\n\nThe `draftable` module provides the following static methods for generating comparison identifiers:\n\n- `draftable.generate_identifier()`  \n  Generates a random unique comparison identifier\n\nOther information\n-----------------\n\n### Self-signed certificates\n\nIf connecting to an API Self-hosted endpoint which is using a self-signed certificate (the default) you will need to suppress certificate validation. This can be done by setting the `CURL_CA_BUNDLE` environment variable to an empty string. On Windows, this must be done from within the Python interpreter due to platform limitations.\n\nSee the below examples for different operating systems and shell environments. Note that all examples only set the variable for the running shell or Python interpreter and it will not persist. To persist the setting consult the documentation for your shell environment. This should be done with caution as this setting suppresses certificate validation for **all** connections made by the Python runtime!\n\n#### Non-Windows environments (inc. WSL)\n\n(ba)sh (Linux, macOS, WSL)\n\n```sh\nexport CURL_CA_BUNDLE=0\n```\n\nPowerShell:\n\n```posh\n$env:CURL_CA_BUNDLE=0\n```\n\n#### Windows environments\n\nSetting an environment variable to the empty string is not valid in Windows and is treated as equivalent to removing any existing environment variable of the same name. As such, suppressing certificate validation requires an alternate approach. The most straightforward is to set the environment variable from within Python, instead of before launch.\n\n```python\nimport os\n\nos.environ['CURL_CA_BUNDLE'] = ''\n```\n\nIf your code spawns Python subprocesses they must separately modify their environment as the change will not be inherited as you'd normally expect.\n\n#### All environments\n\nDisabling certificate validation in production environments is strongly discouraged as it significantly lowers security. We only recommend setting this environment variable in development environments if configuring a CA signed certificate for API Self-hosted is not possible.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/draftable/compare-api-python-client",
    "keywords": "draftable,api,compare,comparison,comparisons,pdf,word,document,documents,doc,docx,powerpoint,presentation,presentations,ppt,pptx",
    "license": "MIT",
    "maintainer": "Draftable",
    "maintainer_email": "contact@draftable.com",
    "name": "draftable-compare-api",
    "package_url": "https://pypi.org/project/draftable-compare-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/draftable-compare-api/",
    "project_urls": {
      "Changelog": "https://github.com/draftable/compare-api-python-client/blob/stable/CHANGELOG.md",
      "Documentation": "https://github.com/draftable/compare-api-python-client/blob/stable/README.md",
      "Homepage": "https://github.com/draftable/compare-api-python-client",
      "Source": "https://github.com/draftable/compare-api-python-client",
      "Tracker": "https://github.com/draftable/compare-api-python-client/issues"
    },
    "release_url": "https://pypi.org/project/draftable-compare-api/1.3.0/",
    "requires_dist": [
      "requests",
      "importlib-metadata ; python_version < \"3.8\"",
      "black ; extra == 'dev'",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "tox (>=3.3.0) ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "types-requests ; extra == 'dev'",
      "types-six ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": "<4,>=3.6.*",
    "summary": "Client library for the Draftable document comparison API",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15805434,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1de592f75c045ee2f1340a82036ffe83063403faff48391bf9fc3fa253b2376d",
        "md5": "2f63bde2eeddbfa1b98e08f935ed74c8",
        "sha256": "a8356e4fe9af1e08039474efd7796a1b004553159065239b23ae3ec7d42fbe93"
      },
      "downloads": -1,
      "filename": "draftable_compare_api-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f63bde2eeddbfa1b98e08f935ed74c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<4,>=3.6.*",
      "size": 31370,
      "upload_time": "2021-12-01T02:42:56",
      "upload_time_iso_8601": "2021-12-01T02:42:56.891064Z",
      "url": "https://files.pythonhosted.org/packages/1d/e5/92f75c045ee2f1340a82036ffe83063403faff48391bf9fc3fa253b2376d/draftable_compare_api-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d41f2dcbf29580835b5739a89e147966d53d6ce1c0d8e5024d9c3b4e40341f10",
        "md5": "18e1175927d682833bc642a6e3e4f7ab",
        "sha256": "1e2438ede5994482ebae827eedfa36262158a8f98ac1cda391742b371ecab849"
      },
      "downloads": -1,
      "filename": "draftable-compare-api-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "18e1175927d682833bc642a6e3e4f7ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.6.*",
      "size": 28964,
      "upload_time": "2021-12-01T02:42:59",
      "upload_time_iso_8601": "2021-12-01T02:42:59.306832Z",
      "url": "https://files.pythonhosted.org/packages/d4/1f/2dcbf29580835b5739a89e147966d53d6ce1c0d8e5024d9c3b4e40341f10/draftable-compare-api-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}