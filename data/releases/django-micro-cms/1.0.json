{
  "info": {
    "author": "Johannes Spielmann",
    "author_email": "jps@shezi.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "django-micro-cms\n        ================\n        \n        A micro-CMS for django. A bit like flatpages++.\n        \n        It is **not** a fully-fledged CMS with online editing and media\n        management. All it does is allow you to manage pages and their\n        templates and translations in the admin (and display the pages on your\n        web site, naturally).\n        \n        \n        Installation\n        ------------\n        \n        ``django-micro-cms`` has no external dependencies other than Django. It\n        was tested against Django 1.6. To install ``django-micro-cms``, simply\n        \n        ::\n           \n           pip install django-micro-cms\n        \n        \n        There are two more things you have to do before you can use it on your page.\n        \n        1. Add ``microcms`` to your installed apps::\n        \n             INSTALLED_APPS = (\n                 [...],\n                 'microcms',\n             )    \n        \n        2. Add a URL config for your pages::\n        \n             urlpatterns = patterns('',\n                 url(r'^page(?P<url>/.*)$', 'microcms.views.pages', name='pages'),\n                 url(r'^admin/', include(admin.site.urls)),\n             )\n        \n           You can add more than one URL config for your pages, but all pages\n           will be available at each endpoint.\n        \n        \n        \n        Usage\n        -----\n        \n        Using ``django-micro-cms`` is quite simple: create templates, create\n        content, see it on the page. That's all. All of the editing is done in\n        the Django admin.\n        \n        \n        Templates\n        ~~~~~~~~~\n        \n        First you have to create one or more ``Template`` objects. These\n        templates will be rendered when you display a page with it. They can\n        ``{% extend %}`` pages from your Django web-page, which is a good idea\n        if you have a base template, but they cannot themselves be\n        ``extend``-ed.\n        \n        Inside the template, you can use several variables to insert your\n        content:\n        \n        ``title``\n          The page title as a safe string.\n        \n        ``content``\n          The page content as a safe string.\n        \n        ``CONTENT_LANGUAGE_CODE``\n          The language code of the loaded content. This may be different from\n          the language code of the *page*, because the language code of the\n          page depends on the user preferences *and* the page URL (see below\n          for details on language-loading). However, the language code of the\n          content depends on the availability of content in that language. If\n          no content in the requested language is available, the fallback\n          language is used and that language code will be indicated here.\n        \n        ``created``\n          The date/time of the page creation.\n        \n        ``last_modified``\n          The date/time of the last modification of the page content.\n        \n          \n        Content\n        ~~~~~~~\n        \n        The second step is to create pages and content for them. Pages have a\n        ``URL`` and a ``title``. The URL is the part of the page URL that\n        get's parsed out as the view parameter in your URL definition. So if\n        you have a page with ``/about/`` as URL and in your URL definition\n        this setup::\n        \n          url(r'^page(?P<url>/.*)$', 'microcms.views.pages'),\n        \n        then the full URL of that page will be::\n        \n          /page/about/\n          \n        The title attribute of the page will be available unescaped in the\n        template as variable ``title``.\n        \n        For each page, you can add content. Only pages that have content parts\n        defined are shown. If a page has no content in the fallback language,\n        it will only be shown when the requested language version exists.\n        \n        The ``content`` attribute of each language version is given to the\n        template unescaped.\n        \n          \n        \n        On the page\n        ~~~~~~~~~~~\n        \n        Each page is available under its URL (once there is at least one\n        content part defined). Additionally, it is also available under its\n        URL with a language code prepended.\n        \n        An example.\n        \n        Let's say you have wired up the ``pages`` view as above, to be seen on\n        the page as ``^page(?P<url>/.*)$'``. Then each page you create will be\n        available at the URL you defined. For example, if you have pages with\n        URLS ``/about/``, ``/imprint/`` and ``/about/contact/``, the will be\n        available as::\n        \n          /page/about/\n          /page/imprint/\n          /page/about/contact/\n        \n        If a user requests the page in a locale that has defined content, then\n        the correct content will be served up. If you have content for locales\n        ``en`` and ``de`` for example, and a user requests the page in German,\n        the ``de`` variant of the content will be served. If you have variants\n        in ``es`` and ``es-mx``, and a user requests content in ``es-ar``, the\n        ``es`` variant will be served.\n        \n        To allow serving specific languages, you can prepend the language code\n        to the page part of your URL. The above-outlined variants will be\n        available under the following URLs::\n        \n          /page/en/about/\n          /page/de/about/\n          /page/es/about/\n          /page/es-mx/about/\n        \n        \n        \n        LICENSE and COPYRIGHT\n        =====================\n        \n          Copyright 2014 Johannes Spielmann <jps@shezi.de>\n        \n          django-micro-cms is free software: you can redistribute it and/or\n          modify it under the terms of the GNU General Public License as\n          published by the Free Software Foundation, either version 3 of the\n          License, or (at your option) any later version.\n        \n          django-micro-cms is distributed in the hope that it will be useful,\n          but WITHOUT ANY WARRANTY; without even the implied warranty of\n          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n          GNU General Public License for more details.\n        \n          You should have received a copy of the GNU General Public License\n          along with django-micro-cms, in a file called LICENSE in the root of\n          the project.  If not, see <http://www.gnu.org/licenses/>.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/shezi/django-micro-cms/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-micro-cms",
    "package_url": "https://pypi.org/project/django-micro-cms/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-micro-cms/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/shezi/django-micro-cms/"
    },
    "release_url": "https://pypi.org/project/django-micro-cms/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A micro-CMS for django. A bit like flatpages++.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 965511,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f20a0f0d8bbbd3176193693da9de6820d74644040947f426a4193d6d190a9e69",
        "md5": "dc774d4013a836e2fc6596fea03a3783",
        "sha256": "b90f7d0203f6a9cf251d7f1bf150283df125d08cbd46d3ecc84dee2953128f10"
      },
      "downloads": -1,
      "filename": "django-micro-cms-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dc774d4013a836e2fc6596fea03a3783",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5317,
      "upload_time": "2014-01-09T11:51:57",
      "upload_time_iso_8601": "2014-01-09T11:51:57.852174Z",
      "url": "https://files.pythonhosted.org/packages/f2/0a/0f0d8bbbd3176193693da9de6820d74644040947f426a4193d6d190a9e69/django-micro-cms-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}