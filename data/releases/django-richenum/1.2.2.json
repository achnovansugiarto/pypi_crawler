{
  "info": {
    "author": "Hearsay Social",
    "author_email": "opensource@hearsaysocial.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "===============\ndjango-richenum\n===============\n\n.. image:: https://travis-ci.org/hearsaycorp/django-richenum.png?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/hearsaycorp/django-richenum\n\n.. image:: https://pypip.in/v/django-richenum/badge.png\n    :alt: Latest PyPI Version\n    :target: https://pypi.python.org/pypi/django-richenum/\n\n=====\nAbout\n=====\nA Django extension of richenum for Python. If you're unfamiliar with richenums, please read up on them (see `Related Packages`_) before using django-richenum.\n\n-----------\nModel Fields\n-----------\nIndexEnumField\n  Store ints in DB, but expose OrderedRichEnumValues in Python.\nCanonicalNameEnumField\n  Store varchar in DB, but expose RichEnumValues in Python.\n  We recommend that you use IndexEnumField for storage and query efficiency.\nLaxIndexEnumField\n  Like IndexEnumField, but also allows casting to and from canonical names.\n  Mainly used to help migrate existing code that uses strings as database values.\n\n-----------\nForm Fields\n-----------\nCanonicalEnumField\n  Uses the RichEnum/OrderedRichEnum canonical_name as form field values.\nIndexEnumField\n  Uses the OrderedRichEnum index as form field values.\n\n-----\nLinks\n-----\n| `GitHub <https://github.com/hearsaycorp/django-richenum>`_\n| `PyPi <https://pypi.python.org/pypi/django-richenum/>`_\n\n============\nInstallation\n============\n.. code:: bash\n\n    $ pip install django-richenum\n\n=============\nExample Usage\n=============\n--------------\nIndexEnumField\n--------------\n.. code:: python\n\n    >>> from richenum import OrderedRichEnum, OrderedRichEnumValue\n    >>> class MyOrderedRichEnum(OrderedRichEnum):\n    ...    FOO = OrderedRichEnumValue(index=1, canonical_name=\"foo\", display_name=\"Foo\")\n    ...    BAR = OrderedRichEnumValue(index=2, canonical_name=\"bar\", display_name=\"Bar\")\n    ...\n    >>> from django.db import models\n    >>> from django_richenum.models import IndexEnumField\n    >>> class MyModel(models.Model):\n    ...    my_enum = IndexEnumField(MyOrderedRichEnum, default=MyOrderedRichEnum.FOO)\n    ...\n    >>> m = MyModel.objects.create(my_enum=MyOrderedRichEnum.BAR)\n    >>> m.save()\n    >>> m.my_enum\n    OrderedRichEnumValue - idx: 2  canonical_name: 'bar'  display_name: 'Bar'\n    >>> MyModel.objects.filter(my_enum=MyOrderedRichEnum.BAR)\n\n\n----------------------\nCanonicalNameEnumField\n----------------------\n.. code:: python\n\n    >>> from richenum import RichEnum, RichEnumValue\n    >>> class MyRichEnum(RichEnum):\n    ...    FOO = RichEnumValue(canonical_name=\"foo\", display_name=\"Foo\")\n    ...    BAR = RichEnumValue(canonical_name=\"bar\", display_name=\"Bar\")\n    ...\n    >>> from django.db import models\n    >>> from django_richenum.models import CanonicalNameEnumField\n    >>> class MyModel(models.Model):\n    ...    my_enum = CanonicalNameEnumField(MyRichEnum, default=MyRichEnum.FOO)\n    ...\n    >>> m = MyModel.objects.create(my_enum=MyRichEnum.BAR)\n    >>> m.save()\n    >>> m.my_enum\n    RichEnumValue - canonical_name: 'bar'  display_name: 'Bar'\n    >>> MyModel.objects.filter(my_enum=MyRichEnum.BAR)\n\n\n================\nRelated Packages\n================\n\nrichenum\n  Package implementing RichEnum and OrderedRichEnum that django-richenum depends on.\n\n  | `GitHub <https://github.com/hearsaycorp/richenum>`_\n\n  | `PyPi <https://pypi.python.org/pypi/richenum/>`_\n\n\n============\nContributing\n============\n\n#. Fork the repo from `GitHub <https://github.com/hearsaycorp/django-richenum>`_.\n#. Make your changes.\n#. Add unittests for your changes.\n#. Run `pep8 <https://pypi.python.org/pypi/pep8>`_, `pyflakes <https://pypi.python.org/pypi/pyflakes>`_, and `pylint <https://pypi.python.org/pypi/pyflakes>`_ to make sure your changes follow the Python style guide and doesn't have any errors.\n#. Add yourself to the AUTHORS file (in alphabetical order).\n#. Send a pull request from your fork to the main repo.\n\n\nChangelog\n=========\n\n1.2.2 (2014-08-02)\n------------------\n    - Support Django 1.3\n\n1.2.1 (2014-06-02)\n------------------\n    - Remove uses of BaseException.message.\n\n1.2.0 (2013-12-03)\n------------------\n    - Add enum-aware versions of TypedMultipleChoiceField.\n\n1.1.0 (2013-12-03)\n------------------\n    - Fix form fields to support Django 1.6 (while maintaining\n      compatibility with 1.4 and 1.5).\n\n1.0.2 (2013-11-05)\n------------------\n    - Make EnumField.run_validators a no-op.\n      This stops some warnings from type comparison, and it doesn't seem\n      useful in an EnumField context.\n\n1.0.1 (2013-09-10)\n------------------\n    - Support South.\n\n1.0.0 (2013-08-16)\n------------------\n    - Initial public release.\n\n\nDeveloped and maintained by `Hearsay Social, Inc.\n<http://hearsaysocial.com>`_.\n\nContributors\n============\n| `Adam DePue <http://github.com/adepue>`_\n| `Akshay Shah <http://github.com/akshayjshah>`_\n| `Dale Hui <http://github.com/dhui>`_\n| `Robert MacCloy <http://github.com/rbm>`_\n| `Ben Lopatin <http://github.com/bennylope>`_",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hearsaycorp/django-richenum",
    "keywords": "python django enum richenum",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-richenum",
    "package_url": "https://pypi.org/project/django-richenum/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-richenum/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hearsaycorp/django-richenum"
    },
    "release_url": "https://pypi.org/project/django-richenum/1.2.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django Enum library for python.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16080438,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cc73b03a66e5759b536b226c96f51109e00f209ec1b6870688f76e8be05b268",
        "md5": "41111d34c6b4b2fb786a37e489e1bd82",
        "sha256": "31364cdadd7af84cb5c73c70c35d9029b6485d3f91a8d4a2194725d5d01c4c61"
      },
      "downloads": -1,
      "filename": "django-richenum-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "41111d34c6b4b2fb786a37e489e1bd82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7006,
      "upload_time": "2014-08-02T19:49:07",
      "upload_time_iso_8601": "2014-08-02T19:49:07.542554Z",
      "url": "https://files.pythonhosted.org/packages/9c/c7/3b03a66e5759b536b226c96f51109e00f209ec1b6870688f76e8be05b268/django-richenum-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}