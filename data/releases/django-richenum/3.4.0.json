{
  "info": {
    "author": "Hearsay Social",
    "author_email": "opensource@hearsaysocial.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": ".. role:: python(code)\n          :language: python\n\n===============\ndjango-richenum\n===============\n\n.. image:: https://travis-ci.org/hearsaycorp/django-richenum.png?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/hearsaycorp/django-richenum\n\n.. image:: https://pypip.in/v/django-richenum/badge.png\n    :alt: Latest PyPI Version\n    :target: https://pypi.python.org/pypi/django-richenum/\n\n=====\nAbout\n=====\nA Django extension of richenum for Python. If you're unfamiliar with richenums, please read up on them (see `Related Packages`_) before using django-richenum.\n\n-----------\nModel Fields\n-----------\nIndexEnumField\n  Store ints in DB, but expose OrderedRichEnumValues in Python.\nCanonicalNameEnumField\n  Store varchar in DB, but expose RichEnumValues in Python.\n  We recommend that you use IndexEnumField for storage and query efficiency.\nLaxIndexEnumField\n  Like IndexEnumField, but also allows casting to and from canonical names.\n  Mainly used to help migrate existing code that uses strings as database values.\n\n-----------\nForm Fields\n-----------\nCanonicalEnumField\n  Uses the RichEnum/OrderedRichEnum canonical_name as form field values.\nIndexEnumField\n  Uses the OrderedRichEnum index as form field values.\n\n-----------\nDjango Admin\n-----------\nRichEnumFieldListFilter\n  Enables filtering by RichEnum model fields in the Django admin UI\n\n-----\nLinks\n-----\n| `GitHub <https://github.com/hearsaycorp/django-richenum>`_\n| `PyPi <https://pypi.python.org/pypi/django-richenum/>`_\n\n============\nInstallation\n============\n.. code:: bash\n\n    $ pip install django-richenum\n\n=============\nExample Usage\n=============\n--------------\nIndexEnumField\n--------------\n.. code:: python\n\n    >>> from richenum import OrderedRichEnum, OrderedRichEnumValue\n    >>> class MyOrderedRichEnum(OrderedRichEnum):\n    ...    FOO = OrderedRichEnumValue(index=1, canonical_name=\"foo\", display_name=\"Foo\")\n    ...    BAR = OrderedRichEnumValue(index=2, canonical_name=\"bar\", display_name=\"Bar\")\n    ...\n    >>> from django.db import models\n    >>> from django_richenum.models import IndexEnumField\n    >>> class MyModel(models.Model):\n    ...    my_enum = IndexEnumField(MyOrderedRichEnum, default=MyOrderedRichEnum.FOO)\n    ...\n    >>> m = MyModel.objects.create(my_enum=MyOrderedRichEnum.BAR)\n    >>> m.save()\n    >>> m.my_enum\n    OrderedRichEnumValue - idx: 2  canonical_name: 'bar'  display_name: 'Bar'\n    >>> MyModel.objects.filter(my_enum=MyOrderedRichEnum.BAR)\n\n\n----------------------\nCanonicalNameEnumField\n----------------------\n.. code:: python\n\n    >>> from richenum import RichEnum, RichEnumValue\n    >>> class MyRichEnum(RichEnum):\n    ...    FOO = RichEnumValue(canonical_name=\"foo\", display_name=\"Foo\")\n    ...    BAR = RichEnumValue(canonical_name=\"bar\", display_name=\"Bar\")\n    ...\n    >>> from django.db import models\n    >>> from django_richenum.models import CanonicalNameEnumField\n    >>> class MyModel(models.Model):\n    ...    my_enum = CanonicalNameEnumField(MyRichEnum, default=MyRichEnum.FOO)\n    ...\n    >>> m = MyModel.objects.create(my_enum=MyRichEnum.BAR)\n    >>> m.save()\n    >>> m.my_enum\n    RichEnumValue - canonical_name: 'bar'  display_name: 'Bar'\n    >>> MyModel.objects.filter(my_enum=MyRichEnum.BAR)\n\n----------------------\nRichEnumFieldListFilter\n----------------------\n.. code:: python\n\n    >>> from django_richenum.admin import register_admin_filters\n    >>> register_admin_filters()\n\n\n================\nRelated Packages\n================\n\nrichenum\n  Package implementing RichEnum and OrderedRichEnum that django-richenum depends on.\n\n  | `GitHub <https://github.com/hearsaycorp/richenum>`_\n\n  | `PyPi <https://pypi.python.org/pypi/richenum/>`_\n\n=====\nNotes\n=====\n\nIf you're using Django 1.7+, you'll need to use the :python:`@deconstructible` decorator for your :python:`RichEnumValue` and :python:`OrderedRichEnumValue` classes so Django's migration framework knows how to serialize your :python:`RichEnumValue` and :python:`OrderedRichEnumValue`.\n\n.. code:: python\n\n    >>> from django.utils.deconstruct import deconstructible\n    >>> from richenum import RichEnumValue, OrderedRichEnumValue\n    >>> @deconstructible\n    ... class CustomRichEnumValue(RichEnumValue):\n    ...     pass\n    ...\n    >>> @deconstructible\n    ... class CustomOrderedRichEnumValue(OrderedRichEnumValue):\n    ...     pass\n    ...\n\n============\nContributing\n============\n\n#. Fork the repo from `GitHub <https://github.com/hearsaycorp/django-richenum>`_.\n#. Make your changes.\n#. Add unittests for your changes.\n#. Run `pep8 <https://pypi.python.org/pypi/pep8>`_, `pyflakes <https://pypi.python.org/pypi/pyflakes>`_, and `pylint <https://pypi.python.org/pypi/pyflakes>`_ to make sure your changes follow the Python style guide and doesn't have any errors.\n#. Add yourself to the AUTHORS file (in alphabetical order).\n#. Send a pull request from your fork to the main repo.\n\n\nChangelog\n=========\n\n3.4.0 (2018-02-10)\n------------------\n    - Drop support for old Django versions\n\n\n3.3.0 (2018-01-21)\n------------------\n    - removed Python 3.4\n    - add support for Python 3.6\n    - add support for Django 2.0\n    - Properly mark raw strings (used as regex)\n\n\n3.2.0 (2016-08-22)\n------------------\n    - Python 3.4 & 3.5 support\n\n3.1.0 (2015-08-02)\n------------------\n    - Django 1.10 support\n\n3.0.1 (2015-07-13)\n------------------\n    - Prepare for python 3 support\n\n2.4.1 (2015-05-04)\n------------------\n    - replace mysql client library (for tests)\n    - stop using lambdas\n\n2.3.0 (2015-05-04)\n------------------\n    - Support Django 1.8\n\n2.2.0 (2015-03-11)\n------------------\n    - Support ModelForms for non-SQLite DB backends\n\n2.1.0 (2014-11-01)\n------------------\n    - Support migration in Django 1.7\n\n2.0.0 (2014-09-04)\n------------------\n    - Support Django 1.7, drop support for Python 2.6.\n\n1.2.2 (2014-08-02)\n------------------\n    - Support Django 1.3\n\n1.2.1 (2014-06-02)\n------------------\n    - Remove uses of BaseException.message.\n\n1.2.0 (2013-12-03)\n------------------\n    - Add enum-aware versions of TypedMultipleChoiceField.\n\n1.1.0 (2013-12-03)\n------------------\n    - Fix form fields to support Django 1.6 (while maintaining\n      compatibility with 1.4 and 1.5).\n\n1.0.2 (2013-11-05)\n------------------\n    - Make EnumField.run_validators a no-op.\n      This stops some warnings from type comparison, and it doesn't seem\n      useful in an EnumField context.\n\n1.0.1 (2013-09-10)\n------------------\n    - Support South.\n\n1.0.0 (2013-08-16)\n------------------\n    - Initial public release.\n\n\nDeveloped and maintained by `Hearsay Social, Inc.\n<https://hearsaysocial.com>`_.\n\nContributors\n============\n| `Adam DePue <https://github.com/adepue>`_\n| `Akshay Shah <https://github.com/akshayjshah>`_\n| `Dale Hui <https://github.com/dhui>`_\n| `Robert MacCloy <https://github.com/rbm>`_\n| `Ben Lopatin <https://github.com/bennylope>`_\n| `Asher Foa <https://github.com/asherf>`_\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hearsaycorp/django-richenum",
    "keywords": "python django enum richenum",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-richenum",
    "package_url": "https://pypi.org/project/django-richenum/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-richenum/",
    "project_urls": {
      "Homepage": "https://github.com/hearsaycorp/django-richenum"
    },
    "release_url": "https://pypi.org/project/django-richenum/3.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Enum library for python.",
    "version": "3.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16080438,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c423dd94c4d22c5411dea601418002ad62a88745f91ac192e3fb3592488059b2",
        "md5": "dd298f9f73dc26927721d9221cf28875",
        "sha256": "88b7d101ecdba24259d0a49fbd44b60513e4b1661a8f0c456dad1c9897f79bcc"
      },
      "downloads": -1,
      "filename": "django-richenum-3.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dd298f9f73dc26927721d9221cf28875",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10075,
      "upload_time": "2018-02-11T00:55:56",
      "upload_time_iso_8601": "2018-02-11T00:55:56.548748Z",
      "url": "https://files.pythonhosted.org/packages/c4/23/dd94c4d22c5411dea601418002ad62a88745f91ac192e3fb3592488059b2/django-richenum-3.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}