{
  "info": {
    "author": "Lele Gaifax",
    "author_email": "lele@metapensiero.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database"
    ],
    "description": ".. -*- coding: utf-8 -*-\n.. :Project:   metapensiero.sqlalchemy.proxy\n.. :Created:   gio 30 apr 2009 10:01:20 CEST\n.. :Author:    Lele Gaifax <lele@metapensiero.it>\n.. :License:   GNU General Public License version 3 or later\n.. :Copyright: © 2009, 2010, 2012, 2013, 2014, 2016, 2017 Lele Gaifax\n..\n\n===============================\n metapensiero.sqlalchemy.proxy\n===============================\n\nExpose SQLAlchemy's queries and their metadata to a webservice\n==============================================================\n\nThis package contains a few utilities to make it easier applying some filtering to a stock\nquery and obtaining the resultset in various formats.\n\nSince version 4 only Python 3 is supported: if you are still working with Python 2 (really⁈)\nyou may want to use `version 3.6`__ instead.\n\nSee latest documentation at http://metapensierosqlalchemyproxy.readthedocs.io/en/latest/\n\n__ https://pypi.python.org/pypi/metapensiero.sqlalchemy.proxy/3.6\n\n\nChanges\n-------\n\n5.2 (2018-03-12)\n~~~~~~~~~~~~~~~~\n\n* Handle extraction of metadata from a BinaryExpression such as ``SELECT jsonfield['attr']``\n\n\n5.1 (2018-03-08)\n~~~~~~~~~~~~~~~~\n\n* When a column has a *default* value, and it is directly computable (i.e. it is not a server\n  side default), then extract it into its metadata\n\n\n5.0 (2017-07-22)\n~~~~~~~~~~~~~~~~\n\n.. warning:: This release **breaks** backward compatibility in several ways!\n\n* More versatile way to add/override basic metadata information (see\n  ``register_sa_type_metadata()``)\n\n* More versatile way to use different JSON library or encode/decode settings (see\n  ``register_json_decoder_encoder()``): although the default implementation is still based on\n  nssjson__, it is *not* required by default anymore at install time\n\n* Basic metadata changed:\n\n  - the `width` slot for all fields is gone, it's more reasonably computed by the actual UI\n    framework in use: it was rather arbitrary anyway, and set to ``length * 10`` for String\n    columns\n\n  - the `length` slot is present only for ``String`` columns\n\n  - the `type` slot now basically follows the SQLAlchemy nomenclature, in particular:\n\n    Integer\n      is now ``integer`` instead of ``int``\n\n    BigInteger\n      is now ``integer``, instead of ``int`` with an arbitrarily different ``width`` than the\n      one used for Integer\n\n    Numeric\n      is now ``numeric`` instead of ``float``\n\n    DateTime\n      is now ``datetime`` instead of ``date`` with `timestamp` set to ``True``\n\n    Time\n      is now ``time`` instead of ``date`` with `time` set to ``True``\n\n    Interval\n      is now ``interval`` instead of ``string`` with ``timedelta`` set to ``True``\n\n    Text\n      is now ``text`` instead of ``string`` with an arbitrary `width` of ``50``\n\n    UnicodeText\n      is now ``text```\n\n    Unicode\n      is now ``string``\n\n  - the `format` slot for DateTime, Date and Time fields is gone, as it was ExtJS specific\n\n__ https://pypi.python.org/pypi/nssjson\n\n\n4.8 (2017-06-17)\n~~~~~~~~~~~~~~~~\n\n* Use a tuple instead of a list for the `foreign_keys` slot in metadata, and for the\n  `primary_key` too when it is composed by more than one column\n\n\n4.7 (2017-05-18)\n~~~~~~~~~~~~~~~~\n\n* Properly recognize SA Interval() columns\n\n\n4.6 (2017-05-08)\n~~~~~~~~~~~~~~~~\n\n* Handle big integers in metadata information\n\n\n4.5 (2017-04-10)\n~~~~~~~~~~~~~~~~\n\n* Fix a crash when applying a filter on a non-existing column in a statement selecting from a\n  function\n\n\n4.4 (2017-04-01)\n~~~~~~~~~~~~~~~~\n\n* Rename filter operator ``CONTAINED`` to ``CONTAINS``, and reimplement it to cover different\n  data types, in particular PostgreSQL's ranges\n\n\n4.3 (2017-03-22)\n~~~~~~~~~~~~~~~~\n\n* Minor tweak, no externally visible changes\n\n\n4.2 (2017-03-10)\n~~~~~~~~~~~~~~~~\n\n* Reduce clutter, generating a simpler representation of Operator and Direction enums\n\n\n4.1 (2017-02-13)\n~~~~~~~~~~~~~~~~\n\n* Fix an oversight in Filter tuple slots positions, to simplify Filter.make() implementation\n\n\n4.0 (2017-02-13)\n~~~~~~~~~~~~~~~~\n\n* From now on, a Python3-only package\n\n* Backward incompatible sorters and filters refactor, to make interaction easier for code using\n  the library\n\n* Drop obsolete Pylons extension\n\n\n3.6 (2017-01-11)\n~~~~~~~~~~~~~~~~\n\n* New Sphinx documentation\n\n* Field's metadata now carries also information about foreign keys\n\n* Handle literal columns in core queries\n\n\n3.5 (2016-12-29)\n~~~~~~~~~~~~~~~~\n\n* Fix incompatibility issue with SQLAlchemy 1.1.x when using ORM\n\n\n3.4 (2016-03-12)\n~~~~~~~~~~~~~~~~\n\n* Better recognition of boolean argument values, coming from say an HTTP channel as string\n  literals\n\n* Use tox to run the tests\n\n\n3.3 (2016-02-23)\n~~~~~~~~~~~~~~~~\n\n* Handle the case when the column type cannot be determined\n\n\n3.2 (2016-02-19)\n~~~~~~~~~~~~~~~~\n\n* Fix corner case with queries ordered by a subselect\n\n\n3.1 (2016-02-07)\n~~~~~~~~~~~~~~~~\n\n* Fix metadata extraction of labelled columns on joined tables\n\n* Adjust size of time fields and align them to the right\n\n\n3.0 (2016-02-03)\n~~~~~~~~~~~~~~~~\n\n* Internal, backward incompatible code reorganization, splitting the main module into smaller\n  pieces\n\n* Handle corner cases with joined queries involving aliased tables\n\n\nPrevious changes are here__.\n\n__ https://bitbucket.org/lele/metapensiero.sqlalchemy.proxy/src/master/OLDERCHANGES.rst\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/lele/metapensiero.sqlalchemy.proxy",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metapensiero.sqlalchemy.proxy",
    "package_url": "https://pypi.org/project/metapensiero.sqlalchemy.proxy/",
    "platform": "",
    "project_url": "https://pypi.org/project/metapensiero.sqlalchemy.proxy/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/lele/metapensiero.sqlalchemy.proxy"
    },
    "release_url": "https://pypi.org/project/metapensiero.sqlalchemy.proxy/5.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Expose SQLAlchemy's queries and their metadata to a webservice",
    "version": "5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14507589,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe94883229f3a57e26d49c6cac1308715a6e61b9a7e87a18a61f0383dae34c1f",
        "md5": "de30a9aa8581e64e9713036772fe9f50",
        "sha256": "4500e8604e7f2b8678e0212af7123268e8d7c47849d8da345158246d6f398c1d"
      },
      "downloads": -1,
      "filename": "metapensiero.sqlalchemy.proxy-5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "de30a9aa8581e64e9713036772fe9f50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38818,
      "upload_time": "2018-03-12T09:48:41",
      "upload_time_iso_8601": "2018-03-12T09:48:41.041316Z",
      "url": "https://files.pythonhosted.org/packages/fe/94/883229f3a57e26d49c6cac1308715a6e61b9a7e87a18a61f0383dae34c1f/metapensiero.sqlalchemy.proxy-5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}