{
  "info": {
    "author": "Adam Johnson",
    "author_email": "me@adamj.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==============\ndjango-upgrade\n==============\n\n.. image:: https://img.shields.io/github/workflow/status/adamchainz/django-upgrade/CI/main?style=for-the-badge\n   :target: https://github.com/adamchainz/django-upgrade/actions?workflow=CI\n\n.. image:: https://img.shields.io/codecov/c/github/adamchainz/django-upgrade/main?style=for-the-badge\n  :target: https://app.codecov.io/gh/adamchainz/django-upgrade\n\n.. image:: https://img.shields.io/pypi/v/django-upgrade.svg?style=for-the-badge\n   :target: https://pypi.org/project/django-upgrade/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge\n   :target: https://github.com/psf/black\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white&style=for-the-badge\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\nAutomatically upgrade your Django projects.\n\nInstallation\n============\n\nUse **pip**:\n\n.. code-block:: sh\n\n    python -m pip install django-upgrade\n\nPython 3.8 to 3.9 supported.\n\nOr with `pre-commit <https://pre-commit.com/>`__ in the ``repos`` section of your ``.pre-commit-config.yaml`` file (`docs <https://pre-commit.com/#plugins>`__):\n\n.. code-block:: yaml\n\n    -   repo: https://github.com/adamchainz/django-upgrade\n        rev: ''  # replace with latest tag on GitHub\n        hooks:\n        -   id: django-upgrade\n            args: [--target-version, \"3.2\"]   # Replace with Django version\n\nWorks best before any reformatters such as `isort <https://isort.readthedocs.io/>`__ or `Black <https://black.readthedocs.io/en/stable/>`__.\n\n----\n\n**Are your tests slow?**\nCheck out my book `Speed Up Your Django Tests <https://gumroad.com/l/suydt>`__ which covers loads of best practices so you can write faster, more accurate tests.\n\n----\n\nUsage\n=====\n\n``django-upgrade`` is a commandline tool that rewrites files in place.\nPass your Django version as ``<major>.<minor>`` with ``--target-version`` and the fixers will rewrite code not to trigger ``DeprecationWarning`` on that version of Django.\nFor example:\n\n.. code-block:: sh\n\n    django-upgrade --target-version 3.2 example/core/models.py example/settings.py\n\nFor more on usage run ``django-upgrade --help``.\nThe full list of fixers is below.\n\nHistory\n=======\n\n`django-codemod <https://django-codemod.readthedocs.io/en/latest/>`__ is a pre-existing, more complete Django auto-upgrade tool, written by Bruno Alla.\nUnfortunately its underlying library `LibCST <https://pypi.org/project/libcst/>`__ is particularly slow, making it annoying to run django-codemod on every commit and in CI.\nAdditionally LibCST only advertises support up to Python 3.8 (at time of writing).\n\ndjango-upgrade is an experiment in reimplementing such a tool using the same techniques as the fantastic `pyupgrade <https://github.com/asottile/pyupgrade>`__.\nThe tool leans on the standard library’s `ast <https://docs.python.org/3/library/ast.html>`__ and `tokenize <https://docs.python.org/3/library/tokenize.html>`__ modules, the latter via the `tokenize-rt wrapper <https://github.com/asottile/tokenize-rt>`__.\nThis means it will always be fast and support the latest versions of Python.\n\nFor a quick benchmark: running django-codemod against a medium Django repository with 153k lines of Python takes 133 seconds.\npyupgrade and django-upgrade both take less than 0.5 seconds.\n\nFixers\n======\n\nDjango 2.2\n----------\n\nBased on the `Django 2.2 release notes <https://docs.djangoproject.com/en/2.2/releases/2.2/#features-deprecated-in-2-2>`__.\n\n``QuerySetPaginator``\n~~~~~~~~~~~~~~~~~~~~~\n\nRewrites depreceated alias ``django.core.paginator.QuerySetPaginator`` to ``Paginator``.\n\n.. code-block:: diff\n\n    -from django.core.paginator import QuerySetPaginator\n    +from django.core.paginator import Paginator\n\n    -QuerySetPaginator(...)\n    +Paginator(...)\n\n\n``FixedOffset``\n~~~~~~~~~~~~~~~\n\nRewrites deprecated class ``FixedOffset(x, y))`` to ``timezone(timedelta(minutes=x), y)``\n\nKnown limitation: this fixer will leave code broken with an ``ImportError`` if ``FixedOffset`` is called with only ``*args`` or ``**kwargs``.\n\n.. code-block:: diff\n\n    -from django.utils.timezone import FixedOffset\n    -FixedOffset(120, \"Super time\")\n    +from datetime import timedelta, timezone\n    +timezone(timedelta(minutes=120), \"Super time\")\n\n\nDjango 3.0\n----------\n\nBased on the `Django 3.0 release notes <https://docs.djangoproject.com/en/3.0/releases/3.0/#features-deprecated-in-3-0>`__.\n\n``django.utils.encoding`` aliases\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRewrites ``smart_text()`` to ``smart_str()``, and ``force_text()`` to ``force_str()``.\n\n.. code-block:: diff\n\n    -from django.utils.encoding import force_text, smart_text\n    +from django.utils.encoding import force_str, smart_str\n\n\n    -force_text(\"yada\")\n    -smart_text(\"yada\")\n    +force_str(\"yada\")\n    +smart_str(\"yada\")\n\nDjango 3.1\n----------\n\nBased on the `Django 3.1 release notes <https://docs.djangoproject.com/en/3.1/releases/3.1/#features-deprecated-in-3-1>`__.\n\n``JSONField``\n~~~~~~~~~~~~~\n\nRewrites imports of ``JSONField`` and related transform classes from those in ``django.contrib.postgres`` to the new all-database versions.\n\n.. code-block:: diff\n\n    -from django.contrib.postgres.fields import JSONField\n    +from django.db.models import JSONField\n\n``PASSWORD_RESET_TIMEOUT_DAYS``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRewrites the setting ``PASSWORD_RESET_TIMEOUT_DAYS`` to ``PASSWORD_RESET_TIMEOUT``, adding the multiplication by the number of seconds in a day.\n\nSettings files are heuristically detected as modules with the whole word “settings” somewhere in their path.\nFor example ``myproject/settings.py`` or ``myproject/settings/production.py``.\n\n.. code-block:: diff\n\n    -PASSWORD_RESET_TIMEOUT_DAYS = 4\n    +PASSWORD_RESET_TIMEOUT = 60 * 60 * 24 * 4\n\n``Signal``\n~~~~~~~~~~\n\nRemoves the deprecated documentation-only ``providing_args`` argument.\n\n.. code-block:: diff\n\n     from django.dispatch import Signal\n    -my_cool_signal = Signal(providing_args=[\"documented\", \"arg\"])\n    +my_cool_signal = Signal()\n\n``get_random_string``\n~~~~~~~~~~~~~~~~~~~~~\n\nInjects the now-required ``length`` argument, with its previous default ``12``.\n\n.. code-block:: diff\n\n     from django.utils.crypto import get_random_string\n    -key = get_random_string(allowed_chars=\"01234567899abcdef\")\n    +key = get_random_string(length=12, allowed_chars=\"01234567899abcdef\")\n\nDjango 3.2\n----------\n\nBased on the `Django 3.2 release notes <https://docs.djangoproject.com/en/3.2/releases/3.2/#features-deprecated-in-3-2>`__.\n\n``EmailValidator``\n~~~~~~~~~~~~~~~~~~\n\nRewrites keyword arguments to their new names: ``whitelist`` to ``allowlist``, and ``domain_whitelist`` to ``domain_allowlist``.\n\n.. code-block:: diff\n\n     from django.core.validators import EmailValidator\n\n    -EmailValidator(whitelist=[\"example.com\"])\n    +EmailValidator(allowlist=[\"example.com\"])\n    -EmailValidator(domain_whitelist=[\"example.org\"])\n    +EmailValidator(domain_allowlist=[\"example.org\"])\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-upgrade",
    "keywords": "Django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-upgrade",
    "package_url": "https://pypi.org/project/django-upgrade/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-upgrade/",
    "project_urls": {
      "Changelog": "https://github.com/adamchainz/django-upgrade/blob/main/HISTORY.rst",
      "Homepage": "https://github.com/adamchainz/django-upgrade",
      "Twitter": "https://twitter.com/adamchainz"
    },
    "release_url": "https://pypi.org/project/django-upgrade/1.1.0/",
    "requires_dist": [
      "tokenize-rt (>=4.1.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Automatically upgrade your Django projects.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16904361,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f7af195ba03bb7c8cae26df566b3d80cdf8420966bb12ccbe199e81542d733f",
        "md5": "e03b54b8253db936444fbb9e247381a2",
        "sha256": "88a0e870c824db630732a958da0ec6c3e2bc64e2403b8ab6dfc4c789edc341f3"
      },
      "downloads": -1,
      "filename": "django_upgrade-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e03b54b8253db936444fbb9e247381a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17924,
      "upload_time": "2021-08-28T22:57:07",
      "upload_time_iso_8601": "2021-08-28T22:57:07.446087Z",
      "url": "https://files.pythonhosted.org/packages/2f/7a/f195ba03bb7c8cae26df566b3d80cdf8420966bb12ccbe199e81542d733f/django_upgrade-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da665a33f4262dc695f8db9ee24a47b74724da5ff3e4e902bd166f25a611cade",
        "md5": "b574a501d001a81c22031c934bfa76f8",
        "sha256": "c54fb896454d9ff9bb54c3ce1a3659a83a77945197f60b96c397f16e518afbc8"
      },
      "downloads": -1,
      "filename": "django-upgrade-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b574a501d001a81c22031c934bfa76f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15382,
      "upload_time": "2021-08-28T22:57:08",
      "upload_time_iso_8601": "2021-08-28T22:57:08.552042Z",
      "url": "https://files.pythonhosted.org/packages/da/66/5a33f4262dc695f8db9ee24a47b74724da5ff3e4e902bd166f25a611cade/django-upgrade-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}