{
  "info": {
    "author": "Julian Berman",
    "author_email": "Julian@GrayVines.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "=====\nmkenv\n=====\n\nmkenv is a simpler tool for creating and maintaining virtualenvs in a central\nlocation.\n\nIt consists of the 5% of `virtualenvwrapper\n<https://virtualenvwrapper.readthedocs.org/en/latest/>`_ that I actually use,\nand is in some ways meant to more closely complement ``virtualenv`` rather than\ncompletely wrapping or hiding it.\n\n\nInstallation\n------------\n\nThe usual::\n\n    $ pip install mkenv\n\n\nUsage\n-----\n\nUsage is similar to ``mkvirtualenv``, although ``mkenv`` passes\narguments directly through to ``virtualenv``::\n\n    $ mkenv nameofvenv -- -p pypy\n\nwill create a virtual environment in an appropriate platform-specific\ndata directory, or in the directory specified by ``WORKON_HOME`` for\ncompatibility with virtualenvwrapper.\n\n\nTemporary Virtualenvs\n---------------------\n\nI also find ``mktmpenv`` useful for quick testing. To support its use case,\n``mkenv`` currently supports a different but similar style of temporary\nvirtualenv.\n\nInvoking::\n\n    $ venv=$(mkenv -t)\n\nin your shell will create (or re-create) a global temporary virtualenv,\nand print its ``bin/`` subdirectory (which in this case will be then\nstored in the ``venv`` variable). It can subsequently be used by, e.g.::\n\n    $ $venv/python\n\nor::\n\n    $ $venv/pip ...\n\net cetera.\n\nYou may prefer using::\n\n    $ cd $(mkenv -t)\n\nas your temporary venv workflow if you're into that sort of thing instead.\n\nThe global virtualenv is cleared each time you invoke ``mkenv -t``.\nUnless you care, unlike virtualenvwrapper's ``mktmpenv``, there's no\nneed to care about cleaning it up, whenever it matters for the next\ntime, it will be cleared and overwritten.\n\n``mkenv`` may support the more similar \"traditional\" one-use virtualenv in the\nfuture, but given that it does not activate virtualenvs by default (see below),\nthe current recommendation for this use case would be to simply use the\n``virtualenv`` binary directly.\n\n\nThe 5 Minute Tutorial\n---------------------\n\nBesides the ``mkenv`` for named-virtualenv creation and ``mkenv -t`` for\ntemporary-virtualenv creation described above::\n\n    $ findenv name foo\n\nwill output (to standard output) the path to a virtualenv with the given name\n(see also ``--existing-only``), and::\n\n    $ rmenv foo\n\nwill remove it.\n\nThere are a number of other slight variants, see the ``--help`` information for\neach of the three binaries.\n\n*Real documentation to come (I hope)*\n\n\nWhy don't I use virtualenvwrapper?\n----------------------------------\n\n``virtualenvwrapper`` is great! I've used it for a few years. But I've\nslowly settled on a much smaller subset of its functionality that I like\nto use. Specifically:\n\n    * I don't like activating virtualenvs.\n      \n      virtualenvs are magical and hacky enough on their own, and piling\n      activation on top just makes things even more messy for me, especially\n      when moving around between different projects in a shell.  Some people\n      use ``cd`` tricks to solve this, but I just want simplicity.\n\n    * I don't need project support.\n\n      I've never attached a project to a virtualenv. I just use a naming\n      convention, naming the virtualenv with the name of the repo (with simple\n      coersion), and then using `dynamic directory expansion in my shell\n      <https://github.com/Julian/dotfiles/blob/4376b05de0f7af9e7ecb2e3596b8830c806c5d71/.config/zsh/.zshrc#L59-L92>`_\n      to handle association.\n\nBasically, I just want a thing that is managing a central repository of\nvirtualenvs for me. So that's what ``mkenv`` does.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Julian/mkenv",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mkenv",
    "package_url": "https://pypi.org/project/mkenv/",
    "platform": "",
    "project_url": "https://pypi.org/project/mkenv/",
    "project_urls": {
      "Homepage": "https://github.com/Julian/mkenv"
    },
    "release_url": "https://pypi.org/project/mkenv/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simpler tool for creating venvs in a central location",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4073461,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32798f2be615bc38608c672a83d7109de0e646b1a9accab1b48717372ab8ac6a",
        "md5": "8edce8a6c3e7665fb6f2ba4fb30c86d5",
        "sha256": "d7d61334fa0e4a106e480a9b3cdbbbd88bf5823e56680795667d16d72453e9bb"
      },
      "downloads": -1,
      "filename": "mkenv-1.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "8edce8a6c3e7665fb6f2ba4fb30c86d5",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 14588,
      "upload_time": "2016-12-23T22:22:15",
      "upload_time_iso_8601": "2016-12-23T22:22:15.862100Z",
      "url": "https://files.pythonhosted.org/packages/32/79/8f2be615bc38608c672a83d7109de0e646b1a9accab1b48717372ab8ac6a/mkenv-1.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f668b25234962f35b799f731e5fe89268973a630acb9aea81acd25bc2ecbaab",
        "md5": "f784c9a2d8fee28bd7055ca4cac73374",
        "sha256": "fab9e0b8660074161ba7154550b3bc931451de930bcfdc5cde5744ca8632cd3b"
      },
      "downloads": -1,
      "filename": "mkenv-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f784c9a2d8fee28bd7055ca4cac73374",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10870,
      "upload_time": "2016-12-23T22:22:17",
      "upload_time_iso_8601": "2016-12-23T22:22:17.542736Z",
      "url": "https://files.pythonhosted.org/packages/6f/66/8b25234962f35b799f731e5fe89268973a630acb9aea81acd25bc2ecbaab/mkenv-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}