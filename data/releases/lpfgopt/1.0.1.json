{
  "info": {
    "author": "Mark E. Redd",
    "author_email": "redddogjr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# Leapfrog Optimizer Package\n\n- Author  : Mark Redd\n- Email   : redddogjr@gmail.com\n- GitHub  : https://github.com/flythereddflagg\n- Website : http://www.r3eda.com/\n\n## About\n\nThis package is based the [*Leapfrogging Optimization Algorithm*](http://www.r3eda.com/leapfrogging-optimization-algorithm/) published by [Dr. R. Russell Rhinehart](http://www.r3eda.com/about-russ/). The following publications explain the technique:\n\n- Rhinehart, R. R., M. Su, and U. Manimegalai-Sridhar, “Leapfrogging and Synoptic Leapfrogging: a new optimization approach”, Computers & Chemical Engineering, Vol. 40, 11 May 2012, pp. 67-81.\n\n- Manimegalai-Sridhar, U., A. Govindarajan, and R. R. Rhinehart, “Improved Initialization of Players in Leapfrogging Optimization”, Computers & Chemical Engineering, Vol. 60, 2014, 426-429.\n\n- Rhinehart, R. R., “Convergence Criterion in Optimilsation of Stochastic Processes”, Computers & Chemical Engineering, Vol. 68, 4 Sept 2014, pp 1-6.\n\n## Installation \n\nYou can install via pip or using the setup.py script in the source code. Instructions are shown below.\n\n#### Minimum system Requirements for Installation\n\n - Python >= 3.6\n\n#### Recommended System Requirements for Installation\n\n- Windows or Linux\n- x86 processor with a 64-bit architecture\n- Additional Python Packages:\n  - scipy\n  - numpy\n  - pytest\n\n### Via pip\n\nThe `lpfgopt` package may be installed with `pip` using the following command:\n\n```bash\n$ pip install lpfgopt # You may need root privileges or the --user tag\n```\n\nIf you wish to install locally with `pip` you may do the following:\n- Download and unzip the archive or clone it with git.\n- Open the main directory where `setup.py` is located and run the following command:\n  ```bash\n  $ pip install .\n  ```\n### Via setup.py\n\n- Download the master branch and unzip the archive or clone it with git.\n- Open the main directory where \"setup.py\" is located and run the following command:\n  ```bash\n  $ python setup.py install     # You may need root priviliges or use the --user tag\n  ```\n### Test the Installation\n\nThe software should be installed correctly. You may validate the installation by executing the following commands in a terminal:\n\n```python\n$ python\n>>> import lpfgopt\n>>> lpfgopt.__version__\n'X.X.X'\n>>> lpfgopt.minimize(lambda x: x[0]**2 + 10, [[-10, 10]])['x']\n[<approximately 0.0>]\n>>>\n```\nIf the above commands produce the output congratulations! You have successfully installed the package!\n## Usage\nUse the `lpfgopt.minimize` function to solve optimization problems of the form:\n\n$minimize$ $f(x)$\n$s.t.:$\n\n- $g(x) \\le 0$\n\n- $bound_{1,1} \\le x[1] \\le bound_{1,2}$\n\n  $bound_{2,1} \\le x[2] \\le bound_{2,2}$\n\n  $...$\n\n  $bound_{n,1} \\le x[n] \\le bound_{n,2}$\n\nwhere $n$ is the number of decision variables and $bound$ is an array-like with shape $(n, 2)$. $bound$ may be a list of lists or a `numpy` `ndarray`.\n\n### Example Usage\nThe following is a simple optimization where the minimum value of the following equation is found:  \n - $f(x) = x^2+y^2$\n\n - Subject to: \n\n   $g(x) = -x^2 - y + 10 \\le 0$ **or** g(x) = -x^2 - y + 10 <= 0\n\n   $$x, y \\in [-5, 5]$$\n```python\n# test_lpfgopt.py\nfrom lpfgopt import minimize\nimport matplotlib.pyplot as plt\n\n# set up the objective funciton, \n# constraint fuction and bounds\nf = lambda x: sum([i**2 for i in x])\ng = lambda x: -x[0]**2 + 10 - x[1] \nbounds = [[-5,5] for i in range(2)]\n\n# run the optimization\nsol = minimize(f, bounds, fconstraint=g)['x']\nprint(f\"Solution is: {sol}\")\n\n# plot the results on a contour plot\ngg = lambda x: -x**2 + 10 # for plotting purposes\n\nplt.figure(figsize=(8,8))\nx, y = np.linspace(-5,5,1000), np.linspace(-5,5,1000)\nX, Y = np.meshgrid(x,y)\nZ = f([X,Y])\n\nplt.contourf(X,Y,Z)\nplt.plot(x, gg(x), \"r\", label=\"constraint\")\nplt.plot(*sol, 'x', \n         markersize=14, \n         markeredgewidth=4, \n         color=\"lime\", \n         label=\"optimum\")\nplt.ylim(-5,5)\nplt.xlim(-5,5)\nplt.legend()\nplt.show()\n```\nThis code will produce the following output:\n```bash\nSolution is: [-3.0958051486911997, 0.4159905027317925]\n```\nAs well as a plot that should look similar to the following image:\n\n![](./docs/media/sample_opt.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/flythereddflagg/lpfgopt",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.r3eda.com/",
    "keywords": "optimization direct-search gradient-free",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lpfgopt",
    "package_url": "https://pypi.org/project/lpfgopt/",
    "platform": "",
    "project_url": "https://pypi.org/project/lpfgopt/",
    "project_urls": {
      "Download": "https://github.com/flythereddflagg/lpfgopt",
      "Homepage": "http://www.r3eda.com/"
    },
    "release_url": "https://pypi.org/project/lpfgopt/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Leap Frog Optimizer",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7660615,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "294e13de27a2c712bda701b127898111c396940ac5e558f2df0b9e239657ec6a",
        "md5": "4acbca2e129ffb25855dcab53e312b3f",
        "sha256": "94f7c55d283f8a7a752c1f81d097bc7ffbf22091aa34fb6ffd05b89d0aecd8e5"
      },
      "downloads": -1,
      "filename": "lpfgopt-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4acbca2e129ffb25855dcab53e312b3f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 106770,
      "upload_time": "2020-07-08T22:06:42",
      "upload_time_iso_8601": "2020-07-08T22:06:42.402801Z",
      "url": "https://files.pythonhosted.org/packages/29/4e/13de27a2c712bda701b127898111c396940ac5e558f2df0b9e239657ec6a/lpfgopt-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95df2b9ca5ea3b72502a30e7c6a700ccac094e6eb6a5f07652cb200c063eae6e",
        "md5": "80b2534e56dceafcf6ffe13cde84d163",
        "sha256": "fa1e335d7b7e071863aae4f6c4cbc7ab9734045b8f1a4aa850aa92f94f236d15"
      },
      "downloads": -1,
      "filename": "lpfgopt-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "80b2534e56dceafcf6ffe13cde84d163",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 105647,
      "upload_time": "2020-07-08T22:06:43",
      "upload_time_iso_8601": "2020-07-08T22:06:43.753724Z",
      "url": "https://files.pythonhosted.org/packages/95/df/2b9ca5ea3b72502a30e7c6a700ccac094e6eb6a5f07652cb200c063eae6e/lpfgopt-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}