{
  "info": {
    "author": "GAEL Systems",
    "author_email": "drb-python@gael.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# WMTS driver\nThe web map tile service driver extends abstracts WxS driver with the getTile feature.\n\n# Nodes\n### WmtsServiceNode\nRepresents the WMTS service. This node has no attribute and\nhas as children WmtsOperationNode like GetTile.\nOthers children give information about the service like layers, and are XmlNode.\nThose children are filled in by the information returned from \nthe service's GetCapabilities request.\n\n### WmtsOperationNode\n\nRepresents an operation than can mde on the service.\nFor WMTS service, the mandatory operation are GetTile, GetCapabilities, and \nGetFeatureInfo.\nOptional operations may be provided by the service \nand indicated in the possibilities thereof. \nThose optional operations are also represented as WmtsOperationNode.\n\nFor perform an operation (mandatory or optional), you can use the operator '[]' with a dict that contains \nthe parameters of the request.\n\nExample:\n```\ndict_request = {'layers': 'mgrs_region', 'format': 'image/png', 'height': 256, 'width': 256, 'crs': 'EPSG:3857', 'bbox': '7514065.628545968,7514065.628545967,10018754.171394622,10018754.171394628'}\n\n\nget_map = service_wmts['GetTile'][dict_request]\n```\n\nFor mandatory operations GetTile and GetFeatureInfo you can\nalternatively use Predicate WmtsGetTilePredicate and WmtsGetFeatureInfoPredicate.\n\nSpecific class define WXSNodeOperationGetTile and WXSNodeOperationGetFeatureInfo \nfor accept respectively WmtsGetTilePredicate WmtsGetFeatureInfoPredicate.\n\nExample:\n```\npredicate = WmtsGetTilePredicate(layer='ORTHOIMAGERY.ORTHOPHOTOS',\n                                 tile_matrix_set='PM',\n                                 tile_matrix=14, tile_col=8180, tile_row=5905,\n                                 style='normal')\n\nget_map = service_wmts['GetTile'][predicate]\n```\n\n# Installation\n```\npip install drb-driver-wmts\n```\n# Examples\n\n```python\nfrom drb.drivers.wmts import WmtsServiceNode, WmtsGetTilePredicate\n\nurl_wmts='https+wmts://geoserver.swarm.ops.internal.gael.fr/geoserver/demo/wmts?'\n\nservice_wmts = WmtsServiceNode(url_wmts)\n\nlist_cap = service_wmts.children\n\nprint('----------------------------------------')\nprint('list_cap')\n\nprint(list_cap)\n\nfor child in service_wmts.children:\n    print(child)\n    print(child.name)\n\n#=>  <drb_driver_wXs.wXs_node.WXSNodeOperation object at 0x7f5403865d90>\n#=>  GetCapabilities\n#=>  <drb_driver_wmts.wmts_nodes.WmtsNodeOperationGetTile object at 0x7f54047b4700>\n#=>  GetTile\n#=>  <drb_driver_wmts.wmts_nodes.WmtsNodeOperationGetFeatureInfo object at 0x7f54047b4460>\n#=>  GetFeatureInfo\n#=>  <drb_driver_xml.xml_node.XmlNode object at 0x7f5402914c70>\n#=>  Contents\n\n    \nget_map = service_wmts['GetTile']\n\n\ndict_request = {'layer': 'ORTHOIMAGERY.ORTHOPHOTOS', 'format': 'image/jpeg', 'TILEMATRIXSET': 'PM', 'TILEMATRIX': 14, 'TILECOL': 8180, 'TILEROW': '5905', 'style': 'normal'}\n\n\ntile_res = service_wmts['GetTile'][dict_request]\n\nprint('----------------------------------------')\nprint('GetTile : with parameter return image')\nprint(tile_res)\n#=>  <drb_driver_image.image_node_factory.DrbImageBaseNode object at 0x7fc2cb23efa0>\n\n\npredicate = WmtsGetTilePredicate(layer='ORTHOIMAGERY.ORTHOPHOTOS',\n                                 tile_matrix_set='PM',\n                                 tile_matrix=14, tile_col=8180, tile_row=5905,\n                                 style='normal')\n\n\nprint('----------------------------------------')\nprint('GetTile : with parameter return image')\nprint(tile_res)\n#=>  <drb_driver_image.image_node_factory.DrbImageBaseNode object at 0x7f54047b4970>\n\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/drb-python/impl/wmts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drb-driver-wmts",
    "package_url": "https://pypi.org/project/drb-driver-wmts/",
    "platform": null,
    "project_url": "https://pypi.org/project/drb-driver-wmts/",
    "project_urls": {
      "Homepage": "https://gitlab.com/drb-python/impl/wmts"
    },
    "release_url": "https://pypi.org/project/drb-driver-wmts/1.1.0/",
    "requires_dist": [
      "drb-driver-wxs (~=1.1.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "DRB wmts OGC Service driver",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16174899,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1875483ad02c1dc1cf260b7aef8cfeb131b610353b07bac474da23c0c5bd635",
        "md5": "e27598077852c9587fac303fa1cf2ca8",
        "sha256": "63314c8de00f480f7fe3879813dd7fa91209b917cbd7a146cf3f76f20d733039"
      },
      "downloads": -1,
      "filename": "drb_driver_wmts-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e27598077852c9587fac303fa1cf2ca8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6018,
      "upload_time": "2022-12-21T15:38:35",
      "upload_time_iso_8601": "2022-12-21T15:38:35.443670Z",
      "url": "https://files.pythonhosted.org/packages/c1/87/5483ad02c1dc1cf260b7aef8cfeb131b610353b07bac474da23c0c5bd635/drb_driver_wmts-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1d4951f2ea15675026415b31918b22e4d86499164fb2569ab01d4a4820517e4",
        "md5": "eb8db3f16847cbde58e4b713d2d5582b",
        "sha256": "ab5b72f4fe37c26510e1dba21073b6f69fe8fd9ed8bc419d0865e61e901ff2ee"
      },
      "downloads": -1,
      "filename": "drb-driver-wmts-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eb8db3f16847cbde58e4b713d2d5582b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 24280,
      "upload_time": "2022-12-21T15:38:36",
      "upload_time_iso_8601": "2022-12-21T15:38:36.767231Z",
      "url": "https://files.pythonhosted.org/packages/d1/d4/951f2ea15675026415b31918b22e4d86499164fb2569ab01d4a4820517e4/drb-driver-wmts-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}