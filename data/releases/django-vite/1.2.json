{
  "info": {
    "author": "MrBin99",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Vite\n\nIntegration of [ViteJS](https://vitejs.dev/) in a Django project.\n\n## Installation\n\n### Django\n\n```\npip install django-vite\n```\n\nAdd `django_vite` to your `INSTALLED_APPS` in your `settings.py`\n(before your apps that are using it).\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_vite',\n    ...\n]\n```\n\n### ViteJS\n\nFollow instructions on [https://vitejs.dev/guide/](https://vitejs.dev/guide/).\nAnd mostly the SSR part.\n\nThen in your ViteJS config file :\n\n- Set the `base` options the same as your `STATIC_URL` Django setting.\n- Set the `build.outDir` path to where you want the assets to compiled.\n- Set the `build.manifest` options to `true`.\n- As you are in SSR and not in SPA, you don't have an `index.html` that\n  ViteJS can use to determine which files to compile. You need to tell it\n  directly. In your ViteJS config file add the following :\n\n```javascript\nexport default defineConfig({\n  build {\n    ...\n    rollupOptions: {\n      input: {\n        <unique key>: '<path to your asset>'\n      }\n    }\n  }\n}\n```\n\n## Usage\n\n### Configuration\n\n- Define a setting variable in your `settings.py` named `DJANGO_VITE_ASSETS_PATH`\n  containing the absolute path to where your assets are built.\n\n  - This must correspond to your `build.outDir` in your ViteJS configuration.\n  - The `DJANGO_VITE_ASSETS_PATH` must be included in your `STATICFILES_DIRS`\n    Django setting.\n\n- Define a setting variable in your `settings.py` named `DJANGO_VITE_DEV_MODE`\n  containing a boolean defining if you want to include assets in development\n  mode or production mode.\n\n  - In development mode, assets are included as modules using the ViteJS\n    webserver. This will enable HMR for your assets.\n  - In production mode, assets are included as standard assets\n    (no ViteJS webserver and HMR) like default Django static files.\n    This means that your assets must be compiled with ViteJS before.\n  - This setting may be set as the same value as your `DEBUG` setting in\n    Django. But you can do what is good for yout needs.\n\n### Template tags\n\nInclude this in your base HTML template file.\n\n```\n{% load django_vite %}\n```\n\nThen in your `<head>` element add this :\n\n```\n{% vite_hmr_client %}\n```\n\n- This will add a `<script>` tag to include the ViteJS HMR client.\n- This tag will include this script only if `DJANGO_VITE_DEV_MODE` is true,\n  otherwise this will do nothing.\n\nThen add this tag to load your scripts :\n\n```\n{% vite_asset '<path to your asset>' %}\n```\n\nThis will add a `<script>` tag including your JS/TS script :\n\n- In development mode, all scripts are included as modules.\n- In development mode, all scripts are marked as `async` and `defer`.\n- You can pass a second argument to this tag to overrides attributes\n  passed to the script tag.\n- This tag only accept JS/TS, for other type of assets, they must be\n  included in the script itself using `import` statements.\n- In production mode, the library will read the `manifest.json` file\n  generated by ViteJS and import all CSS files dependent of this script\n  (before importing the script).\n- You can add as many of this tag as you want, for each input you specify\n  in your ViteJS configuration file.\n- The path must be relative to your `root` key inside your ViteJS config file.\n- The path must be a key inside your manifest file `manifest.json` file\n  generated by ViteJS.\n- In general, this path does not require a `/` at the beginning\n  (follow your `manifest.json` file).\n\n```\n{% vite_asset_url '<path to your asset>' %}\n```\n\nThis will generate only the URL to an asset with no tag surrounding it.\n**Warning, this does not generate URLs for dependant assets of this one\nlike the previous tag.**\n\n## Vite Legacy Plugin\n\nIf you want to consider legacy browsers that don't support ES6 modules loading\nyou may use [@vitejs/plugin-legacy](https://github.com/vitejs/vite/tree/main/packages/plugin-legacy).\nDjango Vite supports this plugin. You must add stuff in complement of other script imports in the `<head>` tag.\n\nJust before your `<body>` closing tag add this :\n\n```\n{% vite_legacy_polyfills %}\n```\n\nThis tag will do nothing in development, but in production it will loads the polyfills\ngenerated by ViteJS.\n\nAnd so next to this tag you need to add another import to all the scripts you have\nin the head but the 'legacy' version generated by ViteJS like so :\n\n```\n{% vite_legacy_asset '<path to your asset>' %}\n```\n\nLike the previous tag, this will do nothing in development but in production,\nDjango Vite will add a script tag with a `nomodule` attribute for legacy browsers.\nThe path to your asset must contain de pattern `-legacy` in the file name (ex : `main-legacy.js`).\n\n## Miscellaneous configuration\n\nYou can redefine those variables in your `settings.py` :\n\n- `DJANGO_VITE_DEV_SERVER_PROTOCOL` : ViteJS webserver protocol\n  (default : `http`).\n- `DJANGO_VITE_DEV_SERVER_HOST` : ViteJS webserver hostname\n  (default : `localhost`).\n- `DJANGO_VITE_DEV_SERVER_PORT` : ViteJS webserver port\n  (default : `3000`)\n- `DJANGO_VITE_WS_CLIENT_URL` : ViteJS webserver path to the HMR client used\n  in the `vite_hmr_client` tag (default : `@vite/client`).\n- `DJANGO_VITE_MANIFEST_PATH` : Absolute path (including filename)\n  to your ViteJS manifest file. This file is generated in your\n  `DJANGO_VITE_ASSETS_PATH`. But if you are in production (`DEBUG` is true)\n  then it is in your `STATIC_ROOT` after you collected your\n  [static files](https://docs.djangoproject.com/en/3.1/howto/static-files/).\n- `DJANGO_VITE_LEGACY_POLYFILLS_MOTIF` : The motif used to find the assets for polyfills inside the `manifest.json` (only if you use [@vitejs/plugin-legacy](https://github.com/vitejs/vite/tree/main/packages/plugin-legacy)).\n\n## Notes\n\n- In production mode, all generated path are prefixed with the `STATIC_URL`\n  setting of Django.\n\n## Example\n\nIf you are struggling on how to setup a project using Django / ViteJS and Django Vite,\nI've made an [example project here](https://github.com/MrBin99/django-vite-example).\n\n## Thanks\n\nThanks to [Evan You](https://github.com/yyx990803) for the ViteJS library.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrBin99/django-vite",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-vite",
    "package_url": "https://pypi.org/project/django-vite/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-vite/",
    "project_urls": {
      "Homepage": "https://github.com/MrBin99/django-vite"
    },
    "release_url": "https://pypi.org/project/django-vite/1.2/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Integration of ViteJS in a Django project.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13186149,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af7756495343f1f056c3e6d90f7f66dfd3a497499f1020cfb93d11c535eddbe1",
        "md5": "16f0b2a78b27245c7e9f78b47a2847eb",
        "sha256": "2419da8575b180632e987bd9f34a84ed26804cdd1801496cc59e2cee6760b85c"
      },
      "downloads": -1,
      "filename": "django_vite-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16f0b2a78b27245c7e9f78b47a2847eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10861,
      "upload_time": "2021-09-24T16:55:00",
      "upload_time_iso_8601": "2021-09-24T16:55:00.035561Z",
      "url": "https://files.pythonhosted.org/packages/af/77/56495343f1f056c3e6d90f7f66dfd3a497499f1020cfb93d11c535eddbe1/django_vite-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "084d910ca3f22478a480ea3c2c62b30ed312c038780abb336285fd00b64183ba",
        "md5": "4746302579d6b323541f87ac2ade0831",
        "sha256": "41834a66500c0d7de484347e4669f9f76ed9dffaa53b2ddd2190fdd2ea1352a9"
      },
      "downloads": -1,
      "filename": "django-vite-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4746302579d6b323541f87ac2ade0831",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10356,
      "upload_time": "2021-09-24T16:55:01",
      "upload_time_iso_8601": "2021-09-24T16:55:01.793843Z",
      "url": "https://files.pythonhosted.org/packages/08/4d/910ca3f22478a480ea3c2c62b30ed312c038780abb336285fd00b64183ba/django-vite-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}