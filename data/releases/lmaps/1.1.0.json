{
  "info": {
    "author": "Josiah Kerley",
    "author_email": "josiahkerley@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent"
    ],
    "description": "Lightweight Management and Provisioning Service\n===============================================\nlMaPS provides a simple way the use schema defined \"instances\" that can\nbe passed to an underlying configuration management system.  This will\nprovide the ability to allow desperate systems to use a common namespace\napplication scheme to interact directly with configuration management\nsystems.\n\n## Installation\n```\npip install lmaps\n```\n\n## Overview\n![System Architecture](.readmeimg/sysarch.png)\n\n## Example use cases\n\n### Using lMaPS to reconfigure a host using using ansible\nIn this example, an ansible playbook can be written with the expectation\nthat a vars file containing the proper data structure will have the\ncorrect information to turn up a given service.\n\nLet's assume the following playbook /my-playbook.yaml:\n```\n- name: An example playbook\n  hosts: localhost\n  connection: local\n  vars:\n    some_structure:\n      - message: This is one\n      - message: This is two\n      - message: This is three\n  tasks:\n    - debug:\n        msg: '{{ item.message }}'\n      with_items: '{{ some_structure }}'\n```\nUsing this, a unit can be defined to call it via the `ansible_playbook`\nunit handler.\n\nWe define the unit on the host as /etc/lmaps/units/some_example.yaml:\n```\n---\nmeta:\n  name: some_example\n  data_type: YamlKeyList\n  store_key: some_structure\n  store_root: /some/dir/to/store/instances\nhandler:\n  name: ansible_some_example\n  type: ansible_playbook\n  args:\n    playbook: /my-playbook.yaml\n  params:\n    additionalProperties: false\n    properties:\n      message:\n        type: string\n```\n\nNow when the daemon is run (`lmaps -D`), we can create instances.\n\nWith no instances defined, ansible will use the default vars declared\nin the playbook, but if we created the following as hello_world.yaml:\n```\nmessage: Hello world!\n```\nand created it via:\n`lmaps --create --file hello_world.yaml --unit some_example`\nthen when applied, the loop will get the following output:\n\n[![asciicast](https://asciinema.org/a/AZC5wiglgxG5Vt83a1YBsOhyP.png)](https://asciinema.org/a/AZC5wiglgxG5Vt83a1YBsOhyP)\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://josiahkerley.github.io/python-lmaps/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lmaps",
    "package_url": "https://pypi.org/project/lmaps/",
    "platform": "",
    "project_url": "https://pypi.org/project/lmaps/",
    "project_urls": {
      "Homepage": "https://josiahkerley.github.io/python-lmaps/"
    },
    "release_url": "https://pypi.org/project/lmaps/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lightweight Management and Provisioning Service",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3885995,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bffdccee57719b13a8c60476fa3e531a30dc996e9682cf13499eadf83b3d6db1",
        "md5": "6df8e2ca823a420872035d7068cce2b7",
        "sha256": "4e69d2dc8e9a86a7a4047fb5b2c6b2f47b48f119ba64a5b4a5a4cb4e8000792f"
      },
      "downloads": -1,
      "filename": "lmaps-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6df8e2ca823a420872035d7068cce2b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 701549,
      "upload_time": "2018-05-22T03:31:09",
      "upload_time_iso_8601": "2018-05-22T03:31:09.953538Z",
      "url": "https://files.pythonhosted.org/packages/bf/fd/ccee57719b13a8c60476fa3e531a30dc996e9682cf13499eadf83b3d6db1/lmaps-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}