{
  "info": {
    "author": "Espen Angell Kristiansen",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "CKEditor bundled as a Django app.\n\n\nInstall\n=======\n\n::\n\n    $ pip install django_ckeditorfiles\n\n\nSetup\n=====\n\nAdd ``'ckeditorfiles'`` and ``'django.contrib.staticfiles'`` to\n``INSTALLED_APPS``.\n\n\nVerify install\n==============\nStart the Django development server (runserver), and open\nhttp://localhost:8000/static/ckeditorfiles/samples/index.html. You should get\nthe CKEditor examples page.\n\n\nCKEditor version\n================\nSee ``static/ckeditorfiles/CHANGES.md``.\n\n\n.. _ckeditorjs:\n\nckeditor.js\n===========\n\nThe entire source code of CKEditor is in ``static/ckeditorfiles/``. This means\nthat you can include the sources in your templates using::\n\n    {% load staticfiles %}\n\n    <script type=\"text/javascript\"\n        src=\"{% static \"ckeditorfiles/ckeditor.js\" %}\"></script>\n\n(you do not need to do this if you use the CKEditorWidget)\n\n\nckeditorfiles.widgets.CKEditorWidget\n====================================\n\nCKEditorWidget is a subclass of ``django.forms.widgets.Textarea``. It\nautomatically includes ``ckeditor.js``, and adds::\n\n    <script type=\"text/javascript\">\n        CKEDITOR.replace(id, config);\n    </script>\n\nafter the textarea. ``id`` is the id of the textarea, and ``config`` is\nthe ``config`` parameter to the constructor of the widget, encoded as JSON.\n\n\nExample\n-------\n\nIn your ``forms.py`` or wherever you define your forms:: \n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(widget=CKEditorWidget())\n\n\nIn the template rendering the form (we assume you name your form ``form`` in the template context)::\n\n    {{ form.media }}\n    {{ form.as_p }}\n\nNOTE: ``form.as_p`` is just an example. The widget also works with\ndjango-crispy-forms, and ``form.as_ul``. The important part is ``form.media``,\nbecause the ckeditor javascript will not be loaded without it. Alternatively, you can\nadd ckeditor.js manually (see: ckeditorjs_).\n\n\nThe config parameter to ``CKEditorWidget`` is the config parameter for\n``CKEDITOR.replace(...)``. See:\nhttp://docs.ckeditor.com/#!/api/CKEDITOR-method-replace.\n\n\n\nConfiguration examples\n----------------------\n\nSimple toolbar with bold, italic and show source (with show source in its own box)::\n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                'toolbar': [{\n                    'name': 'basic',\n                    'items': [ 'Bold', 'Italic']\n                }, {\n                    'name': 'source',\n                    'items': [ 'Source']\n                }]\n            })\n        )\n\n\nA more complex toolbar, suitable to simple editors, like comments::\n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                #'contentsCss': settings.STATIC_URL + 'my_theme/ckeditor.css', # CSS for the body (see static/ckeditorfiles/contents.css for the default)\n                'format_tags': 'p;h4', # Only \"normal\" and \"h4\" to avoid large headings in the comments\n                'toolbar': [{\n                    'name': 'format',\n                    'items': ['Format']\n                }, {\n                    'name': 'basic',\n                    'items': ['Bold', 'Italic', '-', 'RemoveFormat']\n                }, {\n                    'name': 'links',\n                    'items': ['Link', 'Unlink']\n                }, {\n                    'name': 'listandindent',\n                    'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']\n                }, {\n                    'name': 'paste',\n                    'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n                }, {\n                    'name': 'tools',\n                    'items': ['Maximize']\n                }]\n            })\n        )\n\n\nThe full default toolbar (good as a source of button-names for your own config)::\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                'toolbar': [\n                    {\n                        'name': 'document',\n                        'groups': [ 'mode', 'document', 'doctools' ],\n                        'items': [ 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates' ]\n                    },\n                    {\n                        'name': 'clipboard',\n                        'groups': [ 'clipboard', 'undo' ],\n                        'items': [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ]\n                    },\n                    {\n                        'name': 'editing',\n                        'groups': [ 'find', 'selection', 'spellchecker' ],\n                        'items': [ 'Find', 'Replace', '-', 'SelectAll' ]\n                    },\n                    {\n                        'name': 'forms',\n                        'items': [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ]\n                    },\n                    '/', # Linebreak\n                    {\n                        'name': 'basicstyles',\n                        'groups': [ 'basicstyles', 'cleanup' ],\n                        'items': [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ]\n                    },\n                    {\n                        'name': 'paragraph',\n                        'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ],\n                        'items': [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl' ]\n                    },\n                    {\n                        'name': 'links',\n                        'items': [ 'Link', 'Unlink', 'Anchor' ]\n                    },\n                    {\n                        'name': 'insert',\n                        'items': [ 'Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe' ]\n                    },\n                    '/', # Linebreak\n                    {\n                        'name': 'styles',\n                        'items': [ 'Styles', 'Format', 'Font', 'FontSize' ]\n                    },\n                    {\n                        'name': 'colors',\n                        'items': [ 'TextColor', 'BGColor' ]\n                    },\n                    {\n                        'name': 'tools',\n                        'items': [ 'Maximize', 'ShowBlocks' ]\n                    },\n                    {\n                        'name': 'others',\n                        'items': [ '-' ]\n                    },\n                    {\n                        'name': 'about',\n                        'items': [ 'About' ]\n                    }\n                ],\n                'toolbarGroups': [\n                        {'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ]},\n                        {'name': 'clipboard', 'groups': [ 'clipboard', 'undo' ]},\n                        {'name': 'editing', 'groups': [ 'find', 'selection', 'spellchecker' ]},\n                        {'name': 'forms'},\n                        '/',\n                        {'name': 'basicstyles', 'groups': [ 'basicstyles', 'cleanup' ]},\n                        {'name': 'paragraph', 'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ]},\n                        {'name': 'links'},\n                        {'name': 'insert'},\n                        '/',\n                        {'name': 'styles'},\n                        {'name': 'colors'},\n                        {'name': 'tools'},\n                        {'name': 'others'},\n                        {'name': 'about'}\n                ]\n            })\n        )\n\n\n\nSubclass CKEditorWidget\n-----------------------\n\nYou can create your own CKEditor configurations as re-usable classes by\nsubclassing CKEditorWidget and provide defaults in the ``default_config`` class\nattribute::\n\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class MyCKEditorWidget(CKEditorWidget):\n        default_config = {'toolbar': 'Basic',\n                          'height': '300px'}\n\nThe ``default_config`` class attribute provides defaults that can be overridden\nwith ``config`` parameter for __init__, so you could\noverride the height-config of ``MyCKEditorWidget`` like this::\n\n    widget = MyCKEditorWidget(config={'height': '100px'})\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/espenak/django_ckeditorfiles",
    "keywords": null,
    "license": "LGPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_ckeditorfiles",
    "package_url": "https://pypi.org/project/django_ckeditorfiles/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_ckeditorfiles/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/espenak/django_ckeditorfiles"
    },
    "release_url": "https://pypi.org/project/django_ckeditorfiles/1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "CKEditor bundled as a django staticfiles app.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2905801,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "781b5b779512c7cee7bad2208e370178b39050aa32c27e1af4813cb5aafe7e48",
        "md5": "9a50bf408548f714c9ab9e00a48574f8",
        "sha256": "dd308e4976fb438c33de272f677e21e34c36b36412f88442385d4cd15a908f0d"
      },
      "downloads": -1,
      "filename": "django_ckeditorfiles-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9a50bf408548f714c9ab9e00a48574f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 673678,
      "upload_time": "2012-12-28T17:01:23",
      "upload_time_iso_8601": "2012-12-28T17:01:23.808632Z",
      "url": "https://files.pythonhosted.org/packages/78/1b/5b779512c7cee7bad2208e370178b39050aa32c27e1af4813cb5aafe7e48/django_ckeditorfiles-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}