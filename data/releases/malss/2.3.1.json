{
  "info": {
    "author": "Ryota KAMOSHIDA",
    "author_email": "malss@malss.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "MAchine Learning Support System\n###############################\n\n``malss`` is a python module to facilitate machine learning tasks.\nThis module is written to be compatible with the `scikit-learn algorithms <http://scikit-learn.org/stable/supervised_learning.html>`_ and the other scikit-learn-compatible algorithms.\n\n.. image:: https://travis-ci.org/canard0328/malss.svg?branch=master\n    :target: https://travis-ci.org/canard0328/malss\n\nDependencies\n************\n\nmalss requires:\n\n* python (>= 3.6)\n* numpy (>= 1.10.2)\n* scipy (>= 0.16.1)\n* scikit-learn (>= 0.20)\n* matplotlib (>= 1.5.1)\n* pandas (>= 0.14.1)\n* jinja2 (>= 2.8)\n* PyQt5 (>= 5.12) (only for interactive mode)\n\nAll modules except PyQt5 are automatically installed when installing malss.\n\nInstallation\n************\n\n  pip install malss\n\nFor interactive mode, you need to install PyQt5 using pip.\n\n  pip install PyQt5\n\nExample\n*******\n\nClassification:\n\n.. code-block:: python\n\n  from malss import MALSS\n  from sklearn.datasets import load_iris\n  iris = load_iris()\n  clf = MALSS(task='classification', lang='en')\n  clf.fit(iris.data, iris.target, 'classification_result')\n  clf.generate_module_sample('classification_module_sample.py')\n\nRegression:\n\n.. code-block:: python\n\n  from malss import MALSS\n  from sklearn.datasets import load_boston\n  boston = load_boston()\n  clf = MALSS(task='regression', lang='en')\n  clf.fit(boston.data, boston.target, 'regression_result')\n  clf.generate_module_sample('regression_module_sample.py')\n\nChange algorithm:\n\n.. code-block:: python\n\n  from malss import MALSS\n  from sklearn.datasets import load_iris\n  from sklearn.ensemble import RandomForestClassifier as RF\n  iris = load_iris()\n  clf = MALSS(task='classification', lang='en')\n  clf.fit(iris.data, iris.target, algorithm_selection_only=True)\n  algorithms = clf.get_algorithms()\n  # check algorithms here\n  clf.remove_algorithm(0)  # remove the first algorithm\n  # add random forest classifier\n  clf.add_algorithm(RF(n_jobs=3),\n                    [{'n_estimators': [10, 30, 50],\n                      'max_depth': [3, 5, None],\n                      'max_features': [0.3, 0.6, 'auto']}],\n                    'Random Forest')\n  clf.fit(iris.data, iris.target, 'classification_result')\n  clf.generate_module_sample('classification_module_sample.py')\n\nInteractive mode:\n\nIn the interactive mode, you can interactively analyze data through a GUI.\n\n.. code-block:: python\n\n  from malss import MALSS\n\n  MALSS(lang='en', interactive=True)\n\n",
    "description_content_type": "",
    "docs_url": "https://pythonhosted.org/malss/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/canard0328/malss/",
    "keywords": "machine learning support system",
    "license": "MIT License: http://www.opensource.org/licenses/mit-license.php",
    "maintainer": "",
    "maintainer_email": "",
    "name": "malss",
    "package_url": "https://pypi.org/project/malss/",
    "platform": "",
    "project_url": "https://pypi.org/project/malss/",
    "project_urls": {
      "Homepage": "https://github.com/canard0328/malss/"
    },
    "release_url": "https://pypi.org/project/malss/2.3.1/",
    "requires_dist": [
      "scikit-learn (>=0.20)",
      "matplotlib (>=1.5.1)",
      "pandas (>=0.14.1)",
      "jinja2 (>=2.8)"
    ],
    "requires_python": ">=3.6",
    "summary": "MALSS: MAchine Learning Support System",
    "version": "2.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14626279,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cc7c09bc503d4d133be2286e143d31a68382100ff2ec758cf3679e785d59ac5",
        "md5": "79f79b188592a369563e26eff64aecc9",
        "sha256": "23a460cb48fb7ec43f11148818b772813f3f8c036a960ad2a633a0828b9389d2"
      },
      "downloads": -1,
      "filename": "malss-2.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79f79b188592a369563e26eff64aecc9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 1267194,
      "upload_time": "2020-02-09T01:38:29",
      "upload_time_iso_8601": "2020-02-09T01:38:29.806599Z",
      "url": "https://files.pythonhosted.org/packages/7c/c7/c09bc503d4d133be2286e143d31a68382100ff2ec758cf3679e785d59ac5/malss-2.3.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acef2c4d1305fa347eaabc3daa41608a52f6ee42ccc6ec268110ab1490428705",
        "md5": "48cb9ebc26b7f4b617f7ced3c1a2dfa5",
        "sha256": "c850e14371fbb0c868b6362e919ee77baa575d8429329b1ca7e004900e6f5344"
      },
      "downloads": -1,
      "filename": "malss-2.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "48cb9ebc26b7f4b617f7ced3c1a2dfa5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 68953,
      "upload_time": "2020-02-09T01:38:36",
      "upload_time_iso_8601": "2020-02-09T01:38:36.021907Z",
      "url": "https://files.pythonhosted.org/packages/ac/ef/2c4d1305fa347eaabc3daa41608a52f6ee42ccc6ec268110ab1490428705/malss-2.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}