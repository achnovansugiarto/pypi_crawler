{
  "info": {
    "author": "Pythux",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# MindustryCompiler\n\na langage that compile to mindustry asm code,\n\nWhat's mindustry asm ? Here is a nice starting guide with in game screenshots:\n[How To Use Procesors in 6.0](https://steamcommunity.com/sharedfiles/filedetails/?id=2268059244)\n\nThe language created here is a superset of what I call mindustry asm code [named Mindustry Logic by it's creator](https://github.com/MindustryGame/wiki/blob/master/docs/logic/0-introduction.md)\n\n## features\n\n- all mindustry asm code are valide as it\n\n- jump to a reference:\n\n    ```plain\n    ...\n    jump bottom always true true  <--- jump to #ref bottom\n    ...\n    #ref bottom  <--- set ref anywhere\n    ...\n    ```\n\n- comments:\n\n    ```plain\n    // this is a comment\n\n    #ref loop // another comment after some blank lines\n    ```\n\n- improve jump conition:\n\n    ```plain\n    jump loop  // <--- jump loop always true true\n    jump inf 2 < 4  // <--- jump inf lowerThan 2 4\n\n    // ==, ===, !=, >, >=, <, <=, ---> equal, notEqual, greaterThan, ...\n    ```\n\nYou could check files [here](./tests/identicalCode) to see the difference from the same programme that compile to the same mindustry asm\n\n- if else, else if condition:\n\n    ```plain\n    if 2 < 4\n        print \"2 < 4\"\n    else if 2 == 1\n        print \"2 == 1\"\n\n    elif 2 === 2  // \"elif\" is equivalent to \"else if\"\n        print \"2 === 2\"\n\n    else\n        print \"else\"\n    ```\n\n- function:\n\n    ```plain\n    add(a, b)\n        add result a b\n        return result\n\n    x = 0\n    x = add(x, 2)\n    ```\n\n- module:\n\n    ```plain\n    import time\n\n    time.wait(2)  // wait 2 secondes\n    ```\n\n- static for loop:\n\n    ```plain\n    import msg\n\n    set message message1\n\n    for x, y in [(1, 2), (4, 3)]\n        if x > y\n            print \"x : \"\n            print x\n            print \" higher than: \"\n            msg.printAndWait(y, message)\n    ```\n\n- look [files here](./code/bots) for some code exemple that I use\n\n## coming soon\n\n- afectation `a = 1` and simple operation +, -, /, *, ...\n\n- operation += -=\n\n- improve if, if var, if not var, and / or\n\n- fill empty args of ASM lines (`ucontrol itemDrop store 800 0 0 0` -> `ucontrol itemDrop store 800`)\n\n## current usage\n\n- compile a file :\n\n    ```sh\n    mindc fileName\n    ```\n\n    exemple, in this folder:\n\n    ```sh\n    mindc tests/identicalCode/4-improveJump.code\n    ```\n\n- get the result in clipboard to just past it in mindustry :\n\n    ```sh\n    mindc tests/identicalCode/4-improveJump.code --ctrlC\n    ```\n\n- run interactive to play with it :\n\n    ```sh\n    mindc --interactive\n    ```\n\n## Installation\n\n### you need python to run this software\n\n- check that you have it\n\n    type in your shell/terminal :\n\n    ```sh\n    python3 --version\n    ```\n\n    must give you something like: `Python 3._._`\n\n- if you don't have it, install it :\n\n    you could dowload python from [here](https://www.python.org/downloads/release)\n\n### install mindustry compiler\n\n```sh\npython3 -m pip install MindustryCompiler\n```\n\n### run it\n\n```sh\nmindc\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pythux/MindustryCompiler",
    "keywords": "",
    "license": "('GNU3',)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MindustryCompiler",
    "package_url": "https://pypi.org/project/MindustryCompiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/MindustryCompiler/",
    "project_urls": {
      "Homepage": "https://github.com/Pythux/MindustryCompiler"
    },
    "release_url": "https://pypi.org/project/MindustryCompiler/1.6/",
    "requires_dist": [
      "PyBoa"
    ],
    "requires_python": ">=3.6",
    "summary": "language that compile to Mindusty ASM, jump instruction can use references instead of line number, and more ...",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10255838,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c08f1aab68bad6fb9faf44c5ca7551cfdc433e5560144bf1a528fa91f5db1279",
        "md5": "1a83065c2435bb7ac9e8bd0f585e496f",
        "sha256": "eb3089e0a8598a3bb78b5585f0ae2a54e9f84b778bd45a5e6b066a59e6268adc"
      },
      "downloads": -1,
      "filename": "MindustryCompiler-1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a83065c2435bb7ac9e8bd0f585e496f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40650,
      "upload_time": "2021-04-16T12:56:22",
      "upload_time_iso_8601": "2021-04-16T12:56:22.786806Z",
      "url": "https://files.pythonhosted.org/packages/c0/8f/1aab68bad6fb9faf44c5ca7551cfdc433e5560144bf1a528fa91f5db1279/MindustryCompiler-1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}