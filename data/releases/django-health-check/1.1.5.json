{
  "info": {
    "author": "Kristian Ollegaard",
    "author_email": "kristian@oellegaard.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "django-health-check\n==================\n\n[![version](https://img.shields.io/pypi/v/django-health-check.svg)](https://pypi.python.org/pypi/django-health-check/)\n[![ci](https://api.travis-ci.org/KristianOellegaard/django-health-check.svg?branch=master)](https://travis-ci.org/KristianOellegaard/django-health-check)\n[![coverage](https://coveralls.io/repos/KristianOellegaard/django-health-check/badge.svg?branch=master)](https://coveralls.io/r/KristianOellegaard/django-health-check)\n[![code-health](https://landscape.io/github/KristianOellegaard/django-health-check/master/landscape.svg?style=flat)](https://landscape.io/github/KristianOellegaard/django-health-check/master)\n[![BSD License](https://img.shields.io/badge/license-BSD-blue.svg)](LICENSE)\n\nThis project checks a number of backends, if they are able to connect and do a simple action, e.g. check out the django ORM backend:\n\n\n```python\n\nclass DjangoDatabaseBackend(BaseHealthCheckBackend):\n\n    def check_status(self):\n        try:\n            obj = TestModel.objects.create(title=\"test\")\n            obj.title = \"newtest\"\n            obj.save()\n            obj.delete()\n            return True\n        except IntegrityError:\n            raise ServiceReturnedUnexpectedResult(\"Integrity Error\")\n        except DatabaseError:\n            raise ServiceUnavailable(\"Database error\")\n\n\n```\n\nThe project is made using some of the same codes, that the django admin site uses - so when you have sucessfully written a new plugin, you register it to the pool, e.g.\n\n```python\nplugin_dir.register(DjangoDatabaseBackend)\n```\n\n\nInstall\n=======\n\nAdd this to urls.py\n\n```python\nurl(r'^ht/', include('health_check.urls'))\n```\n\nAdd required apps:\n\n```python\n    'health_check',\n    'health_check_celery',\n    'health_check_db',\n    'health_check_cache',\n    'health_check_storage',\n```\n(remember to add dependencies, e.g. djcelery - however you should have that already, if you have celery running).\nYou'll also have to make sure that you have a\n`result backend <http://celery.readthedocs.org/en/latest/configuration.html?highlight=result_backend#std:setting-CELERY_RESULT_BACKEND>`_\nconfigured.\nIf you are using celery 3, use ``health_check_celery3`` instead of ``health_check_celery``.\n\n\nSet up monitoring\n=================\n\nE.g. add to pingdom - django-health-check will return HTTP 200 if everything is OK and HTTP 500 if *anything* is not working.\n\n\nDependencies\n============\n\nDjango 1.4+",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KristianOellegaard/django-health-check",
    "keywords": "django health check monitoring",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-health-check",
    "package_url": "https://pypi.org/project/django-health-check/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-health-check/",
    "project_urls": {
      "Homepage": "https://github.com/KristianOellegaard/django-health-check"
    },
    "release_url": "https://pypi.org/project/django-health-check/1.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a pluggable app that runs a full check on the deployment, using a number of plugins to check e.g. database, queue server, celery processes, etc.",
    "version": "1.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15510176,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55df0198d289c59baa126e8ac5c77e0c3a59caedb5ec4d40995bca44dcdd9aa8",
        "md5": "bd952002ebc66c82a70f4311250b07ce",
        "sha256": "40ac4bce094cb7da0cab69662e1696ed66ce778b9c6bf4fe94fb16a630bc0533"
      },
      "downloads": -1,
      "filename": "django-health-check-1.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "bd952002ebc66c82a70f4311250b07ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9051,
      "upload_time": "2016-09-26T23:04:03",
      "upload_time_iso_8601": "2016-09-26T23:04:03.306634Z",
      "url": "https://files.pythonhosted.org/packages/55/df/0198d289c59baa126e8ac5c77e0c3a59caedb5ec4d40995bca44dcdd9aa8/django-health-check-1.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}