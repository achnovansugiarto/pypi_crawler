{
  "info": {
    "author": "Dong Zhuang",
    "author_email": "dzhuang.scut@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-galleryfield\n=====================\n\n.. image:: https://codecov.io/gh/dzhuang/django-galleryfield/branch/main/graph/badge.svg?token=W9BWM4A4RI\n   :target: https://codecov.io/gh/dzhuang/django-galleryfield\n.. image:: https://github.com/dzhuang/django-galleryfield/actions/workflows/ci.yml/badge.svg?branch=main\n   :target: https://github.com/dzhuang/django-galleryfield/tree/main\n.. image:: https://badge.fury.io/py/django-galleryfield.svg\n   :target: https://badge.fury.io/py/django-galleryfield\n.. image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n   :target: https://pycqa.github.io/isort/\n.. image:: https://readthedocs.org/projects/django-galleryfield/badge/?version=latest\n   :target: https://django-galleryfield.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\nDjango model fields ``GalleryField`` with AJAX form widgets and for multiple images upload with progress bar.\nThis package is **NOT** about how to elegantly render multiple images in a page, but how to CRUD multiple\nimages in a model field, which makes it possible for easy permission control.\n\n\nFeatures\n--------\n\n-  A model field ``GalleryField``, and its formfield ``GalleryFormField`` along with the default widget ``GalleryWidget``.\n-  Drag & drop file uploading via AJAX\n-  Uploading multiple images with progress bar\n-  Drag & drop reordering, client / server side crop before/after upload.\n-  Integrates with Django Admin.\n-  Each Image uploaded will be saved in an image model. That might be considered, by some user,\n   a draw back. However, that makes it possible to delete the `orphan` images from the server (see in FAQ).\n\nScreenShots\n-----------\n\n-  Multiple image upload, sortable\n\n.. image:: https://raw.githubusercontent.com/dzhuang/django-galleryfield/main/demo/static/demo/screen_upload.png\n   :width: 70%\n   :align: center\n\n-  Client/Server side crop\n\n.. image:: https://raw.githubusercontent.com/dzhuang/django-galleryfield/main/demo/static/demo/screen_crop.png\n   :width: 70%\n   :align: center\n\n-  Easy Gallery render\n\n.. image:: https://raw.githubusercontent.com/dzhuang/django-galleryfield/main/demo/static/demo/screen_detail.png\n   :width: 70%\n   :align: center\n\n\nQuick Start\n-----------\n\nRequirements\n~~~~~~~~~~~~\n\n-  Django 3.1 or later\n-  `sorl-thumbnail <https://github.com/sorl/sorl-thumbnail>`__\n-  `pillow <https://github.com/python-imaging/Pillow>`__ (or PIL)\n\n\nInstall\n~~~~~~~\n\n::\n\n    pip install django-galleryfield\n\nUsage\n~~~~~~~~~~~~~~~~~~\n\n- In ``settings.py``, add 3 lines in you ``INSTALLED_APP``:\n\n::\n\n    INSTALLED_APPS = (\n        ...,\n        'sorl.thumbnail',\n        'galleryfield',\n        ...,\n    )\n\n    DJANGO_GALLERY_CONFIG = ...\n\n\n- In ``urls.py``, add the following lines:\n\n::\n\n    from django.urls import include, path\n\n    urlpatterns += [path(r\"gallery-handler/\", include(\"galleryfield.urls\"))]\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n\n\nRun the demo\n~~~~~~~~~~~~~~~~~~\n\n::\n\n    git clone https://github.com/dzhuang/django-galleryfield.git\n    cd django-galleryfield\n    cd demo\n    pip install -r requirements.txt\n    cd ..\n    python manage.py migrate\n    python manage.py createsuperuser # Create a superuser account so that you can upload images\n    python manage.py runserver\n\n- In your browser navigate to http://127.0.0.1:8000/admin, login and navigate to  http://127.0.0.1:8000/.\n\n.. note:: You might need to install JSON1 extension for SQLite for this the demo to run properly. See `Enabling JSON1 extension on SQLite <https://code.djangoproject.com/wiki/JSON1Extension>`__.\n\nOnline documentation\n~~~~~~~~~~~~~~~~~~~~~~\nPlease visit https://django-galleryfield.readthedocs.io for the documentation.\n\nContribute to the project\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nSee `Contribution guide <./docs/source/contribute.rst>`__.\n\n\nLicense\n-------------\nReleased under the `MIT license <./LICENSE.txt>`__.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dzhuang/django-galleryfield",
    "keywords": "django ajax html5 upload widget images gallery sorting crop progressthumbnails multiple GalleryField admin forms field",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-galleryfield",
    "package_url": "https://pypi.org/project/django-galleryfield/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-galleryfield/",
    "project_urls": {
      "Homepage": "https://github.com/dzhuang/django-galleryfield"
    },
    "release_url": "https://pypi.org/project/django-galleryfield/2.1.3/",
    "requires_dist": [
      "sorl-thumbnail",
      "pillow"
    ],
    "requires_python": "",
    "summary": "Django AJAX upload widget and model field for multiple images, featuring drag & drop uploading, upload progress bar, sortable and croppable image gallery",
    "version": "2.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14493222,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c28a404f499d1077855703aa0da8deba0bbc573cb6020c47d9537b63cf176854",
        "md5": "47fef017a1c850bcd2e962f9db63a4b9",
        "sha256": "23bee6d440f62c034c164b630f9f92e4f085026a10b5760fc1b1d8929730e4e0"
      },
      "downloads": -1,
      "filename": "django_galleryfield-2.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47fef017a1c850bcd2e962f9db63a4b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 517324,
      "upload_time": "2022-07-20T11:39:02",
      "upload_time_iso_8601": "2022-07-20T11:39:02.939049Z",
      "url": "https://files.pythonhosted.org/packages/c2/8a/404f499d1077855703aa0da8deba0bbc573cb6020c47d9537b63cf176854/django_galleryfield-2.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "199c1bcb2df839cdf2f8355a21437e0a01bc4be872d9572db3a0cfcaa6acdf92",
        "md5": "e469cfa89089ab49bdde6fff8a1515c4",
        "sha256": "247c1ede540f156e6892ff91e1d177cbd6445926b0185a3bc44ffcd8ba52b80e"
      },
      "downloads": -1,
      "filename": "django-galleryfield-2.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e469cfa89089ab49bdde6fff8a1515c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 525993,
      "upload_time": "2022-07-20T11:39:04",
      "upload_time_iso_8601": "2022-07-20T11:39:04.781528Z",
      "url": "https://files.pythonhosted.org/packages/19/9c/1bcb2df839cdf2f8355a21437e0a01bc4be872d9572db3a0cfcaa6acdf92/django-galleryfield-2.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}