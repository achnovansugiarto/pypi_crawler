{
  "info": {
    "author": "SOON_",
    "author_email": "dorks@thisissoon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django-HMAC\n==========\n\n|circle| |downloads| |version| |license|\n\nThis module provides a middleware for HMAC signature Django views. It's simply\ndesigned to check that a client is entitled to access routes, based on the fact\nthat it must possess a copy of the secret key.\n\nThe app can use neither single secret key which is used in every request or multiple\nsecret keys.\n\nUsage\n-----\n\nsettings.py\n~~~~~~~~~~~\n\n.. sourcecode:: python\n\n    MIDDLEWARE_CLASSES = (\n        # ...\n        'djangohmac.middleware.GlobalHmacMiddleware',\n        # or 'djangohmac.middleware.MultipleHmacMiddleware'\n    )\n\n    HMAC_SECRET = 'HMAC_SECRET'  # for global HMAC middleware\n    # HMAC_SECRETS = {  # for multiple HMAC middleware\n    #    'service': 'HMAC_SECRET'\n    # }\n\nClient\n~~~~~~\n\n.. sourcecode:: python\n\n    from djangohmac.sign import shmac\n\n    sig = shmac.make_hmac()  # generate signature\n    response = requests.get(\n        '/hmac_auth_view',\n        headers={hmac.header: sig}\n    )\n\n    # or\n\n    sig = shmac.make_hmac_for('service')  # generate signature for multiple HMAC\n    response = requests.get(\n        '/hmac_auth_view',\n        headers={hmac.header: sig}\n    )\n\nDev\n---\n\nTo run all tests\n\n.. sourcecode::\n\n    docker run -it -v $PWD:/src -w /src ikalnitsky/pythonista tox\n\n\n.. |circle| image:: https://img.shields.io/circleci/project/thisissoon/djangohmac.svg\n    :target: https://circleci.com/gh/thisissoon/djangohmac\n\n.. |downloads| image:: http://img.shields.io/pypi/dm/djangohmac.svg\n    :target: https://pypi.python.org/pypi/djangohmac\n\n.. |version| image:: http://img.shields.io/pypi/v/djangohmac.svg\n    :target: https://pypi.python.org/pypi/djangohmac\n\n.. |license| image:: http://img.shields.io/pypi/l/djangohmac.svg\n    :target: https://pypi.python.org/pypi/djangohmac\n\nChange Log\n----------\n\n1.0.3\n~~~~~\n- Fix: use base64.b64encode instead of base64.urlsafe_b64encode\n\n1.0.2\n~~~~~\n- Fix: HMAC_SECRET should be optional\n- `GlobalHmacMiddleware` and `MultipleHmacMiddleware`\n\n0.0.1\n~~~~~\n- Initial release including the core feature set",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thisissoon/django-hmac",
    "keywords": "Django,HMAC,REST,Views,middleware",
    "license": "Public Domain",
    "maintainer": null,
    "maintainer_email": null,
    "name": "djangohmac",
    "package_url": "https://pypi.org/project/djangohmac/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/djangohmac/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/thisissoon/django-hmac"
    },
    "release_url": "https://pypi.org/project/djangohmac/1.0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Provides easy integration of the HMAC signatures for your REST Django Applications.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1889658,
  "urls": [],
  "vulnerabilities": []
}