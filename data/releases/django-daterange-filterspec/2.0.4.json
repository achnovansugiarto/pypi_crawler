{
  "info": {
    "author": "Stuart MacKay",
    "author_email": "smackay@flagstonesoftware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Django DateRange Filterspec\n===========================\n\nAdds a form with AdminDateWidgets that can be used to select a range of\ndates for filtering the list of records displayed in an admin Changelist.\n\n.. image:: https://raw.githubusercontent.com/StuartMacKay/django-daterange-filterspec/master/docs/images/screenshot.png\n\nQuick start\n-----------\n\nInstall the package from PyPI::\n\n    pip install django-daterange-filterspec\n\nThe package includes a template, which loads Django's calendar widget\nand date shortcuts. Add the package to the INSTALLED_APPS setting so the\ntemplate loader can find it::\n\n    INSTALLED_APPS = (\n        ...\n        \"daterange.apps.DateRangeFilterConfig\",\n        ...\n    )\n\nIn your ModelAdmin, set the template used for the changelist to the one\nprovided by the package. Then, for each field you want to filter on\ncreate a tuple with the name of the field and the ``DateRangeFilter``\nfilter class::\n\n    from django.contrib import admin\n\n    from daterange.filters import DateRangeFilter\n\n    from .models import Article\n\n\n    @admin.register(Article)\n    class ArticleAdmin(admin.ModelAdmin):\n\n        list_display = [\"title\", \"slug\", \"published\"]\n        list_filter = [(\"published\", DateRangeFilter)]\n        ordering = [\"-created\"]\n\n        change_list_template = \"admin/daterange/change_list.html\"\n\nIf you're already using a customised changelist template, you can add the necessary\ncss and javascript files to the Media class for the ModelAdmin::\n\n    @admin.register(Article)\n    class ArticleAdmin(admin.ModelAdmin):\n\n        ...\n\n        class Media:\n            css = {\"all\": (\"admin/css/forms.css\", \"css/admin/daterange.css\")}\n            js = (\"admin/js/calendar.js\", \"js/admin/DateRangeShortcuts.js\")\n\n\n\nNow, go forth and filter!\n\nProject\n-------\n\nIf you check out the project from the repository there is a fully functioning\nDjango site that you can use to see the filter in action.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Django Admin DateRage Filter Changelists",
    "license": "License :: OSI Approved :: BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-daterange-filterspec",
    "package_url": "https://pypi.org/project/django-daterange-filterspec/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-daterange-filterspec/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-daterange-filterspec/2.0.4/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "A DateRange Filter for Django Admin Changelists",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12920175,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4ef1941418c4a8613d0f3fc0f2e43ef6268d50396768989b0f389f12c5a5fdd",
        "md5": "c844d53e11d94aeaf63b36dbf499aa5b",
        "sha256": "feeb0d2962da43829ff080b28c7a51a927efd0c2b7463e9e53f1f6c6c374f2c6"
      },
      "downloads": -1,
      "filename": "django_daterange_filterspec-2.0.4-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "c844d53e11d94aeaf63b36dbf499aa5b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 12255,
      "upload_time": "2022-02-17T10:49:25",
      "upload_time_iso_8601": "2022-02-17T10:49:25.093577Z",
      "url": "https://files.pythonhosted.org/packages/c4/ef/1941418c4a8613d0f3fc0f2e43ef6268d50396768989b0f389f12c5a5fdd/django_daterange_filterspec-2.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adc698a928320b47d3bcaceb40b81095dcf19e2ffa2b45722340a94f63261eef",
        "md5": "02f9b4674bcb3b6104c6a10b6312be2c",
        "sha256": "bdcb458ae2157a4d1673042c9d6f1963c0eeae95e62779595c1a06f38dbb5c39"
      },
      "downloads": -1,
      "filename": "django-daterange-filterspec-2.0.4.tar.gz",
      "has_sig": true,
      "md5_digest": "02f9b4674bcb3b6104c6a10b6312be2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12397,
      "upload_time": "2022-02-17T10:49:27",
      "upload_time_iso_8601": "2022-02-17T10:49:27.209486Z",
      "url": "https://files.pythonhosted.org/packages/ad/c6/98a928320b47d3bcaceb40b81095dcf19e2ffa2b45722340a94f63261eef/django-daterange-filterspec-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}