{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License"
    ],
    "description": "# Django Reverse Admin\n\nModule that makes django admin handle OneToOneFields in a better way. A common use case for one-to-one relationships is to \"embed\" a model inside another one. For example, a Person may have multiple foreign keys pointing to an Address entity, one home address, one business address and so on. Django admin displays those relations using select boxes, letting the user choose which address entity to connect to a person. A more natural way to handle the relationship is using inlines. However, since the foreign key is placed on the owning entity, django admins standard inline classes can't be used. Which is why I created this module that implements \"reverse inlines\" for this use case.\n\nFix/extension of:\n* [adminreverse](https://github.com/rpkilby/django-reverse-admin)\n* [reverseadmin](http://djangosnippets.org/snippets/2032/)\n\n[![CircleCI](https://circleci.com/gh/daniyalzade/django_reverse_admin.svg?style=svg)](https://circleci.com/gh/daniyalzade/django_reverse_admin)\n\n# Requirements\n\n* **Python**: 3.4, 3.5, 3.6, 3.7\n* **Django**: 2.0+\n\nFrom Version 2.0 Django Filter is Python 3 only. If you need to support Python 2.7 use the version 1.0 release.\n\n# Installation\n\nInstall using pip:\n\n```sh\npip install django_reverse_admin\n```\n\n# Testing\n\nUse `tox` for testing.\n\n```sh\ntox\n```\n\n## Testing Manually Using Django Admin\n\nRun the following commands to make sure that db.sqlite3 has all the data that you need\n\n```sh\ncd tests\npython manage.py makemigrations\npython manage.py makemigrations polls\npython manage.py migrate\npython manage.py loaddata fixtures/init_data.json\npython manage.py runserver\n```\n\nAdmin user username is `reverse` and password is `reverseadmin`\n\n# Usage\n\n`models.py` file\n\n```py\nfrom django.db import models\n\nclass Address(models.Model):\n    street = models.CharField(max_length=255)\n    zipcode = models.CharField(max_length=10)\n    city = models.CharField(max_length=255)\n    state = models.CharField(max_length=2)\n\nclass Person(models.Model):\n    name = models.CharField(max_length=255)\n    business_addr = models.ForeignKey(Address,\n                                      related_name='business_addr')\n    home_addr = models.OneToOneField(Address, related_name='home_addr')\n    other_addr = models.OneToOneField(Address, related_name='other_addr')\n```\n\n`admin.py` file\n\n```py\nfrom django.contrib import admin\nfrom django.db import models\nfrom models import Person\nfrom django_reverse_admin import ReverseModelAdmin\n\nclass PersonAdmin(ReverseModelAdmin):\n    inline_type = 'tabular'\n    inline_reverse = ['business_addr',\n                      ('home_addr', {'fields': ['street', 'city', 'state', 'zipcode']}),\n                      ]\nadmin.site.register(Person, PersonAdmin)\n```\n\ninline_type can be either \"tabular\" or \"stacked\" for tabular and stacked inlines respectively.\n\nThe module is designed to work with Django 2+ Since it hooks into the internals of the admin package, it may not work with later Django versions.\n\n# Demo\n\nBelow is what an admin change_view with reverse inline looks like\n![reverse inline](/images/admin_with_reverse_inline_1.png)\n\nBelow is what the same change_view would look like WITHOUT reverse inline\n![no reverse inline](/images/admin_without_reverse_inline.png)\n\n# Contribtion\n\n* Make sure that the tests are passing before opening up the PR\n* Create a PR for feature enhancements\n* Once a PR is merged, update version with the following commands:\n\n```\nbumpversion patch\ngit push origin master --tags\n```\n\n# Packaging\n\n`tox` creates a package in `.tox/dist`. Use twine to upload it to pypi:\n\n```sh\ntwine upload .tox/dist/django_reverse_admin-*.zip\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-reverse-admin",
    "package_url": "https://pypi.org/project/django-reverse-admin/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-reverse-admin/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-reverse-admin/2.8.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "2.8.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9901653,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bf7d634daed416d278d9625267ffb7066835b39304fc62505b91d87eeff7400",
        "md5": "e6d8a72d40a5ce992790ab6db3b8dfc2",
        "sha256": "3361d615b6b95c3210f82a7d3e40971685ae44441dfb0fd6d7de5c2dec8b5705"
      },
      "downloads": -1,
      "filename": "django_reverse_admin-2.8.7.zip",
      "has_sig": false,
      "md5_digest": "e6d8a72d40a5ce992790ab6db3b8dfc2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 274479,
      "upload_time": "2020-06-20T01:56:30",
      "upload_time_iso_8601": "2020-06-20T01:56:30.228878Z",
      "url": "https://files.pythonhosted.org/packages/1b/f7/d634daed416d278d9625267ffb7066835b39304fc62505b91d87eeff7400/django_reverse_admin-2.8.7.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}