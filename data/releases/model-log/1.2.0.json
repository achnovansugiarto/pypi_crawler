{
  "info": {
    "author": "mantch",
    "author_email": "mantchs@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![img](https://gitee.com/kkweishe/images1/raw/master/ML/wechat/model_log_logo.png)\r\n\r\n\r\n\r\n### 1. Model Log 介绍\r\n\r\nModel Log 是一款基于 Python3 的轻量级机器学习(Machine Learning)、深度学习(Deep Learning)模型训练评估指标可视化工具，与 TensorFlow、Pytorch、PaddlePaddle结合使用，可以记录模型训练过程当中的**超参数、Loss、Accuracy、Precision、F1值等，并以曲线图的形式进行展现对比**，轻松三步即可实现。\r\n\r\n通过调节超参数的方式多次训练模型，并使用 Model Log 工具进行记录，可以很直观的进行模型对比，堪称调参神器。以下是使用工具后模型训练时 Loss 的变化曲线图。访问线上体验版：[http://mantchs.com/model_log.html](http://mantchs.com/model_log.html)\r\n\r\n![img](https://gitee.com/kkweishe/images1/raw/master/ML/wechat/loss.gif)\r\n\r\n\r\n\r\n通过上图可以很清晰的看出两个模型的训练效果，而且在表格当中高亮显示修改过的超参数，方便进行模型分析。\r\n\r\n\r\n\r\n### 2. Model Log 特性\r\n\r\n- 轻量级、无需任何配置、极简API、开箱即用。\r\n- 只需要把模型的超参数和评估指标数据通过API添加即可，轻松三步即可实现。\r\n- 高亮显示修改过的超参数，方便进行模型分析。\r\n- 自动检测和获取正在训练的模型数据，并进行可视化，无需人工参与。\r\n- 使用 SQLite 轻量级本地数据库存储，可供多个用户同时使用，保证每个用户看到的数据是独立的。\r\n- 可视化组件采用 Echarts 框架，交互式曲线图设计，可清晰看到每个 epoch 周期的指标数据和变化趋势。\r\n\r\n\r\n\r\n### 3. Model Log 演示地址\r\n\r\n访问线上体验版：[http://mantchs.com/model_log.html](http://mantchs.com/model_log.html)\r\n\r\n\r\n\r\n### 4. Model Log 安装\r\n\r\nPython3 版本以上，通过 pip 进行安装即可。\r\n\r\n```shell\r\npip install model-log\r\n```\r\n\r\n\r\n\r\n**注意**：若安装的过程中出现以下情况，说明 **model-log** 命令已经安装到Python下的bin目录中，如果直接输入 model-log 可能会出现 command not found，可以直接到bin目录下执行。\r\n\r\n![img](https://gitee.com/kkweishe/images1/raw/master/ML/wechat/mistake.png)\r\n\r\n\r\n\r\n\r\n\r\n### 5. Model Log 使用\r\n\r\n#### 5.1 启动 web 端\r\n\r\nModel Log 安装成功后，Linux、Mac用户直接终端输入以下命令，Windows用户在cmd窗口输入：\r\n\r\n```shell\r\nmodel-log\r\n```\r\n\r\n默认启动 **5432端口**，可以在启动命令上使用参数 **-p=5000** 指定端口号。若提示命令不存在，可以直接到Python/3.7/bin目录下执行。\r\n\r\n启动后可在浏览器输入网址进入：http://127.0.0.1:5432\r\n\r\n也可访问线上体验版：[http://mantchs.com/model_log.html](http://mantchs.com/model_log.html)\r\n\r\n\r\n\r\n- web首页是项目列表，一个项目可以有多个模型，这些模型可以在曲线图中直观比较。\r\n\r\n- web 端会自动检测是否有新模型开始训练，如果有，直接会跳转到相应的 loss 等评价指标页，同时会自动获取指标数据进行呈现。\r\n\r\n- 可供多个用户使用，添加昵称即可，SQLite 轻量级本地数据库存储，保证每个用户看到的数据是独立的。\r\n\r\n- 通过点击曲线图下方的图例，可切换不同模型的评估曲线。\r\n\r\n  ![img](https://gitee.com/kkweishe/images1/raw/master/ML/wechat/tuli.png)\r\n\r\n\r\n\r\n\r\n\r\n#### 5.2 Model Log API使用\r\n\r\n轻松三步即可使用\r\n\r\n\r\n\r\n1. **第一步**：先创建 ModelLog 类，并添加必要的属性\r\n\r\n   ```python\r\n   from model_log.modellog import ModelLog\r\n   \"\"\"\r\n   :param nick_name:        str，昵称，多人使用下可起到数据隔离。\r\n   :param project_name:     str，项目名称。\r\n   :param project_remark:   str，项目备注，默认为空。 \r\n   \r\n   项目名称如不存在会新建\r\n   \"\"\"\r\n   model_log = ModelLog(nick_name='mantch', project_name='demo实体识别', project_remark='')\r\n   \r\n   \"\"\"\r\n   :param model_name: str，模型名称\r\n   \"\"\"\r\n   model_log.add_model_name(model_name='BILSTM_CRF模型')\r\n   \r\n   \"\"\"\r\n   :param remark: str，模型备注\r\n   \"\"\"\r\n   model_log.add_model_remark(remark='模型备注')\r\n   \r\n   \"\"\"\r\n   :param param_dict: dict，训练参数字典\r\n   :param param_type: str，参数类型，例如：TF参数、Word2Vec参数等。\r\n   \"\"\"\r\n   model_log.add_param(param_dict={'lr':0.01}, param_type='tf_param')\r\n   ```\r\n\r\n   \r\n\r\n2. **第二步**：模型训练的每次 epoch (周期)可以添加评估指标数据，评估指标可以进行以下选择。\r\n\r\n   第一次调用该 API 时，会把以上设置的数据(模型名称、备注等)持久化到 SQLite 数据库，并且 web 端会自动获取评估指标数据进行图形化展示。\r\n\r\n   ```python\r\n   \"\"\"\r\n   :param metric_name:  str，评估指标名称，\r\n   \t可选择['train_loss', 'test_loss', 'train_acc', 'test_acc', 'train_recall', 'test_recall', 'train_precision', 'test_precision', 'train_F1', 'test_F1']\r\n   \r\n   :param metric_value: float，评估指标数值。\r\n   :param epoch:        int，训练周期\r\n   \r\n   metric_name 参数只可以选择以上十种\r\n   第一次调用该 API 时，会把以上设置的数据(模型名称、备注等)持久化到 SQLite 数据库，并且 web 端会自动获取数据进行图形化展示。\r\n   可以在每个 epoch 周期的最后使用该 API 添加训练集和测试集的评估指标，web 端会自动获取该数据。\r\n   \"\"\"\r\n   model_log.add_metric(metric_name='train_loss', metric_value=4.5646, epoch=1)\r\n   ```\r\n\r\n   \r\n\r\n3. **第三步**：模型训练完成后，可以添加最好的一次评估数据。\r\n\r\n   ```python\r\n   \"\"\"\r\n   :param best_name:  str，最佳评估指标名称，\r\n   :param best_value: float，最佳评估指标数值。\r\n   :param best_epoch: int，训练周期\r\n   \r\n   添加当前模型训练中最佳的评估数据，一般放到模型训练的最后进行添加。\r\n   \"\"\"\r\n   model_log.add_best_result(best_name='best_loss', best_value=1.2122, best_epoch=30)\r\n   model_log.finish_model()\r\n   \r\n   \"\"\"\r\n   关闭 SQLite 数据库连接\r\n   \"\"\"\r\n   model_log.close()\r\n   ```\r\n   \r\n   \r\n\r\n\r\n\r\n#### 5.3 Model Log 使用示例\r\n\r\nMIST手写数字识别：[https://github.com/NLP-LOVE/Model_Log/blob/master/demo_TF_MIST.py](https://github.com/NLP-LOVE/Model_Log/blob/master/demo_TF_MIST.py)\r\n\r\n\r\n\r\n![img](https://gitee.com/kkweishe/images1/raw/master/ML/wechat/QRcode.gif)\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NLP-LOVE",
    "keywords": "python ML DL model log",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-log",
    "package_url": "https://pypi.org/project/model-log/",
    "platform": null,
    "project_url": "https://pypi.org/project/model-log/",
    "project_urls": {
      "Homepage": "https://github.com/NLP-LOVE"
    },
    "release_url": "https://pypi.org/project/model-log/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "test description",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14420138,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fdfbe1594a216a61e5ce0602cc40212ae20f5f357a90378e924eefd55350061",
        "md5": "1da4f535d6de88916b445d53410ab638",
        "sha256": "a79ba9a9df5f77a18a858ecb5d641e14f2c7d2b9585ec80864d347ad5e131fb7"
      },
      "downloads": -1,
      "filename": "model-log-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1da4f535d6de88916b445d53410ab638",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 994823,
      "upload_time": "2022-07-13T09:03:49",
      "upload_time_iso_8601": "2022-07-13T09:03:49.017656Z",
      "url": "https://files.pythonhosted.org/packages/5f/df/be1594a216a61e5ce0602cc40212ae20f5f357a90378e924eefd55350061/model-log-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}