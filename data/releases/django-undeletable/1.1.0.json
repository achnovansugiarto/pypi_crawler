{
  "info": {
    "author": "Andy Grabow",
    "author_email": "andy@freilandkiwis.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-undeletable |BuildStatus|_ |Coverage|_\n==============================================================\n\n.. |BuildStatus| image:: https://travis-ci.org/kakulukia/django-undeletable.svg\n.. _BuildStatus: https://travis-ci.org/kakulukia/django-undeletable\n\n.. |Coverage| image:: https://codecov.io/gh/kakulukia/django-undeletable/branch/master/graph/badge.svg\n.. _Coverage: https://codecov.io/gh/kakulukia/django-undeletable\n\n\nI have run into dozens of situations where data got deleted by accident or somebody\nwanted to know when something got deleted or changed, so this little module will prevent\naccidents and you will always be able to reverse the situation or to identify why that\nlittle bug deleted exactly this set of data.\nAnd even if somebody from marketing all in a sudden wants to know what was in those\ntemporary shopping baskets that should have been deleted already - you will be able to answer\nthose questions! I never had the problem of too much data - it was always the missing data,\nthe missing creation and modification timestamps that makes your job harder than it has to be.\n\nSo here is the answer to all that. Nothing will be deleted anymore and you will know when X\ngot created, changed or deleted. Django Undeletable provides a **BaseModel** with useful\ndefault attributes to keep track of your data. The custom **DataManager** keeps track of\ndeleted and live data. You can also keep stuff hidden from the public while displaying\nthat data to some chosen customers (like beta testers).\n\n\nInstallation\n--------------\n\nInstall django-undeletable\n\n.. code-block:: bash\n\n    pip install django-undeletable\n\nWhen using this package, all your models should extend from BaseModel\ninstead of django.db.models.Model. Take a look at the additional NamedModel as to how its\ndone.\n\n.. code-block:: python\n\n    class NamedModel(BaseModel):\n        name = models.CharField(_('Name'), max_length=150, db_index=True)\n\n        class Meta(BaseModel.Meta):\n            ordering = ['name']\n            abstract = True\n\nExtending the *Meta* class from *BaseModel.Meta* is important for Django 2.0+ otherwise you will experience\nyour related querysets to not be managed by a DataManager but by Djangos default manager instead including\ndeleted data.\n\n\n\nFeatures\n----------\n\nWhile inheriting from BaseModel you get the following advantages:\n\n* Your models have created, modified and deleted DateTime attributes\n* The *data* queryset shall always tell you which ones of your models are undeletable\n  or from 3rd party modules - but the main reason for using data is that im lazy and\n  prefer typing data instead of objects :)\n* Since quite some modules don't respect a models default manager and just use 'objects',\n  data is mirrored to objects to not run into any trouble\n* You have the option to hide specific data from the public while using *visible()* instead of *all()*\n* since its quite common, this package also includes the above NamedModel and a customized\n  User Model that you should copy to your codebase and remove the *abstract = True* line to have undeletable users\n* The included abstract User class features an EMAIL_OVERRIDE_ADDRESS setting that can be\n  used to not actually email real users on a development system :)\n\n\nRunning Tests\n---------------\n\nDoes the code actually work?\n\n.. code-block:: bash\n\n    make init\n    make test\n\nCredits\n---------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.6.0\n+++++++\n\n* First release based on the cookiecutter django package\n* full test coverage\n* several small fixes that i found while code the test\n+ added Pipfile\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/kakulukia/django-undeletable/tarball/1.1.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kakulukia/django-undeletable",
    "keywords": "orm,undelete,shadow db",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-undeletable",
    "package_url": "https://pypi.org/project/django-undeletable/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-undeletable/",
    "project_urls": {
      "Download": "https://github.com/kakulukia/django-undeletable/tarball/1.1.0",
      "Homepage": "https://github.com/kakulukia/django-undeletable"
    },
    "release_url": "https://pypi.org/project/django-undeletable/1.1.0/",
    "requires_dist": [
      "Django (>=1.11.8)"
    ],
    "requires_python": ">=3.3",
    "summary": "Undeletable Django models",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13185618,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c5d3e2a87008e78761bedd809ef9ffaa572465c3a417ae23d7b7d0d32410731",
        "md5": "6c1683247f45ecd48e86c512a0495e24",
        "sha256": "fd889bfc61bb9d076fd3a367d946ebfc1c94034bce10354688ca607405085db4"
      },
      "downloads": -1,
      "filename": "django_undeletable-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c1683247f45ecd48e86c512a0495e24",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.3",
      "size": 7495,
      "upload_time": "2019-02-17T12:16:59",
      "upload_time_iso_8601": "2019-02-17T12:16:59.432931Z",
      "url": "https://files.pythonhosted.org/packages/7c/5d/3e2a87008e78761bedd809ef9ffaa572465c3a417ae23d7b7d0d32410731/django_undeletable-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}