{
  "info": {
    "author": "Maor Ivgi, Oliver Hinder, Yair Carmon",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DoG Optimizer\n\nThis repository contains the implementation of the algorithms in the paper \n[DoG is SGD's Best Friend: A Parameter-Free Dynamic Step Size Schedule](https://arxiv.org/abs/2302.12022)\nby Maor Ivgi, Oliver Hinder and Yair Carmon.\n\n## Installation\nTo install the package, simply run `pip install dog-optimizer`.\n\n## Usage\nDoG (or LDoG) are implemented using the standard pytorch optimizer interface. After installing the pacakge with `pip install dog-optimizer`,\nAll you need to do is replace the line that creates your optimizer with \n```python\nfrom dog import DoG\noptimizer = DoG(optimizer args)\n```\nfor DoG, or\n```python\nfrom dog import LDoG\noptimizer = LDoG(optimizer args)\n```\nfor LDoG, \nwhere `optimizer args` follows the standard pytorch optimizer syntex. \nTo see the list of all available parameters, run `help(DoG)` or `help(LDoG)`.\n\n\nUsing the polynomial decay averager is also easy. Simply create it with \n```python\nfrom dog import PolynomialDecayAverager\naverager = PolynomialDecayAverager(model)\n```\nthen, after each `optimizer.step()`, call `averager.step()` as well.\nYou can then get both the current model and the averaged model with `averager.base_model` and `averager.averaged_model` respectively.\n\nAn example of how to use the above to train a simple CNN on MNIST can be found in `examples/mnist.py` \n(based on this [pytorch example](https://github.com/pytorch/examples/blob/main/mnist/main.py)).\n\n### Choosing `reps_rel`\nDoG is parameter-free by design, so there is no need to tune a learning rate parameter. \nHowever, as discussed in the paper, DoG has an initial step movement parameter \n$r_{\\epsilon}$ that must be small enough to avoid destructively updates that cause divergence, \nbut an extremely small value of $r_{\\epsilon}$ would slow down training. \nWe recommend choosing $r_{\\epsilon}$ relative to the norm of the initial weights $x_0$. In particular, we set \n$r_{\\epsilon}$ to be `reps_rel` time $1+\\|x_0\\|$, where `reps_rel` is a configurable parameter of the optimizer. The default value \nof `reps_rel` is 1e-6, and we have found it to work well most of the time. However, in our experiments we did encounter \nsome situations that required different values of `reps_rel`:\n- If optimization diverges early, it is likely that `reps_rel` (and hence $r_{\\epsilon}$) is too large: \ntry decreasing it by factors 100 until divergence no longer occurs. This happened when applying LDoG to fine-tune T5, \nwhich had large pre-trained weights; setting `reps_rel` to 1e-8 eliminated the divergence.\n- If the DoG step size (`eta`) does not substantially increase from its initial value for a few hundred steps, it could be that `reps_rel` is too small: \ntry increasing it by factors of 100 until you see `eta` starting to increase in the first few steps. \nThis happened when training models with batch normalization; setting `reps_rel` to 1e-4 eliminated the problem.\n\n\n## Citation\n```\n@article{ivgi2023dog,\n  title={{D}o{G} is {SGD}'s Best Friend: A Parameter-Free Dynamic Step Size Schedule}, \n  author={Maor Ivgi and Oliver Hinder and Yair Carmon}, \n  journal={arXiv:2302.12022}, \n  year={2023},\n}  \n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dog-optimizer",
    "package_url": "https://pypi.org/project/dog-optimizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/dog-optimizer/",
    "project_urls": {
      "Homepage": "https://github.com/formll/dog",
      "Paper": "https://arxiv.org/abs/2302.12022"
    },
    "release_url": "https://pypi.org/project/dog-optimizer/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "implementation of the algorithms in the paper DoG is SGD's Best Friend: A Parameter-Free Dynamic Step Size Schedule",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17052261,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1789e2d92540ed796622e4fc017e082737c57c00e35795816c4f905324da0d07",
        "md5": "acc7cc183283994e94640bc2d02c7200",
        "sha256": "9d3680f3a03ba61ed849d53b02d4624d1dfe9e57c0420b8f0690e7f4f246b789"
      },
      "downloads": -1,
      "filename": "dog_optimizer-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acc7cc183283994e94640bc2d02c7200",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7818,
      "upload_time": "2023-02-26T07:14:16",
      "upload_time_iso_8601": "2023-02-26T07:14:16.070573Z",
      "url": "https://files.pythonhosted.org/packages/17/89/e2d92540ed796622e4fc017e082737c57c00e35795816c4f905324da0d07/dog_optimizer-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fdcfb4e714c283b6c1000d35c68b4b4635f2f9e7ac4d8a6057899b8e5f209ee",
        "md5": "3c871d7c082947adbff72055e25d9dde",
        "sha256": "59d8994760cf7b91de0ef63084eecfc2a420e23fffe61acd81c0bf06e48cd35e"
      },
      "downloads": -1,
      "filename": "dog-optimizer-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3c871d7c082947adbff72055e25d9dde",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8290,
      "upload_time": "2023-02-26T07:14:17",
      "upload_time_iso_8601": "2023-02-26T07:14:17.680617Z",
      "url": "https://files.pythonhosted.org/packages/6f/dc/fb4e714c283b6c1000d35c68b4b4635f2f9e7ac4d8a6057899b8e5f209ee/dog-optimizer-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}