{
  "info": {
    "author": "Alexander Frenzel",
    "author_email": "alex@relatedworks.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=====================\ndjango-exiffield\n=====================\n\n\n.. image:: https://img.shields.io/pypi/v/django-exiffield.svg\n    :target: https://pypi.python.org/pypi/django-exiffield\n\n.. image:: https://travis-ci.org/escaped/django-exiffield.png?branch=master\n    :target: http://travis-ci.org/escaped/django-exiffield\n    :alt: Build Status\n\n.. image:: https://coveralls.io/repos/escaped/django-exiffield/badge.png?branch=master\n    :target: https://coveralls.io/r/escaped/django-exiffield\n    :alt: Coverage\n\n.. image:: https://img.shields.io/pypi/pyversions/django-exiffield.svg\n\n.. image:: https://img.shields.io/pypi/status/django-exiffield.svg\n\n.. image:: https://img.shields.io/pypi/l/django-exiffield.svg\n\n\ndjango-exiffield extracts exif information by utilizing ``exiftool``.\n\n\nRequirements\n============\n\n- `exiftool <https://www.sno.phy.queensu.ca/~phil/exiftool/>`_\n- Python 3.6\n- Django >= 1.8\n\n\nInstallation\n============\n\n#. Install django-exiffield ::\n\n    pip install django-exiffield\n\n#. Make sure ``exiftool`` is executable from you environment.\n\n\nIntegration\n===========\n\nLet's assume we have an image Model with a single ``ImageField``.\nTo extract exif information for an attached image, add an ``ExifField``,\nspecify the name of the ``ImageField`` in the ``source`` argument ::\n\n\n   from django.db import models\n\n   from exiffield.fields import ExifField\n\n\n   class Image(models.Model):\n       image = models.ImageField()\n       exif = ExifField(\n           source='image',\n       )\n\n\nand create a migration for the new field.\nThat's it.\n\nAfter attaching an image to your ``ImageField``, the exif information is stored\nas a ``dict`` on the ``ExifField``.\nEach exif information of the dictionary consists of two keys:\n\n* ``desc``: A human readable description\n* ``val``: The value for the entry.\n\nIn the following example we access the camera model ::\n\n   image = Image.objects.get(...)\n   print(image.exif['Model'])\n   # {\n   #     'desc': 'Camera Model Name',\n   #     'val': 'DMC-GX7',\n   # }\n\nAs the exif information is encoded in a simple ``dict`` you can iterate and access\nthe values with all familiar dictionary methods.\n\n\nDenormalizing Fields\n--------------------\n\nSince the ``ExifField`` stores its data simply as text, it is not possible to filter\nor access indiviual values efficiently.\nThe ``ExifField`` provides a convinient way to denormalize certain values using\nthe ``denormalized_fields`` argument.\nIt takes a dictionary with the target field as key and a simple getter function of\ntype ``Callable[[Dict[Dict[str, str]]], Any]``.\nTo denormalize a simple value you can use the provided ``exiffield.getters.exifgetter`` ::\n\n\n   from django.db import models\n\n   from exiffield.fields import ExifField\n   from exiffield.getters import exifgetter\n\n\n   class Image(models.Model):\n       image = models.ImageField()\n       camera = models.CharField(\n           editable=False,\n           max_length=100,\n       )\n       exif = ExifField(\n           source='image',\n           denormalized_fields={\n               'camera': exifgetter('Model'),\n           },\n       )\n\n\nThere are more predefined getters in ``exiffield.getters``:\n\n``exifgetter(exif_key: str) -> str``\n    Get an unmodified exif value.\n\n``get_type() -> str``\n    Get file type, e.g. video or image\n\n``get_datetake -> Optional[datetime]``\n    Get when the file was created as ``datetime``\n\n``get_orientation  -> exiffield.getters.Orientation``\n    Get orientation of media file.\n    Possible values are ``LANDSCAPE`` and ``PORTRAIT``.\n\n``get_sequenctype -> exiffield.getters.Mode``\n    Guess if the image was taken in a sequence.\n    Possible values are ``BURST``, ``BRACKETING``, ``TIMELAPSE`` and ``SINGLE``.\n\n``get_sequencenumber -> int``\n    Get image position in a sequence.\n\n\nDevelopment\n===========\n\nThis project is using `poetry <https://poetry.eustace.io/>`_ to manage all dev dependencies.\nClone this repository and run ::\n\n   poetry develop\n\n\nto create a virtual enviroment with all dependencies.\nYou can now run the test suite using ::\n\n   poetry run pytest\n\n\nThis repository follows the `angular commit conventions <https://github.com/marionebl/commitlint/tree/master/@commitlint/config-angular>`_.\nYou can register a pre-commit hook to validate your commit messages by using\n`husky <https://github.com/typicode/husky>`_. The configurations are already in place if\nyou have nodejs installed. Just run ::\n\n   npm install\n\nand the pre-commit hook will be registered.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/escaped/django-exiffield",
    "keywords": "django,exif",
    "license": "BSD-3-Clause",
    "maintainer": "Alexander Frenzel",
    "maintainer_email": "alex@relatedworks.com",
    "name": "django-exiffield",
    "package_url": "https://pypi.org/project/django-exiffield/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-exiffield/",
    "project_urls": {
      "Documentation": "https://github.com/escaped/django-exiffield/blob/master/README.rst",
      "Homepage": "https://github.com/escaped/django-exiffield",
      "Repository": "https://github.com/escaped/django-exiffield"
    },
    "release_url": "https://pypi.org/project/django-exiffield/1.0.1/",
    "requires_dist": [
      "choicesenum (>=0.2.2)",
      "django (>=1.11)",
      "django-jsonfield (>=1.0,<2.0)",
      "pillow (>=5.0,<6.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "django-exiffield extracts exif information by utilizing exiftool.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8547380,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62538423ff7524d773fffbc82991581bfd37a81f864bce3f4841ae8b98359c6f",
        "md5": "58e9f179788d6d9e1fa79f072b9425d1",
        "sha256": "e7a84f94d6d301c1d6da20fd20624e5bdef4bb028ddfcc2cfe37c78c69006667"
      },
      "downloads": -1,
      "filename": "django_exiffield-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58e9f179788d6d9e1fa79f072b9425d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15441,
      "upload_time": "2018-11-11T21:56:26",
      "upload_time_iso_8601": "2018-11-11T21:56:26.296509Z",
      "url": "https://files.pythonhosted.org/packages/62/53/8423ff7524d773fffbc82991581bfd37a81f864bce3f4841ae8b98359c6f/django_exiffield-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db11438c67c11339df7bb632abf6e79e38e3bc1a956115deaf3a10414df3d9ca",
        "md5": "43b72e0692f1a05f6cc3b1f957a31dc3",
        "sha256": "f06812045352e20b439d7bbcf264bda469481d189cc0e4e3fc20d63d53a0448c"
      },
      "downloads": -1,
      "filename": "django-exiffield-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "43b72e0692f1a05f6cc3b1f957a31dc3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7192,
      "upload_time": "2018-11-11T21:56:24",
      "upload_time_iso_8601": "2018-11-11T21:56:24.702410Z",
      "url": "https://files.pythonhosted.org/packages/db/11/438c67c11339df7bb632abf6e79e38e3bc1a956115deaf3a10414df3d9ca/django-exiffield-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}