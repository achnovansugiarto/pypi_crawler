{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "The Tozny End-to-End Encrypted Database (E3DB) is a storage platform with powerful sharing and consent management features.\r\n[Read more on our blog.](https://tozny.com/blog/announcing-project-e3db-the-end-to-end-encrypted-database/)\r\n\r\nE3DB provides a familiar JSON-based NoSQL-style API for reading, writing, and querying data stored securely in the cloud.\r\n\r\n# Requirements\r\n\r\n* Python 2.7 environment\r\n\r\n# Installation\r\n\r\n## With Pip\r\n\r\n`pip install e3db`\r\n\r\n## Local build\r\n\r\n### Build\r\n\r\nTo build the package locally:\r\n\r\n```bash\r\npython setup.py bdist_wheel\r\n```\r\n\r\n### Install\r\n\r\nThat produces a `.whl` file in the `dist` directory that you can install. This can be installed with:\r\n\r\n```bash\r\npip install --use-wheel --find-links=<path to dist dir> e3db\r\n```\r\n\r\n# Setup\r\n\r\n## Registering a client\r\n\r\nRegister an account with [InnoVault](https://innovault.io) to get started. From the Admin Console you can create clients directly (and grab their credentials from the console) or create registration tokens to dynamically create clients with `e3db.Client.register()`. Clients registered from within the console will automatically back their credentials up to your account. Clients created dynamically via the SDK can _optionally_ back their credentials up to your account.\r\n\r\nFor a more complete walkthrough, see [`/examples/registration.py`](https://github.com/tozny/e3db-python/blob/master/examples/registration.py).\r\n\r\n### Without Credential Backup\r\n\r\n```python\r\nimport e3db\r\n\r\ntoken = '...'\r\nclient_name = '...'\r\n\r\npublic_key, private_key = e3db.Client.generate_keypair()\r\n\r\nclient_info = e3db.Client.register(token, client_name, public_key)\r\n\r\n# Now run operations with the client's details in client_info\r\n```\r\n\r\nThe object returned from the server contains the client's UUID, API key, and API secret (as well as echos back the public key passed during registration). It's your responsibility to store this information locally as it _will not be recoverable_ without credential backup.\r\n\r\n### With Credential Backup\r\n\r\n```python\r\nimport e3db\r\n\r\ntoken = '...'\r\nclient_name = '...'\r\n\r\npublic_key, private_key = e3db.Client.generate_keypair()\r\n\r\nclient_info = e3db.Client.register(token, client_name, public_key, private_key=private_key, backup=True)\r\n\r\n# Now run operations with the client's details in client_info\r\n```\r\n\r\nThe private key must be passed to the registration handler when backing up credentials as it is used to cryptographically sign the encrypted backup file stored on the server. The private key never leaves the system, and the stored credentials will only be accessible to the newly-registered client itself or the account with which it is registered.\r\n\r\n## Loading configuration and creating a client\r\n\r\nConfiguration is managed at runtime by instantiating an `e3db.Config` object with your client's credentials.\r\n\r\n```python\r\nimport e3db\r\nimport os\r\n\r\n# Assuming your credentials are stored as defined constants in the\r\n# application, pass them each into the configuration constructor as\r\n# follows:\r\n\r\nconfig = e3db.Config(\r\n    os.environ[\"client_id\"],\r\n    os.environ[\"api_key_id\"],\r\n    os.environ[\"api_secret\"],\r\n    os.environ[\"public_key\"],\r\n    os.environ[\"private_key\"]\r\n)\r\n\r\n# Pass the configuration when building a new client instance.\r\n\r\nclient = e3db.Client(config())\r\n```\r\n\r\n# Usage\r\n\r\n## Writing a record\r\n\r\nTo write new records to the database, call the `e3db.Client.write` method with a string describing the type of data to be written, along with an dictionary containing the fields of the record. `e3db.Client.write` returns the newly created record.\r\n\r\n```python\r\nimport e3db\r\n\r\nclient = e3db.Client(\r\n  # config\r\n)\r\n\r\nrecord_type = 'contact'\r\ndata = {\r\n    'first_name': 'Jon',\r\n    'last_name': 'Snow',\r\n    'phone': '555-555-1212'\r\n}\r\n\r\nrecord = client.write(record_type, data)\r\n\r\nprint 'Wrote record {0}'.format(record.meta.record_id)\r\n```\r\n\r\n## Querying records\r\n\r\nE3DB supports many options for querying records based on the fields stored in record metadata. Refer to the API documentation for the complete set of options that can be passed to `e3db.Client.query`.\r\n\r\nFor example, to list all records of type `contact` and print a simple report containing names and phone numbers:\r\n\r\n```python\r\nimport e3db\r\n\r\nclient = e3db.Client(' config ')\r\n\r\nrecord_type = 'contact'\r\n\r\nfor record in client.query(record=[record_type]):\r\n    full_name = \"{0} --- {1}\".format(record.data['first_name'], record.data['last_name'])\r\n    print \"{0} --- {1}\".format(full_name, record.data['phone'])\r\n```\r\n\r\nIn this example, the `e3db.Client.query` method returns an iterator that contains each record that matches the query.\r\n\r\n## More examples\r\n\r\nSee [the simple example code](https://github.com/tozny/e3db-python/blob/master/examples/simple.py) for runnable detailed examples.\r\n\r\n## Documentation\r\n\r\nGeneral E3DB documentation is [on our web site](https://tozny.com/documentation/e3db/).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/tozny/e3db-python.\r\n\r\n## License\r\n\r\nTozny dual licenses this product. For commercial use, please contact [info@tozny.com](mailto:info@tozny.com). For non-commercial use, this license permits use of the software only by government agencies, schools, universities, non-profit organizations or individuals on projects that do not receive external funding other than government research grants and contracts. Any other use requires a commercial license. For the full license, please see [LICENSE.md](https://github.com/tozny/e3db-python/blob/master/LICENSE.md), in this source repository.\r\n\r\nHome-page: https://github.com/tozny/e3db-python\r\nAuthor: Tozny, LLC\r\nAuthor-email: info@tozny.com\r\nLicense: TOZNY NON-COMMERCIAL LICENSE\r\n\r\nTozny dual licenses this product. For commercial use, please contact\r\ninfo@tozny.com. For non-commercial use, the contents of this file are\r\nsubject to the TOZNY NON-COMMERCIAL LICENSE (the \"License\") which\r\npermits use of the software only by government agencies, schools,\r\nuniversities, non-profit organizations or individuals on projects that\r\ndo not receive external funding other than government research grants\r\nand contracts.  Any other use requires a commercial license. You may\r\nnot use this file except in compliance with the License. You may obtain\r\na copy of the License at https://tozny.com/legal/non-commercial-license.\r\nSoftware distributed under the License is distributed on an \"AS IS\"\r\nbasis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\r\nLicense for the specific language governing rights and limitations under\r\nthe License. Portions of the software are Copyright (c) TOZNY LLC, 2017.\r\nAll rights reserved.\r\nDownload-URL: https://github.com/tozny/e3db-python/archive/1.0.2.tar.gz\r\nDescription: UNKNOWN\r\nKeywords: e3db,encryption,encrypted-store\r\nPlatform: UNKNOWN\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "e3db",
    "package_url": "https://pypi.org/project/e3db/",
    "platform": "",
    "project_url": "https://pypi.org/project/e3db/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/e3db/1.0.2/",
    "requires_dist": [
      "PyNaCl (<2,>=1.2.1)",
      "requests (<3,>=2.19.1)"
    ],
    "requires_python": "",
    "summary": "# Introduction",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13340319,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69d316a28a5c495067e354ffe6d90a2bbabf28950e1f96b1da63ec86da684236",
        "md5": "77c043444631bec4113fcf085488353f",
        "sha256": "5f463d8632300f06d5be3bbe2f6c3a5a1009af9902e7887674444f25b2526996"
      },
      "downloads": -1,
      "filename": "e3db-1.0.2-py2.7.egg",
      "has_sig": false,
      "md5_digest": "77c043444631bec4113fcf085488353f",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 63227,
      "upload_time": "2018-07-09T23:23:28",
      "upload_time_iso_8601": "2018-07-09T23:23:28.523778Z",
      "url": "https://files.pythonhosted.org/packages/69/d3/16a28a5c495067e354ffe6d90a2bbabf28950e1f96b1da63ec86da684236/e3db-1.0.2-py2.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1fa08c9420641b0b0b5d6836539f58a413fc49170c3551a574645c7ac086124",
        "md5": "1d364cc83df60afc11252c0b38d58661",
        "sha256": "5f75b71ccb40f9d9dea5e2c8667754fa547d1318545d3578319a740b28b68ea0"
      },
      "downloads": -1,
      "filename": "e3db-1.0.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d364cc83df60afc11252c0b38d58661",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 28630,
      "upload_time": "2018-07-09T23:23:27",
      "upload_time_iso_8601": "2018-07-09T23:23:27.167566Z",
      "url": "https://files.pythonhosted.org/packages/a1/fa/08c9420641b0b0b5d6836539f58a413fc49170c3551a574645c7ac086124/e3db-1.0.2-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}