{
  "info": {
    "author": "Cariad Eccleston",
    "author_email": "cariad@cariad.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# dwalk: walks directories, merges dictionaries\n\n`dwalk` is a Python package and CLI tool for walking directories and merging dictionaries.\n\n## Installation\n\n`dwalk` requires Python 3.8 or later.\n\n```bash\npip3 install dwalk\n```\n\n## CLI usage\n\n```bash\ndwalk --filenames FILENAME [FILENAME ...] [--directory DIRECTORY] [--include-meta]\n```\n\n- `--directory VALUE`: Directory to walk to. The files in this directory will take priority over the files in its parent. Optional, and uses the current working directory by default.\n- `--filenames LOWEST_PRECEDENCE ... HIGHEST_PRECEDENCE`: Files to look for and merge in each walked directory. Files at the end of the list take precedence over files at the beginning.\n- `--include-meta`: Flag to indicate whether or not to include metadata on each merged property.\n\n## Example\n\n### Merging via file precedence\n\nSay you have two configuration files:\n\n- `example/foo.yml` describes the default configuration, and:\n- `example/foo.user.yml` describes a user's personal configuration.\n\n```yaml\n# foo.yml\nprompts:\n  accessibility: not-asked\n  notifications: not-asked\ntheme: default\n```\n\n```yaml\n# foo.user.yml\naccessibility:\n  high-contrast: true\nprompts:\n  accessibility: user-enabled\ntheme: pink\n```\n\nTo merge these two configurations **with precedence given to the user's configuration**:\n\n```bash\ndwalk --directory example --filenames foo.yml foo.user.yml\n```\n\n```json\n{\n  \"accessibility\": {\n    \"high-contrast\": true\n  },\n  \"prompts\": {\n    \"accessibility\": \"user-enabled\",\n    \"notifications\": \"not-asked\"\n  },\n  \"theme\": \"pink\"\n}\n```\n\n### Merging via directory precedence\n\nSay you have three configuration files:\n\n- `example/foo.yml` describes the default configuration, and:\n- `example/foo.user.yml` describes a user's personal configuration, and:\n- `example/game/foo.yml` describes a sub-project's default configuration:\n\n```yaml\n# example/foo.yml\nprompts:\n  accessibility: not-asked\n  notifications: not-asked\ntheme: default\n```\n\n```yaml\n# example/foo.user.yml\naccessibility:\n  high-contrast: true\nprompts:\n  accessibility: user-enabled\ntheme: pink\n```\n\n```yaml\n# game/foo.yml\ntheme: sci-fi\nrequires:\n  - gamepad\n```\n\nTo merge these three configurations **in the context of the game directory**:\n\n```bash\ndwalk --directory example/game --filenames foo.yml foo.user.yml\n```\n\n```json\n{\n  \"accessibility\": {\n    \"high-contrast\": true\n  },\n  \"prompts\": {\n    \"accessibility\": \"user-enabled\",\n    \"notifications\": \"not-asked\"\n  },\n  \"requires\": [\n    \"gamepad\"\n  ],\n  \"theme\": \"sci-fi\"\n}\n```\n\n## Metadata\n\nMetdata can be included in the result by adding the `--include-meta` flag.\n\nThis will add `__dwalk__` keys that describe:\n- The `src` file whenever a property is merged in.\n- The `most_specific_src` that properties were merged in from.\n\nFor example:\n\n```json\n{\n  \"__dwalk__\": {\n    \"__dwalk__\": {\n        \"most_specific_src\": \"/Users/cariad/code/dwalk/example/foo.user.yml\"\n    },\n    \"accessibility\": {\n      \"src\": \"/Users/cariad/code/dwalk/example/foo.user.yml\"\n    },\n    \"prompts\": {\n      \"src\": \"/Users/cariad/code/dwalk/example/foo.yml\"\n    },\n    \"theme\": {\n      \"src\": \"/Users/cariad/code/dwalk/example/foo.user.yml\"\n    }\n  },\n  \"accessibility\": {\n    \"high-contrast\": true\n  },\n  \"prompts\": {\n    \"__dwalk__\": {\n      \"accessibility\": {\n        \"src\": \"/Users/cariad/code/dwalk/example/foo.user.yml\"\n      }\n    },\n    \"accessibility\": \"user-enabled\",\n    \"notifications\": \"not-asked\"\n  },\n  \"theme\": \"pink\"\n}\n```\n\n## Package\n\n`dwalk` can be imported and used in Python scripts:\n\n```python\nfrom dwalk import dwalk\nfrom logging import basicConfig, getLogger\n\n# Log level defaults to INFO; override if you want.\n# basicConfig()\n# getLogger(\"dwalk\").setLevel(\"DEBUG\")\n\nmerged = dwalk(\n    directory=\"../dwalk/testing/bottom\",\n    filenames=[\"dwalk.2.yml\", \"dwalk.1.yml\"],\n    include_meta=False,\n)\n\nprint(merged)\n# {'favourite_colour': 'purple', 'is_top_2': True, 'side_count': {'hexagon': 6,\n# 'pentagon': 5, 'square': 4, 'triangle': 3}, 'alphabet': {'d': 'delta', 'c':\n# 'charlie', 'b': 'bravo', 'a': 'alpha'}, 'is_top_1': True, 'is_bottom_2': True,\n# 'shopping_list': ['atari', 'bismuth', 'cookies'], 'is_bottom_1': True}\n```\n\n## Directory precedence\n\n`dwalk` always starts in the current user's home directory, then walks down from the volume root to the specified directory (or the current working directory if one wasn't specified).\n\n## Thanks!\n\nMy name is [Cariad Eccleston](https://cariad.me) and I'm a freelance DevOps engineer. I appreciate you checking out my projects! I'm available for interesing gigs -- let's talk!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cariad/dwalk",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwalk",
    "package_url": "https://pypi.org/project/dwalk/",
    "platform": "",
    "project_url": "https://pypi.org/project/dwalk/",
    "project_urls": {
      "Homepage": "https://github.com/cariad/dwalk"
    },
    "release_url": "https://pypi.org/project/dwalk/1.0.0/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": ">=3.8",
    "summary": "Walks directories and merges dictionaries",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8834635,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9336f3dd8583f7732e5aeab33e29c6e06521e8bc8f5a6ffe2115b7e164d8cf65",
        "md5": "c6bf9bd85405085ce18df03dc98b35f1",
        "sha256": "de48088aa9a5e7765a5896e276800f9daff527cc59a7cf6a99702a3b743ba70f"
      },
      "downloads": -1,
      "filename": "dwalk-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6bf9bd85405085ce18df03dc98b35f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10700,
      "upload_time": "2020-12-06T09:31:12",
      "upload_time_iso_8601": "2020-12-06T09:31:12.409806Z",
      "url": "https://files.pythonhosted.org/packages/93/36/f3dd8583f7732e5aeab33e29c6e06521e8bc8f5a6ffe2115b7e164d8cf65/dwalk-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}