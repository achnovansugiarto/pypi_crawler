{
  "info": {
    "author": "Lin",
    "author_email": "hao.lin@teletraan.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "mitmproxy\n^^^^^^^^^\n\n|ci_status| |coverage| |latest_release| |python_versions|\n\nThis repository contains the **mitmproxy** and **pathod** projects.\n\n``mitmproxy`` is an interactive, SSL/TLS-capable intercepting proxy with a console\ninterface for HTTP/1, HTTP/2, and WebSockets.\n\n``mitmdump`` is the command-line version of mitmproxy. Think tcpdump for HTTP.\n\n``mitmweb`` is a web-based interface for mitmproxy.\n\n``pathoc`` and ``pathod`` are perverse HTTP client and server applications\ndesigned to let you craft almost any conceivable HTTP request, including ones\nthat creatively violate the standards.\n\n\nDocumentation & Help\n--------------------\n\n\nGeneral information, tutorials, and precompiled binaries can be found on the mitmproxy website.\n\n|mitmproxy_site|\n\nThe documentation for mitmproxy is available on our website:\n\n|mitmproxy_docs_stable| |mitmproxy_docs_master|\n\nIf you have questions on how to use mitmproxy, please\nask them on StackOverflow!\n\n|mitmproxy_stackoverflow|\n\nJoin our developer chat on Slack if you would like to contribute to mitmproxy itself.\n\n|slack|\n\n\nInstallation\n------------\n\nThe installation instructions are `here <https://docs.mitmproxy.org/stable/overview-installation>`__.\nIf you want to contribute changes, keep on reading.\n\nContributing\n------------\n\nAs an open source project, mitmproxy welcomes contributions of all forms. If you would like to bring the project forward,\nplease consider contributing in the following areas:\n\n- **Maintenance:** We are *incredibly* thankful for individuals who are stepping up and helping with maintenance. This includes (but is not limited to) triaging issues, reviewing pull requests and picking up stale ones, helping out other users on StackOverflow_, creating minimal, complete and verifiable examples or test cases for existing bug reports, updating documentation, or fixing minor bugs that have recently been reported.\n- **Code Contributions:** We actively mark issues that we consider are `good first contributions`_. If you intend to work on a larger contribution to the project, please come talk to us first.\n\nDevelopment Setup\n-----------------\n\nTo get started hacking on mitmproxy, please install a recent version of Python (we require at least 3.6).\nThe following commands should work on your system:\n\n.. code-block:: bash\n\n    python3 --version\n    python3 -m pip --help\n    python3 -m venv --help\n\nIf all of this run successfully, do the following:\n\n.. code-block:: bash\n\n    git clone https://github.com/mitmproxy/mitmproxy.git\n    cd mitmproxy\n    ./dev.sh  # \"powershell .\\dev.ps1\" on Windows\n\n\nThe *dev* script will create a `virtualenv`_ environment in a directory called \"venv\"\nand install all mandatory and optional dependencies into it. The primary\nmitmproxy components - mitmproxy and pathod - are installed as\n\"editable\", so any changes to the source in the repository will be reflected\nlive in the virtualenv.\n\nThe main executables for the project - ``mitmdump``, ``mitmproxy``,\n``mitmweb``, ``pathod``, and ``pathoc`` - are all created within the\nvirtualenv. After activating the virtualenv, they will be on your $PATH, and\nyou can run them like any other command:\n\n.. code-block:: bash\n\n    . venv/bin/activate  # \"venv\\Scripts\\activate\" on Windows\n    mitmdump --version\n\nTesting\n-------\n\nIf you've followed the procedure above, you already have all the development\nrequirements installed, and you can run the basic test suite with tox_:\n\n.. code-block:: bash\n\n    tox -e py      # runs Python tests\n\nOur CI system has additional tox environments that are run on every pull request and branch on GitHub.\n\nFor speedier testing, we recommend you run `pytest`_ directly on individual test files or folders:\n\n.. code-block:: bash\n\n    cd test/mitmproxy/addons\n    pytest --cov mitmproxy.addons.anticache --cov-report term-missing --looponfail test_anticache.py\n\nPytest does not check the code style, so you want to run ``tox -e flake8`` again before committing.\n\nPlease ensure that all patches are accompanied by matching changes in the test\nsuite. The project tries to maintain 100% test coverage and enforces this strictly for some parts of the codebase.\n\nDocumentation\n-------------\n\nThe following tools are required to build the mitmproxy docs:\n\n- Hugo_ (the extended version ``hugo_extended`` is required)\n- modd_\n\n.. code-block:: bash\n\n    cd docs\n    modd\n\n\nCode Style\n----------\n\nKeeping to a consistent code style throughout the project makes it easier to\ncontribute and collaborate. Please stick to the guidelines in\n`PEP8`_ and the `Google Style Guide`_ unless there's a very\ngood reason not to.\n\nThis is automatically enforced on every PR. If we detect a linting error, the\nPR checks will fail and block merging. You can run our lint checks yourself\nwith the following commands:\n\n.. code-block:: bash\n\n    tox -e flake8\n    tox -e mypy    # checks static types\n\n\n.. |mitmproxy_site| image:: https://shields.mitmproxy.org/badge/https%3A%2F%2F-mitmproxy.org-blue.svg\n    :target: https://mitmproxy.org/\n    :alt: mitmproxy.org\n\n.. |mitmproxy_docs_stable| image:: https://shields.mitmproxy.org/badge/docs-stable-brightgreen.svg\n    :target: https://docs.mitmproxy.org/stable/\n    :alt: mitmproxy documentation stable\n\n.. |mitmproxy_docs_master| image:: https://shields.mitmproxy.org/badge/docs-master-brightgreen.svg\n    :target: https://docs.mitmproxy.org/master/\n    :alt: mitmproxy documentation master\n\n.. |mitmproxy_stackoverflow| image:: https://shields.mitmproxy.org/stackexchange/stackoverflow/t/mitmproxy?color=orange&label=stackoverflow%20questions\n    :target: https://stackoverflow.com/questions/tagged/mitmproxy\n    :alt: StackOverflow: mitmproxy\n\n.. |slack| image:: http://slack.mitmproxy.org/badge.svg\n    :target: http://slack.mitmproxy.org/\n    :alt: Slack Developer Chat\n\n.. |ci_status| image:: https://github.com/mitmproxy/mitmproxy/workflows/CI/badge.svg?branch=master\n    :target: https://github.com/mitmproxy/mitmproxy/actions?query=branch%3Amaster\n    :alt: Continuous Integration Status\n\n.. |coverage| image:: https://shields.mitmproxy.org/codecov/c/github/mitmproxy/mitmproxy/master.svg?label=codecov\n    :target: https://codecov.io/gh/mitmproxy/mitmproxy\n    :alt: Coverage Status\n\n.. |latest_release| image:: https://shields.mitmproxy.org/pypi/v/mitmproxy.svg\n    :target: https://pypi.python.org/pypi/mitmproxy\n    :alt: Latest Version\n\n.. |python_versions| image:: https://shields.mitmproxy.org/pypi/pyversions/mitmproxy.svg\n    :target: https://pypi.python.org/pypi/mitmproxy\n    :alt: Supported Python versions\n\n.. _virtualenv: https://virtualenv.pypa.io/\n.. _`pytest`: http://pytest.org/\n.. _tox: https://tox.readthedocs.io/\n.. _Hugo: https://gohugo.io/\n.. _modd: https://github.com/cortesi/modd\n.. _PEP8: https://www.python.org/dev/peps/pep-0008\n.. _`Google Style Guide`: https://google.github.io/styleguide/pyguide.html\n.. _StackOverflow: https://stackoverflow.com/questions/tagged/mitmproxy\n.. _`good first contributions`: https://github.com/mitmproxy/mitmproxy/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://mitmproxy.org",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mitmproxy-lin-customization",
    "package_url": "https://pypi.org/project/mitmproxy-lin-customization/",
    "platform": "",
    "project_url": "https://pypi.org/project/mitmproxy-lin-customization/",
    "project_urls": {
      "Homepage": "http://mitmproxy.org"
    },
    "release_url": "https://pypi.org/project/mitmproxy-lin-customization/5.2/",
    "requires_dist": [
      "blinker (<1.5,>=1.4)",
      "Brotli (<1.1,>=1.0)",
      "certifi (>=2019.9.11)",
      "click (<8,>=7.0)",
      "cryptography (<3.0,>=2.9)",
      "flask (<1.2,>=1.1.1)",
      "h2 (<4,>=3.2.0)",
      "hyperframe (<6,>=5.1.0)",
      "kaitaistruct (<0.9,>=0.7)",
      "ldap3 (<2.8,>=2.6.1)",
      "passlib (<1.8,>=1.6.5)",
      "protobuf (<3.12,>=3.6.0)",
      "pyasn1 (<0.5,>=0.3.1)",
      "pyOpenSSL (<19.2,>=19.1.0)",
      "pyparsing (<2.5,>=2.4.2)",
      "pyperclip (<1.9,>=1.6.0)",
      "ruamel.yaml (<0.17,>=0.16)",
      "sortedcontainers (<2.2,>=2.1.0)",
      "tornado (<7,>=4.3)",
      "urwid (!=2.1.0,==2.0.1)",
      "wsproto (<0.16,>=0.14)",
      "publicsuffix2 (<3,>=2.20190812)",
      "zstandard (<0.14,>=0.11)",
      "beeprint (>=2.4.10)",
      "pydivert (<2.2,>=2.0.3) ; sys_platform == \"win32\"",
      "asynctest (>=0.12.0) ; extra == 'dev'",
      "Flask (<1.2,>=1.0) ; extra == 'dev'",
      "hypothesis (<5.9,>=5.8) ; extra == 'dev'",
      "parver (<2.0,>=0.1) ; extra == 'dev'",
      "pytest-asyncio (<0.11,>=0.10.0) ; extra == 'dev'",
      "pytest-cov (<3,>=2.7.1) ; extra == 'dev'",
      "pytest-timeout (<2,>=1.3.3) ; extra == 'dev'",
      "pytest-xdist (<2,>=1.29) ; extra == 'dev'",
      "pytest (<6,>=5.1.3) ; extra == 'dev'",
      "requests (<3,>=2.9.1) ; extra == 'dev'",
      "tox (<3.15,>=3.5) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "基于mitmproxy，根据自己的使用习惯定制的内容，加入接口花费时间排序，按照定义规则自动跑接口造数据，graphqlview的功能",
    "version": "5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12120521,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebec6af4e8791ac9022c4851c64cb4420441906cefe77d0825fc8f01de8758d",
        "md5": "5984f46e7d78f0755b76c77b6f81a7b5",
        "sha256": "79b2048206f7f134893bf8da29f220fee8ac266a808e8a6cc9d69c7087c23037"
      },
      "downloads": -1,
      "filename": "mitmproxy_lin_customization-5.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5984f46e7d78f0755b76c77b6f81a7b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1363851,
      "upload_time": "2021-08-13T09:02:55",
      "upload_time_iso_8601": "2021-08-13T09:02:55.685018Z",
      "url": "https://files.pythonhosted.org/packages/9e/be/c6af4e8791ac9022c4851c64cb4420441906cefe77d0825fc8f01de8758d/mitmproxy_lin_customization-5.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e14a654b2bd8f72c229f46d70360191f5f643422f0a2e09efea16d1f4664d20",
        "md5": "145fcbe3b6cc269ae100f588f15a72bb",
        "sha256": "9402932109f203af1138b7794990aef9217f79347fc474f8b65849977257697c"
      },
      "downloads": -1,
      "filename": "mitmproxy_lin_customization-5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "145fcbe3b6cc269ae100f588f15a72bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1276014,
      "upload_time": "2021-08-13T09:02:59",
      "upload_time_iso_8601": "2021-08-13T09:02:59.316406Z",
      "url": "https://files.pythonhosted.org/packages/8e/14/a654b2bd8f72c229f46d70360191f5f643422f0a2e09efea16d1f4664d20/mitmproxy_lin_customization-5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}