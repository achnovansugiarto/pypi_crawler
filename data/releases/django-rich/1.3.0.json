{
  "info": {
    "author": "Adam Johnson",
    "author_email": "me@adamj.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "===========\ndjango-rich\n===========\n\n.. image:: https://img.shields.io/github/workflow/status/adamchainz/django-rich/CI/main?style=for-the-badge\n   :target: https://github.com/adamchainz/django-rich/actions?workflow=CI\n\n.. image:: https://img.shields.io/badge/Coverage-100%25-success?style=for-the-badge\n  :target: https://github.com/adamchainz/django-rich/actions?workflow=CI\n\n.. image:: https://img.shields.io/pypi/v/django-rich.svg?style=for-the-badge\n   :target: https://pypi.org/project/django-rich/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge\n   :target: https://github.com/psf/black\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white&style=for-the-badge\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\nExtensions for using `Rich <https://rich.readthedocs.io/>`__ with Django.\n\nRequirements\n------------\n\nPython 3.7 to 3.10 supported.\n\nDjango 3.2 to 4.0 supported.\n\n----\n\n**Want to work smarter and faster?**\nCheck out my book `Boost Your Django DX <https://adamchainz.gumroad.com/l/byddx>`__ which covers many ways to improve your development experience.\nI wrote django-rich whilst working on the book!\n\n----\n\nInstallation\n------------\n\n1. Install with **pip**:\n\n   .. code-block:: sh\n\n       python -m pip install django-rich\n\n\nReference\n---------\n\n``django_rich.management.RichCommand``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA subclass of Django’s |BaseCommand|__ class that sets its ``self.console`` to a Rich |Console|__.\nThe ``Console`` uses the command’s ``stdout`` argument, which defaults to ``sys.stdout``.\nColourization is enabled or disabled according to Django’s ``--no-color`` and ``--force-color`` flags.\n\n.. |BaseCommand| replace:: ``BaseCommand``\n__ https://docs.djangoproject.com/en/stable/howto/custom-management-commands/#django.core.management.BaseCommand\n\n.. |Console| replace:: ``Console``\n__ https://rich.readthedocs.io/en/stable/console.html\n\nYou can use ``self.console`` like so:\n\n.. code-block:: python\n\n    from django_rich.management import RichCommand\n\n\n    class Command(RichCommand):\n        def handle(self, *args, **options):\n            self.console.print(\"[bold red]Alert![/bold red]\")\n\nYou can customize the construction of the ``Console`` by overriding the ``make_rich_console`` class attribute.\nThis should be a callable that returns a ``Console``, such as a |functools.partial|__.\nFor example, to disable the default-on ``markup`` and ``highlighting`` flags:\n\n.. |functools.partial| replace:: ``functools.partial``\n__ https://docs.python.org/3/library/functools.html#functools.partial\n\n.. code-block:: python\n\n    from functools import partial\n\n    from django_rich.management import RichCommand\n    from rich.console import Console\n\n\n    class Command(RichCommand):\n        make_rich_console = partial(Console, markup=False, highlight=False)\n\n        def handle(self, *args, **options):\n            ...\n\n``django_rich.test.RichRunner``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA subclass of Django's |DiscoverRunner|__ with colourized outputs and `nice traceback rendering <https://rich.readthedocs.io/en/stable/traceback.html>`__.\n\n.. image:: https://raw.githubusercontent.com/adamchainz/django-rich/main/img/RichRunner.png\n\n.. |DiscoverRunner| replace:: ``DiscoverRunner``\n__ https://docs.djangoproject.com/en/stable/topics/testing/advanced/#defining-a-test-runner\n\nTo use this class, point your |TEST_RUNNER|__ setting to it:\n\n.. |TEST_RUNNER| replace:: ``TEST_RUNNER``\n__ https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-TEST_RUNNER\n\n.. code-block:: python\n\n    TEST_RUNNER = \"django_rich.test.RichRunner\"\n\nYou can also use it as a base for further customization.\nSince only output is modified, it should combine well with other classes.\n\nThe test runner provides the following features:\n\n* Output is colourized wherever possible.\n  This includes Rich’s default `highlighting <https://rich.readthedocs.io/en/stable/highlighting.html>`__ which will format numbers, quoted strings, URL’s, and more.\n\n* Failures and errors use Rich’s `traceback rendering <https://rich.readthedocs.io/en/stable/traceback.html>`__.\n  This displays the source code and local values per frame.\n  Each frame also shows the filename and line number, and on many terminals you can click the link to jump to the file at that position.\n\n* Output is also colourized when using the ``--debug-sql`` and ``--pdb`` flags.\n\n* All other flags from Django's DiscoverRunner continue to work in the normal way.\n\nOutput Width on CI\n~~~~~~~~~~~~~~~~~~\n\nWhen tests run on your CI system, you might find the output a bit narrow for showing tracebacks correctly.\nThis is because Rich tries to autodetect the terminal dimensions, and if that fails, it will default to 80 characters wide.\nYou can override this default with the ``COLUMNS`` environment variable (as per Python’s |shutil.get_terminal_size() function|__):\n\n.. |shutil.get_terminal_size() function| replace:: ``shutil.get_terminal_size()`` function\n__ https://docs.python.org/3/library/shutil.html#shutil.get_terminal_size\n\n.. code-block:: console\n\n    $ COLUMNS=120 ./manage.py test\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-rich",
    "keywords": "Django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rich",
    "package_url": "https://pypi.org/project/django-rich/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-rich/",
    "project_urls": {
      "Changelog": "https://github.com/adamchainz/django-rich/blob/main/HISTORY.rst",
      "Homepage": "https://github.com/adamchainz/django-rich",
      "Twitter": "https://twitter.com/adamchainz"
    },
    "release_url": "https://pypi.org/project/django-rich/1.3.0/",
    "requires_dist": [
      "Django (>=3.2)",
      "rich (>=10.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Extensions for using Rich with Django.",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17024246,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23f9f45d4de7dd826e6ddfc13eb9a26785df3ab7fed8b01569341545ece33543",
        "md5": "a43be7affdb09d8a0f2398a5fcaf50d8",
        "sha256": "ef139bf31e1381a93684f8043ab5554f5273dbb8c5d452d33a0ab2ec6e5a196b"
      },
      "downloads": -1,
      "filename": "django_rich-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a43be7affdb09d8a0f2398a5fcaf50d8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6959,
      "upload_time": "2022-05-10T15:45:16",
      "upload_time_iso_8601": "2022-05-10T15:45:16.324147Z",
      "url": "https://files.pythonhosted.org/packages/23/f9/f45d4de7dd826e6ddfc13eb9a26785df3ab7fed8b01569341545ece33543/django_rich-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1de1b014dd308b08ee062c69ab149b77fed4313af086ba69b0c7e79771228ae7",
        "md5": "7fac7d4287c26fdb38fb7f1a12a37038",
        "sha256": "4ac43014d3d98e994cd7553f73f515a8c81c932d2f412c237d7e2c00842e9e4e"
      },
      "downloads": -1,
      "filename": "django-rich-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7fac7d4287c26fdb38fb7f1a12a37038",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 58776,
      "upload_time": "2022-05-10T15:45:17",
      "upload_time_iso_8601": "2022-05-10T15:45:17.728416Z",
      "url": "https://files.pythonhosted.org/packages/1d/e1/b014dd308b08ee062c69ab149b77fed4313af086ba69b0c7e79771228ae7/django-rich-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}