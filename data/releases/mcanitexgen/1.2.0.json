{
  "info": {
    "author": "Oran9eUtan",
    "author_email": "oran9eutan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![](https://img.shields.io/github/license/orangeutan/mcanitexgen)\n![](https://img.shields.io/badge/python-3.8|3.9-blue)\n[![](https://img.shields.io/pypi/v/mcanitexgen)](https://pypi.org/project/mcanitexgen/)\n![](https://raw.githubusercontent.com/OrangeUtan/mcanitexgen/6067435cfa656819bcef780415e36ff3e5f117bb/coverage.svg)\n![](https://img.shields.io/badge/mypy-checked-green)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![](https://img.shields.io/badge/pre--commit-enabled-green)\n![](https://github.com/orangeutan/mcanitexgen/workflows/CLI/badge.svg)\n\n# Animated-texture generator for Minecraft\nAnitexgen is a generator for \".mcmeta\" files that Minecraft uses to animate textures.<br>\n\nIt allows you to write texture animations in Python instead of json. Using a proper programming language enables you to create much more complex animations, like this model that uses 3 animated textures to create a moving dog.\n\n<img src=\"https://raw.githubusercontent.com/OrangeUtan/mcanitexgen/master/examples/dog/dog.gif\" width=\"400\" style=\"image-rendering: pixelated; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges;\"/>\n\n- [Installation](#Installation)\n- [Usage](#Usage)\n- [Getting started](#Getting-started)\n  - [Create a simple animation](#Create-a-simple-animation)\n  - [More examples](https://github.com/OrangeUtan/mcanitexgen/tree/main/examples)\n- [Changelog](https://github.com/OrangeUtan/mcanitexgen/blob/main/CHANGELOG.md)\n\n# Installation\n```\npip install mcanitexgen\n```\n\n# Usage\nGenerate .mcmeta files for all animations in an animation file\n```shell\n$ mcanitexgen generate <animation_file>\n    -o, --out       The output directory of the generated files\n    -m, --minify    Minify generated files\n    -i, --indent    Indentation used when generating files\n    --dry           Dry run. Don't generate any files\n```\nCreate gifs for all animations in an animation file\n```shell\n$ mcanitexgen gif <animation_file>\n    -o, --out       The output directory of the generated files\n```\n\n# Getting started\n## Create a simple animation\nWe are going to create this blinking Steve:<br>\n<img src=\"https://raw.githubusercontent.com/OrangeUtan/mcanitexgen/master/examples/steve/steve.gif\" width=\"100\" style=\"image-rendering: pixelated; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges;\"/>\n\n\nFirst we have to create the different states of the animation.\nI created a simple **steve.png** file:<br>\n<img src=\"https://raw.githubusercontent.com/OrangeUtan/mcanitexgen/master/examples/steve/steve.png\" width=\"100\" style=\"image-rendering: pixelated; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges;\"/>\n\nTop to Bottom: Looking normal, blinking, wink with right eye, wink with left eye.<br>\nNow we can create the animation file **steve.animation .py** that uses these states to create an animation:<br>\n```python\nfrom mcanitexgen.animation import animation, TextureAnimation, State, Sequence\n\n@animation(\"steve.png\")\nclass Steve(TextureAnimation):\n  NORMAL = State(0)  # Look normal\n  BLINK = State(1)\n  WINK_RIGHT = State(2)  # Wink with right eye\n  WINK_LEFT = State(3)  # Wink with left eye\n\n  # Look normal and blink shortly\n  look_and_blink = Sequence(NORMAL(duration=60), BLINK(duration=2))\n\n  # The main Sequence used to create the animation\n  main = Sequence(\n    3 * look_and_blink,  # Play \"look_and_blink\" Sequence 3 times\n    NORMAL(duration=60),\n    WINK_LEFT(duration=30),\n    look_and_blink,\n    NORMAL(duration=60),\n    WINK_RIGHT(duration=30),\n  )\n```\nAn overview over all out files:\n```\nresourcepack\n  ⠇\n  textures\n    └╴ item\n       ├╴steve.png\n       └╴steve.animation.py\n```\n\nPassing the animation file to Anitexgen will create a **steve.png.mcmeta** file:\n```shell\n$ mcanitexgen generate steve.animation.py\n```\n```json\nsteve.png.mcmeta\n{\n  \"animation\": {\n      \"interpolate\": false,\n      \"frametime\": 1,\n      \"frames\": [\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 1, \"time\": 2},\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 1, \"time\": 2},\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 1, \"time\": 2},\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 3, \"time\": 30},\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 1, \"time\": 2},\n        {\"index\": 0, \"time\": 60},\n        {\"index\": 2, \"time\": 30}\n      ]\n  }\n}\n```\n```\nresourcepack\n  ⠇\n  textures\n    └╴ item\n       ├╴ steve.png\n       ├╴ steve.animation.py\n       └╴ steve.png.mcmeta\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OrangeUtan/mcanitexgen",
    "keywords": "minecraft,animation,mcmeta",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcanitexgen",
    "package_url": "https://pypi.org/project/mcanitexgen/",
    "platform": "",
    "project_url": "https://pypi.org/project/mcanitexgen/",
    "project_urls": {
      "Homepage": "https://github.com/OrangeUtan/mcanitexgen",
      "Repository": "https://github.com/OrangeUtan/mcanitexgen"
    },
    "release_url": "https://pypi.org/project/mcanitexgen/1.2.0/",
    "requires_dist": [
      "Pillow (>=8.1.2,<9.0.0)",
      "numpy (>=1.20.1,<2.0.0)",
      "typer (>=0.3.2,<0.4.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "An animation generator for Minecraft .mcmeta files",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9998457,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85666608e28aa6a54779094e3f1c26fab90a88e2ef833e5774a97d7658820c91",
        "md5": "cbcc98d988285ad32fda49453338b4a8",
        "sha256": "1dde0b03fd7aea55816e2d1907b18646a5c63c93509ac655074ce39a947e95c1"
      },
      "downloads": -1,
      "filename": "mcanitexgen-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cbcc98d988285ad32fda49453338b4a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 24191,
      "upload_time": "2021-03-28T20:15:18",
      "upload_time_iso_8601": "2021-03-28T20:15:18.642054Z",
      "url": "https://files.pythonhosted.org/packages/85/66/6608e28aa6a54779094e3f1c26fab90a88e2ef833e5774a97d7658820c91/mcanitexgen-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b6de8396a86dd082645c7afa78b0d05c904a6ae2294e30c2590fe31213b09b1",
        "md5": "e999858b752b361abe69ce5329c92712",
        "sha256": "719d763c8e577c218f28820cf809c51b6daa08ba5302fed77afa4b24e852eeef"
      },
      "downloads": -1,
      "filename": "mcanitexgen-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e999858b752b361abe69ce5329c92712",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 22476,
      "upload_time": "2021-03-28T20:15:19",
      "upload_time_iso_8601": "2021-03-28T20:15:19.774849Z",
      "url": "https://files.pythonhosted.org/packages/7b/6d/e8396a86dd082645c7afa78b0d05c904a6ae2294e30c2590fe31213b09b1/mcanitexgen-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}