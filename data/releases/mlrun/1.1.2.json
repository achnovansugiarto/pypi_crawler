{
  "info": {
    "author": "Yaron Haviv",
    "author_email": "yaronh@iguazio.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<a id=\"top\"></a>\n[![Build Status](https://github.com/mlrun/mlrun/workflows/CI/badge.svg)](https://github.com/mlrun/mlrun/actions)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![PyPI version fury.io](https://badge.fury.io/py/mlrun.svg)](https://pypi.python.org/pypi/mlrun/)\n[![Documentation](https://readthedocs.org/projects/mlrun/badge/?version=latest)](https://mlrun.readthedocs.io/en/latest/?badge=latest)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![GitHub commit activity](https://img.shields.io/github/commit-activity/w/mlrun/mlrun)\n![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/mlrun/mlrun?sort=semver)\n[![Join MLOps Live](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](mlopslive.slack.com)\n\n<p align=\"left\"><img src=\"docs/_static/images/MLRun-logo.png\" alt=\"MLRun logo\" width=\"150\"/></p>\n\n\n\n## MLRun - The Open Source MLOps Orchestration Framework\n\nMLRun enables production pipeline design using a modular strategy, where the different parts contribute to a continuous, automated, and far simpler path from research and development to scalable production pipelines, without refactoring code, adding glue logic, or spending significant efforts on data and ML engineering.\n\nMLRun uses **Serverless Function** technology: write the code once, using your preferred development environment and simple “local” semantics, and then run it as-is on different platforms and at scale. MLRun automates the build process, execution, data movement, scaling, versioning, parameterization, outputs tracking, CI/CD integration, deployment to production, monitoring, and more.\n\nThose easily developed data or ML “functions” can then be published or loaded from a [marketplace](https://www.mlrun.org/marketplace/) and used later to form offline or real-time production pipelines with minimal engineering efforts.\n\n<p align=\"center\"><img src=\"./docs/_static/images/mlrun-flow.png\" alt=\"mlrun-flow\" width=\"600\"/></p><br>\n\nData preparation, model development, model and application delivery, and end to end monitoring are tightly connected: they cannot be managed in silos. This is where MLRun MLOps orchestration comes in. ML, data, and DevOps/MLOps teams collaborate using the same set of tools, practices, APIs, metadata, and version control.\n\n**MLRun simplifies & accelerates the time to production.**\n\n## Architecture \n\n![pipeline](./docs/_static/images/pipeline.png)\n\nMLRun is composed of the following layers:\n\n- **[Feature Store](https://docs.mlrun.org/en/latest/feature-store/feature-store.html)** &mdash; collects, prepares, catalogs, and serves data features for development (offline) and real-time (online) usage for real-time and batch data. See also \n[Feature store: data ingestion](https://docs.mlrun.org/en/latest/feature-store/feature-store-data-ingestion.html) and [Feature store: data retrieval](https://docs.mlrun.org/en/latest/feature-store/feature-store-data-retrieval.html), as well as the [Feature Store tutorials](https://docs.mlrun.org/en/latest/feature-store/feature-store-tutorials.html).\n- **[ML CI/CD pipeline](https://docs.mlrun.org/en/latest/projects/ci-integration.html)** &mdash; automatically trains, tests, optimizes, and deploys or updates models using a snapshot of the production \ndata (generated by the feature store) and code from the source control (Git).\n- **[Real-Time Serving Pipeline](https://docs.mlrun.org/en/latest/serving/serving-graph.html)** &mdash; Rapid deployment of scalable data and ML pipelines using real-time serverless technology, including \nthe API handling, data preparation/enrichment, [model serving](https://docs.mlrun.org/en/latest/serving/build-graph-model-serving.html), ensembles, driving and measuring actions, etc.\n- **[Real-Time monitoring and retraining](https://docs.mlrun.org/en/latest/model_monitoring/index.html)** &mdash; monitors data, models, and production components and provides a feedback loop for exploring production data, identifying drift, alerting on anomalies or data quality issues, triggering re-training jobs, measuring business impact, etc.\n\n## Get started\n\nIt's easy to start using MLRun: \n1. Install the MLRun service [locally using Docker](https://docs.mlrun.org/en/latest/install/local-docker.html) or [over Kubernetes Cluster](https://docs.mlrun.org/en/latest/install/kubernetes.html). Alternatively, you can use [Iguazio's managed MLRun service](https://www.iguazio.com/docs/latest-release/)\n2. [Set up your client environment](https://docs.mlrun.org/en/latest/install/remote.html) to work with the service. \n3. Follow the [Quick Start tutorial](https:///docs.mlrun.org/en/latest/quick-start/quick-start.html) and [Additional Tutorials and Examples](https://docs.mlrun.org/en/latest/howto/index.html) to learn how to use MLRun to develop and deploy machine learning applications to production.<br>\n\nFor hands-on learning, try the [MLRun Katakoda Scenarios](https://www.katacoda.com/mlrun). And you can watch the [Tutorial on Youtube](https://www.youtube.com/embed/O6g1pJJ609U) to see the flow in action.\n\n## MLRun documentation\n\nRead more in the MLRun documentation, including:\n- MLRun basics\n   - [What is MLRun?](https://docs.mlrun.org/en/latest/index.html)\n   - [Quick-Start Guide](https://docs.mlrun.org/en/latest/quick-start/quick-start.html)\n   - [Tutorials and examples](https://docs.mlrun.org/en/latest/howto/index.html)\n   - [Installation and setup guide](https://docs.mlrun.org/en/latest/install.html)\n- Concepts\n   - [Projects](https://docs.mlrun.org/en/latest/projects/project.html)\n   - [MLRun serverless functions](https://docs.mlrun.org/en/latest/concepts/functions-concepts.html)\n   - [Data stores and data items](https://docs.mlrun.org/en/latest/concepts/data-feature-store.html)\n   - [Feature store](https://docs.mlrun.org/en/latest/feature-store/feature-store.html)\n   - [Runs, functions, and workflows](https://docs.mlrun.org/en/latest/concepts/runs-experiments-workflows.html)\n   - [Artifacts and models](https://docs.mlrun.org/en/latest/store/artifacts.html)\n   - [Deployment and monitoring](https://docs.mlrun.org/en/latest/concepts/deployment-monitoring.html)\n- Working with data\n   - [Data ingestion](https://docs.mlrun.org/en/latest/feature-store/feature-store-data-ingestion.html)\n   - [Data retrieval](https://docs.mlrun.org/en/latest/feature-store/feature-store-data-retrieval.html)\n   - [Tutorials](https://docs.mlrun.org/en/latest/feature-store/feature-store-tutorials.html)\n- Develop Functions and models\n   - [Creating and using functions](https://docs.mlrun.org/en/latest/runtimes/functions.html)\n   - [Run, track, and compare jobs](https://docs.mlrun.org/en/latest/runtimes/run-track-compare-jobs.html)\n- Deploy ML applications\n   - [Real-time serving pipelines (graphs)](https://docs.mlrun.org/en/latest/serving/serving-graph.html)\n   - [Model serving pipelines](https://docs.mlrun.org/en/latest/serving/build-graph-model-serving.html)\n   - [CI/CD, rolling upgrades, git](https://docs.mlrun.org/en/latest/model_monitoring/ci-cd-rolling-upgrades-git.html)\n- References\n   - [API](https://docs.mlrun.org/en/latest/api/index.html)\n   - [CLI](https://docs.mlrun.org/en/latest/cli.html)\n   - [Glossary](https://docs.mlrun.org/en/latest/glossary.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mlrun/mlrun",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlrun",
    "package_url": "https://pypi.org/project/mlrun/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlrun/",
    "project_urls": {
      "Homepage": "https://github.com/mlrun/mlrun"
    },
    "release_url": "https://pypi.org/project/mlrun/1.1.2/",
    "requires_dist": [
      "urllib3 (<1.27,>=1.25.4)",
      "chardet (<4.0,>=3.0.2)",
      "GitPython (~=3.0)",
      "aiohttp (~=3.8)",
      "click (~=8.0.0)",
      "typing-extensions (<5,>=3.10.0)",
      "protobuf (<4,>=3.20.2)",
      "kfp (~=1.8.0)",
      "nest-asyncio (~=1.0)",
      "ipython (~=7.0)",
      "nuclio-jupyter (==0.9.2)",
      "numpy (<1.23.0,>=1.16.5)",
      "pandas (<1.5.0,~=1.2)",
      "pyarrow (<7,>=3)",
      "pyyaml (~=5.1)",
      "requests (~=2.22)",
      "sqlalchemy (~=1.3)",
      "tabulate (~=0.8.6)",
      "v3io (~=0.5.19)",
      "pydantic (~=1.5)",
      "orjson (~=3.3)",
      "alembic (<1.6.0,~=1.4)",
      "mergedeep (~=1.3)",
      "v3io-frames (~=0.10.2)",
      "semver (~=2.13)",
      "dask (~=2021.11.2)",
      "distributed (~=2021.11.2)",
      "kubernetes (~=12.0)",
      "humanfriendly (~=8.2)",
      "fastapi (~=0.78.0)",
      "fsspec (~=2021.8.1)",
      "v3iofs (~=0.1.15)",
      "cryptography (<3.4,~=3.0)",
      "storey (~=1.1.9)",
      "deepdiff (~=5.0)",
      "pymysql (~=1.0)",
      "inflection (~=0.5.0)",
      "python-dotenv (~=0.17.0)",
      "uvicorn (~=0.17.0) ; extra == 'api'",
      "dask-kubernetes (~=0.11.0) ; extra == 'api'",
      "apscheduler (~=3.6) ; extra == 'api'",
      "sqlite3-to-mysql (~=1.4) ; extra == 'api'",
      "msrest (~=0.6.21) ; extra == 'azure-blob-storage'",
      "azure-core (~=1.23) ; extra == 'azure-blob-storage'",
      "azure-storage-blob (~=12.13) ; extra == 'azure-blob-storage'",
      "adlfs (~=2021.8.1) ; extra == 'azure-blob-storage'",
      "azure-identity (~=1.5) ; extra == 'azure-key-vault'",
      "azure-keyvault-secrets (~=4.2) ; extra == 'azure-key-vault'",
      "bokeh (>=2.4.2,~=2.4) ; extra == 'bokeh'",
      "adlfs (~=2021.8.1) ; extra == 'complete'",
      "aiobotocore (~=1.4.0) ; extra == 'complete'",
      "azure-core (~=1.23) ; extra == 'complete'",
      "azure-identity (~=1.5) ; extra == 'complete'",
      "azure-keyvault-secrets (~=4.2) ; extra == 'complete'",
      "azure-storage-blob (~=12.13) ; extra == 'complete'",
      "boto3 (<1.17.107,~=1.9) ; extra == 'complete'",
      "botocore (<1.20.107,>=1.20.106) ; extra == 'complete'",
      "gcsfs (~=2021.8.1) ; extra == 'complete'",
      "google-cloud-bigquery (~=3.0) ; extra == 'complete'",
      "kafka-python (~=2.0) ; extra == 'complete'",
      "msrest (~=0.6.21) ; extra == 'complete'",
      "plotly (~=5.4) ; extra == 'complete'",
      "redis (~=4.3) ; extra == 'complete'",
      "s3fs (~=2021.8.1) ; extra == 'complete'",
      "adlfs (~=2021.8.1) ; extra == 'complete-api'",
      "aiobotocore (~=1.4.0) ; extra == 'complete-api'",
      "apscheduler (~=3.6) ; extra == 'complete-api'",
      "azure-core (~=1.23) ; extra == 'complete-api'",
      "azure-identity (~=1.5) ; extra == 'complete-api'",
      "azure-keyvault-secrets (~=4.2) ; extra == 'complete-api'",
      "azure-storage-blob (~=12.13) ; extra == 'complete-api'",
      "boto3 (<1.17.107,~=1.9) ; extra == 'complete-api'",
      "botocore (<1.20.107,>=1.20.106) ; extra == 'complete-api'",
      "dask-kubernetes (~=0.11.0) ; extra == 'complete-api'",
      "gcsfs (~=2021.8.1) ; extra == 'complete-api'",
      "google-cloud-bigquery (~=3.0) ; extra == 'complete-api'",
      "kafka-python (~=2.0) ; extra == 'complete-api'",
      "msrest (~=0.6.21) ; extra == 'complete-api'",
      "plotly (~=5.4) ; extra == 'complete-api'",
      "redis (~=4.3) ; extra == 'complete-api'",
      "s3fs (~=2021.8.1) ; extra == 'complete-api'",
      "sqlite3-to-mysql (~=1.4) ; extra == 'complete-api'",
      "uvicorn (~=0.17.0) ; extra == 'complete-api'",
      "google-cloud-bigquery (~=3.0) ; extra == 'google-cloud-bigquery'",
      "gcsfs (~=2021.8.1) ; extra == 'google-cloud-storage'",
      "kafka-python (~=2.0) ; extra == 'kafka'",
      "plotly (~=5.4) ; extra == 'plotly'",
      "redis (~=4.3) ; extra == 'redis'",
      "boto3 (<1.17.107,~=1.9) ; extra == 's3'",
      "botocore (<1.20.107,>=1.20.106) ; extra == 's3'",
      "aiobotocore (~=1.4.0) ; extra == 's3'",
      "s3fs (~=2021.8.1) ; extra == 's3'"
    ],
    "requires_python": "",
    "summary": "Tracking and config of machine learning runs",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17396778,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87d1b3f8a382d583647d9dd29e97c128848530f48bc57170c38bed8d9ba2bd11",
        "md5": "4365b484b02ebb74bd341203c02e6bed",
        "sha256": "e22c5266d6dc03b6ca85a3e9b8635413c204680de66a36387c06f6ddcc2001a8"
      },
      "downloads": -1,
      "filename": "mlrun-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4365b484b02ebb74bd341203c02e6bed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1014250,
      "upload_time": "2022-11-20T14:05:01",
      "upload_time_iso_8601": "2022-11-20T14:05:01.347081Z",
      "url": "https://files.pythonhosted.org/packages/87/d1/b3f8a382d583647d9dd29e97c128848530f48bc57170c38bed8d9ba2bd11/mlrun-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}