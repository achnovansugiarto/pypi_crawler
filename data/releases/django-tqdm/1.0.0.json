{
  "info": {
    "author": "Anton Samarchyan",
    "author_email": "desecho@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: User Interfaces",
      "Topic :: System :: Monitoring",
      "Topic :: Terminals",
      "Topic :: Utilities"
    ],
    "description": "django-tqdm\n==============\n\n|PyPI-Status| |PyPI-Versions| |LICENSE| |Travis| |Codecov| |Requirements| |Downloads|\n\n*Fast, Extensible Progress Meter (tqdm) For Django*.\n\n| Use tqdm_ in Django management commands seamlessly.\n| It provides simple universal commands for Django management command to output\n  text using standard command functions and tqdm.\n| Currently supported versions of Django_ are supported.\n\nUsage\n-----\n\n.. code:: python\n\n    from django_tqdm import BaseCommand\n    from time import sleep\n\n    class Command(BaseCommand):\n        def handle(self, *args, **options):\n            # Output directly\n            self.error('Error')\n            self.info('Info')\n\n            # Output through tqdm\n            t = self.tqdm(total=50)\n            for x in range(50):\n                sleep(0.03)\n                t.update(1)\n\n                if x == 10:\n                    t.info('X = 10')\n                if x == 20:\n                    t.error('X = 20')\n\nAdvanced:\n\n.. code:: python\n\n    info(text, ending='\\n', fatal=False)\n    error(text, ending='\\n', fatal=False)\n    write(text, ending='\\n', fatal=False, error=False)\n\nIf you set `fatal` to `True` it will terminate the command after printing the message.\n\nFor documentation on tqdm see tqdm_.\n\nComparison\n------------\n\nIn django-tqdm:\n\n.. code:: python\n\n    self.info('info')\n    self.error('error')\n\nIn vanilla Django:\n\n.. code:: python\n\n    self.stdout.write('info')\n    self.stderr.write('error')\n\n\nDemos\n------------\n\nDemo 1 - Simple usage\n------------------------\n\n.. code:: python\n\n    self.info('info')\n    self.error('error')\n\n|Demo1|\n\nDemo 2 - tqdm usage\n-----------------------\n\n.. code:: python\n\n    t = self.tqdm(total=50)\n    for x in range(50):\n        sleep(0.02)\n        t.update(1)\n        if x == 10:\n            t.info('info')\n        if x == 40:\n            t.error('error')\n\n|Demo2|\n\nDemo 3 - Vanilla tqdm with default settings for comparison\n------------------------------------------------------------------\n\n.. code:: python\n\n    t = tqdm(total=50)\n    for x in range(50):\n        sleep(0.02)\n        t.update(1)\n        if x == 25:\n            t.write('info')\n        if x == 40:\n            t.write('error', file=sys.stderr)\n\n|Demo3|\n\nDevelopment\n--------------\n\n| Use `clean.sh` to automatically prettify your code.\n| Use `tox` for testing and linting.\n\n\n.. |Demo1| image:: https://asciinema.org/a/117133.png\n   :target: https://asciinema.org/a/117133\n\n.. |Demo2| image:: https://asciinema.org/a/117136.png\n   :target: https://asciinema.org/a/117136\n\n.. |Demo3| image:: https://asciinema.org/a/117137.png\n   :target: https://asciinema.org/a/117137\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/django-tqdm.svg\n   :target: https://pypi.python.org/pypi/django-tqdm\n\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/django-tqdm.svg\n   :target: https://pypi.python.org/pypi/django-tqdm\n\n.. |LICENSE| image:: https://img.shields.io/pypi/l/django-tqdm.svg\n   :target: https://raw.githubusercontent.com/desecho/django-tqdm/master/LICENSE\n\n.. |Travis| image:: https://travis-ci.org/desecho/django-tqdm.svg?branch=master\n    :target: https://travis-ci.org/desecho/django-tqdm\n\n.. |Codecov| image:: https://codecov.io/gh/desecho/django-tqdm/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/desecho/django-tqdm\n\n.. |Requirements| image:: https://requires.io/github/desecho/django-tqdm/requirements.svg?branch=master\n     :target: https://requires.io/github/desecho/django-tqdm/requirements/?branch=master\n     :alt: Requirements Status\n\n.. |Downloads| image:: https://pepy.tech/badge/django-tqdm\n     :target: https://pepy.tech/project/django-tqdm\n     :alt: RequiDownloads\n\n.. _tqdm: https://github.com/tqdm/tqdm\n.. _Django: https://www.djangoproject.com\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/desecho/django-tqdm",
    "keywords": "progressbar progressmeter progress bar meter rate eta console terminal time",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-tqdm",
    "package_url": "https://pypi.org/project/django-tqdm/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-tqdm/",
    "project_urls": {
      "Homepage": "https://github.com/desecho/django-tqdm"
    },
    "release_url": "https://pypi.org/project/django-tqdm/1.0.0/",
    "requires_dist": [
      "tqdm (>=4.11.2)",
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Fast, Extensible Progress Meter (tqdm) For Django",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14179860,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fd9e9d73b18942b4d9bc7492715e052d28f6261e18b8da4ffce1614d649d912",
        "md5": "77af2b28c0db965cd5556b1f3bf1e69d",
        "sha256": "39db30b64f1177e666cfb77e5769e572bbfe6de6bebcd382beaf8a7b4f335401"
      },
      "downloads": -1,
      "filename": "django_tqdm-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77af2b28c0db965cd5556b1f3bf1e69d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8207,
      "upload_time": "2019-05-31T01:56:48",
      "upload_time_iso_8601": "2019-05-31T01:56:48.027481Z",
      "url": "https://files.pythonhosted.org/packages/6f/d9/e9d73b18942b4d9bc7492715e052d28f6261e18b8da4ffce1614d649d912/django_tqdm-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0c1df3b7ea2d01d4fbd449359a7517e27d67015219b8c1580e732b64f3c6f9c",
        "md5": "10c5e10c87e76bb50e11089c7735edb4",
        "sha256": "c7fa0aadbe512fb7bff83f1d800094313b044eed9ac0552e1c22da49d84b2121"
      },
      "downloads": -1,
      "filename": "django_tqdm-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "10c5e10c87e76bb50e11089c7735edb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4981,
      "upload_time": "2019-05-31T01:56:49",
      "upload_time_iso_8601": "2019-05-31T01:56:49.623333Z",
      "url": "https://files.pythonhosted.org/packages/a0/c1/df3b7ea2d01d4fbd449359a7517e27d67015219b8c1580e732b64f3c6f9c/django_tqdm-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}