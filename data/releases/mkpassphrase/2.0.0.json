{
  "info": {
    "author": "Calvin Smith",
    "author_email": "sapientdust+mkpassphrase@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Security",
      "Topic :: Utilities"
    ],
    "description": "============\nmkpassphrase\n============\n\n.. image:: https://travis-ci.org/eukaryote/mkpassphrase.svg?branch=master\n    :target: https://travis-ci.org/eukaryote/mkpassphrase\n\n`mkpassphrase` is a commandline script and an associated library for\ngenerating passphrases by concatenating words chosen from a dictionary file\nthat contains one word per line.\n\nAs of version 2, released in July, 2018, it bundles the three `EFF wordlists`_,\nand uses their standard 7,776-word list by default, but can use the\nother EFF wordlists or a custom wordlist.\n\nWhen run with no args, `mkpassphrase` generates a\npassphrase like ``exemplify strobe pushover appealing Glimpse Snazzy``, which inserts\na space character between each word and randomly uppercases the first\ncharacter of each word with probability 1/2, using enough words to reach\nthe recommended 80-bit security level, but these choices and others are configurable.\n\n.. _EFF wordlists: https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases\n\n\nInstallation\n------------\n\nTo install or upgrade to the latest stable version of `mkpassphrase` from PyPI,\nyou can install it as your normal user by running:\n\n.. code-block:: shell-session\n\n    $ pip install --user --upgrade mkpassphrase\n\nOn Linux, that installs `mkpasphrase` to `~/.local/bin`, which you may need to\nadd to your `$PATH`.\n\nOr you can install it globally by running:\n\n.. code-block:: shell-session\n\n    $ sudo pip install --upgrade mkpassphrase\n\n\nUsage\n-----\n\nGenerate a passphrase using the default settings:\n\n.. code-block:: shell-session\n\n    $ mkpassphrase\n    Octane Flatfoot timid revival Darkened dropkick\n\n    83-bit security level\n\nThe security level reported is based only on the number of words in the\npassphrase and the number of possible words (as well as whether\nthe ``--lowercase`` option is chosen), and does not include other factors\nsuch as padding or a custom delimiter, which would increase the security\nlevel. You can also add the ``-q`` option to only see the passphrases.\n\nYou can use the ``-t NUM`` option to generate multiple passphrases if you\nwant more options to choose from:\n\n.. code-block:: shell-session\n\n  $ mkpassphrase -t 10\n  disposal Linoleum antibody petty Nucleus Unzip\n  Banish Barterer doorway avenging Errand tasting\n  poking disband Precook Ought pronounce procedure\n  rambling Flanking trimness heaving Dock Corned\n  overfull Evade Army fever sled Enjoyment\n  fancied Maternal pawing Marmalade Synapse Ruse\n  willow Hatless moving Dealmaker Mammogram share\n  perm broker only company Privacy Animation\n  composure Header polo prewar Unaware Creation\n  Entomb unselfish Shrewdly rundown snuff Wing\n\n  83-bit security level\n\n\nOptions\n-------\n\nUse the `--help` option to see the available options:\n\n.. code-block:: shell-session\n\n    $ mkpassphrase --help\n    usage: mkpassphrase [-h] [-n NUM_WORDS] [-s ENTROPY] [-w WORD_LIST]\n                        [-f WORD_FILE] [-l] [-p PAD] [-d DELIMITER] [-t TIMES]\n                        [-V] [-q]\n\n    Generate a passphrase.\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -n NUM_WORDS, --num-words NUM_WORDS\n                            Number of words in passphrase (the default is enough\n                            words to reach a security level of 80 bits)\n    -s ENTROPY, --entropy ENTROPY\n                            Target entropy bits (the default is 80 bits)\n    -w WORD_LIST, --word-list WORD_LIST\n                            Use built-in wordlist (eff-large [default], eff1, or\n                            eff2)\n    -f WORD_FILE, --word-file WORD_FILE\n                            Word file path (one word per line)\n    -l, --lowercase       Lowercase words (the default is to capitalize the\n                            first letterof each word with probability 0.5 and use\n                            lowercase for all other letters)\n    -p PAD, --pad PAD     Pad passphrase using PAD as prefix and suffix (the\n                            default is no padding)\n    -d DELIMITER, --delimiter DELIMITER\n                            Use DELIMITER to separate words in passphrase (the\n                            default is a space character)\n    -t TIMES, --times TIMES\n                            Generate TIMES different passphrases (the default is\n                            to generate 1 passphrase)\n    -V, --version         Show version\n    -q, --quiet           Print just the passphrase (the default is to also show\n                            the security-level of the generated passphrase(s))\n\n\nSupported Python Versions and Operating Systems\n-----------------------------------------------\n\nmkpassphrase is supported on Python-2.7 (CPython or PyPy), Python-3.4+ for\nCPython, and Python-3.2.5+ for PyPy. It is tested on Linux, but should work on\nany OS with a supported Python version.\n\n\n=======\nChanges\n=======\n\nv1.0.0\n------\n\n * 1.0 bump, and change to 'stable'\n * python3 support is limited to 3.2.5+ (python2.7 still supported)\n * added testing against python-3.6 (alpha3 currently)\n\nv0.9.1\n------\n\n * minor adjustments to python2/3 compatibility checks\n * pep257 docstring updates\n\nv0.9.0\n------\n\n * much faster generation of multiple passphrases using `-t`\n * minor verbiage tweaks for non-quiet output\n\nv0.8.0\n------\n\n * use cryptographically secure pseudo-random number generator if available\n * added standard imports to help with python2/3 compatibility\n\nv0.7.0\n------\n\n * added -t|--times N to allow generating multiple passphrases w/ one command\n\nv0.6.8\n------\n\n * include CHANGES.rst and README.rst in sdist via MANIFEST.in\n\nv0.6.7\n------\n\n * cosmetic changes for better PyPI display\n\n\nv0.6.6\n------\n\n * cosmetic changes for better PyPI display\n\n\nv0.6.4\n-------\n\n * cosmetic changes for better PyPI display\n\n\nv0.6.2\n------\n\n * added -q option to omit extra information about how many unique candidate\n   words were found and how many passphrases were possible\n * fix for --ascii option not being used, and improved encoding handling\n * start documenting changes in CHANGES.rst\n * use README and CHANGES as long_description for improved pypi info\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eukaryote/mkpassphrase",
    "keywords": "passphrase password",
    "license": "http://www.opensource.org/licenses/mit-license.php",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mkpassphrase",
    "package_url": "https://pypi.org/project/mkpassphrase/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mkpassphrase/",
    "project_urls": {
      "Homepage": "https://github.com/eukaryote/mkpassphrase"
    },
    "release_url": "https://pypi.org/project/mkpassphrase/2.0.0/",
    "requires_dist": [
      "six",
      "wheel; extra == 'develop'",
      "pytest; extra == 'testing'",
      "mock; extra == 'testing'",
      "pytest-cov; extra == 'testing'",
      "pytest-pyflake8; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Word-based passphrase generator",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4114163,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79f3fa75dec1557fd893557e165175c0ff799760aec81d9b0a62e5d413e5a619",
        "md5": "853906065248792f3d156b535f98ba52",
        "sha256": "b1188a8a0f16ee9b66dd2a56bd38a10c4c53d0450351656000eaa718352af5f2"
      },
      "downloads": -1,
      "filename": "mkpassphrase-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "853906065248792f3d156b535f98ba52",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 43158,
      "upload_time": "2018-07-29T17:03:52",
      "upload_time_iso_8601": "2018-07-29T17:03:52.916819Z",
      "url": "https://files.pythonhosted.org/packages/79/f3/fa75dec1557fd893557e165175c0ff799760aec81d9b0a62e5d413e5a619/mkpassphrase-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}