{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-staff-toolbar\n====================\n\nDisplaying staff-only controls at a webpage.\n\nFeatures:\n\n* Linking to the admin page of the current object.\n* Full configuration of the displayed toolbar items.\n* API for adding custom menu items.\n\n.. image:: https://github.com/edoburu/django-staff-toolbar/raw/master/docs/images/staff_toolbar.png\n   :width: 142px\n   :height: 136px\n   :alt: django-staff-toolbar preview\n\n\nInstallation\n============\n\nFirst install the module, preferably in a virtual environment::\n\n    git clone https://github.com/edoburu/django-staff-toolbar.git\n    cd django-staff-toolbar\n    pip install .\n\n\nConfiguration\n-------------\n\nAdd the application to ``settings.py``::\n\n    INSTALLED_APPS += (\n        'staff_toolbar',\n    )\n\nMake sure the ``django.core.context_processors.request`` is included in ``TEMPLATE_CONTEXT_PROCESSORS``.\n\nAdd the HTML widget to the template::\n\n    {% load staff_toolbar_tags %}\n\n    {% staff_toolbar %}\n\nMake sure the layout is loaded in the template::\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{{ STATIC_URL }}staff_toolbar/staff_toolbar.css\" />\n\nLayout\n------\n\nBy default, a simple layout is included.\nYou can change this layout to your own liking.\n\nThe source SASS file is included, making it easier to\nintegrate this into your project stylesheets when needed.\n\n\nCustomizing the admin URL\n=========================\n\nThe admin URL is auto-detected using:\n\n* The ``object`` variable in the template.\n* The ``view.object`` variable in the template.\n\nIn some cases, this is not sufficient. When the auto-detected \"Change object\"\nlink does not point to the right page, this can be resolved using two methods:\n\nUsing the view\n--------------\n\nWhen your class-based-view implements ``staff_toolbar.views.StaffUrlMixin``,\nthat information will be used to render the proper \"Change object\" link.\n\nThis requires Django 1.5, which exports the ``view`` variable to the template.\n\nUsing the template\n------------------\n\nIn the template, you can include::\n\n    {% set_staff_object page %}\n\nWhen needed, the URL can also be set::\n\n    {% set_staff_url %}{% url 'dashboard:catalogue-product' object.id %}{% end_set_staff_url %}\n\n\nCustomizing the menu\n====================\n\nThe default menu settings are::\n\n    STAFF_TOOLBAR_ITEMS = (\n        'staff_toolbar.items.AdminIndexLink',\n        'staff_toolbar.items.ChangeObjectLink',\n        'staff_toolbar.items.LogoutLink',\n    )\n\nEach line represents a callable, which is called using ``(request, context)``.\nWhen a tuple is included, this is converted into a new ``Group`` object,\ncausing an additional ``<ul>`` tag to appear in the output.\n\nA more complex example::\n\n    from django.core.urlresolvers import reverse_lazy\n    from django.utils.translation import ugettext_lazy as _\n    from staff_toolbar import toolbar_item, toolbar_title, toolbar_literal\n\n    STAFF_TOOLBAR_ITEMS = (\n        'staff_toolbar.items.AdminIndexLink',\n        'staff_toolbar.items.ChangeObjectLink',\n        (\n            toolbar_title(_(\"User\")),\n            toolbar_item('staff_toolbar.items.Link', url=reverse_lazy('admin:password_change'), title=_(\"Change password\")),\n            'staff_toolbar.items.LogoutLink',\n        )\n    )\n\nThe ``toolbar_title()`` and ``toolbar_item()`` functions allow to pass additional arguments\nto the items, without having to load them already in the settings.\n\nIt's also perfectly possible to instantiate the actual classes directly,\nhowever this may risk import errors as it causes your settings module to load a lot of other code.\nThe following is functionally equivalent to the previous example::\n\n    from django.core.urlresolvers import reverse_lazy\n    from django.utils.translation import ugettext_lazy as _\n    from staff_toolbar.items import AdminIndexLink, ChangeObjectLink, Group, ToolbarTitle, Link, LogoutLink\n\n    STAFF_TOOLBAR_ITEMS = (\n        AdminIndexLink(),\n        ChangeObjectLink(),\n        Group(\n            ToolbarTitle(_(\"User\")),\n            Link(url=reverse_lazy('admin:password_change'), title=_(\"Change password\")),\n            LogoutLink(),\n        )\n    )\n\n\nCaveats\n=======\n\nFor HTTPS sites with ``SESSION_COOKIE_SECURE = True`` the toolbar obviously\nwon't show up in the standard pages that are served by HTTP.\n\nEither display all pages on HTTPS (which is the Right Wayâ„¢ after all),\nor please provide a good pull request that solves this nicely for mixed sites.\n\n\nContributing\n============\n\nThis module is designed to be generic, and easy to plug into your site.\nPull requests and improvements are welcome!\n\nIf you have any other valuable contribution, suggestion or idea, please let us know as well!",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-staff-toolbar/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-staff-toolbar",
    "keywords": null,
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-staff-toolbar",
    "package_url": "https://pypi.org/project/django-staff-toolbar/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-staff-toolbar/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-staff-toolbar/zipball/master",
      "Homepage": "https://github.com/edoburu/django-staff-toolbar"
    },
    "release_url": "https://pypi.org/project/django-staff-toolbar/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Show staff-only controls at website frontents",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12041792,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a7feb43b9eb80b3e48d6b93077cb3b2cb371e256688ed5210d10c1b90b41aa5",
        "md5": "3ce64f99fb21c956aab9bf9779ddec35",
        "sha256": "e25eef9a52907fc059a813d258ce6ad3a7edf71b214f5486f1f15f859740ff7e"
      },
      "downloads": -1,
      "filename": "django_staff_toolbar-1.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ce64f99fb21c956aab9bf9779ddec35",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 14276,
      "upload_time": "2015-06-19T14:33:22",
      "upload_time_iso_8601": "2015-06-19T14:33:22.259918Z",
      "url": "https://files.pythonhosted.org/packages/3a/7f/eb43b9eb80b3e48d6b93077cb3b2cb371e256688ed5210d10c1b90b41aa5/django_staff_toolbar-1.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "283c3914ed684ea585df6aafcfec3b07b52fa69bf2a55e792926399d55a8c8b7",
        "md5": "7574deb6e86f66eb1629d22659c1d5fa",
        "sha256": "406cc8b7f3ac3c7d847a746877a256863ad07ac41913c1b80a026877101f6462"
      },
      "downloads": -1,
      "filename": "django-staff-toolbar-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7574deb6e86f66eb1629d22659c1d5fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13111,
      "upload_time": "2015-06-19T14:33:19",
      "upload_time_iso_8601": "2015-06-19T14:33:19.049372Z",
      "url": "https://files.pythonhosted.org/packages/28/3c/3914ed684ea585df6aafcfec3b07b52fa69bf2a55e792926399d55a8c8b7/django-staff-toolbar-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}