{
  "info": {
    "author": "Thierry Schellenbach",
    "author_email": "thierryschellenbach@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "######################################################################\nDjango Facebook by Thierry Schellenbach (http://www.mellowmorning.com)\n######################################################################\n\nFirst\n-----\nPlease contribute code :) \n\nThis project is actively maintained and I appreciate improvements to the code.\n\nContact me here or `@tschellenbach <http://www.twitter.com/tschellenbach>`_\n\nNew in Version 2.0 Alpha\n------------------------\n* canvas page support for facebook applications\n* mobile facebook registration support (tested with titanium FB flow)\n* less requirements (jinja, view decorator, django notify and cjson requirements removed)\n* fql support\n\nAbout Django Facebook\n---------------------\nDjango Facebook allows you to connect to the Facebook Open Graph API.\nIntegrated with Django it becomes easy to setup a login/register via Facebook flow for your users.\n\n**Features**\n\n* Access the Facebook API, from:\n   * Your website (Using javascript OAuth)\n   * Facebook canvas pages (For building facebook applications)\n   * Mobile (Or any other flow giving you a valid access token)\n* Django User Registration (Convert Facebook user data into a user model\n* Use Facebook data to register a user with your Django app. Facebook connect using the open graph API.\n* Facebook FQL access\n\nWorks best with\n---------------\n* Django registration\n    \nTODO (again help is appreciated!)\n---------------------------------\n* testing (especially a dummy FB api)\n* separate user data conversion and FB api improvements\n* fully replace the facebook GraphAPI which they no longer support\n   \n\nInstallation\n------------\n\nDownload the source code or use pip install django_facebook.\n\n\n**Create a Facebook App**\n\nIn case you don't yet have a facebook app. You need an app to use the open graph api and make the login process work.\nYou can create a facebook app at this url: http://www.facebook.com/developers/createapp.php \n\n**Settings**\n\nDefine the following settings in your settings.py file:\n\n::\n\n    FACEBOOK_API_KEY\n    FACEBOOK_APP_ID\n    FACEBOOK_APP_SECRET\n        \n**Url config, context processor, auth backend**\n\n::\n\n\tadd django facebook to your installed apps\n\t'django_facebook',\n    add this line to your url config\n    (r'^facebook/', include('django_facebook.urls')),\n    add this line to your context processors\n    'django_facebook.context_processors.facebook',\n    add this to your AUTHENTICATION_BACKENDS\n    'django_facebook.auth_backends.FacebookBackend',\n\n**Update your models**\n\nAdd the following fields to your profile model:\n\n::\n\n    about_me = models.TextField(blank=True, null=True)\n    facebook_id = models.IntegerField(blank=True, null=True)\n    facebook_name = models.CharField(max_length=255, blank=True, null=True)\n    facebook_profile_url = models.TextField(blank=True, null=True)\n    website_url = models.TextField(blank=True, null=True)\n    blog_url = models.TextField(blank=True, null=True)\n    image = models.ImageField(blank=True, null=True, upload_to='profile_images')\n    date_of_birth = models.DateField(blank=True, null=True)\n    raw_data = models.TextField(blank=True, null=True)\n\nAn abstract model is specified for convenience django_facebook/models.py FacebookProfileModel\n    \n**Check the example**\n\nRight now you should have a working registration/connect/login in flow available at /facebook/connect/\nTest if everything is working and ensure you didn't miss a step somewhere.\nIf it isn't working please open an issue.\n\n**Customize and integrate into your site**\n\nThis is the hardest step of the install. \nFor an example you can look at connect.html in the templates directory.\n\nFirst load the javascript (it loads the facebook library asynchronously).\nI recommend that you insert this code at the bottom of your page.\n\n::\n\n    <script src=\"{{ MEDIA_URL }}js/original/facebook.js\" type=\"text/javascript\"></script>\n    <script>\n    facebookAppId = '{{ FACEBOOK_APP_ID }}';\n    function facebookJSLoaded(){\n    FB.init({appId: facebookAppId, status: false, cookie: true, xfbml: true});\n    }\n    window.fbAsyncInit = facebookJSLoaded;\n    F = new facebookClass(facebookAppId);\n    F.load();\n    </script>\n\nSubsequently implement a form which calls Facebook via javascript.\nNote that you can control which page to go to after connect using the next input field.\n\n::\n\n<form action=\"{% url facebook_connect %}?facebook_login=1\" method=\"post\">\n<a href=\"javascript:void(0);\" style=\"font-size: 20px;\" onclick=\"F.connect(this.parentNode);\">Register, login or connect with facebook</a>\n<input type=\"hidden\" value=\"{{ request.path }}\" name=\"next\" />\n</form>\n    \n    \nDjango Jobs\n-----------\nDo you also see the beauty in clean code? Are you experienced with high scalability web apps?\nCurrently we're looking for additional talent over at our Amsterdam office.\nFeel free to drop me a line at my personal email for more information: thierryschellenbach[at]gmail.com",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/tschellenbach/Django-facebook",
    "keywords": null,
    "license": "Copyright (c) Thierry Schellenbach\n\n (http://www.mellowmorning.com)\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n- Neither the name of Thierry Schellenbach. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission of Thierry Schellenbach.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-facebook",
    "package_url": "https://pypi.org/project/django-facebook/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-facebook/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/tschellenbach/Django-facebook"
    },
    "release_url": "https://pypi.org/project/django-facebook/2.0.14/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Facebook open graph API client in python. Enables django applications to register users using facebook.\nFixes issues with the official but unsupported Facebook python-sdk. Enables mobile facebook authentication.\nCanvas page authentication for facebook applications. FQL access via the server side api.",
    "version": "2.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1563509,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47001d1039d00ded90b532fe5b92e1d362ca5d6c5bab0b79a63e01cfdcce5510",
        "md5": "4e6187885abc2a54616817cf65ca0a9c",
        "sha256": "4b8c42ad545b5f5b4334b3679a94af3f76b9203fbdc67ba4f75895317e8aae77"
      },
      "downloads": -1,
      "filename": "django-facebook-2.0.14.zip",
      "has_sig": false,
      "md5_digest": "4e6187885abc2a54616817cf65ca0a9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34624,
      "upload_time": "2011-04-02T13:11:34",
      "upload_time_iso_8601": "2011-04-02T13:11:34.988759Z",
      "url": "https://files.pythonhosted.org/packages/47/00/1d1039d00ded90b532fe5b92e1d362ca5d6c5bab0b79a63e01cfdcce5510/django-facebook-2.0.14.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}