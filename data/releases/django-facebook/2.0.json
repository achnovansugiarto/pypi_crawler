{
  "info": {
    "author": "Thierry Schellenbach",
    "author_email": "thierryschellenbach@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "############################################\nDjango Facebook by Thierry Schellenbach (http://www.mellowmorning.com)\n############################################\n\nAbout Django Facebook\n--------\n\nDjango Facebook allows you to connect to the Facebook Open Graph API.\n\nFeatures\n\tAccess the Facebook API\n\tDjango User Registration (Use Facebook data to register a user with your Django app. Facebook connect using the open graph API. Similar to a login flow.)\n\tCanvas Page signature parsing and authentication (If your building facebook apps)\n\nWorks best with\n--------\n\n\tregistration\n    django auth\n    \nTODO (help appreciated)\n--------\n\n\ttesting (especially a dummy FB api)\n\tseparate user data conversion and FB api improvements\n\tfully replace the facebook GraphAPI which they no longer support\n   \n    \nNew in Version 2.0 Alpha\n--------\n\n\tcanvas page support for facebook applications\n\tmobile facebook registration support (tested with titanium FB flow)\n\tless requirements (jinja, view decorator, django notify and cjson requirements removed)\n\tfql support\n\t\n    \nInstalling\n--------\n\n\tStep 0 - Create a facebook app\n\t\tIn case you don't yet have a facebook app. You need an app to use the open graph api and make the login process work.\n\t\tYou can create a facebook app at this url:\n\t\thttp://www.facebook.com/developers/createapp.php \n\n    Step 1 - Settings:\n        Define the settings mentioned in django_facebook/settings.py in your settings.py file\n        \n    Step 2 - Url config:\n        add \n        (r'^facebook/', include('django_facebook.urls')),\n        to your global url file \n        \n    Step 3 - Template Context Processor\n    \tadd this line to your context processors\n    \t'django_facebook.context_processors.facebook',\n        \n    Step 3 - Ensure the FB JS api is available on all pages you want to login\n    [Facebook JS API](http://developers.facebook.com/docs/reference/javascript/)\n    \n    Step 4 - Update your models\n        \n        Add to your user profile model\n        about_me = models.TextField(blank=True, null=True)\n        facebook_id = models.IntegerField(blank=True, null=True)\n        facebook_name = models.CharField(max_length=255, blank=True, null=True)\n        facebook_profile_url = framework_fields.URLTextField(blank=True, null=True)\n        website_url = framework_fields.URLTextField(blank=True, null=True)\n        blog_url = framework_fields.URLTextField(blank=True, null=True)\n        image = models.ImageField(blank=True, null=True)\n        date_of_birth = models.DateField(blank=True, null=True)\n    \n    Step 5 - Template\n    \tSee examples/connect.html\n    \n    \nDjango Jobs\n--------\n\tDo you also see the beauty in clean code? Are you experienced with high scalability web apps?\n\tCurrently we're looking for additional talent over at our Amsterdam office.\n\tFeel free to drop me a line at my personal email for more information: thierryschellenbach[at]gmail.com",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/tschellenbach/Django-facebook",
    "keywords": null,
    "license": "Copyright (c) Thierry Schellenbach\n\n (http://www.mellowmorning.com)\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n- Neither the name of Thierry Schellenbach. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission of Thierry Schellenbach.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-facebook",
    "package_url": "https://pypi.org/project/django-facebook/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-facebook/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/tschellenbach/Django-facebook"
    },
    "release_url": "https://pypi.org/project/django-facebook/2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Facebook open graph API client in python. Enables django applications to register users using facebook.\nFixes issues with the official but unsupported Facebook python-sdk. Enables mobile facebook authentication.\nCanvas page authentication for facebook applications. FQL access via the server side api.",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1563509,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e36943336a58bc58a015b7660746b30c77377531acdcdfb86ad3e3e30a9aef73",
        "md5": "f876fdf33fe28c1e1cfe311d2c1a0c53",
        "sha256": "eab7b35a731a5444e2ac17e35c5736e9285d13228db21540f15d067868b56c90"
      },
      "downloads": -1,
      "filename": "django-facebook-2.0.zip",
      "has_sig": false,
      "md5_digest": "f876fdf33fe28c1e1cfe311d2c1a0c53",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17445,
      "upload_time": "2011-03-30T18:31:31",
      "upload_time_iso_8601": "2011-03-30T18:31:31.131203Z",
      "url": "https://files.pythonhosted.org/packages/e3/69/43336a58bc58a015b7660746b30c77377531acdcdfb86ad3e3e30a9aef73/django-facebook-2.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}