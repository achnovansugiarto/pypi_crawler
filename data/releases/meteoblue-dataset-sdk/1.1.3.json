{
  "info": {
    "author": "meteoblue AG",
    "author_email": "patrick.zippenfenig@meteoblue.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# meteoblue Python Dataset SDK\n\n[![PyPI version](https://badge.fury.io/py/meteoblue-dataset-sdk.svg)](https://badge.fury.io/py/meteoblue-dataset-sdk)\n\nThis library simplifies access to the [meteoblue dataset API](https://docs.meteoblue.com/en/apis/environmental-data/dataset-api).\n\nIn order to use this library you need a meteoblue API key.\n\nFeatures:\n- Fetch any dataset from the meteoblue environmental data archive\n- Transparently integrates job queues to query large datasets\n- Efficiently transfers data using compressed protobuf messages\n- Asynchronous interface to query data in parallel\n- Data can be used as simple floating-point arrays. No further formatting required.\n- Semantic Versioning: The interface for version 1 is declared stable. Breaking interface changes will be published in version 2.\n\n\n## Installation\n- Ensure that you are using at least Python 3.7 with `python --version` (Sometimes `python3`)\n- Install the module with `pip install 'meteoblue_dataset_sdk >=1.0,<2.0'` (Sometimes `pip3`)\n\nThis module will also install the following dependencies automatically:\n- aiohttp >=3.6,<4\n- protobuf >=3.0,<4\n\n\n## Usage\nSee [main.py](./main.py) for a working example. To generate the query JSON it is highly recommended to use the [dataset API web interfaces](https://docs.meteoblue.com/en/apis/environmental-data/web-interfaces).\n\n```python\nimport meteoblue_dataset_sdk\nimport logging\n\n# Display information about the current download state\nlogging.basicConfig(level=logging.INFO)\n\nquery = {\n    \"units\": {\n        \"temperature\": \"C\",\n        \"velocity\": \"km/h\",\n        \"length\": \"metric\",\n        \"energy\": \"watts\",\n    },\n    \"geometry\": {\n        \"type\": \"MultiPoint\",\n        \"coordinates\": [[7.57327, 47.558399, 279]],\n        \"locationNames\": [\"Basel\"],\n    },\n    \"format\": \"protobuf\",\n    \"timeIntervals\": [\"2019-01-01T+00:00/2019-01-01T+00:00\"],\n    \"timeIntervalsAlignment\": \"none\",\n    \"queries\": [\n        {\n            \"domain\": \"NEMSGLOBAL\",\n            \"gapFillDomain\": None,\n            \"timeResolution\": \"hourly\",\n            \"codes\": [{\"code\": 11, \"level\": \"2 m above gnd\"}],\n        }\n    ],\n}\nclient = meteoblue_dataset_sdk.Client(apikey=\"xxxxxx\")\nresult = client.query_sync(query)\n# result is a structured object containing timestamps and data\n\ntimeInterval = result.geometries[0].timeIntervals[0]\ndata = result.geometries[0].codes[0].timeIntervals[0].data\n\nprint(timeInterval)\n# start: 1546300800\n# end: 1546387200\n# stride: 3600\n```\n\nNOTE: `timeInterval.end` is the first timestamp that is not included anymore in the time interval.\n\nIf your code is using `async/await`, you should use `await client.query()` instead of `client.query_sync()`. Asynchronous IO is essential for modern webserver frameworks like Flask or FastAPI.\n\n```python\nclient = meteoblue_dataset_sdk.Client(apikey=\"xxxxxx\")\nresult = await client.query(query)\n```\n\nYou can use cache by passing a Cache object to the Client. There is a `caching.filecache.FileCache` class implemented\nin in the meteoblue_dataset_sdk, but you can use your own implementation by using the abstract \nclass `caching.cache.AbstractCache`. You can customize the cache duration, the cache location\nand the zlib compression level used to compressed the binary data.\n\n```python\nimport zlib\nfrom meteoblue_dataset_sdk.caching import FileCache\ncache = FileCache(path=\"/tmp/my_cache_dir\", max_age=4000, compression_level=zlib.Z_BEST_SPEED)\nclient = meteoblue_dataset_sdk.Client(apikey=\"xxxxxx\", cache=cache)\n```\n\n## Protobuf format\nData is transferred using protobuf and defined as [this protobuf structure](./meteoblue_dataset_sdk/Dataset.proto).\n\nA 10 year hourly data series for 1 location requires `350 kb` using protobuf, compared to `1600 kb` using JSON. Additionally the meteoblue Python SDK transfers data using gzip which reduces the size to only `87 kb`. \n\nMore detailed output of the `result` protobuf object:\n\n```\ngeometries {\n  domain: \"NEMSGLOBAL\"\n  lats: 47.66651916503906\n  lons: 7.5\n  asls: 499.7736511230469\n  locationNames: \"Basel\"\n  nx: 1\n  ny: 1\n  timeResolution: \"hourly\"\n  timeIntervals {\n    start: 1546300800\n    end: 1546387200\n    stride: 3600\n  }\n  codes {\n    code: 11\n    level: \"2 m above gnd\"\n    unit: \"\\302\\260C\"\n    aggregation: \"none\"\n    timeIntervals {\n      data: 2.890000104904175\n      data: 2.690000057220459\n      data: 2.549999952316284\n      data: 2.380000114440918\n      data: 2.2699999809265137\n      data: 2.119999885559082\n      data: 1.9900000095367432\n      data: 1.8300000429153442\n      data: 1.8200000524520874\n      data: 2.0999999046325684\n      data: 2.430000066757202\n      data: 2.9200000762939453\n      data: 3.7200000286102295\n      data: 3.930000066757202\n      data: 3.9100000858306885\n      data: 3.5299999713897705\n      data: 3.130000114440918\n      data: 2.880000114440918\n      data: 2.6500000953674316\n      data: 2.4600000381469727\n      data: 2.2799999713897705\n      data: 2.0299999713897705\n      data: 1.690000057220459\n      data: 1.3799999952316284\n    }\n  }\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meteoblue/python-dataset-sdk",
    "keywords": "meteoblue",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meteoblue-dataset-sdk",
    "package_url": "https://pypi.org/project/meteoblue-dataset-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/meteoblue-dataset-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/meteoblue/python-dataset-sdk"
    },
    "release_url": "https://pypi.org/project/meteoblue-dataset-sdk/1.1.3/",
    "requires_dist": [
      "later ; extra == 'dev'",
      "aiohttp (<4,>=3.6)",
      "protobuf (<4,>=3.0)",
      "aiofiles (<1,>=0.6.0)",
      "pytest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "ipython ; extra == 'dev'",
      "nox ; extra == 'dev'",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "freezegun ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Easy access to the meteoblue dataset API",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12836332,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12871685dc68a1bbfdf9facf03f3ee417c451bd0e3424023c60cbf4a0c66e89a",
        "md5": "d111d4a1504ed6a77b0a495c6fbc6cd3",
        "sha256": "bba7bd44d42012aaec00a931026a3d4dc7186ff7eb40191cf1a314c3f5620bf0"
      },
      "downloads": -1,
      "filename": "meteoblue_dataset_sdk-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d111d4a1504ed6a77b0a495c6fbc6cd3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16869,
      "upload_time": "2021-03-23T10:52:42",
      "upload_time_iso_8601": "2021-03-23T10:52:42.867949Z",
      "url": "https://files.pythonhosted.org/packages/12/87/1685dc68a1bbfdf9facf03f3ee417c451bd0e3424023c60cbf4a0c66e89a/meteoblue_dataset_sdk-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c319919430d1b8d814b537c345bca155cc71dc740c9d57f11a9bb71cb3a6929d",
        "md5": "e65be53b0fa19d30f14e3a4d96c16af4",
        "sha256": "5b772903dc5ac032d833db20df88dbe213054d21462c3542197ad88410627b16"
      },
      "downloads": -1,
      "filename": "meteoblue_dataset_sdk-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e65be53b0fa19d30f14e3a4d96c16af4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 20096,
      "upload_time": "2021-03-23T10:52:44",
      "upload_time_iso_8601": "2021-03-23T10:52:44.313533Z",
      "url": "https://files.pythonhosted.org/packages/c3/19/919430d1b8d814b537c345bca155cc71dc740c9d57f11a9bb71cb3a6929d/meteoblue_dataset_sdk-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}