{
  "info": {
    "author": "Viktor",
    "author_email": "vsybrex@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-instagram-profile\n========================\n\n\nA Django application that syncs one or more users Instagram posts to your project's database and media storage.\n\n- Uses [Instagram Basic Display API](https://developers.facebook.com/docs/instagram-basic-display-api) to fetch a users feed\n- Button in Django Admin to authenticate user\n- Supports multiple Instagram accounts\n- Stores long-lived access code in database to allow on-going sync without user interaction \n*(NB: This code is currently in proof-of-concept status.  Before using in production, you will probably want to update this field to be encrypted or stored somewhere else that is encrypted)*\n- Management command for background sync with crontab (`./manage.py sync_instagram_posts`)\n\nInstagram media is managed using Django admin console. [Demo django project](https://github.com/sybrex/django-instagram-demo)\n\n# Setup & configuration\n\n## 1. Install django-instagram-profile\n\n```bash\npoetry add django-instagram-profile\n```\n\nor using Pip\n\n```bash\npip install django-instagram-profile\n```\n\nDependencies will be installed automatically\n\n## 2. Create a Facebook/Instagram App\n\nFollow [this guide](https://developers.facebook.com/docs/instagram-basic-display-api/getting-started).\n\nIf your app is intended for the general public to authenticate, then you will need to publish your app.\nOtherwise, you can get away with leaving your app in [developer mode](https://developers.facebook.com/docs/apps#development-mode) and [adding your users as testers](https://developers.facebook.com/docs/instagram-basic-display-api/getting-started/#step-3--add-an-instagram-test-user).\n\nTo add a test user:\n\n- In the app admin, go Products > Basic Display > User Token Generator > Add or remove Instagram testers\n- In the users Instagram account login, go Settings > Apps and Websites > Tester Invites.  Then accept the invite.\n\n## 3. Add the application to INSTALLED_APPS:\n```python\nINSTALLED_APPS = (\n    # ...\n    'instagram_profile',\n)\n```\n\n## 4. Update your Django settings with your new app's client id, secret, & redirect url. Eg. \n```python\n\nINSTAGRAM_PROFILE = {\n    # You will get these from your registered instagram app\n    'app_id': '123456789012345',\n    'secret': '1234567890123456789012345678901234',\n    'redirect_url': 'https://www.example.com/your-admin/instagram_profile/profile/authorized',        \n}\n```\n\n**OR** if you prefer, create env.ini file inside your project directory with the following settings:\n```ini\n[instagram]\napp_id = 123\nsecret = abc\nredirect_url = https://www.example.com/your-admin/instagram_profile/profile/authorized\n```\n\n## 4. Migrate database\n\nRun the database migrations\n```bash\n./manage.py migrate\n```\n\n## 5. Configure media (if you already haven't)\n\nDepending on your storage backend and current project you may need to configure media.  \nYour project probably already has this configured.\n\nCreate a folder for Instagram media\n```\n/project_name/media/instagram\n```\n\nConfigure correct paths for uploaded instagram media in settings.py\n```python\nSITE_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))\nMEDIA_ROOT = os.path.join(SITE_ROOT, 'media')\nMEDIA_URL = '/media/'\n```\n\nAdd media template context processor in the settings.py\nAlso add template dir to the list of dirs\n```python\nTEMPLATES = [\n    {\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.media', # add this line\n            ],\n        },\n    },\n]\n```\n\nTo serve media files during development need to add following lines to urls.py\n```python\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n```\n\n## 6. Configure public views (optional)\n\ndjango-instagram-profile comes with some public views to show your instagram posts. \nDepending on your project needs you may or may not want to use them.\n\nIf you want to utilise these them add url to display instagram media feed in urls.py:\n\n```python\nurlpatterns = [\n    # ...\n    path('instagram/', include('instagram_profile.urls')), # add this line\n]\n```\n\n# Usage\n\n## Adding an account\n\nIf you have not publicly published your app, you will first need to setup your instagram user as a test user as described above.\n\nAdd a new profile in the Django admin, only setting the **username** field.  `(Instagram Sync > Profiles > Add)`\n\nAfter clicking \"Save & Continue Editing\", click \"Authorize\" in the top right of the profile form (depending on your needs, this might need to be done by your Instagram user).  This will redirect you/them to Instagram.  Accept all permissions.\n\n\n## Sync posts manually\n\nOnce you are authorized, you can sync posts by:\n\n- Clicking the \"Sync\" button on the Profile form.  This will only sync this profile's posts.\n- Clicking the \"Sync\" button on the list of posts.  This will sync posts for all profiles.\n\n## Sync posts in the background\n\nRun this command.  You'll probably want to set up a crontab (or similar) to run this regularly. \n\n```bash\n./manage.py sync_instagram_posts\n```\n\nThe long-term access codes will be automatically renewed if they will expire within 30 days.  So if this command is run more frequently than every 30 days, authentication should continue in-definitely.\n\n## Using post data in other ways\n\nYou can interface with the `Post` model however you like.  We recommend the excellent [django-imagekit](https://github.com/matthewwithanm/django-imagekit/) library, which will allow you to resize and change these images for however you like in your own code.\n\n# Releases\n* 1.0.1 Merged pull requests #12, #13, #14, #15, 16\n* 1.0.0 Multi-account, django.contrib.storage, background-sync, and much more\n* 0.1.3 Use text field for instagram captions \n* 0.1.1 Handling invalid auth code exception\n* 0.1.0 Alpha version\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sybrex/django-instagram-profile",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-instagram-profile",
    "package_url": "https://pypi.org/project/django-instagram-profile/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-instagram-profile/",
    "project_urls": {
      "Homepage": "https://github.com/sybrex/django-instagram-profile"
    },
    "release_url": "https://pypi.org/project/django-instagram-profile/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django package to sync and display personal Instagram media",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14106234,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37c63091a016031ab4dc9cb6d01218d6827221d6643f229d90167b68fc949978",
        "md5": "9b021e14bacf985fbda33f28ad8248db",
        "sha256": "74fd3060cbb1e2cf49ddb38f1b459dff6fc32bc204095a2cfb77fc050cd3096b"
      },
      "downloads": -1,
      "filename": "django_instagram_profile-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b021e14bacf985fbda33f28ad8248db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15899,
      "upload_time": "2022-03-13T16:14:51",
      "upload_time_iso_8601": "2022-03-13T16:14:51.718785Z",
      "url": "https://files.pythonhosted.org/packages/37/c6/3091a016031ab4dc9cb6d01218d6827221d6643f229d90167b68fc949978/django_instagram_profile-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1446e57ff337b9c24cfafa796057646896f5d8247e7e98e1185f4f4243869df",
        "md5": "ecc53fe5be27905614ad48b509a673f6",
        "sha256": "bbb290eb2171b4eae65339046dce99e15d05d933825b1cc6e6605d2c2d95488b"
      },
      "downloads": -1,
      "filename": "django-instagram-profile-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ecc53fe5be27905614ad48b509a673f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12236,
      "upload_time": "2022-03-13T16:14:53",
      "upload_time_iso_8601": "2022-03-13T16:14:53.499530Z",
      "url": "https://files.pythonhosted.org/packages/b1/44/6e57ff337b9c24cfafa796057646896f5d8247e7e98e1185f4f4243869df/django-instagram-profile-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}