{
  "info": {
    "author": "KJ Kim",
    "author_email": "gencode.me@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "======================\ndjango-traffic-monitor\n======================\n\ndjango-traffic-monitor is a Django application that eases to monitor server traffic.\n\nQuick start\n-----------\n\n1. install with pip::\n\n    pip install django-traffic-monitor django-crontab\n\n2. Add \"traffic_monitor\" and \"django-crontab\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'django_crontab',\n        'traffic_monitor',\n    ]\n\n3. Include the traffic_monitor URLconf in your project urls.py like this::\n\n    urlpatterns += [\n        url(r'^traffic/', include('traffic_monitor.urls')),\n    ]\n\n4. Run `python manage.py migrate` to create the traffic_monitor models.\n\n5. Find out your server's network interface names using Linux command like ifconfig then set the name or names you wish to monitor in your project setting.::\n\n    TRAFFIC_MONITOR_INTERFACE_NAMES = 'docker0,p2p1,eth0'\n\n6. Email setting required for Django. If sending email in your project is currently working, no need to change it.::\n\n    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n    EMAIL_HOST = 'smtp.gmail.com',\n    EMAIL_PORT = 587\n    EMAIL_USE_TLS = True\n    EMAIL_HOST_USER = 'your_email_id@gmail.com',\n    EMAIL_HOST_PASSWORD = 'your_password,\n    DEFAULT_FROM_EMAIL = 'your_email_id@gmail.com'\n\n7. (Optional) Set more configurations if you want to change from default.::\n\n    # Permission to use: superuser, staff, member, all\n    TRAFFIC_MONITOR_PERMISSION = 'staff'\n\n    # Template for traffic monitoring page\n    TRAFFIC_MONITOR_TEMPLATE = 'traffic_monitor/show_traffic.html'\n\n    # Alarm will be sent if daily traffic exceeds\n    TRAFFIC_MONITOR_DAILY_ALARM_BYTES = 100 * 1024 * 1024 * 1024\n\n    # Alarm will be sent if monthly traffic exceeds\n    TRAFFIC_MONITOR_MONTHLY_ALARM_BYTES = 800 * 1024 * 1024 * 1024\n\n    # Alarm From Email\n    TRAFFIC_MONITOR_EMAIL_FROM = DEFAULT_FROM_EMAIL\n\n    # Alarm Email To (comma seperated list, can be more than one)\n    TRAFFIC_MONITOR_EMAIL_TO = [DEFAULT_FROM_EMAIL]\n\n    # Set False if you do not want to get email\n    TRAFFIC_MONITOR_ALARM_SEND_EMAIL = True\n\n    # Subject of email\n    TRAFFIC_MONITOR_ALARM_EMAIL_SUBJECT = 'Traffic limit alert'\n\n    # If traffic limit exceeds, the next alarm will be sent only if the traffic exceeds threshold from previous alarm\n    TRAFFIC_MONITOR_ALARM_BYTES_THRESHOLD = 10 * 1024 * 1024 * 1024\n\n8. Add cronjob in your settings.py to collect traffic automatically. (i.e. run every 5 minutes)::\n\n    CRONJOBS = [\n        ('*/5 * * * *', 'traffic_monitor.tools.read_bytes', '>> /var/log/cronjob.log'),\n    ]\n\n9. Run following command to add CRONJOBS to your system crontab::\n\n    python manage.py crontab add",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/genonfire/django-traffic-monitor",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-traffic-monitor",
    "package_url": "https://pypi.org/project/django-traffic-monitor/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-traffic-monitor/",
    "project_urls": {
      "Homepage": "https://github.com/genonfire/django-traffic-monitor"
    },
    "release_url": "https://pypi.org/project/django-traffic-monitor/1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a Django application that eases to monitor server traffic.",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10095965,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "361c664766bc19ee6a49078f99da9836ca1ff5747de03bdba6be67e8d2f7b76e",
        "md5": "e198dcf5d992f263245a5236ead113a2",
        "sha256": "9dfc65d7bef1d1e6dd02b28fe5a6e5052939daa79d85a1a88d01391d5cca521b"
      },
      "downloads": -1,
      "filename": "django-traffic-monitor-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e198dcf5d992f263245a5236ead113a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 148911,
      "upload_time": "2021-04-18T03:23:07",
      "upload_time_iso_8601": "2021-04-18T03:23:07.671200Z",
      "url": "https://files.pythonhosted.org/packages/36/1c/664766bc19ee6a49078f99da9836ca1ff5747de03bdba6be67e8d2f7b76e/django-traffic-monitor-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}