{
  "info": {
    "author": "Brian Chen",
    "author_email": "brianchen.chen@mail.utoronto.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Live Popular Times\nA library that extends the populartimes module to include support for **Live** *Google Maps* popular times data, which is currently inaccessible via Google's API.\n## Getting Started\n\n### Requirements\nGoogle Maps API key https://developers.google.com/places/web-service/get-api-key \n\n### Installation: \n\n##### Options:\n1. For most current version: `python3 -m pip install --upgrade git+https://github.com/GrocerCheck/LivePopularTimes`\n2. `git clone` the repository, `cd` into the populartimes directory and run `pip install .`\n3. Possibly outdated: `python3 -m pip install LivePopularTimes`\n\n## Usage  \n\n- Please note that certain functions of this module use the Google Places Web API, which is billable to Google.\n- Functions that accept api keys in their arguments will make API calls, and vice versa (self-explanatory)\n- If you're trying to reduce API usage a typical workflow may look like:\n    1. Get PlaceIDs & addresses https://developers.google.com/places/web-service/search#PlaceSearchRequests\n    2. Create formatted addresses. You may need to use `get_populartimes_by_Place_ID` to get more address data if necessary. This performs a reverse lookup by placeID.\n    3. use `get_populartimes_by_address` to collect data without API use!\n\n## livepopulartimes.get_populartimes_by_address(formatted_address)\n\nRetrieves information for a given address and adds populartimes, wait, time_spent and other data not accessible via Google Places by scraping given a formatted address. **Does not make an API call!**\n+ `livepopulartimes.get_populartimes_by_address(formatted_address)`\n    + **formatted_address** \n        + str; address of location you are looking for, preferably in the following format:\n            + \"(*location name*) , *full address*, *city*, *province/state/etc*, *country*\"\n    + **proxy**\n        + default = False\n        + proxies ip in format \n                    `{\n                    \"http\" : \"http://10.10.1.10:2138\",\n                    \"https\" : \"http://10.10.1.10:1080\",\n                    `}\n                    \n    + **Example call**\n        + `livepopulartimes.get_populartimes_by_address(\"(H-Mart Dunbar) 5557 Dunbar Street, Vancouver BC, Canada\", proxy=proxy)`\n\n+ **Response**\n    + The information present for places can vary. Therefore *popularity*, *current_popularity*, *rating*, *rating_n*, *time_wait*, *time_spent* and *phone* are optional return parameters and only present if available.\n    + *time_wait* and *time_spent* are in minutes\n    + **Note**: The *time_wait* and *time_spent* parameters were only added recently to Google Maps and are only present as a language specific string. The extracted values may therefore be incorrect and you might have to parse the raw string yourself, depending on your language settings.\n    + Returns dictionary of the following parameters:\n        + `name`\n        + `place_id`\n        + `populartimes` *populartimes is \"cleaned up\" data, please refer to example output for details*\n        + `current_popularity`\n        + `popular_times` *popular_times is \"raw\" data, please refer to example output for details*\n        + `address`\n        + `location`\n            + `lat`\n            + `lng`\n        + `categories`\n        + `place_types`\n    + **Refer to `example_output(get_populartimes_by_address).json)` for example output**\n    \n\n## livepopulartimes.get_populartimes_by_PlaceID(api_key, place_id)\n\nRetrieves information for a given address and adds populartimes, wait, time_spent and other data not accessible via Google Places via Places API call & scraping, given a place_id.\n\n+ `livepopulartimes.get_populartimes_by_PlaceID(api_key, place_id)`\n    + **api_key**\n        + str; your Google Places API key\n    + **place_id**\n        + str; Unique Google Places place identifier, can be obtained via `get_places_by_search` or Google Places javascript API\n        + more details here: [https://developers.google.com/places/place-id]\n    \n    + **Example call**\n        + `livepopulartimes.get_populartimes_by_PlaceID(API_KEY, \"ChIJtW0qSJp0hlQRj22fXuPh7s4\")`\n\n+ **Response**\n    + The information present for places can vary. Therefore *popularity*, *current_popularity*, *rating*, *rating_n*, *time_wait*, *time_spent* and *phone* are optional return parameters and only present if available.\n    + *time_wait* and *time_spent* are in minutes\n    + **Note**: The *time_wait* and *time_spent* parameters were only added recently to Google Maps and are only present as a language specific string. The extracted values may therefore be incorrect and you might have to parse the raw string yourself, depending on your language settings.\n    + Returns dictionary of the following parameters:\n        + `name`\n        + `place_id`\n        + `populartimes` *populartimes is \"cleaned up\" data, please refer to example output for details*\n        + `current_popularity`\n        + `popular_times` *popular_times is \"raw\" data, please refer to example output for details*\n        + `address`\n        + `location`\n            + `lat`\n            + `lng`\n        + `hours`\n        + `categories`\n        + `place_types`\n    + **Refer to `example_output(get_populartimes_by_PlaceID).json)` for example output**\n\n\n## livepopulartimes.get_places_by_search(api_key, query)\n\nRetrives Google Maps location data from search query\n\n+ `livepopulartimes.get_populartimes_by_search(api_key, query)`\n    + **query**\n        + str; Google search query\n    + **Example call**\n        + `livepopulartimes.get_places_by_query(\"restaurants open in London\")`\n\n+ **Response**\n    + The information present for places can vary\n    + Returns dictionary with the following fields:\n        + `name`\n        + `place_id`\n        + `address`\n        + `location`\n            + `lat`\n            + `lng`\n        + `categories`\n        + `place_types`\n    + **Refer to `example_output(get_places_by_search).txt)` for example output**\n\nSpecial thanks to m-wrzr's populartimes module for the framework upon which this is built.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GrocerCheck/LivePopularTimes",
    "keywords": "populartimes googlemaps live,googlemaps,scraper,crawler,populartimes",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LivePopularTimes",
    "package_url": "https://pypi.org/project/LivePopularTimes/",
    "platform": "",
    "project_url": "https://pypi.org/project/LivePopularTimes/",
    "project_urls": {
      "Homepage": "https://github.com/GrocerCheck/LivePopularTimes"
    },
    "release_url": "https://pypi.org/project/LivePopularTimes/1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "LivePopularTimes: A Google Maps scraper",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9793271,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "795d337da8e93d7afc125e25e4f60b1bdc703c9321d920f56a6b021de21fb720",
        "md5": "678a91e2c85f31bf649dc74e9e287aff",
        "sha256": "377eff006b607a150254420ff6e138494463b545bd15da2aa3791d8a78d832c8"
      },
      "downloads": -1,
      "filename": "LivePopularTimes-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "678a91e2c85f31bf649dc74e9e287aff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9244,
      "upload_time": "2021-03-17T04:25:30",
      "upload_time_iso_8601": "2021-03-17T04:25:30.765940Z",
      "url": "https://files.pythonhosted.org/packages/79/5d/337da8e93d7afc125e25e4f60b1bdc703c9321d920f56a6b021de21fb720/LivePopularTimes-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}