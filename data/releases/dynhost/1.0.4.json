{
  "info": {
    "author": "Fran√ßois Schmidts",
    "author_email": "francois@schmidts.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: Name Service (DNS)",
      "Topic :: System :: Networking"
    ],
    "description": "# DynHost\nMultiple DynDNS updating script\n\n## Purpose\n\nThis script supports the [OVH](https://www.ovh.com) API for dynamic DNS updates. It allows you to specify several host to update with your public IPv4.\n\nOVH originally distributed a script from which I'm freely inspired.\n\n## Installation\n\nYou can install the script manually or simply use the [pypi](https://pypi.org/project/DynHost/) package through ``pip``.\n\n```bash\npip3 install DynHost\n```\n\n### Edit the configuration\n\nDynHost entire behavior is dictated by a configuration file which can be located either at ``~/.config/dynhost.cfg`` or at ``/etc/dynhost.cfg``. They have to be written in the [INI](https://en.wikipedia.org/wiki/INI_file).\n\nHere's a short configuration example:\n\n```cfg\n[myDomain]\nusername=jaesivsm\npassword=MyPassword\ndomain=mydomain.com\n ```\n\nWhat you have to know about that file is that every \" section \" is an FQDN that you can update. The title of the section is of no importance but it's advised to put something recognisable. Three option are mandatory for each section :\n * ``username``: The username given by your DNS provider for its API.\n * ``password``: The password you've chosen for that entry.\n * ``domain``: The domain to update.\n\nA special section named ``DEFAULT`` can be added, it will hold default values for all the other sections.\nHere are the different option available in the default section:\n * ``dyndns_host``, ``dyndns_nic``, ``back_mx``, ``system``, ``wildcard``: Those are option directly passed to the remote dynhost system. You won't have to update them if you're using OVH.\n * ``loglevel``: The verbosity of the script, available levels are, from the least to the most verbose : DEBUG, INFO, WARNING, ERROR and FATAL.\n * ``cache_file``: The path to the file the script will write the cache file. The default path aim at a ``/run/`` subfolder, which is supposed to be in-memory but you can put it wherever you waant.\n * ``loop_time_sec``: only if ran through SystemD, the wait time between to run in seconds, see the SystemD chapter about that.\n\n*Note: you can also copy it in your private home folder in ```~/.config/``` but you'll have to run the script as your own user (so no SystemD)*\n\n#### If you want to use SystemD\n\nFind and activate the SystemD service file. Be aware that its path may vary depending on you systemd configuration: for example, as root on a debian Stretch, the service was copied here ``/usr/local/lib/python3.5/dist-packages/etc/systemd/system/dynhost.service`` by pip.\n\nYou can also copy it from the repository.\n\n```bash\nsystemctl enable <path to dynhost.service>\nsystemctl daemon-reload\nsystemctl start dynhost.service\n```\n\nYou should see SystemD tell you the service is ok and running with :\n```bash\nsystemctl status dynhost.service\n```\n\n#### If you want to use cron\nEdit the crontab you want and set it to run every few minutes.\n\n```\n*/2 * * * * /usr/local/bin/dynhost\n```\n\n# Debugging\n\nAll Dynhost logs are forwarded to SysLog so ``grep DynHost /var/log/syslog`` should be enough. You can also use SystemD logging mechanism if you're using it.",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/DynHost/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jaesivsm/DynHost",
    "keywords": "dynhost dyndhs ovh",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DynHost",
    "package_url": "https://pypi.org/project/DynHost/",
    "platform": "",
    "project_url": "https://pypi.org/project/DynHost/",
    "project_urls": {
      "Homepage": "https://github.com/jaesivsm/DynHost"
    },
    "release_url": "https://pypi.org/project/DynHost/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Multiple DynDNS updating script",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6088053,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "598f66048c6a6e643cfce026204a35bc449815221762d48f4007a0b56fff4495",
        "md5": "614b22705732d66a468a09752c9fe86d",
        "sha256": "2dfd9bf8bb138884d2d52a8e6c046df2b04709e02112caeee0e56067cfc91940"
      },
      "downloads": -1,
      "filename": "DynHost-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "614b22705732d66a468a09752c9fe86d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4207,
      "upload_time": "2017-08-06T09:41:23",
      "upload_time_iso_8601": "2017-08-06T09:41:23.879487Z",
      "url": "https://files.pythonhosted.org/packages/59/8f/66048c6a6e643cfce026204a35bc449815221762d48f4007a0b56fff4495/DynHost-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}