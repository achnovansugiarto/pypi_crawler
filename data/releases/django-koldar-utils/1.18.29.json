{
  "info": {
    "author": "Massimo Bono",
    "author_email": "massimobono1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introduction\n\nDjango app that expose a graphql schema as well as a graphiql interface.\n\n# User\n\n## Installation\n\n```\npip install django-app-graphql\n```\n\n## Configuration\n\nin `INSTALLED_APPS` you need to add:\n\n```\n'graphene_django',\n'django_filters',\n```\n\n**After all your apps you need to use this app** (this is important otherwise some models won't be detected at all!):\n\n```\n'django_app_graphql',\n```\n\nThe first thing you need to do is determine if you want your graphql server setupped \nusing `graphene` or using `ariadne`. In settings, write:\n\n```\nDJANGO_APP_GRAPHQL = dict(\n    BACKEND_TYPE=\"ariadne/graphene\"\n)\n```\n\nand select either *ariadne* or *graphene*.\n\nFinally, in `urls.py` of the entire project add the following line:\n\n```\nurlpatterns = [\n    ...\n    path(\"graphqls/\", include(\"django_app_graphql.urls\")),\n    ...\n]\n```\n\n\n### You have chosen graphene\n\nThe app needs to be deploy for last because otherwise it cannot detect all the Django models and their types.\nYou also need to configure the authentication proces. Hence you need t add \"AUTHENTICATION_BACKENDS\" in the `settings.py`:\n\n```\nAUTHENTICATION_BACKENDS = [\n    \"graphql_jwt.backends.JSONWebTokenBackend\",\n    \"django.contrib.auth.backends.ModelBackend\"\n]\n```\n\nAfter that, you need to properly configure the graphene, graphenedjango-extras and graphene-jwt. Add all these in your `settings.py`:\n\n```\nGRAPHENE = dict(\n    SCHEMA\" = \"django_app_graphql.graphene.schema.SCHEMA\",\n    SCHEMA_OUTPUT = 'graphql-schema.json',\n    SCHEMA_INDENT = 2,\n    MIDDLEWARE = [\n        \"graphql_jwt.middleware.JSONWebTokenMiddleware\",\n        \"django_app_graphql.middleware.GraphQLStackTraceInErrorMiddleware\",\n    ],\n)\n\nGRAPHENE_DJANGO_EXTRAS = dict(\n    DEFAULT_PAGINATION_CLASS = 'graphene_django_extras.paginations.LimitOffsetGraphqlPagination',\n    DEFAULT_PAGE_SIZE = 20,\n    MAX_PAGE_SIZE = 50,\n    CACHE_ACTIVE = True,\n    CACHE_TIMEOUT = 300  # seconds\n)\n\n# see https://django-graphql-jwt.domake.io/en/latest/refresh_token.html\nGRAPHQL_JWT = dict(\n    # This configures graphql-jwt to add \"token\" input at each request to be authenticated\n    JWT_ALLOW_ARGUMENT = True,\n    JWT_ARGUMENT_NAME = \"token\",\n    JWT_VERIFY_EXPIRATION = True,\n    JWT_EXPIRATION_DELTA = timedelta(minutes=30),\n    JWT_ALGORITHM = \"HS256\",\n    JWT_REFRESH_EXPIRATION_DELTA = timedelta(days=7),\n    JWT_AUTH_HEADER_PREFIX = \"Bearer\",\n)\n```\n\n### You have chosen ariadne\n\nIn `settings.py` add:\n\n```\nINSTALLED_APPS = [\n    ...\n    \"ariadne.contrib.django\",\n]\n```\n\nAdd templates (otherwise the playground won't work):\n\n```\nTEMPLATES = [\n    {\n        ...,\n        'APP_DIRS': True,\n        ...\n    },\n]\n```\n\nAriadne is in unstable development (I don't know if it will ever be supported)\n\n### Generic tweaks\n\nFinally you can configure this app, for instance:\n\n```\nDJANGO_APP_GRAPHQL = {\n    \"BACKEND_TYPE\": \"graphene\",\n    \"EXPOSE_GRAPHIQL\": True,\n    \"GRAPHQL_SERVER_URL\": \"\",\n    \"ENABLE_GRAPHQL_FEDERATION\": True,\n    \"SAVE_GRAPHQL_SCHEMA\": \"output/schema.graphql\"\n}\n```\n# Developer\n\n# Update new version (only for developers)\n\n```\npmakeup update-version-patch build upload-to-pypi\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Koldar/django-koldar-common-apps",
    "keywords": "utils",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-koldar-utils",
    "package_url": "https://pypi.org/project/django-koldar-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-koldar-utils/",
    "project_urls": {
      "Homepage": "https://github.com/Koldar/django-koldar-common-apps"
    },
    "release_url": "https://pypi.org/project/django-koldar-utils/1.18.29/",
    "requires_dist": [
      "arrow (>=1.1.0)",
      "Django (>=3.2.3)",
      "django-currentuser (>=0.5.3)",
      "django-filter (>=2.4.0)",
      "django-graphql-jwt (>=0.3.2)",
      "django-polymorphic (>=3.0.0)",
      "graphene (>=3.0b7)",
      "graphene-django (>=3.0.0b7)",
      "graphene-django-extras (>=0.5.1)",
      "graphql-core (>=3.1.5)",
      "networkx (>=2.5.1)",
      "pydot (>=1.4.2)",
      "PyJWT (>=2.1.0)",
      "requests (>=2.25.1)",
      "stringcase (>=1.2.0)",
      "urllib3 (>=1.26.5)",
      "jmespath (>=0.10.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Some stuff that i used when developing with django",
    "version": "1.18.29",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12745200,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2eb22b73043d580f85ea7c5614f74e55e2dea1569ccd0be18806e6c73a2c6459",
        "md5": "abb9aa442442adb31bba5cecd93e9235",
        "sha256": "164cf3c7fdd501592186b3aa4d9e591af50cc5c7819c131698180817e5015bad"
      },
      "downloads": -1,
      "filename": "django_koldar_utils-1.18.29-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "abb9aa442442adb31bba5cecd93e9235",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 27804,
      "upload_time": "2021-08-11T15:06:06",
      "upload_time_iso_8601": "2021-08-11T15:06:06.734781Z",
      "url": "https://files.pythonhosted.org/packages/2e/b2/2b73043d580f85ea7c5614f74e55e2dea1569ccd0be18806e6c73a2c6459/django_koldar_utils-1.18.29-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}