{
  "info": {
    "author": "Diederik van der Boor",
    "author_email": "opensource@edoburu.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Office/Business :: Financial",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-oscar-docdata\n====================\n\nPayment gateway integration for `Docdata Payments <http://www.docdatapayments.com/>`_ in django-oscar_.\nDocData Payments is a large payment gateway based in The Netherlands that supports more then 40 international payment methods.\n\n.. _django-oscar: https://github.com/tangentlabs/django-oscar\n\n\nInstallation\n============\n\nInstall via pip::\n\n    pip install django-oscar-docdata\n\n\nConfiguration\n-------------\n\nConfigure the application:\n\n`DOCDATA_MERCHANT_NAME`\n    Credentials as supplied by the payment provider.\n\n`DOCDATA_MERCHANT_PASSWORD`\n    Credentials as supplied by the payment provider.\n\n`DOCDATA_TESTING`\n    Whether or not to run in testing mode. Defaults to `True`.\n\nAdd to ``urls.py``::\n\n    from oscar_docdata.dashboard.app import application as docdata_app\n\n    urlpatterns += patterns('',\n        url(r'^api/docdata/', include('docdata.urls')),\n        url(r'^dashboard/docdata/', include(docdata_app.urls)),\n    )\n\nAdd to ``settings.py``::\n\n    OSCAR_DASHBOARD_NAVIGATION[2]['children'].insert(1, {\n        'label': _('Docdata Orders'),\n        'url_name': 'docdata-order-list',\n    })\n\nAs recommendation, temporary log all events from this package as well::\n\n    LOGGING = {\n        # ...\n\n        'filters': {\n            'require_debug_false': {\n                '()': 'django.utils.log.RequireDebugFalse',\n            }\n        },\n        'handlers': {\n            'mail_admins': {\n                'level': 'ERROR',\n                'filters': ['require_debug_false'],\n                'class': 'django.utils.log.AdminEmailHandler'\n            },\n            'console': {\n                'level': 'DEBUG',\n                'class': 'logging.StreamHandler',\n            },\n        },\n        'loggers': {\n            # ...\n\n            'suds': {\n                'handlers': ['console'],\n                'level': 'DEBUG',\n                'propagate': True,\n            },\n            'oscar_docdata': {\n                'handlers': ['mail_admins', 'console'],\n                'level': 'DEBUG',\n                'propagate': True,\n            },\n        },\n    }\n\nCaveats\n=======\n\nWhile working with the Docdata 1.0 and 1.2 API, we found the following limitations:\n\n* Address fields are oriented towards Dutch address standards.\n  Passing international addressfields is hard, or requires hacking, for example:\n\n * faking the house number (because the US address fields have no official field for that).\n * Streets have a limit of 35 characters, so the \"Address Line 1\" should be truncated.\n\n* Passing invalid address fields could cause PayPal, VISA or MasterCard transactions to fail.\n* The individual payment objects have a status value, but the payment cluster does not.\n  This means that there is no global status value to read.\n  If an order has been cancelled before starting a payment, there is no way to tell from the API.\n  The only way this can be detected, is when the customer presses the \"Back to shop\" link, which calls the cancel callback url.\n  You may want to catch the ``return_view_called`` signal for this.\n* Determining that an order has been paid happens by comparing \"received >= expected\".\n  This could break with currency conversions.\n  Again, because the payment cluster status is not exposed in the API.\n  As workaround, there is a ``DOCDATA_PAYMENT_SUCCESS_MARGIN`` setting to add a margin of 100 cents.\n\nWe hope this will be addressed by Docdata Payments in future versions of the API.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/edoburu/django-oscar-docdata/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edoburu/django-oscar-docdata",
    "keywords": null,
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-oscar-docdata",
    "package_url": "https://pypi.org/project/django-oscar-docdata/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-oscar-docdata/",
    "project_urls": {
      "Download": "https://github.com/edoburu/django-oscar-docdata/zipball/master",
      "Homepage": "https://github.com/edoburu/django-oscar-docdata"
    },
    "release_url": "https://pypi.org/project/django-oscar-docdata/1.2.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Docdata Payments Gateway integration for django-oscar",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17129014,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6b4d735077496bc9bca5d214365dafa36a33202b676c176b4794ec236592f28",
        "md5": "9d8ac2f1ec039daaa44d3f0de6733be1",
        "sha256": "6a1e47e0b5a46fd8ea8b724f4dc8bc62fee583cdf942ca0ea6b5c76b7e248c14"
      },
      "downloads": -1,
      "filename": "django_oscar_docdata-1.2.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d8ac2f1ec039daaa44d3f0de6733be1",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 40224,
      "upload_time": "2014-08-15T10:33:28",
      "upload_time_iso_8601": "2014-08-15T10:33:28.588451Z",
      "url": "https://files.pythonhosted.org/packages/b6/b4/d735077496bc9bca5d214365dafa36a33202b676c176b4794ec236592f28/django_oscar_docdata-1.2.2-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a85f25c2e8e2b6fa324af3f757f1f7a4d55a4cd53784532766f7a548c1dc4659",
        "md5": "e824007b70dfce8ee1c64eac62dcb750",
        "sha256": "ab9b6e618de5f2388094527ae9fc18c083338ca19dad007c49ff9407afba5f8f"
      },
      "downloads": -1,
      "filename": "django-oscar-docdata-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e824007b70dfce8ee1c64eac62dcb750",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31625,
      "upload_time": "2014-08-15T10:21:38",
      "upload_time_iso_8601": "2014-08-15T10:21:38.150105Z",
      "url": "https://files.pythonhosted.org/packages/a8/5f/25c2e8e2b6fa324af3f757f1f7a4d55a4cd53784532766f7a548c1dc4659/django-oscar-docdata-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}