{
  "info": {
    "author": "Daniele Zanotelli",
    "author_email": "dazano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "drypy - easy dryrun mode for Python\n===================================\n\nThe module helps you to implement `dryrun` mode in your\nPython projects with an easy switch 'on/off' feature.\n\n:Authors:\n    Daniele Zanotelli (dazano@gmail.com)\n:Copyright:\n    2017-2020\n:License:\n    MIT\n:Python version:\n    3.x\n\nDocumentation\n-------------\n.. _Sphinx: http://www.sphinx-doc.org/\n.. _`project docs`: https://drypy.readthedocs.io/\n\nThe package is supplied with Sphinx_ compilable documentation\nunder the docs directory.\n\nYou can read the latest docs visiting the `project docs`_ online.\n\nInstallation\n------------\n\nVia pip:\n\n::\n\n   $ pip install drypy\n\nor download the project from the github and compile the package\n\n::\n\n   $ git clone https://github.com/dzanotelli/drypy.git\n   $ cd drypy\n   $ make whl\n\nand you'll find your brand-new whl under the dist/ subdirectory.\n\nBasic usage\n-----------\n\nApply the `sham` decorator to your function and set dryrun as on.\n\n::\n\n   from drypy import dryrun\n   from drypy.patterns import sham\n\n   >>> @sham\n   >>> def foo(bar):\n           pass\n   >>> dryrun(True)\n   >>> foo(42)\n\nWill log the following output:\n\n::\n\n   [DRYRUN] call to 'foo(42)'\n\nusing the python standard logging facility, thus it's up to you\nto correctly configure it (check the docs for a working example).\n\nTo use custom substitutes with specific beahviours please search in the docs\nfor the `sheriff-deputy` pattern.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dzanotelli/drypy",
    "keywords": "dryrun",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drypy",
    "package_url": "https://pypi.org/project/drypy/",
    "platform": "",
    "project_url": "https://pypi.org/project/drypy/",
    "project_urls": {
      "Homepage": "https://github.com/dzanotelli/drypy"
    },
    "release_url": "https://pypi.org/project/drypy/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Python utilities to perform dryrun.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6684492,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ba876b104be6e86a38e823a0738a6f1e79dd9e159069494aeeb62d024b117c3",
        "md5": "87732f89e13ad6f7ab01115e47a8186e",
        "sha256": "47fe9e5d2ad1000057b4662c54d7890890a1a99c957a1c412781ebd805f47b40"
      },
      "downloads": -1,
      "filename": "drypy-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "87732f89e13ad6f7ab01115e47a8186e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 6912,
      "upload_time": "2020-02-23T16:25:54",
      "upload_time_iso_8601": "2020-02-23T16:25:54.188046Z",
      "url": "https://files.pythonhosted.org/packages/5b/a8/76b104be6e86a38e823a0738a6f1e79dd9e159069494aeeb62d024b117c3/drypy-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}