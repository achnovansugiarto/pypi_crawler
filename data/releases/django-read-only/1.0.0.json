{
  "info": {
    "author": "Adam Johnson",
    "author_email": "me@adamj.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "django-read-only\n================\n\n.. image:: https://github.com/adamchainz/django-read-only/workflows/CI/badge.svg?branch=master\n   :target: https://github.com/adamchainz/django-read-only/actions?workflow=CI\n\n.. image:: https://img.shields.io/pypi/v/django-read-only.svg\n   :target: https://pypi.org/project/django-read-only/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/python/black\n\nDisable Django database writes.\n\nRequirements\n------------\n\nPython 3.5 to 3.8 supported.\n\nDjango 2.2 to 3.0 supported.\n\n----\n\n**Deploying a Django project?**\n**Testing a Django project?**\n**Are your tests slow?**\nCheck out my book `Speed Up Your Django Tests <https://gumroad.com/l/suydt>`__ which covers loads of best practices so you can write faster, more accurate tests.\n\n----\n\nInstallation\n------------\n\nInstall with **pip**:\n\n.. code-block:: sh\n\n    python -m pip install django-read-only\n\nThen add to your installed apps:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...,\n        \"django_read_only\",\n        ...\n    ]\n\nUsage\n-----\n\nSet the environment variable ``DJANGO_READ_ONLY`` to anything but the empty string, and all data modification queries will cause an exception:\n\n.. code-block:: sh\n\n    DJANGO_READ_ONLY=1 python manage.py shell\n    ...\n    >>> User.objects.create_user(username=\"hacker\", password=\"hunter2\")\n    ...\n    DjangoReadOnlyError(...)\n\nYou can put this in the shell profile file (``bashrc``, ``zshrc``, etc.) of the user on your production system.\nThis way developers performing exploratory queries canâ€™t accidentally make changes, but writes remain enabled for non-shell processes like your WSGI server.\n\nDuring a session with ``DJANGO_READ_ONLY`` set, you can re-enable writes for the current thread by calling ``enable_writes()``:\n\n.. code-block:: pycon\n\n    >>> import django_read_only\n    >>> django_read_only.enable_writes()\n\nWrites can be disabled with ``disable_writes()``:\n\n.. code-block:: pycon\n\n    >>> django_read_only.disable_writes()\n\nTo temporarily allow writes, use the ``temp_writes()`` context manager / decorator:\n\n.. code-block:: pycon\n\n    >>> with django_read_only.temp_writes():\n    ...      User.objects.create_user(...)\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamchainz/django-read-only",
    "keywords": "Django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-read-only",
    "package_url": "https://pypi.org/project/django-read-only/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-read-only/",
    "project_urls": {
      "Changelog": "https://github.com/adamchainz/django-read-only/blob/master/HISTORY.rst",
      "Homepage": "https://github.com/adamchainz/django-read-only",
      "Twitter": "https://twitter.com/adamchainz"
    },
    "release_url": "https://pypi.org/project/django-read-only/1.0.0/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.5",
    "summary": "Disable Django database writes.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17024243,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5249a7e45cf7c0f66c7254a3570c6dfbd311e798477fb2450adc8509958b002c",
        "md5": "01986f81992ee70c711882595cc42cde",
        "sha256": "465c7d59e3c3f28207a2bc7a5861b7ac4536543ae3a09f0c9e3aba87bc4e0a59"
      },
      "downloads": -1,
      "filename": "django_read_only-1.0.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "01986f81992ee70c711882595cc42cde",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 4197,
      "upload_time": "2020-10-01T13:31:12",
      "upload_time_iso_8601": "2020-10-01T13:31:12.228120Z",
      "url": "https://files.pythonhosted.org/packages/52/49/a7e45cf7c0f66c7254a3570c6dfbd311e798477fb2450adc8509958b002c/django_read_only-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0b90129bde13eff7d4934614dd4ed89c45fcf57256efc807b7d17d59f6d5f43",
        "md5": "e82df6f217b83d14e999b2ecc91df657",
        "sha256": "28b4196f97b212af6a1d534bc156bbe2140d56d9972526d5c9c5899bab826b1f"
      },
      "downloads": -1,
      "filename": "django-read-only-1.0.0.tar.gz",
      "has_sig": true,
      "md5_digest": "e82df6f217b83d14e999b2ecc91df657",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 7460,
      "upload_time": "2020-10-01T13:31:14",
      "upload_time_iso_8601": "2020-10-01T13:31:14.685280Z",
      "url": "https://files.pythonhosted.org/packages/f0/b9/0129bde13eff7d4934614dd4ed89c45fcf57256efc807b7d17d59f6d5f43/django-read-only-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}