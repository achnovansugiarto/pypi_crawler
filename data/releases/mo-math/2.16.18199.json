{
  "info": {
    "author": "Kyle Lahnakoski",
    "author_email": "kyle@lahnakoski.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "More Math!\n==========\n\nBasic math functions that have been stabilized to act well over ``Null``\n\nOverview\n--------\n\nMany of the basic math functions you know and love, with the additional\nbenefit that they do not throw exceptions and do not return ``NaN``.\nRather, all function return ``Null`` in the exceptional case.\n\nThese functions are all static methods. This ensures you call the\nfunctions with ``Math.`` prefix, like\n\n::\n\n    Math.abs(-42)\n\nThis prevents confusion with the built-in functions by the same name\n\nFunctions\n---------\n\nMost functions need no introduction, so are not listed here. Some of the\ninteresting ones are:\n\n-  ``Math.round(value, decimal=7, digits=None)`` - Rounds to 7decimal\n   points, unless specified differently. Rounding to ``decimal=0`` will\n   return an ``int``. The useful parameter here is ``digits``, which\n   rounds to a specified number of significant digits.\n-  ``Math.floor(value, mod=1)`` - The ``mod``\\ ulo parameter is used to\n   specify the granularity of the floor function.\n-  ``Math.ceiling(value, mod=1)`` - Return the smallest value, that's\n   larger than ``value``, with suitable granularity.\n-  ``Math.mod(value, mod=1)`` - Works on floats\n-  ``Math.approx_str(value)`` - Round values, and return unicode\n-  ``Math.sign(v)`` - Missing from the Python library\n\nThe all-caps aggregate functions accept only one parameter; an iterable.\nNull values are ignored. If all values are Null, the function returns\nNull.\n\n-  ``COUNT(values)``\n-  ``SUM(values)`` -\n-  ``PRODUCT(values)`` -\n-  ``MIN(values)`` -\n-  ``MAX(values)`` -",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/klahnakoski/mo-math",
    "keywords": "",
    "license": "MPL 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mo-math",
    "package_url": "https://pypi.org/project/mo-math/",
    "platform": "",
    "project_url": "https://pypi.org/project/mo-math/",
    "project_urls": {
      "Homepage": "https://github.com/klahnakoski/mo-math"
    },
    "release_url": "https://pypi.org/project/mo-math/2.16.18199/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "More Math! Many of the aggregates you are familiar with, but they ignore Nones",
    "version": "2.16.18199",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17547914,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c964a7349c796acd5a5d8c4dc904b9e1cde46596008e362c66c0a8a7c3759e29",
        "md5": "9259c765011945ae6aa890e6bb7bdc40",
        "sha256": "2c1453558ed1b17b723f3cd04833b22701e462ed1ab486adf9cda64fc1246bc9"
      },
      "downloads": -1,
      "filename": "mo-math-2.16.18199.tar.gz",
      "has_sig": false,
      "md5_digest": "9259c765011945ae6aa890e6bb7bdc40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41104,
      "upload_time": "2018-07-18T12:16:56",
      "upload_time_iso_8601": "2018-07-18T12:16:56.222501Z",
      "url": "https://files.pythonhosted.org/packages/c9/64/a7349c796acd5a5d8c4dc904b9e1cde46596008e362c66c0a8a7c3759e29/mo-math-2.16.18199.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}