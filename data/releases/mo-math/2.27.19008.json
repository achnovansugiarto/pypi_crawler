{
  "info": {
    "author": "Kyle Lahnakoski",
    "author_email": "kyle@lahnakoski.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# More Math!  \n\nBasic math functions that have been stabilized to act well over `Null`/`None`/`NaN`\n\n## Overview\n\nMany of the basic math functions you know and love, with the additional benefit \nthat they do not throw exceptions and do not return `NaN`. \n\nThese functions are all module methods. Be sure you call the functions \nwith `mo_math.` prefix, like \n\n\tmo_math.abs(-42)\n\nThis prevents confusion with the `__builtin__` functions by the same name   \n\n\n## Functions\n\nFunctions are generally \"conservative\" in the face of nulls: Specifically, they return `Null` if any of their operands are not a number.\n\nMost functions need no introduction, but some are interesting:\n\n- `round(value, decimal=7, digits=None)` - Rounds to 7 decimal points, unless specified differently.  Rounding to `decimal=0` will return an `int`. The useful parameter here is `digits`, which rounds to a specified number of significant digits.\n- `floor(value, mod=1)` - The `mod`ulo parameter is used to specify the granularity of the floor function.\n- `ceiling(value, mod=1)` - Return the smallest value, that's larger than `value`, with suitable granularity.\n- `mod(value, mod=1)` - Works on floats\n- `approx_str(value)` - Round values, and return unicode \n- `sign(v)` - Missing from the Python library \n\n\nThe all-caps aggregate functions accept only one parameter; an iterable. They are \"decisive\" operators: Non-numbers are ignored, if no values are numbers then the aggregate will return `Null`.\n\n- `COUNT(values)`\n- `SUM(values)` \n- `PRODUCT(values)` \n- `MIN(values)` \n- `MAX(values)`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/klahnakoski/mo-math",
    "keywords": "",
    "license": "MPL 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mo-math",
    "package_url": "https://pypi.org/project/mo-math/",
    "platform": "",
    "project_url": "https://pypi.org/project/mo-math/",
    "project_urls": {
      "Homepage": "https://github.com/klahnakoski/mo-math"
    },
    "release_url": "https://pypi.org/project/mo-math/2.27.19008/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "More Math! Many of the aggregates you are familiar with, but they ignore Nones",
    "version": "2.27.19008",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17547914,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f69f5a96ab5cdd6cb330a6d53cbb3f21646ff047765557658790f55700b3ff33",
        "md5": "f9054f41ee8f59717166305d38fa3965",
        "sha256": "6a52a9bc45b13baa853b67cdc0ffa37112ff2b7232015601e1d56fbbb4dabfc9"
      },
      "downloads": -1,
      "filename": "mo-math-2.27.19008.tar.gz",
      "has_sig": false,
      "md5_digest": "f9054f41ee8f59717166305d38fa3965",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39494,
      "upload_time": "2019-01-08T17:31:06",
      "upload_time_iso_8601": "2019-01-08T17:31:06.283102Z",
      "url": "https://files.pythonhosted.org/packages/f6/9f/5a96ab5cdd6cb330a6d53cbb3f21646ff047765557658790f55700b3ff33/mo-math-2.27.19008.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}