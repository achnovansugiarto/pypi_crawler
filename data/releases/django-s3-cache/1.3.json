{
  "info": {
    "author": "Alexander Todorov",
    "author_email": "atodorov@nospam.otb.bg",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Django S3 Cache\n---------------\n\nAbout\n=====\n\nThis is Amazon Simple Storage Service (S3) cache backend for Django.\nIt is based on the *django.core.cache.backends.filebased.FileBasedCache* backend\nand operates in similar fashion. This backend uses\n`django-storages <http://pypi.python.org/pypi/django-storages>`_ to read/write the\ndata into S3. It uses the *s3boto* storage backend.\n\nAll key/values passed to this backend are stored in a flat directory structure\nin your S3 bucket. It uses sha1 instead of md5 to create the file name.\n\nInstallation\n============\n\nUse pip to install from PyPI:\n\n::\n\n        pip install django-s3-cache\n\n\nConfigure the use of this backend:\n\n::\n\n        CACHES = {\n            'default': {\n                'BACKEND': 's3cache.AmazonS3Cache',\n                'OPTIONS': {\n                    'access_key' : 'Your AWS access key',\n                    'secret_key' : 'Your AWS secret access key',\n                    'bucket_name': 'Your AWS storage bucket name',\n                }\n            }\n        }\n\nConfiguration\n=============\n\nDjango S3 Cache supports many configuration options. They should be defined as\nkeys of the *OPTIONS* dictionary in *settings.py* as shown above. If something\nis not defined explicitly it follows the defaults of *s3boto* backend from\n*django-storages* which in turn reads them from *settings.py*.\n\n**NOTE-1:** some values in *settings.py* may be used globally by *boto* and other AWS aware\nDjango components since they follow the format *AWS_XXXX*. It's always best to define your\nvalues as cache options explicitly if you don't want to run into problems.\n\n**NOTE-2:** since version 1.2 Django S3 Cache is compatible with django-storages v1.1.8 which\nhas changed the names of configuration variables. All new variables are expected to be lower\ncase and the AWS keys variables changed names. For exact names see the S3BotoStorage class\ndefinition in *s3boto.py*. Django S3 Cache implements backward compatibility with its previous\nOPTIONS syntax to allow for easier upgrades. Older names are mapped to new ones and all\noptions are lower cased before passing to S3BotoStorage. The example above shows the new syntax.\n\n**NOTE-3:** before version 1.3 there is a **CRITICAL BUG** in the handling of the *LOCATION*\noption. If used cache objects will be stored under the defined directory, however culling\nand clearing the cache **was not** taking this into account. cache.clear() or cache._cull()\nwill **delete the entire bucket**. This has been fixed in version 1.3!\n\nSome notable options are:\n\n* *LOCATION* - the directory prefix under which to store cache files. Defaults to empty string, which means the root directory;\n* *DEFAULT_ACL* == *private* - default ACL for created objects. Unlike the *s3boto* storage backend we set this to *private*;\n* *BUCKET_ACL* == *DEFAULT_ACL* - ACL for the bucket if auto created. By default set to *private*. It's best to use separate bucket for cache files;\n* *REDUCED_REDUNDANCY* - set to *True* if you want to save a few cents on storage costs;\n* *IS_GZIPPED* - set to *True* to enable Gzip compression. Used together with *GZIP_CONTENT_TYPES*. See *django-storages* `documentation <http://django-storages.readthedocs.org/en/latest/backends/amazon-S3.html>`_.\n\n\nDjango S3 implements culling strategy similar to the stock filesystem backend. It will honor the following options:\n\n* *MAX_ENTRIES* - the maximum number of entries allowed in the cache before old values are deleted. If 0 culling is disabled. This argument defaults to 300;\n* *CULL_FREQUENCY* - the fraction of entries that are culled when *MAX_ENTRIES* is reached. The actual ratio is *1/CULL_FREQUENCY*, so set *CULL_FREQUENCY* to 2 to cull half of the entries when *MAX_ENTRIES* is reached;\n\n\nContributing\n============\n\nSource code and issue tracker are at https://github.com/atodorov/django-s3-cache",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/atodorov/django-s3-cache",
    "keywords": "Amazon,S3,Django,cache",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-s3-cache",
    "package_url": "https://pypi.org/project/django-s3-cache/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-s3-cache/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/atodorov/django-s3-cache"
    },
    "release_url": "https://pypi.org/project/django-s3-cache/1.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Amazon Simple Storage Service (S3) cache backend for Django",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6112380,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40961dea976635e1a4b233a578cf3931e88b08c0af00c9563038c0fb4583413b",
        "md5": "0491457d2020d6aa49cfb20fe6d38fea",
        "sha256": "413f1ff4d38ceb92a644b5b2d461e92bb9c384d63e4926016ec51b5f7918bd62"
      },
      "downloads": -1,
      "filename": "django-s3-cache-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0491457d2020d6aa49cfb20fe6d38fea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5248,
      "upload_time": "2013-06-16T20:52:43",
      "upload_time_iso_8601": "2013-06-16T20:52:43.034193Z",
      "url": "https://files.pythonhosted.org/packages/40/96/1dea976635e1a4b233a578cf3931e88b08c0af00c9563038c0fb4583413b/django-s3-cache-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}