{
  "info": {
    "author": "Jason Held",
    "author_email": "jasonsheld@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "===============================\ndjango-disposable-email-checker\n===============================\n\n[![PyPI version](https://badge.fury.io/py/django-disposable-email-checker.png)](https://pypi.python.org/pypi/django-disposable-email-checker/)\n[![PyPI version](https://travis-ci.org/jheld/DisposableEmailChecker.png?branch=master)](https://travis-ci.org/jheld/DisposableEmailChecker)\n[![Requirements Status](https://requires.io/github/jheld/DisposableEmailChecker/requirements.svg?branch=master)](https://requires.io/github/jheld/DisposableEmailChecker/requirements/?branch=master)\n\nDjango package to detect between ~890 & ~8,600 domains used by disposable email services.\nYou can validate any email against our internal list of ~890 domains used by\ndisposable email services. Optionally you can also check each domain against\nthe [Block-Disposable-Email.com](http://block-disposable-email.com) API,\ncovering ~8,600 domains.\n\nThis code was initially developed at: https://github.com/aaronbassett/DisposableEmailChecker\nHowever PyPI ownership has been transferred to https://github.com/jheld/DisposableEmailChecker and as such\nall future contributions are expected to be made to the new github repo.\n\nSetup\n-----\n\nInstall the disposable email checker from PyPI\n\n    pip install django-disposable-email-checker\n\nThe disposable email checker comes with a list of ~890 emails. If you would like\nto provide your own email list create a function which returns a list of domains\nto block.\n\n```python\nfrom disposable_email_checker.emails import email_domain_loader\n\ndef custom_email_domain_loader():\n    # Anyone still using AOL will be too much of a customer service burden\n    return [\n        \"aol.com\",\n    ] + email_domain_loader()\n```\n\nThen add the complete path including function name to your settings\n\n```python\nDEC_LOADER = \"my.package.custom_email_domain_loader\"\n```\n\nIf you would like to use the [BDE](http://block-disposable-email.com)\nintegration add your API key to your Django settings\n\n```python\nBDEA_APIKEY = \"abcnotarealkey123\"\n```\n\noptionally you can configure the BDE API timeout in seconds (default 5)\n\n```python\nBDEA_TIMEOUT = 2\n```\n\nA default error message can be set globally for the validation checking (this is optional and if \nleft blank it will default to `_('Blocked email provider.')`):\n\n```python\nBDEA_MESSAGE = '<blocked email message>'\n```\n\nAdding to your models\n---------------------\n\nOnce you have completed setup add the `DisposableEmailField` to your models.\n\n```python\nfrom django.db import models\nfrom disposable_email_checker.fields import DisposableEmailField\n\nclass MyModel(models.Model):\n    email = DisposableEmailField()\n```\n\nThe `DisposableEmailField` has a few optional arguments\n\n* **whitelist** - A list of emails which will always be allowed. Defaults\nto `[]`\n* **message** - The error message used by ValidationError if validation\nfails. Defaults to `_('Blocked email provider.')`\n* **code** - The error code used by ValidationError if validation fails.\nDefaults to \"invalid\".\n\nUsing the validator\n-------------------\n\nIf you want to use the validator by itself\n\n```python\nfrom django.core.exceptions import ValidationError\nfrom disposable_email_checker.validators import validate_disposable_email\nemail = \"emailaddress@readmetest.com\"  # replace with your own value\n\ntry:\n    validate_disposable_email(email)\nexcept ValidationError:\n    pass\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jheld/DisposableEmailChecker",
    "keywords": "DisposableEmailChecker",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-disposable-email-checker",
    "package_url": "https://pypi.org/project/django-disposable-email-checker/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-disposable-email-checker/",
    "project_urls": {
      "Homepage": "https://github.com/jheld/DisposableEmailChecker"
    },
    "release_url": "https://pypi.org/project/django-disposable-email-checker/2.0.1/",
    "requires_dist": [
      "block-disposable-email (>=2.0.0)"
    ],
    "requires_python": "",
    "summary": "Django package to detect ~890 domains used by disposable email services",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13546321,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49f55b5ea9d9a108b937748c5ba2ab569c6c4f48f1634559011c97bc3991761a",
        "md5": "b8c0693b4cb5f59250d339ace860f1c6",
        "sha256": "570dc6099193cde650749858e70cc3a288fc751ee726bfed4d94a8d568d4490c"
      },
      "downloads": -1,
      "filename": "django_disposable_email_checker-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8c0693b4cb5f59250d339ace860f1c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13996,
      "upload_time": "2020-07-24T16:09:18",
      "upload_time_iso_8601": "2020-07-24T16:09:18.838274Z",
      "url": "https://files.pythonhosted.org/packages/49/f5/5b5ea9d9a108b937748c5ba2ab569c6c4f48f1634559011c97bc3991761a/django_disposable_email_checker-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5050b07d615fd5362b12b01529081371d51159e0959726ab0a0517ee6107855",
        "md5": "f5f1caf345728ff1b0ba249b9fadb8b9",
        "sha256": "61dbae45e48c2a1b20582526058adcd5a205161a6bce63bdef5b2b2a3f1442c3"
      },
      "downloads": -1,
      "filename": "django-disposable-email-checker-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f5f1caf345728ff1b0ba249b9fadb8b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15725,
      "upload_time": "2020-07-24T16:09:20",
      "upload_time_iso_8601": "2020-07-24T16:09:20.175478Z",
      "url": "https://files.pythonhosted.org/packages/f5/05/0b07d615fd5362b12b01529081371d51159e0959726ab0a0517ee6107855/django-disposable-email-checker-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}