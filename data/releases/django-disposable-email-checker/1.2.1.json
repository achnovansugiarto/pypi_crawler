{
  "info": {
    "author": "Aaron Bassett",
    "author_email": "aaron@rawtech.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "=============================\ndjango-disposable-email-checker\n=============================\n\n[![PyPI version](https://badge.fury.io/py/django-disposable-email-checker.png)](https://pypi.python.org/pypi/django-disposable-email-checker/)\n[![PyPI version](https://travis-ci.org/aaronbassett/DisposableEmailChecker.png?branch=master)](https://travis-ci.org/aaronbassett/DisposableEmailChecker)\n[![Requirements Status](https://requires.io/github/aaronbassett/DisposableEmailChecker/requirements.svg?branch=master)](https://requires.io/github/aaronbassett/DisposableEmailChecker/requirements/?branch=master)\n\nDjango package to detect ~890 & ~8,600 domains used by disposable email services.\nYou can validate any email against our internal list of ~890 domains used by\ndisposable email services. Optionally you can also check each domain against\nthe [Block-Disposable-Email.com](http://block-disposable-email.com) API. Check out\ntheir free tier for 200 API calls a month.\n\nSetup\n-----\n\nInstall the disposable email checker from PyPI\n\n    pip install django-disposable-email-checker\n\nThe disposable email checker comes with a list of ~890 emails. If you would like\nto provide your own email list create a function which returns a list of domains\nto block.\n\n```python\nfrom disposable_email_checker.emails import email_domain_loader\n\ndef custom_email_domain_loader():\n    # Anyone still using AOL will be too much of a customer service burden\n    return [\n        \"aol.com\",\n    ] + email_domain_loader()\n```\n\nThen add the complete path including function name to your settings\n\n```python\nDEC_LOADER = \"my.package.custom_email_domain_loader\"\n```\n\nIf you would like to use the [BDE](http://block-disposable-email.com)\nintegration add your API key to your Django settings\n\n```python\nBDEA_APIKEY = \"abcnotarealkey123\"\n```\n\noptionally you can configure the BDE API timeout in seconds (default 5)\n\n```python\nBDEA_TIMEOUT = 2\n```\n\nAdding to your models\n---------------------\n\nOnce you have completed setup add the `DisposableEmailField` to your models.\n\n```python\nfrom disposable_email_checker.fields import DisposableEmailField\n\nclass MyModel(models.Model):\n    email = DisposableEmailField()\n```\n\nThe `DisposableEmailField` has a few optional arguments\n\n* **whitelist** - A list of emails which will always be allowed. Defaults\nto `[]`\n* **message** - The error message used by ValidationError if validation\nfails. Defaults to `_('Blocked email provider.')`\n* **code** - The error code used by ValidationError if validation fails.\nDefaults to \"invalid\".\n\nUsing the validator\n-------------------\n\nIf you want to use the validator by itself\n\n```python\nfrom django.core.exceptions import ValidationError\nfrom disposable_email_checker.validators import validate_disposable_email\n\ntry:\n    validate_disposable_email(email)\nexcept ValidationError:\n    pass\n```",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aaronbassett/DisposableEmailChecker",
    "keywords": "DisposableEmailChecker",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-disposable-email-checker",
    "package_url": "https://pypi.org/project/django-disposable-email-checker/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-disposable-email-checker/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/aaronbassett/DisposableEmailChecker"
    },
    "release_url": "https://pypi.org/project/django-disposable-email-checker/1.2.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django package to detect ~890 domains used by disposable email services",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13546321,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f9bd7ef5f1dd983a4a610b4097a8092010ef95dbf8a3fe780277dfd6c308994",
        "md5": "22ab9aa6c095bd7bdc6c03b0337d9790",
        "sha256": "4ca1010f7199c41efa4f8f4fdcfbe5db32166c9d9bb95d75a97924f4469ef0bf"
      },
      "downloads": -1,
      "filename": "django_disposable_email_checker-1.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "22ab9aa6c095bd7bdc6c03b0337d9790",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 14283,
      "upload_time": "2015-11-04T01:29:43",
      "upload_time_iso_8601": "2015-11-04T01:29:43.972018Z",
      "url": "https://files.pythonhosted.org/packages/3f/9b/d7ef5f1dd983a4a610b4097a8092010ef95dbf8a3fe780277dfd6c308994/django_disposable_email_checker-1.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88a27e739905fa30e618d1e81e5962cfb77220a79fc8f681d533b473a46ba1d1",
        "md5": "6b02bc8d0a546d226fe85483b156e436",
        "sha256": "ea557604091df19e3e88a999464bc47bc2a5afd840414d8965bf5b6ed98ea87f"
      },
      "downloads": -1,
      "filename": "django-disposable-email-checker-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6b02bc8d0a546d226fe85483b156e436",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13852,
      "upload_time": "2015-11-04T01:29:22",
      "upload_time_iso_8601": "2015-11-04T01:29:22.531567Z",
      "url": "https://files.pythonhosted.org/packages/88/a2/7e739905fa30e618d1e81e5962cfb77220a79fc8f681d533b473a46ba1d1/django-disposable-email-checker-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}