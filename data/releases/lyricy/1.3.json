{
  "info": {
    "author": "Yogeshwaran R",
    "author_email": "yogeshin247@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!-- headings -->\n\n<h1 align=\"center\"> ðŸŽ¼ lyricy </h1>\n\n<p align=\"center\">A command line lyrics utility tool which search and add lyrics to your offline songs.</p>\n\n<!-- Badges -->\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/lyricy/\">\n    <img alt=\"PyPi\" src=\"https://img.shields.io/pypi/v/lyricy.svg\"/>\n    </a>\n    <a href=\"https://pepy.tech/project/lyricy\">\n    <img alt=\"Downloads\" src=\"https://pepy.tech/badge/lyricy\"/>\n    </a>\n    <a href=\"https://github.com/yogeshwaran01/lyricy/stargazers\"><img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/yogeshwaran01/lyricy\"></a>\n    <a href=\"https://github.com/yogeshwaran01/lyricy/network\">\n    <img alt=\"GitHub forks\" src=\"https://img.shields.io/github/forks/yogeshwaran01/lyricy\"></a>\n    <a href=\"https://github.com/yogeshwaran01/lyricy/blob/master/LICENSE.txt\">\n    <img alt=\"GitHub license\" src=\"https://img.shields.io/github/license/yogeshwaran01/lyricy?color=blue\"/>\n    </a>\n    <a href=\"https://github.com/psf/black\">\n    <img alt=\"Code style\" src=\"https://img.shields.io/badge/codestyle-Black-blue\"/>\n    </a>\n    <img alt=\"GitHub Repo size\" src=\"https://img.shields.io/github/repo-size/yogeshwaran01/lyricy\"/>\n    <a href=\"https://github.com/yogeshwaran01/lyricy/actions/workflows/python-publish.yml\">\n    <img alt=\"Upload lyricy to pypi\" src=\"https://github.com/yogeshwaran01/lyricy/actions/workflows/python-publish.yml/badge.svg\"/>\n    </a>\n    <a href=\"https://github.com/yogeshwaran01/lyricy/actions/workflows/python-package.yml\">\n    <img alt=\"Python package\" src=\"https://github.com/yogeshwaran01/lyricy/actions/workflows/python-package.yml/badge.svg\"/>\n    </a>\n</p>\n\n</hr>\n\n## Why lyricy ?\n\nWe can use [spotDL/spotify-downloader](https://github.com/spotDL/spotify-downloader) to download our spotify playlist and songs along with album art and metadata. But it does not add the lyrics of the songs in song metadata. lyricy search for the lyrics of the song add to song metadata.\n\nyou can use [Retro music player](https://github.com/RetroMusicPlayer/RetroMusicPlayer) for android to listen the offline local songs with synced lyrics.\n\n## Features\n\n- Used as a Python package, Desktop application and mobile application (PWA)\n- Easy to add lyrics to your offline songs\n- Preview of lyrics\n- Synced lyrics with lrc time tags\n- Lyrics without lrc tags\n- Save lyrics as lrc file\n- Add your own lyrics or downloaded lyrics to songs\n\n## Usage\n\n- [Using as GUI tool](#gui)\n- [Using as a CLI tool](#cli)\n- [Using as a python package](#python-package)\n\n### GUI\n\nGUI is built with [flet](https://flet.dev/)\n\n![demo](https://raw.githubusercontent.com/yogeshwaran01/lyricy/master/demo/dem_lyricy_gui.gif)\n\n- [Web Application](https://lyricy.yogeshwaran01.repl.co/#/)\n- [Desktop Application for Linux](https://github.com/yogeshwaran01/lyricy/releases/download/1.2/lyricy-gui-linux.tar.gz)\n- [Desktop Application for Windows](https://github.com/yogeshwaran01/lyricy/releases/download/1.2/lyricy-gui-windows.zip)\n- Use PWA to install in android\n\n### CLI\n\n#### Installation\n\nUsing pip\n\n```bash\npip install lyricy\n```\n\nWindows user download this [executable file](https://github.com/yogeshwaran01/lyricy/releases/download/1.2/lyricy.exe)\n\n![demo](https://github.com/yogeshwaran01/lyricy/blob/master/demo/demo_lyricy.gif?raw=true)\n\n```txt\nUsage: python -m lyricy [OPTIONS] COMMAND [ARGS]...\n\n  A command line lyrics utility tool which search and add lyrics to your\n  offline songs.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  add     Search and add lyrics to given TRACK.\n  remove  Remove lyrics from given TRACK.\n  search  Search for lyrics for given track or query\n  show    Show the lyrics of TRACK if available.\n```\n\n- [Searching for lyrics using your queries](#searching-for-lyrics-using-your-queries)\n- [Searching for lyrics for your track](#searching-for-lyrics-for-your-track)\n- [Adding lyrics](#adding-lyrics)\n- [Remove lyrics](#remove-lyrics)\n- [Changing lyrics provider](#changing-lyrics-provider)\n- [Show lyrics](#show-lyrics)\n- [Downloading lrc file](#downloading-lrc-file)\n- [Add lrc file to song](#add-lrc-file-to-song)\n\n#### Searching for lyrics using your queries\n\n```txt\nUsage: python -m lyricy search [OPTIONS]\n\n  Search for lyrics for given track or query\n\nOptions:\n  -t, --track PATH       file path of track\n  -d, --disable-preview  Disable the preview\n  -l, --only-lyrics      Show Lyrics Only (without LRC tag)\n  -s, --save TEXT        Save file as .lrc\n  -q, --query TEXT       search query of track name\n  -p, --provider TEXT    Lyrics provider name [rc] or [mo]\n  --help                 Show this message and exit.\n```\n\n```bash\nlyricy search --query \"jolly yo gymkanna\"\n```\n\n#### Searching for lyrics for your track\n\nTrack must have album metadata `title`\n\n```bash\nlyricy search --track 'Imagine Dragons - Believer.mp3'\n```\n\nAfter searching it print list of lyrics, enter the index number lyrics to get the full lyrics\n\n#### Adding lyrics\n\nAdding lyrics to track metadata to get synced lyrics\n\n```txt\nUsage: python -m lyricy add [OPTIONS] TRACK\n\n  Search and add lyrics to given TRACK.\n\n  TRACK is the filepath of track.\n\nOptions:\n  -q, --query TEXT       search for this query instead of track name\n  -d, --disable-preview  Disable the preview\n  --show                 Print the lyrics and ask for confirmation\n  --lrc PATH             Lyrics file to add on track\n  -p, --provider TEXT    Lyrics provider name [rc] or [mo]\n  --help                 Show this message and exit.\n```\n\n```bash\nlyricy add 'Imagine Dragons - Believer.mp3'\n```\n\nselect the preferred lyrics for the song to add it\n\nIf track does not have metadata `title` or any other irrelevant name, use can use `--query` option to override this.\n\n```bash\nlyricy add 'some-track.mp3' --query \"vikram title track\"\n```\n\n#### Changing lyrics provider\n\nBy default the lyrics provider is is megalobiz, but you can use other provider is rclyricsband\n\n- `rc` for [https://rclyricsband.com/](https://rclyricsband.com/)\n- `mo` for [https://www.megalobiz.com/](https://www.megalobiz.com/)\n\n```bash\nlyricy add 'some-track.mp3' --query \"vikram title track\" --provider rc\n```\n\n```bash\nlyricy search --query \"karka kark\" --provider mo\n```\n\n#### Remove lyrics\n\n```txt\nUsage: lyricy remove [OPTIONS] TRACK\n\n  Remove lyrics from given TRACK.\n\n  TRACK is the filepath of track.\n\nOptions:\n  --help  Show this message and exit.\n```\n\n```bash\nlyricy remove 'Imagine Dragons - Believer.mp3'\n```\n\n#### Show lyrics\n\n```txt\nUsage: lyricy show [OPTIONS] TRACK\n\n  Show the lyrics of TRACK if available.\n\n  TRACK is the filepath of track.\n\nOptions:\n  -l, --only-lyrics  Show Lyrics Only (without LRC tag)\n  --help             Show this message and exit.\n```\n\n```bash\nlyricy show 'Imagine Dragons - Believer.mp31\n```\n\n#### Downloading lrc file\n\n```bash\nlyricy search --query \"new york\" --save \"new_york\"\n```\n\nThis search and ask for the prompt, select any song it will download and save as `lrc` file\n\n#### Add lrc file to song\n\n```bash\nlyricy add track.mp3 --lrc track.lrc\n```\n\nIt will add the lyrics to song metadata\n\n### Python Package\n\n#### Install\n\nUsing pip\n\n```bash\npip install lyricy\n```\n\n#### Simple Usage\n\n```python\n>>> from lyricy import Lyricy\n\n>>> l = Lyricy()\n>>> results = l.search(\"karka karka\")\n>>> selected_lyrics = results[0]\n>>> selected_lyrics.fetch()\n\n>>> selected_lyrics.lyrics\n>>> selected_lyrics.lyrics_without_lrc_tags\n\n```\n\n#### Saving and adding lyrics to track\n\n```python\n>>> selected_lyrics.save(\"lyrics.lrc\")\n>>> selected_lyrics.add_to_track(\"path_to_track.mp3\")\n```\n\n#### Using Other Providers\n\nDefault provider is [https://www.megalobiz.com/](https://www.megalobiz.com/), but you can use other provider is [https://rclyricsband.com/](https://rclyricsband.com/).\n\n```python\n>>> from lyricy import Lyricy, Providers\n\n>>> l = Lyricy()\n>>> results = l.search(\"vikram\", provider=Providers.RCLYRICSBAND)\n>>> selected_lyrics = results[0]\n>>> selected_lyrics.fetch()\n\n>>> selected_lyrics.lyrics\n>>> selected_lyrics.lyrics_without_lrc_tags\n```\n\n## Lyrics Providers\n\n- [https://www.megalobiz.com/](https://www.megalobiz.com/)\n- [https://rclyricsband.com/](https://rclyricsband.com/)\n\n## Contributions\n\nContributions are Welcome. Feel free to report bugs in issue and fix some bugs by creating pull requests. Comments, Suggestions, Improvements and Enhancements are always welcome.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yogeshwaran01/lyricy/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yogeshwaran01/lyricy",
    "keywords": "python package lyrics lrc yogeshwaran01 songs",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lyricy",
    "package_url": "https://pypi.org/project/lyricy/",
    "platform": null,
    "project_url": "https://pypi.org/project/lyricy/",
    "project_urls": {
      "Download": "https://github.com/yogeshwaran01/lyricy/archive/master.zip",
      "Homepage": "https://github.com/yogeshwaran01/lyricy"
    },
    "release_url": "https://pypi.org/project/lyricy/1.3/",
    "requires_dist": [
      "beautifulsoup4 (==4.11.1)",
      "certifi (==2022.6.15)",
      "charset-normalizer (==2.1.0)",
      "click (==8.1.3)",
      "commonmark (==0.9.1)",
      "idna (==3.3)",
      "music-tag (==0.4.3)",
      "mutagen (==1.45.1)",
      "Pygments (==2.12.0)",
      "pylrc (==0.1.2)",
      "requests (==2.28.1)",
      "rich (==12.4.4)",
      "soupsieve (==2.3.2.post1)",
      "urllib3 (==1.26.9)"
    ],
    "requires_python": "",
    "summary": "A command line lyrics utility tool which     search and add lyrics to your offline songs.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16958249,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5895a27ab9ca3f6f23f02c3e8b10918a84c8972c044700b41ab7f9746d51a3a1",
        "md5": "1ad6afff466df4763d044679c21ae3a6",
        "sha256": "a6db1596341bd8e5c1c1d6286c7fe42cfc0205b875678ece7bab5bce27779161"
      },
      "downloads": -1,
      "filename": "lyricy-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ad6afff466df4763d044679c21ae3a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9671,
      "upload_time": "2022-08-31T08:30:55",
      "upload_time_iso_8601": "2022-08-31T08:30:55.555499Z",
      "url": "https://files.pythonhosted.org/packages/58/95/a27ab9ca3f6f23f02c3e8b10918a84c8972c044700b41ab7f9746d51a3a1/lyricy-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf48125d5dffee8821aca5c96861324ca8dfde2614b8979b97f0088b8c4d1823",
        "md5": "047851b7238e3d83a46798bb08c743c4",
        "sha256": "c9f2c8b7ca072753ad204c6c09caf817f022f422cfc49e6ff9d16ece5e96c898"
      },
      "downloads": -1,
      "filename": "lyricy-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "047851b7238e3d83a46798bb08c743c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10216,
      "upload_time": "2022-08-31T08:30:57",
      "upload_time_iso_8601": "2022-08-31T08:30:57.379841Z",
      "url": "https://files.pythonhosted.org/packages/bf/48/125d5dffee8821aca5c96861324ca8dfde2614b8979b97f0088b8c4d1823/lyricy-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}