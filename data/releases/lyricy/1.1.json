{
  "info": {
    "author": "Yogeshwaran R",
    "author_email": "yogeshin247@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ðŸŽ¼ lyricy\n\nA command line lyrics utility tool which search and add lyrics to your offline songs.\n\n## Why lyricy ?\n\nWe can use [spotDL/spotify-downloader](https://github.com/spotDL/spotify-downloader) to download our spotify playlist and songs along with album art and metadata. But it does not add the lyrics of the songs in song metadata. lyricy search for the lyrics of the song add to song metadata.\n\nyou can use [Retro music player](https://github.com/RetroMusicPlayer/RetroMusicPlayer) for andriod to listen the offlice local songs with synced lyrics.\n\n## Installation\n\nUsing pip\n\n```bash\npip install lyricy\n```\n\n## Features\n\n- Easy to add lyrics to your offline songs\n- Preview of lyrics\n- Synced lyrics with lru time tags\n- Lyrics without lru tags\n- Save lyrics as lru file\n- Add your own lyrics or downloaed lyrics to songs\n\n## Usage\n\n![demo](https://github.com/yogeshwaran01/lyricy/blob/master/demo/demo_lyricy.gif?raw=true)\n\n```txt\nUsage: lyricy [OPTIONS] COMMAND [ARGS]...\n\n  A CLI lyrics utility tool\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  add     Search and add lyrics to given TRACK.\n  remove  Remove lyrics from given TRACK.\n  search  Search for lyrics for given track or query\n  show    Show the lyrics of TRACK if available.\n```\n\n- [Searching for lyrics using your queries](#searching-for-lyrics-using-your-queries)\n- [Searching for lyrics for your track](#searching-for-lyrics-for-your-track)\n- [Adding lyrics](#adding-lyrics)\n- [Remove lyrics](#remove-lyrics)\n- [Show lyrics](#show-lyrics)\n- [Downloading lrc file](#downloading-lrc-file)\n- [Add lrc file to song](#add-lrc-file-to-song)\n\n### Searching for lyrics using your queries\n\n```txt\nUsage: python -m lyricy search [OPTIONS]\n\n  Search for lyrics for given track or query\n\nOptions:\n  -t, --track PATH       file path of track\n  -d, --disable-preview  Disable the preview\n  -l, --only-lyrics      Show Lyrics Only (without LRC tag)\n  -s, --save TEXT        Save file as .lrc\n  -q, --query TEXT       search query of track name\n  --help                 Show this message and exit\n```\n\n```bash\nlyricy search --query \"jolly yo gymkanna\"\n```\n\n### Searching for lyrics for your track\n\nTrack must have ablum metameta `title`\n\n```bash\nlyricy search --track 'Imagine Dragons - Believer.mp3'\n```\n\nAfter searching it print list of lyrics, enter the index number lyrics to get the full lyrics\n\n### Adding lyrics\n\nAdding lyrics to track metadata to get synced lyrics\n\n```txt\nUsage: python -m lyricy add [OPTIONS] TRACK\n\n  Search and add lyrics to given TRACK.\n\n  TRACK is the filepath of track.\n\nOptions:\n  -q, --query TEXT       search for this query instead of track name\n  -d, --disable-preview  Disable the preview\n  --show                 Print the lyrics and ask for confirmation\n  --lru PATH             Lyrics file to add on track\n  --help                 Show this message and exit.\n```\n\n```bash\nlyricy add 'Imagine Dragons - Believer.mp3'\n```\n\nselect the prefferd lyrics for the song to add it\n\nIf track does not have metadata `title` or any other unrevelant name, use can use `--query` option to override this.\n\n```bash\nlyricy add 'some-track.mp3' --query \"vikram title track\"\n```\n\n### Remove lyrics\n\n```txt\nUsage: lyricy remove [OPTIONS] TRACK\n\n  Remove lyrics from given TRACK.\n\n  TRACK is the filepath of track.\n\nOptions:\n  --help  Show this message and exit.\n```\n\n```bash\nlyricy remove 'Imagine Dragons - Believer.mp3'\n```\n\n### Show lyrics\n\n```txt\nUsage: lyricy show [OPTIONS] TRACK\n\n  Show the lyrics of TRACK if available.\n\n  TRACK is the filepath of track.\n\nOptions:\n  -l, --only-lyrics  Show Lyrics Only (without LRC tag)\n  --help             Show this message and exit.\n```\n\n```bash\nlyricy show 'Imagine Dragons - Believer.mp31\n```\n\n### Downloading lrc file\n\n```bash\nlyricy search --query \"new york\" --save \"new_york\"\n```\n\nThis search and ask for the prompt, select any song it will download and save as `lrc` file\n\n### Add lrc file to song\n\n```bash\nlyricy add track.mp3 --lru track.lru\n```\n\nIt will add the lyrics to song metadata\n\n## Source of lyrics\n\nAll lyrics are scraped from [https://www.megalobiz.com/](https://www.megalobiz.com/)\n\n## Contributions\n\nContributions are Welcome. Feel free to report bugs in issue and fix some bugs by creating pull requests. Comments, Suggestions, Improvements and Enhancements are always welcome.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yogeshwaran01/lyricy/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yogeshwaran01/lyricy",
    "keywords": "python package lyrics lrc yogeshwaran01 songs",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lyricy",
    "package_url": "https://pypi.org/project/lyricy/",
    "platform": null,
    "project_url": "https://pypi.org/project/lyricy/",
    "project_urls": {
      "Download": "https://github.com/yogeshwaran01/lyricy/archive/master.zip",
      "Homepage": "https://github.com/yogeshwaran01/lyricy"
    },
    "release_url": "https://pypi.org/project/lyricy/1.1/",
    "requires_dist": [
      "beautifulsoup4 (==4.11.1)",
      "certifi (==2022.6.15)",
      "charset-normalizer (==2.1.0)",
      "click (==8.1.3)",
      "commonmark (==0.9.1)",
      "idna (==3.3)",
      "music-tag (==0.4.3)",
      "mutagen (==1.45.1)",
      "Pygments (==2.12.0)",
      "pylrc (==0.1.2)",
      "requests (==2.28.1)",
      "rich (==12.4.4)",
      "soupsieve (==2.3.2.post1)",
      "urllib3 (==1.26.9)"
    ],
    "requires_python": "",
    "summary": "A command line lyrics utitly tool which     search and add lyrics to your offline songs.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16958249,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2febb404a26460c95b2bb54abf2f80cfa3a176811d32b697dcc2a12fd50d8284",
        "md5": "cc1a0d8d153cd993099f14ecabbb97ae",
        "sha256": "2f394c7e26a4174bcc4586f719306a4bc02436e4d044c0b7a0452cc3aba1952b"
      },
      "downloads": -1,
      "filename": "lyricy-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc1a0d8d153cd993099f14ecabbb97ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7002,
      "upload_time": "2022-07-13T14:07:17",
      "upload_time_iso_8601": "2022-07-13T14:07:17.668081Z",
      "url": "https://files.pythonhosted.org/packages/2f/eb/b404a26460c95b2bb54abf2f80cfa3a176811d32b697dcc2a12fd50d8284/lyricy-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e73fc2089c622e81a6ab9ac9919cc1544c4c15ce67f193d1b819a8468d907b9f",
        "md5": "c32f130d321daff0652ee41470cd2c5e",
        "sha256": "294323ced0e08e66c594bd37bca0f4bf4c790905fe6df4e3d753ec8531fe516c"
      },
      "downloads": -1,
      "filename": "lyricy-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c32f130d321daff0652ee41470cd2c5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6348,
      "upload_time": "2022-07-13T14:07:19",
      "upload_time_iso_8601": "2022-07-13T14:07:19.360294Z",
      "url": "https://files.pythonhosted.org/packages/e7/3f/c2089c622e81a6ab9ac9919cc1544c4c15ce67f193d1b819a8468d907b9f/lyricy-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}