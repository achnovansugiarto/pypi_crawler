{
  "info": {
    "author": "William Minchin",
    "author_email": "w_minchin@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=============\nJinja Filters\n=============\n\n``Jinja Filters`` is a plugin for `Pelican <http://docs.getpelican.com/>`_,\na static site generator written in Python.\n\n``Jinja Filters`` provides a selection of functions (called *filters*) for\ntemplates to use when building your website. They are packaged for Pelican, but\nmay prove useful for other projects that make use of\n`Jinja2 <http://jinja.pocoo.org/>`_.\n\n\nInstallation\n============\n\nThe easiest way to install ``Jinja Filters`` is through the use of pip. This\nwill also install the required dependencies (currently ``pelican`` and\n``titlecase``) automatically.\n\n.. code-block:: sh\n\n  pip install minchin.pelican.jinja_filters\n\nThen, in your ``pelicanconf.py`` file, add ``Jinja Filters`` to your list of\nplugins:\n\n.. code-block:: python\n\n  PLUGINS = [\n              # ...\n              'minchin.pelican.jinja_filters',\n              # ...\n            ]\n\nAnd that's it! The filters are now available for use in your templates.\n\n\nUsage\n=====\n\nAt present, the plugin includes the following filters:\n\n- ``datetime`` |--| allows you to change to format displayed for a datetime\n  object. Optionally supply a `datetime format string\n  <https://docs.python.org/3.6/library/datetime.html#strftime-and-strptime-behavior>`_\n  to get a custom format.\n- ``article_date`` |--| a specialized version of ``datetime`` that returns\n  datetimes as wanted for article dates; speciefically\n  *Friday, November 4, 2016*.\n- ``breaking_spaces`` |--| replaceds non-breaking spaces (HTML code *&nbsp*)\n  with normal spaces.\n- ``titlecase`` |--| Titlecases the supplied string\n\nFor example, within your theme templates, you might have code like:\n\n.. code-block:: html+jinja\n\n    <span class=\"published\">\n        Article Published {{ article.date | article_date }}\n    </span>\n\ngives::\n\n    Article Published Friday, November 4, 2016\n\nOr with your own dateformat:\n\n.. code-block:: html+jinja\n\n    <span class=\"published\">\n        Article Published {{ article.date | datetime('%b %d, %Y') }}\n    </span>\n\ngives::\n\n    Article Published Nov 04, 2016\n\nFItlers can also be chained, or applied in sequence. For example to remove\nbreaking spaces and then titlecase a catgory name, you might have code like:\n\n.. code-block:: html+jinja\n\n    <a href=\"{{ SITEURL }}/{{ article.category.url }}\">\n        {{ article.category | breaking_spaces | titlecase}}\n    </a>\n\n\n.. |--| unicode:: U+2013   .. en dash",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MinchinWeb/minchin.pelican.jinja_filters",
    "keywords": null,
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "minchin.pelican.jinja-filters",
    "package_url": "https://pypi.org/project/minchin.pelican.jinja-filters/",
    "platform": "any",
    "project_url": "https://pypi.org/project/minchin.pelican.jinja-filters/",
    "project_urls": {
      "Homepage": "https://github.com/MinchinWeb/minchin.pelican.jinja_filters"
    },
    "release_url": "https://pypi.org/project/minchin.pelican.jinja-filters/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Jinja Filters for Pelican.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10215873,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c6984dc641ef744115a26e5ae2eaba27cf0e63e03e3beed6f8e24111a328a35",
        "md5": "671dce947d983bec4bcfe53d8400096b",
        "sha256": "03fdc56f5cccef476ebbfae27b41429a60a51f809c030279795da865466f03f4"
      },
      "downloads": -1,
      "filename": "minchin.pelican.jinja_filters-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "671dce947d983bec4bcfe53d8400096b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7265,
      "upload_time": "2016-11-19T00:20:51",
      "upload_time_iso_8601": "2016-11-19T00:20:51.074732Z",
      "url": "https://files.pythonhosted.org/packages/6c/69/84dc641ef744115a26e5ae2eaba27cf0e63e03e3beed6f8e24111a328a35/minchin.pelican.jinja_filters-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ba1fff480482e8bf81a782eb728f0e05972dc6981be62a6f5f6bd2abc4adaea",
        "md5": "a3733f39192ef2aaa34a6bdc5846acbe",
        "sha256": "8de8a9d9a4e995e88253abcc6a84f0778b5e872051431832747a9ebef40d7237"
      },
      "downloads": -1,
      "filename": "minchin.pelican.jinja_filters-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a3733f39192ef2aaa34a6bdc5846acbe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4782,
      "upload_time": "2016-11-19T00:19:37",
      "upload_time_iso_8601": "2016-11-19T00:19:37.422875Z",
      "url": "https://files.pythonhosted.org/packages/0b/a1/fff480482e8bf81a782eb728f0e05972dc6981be62a6f5f6bd2abc4adaea/minchin.pelican.jinja_filters-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}