{
  "info": {
    "author": "Nathan Fradet",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Multimedia :: Sound/Audio :: MIDI",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# MidiTok\n\nPython package to tokenize MIDI music files, presented at the ISMIR 2021 LBD.\n\n[![PyPI version fury.io](https://badge.fury.io/py/miditok.svg)](https://pypi.python.org/pypi/miditok/)\n[![Python 3.7](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/release/)\n[![Documentation Status](https://readthedocs.org/projects/miditok/badge/?version=latest)](https://miditok.readthedocs.io/en/latest/?badge=latest)\n![GitHub CI](https://github.com/Natooz/MidiTok/actions/workflows/pytest.yml/badge.svg)\n[![Codecov](https://img.shields.io/codecov/c/github/Natooz/MidiTok)](https://codecov.io/gh/Natooz/MidiTok)\n[![GitHub license](https://img.shields.io/github/license/Natooz/MidiTok.svg)](https://github.com/Natooz/MidiTok/blob/main/LICENSE)\n[![Downloads](https://pepy.tech/badge/MidiTok)](https://pepy.tech/project/MidiTok)\n[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n![MidiTok Logo](https://github.com/Natooz/MidiTok/blob/assets/assets/logo.png?raw=true \"\")\n\n\nMidiTok converts MIDI music files into sequences of tokens, ready to be fed to sequential deep learning models like Transformers.\nMidiTok features most known [MIDI tokenizations](https://miditok.readthedocs.io/en/latest/tokenizations.html) (e.g. [REMI](https://arxiv.org/abs/2002.00212), [Compound Word](https://arxiv.org/abs/2101.02402)...), and is built around the idea that they all share common parameters and methods. It contains methods allowing to properly pre-process any MIDI file, and also supports Byte Pair Encoding (BPE).\n\n**Documentation:** [miditok.readthedocs.com](https://miditok.readthedocs.io/en/latest/index.html)\n\n## Install\n\n```shell\npip install miditok\n```\nMidiTok uses [MIDIToolkit](https://github.com/YatingMusic/miditoolkit), which itself uses [Mido](https://github.com/mido/mido) to read and write MIDI files, and BPE is backed by [Hugging Face ü§ótokenizers](https://github.com/huggingface/tokenizers) for super fast encoding.\n\n## Usage example\n\nThe most basic and useful methods are summurized here.\n\n```python\nfrom miditok import REMI\nfrom miditok.utils import get_midi_programs\nfrom miditoolkit import MidiFile\nfrom pathlib import Path\n\n# Creates the tokenizer and loads a MIDI\ntokenizer = REMI()  # using the default parameters, read the documentation to customize your tokenizer\nmidi = MidiFile('path/to/your_midi.mid')\n\n# Converts MIDI to tokens, and back to a MIDI\ntokens = tokenizer(midi)  # automatically detects MIDIs and tokens before converting\nconverted_back_midi = tokenizer(tokens, get_midi_programs(midi))  # PyTorch / Tensorflow / Numpy tensors supported\n\n# Converts MIDI files to tokens saved as JSON files\nmidi_paths = list(Path('path', 'to', 'dataset').glob('**/*.mid'))\ndata_augmentation_offsets = [2, 2, 1]  # data augmentation on 2 pitch octaves, 2 velocity and 1 duration values\ntokenizer.tokenize_midi_dataset(midi_paths, Path('path', 'to', 'tokens_noBPE'),\n                                data_augment_offsets=data_augmentation_offsets)\n\n# Constructs the vocabulary with BPE, from the tokenized files\ntokenizer.learn_bpe(\n    vocab_size=500,\n    tokens_paths=list(Path('path', 'to', 'tokens_noBPE').glob(\"**/*.json\")),\n    start_from_empty_voc=False,\n)\n\n# Converts the tokenized musics into tokens with BPE\ntokenizer.apply_bpe_to_dataset(Path('path', 'to', 'tokens_noBPE'), Path('path', 'to', 'tokens_BPE'))\n```\n\n## Tokenizations\n\n* [REMI](https://arxiv.org/abs/2002.00212)\n* [MIDI-Like](https://link.springer.com/article/10.1007/s00521-018-3758-9)\n* [TSD](https://arxiv.org/abs/2301.11975)\n* [Structured](https://arxiv.org/abs/2107.05944)\n* [CPWord](https://ojs.aaai.org/index.php/AAAI/article/view/16091)\n* [Octuple](https://aclanthology.org/2021.findings-acl.70)\n* [MuMIDI]()\n\n## Limitations\n\nTokenizations using Bar tokens (REMI, Compound Word and MuMIDI) **only considers a 4/x time signature** for now. This means that each bar is considered covering 4 beats.\n\n## Contributions\n\nContributions are gratefully welcomed, feel free to open an issue or send a PR if you want to add a tokenization or speed up the code. Just make sure your modifications pass the [tests](tests), and format your code with [black](https://github.com/psf/black).\n\n### Todo\n\n* Time Signature\n* Control Change messages\n* Option to represent pitch values as pitch intervals, as [it seems to improve performances](https://ismir2022program.ismir.net/lbd_369.html).\n* Speeding up MIDI read / load (Rust / C++ binding)\n* Data augmentation on duration values at the MIDI level\n\n## Citation\n\nIf you use MidiTok for your research, a citation in your manuscript would be gladly appreciated. ‚ù§Ô∏è\n\n[**MidiTok paper**](https://archives.ismir.net/ismir2021/latebreaking/000005.pdf)\n```bibtex\n@inproceedings{miditok2021,\n    title={{MidiTok}: A Python package for {MIDI} file tokenization},\n    author={Fradet, Nathan and Briot, Jean-Pierre and Chhel, Fabien and El Fallah Seghrouchni, Amal and Gutowski, Nicolas},\n    booktitle={Extended Abstracts for the Late-Breaking Demo Session of the 22nd International Society for Music Information Retrieval Conference},\n    year={2021},\n    url={https://archives.ismir.net/ismir2021/latebreaking/000005.pdf},\n}\n```\n\nThe BibTeX citations of all tokenizations can be found [in the documentation](https://miditok.readthedocs.io/en/latest/citations.html)\n\n\n## Acknowledgments\n\nWe acknowledge [Aubay](https://blog.aubay.com/index.php/language/en/home/?lang=en), the [LIP6](https://www.lip6.fr/?LANG=en), [LERIA](http://blog.univ-angers.fr/leria/n) and [ESEO](https://eseo.fr/en) for the financing and support of this project.\nSpecial thanks to all the contributors.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Natooz/MidiTok",
    "keywords": "artificial intelligence,deep learning,transformer,midi,tokenization,music,mir",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miditok",
    "package_url": "https://pypi.org/project/miditok/",
    "platform": null,
    "project_url": "https://pypi.org/project/miditok/",
    "project_urls": {
      "Homepage": "https://github.com/Natooz/MidiTok"
    },
    "release_url": "https://pypi.org/project/miditok/2.0.0/",
    "requires_dist": [
      "numpy (<1.24,>=1.19)",
      "miditoolkit (>=0.1.16)",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "A convenient MIDI tokenizer for Deep Learning networks, with multiple encoding strategies",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17376317,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4fba301b6628d34e823844985ccec4ac976c471428a2985b6731bfeb41d1cab",
        "md5": "da9b528e20bf7d4c5777a36bd1cf5eae",
        "sha256": "9eb9c4888f710f1be0c1f1b5499b6d60e63170fd6f7b739f18ca2e6ad82d3cb3"
      },
      "downloads": -1,
      "filename": "miditok-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da9b528e20bf7d4c5777a36bd1cf5eae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 84434,
      "upload_time": "2023-03-04T10:08:38",
      "upload_time_iso_8601": "2023-03-04T10:08:38.710874Z",
      "url": "https://files.pythonhosted.org/packages/d4/fb/a301b6628d34e823844985ccec4ac976c471428a2985b6731bfeb41d1cab/miditok-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5113d1acf40650df3b2d2ed16ba5252020c872f5d13e9d2b275477d8916570eb",
        "md5": "719e8732e6b720ab99656857bb07d66c",
        "sha256": "99209b14246f8b4a3e4a395aa2bc0e529ac8a4f0ea010a9ce50bfc5a5ccaeb68"
      },
      "downloads": -1,
      "filename": "miditok-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "719e8732e6b720ab99656857bb07d66c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 69870,
      "upload_time": "2023-03-04T10:08:40",
      "upload_time_iso_8601": "2023-03-04T10:08:40.459052Z",
      "url": "https://files.pythonhosted.org/packages/51/13/d1acf40650df3b2d2ed16ba5252020c872f5d13e9d2b275477d8916570eb/miditok-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}