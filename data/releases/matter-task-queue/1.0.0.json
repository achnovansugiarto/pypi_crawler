{
  "info": {
    "author": "",
    "author_email": "Tomer Sasson <tomer@thisismatter.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# matter-task-queue\n\nThe Task Queue Library is a Python library that provides functionality for managing queues and integrates Celery into FastAPI apps. It enables a seamless integration that unlocks all of Celery's capabilities and allows for easy queue management and task execution.\n\nCelery is an open-source, distributed task queue that is widely used in Python-based applications for processing and executing background tasks or long-running processes asynchronously. It was created in 2009 and has since grown into a mature and powerful library that provides a robust and scalable solution for managing task queues.\n\nThe core idea behind Celery is to divide an application into small, independent tasks that can be executed asynchronously in a distributed environment. Tasks are added to a queue, where they wait to be picked up by a worker process. Once a worker picks up a task, it executes it and updates the status of the task. This allows tasks to be executed independently and in parallel, without blocking the main application thread.\n\nCelery provides a number of features that make it a popular choice for managing task queues. It supports a wide range of brokers, including RabbitMQ, Redis, and Amazon SQS, which allows it to work with many different messaging systems. It also provides support for scheduling tasks, task retries, and task prioritization, which makes it easy to build complex workflows.\n\nAnother key feature of Celery is its ability to distribute tasks across multiple worker nodes. This allows tasks to be processed in parallel, which can improve overall performance and scalability. Celery provides several different strategies for distributing tasks, including round-robin, direct, and fanout.\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [License](./LICENSE)\n\n## Installation\n\n```console\npip install matter-task-queue\n```\n\nMake sure that you have set the following ENV values:\n```console\nENV=test-or-local-or-development-or-production\nDEBUG=false\nINSTANCE_NAME=your-webapp-name\nCELERY_BROKER_URL=your-broker-url\nCELERY_LOG_LEVEL=info\nCELERY_LOG_FILE_PATH=/tmp/celery.txt\nAWS_REGION=eu-central-1\nAWS_ENDPOINT_URL=your-aws-enspoint\nSENTRY_DSN=your-sentry-dsn\n```\n\n## Usage\n\nTo use the Task Queue Library in your FastAPI app, you can import the TaskQueue class and create an instance of it:\n\n```python\n# Create api\napp = FastAPI(\n    title=\"My FastAPI Web Service\",\n    root_path=env.PATH_PREFIX,\n)\n\nfrom matter_task_queue import create_celery\napp.celery = create_celery(\n    task_module_paths=[\"your.task.model.paths\", \"\", ...]\n)\n```\n\nThe constructor takes two more optional arguments:\n\ncelery_beat_schedule: The schedule for periodic cron-jobs\ncreate_dead_letter_queue: defaults to True\n\n\n## Contributing\n\nMake sure you have all supported python versions installed in your machine:\n\n* 3.10\n* 3.11\n\n### Install hatch in your system\n\n```https://hatch.pypa.io/latest/install/```\n\n### Create the environment\n\n```console\nhatch env create\n```\n\nDo your changes...\n\n### Run the tests\n\n```console\nhatch run test\n```\n\nThe command above will run the tests against all supported python versions\ninstalled in your machine. For testing in other operating system you may use the\nconfigured CI in github. \n\n### Bump a new version\n\nIn general, you just need to execute:\n\n```console\nhatch version\n```\n\nThis command will update the minor version. i.e.:\nNo breaking changes and new feature has been added\n\nWe are using [semantic version](https://semver.org/), if you are doing a bug fix:\n\n```console\nhatch version fix\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matter-task-queue",
    "package_url": "https://pypi.org/project/matter-task-queue/",
    "platform": null,
    "project_url": "https://pypi.org/project/matter-task-queue/",
    "project_urls": {
      "Documentation": "https://github.com/Matter-Tech/matter-task-queue#readme",
      "Issues": "https://github.com/Matter-Tech/matter-task-queue/issues",
      "Source": "https://github.com/Matter-Tech/matter-task-queue"
    },
    "release_url": "https://pypi.org/project/matter-task-queue/1.0.0/",
    "requires_dist": [
      "celery[sqs]==5.2.7",
      "kombu==5.2.4",
      "matter-exceptions==1.0.1",
      "sentry-sdk==1.17.0; extra == 'sentry'"
    ],
    "requires_python": ">=3.10",
    "summary": "A template for new Matter's library",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17429071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1763c64bcea4bdc9b3389d8f8ce75b4437db458f3e0ba32b818db223d4d80643",
        "md5": "16028afe5820a6bd854c18299e269ee2",
        "sha256": "b35f39716cff60ca57d4843d3f873985abdd917aa5aa62557b2b00c59e81a7b3"
      },
      "downloads": -1,
      "filename": "matter_task_queue-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16028afe5820a6bd854c18299e269ee2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 8583,
      "upload_time": "2023-03-24T09:24:44",
      "upload_time_iso_8601": "2023-03-24T09:24:44.081249Z",
      "url": "https://files.pythonhosted.org/packages/17/63/c64bcea4bdc9b3389d8f8ce75b4437db458f3e0ba32b818db223d4d80643/matter_task_queue-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}