{
  "info": {
    "author": "liyao",
    "author_email": "liyao2598330@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "## django-request-sign\n\n对django请求进行签名效验\n\n### 安装\n\n`pip install django-request-sign`\n\n### 使用\n\n将 `request_sign.middleware.RequestSignMiddleware` 放置到中间件第一位\n\n``` python\n# django settings\nMIDDLEWARE = [\n    'request_sign.middleware.RequestSignMiddleware',\n    ...\n    ...\n]\n```\n\n### 前端支持与示例\n\n需要在header头中增加的参数，这里以[axios](./example/axios/index.js)作为参考,前端签名参考[示例js文件](./example/sign/index.js)\n\n实际使用前请不要忘了删除示例文件中输出的日志信息\n\n\n| 参数  | 说明  |\n| ------------ | ------------ |\n| timestamp  | 请求时间戳  |\n| nonce  |  请求ID（随机生成） |\n| sign | 本次请求签名 |\n\n\n### 配置参数\n\n 配置参数  | 说明 | 类型 | 默认值 | 示例\n------------ | ------------ | ------------ | ------------ |------------ \n  SIGNATURE_DEBUG |开启DEBUG调试| Boolean |`False`| `True`/`False`\n  ENABLE_REQUEST_SIGNATURE |是否开启| Boolean |`False`| `True`/`False`\n  SIGNATURE_SECRET |签名秘钥| Str|`None`|`e6QGz7AhFzFAFsR9jYoCUnZGsqDrQI`\n  SIGNATURE_ALLOW_TIME_ERROR|允许请求时间前后误差|Int|`600`|`600`\n  SIGNATURE_RESPONSE|签名不通过返回方法|Str|`request_sign.utils.default_response`|`you_project.you_app.file.function`\n  SIGNATURE_PASS_URL|不需要验证签名的url|List|[]|`['/api/v1/mcn/content/download']`\n  SIGNATURE_PASS_URL_REGULAR|不需要验证签名的url正则|List|[]|`['/app/*']`\n  SIGNATURE_METHOD|效验请求类型|List|['get', 'post', 'put', 'patch', 'delete', 'head', 'options', 'trace']|['get']\n  NONCE_CACHE_KEY|唯一性检查缓存key名称|Str|\"django_request_sign_nonce_{nonce}\"|\"test_{nonce}\"\n  \n##### 参数说明：SIGNATURE_RESPONSE\n\n```python\nfrom django.http import HttpResponse\n\n# request_sign.utils.default_response\ndef default_response():\n    \"\"\"\n        Must return django HttpResponse type\n    :return: HttpResponse\n    \"\"\"\n    return HttpResponse()\n```\n\n`request_sign.utils.default_response` 方法默认返回http状态码为200的空信息，你可以自行实现一个返回函数，更改 `SIGNATURE_RESPONSE`配置\n即可，但请一定注意，自行实现的函数一定要返回一个django的`HttpResponse`对象，否则django会异常。\n\n##### 参数说明：SIGNATURE_PASS_URL\n在此名单中的请求地址将不会效验签名，如`http://example.com/a/b/c?p=1` 填写：`/a/b/c`即可，主机与请求参数不用填写\n\n1. 在urls.py中配置name属性 `re_path('content/download', views.DownloadContent.as_view(), name='DownloadContent')`，配置中填写name值即可(推荐) \n2. 直接写url(不推荐)\n\n##### 参数说明：NONCE_CACHE_KEY\n传入的key名称会以format函数解析，所以你必须在字符串中包括`{nonce}`\n请求唯一性检查需要设置django-redis，每次请求都会插入一个key来判断唯一性，如果没有安装django-redis则此配置无效\n\n### 签名参数sign生成的方法\n\n1. 拼接字符串，首先去除sign参数本身，然后去除值是空的参数p3，剩下p2=v2&p1=v1&method=cancel&pn=vn，\n然后按参数名字符升序排序，method=cancel&p1=v1&p2=v2&pn=vn.\n2. 然后做参数名和值的拼接，最后得到methodcancelp1v1p2v2pnvn\n3. 在上面拼接得到的字符串后加上验证密钥key，我们假设是abc，得到新的字符串methodcancelp1v1p2v2pnvnabc\n4. 然后将这个字符串换为小写进行md5计算，假设得到的是abcdef，这个值即为sign签名值。\n\n\n\n\n### 参考\n\n* https://www.jianshu.com/p/ad410836587a\n* https://www.cnblogs.com/yoyoketang/p/11742187.html\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liyao2598330/django-request-sign",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-request-sign",
    "package_url": "https://pypi.org/project/django-request-sign/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-request-sign/",
    "project_urls": {
      "Homepage": "https://github.com/liyao2598330/django-request-sign"
    },
    "release_url": "https://pypi.org/project/django-request-sign/1.1.5/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "django request signature",
    "version": "1.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10916205,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "059be43d9b437ef70a6402a734358e6df27ea939262c39d66db2d1bdf967db04",
        "md5": "65510bc4c26e0edbbf9a0fcdfdc8f133",
        "sha256": "3cb0dead81d75ebc2449f19579e8b180bbf22f4cc593842c3bbf3621d630eb8e"
      },
      "downloads": -1,
      "filename": "django_request_sign-1.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "65510bc4c26e0edbbf9a0fcdfdc8f133",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 6718,
      "upload_time": "2021-07-15T09:26:57",
      "upload_time_iso_8601": "2021-07-15T09:26:57.182542Z",
      "url": "https://files.pythonhosted.org/packages/05/9b/e43d9b437ef70a6402a734358e6df27ea939262c39d66db2d1bdf967db04/django_request_sign-1.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2e3aa96b156bdfcf8db4ef796ad597b3ade6e92c6a92691ba65c6f33568b288",
        "md5": "ccc8e5f7ad7eeca8abcf3cfbf5f36958",
        "sha256": "0b8203629dca96e8e62fb2cd71df4b36b8de86eab4b34fae6ea9b99398eeacf7"
      },
      "downloads": -1,
      "filename": "django-request-sign-1.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ccc8e5f7ad7eeca8abcf3cfbf5f36958",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 5402,
      "upload_time": "2021-07-15T09:27:00",
      "upload_time_iso_8601": "2021-07-15T09:27:00.886178Z",
      "url": "https://files.pythonhosted.org/packages/d2/e3/aa96b156bdfcf8db4ef796ad597b3ade6e92c6a92691ba65c6f33568b288/django-request-sign-1.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}