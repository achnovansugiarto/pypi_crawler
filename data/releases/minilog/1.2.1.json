{
  "info": {
    "author": "Jace Browning",
    "author_email": "jacebrowning@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development",
      "Topic :: System :: Logging"
    ],
    "description": "[![Unix Build Status](https://img.shields.io/travis/jacebrowning/minilog/develop.svg?label=unix)](https://travis-ci.org/jacebrowning/minilog)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/minilog/develop.svg?label=windows)](https://ci.appveyor.com/project/jacebrowning/minilog)\n<br>\n[![Coverage Status](https://img.shields.io/coveralls/jacebrowning/minilog/develop.svg)](https://coveralls.io/r/jacebrowning/minilog)\n[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/minilog.svg)](https://scrutinizer-ci.com/g/jacebrowning/minilog/?branch=develop)\n<br>\n[![PyPI Version](https://img.shields.io/pypi/v/minilog.svg)](https://pypi.org/project/minilog)\n[![PyPI License](https://img.shields.io/pypi/l/minilog.svg)](https://pypi.org/project/minilog) \n\n# Overview\n\nEvery project should utilize logging, but for simple use cases, this requires a bit too much boilerplate. Instead of including all of this in your modules:\n\n```python\nimport logging \n\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(levelname)s: %(name)s: %(message)s\",\n)\n\nlog = logging.getLogger(__name__)\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nwith this package you can simply:\n\n```python\nimport log\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nIt will produce the exact same standard library `logging` records behind the scenes.\n\n# Installation\n\n```sh\n$ pip install minilog\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/minilog",
    "keywords": "logging",
    "license": "MIT",
    "maintainer": "Jace Browning",
    "maintainer_email": "jacebrowning@gmail.com",
    "name": "minilog",
    "package_url": "https://pypi.org/project/minilog/",
    "platform": "",
    "project_url": "https://pypi.org/project/minilog/",
    "project_urls": {
      "Documentation": "https://minilog.readthedocs.io",
      "Homepage": "https://pypi.org/project/minilog",
      "Repository": "https://github.com/jacebrowning/minilog"
    },
    "release_url": "https://pypi.org/project/minilog/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.4,<4.0",
    "summary": "Minimalistic wrapper for Python logging.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15868071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d556f4cbd1e80706256b79ef8a09f4dc3b0e71eb473b053dc42a0b9a5b16b6b8",
        "md5": "910ecf2557638f799e5650879c2e758a",
        "sha256": "4e8ba51f3e9a88c89c71b544076295f82e2e1fd66445295cfca46cd25c7d2568"
      },
      "downloads": -1,
      "filename": "minilog-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "910ecf2557638f799e5650879c2e758a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4,<4.0",
      "size": 11693,
      "upload_time": "2018-12-10T22:08:38",
      "upload_time_iso_8601": "2018-12-10T22:08:38.149919Z",
      "url": "https://files.pythonhosted.org/packages/d5/56/f4cbd1e80706256b79ef8a09f4dc3b0e71eb473b053dc42a0b9a5b16b6b8/minilog-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d02c4be87131351672977206d2b2f2c6f473865216d537c0e801545786d461cb",
        "md5": "951f69c830260db20810eb08730eeb55",
        "sha256": "60bf0f0cd89ff112242910cd9de90f908fb73bef3869230cd9c985f5a7742ce6"
      },
      "downloads": -1,
      "filename": "minilog-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "951f69c830260db20810eb08730eeb55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4,<4.0",
      "size": 5649,
      "upload_time": "2018-12-10T22:08:39",
      "upload_time_iso_8601": "2018-12-10T22:08:39.411247Z",
      "url": "https://files.pythonhosted.org/packages/d0/2c/4be87131351672977206d2b2f2c6f473865216d537c0e801545786d461cb/minilog-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}