{
  "info": {
    "author": "Jace Browning",
    "author_email": "jacebrowning@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: System :: Logging"
    ],
    "description": "# minilog\n\nA minimalistic logging wrapper for Python.\n\n[![Unix Build Status](https://img.shields.io/travis/com/jacebrowning/minilog.svg?label=unix)](https://travis-ci.com/jacebrowning/minilog)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/minilog.svg?label=windows)](https://ci.appveyor.com/project/jacebrowning/minilog)\n[![Coverage Status](https://img.shields.io/coveralls/jacebrowning/minilog/main.svg)](https://coveralls.io/r/jacebrowning/minilog)\n[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/minilog.svg)](https://scrutinizer-ci.com/g/jacebrowning/minilog)\n[![PyPI License](https://img.shields.io/pypi/l/minilog.svg)](https://pypi.org/project/minilog)\n[![PyPI Version](https://img.shields.io/pypi/v/minilog.svg)](https://pypi.org/project/minilog)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/minilog.svg?color=orange)](https://pypistats.org/packages/minilog)\n\n[![PyPI Version](https://img.shields.io/pypi/v/verchew.svg)](https://pypi.python.org/pypi/verchew)\n\n## Usage\n\nEvery project should utilize logging, but for simple use cases, this requires a bit too much boilerplate. Instead of including all of this in your modules:\n\n```python\nimport logging\n\nlog = logging.getLogger(__name__)\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n\nif __name__ == \"__main__\":\n    logging.basicConfig(\n        level=logging.INFO,\n        format=\"%(levelname)s: %(name)s: %(message)s\",\n    )\n```\n\nwith this package you can simply:\n\n```python\nimport log\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n\nif __name__ == \"__main__\":\n    log.init()\n```\n\nIt will produce the exact same standard library `logging` records behind the scenes with automatic formatting for non-strings.\n\n## Installation\n\nInstall this library directly into an activated virtual environment:\n\n```text\n$ pip install minilog\n```\n\nor add it to your [Poetry](https://poetry.eustace.io/) project:\n\n```text\n$ poetry add minilog\n```\n\n## Documentation\n\nTo view additional options, please consult the [full documentation](https://minilog.readthedocs.io/en/latest/logging/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/minilog",
    "keywords": "logging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minilog",
    "package_url": "https://pypi.org/project/minilog/",
    "platform": "",
    "project_url": "https://pypi.org/project/minilog/",
    "project_urls": {
      "Documentation": "https://minilog.readthedocs.io",
      "Homepage": "https://pypi.org/project/minilog",
      "Repository": "https://github.com/jacebrowning/minilog"
    },
    "release_url": "https://pypi.org/project/minilog/2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Minimalistic wrapper for Python logging.",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15868071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e28d3b2fcfb0bdeb0a6860b827cd2b80db2a64bcbb4cf3b58204f5b6b60439d",
        "md5": "5de318eb2a30484f72e8b728ae768feb",
        "sha256": "0c48879cc9e72f0127aa2c36b522dc6fa10fa8532956197436b491d31617d5d5"
      },
      "downloads": -1,
      "filename": "minilog-2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5de318eb2a30484f72e8b728ae768feb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 8640,
      "upload_time": "2022-03-07T01:28:10",
      "upload_time_iso_8601": "2022-03-07T01:28:10.781540Z",
      "url": "https://files.pythonhosted.org/packages/2e/28/d3b2fcfb0bdeb0a6860b827cd2b80db2a64bcbb4cf3b58204f5b6b60439d/minilog-2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1789ee2aaccbec224f0504bcff8918f59521615292ac4aba337fc7e1517baa04",
        "md5": "ccd61928ab684d83266ff83218ba9dd5",
        "sha256": "2048a8d381b36ef5f146fb9a657e627729411f8e2ed0047e2c1286cf8e3e58d7"
      },
      "downloads": -1,
      "filename": "minilog-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ccd61928ab684d83266ff83218ba9dd5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 7502,
      "upload_time": "2022-03-07T01:28:11",
      "upload_time_iso_8601": "2022-03-07T01:28:11.958207Z",
      "url": "https://files.pythonhosted.org/packages/17/89/ee2aaccbec224f0504bcff8918f59521615292ac4aba337fc7e1517baa04/minilog-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}