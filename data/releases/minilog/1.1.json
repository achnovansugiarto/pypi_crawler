{
  "info": {
    "author": "Jace Browning",
    "author_email": "jacebrowning@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development",
      "Topic :: System :: Logging"
    ],
    "description": "Unix: [![Unix Build Status](https://img.shields.io/travis/jacebrowning/minilog/develop.svg)](https://travis-ci.org/jacebrowning/minilog) Windows: [![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/minilog/develop.svg)](https://ci.appveyor.com/project/jacebrowning/minilog)<br>Metrics: [![Coverage Status](https://img.shields.io/coveralls/jacebrowning/minilog/develop.svg)](https://coveralls.io/r/jacebrowning/minilog) [![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/minilog.svg)](https://scrutinizer-ci.com/g/jacebrowning/minilog/?branch=develop)<br>Usage: [![PyPI Version](https://img.shields.io/pypi/v/minilog.svg)](https://pypi.org/project/minilog) [![PyPI License](https://img.shields.io/pypi/l/minilog.svg)](https://pypi.org/project/minilog) \n\n# Overview\n\nEvery project should utilize logging, but for simple use cases, this requires a bit too much boilerplate. Instead of including all of this in your modules:\n\n```python\nimport logging \n\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(levelname)s: %(name)s: %(message)s\",\n)\n\nlog = logging.getLogger(__name__)\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nwith this package you can simply:\n\n```python\nimport log\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nIt will produce the exact same standard library `logging` records behind the scenes.\n\n# Installation\n\n```sh\n$ pip install minilog\n```\n\n# Revision History\n\n## 1.1 (2018-10-26)\n\n- Added `%(relpath)s` logging format.\n- Added `verbosity` as `init()` option to work with Django admin commands.\n\n## 1.0 (2018-09-27)\n\n- Initial stable release.\n\n## 0.5 (2018-09-07)\n\n- Disabled automatic logging configuration when invoked by `pytest`.\n\n## 0.4 (2018-4-28)\n\n- Added `reset=True` as `init()` option to replace all existing logging handlers.\n- Added `exception` logging API.\n- Added convenience alias: `log.c`, `log.exc`.\n\n## 0.3.1 (2018-03-30)\n\n- Fixed bug where records were written for disabled levels.\n\n## 0.3 (2018-03-15)\n\n- Exposed `logging` level constants on the `log` package.\n- Added `log.WARN` as an alias of `log.WARNING`.\n\n## 0.2.1 (2018-03-04)\n\n- Removed the Python version check on installation.\n\n## 0.2 (2018-03-03)\n\n- Added method to force logging format: `log.init(format=\"...\")`\n- Added method to silenced named loggers: `log.silence('requests', allow_error=True)`\n- Added convenience aliases: `log.d`, `log.i`, `log.w`, `log.e`\n\n## 0.1 (2018-03-03)\n\n - Initial release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jacebrowning/minilog",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minilog",
    "package_url": "https://pypi.org/project/minilog/",
    "platform": "",
    "project_url": "https://pypi.org/project/minilog/",
    "project_urls": {
      "Homepage": "https://github.com/jacebrowning/minilog"
    },
    "release_url": "https://pypi.org/project/minilog/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Minimalistic wrapper for Python logging.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15868071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5042b5d0495b6f4bc1dbb5f1d0e3c0ba89f7c206bfd74dd9e04c2192ca550884",
        "md5": "8bafd6031f5f9f1f7e492e97c710c165",
        "sha256": "5c497dcb014c3e5bbc3c7f095525d264a317dabb1c805647165965c5fe8acc65"
      },
      "downloads": -1,
      "filename": "minilog-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bafd6031f5f9f1f7e492e97c710c165",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9474,
      "upload_time": "2018-10-26T13:32:29",
      "upload_time_iso_8601": "2018-10-26T13:32:29.313597Z",
      "url": "https://files.pythonhosted.org/packages/50/42/b5d0495b6f4bc1dbb5f1d0e3c0ba89f7c206bfd74dd9e04c2192ca550884/minilog-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05de97460eb19a47036bcbef8e2a6290f1474f00676efe24bdb57e028bfd5814",
        "md5": "eb0a616e3a29ab9f571242ab860184ff",
        "sha256": "a7643fb3272fd258d9af2edaf4ab1bc1ac6ff48417d81077c6450e2c20a38f87"
      },
      "downloads": -1,
      "filename": "minilog-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb0a616e3a29ab9f571242ab860184ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8127,
      "upload_time": "2018-10-26T13:32:30",
      "upload_time_iso_8601": "2018-10-26T13:32:30.566169Z",
      "url": "https://files.pythonhosted.org/packages/05/de/97460eb19a47036bcbef8e2a6290f1474f00676efe24bdb57e028bfd5814/minilog-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}