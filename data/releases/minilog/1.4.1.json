{
  "info": {
    "author": "Jace Browning",
    "author_email": "jacebrowning@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development",
      "Topic :: System :: Logging"
    ],
    "description": "# minilog\n\nA minimalistic logging wrapper for Python.\n\n[![Unix Build Status](https://img.shields.io/travis/jacebrowning/minilog/develop.svg?label=unix)](https://travis-ci.org/jacebrowning/minilog)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/minilog/develop.svg?label=windows)](https://ci.appveyor.com/project/jacebrowning/minilog)\n[![Coverage Status](https://img.shields.io/coveralls/jacebrowning/minilog/develop.svg)](https://coveralls.io/r/jacebrowning/minilog)\n[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/minilog.svg)](https://scrutinizer-ci.com/g/jacebrowning/minilog/?branch=develop)\n[![PyPI Version](https://img.shields.io/pypi/v/minilog.svg)](https://pypi.org/project/minilog)\n[![PyPI License](https://img.shields.io/pypi/l/minilog.svg)](https://pypi.org/project/minilog) \n\n## Usage\n\nEvery project should utilize logging, but for simple use cases, this requires a bit too much boilerplate. Instead of including all of this in your modules:\n\n```python\nimport logging \n\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(levelname)s: %(name)s: %(message)s\",\n)\n\nlog = logging.getLogger(__name__)\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nwith this package you can simply:\n\n```python\nimport log\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n```\n\nIt will produce the exact same standard library `logging` records behind the scenes.\n\n## Installation\n\nInstall this library directly into an activated virtual environment:\n\n```text\n$ pip install minilog\n```\n\nor add it to your [Poetry](https://poetry.eustace.io/) project:\n\n```text\n$ poetry add minilog\n```\n\n## Documentation\n\nTo view additional options, please consult the [full documentation](https://minilog.readthedocs.io/en/latest/logging/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/minilog",
    "keywords": "logging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minilog",
    "package_url": "https://pypi.org/project/minilog/",
    "platform": "",
    "project_url": "https://pypi.org/project/minilog/",
    "project_urls": {
      "Documentation": "https://minilog.readthedocs.io",
      "Homepage": "https://pypi.org/project/minilog",
      "Repository": "https://github.com/jacebrowning/minilog"
    },
    "release_url": "https://pypi.org/project/minilog/1.4.1/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "Minimalistic wrapper for Python logging.",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15868071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c07fb7fdd8403a502db0b68a31ce656992a708abb04d5d4a9c37c3a6dc95020",
        "md5": "3ece8886fb2445f0ecab7143b137fb7f",
        "sha256": "b16be0ba7e5b2a1a10286b86e3ea1645f99ee4c5edfde97765a4f625654f2a64"
      },
      "downloads": -1,
      "filename": "minilog-1.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ece8886fb2445f0ecab7143b137fb7f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 8091,
      "upload_time": "2020-03-22T18:18:53",
      "upload_time_iso_8601": "2020-03-22T18:18:53.118209Z",
      "url": "https://files.pythonhosted.org/packages/5c/07/fb7fdd8403a502db0b68a31ce656992a708abb04d5d4a9c37c3a6dc95020/minilog-1.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "386a6c21fe9db6359f07c467e8f7b50fc9a02965aa456ce492b55c80d0b74956",
        "md5": "afe2bbe5b5051300155befcf0f97dcc6",
        "sha256": "ca695a822099e99d53b0528fc9b6ff12f483669dd3ce1796f0a5038be878a9cc"
      },
      "downloads": -1,
      "filename": "minilog-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "afe2bbe5b5051300155befcf0f97dcc6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 6733,
      "upload_time": "2020-03-22T18:18:54",
      "upload_time_iso_8601": "2020-03-22T18:18:54.334310Z",
      "url": "https://files.pythonhosted.org/packages/38/6a/6c21fe9db6359f07c467e8f7b50fc9a02965aa456ce492b55c80d0b74956/minilog-1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}