{
  "info": {
    "author": "Jace Browning",
    "author_email": "jacebrowning@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: System :: Logging"
    ],
    "description": "# minilog\n\nA minimalistic logging wrapper for Python.\n\n[![Unix Build Status](https://img.shields.io/travis/com/jacebrowning/minilog.svg?label=unix)](https://travis-ci.com/jacebrowning/minilog)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/minilog.svg?label=windows)](https://ci.appveyor.com/project/jacebrowning/minilog)\n[![Coverage Status](https://img.shields.io/coveralls/jacebrowning/minilog/main.svg)](https://coveralls.io/r/jacebrowning/minilog)\n[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/minilog.svg)](https://scrutinizer-ci.com/g/jacebrowning/minilog)\n[![PyPI Version](https://img.shields.io/pypi/v/minilog.svg)](https://pypi.org/project/minilog)\n[![PyPI License](https://img.shields.io/pypi/l/minilog.svg)](https://pypi.org/project/minilog)\n\n## Usage\n\nEvery project should utilize logging, but for simple use cases, this requires a bit too much boilerplate. Instead of including all of this in your modules:\n\n```python\nimport logging\n\nlog = logging.getLogger(__name__)\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n\nif __name__ == \"__main__\":\n    logging.basicConfig(\n        level=logging.INFO,\n        format=\"%(levelname)s: %(name)s: %(message)s\",\n    )\n```\n\nwith this package you can simply:\n\n```python\nimport log\n\ndef greet(name):\n    log.info(\"Hello, %s!\", name)\n\nif __name__ == \"__main__\":\n    log.init()\n```\n\nIt will produce the exact same standard library `logging` records behind the scenes.\n\n## Installation\n\nInstall this library directly into an activated virtual environment:\n\n```text\n$ pip install minilog\n```\n\nor add it to your [Poetry](https://poetry.eustace.io/) project:\n\n```text\n$ poetry add minilog\n```\n\n## Documentation\n\nTo view additional options, please consult the [full documentation](https://minilog.readthedocs.io/en/latest/logging/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/minilog",
    "keywords": "logging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minilog",
    "package_url": "https://pypi.org/project/minilog/",
    "platform": "",
    "project_url": "https://pypi.org/project/minilog/",
    "project_urls": {
      "Documentation": "https://minilog.readthedocs.io",
      "Homepage": "https://pypi.org/project/minilog",
      "Repository": "https://github.com/jacebrowning/minilog"
    },
    "release_url": "https://pypi.org/project/minilog/2.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "Minimalistic wrapper for Python logging.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15868071,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51e1a92d1ac9a94d264f7bff1869ef10a6b3aaa3ba803d7a3d2aabe027273cd4",
        "md5": "9599045955e6812229fe87c5402319de",
        "sha256": "9cd8b002043c7a6e5f312af96b06f562932312217d4fcb8c2752edc1ae91d3c7"
      },
      "downloads": -1,
      "filename": "minilog-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9599045955e6812229fe87c5402319de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 8436,
      "upload_time": "2021-06-03T23:37:56",
      "upload_time_iso_8601": "2021-06-03T23:37:56.805148Z",
      "url": "https://files.pythonhosted.org/packages/51/e1/a92d1ac9a94d264f7bff1869ef10a6b3aaa3ba803d7a3d2aabe027273cd4/minilog-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "495eea649dc68d3ee059b2e6a9be5362fe744ccb45ba429ca9fe54b30c9b4bb1",
        "md5": "fbdd63cc41381a9f05568425b0a274ca",
        "sha256": "52cbec563f266f1e931fd884edbb53a87ce24817365d84cc9dc628a96ea00b85"
      },
      "downloads": -1,
      "filename": "minilog-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fbdd63cc41381a9f05568425b0a274ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 7021,
      "upload_time": "2021-06-03T23:37:57",
      "upload_time_iso_8601": "2021-06-03T23:37:57.957396Z",
      "url": "https://files.pythonhosted.org/packages/49/5e/ea649dc68d3ee059b2e6a9be5362fe744ccb45ba429ca9fe54b30c9b4bb1/minilog-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}