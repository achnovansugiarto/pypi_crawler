{
  "info": {
    "author": "Jared Miller",
    "author_email": "jtmiller@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "===============================\nMiniboa: a simple Telnet server\n===============================\n\n.. image:: https://travis-ci.org/shmup/miniboa.svg\n   :alt: build status\n   :target: https://travis-ci.org/shmup/miniboa\n\n.. image:: https://img.shields.io/pypi/v/miniboa.svg\n   :target: https://pypi.python.org/pypi/miniboa\n   :alt: downloads \n\n-----\nWhat?\n-----\n\nMiniboa is a bare-bones Telnet server to use as the base for a MUD or similar interactive server. Miniboa has several nice features for this type of application.\n\n--------\nFeatures\n--------\n\n- Asynchronous - no waiting on player input or state.\n- Single threaded - light on resources with excellent performance.\n- Runs under your game loop - you decide when to poll for data.\n- Supports 1000 users under Linux and 512 under Windows (untested).\n- Miniboa is compatible with both Python 2.6, 2.7, and 3.\n\n-----------\nQuick Start\n-----------\n\nFirst:\n\n.. code-block:: bash\n\n    pip install miniboa\n\nAnd then:\n\n.. code-block:: python\n\n    from miniboa import TelnetServer\n    server = TelnetServer()\n    while True: server.poll()\n\nBut you probably want to do something with the connecting/disconnecting clients:\n\n.. code-block:: python\n\n    clients = []\n\n\n    def on_connect(client):\n        client.send(\"Hello, my friend. Stay awhile and listen.\")\n        clients.append(client)\n\n\n    def on_disconnect(client):\n        clients.remove(client)\n\n\n    server = TelnetServer(\n        port=3333,\n        address='',\n        on_connect=on_connect,\n        on_disconnect=on_disconnect)\n\n    while True:\n        server.poll()\n\n\nTo use Miniboa, you create a Telnet Server object listening at a specified port number. You have to provide two functions for the server; the first is a handler for new connections and the second is the handler for lost connections. These handler functions are passed Telnet Client objects -- these are your communication paths to and from the individual player's MUD client.\n\nFor example, let's say Mike and Joe connect to your MUD server. Telnet Server will call your on_connect() function with Mike's Telnet Client object, and then again with Joe's Telnet Client object. If Mike's power goes out, Telnet Server will call your on_disconnect() function with Mike's Telnet Client object (same exact one).\n\nThis will launch a server listening on the default port, that accepts Telnet connections and sends a simple message.\n\n.. code-block:: bash\n\n    $ telnet localhost 7777\n    Trying 127.0.0.1...\n    Connected to localhost.\n    Escape character is '^]'.\n    Hello, my friend. Stay awhile and listen.\n\nFurther documentation can be `found here <https://github.com/shmup/miniboa/blob/master/docs/index.rst/>`_.\n\n=========\nCopyright\n=========\n\n.. code-block:: bash\n\n    Copyright 2009 Jim Storch\n    Copyright 2015 Carey Metcalfe\n    Copyright 2016 Joseph Schilz\n    Copyright 2016 Jared Miller",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shmup/miniboa",
    "keywords": "mud,tcp,telnet",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miniboa",
    "package_url": "https://pypi.org/project/miniboa/",
    "platform": "",
    "project_url": "https://pypi.org/project/miniboa/",
    "project_urls": {
      "Homepage": "https://github.com/shmup/miniboa"
    },
    "release_url": "https://pypi.org/project/miniboa/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Asynchronous, single-threaded, poll-based Telnet server",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15139157,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1f20e76535aad2f374576c22a18842ea06c664a5a4d80bde52e677299293811",
        "md5": "61e3ca6f29868090ef9a71cf16835d55",
        "sha256": "2de51b8b29dde86772970e5d611dc981e52f7dc4b95f94c08ddfed798a7b1be8"
      },
      "downloads": -1,
      "filename": "miniboa-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "61e3ca6f29868090ef9a71cf16835d55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12577,
      "upload_time": "2017-11-09T02:01:42",
      "upload_time_iso_8601": "2017-11-09T02:01:42.415869Z",
      "url": "https://files.pythonhosted.org/packages/e1/f2/0e76535aad2f374576c22a18842ea06c664a5a4d80bde52e677299293811/miniboa-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}