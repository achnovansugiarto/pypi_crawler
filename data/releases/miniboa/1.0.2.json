{
  "info": {
    "author": "Jared Miller",
    "author_email": "jtmiller@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "===============================\r\nMiniboa: a simple Telnet server\r\n===============================\r\n\r\n.. image:: https://travis-ci.org/shmup/miniboa.svg\r\n   :alt: build status\r\n   :target: https://travis-ci.org/shmup/miniboa\r\n\r\n.. image:: https://img.shields.io/pypi/v/miniboa.svg\r\n   :target: https://pypi.python.org/pypi/miniboa\r\n   :alt: downloads \r\n\r\n-----\r\nWhat?\r\n-----\r\n\r\nMiniboa is a bare-bones Telnet server to use as the base for a MUD or similar interactive server. Miniboa has several nice features for this type of application.\r\n\r\n--------\r\nFeatures\r\n--------\r\n\r\n- Asynchronous - no waiting on player input or state.\r\n- Single threaded - light on resources with excellent performance.\r\n- Runs under your game loop - you decide when to poll for data.\r\n- Supports 1000 users under Linux and 512 under Windows (untested).\r\n- Miniboa is compatable with both Python 2.6, 2.7, and 3.\r\n\r\n-----------\r\nQuick Start\r\n-----------\r\n\r\nFirst:\r\n\r\n.. code-block:: bash\r\n\r\n    pip install miniboa\r\n\r\nAnd then:\r\n\r\n.. code-block:: python\r\n\r\n    from miniboa import TelnetServer\r\n    server = TelnetServer()\r\n    while True: server.poll()\r\n\r\nBut you probably want to do something with the connecting/disconnecting clients:\r\n\r\n.. code-block:: python\r\n\r\n    CLIENTS = []\r\n\r\n    def on_connect(client):\r\n        client.send(\"Hello, my friend. Stay awhile and listen.\")\r\n        CLIENTS.append(client)\r\n\r\n    def on_disconnect(client):\r\n        CLIENTS.remove(client)\r\n\r\n    server = TelnetServer(\r\n        port = 3333,\r\n        address = '',\r\n        on_connect = on_connect,\r\n        on_disconnect = on_disconnect)\r\n\r\n    while True:\r\n        server.poll()\r\n\r\n\r\nTo use Miniboa, you create a Telnet Server object listening at a specified port number. You have to provide two functions for the server; the first is a handler for new connections and the second is the handler for lost connections. These handler functions are passed Telnet Client objects -- these are your communication paths to and from the individual player's MUD client.\r\n\r\nFor example, let's say Mike and Joe connect to your MUD server. Telnet Server will call your on_connect() function with Mike's Telnet Client object, and then again with Joe's Telnet Client object. If Mike's power goes out, Telnet Server will call your on_disconnect() function with Mike's Telnet Client object (same exact one).\r\n\r\nThis will launch a server listening on the default port, that accepts Telnet connections and sends a simple message.\r\n\r\n.. code-block:: bash\r\n\r\n    $ telnet localhost 7777\r\n    Trying 127.0.0.1...\r\n    Connected to localhost.\r\n    Escape character is '^]'.\r\n    Hello, my friend. Stay awhile and listen.\r\n\r\nFurther documentation can be `found here <https://github.com/shmup/miniboa/blob/master/docs/index.rst/>`_.\r\n\r\n=========\r\nCopyright\r\n=========\r\n\r\n.. code-block:: bash\r\n\r\n    Copyright 2009 Jim Storch\r\n    Copyright 2015 Carey Metcalfe\r\n    Copyright 2016 Joseph Schilz\r\n    Copyright 2016 Jared Miller",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shmup/miniboa",
    "keywords": "mud,tcp,telnet",
    "license": "Apache 2",
    "maintainer": null,
    "maintainer_email": null,
    "name": "miniboa",
    "package_url": "https://pypi.org/project/miniboa/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/miniboa/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/shmup/miniboa"
    },
    "release_url": "https://pypi.org/project/miniboa/1.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Asynchronous, single-threaded, poll-based Telnet server",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15139157,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "748460d59b7b4118cf9e1ab2dc014eed5aa2f05113980909713b5289a0731be9",
        "md5": "97538b0a54b939fe4293992fdf3f8126",
        "sha256": "932207d9772ac2763799e3bceaf424263fcdc631ea92b0cf1ff5deb3e7e1ee63"
      },
      "downloads": -1,
      "filename": "miniboa-1.0.2.zip",
      "has_sig": false,
      "md5_digest": "97538b0a54b939fe4293992fdf3f8126",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16155,
      "upload_time": "2017-07-03T01:16:48",
      "upload_time_iso_8601": "2017-07-03T01:16:48.977167Z",
      "url": "https://files.pythonhosted.org/packages/74/84/60d59b7b4118cf9e1ab2dc014eed5aa2f05113980909713b5289a0731be9/miniboa-1.0.2.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}