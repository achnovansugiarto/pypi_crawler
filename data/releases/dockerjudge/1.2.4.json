{
  "info": {
    "author": "汪心禾",
    "author_email": "wangxinhe06@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/piterator-org\">\n    <img src=\"https://static.piterator.com/piterator/logo.svg\" alt=\"Piterator\" width=\"20%\">\n    <br>\n    Made by <strong>Piterator</strong> with &lt;3\n  </a>\n</p>\n\n# dockerjudge\n[![Maintainability](https://api.codeclimate.com/v1/badges/dfe666a2140cd3390e56/maintainability)](https://codeclimate.com/github/wxh06/dockerjudge/maintainability)\n[![Python package](https://github.com/wxh06/dockerjudge/workflows/Python%20package/badge.svg)](https://github.com/wxh06/dockerjudge/actions?query=workflow%3A%22Python+package%22)\n[![Upload Python Package](https://github.com/wxh06/dockerjudge/workflows/Upload%20Python%20Package/badge.svg)](https://github.com/wxh06/dockerjudge/actions?query=workflow%3A%22Upload+Python+Package%22)\n[![Build Status](https://travis-ci.com/wxh06/dockerjudge.svg)](https://travis-ci.com/wxh06/dockerjudge)\n[![CodeCov](https://codecov.io/gh/wxh06/dockerjudge/graph/badge.svg)](https://codecov.io/gh/wxh06/dockerjudge)\n[![Documentation Status](https://readthedocs.org/projects/dockerjudge/badge/)](https://dockerjudge.readthedocs.io/en/latest/)\n[![Python Version](https://img.shields.io/pypi/pyversions/dockerjudge.svg)](https://www.python.org/downloads/)\n[![GitHub pre-release](https://img.shields.io/github/release-pre/wxh06/dockerjudge.svg)](https://github.com/wxh06/dockerjudge/releases)\n[![PyPI](https://img.shields.io/pypi/v/dockerjudge.svg)](https://pypi.org/project/dockerjudge/#history)\n[![Wheel](https://img.shields.io/pypi/wheel/dockerjudge.svg)](https://pypi.org/project/dockerjudge/#files)\n[![License](https://img.shields.io/github/license/wxh06/dockerjudge.svg)](LICENSE)\n\n🎌 **🇺🇸 English** | [🇨🇳 大陆简体](README.zh_Hans_CN.md)\n\n**A LXC based online judge engine**, which supports [10+ programming language processors](#supported-processors):\n- [Shell](https://en.wikipedia.org/wiki/Unix_shell)\n  - [Bash (**B**ourne-**A**gain **sh**ell)](https://en.wikipedia.org/wiki/Bash_(Unix_shell))\n- [C](https://en.wikipedia.org/wiki/C_(programming_language))/[C++](https://en.wikipedia.org/wiki/C%2B%2B)\n  - [GCC (The **G**NU **C**ompiler **C**ollection)](https://gcc.gnu.org/)\n  - [LLVM Clang](https://clang.llvm.org/)\n- [.NET](https://docs.microsoft.com/en-us/dotnet/) ([C#](https://docs.microsoft.com/en-us/dotnet/csharp/) & [Visual Basic](https://docs.microsoft.com/en-us/dotnet/visual-basic/))\n  - [Mono](https://www.mono-project.com/)\n- [Go](https://golang.org/)\n  - [`go`](https://golang.org/dl/)\n  - [`gccgo` (GCC)](https://golang.org/doc/install/gccgo)\n- [Java](https://www.oracle.com/java/)\n  - [OpenJDK](https://openjdk.java.net/)\n- [Node.js](https://nodejs.org/en/)\n  - [`node`](https://nodejs.org/en/download/)\n- [PHP](https://www.php.net/)\n  - [`php`](https://www.php.net/downloads)\n- [Python](https://www.python.org/)\n  - [CPython](https://www.python.org/downloads/)\n  - [PyPy](https://www.pypy.org/)\n- [Ruby](https://www.ruby-lang.org/en/)\n  - [`ruby`](https://www.ruby-lang.org/en/downloads/)\n- [Swift](https://swift.org/)\n  - [`swiftc`](https://swift.org/swift-compiler/)\n\n\n## Supported processors\nRead the [docs](https://dockerjudge.readthedocs.io/en/latest/processor.html#module-dockerjudge.processor) for more information.\n\nProcessor | Language(s)\\* | Required [Docker image](https://hub.docker.com/)\n--------- | ------------- | ------------------------------------------------\n`Bash` | Shell | [`bash`](https://hub.docker.com/_/bash)\n`Clang` | <ul><li>C (`c`)</li><li>**C++ (`cpp`)**</li></ul> | [`clangbuiltlinux/ubuntu`](https://hub.docker.com/r/clangbuiltlinux/ubuntu)\n`GCC` | <ul><li>C (`c`)</li><li>**C++ (`cpp`)**</li><li>Go (`go`)</li></ul> | [`gcc`](https://hub.docker.com/_/gcc)\n`Go` | Go | [`golang`](https://hub.docker.com/_/golang)\n`Mono` | <ul><li>Visual Basic (`vb`)</li><li>**C# (`csharp`)**</li></ul> | [`mono`](https://hub.docker.com/_/mono)\n`Node` | Node.js | [`node`](https://hub.docker.com/_/node)\n`OpenJDK` | Java | [`openjdk`](https://hub.docker.com/_/openjdk)\n`PHP` | PHP | [`php`](https://hub.docker.com/_/php)\n`PyPy` | Python | [`pypy`](https://hub.docker.com/_/pypy)\n`Python`| Python | [`python`](https://hub.docker.com/_/python)\n`Ruby` | Ruby | [`ruby`](https://hub.docker.com/_/ruby)\n`Swift` | Swift | [`swift`](https://hub.docker.com/_/swift)\n\n**\\*** The `language` argumnets of the processors which support multiple languages should be provided, or the `source` will be judged in the default language (usually C++ or C#, emboldened in the table).\n\n\n## Installation\nRead the [docs](https://dockerjudge.readthedocs.io/en/latest/installation.html) for more information.\n\n### Docker\nTo run `dockerjudge`, [Docker Engine](https://www.docker.com/) is required.\n\n#### Install using the convenience script (for servers)\n```sh\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n```\nSee [Install Docker Engine \\| Docker Documentation](https://docs.docker.com/engine/install/) for more information.\n\n### Package\n#### From the [Python Package Index (PyPI)](https://pypi.org/)\n[dockerjudge · PyPI](https://pypi.org/project/dockerjudge/)\n- [PyPI](https://pypi.org/simple/dockerjudge/)\n- [阿里巴巴开源镜像站 (Alibaba Open Source Mirror)](https://mirrors.aliyun.com/pypi/simple/dockerjudge/)\n- [清华大学开源软件镜像站 | Tsinghua Open Source Mirror](https://pypi.tuna.tsinghua.edu.cn/simple/dockerjudge/)\n\n##### Via [pip](https://pip.pypa.io/)\n```sh\npip install dockerjudge\n```\n\n##### Via [Easy install](https://setuptools.readthedocs.io/en/latest/easy_install.html) (deprecated)\n```sh\neasy_install dockerjudge\n```\n\n#### From [GitHub](https://github.com/)\n[wxh06/dockerjudge: A Docker Based Online Judge Engine](https://github.com/wxh06/dockerjudge)\n- HTTPS: `https://github.com/wxh06/dockerjudge.git`\n- SSH: `git@github.com:wxh06/dockerjudge.git`\n```sh\ngit clone https://github.com/wxh06/dockerjudge.git\ncd dockerjudge\n\nmake pip && make  # python3 -m pip install -Ur requirements.txt && python3 setup.py build\nsudo make install  # python3 setup.py install\n```\n\n\n## Usage\nRead the [docs](https://dockerjudge.readthedocs.io/en/latest/__init__.html) for more information.\n\n```python\n>>> from dockerjudge import judge\n>>> from dockerjudge.processor import GCC, Clang, Bash, Python, Node, OpenJDK, PHP, Ruby, Mono, Swift\n>>>\n>>> judge(\n...     GCC(GCC.Language.c),  # or `GCC('c')` / `GCC('C')`, which means compile the source code in the C programming language with `gcc` command\n...     b'''\n...         #include <stdio.h>\n...         int main() {\n...             int a, b;\n...             scanf(\"%d %d\", &a, &b);\n...             printf(\"%d\", a / b);\n...             return 0;\n...         }\n...     ''',\n...     [\n...         (b'1 1', b'1'),  # AC\n...         (b'1 2', b'0.5'),  # WA\n...         (b'0 0', b'')  # RE\n...     ]\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'1', b''), 0.001),\n        (<Status.WA: 'Wrong Answer'>, (b'0', b''), 0.001),\n        (<Status.RE: 'Runtime Error'>, (None, b'Floating point exception (core dumped)\\n'), 0.01)\n    ],\n    b''\n]\n>>>\n>>> judge(GCC(GCC.Language.c), b'', [(b'', b'')])  # CE\n[\n    [\n        (<Status.CE: 'Compilation Error'>, (None, None), 0.0)\n    ],\n    b\"/usr/bin/ld: /usr/lib/x86_64-linux-gnu/crt1.o: in function `_start':\\n(.text+0x20): undefined reference to `main'\\ncollect2: error: ld returned 1 exit status\\n\"\n]\n>>>\n>>> judge(\n...     GCC(GCC.Language.cpp),  # or `GCC('cpp')` / `GCC('C++')`, which means compile the source code in the C++ programming language with `g++` command\n...     b'''\n...         #include <cstdio>\n...         int main() {\n...             printf(\"Hello, world!\");\n...             while (true)\n...                 ;\n...         }\n...     ''',\n...     [\n...         (b'', b'Hello, world!')  # TLE\n...     ],\n...     {\n...         'limit': {\n...             'time': .1\n...         }\n...     }\n... )\n[\n    [\n        (<Status.TLE: 'Time Limit Exceeded'>, (None, b'bash: line 1:    35 Killed                  timeout -sKILL 0.1 sh -c ./a.out > /dockerjudge/1.out < /dockerjudge/1.in\\n'), 0.100)\n    ],\n    b''\n]\n>>>\n>>> judge(\n...     GCC(\n...         GCC.Language.c,\n...         'latest',  # The GCC version number, such as `4`, `4.8`, etc.\n...         {'bin': 'a'}  # The binary filename, which passes to `gcc`'s `-o` option\n...     ),\n...     b'''\n...         #include <stdio.h>\n...         int main() {\n...             int a, b;\n...             freopen(\"a.in\", \"r\", stdin);  // Open `a.in` as stdin\n...             scanf(\"%d %d\", &a, &b);  // Scan from `a.in`\n...             freopen(\"a.out\", \"w\", stdout);  // Open `a.out` as stdout\n...             printf(\"%d\", a / b);  // Print to `a.out`\n...             return 0;\n...         }\n...     ''',\n...     [\n...         (b'1 1', b'1'),  # AC\n...         (b'1 2', b'0.5'),  # WA\n...         (b'0 0', b'')  # RE\n...     ],\n...     {\n...         'iofilename': {\n...             'in': 'a.in',\n...             'out': 'a.out'\n...         }\n...     }\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'1', b''), 0.001),\n        (<Status.WA: 'Wrong Answer'>, (b'0', b''), 0.001),\n        (<Status.RE: 'Runtime Error'>, (None, b'Floating point exception (core dumped)\\n'), 0.001)\n    ],\n    b''\n]\n>>>\n>>> judge(\n...     GCC(GCC.Language.c, filenames={'bin': 'a'}),\n...     b'''\n...         #include <stdio.h>\n...         int main() {\n...             int a, b;\n...             scanf(\"%d %d\", &a, &b);\n...             printf(\"%d\", a / b);\n...             return 0;\n...         }\n...     ''',\n...     [\n...         (b'1 1', b'1'),\n...         (b'0 0', b'')\n...     ],\n...     {\n...         'iofilename': {\n...             'out': 'a.out'  # ONF\n...         }\n...     }\n... )\n[\n    [\n        (<Status.ONF: 'Output Not Found'>, (None, b''), 0.001),\n        (<Status.RE: 'Runtime Error'>, (None, b'Floating point exception (core dumped)\\n'), 0.001)\n    ],\n    b''\n]\n>>>\n>>> judge(  # BTW, GCC starting from 4.9 also supports Go, named `gccgo`\n...     GCC(GCC.Language.go),\n...     b'package main\\n'\n...     b''\n...     b'import \"fmt\"\\n'\n...     b''\n...     b'func main() {\\n'\n...     br'    fmt.Printf(\"hello, world\\n\")'b'\\n'\n...     b'}\\n',\n...     [(b'', b'hello, world')]\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'hello, world\\n', b''), 0.02)\n    ],\n    b''\n]\n>>>\n>>> judge(\n...     Clang(  # Besides GCC, LLVM Clang is also supported (The same arguments as GCC's)\n...         Clang.Language.c,  # Only C and C++ supported\n...         11  # The version number of LLVM CLang is **required**!\n...     ),\n...     b'',  # CE\n...     [\n...         (b'', b'')\n...     ]\n... )\n[\n    [\n        (<Status.CE: 'Compilation Error'>, (None, None), 0.0)\n    ],\n    b\"/usr/bin/ld: /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crt1.o: in function `_start':\\n'\n    b\"(.text+0x24): undefined reference to `main'\\n\"\n    b'clang: error: linker command failed with exit code 1 (use -v to see invocation)\\n'\n]\n>>>\n>>> # Other programming languages are also supported\n>>> judge(Bash(), b'echo Hello, world!', [(b'', b'Hello, world!')])  # Bash\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!\\n', b''), 0.001)\n    ],\n    b''\n]\n>>>\n>>> judge(Python(3), b\"print('Hello, world!')\", [(b'', b'Hello, world!')])  # Python 3\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!\\n', b''), 0.05)\n    ],\n    b\"Listing '.'...\\n\"\n    b\"Compiling './__init__.py'...\\n\"\n]\n>>> judge(PyPy(), b\"print('Hello, world!')\", [(b'', b'Hello, world!')])  # PyPy 3\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!\\n', b''), 0.075)\n    ],\n    b\"Listing '.'...\\n\"\n    b\"Compiling './__init__.py'...\\n\"\n]\n>>>\n>>> judge(Node(12), b'console.log(\"Hello World\")', [(b'', b'Hello World')])  # Node.js\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello World\\n', b''), 0.05)\n    ],\n    b''\n]\n>>>\n>>> judge(  # Java / OpenJDK\n...     OpenJDK(), #  The default public class name is `Main`\n...     b'''\n...         public class Main {\n...             public static void main(String[] args) {\n...                 System.out.println(\"Hello, world!\");\n...             }\n...         }\n...     ''',\n...     [\n...         (b'', b'Hello, world!')\n...     ]\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!\\n', b''), 0.1)\n    ],\n    b''\n]\n>>>\n>>> judge(PHP(), b'<?php echo \"Hello, world!\";', [(b'', b'Hello, world!')])  # PHP\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!', b''), 0.05)\n    ],\n    b'No syntax errors detected in index.php\\n'\n]\n>>>\n>>> judge(Ruby(), b'print \"Hello, world!\";', [(b'', b'Hello, world!')])  # Ruby\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!', b''), 0.05)\n    ],\n    b'Syntax OK\\n'\n]\n>>>\n>>> judge(\n...     Mono(Mono.Language.csharp),  # C# (Mono)\n...     b'''\n...         using System;\n... \n...         public class HelloWorld\n...         {\n...             public static void Main(string[] args)\n...             {\n...                 Console.WriteLine (\"Hello Mono World\");\n...             }\n...         }\n...     ''',\n...     [\n...         (b'', b'Hello Mono World')\n...     ]\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello Mono World\\n', b''), 0.02)\n    ],\n    b'Microsoft (R) Visual C# Compiler version 3.5.0-beta1-19606-04 (d2bd58c6)\\n'\n    b'Copyright (C) Microsoft Corporation. All rights reserved.\\n'\n    b'\\n'\n]\n>>> judge(\n...     Mono(Mono.Language.vb),  # Visual Basic (Mono)\n...     b'''\n...         Imports System\n... \n...         Module HelloWorld\n...             Sub Main()\n...                 Console.WriteLine(\"Hello World!\")\n...             End Sub\n...         End Module\n...     ''',\n...     [\n...         (b'', b'Hello World!')\n...     ]\n... )\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello World!\\n', b''), 0.024)\n    ],\n    b'Visual Basic.Net Compiler version 0.0.0.5943 (Mono 4.7 - tarball)\\n'\n    b'Copyright (C) 2004-2010 Rolf Bjarne Kvinge. All rights reserved.\\n'\n    b'\\n'\n    b\"Assembly 'mono, Version=0.0, Culture=neutral, PublicKeyToken=null' saved successfully to '/dockerjudge/0/mono.exe'.\\r\\n\"\n    b'Compilation successful\\r\\n'\n    b'Compilation took 00:00:00.0000000\\n'\n]\n>>>\n>>> judge(Swift(), b'print(\"Hello, world!\")', [(b'', b'Hello, world!')])  # Swift\n[\n    [\n        (<Status.AC: 'Accepted'>, (b'Hello, world!\\n', b''), 0.2)\n    ],\n    b''\n]\n```\n\n\n## [License](LICENSE)\nLicensed under [the **Apache License, Version 2.0**](https://www.apache.org/licenses/LICENSE-2.0)\n<a href=\"https://www.apache.org/foundation/press/kit/#wide\"><img src=\"https://www.apache.org/foundation/press/kit/asf_logo_wide.svg\" alt=\"Wide Apache Software Foundation Logo with Feather.svg\" height=\"32\" align=\"right\"></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/simple/dockerjudge/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wxh06/dockerjudge",
    "keywords": "docker,online-judge,online-judge-engine",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dockerjudge",
    "package_url": "https://pypi.org/project/dockerjudge/",
    "platform": "",
    "project_url": "https://pypi.org/project/dockerjudge/",
    "project_urls": {
      "Bug Tracker": "https://github.com/wxh06/dockerjudge/issues",
      "Documentation": "https://dockerjudge.readthedocs.io",
      "Download": "https://pypi.org/simple/dockerjudge/",
      "Homepage": "https://github.com/wxh06/dockerjudge",
      "Release notes": "https://github.com/wxh06/dockerjudge/releases",
      "Source Code": "https://github.com/wxh06/dockerjudge/tree/master"
    },
    "release_url": "https://pypi.org/project/dockerjudge/1.2.4/",
    "requires_dist": [
      "docker (>=3.7)",
      "docker[tls] (>=3.7) ; extra == 'tls'"
    ],
    "requires_python": ">=3.6",
    "summary": "A Docker Based Online Judge Engine",
    "version": "1.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7886670,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff2f09e384d8fb18e75fc1ecdcac6cf12f59e3d11c0a94906adab6950d13f659",
        "md5": "c333b9d00b7c70eb778e73d364545073",
        "sha256": "3bbff7a84a0878cdeadf4b9e809503040bb498b3cffdbb2d65d01fc93000b601"
      },
      "downloads": -1,
      "filename": "dockerjudge-1.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c333b9d00b7c70eb778e73d364545073",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17075,
      "upload_time": "2020-07-16T05:20:10",
      "upload_time_iso_8601": "2020-07-16T05:20:10.718781Z",
      "url": "https://files.pythonhosted.org/packages/ff/2f/09e384d8fb18e75fc1ecdcac6cf12f59e3d11c0a94906adab6950d13f659/dockerjudge-1.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ca2235ed634f1ecec72869bb235904dd6f84330740cf6809fe44a41c6e855cf",
        "md5": "8f1707e81c2f2843803e09debfacd212",
        "sha256": "dace14f7854383b159d8b85a86c515b45dcb7255b9977eab99e981b1e231a244"
      },
      "downloads": -1,
      "filename": "dockerjudge-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8f1707e81c2f2843803e09debfacd212",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20975,
      "upload_time": "2020-07-16T05:20:12",
      "upload_time_iso_8601": "2020-07-16T05:20:12.237488Z",
      "url": "https://files.pythonhosted.org/packages/8c/a2/235ed634f1ecec72869bb235904dd6f84330740cf6809fe44a41c6e855cf/dockerjudge-1.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}