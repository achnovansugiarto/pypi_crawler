{
  "info": {
    "author": "Chris Laws",
    "author_email": "clawsicus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Topic :: System :: Monitoring"
    ],
    "description": "dump1090 Exporter\n=================\n\nA Prometheus metrics exporter for the dump1090 Mode S decoder for RTLSDR\ndevices.\n\nThe dump1090 exporter collects statistics from a dump1090 service and\nexposes them to the Prometheus.io monitoring server for aggregation and\nlater visualisation.\n\nOnce installed the dump1090 exporter can be easily run from the command\nline as the installation script includes a console entry point.\n\nExample usage:\n\n    .. code-block:: console\n\n        $ dump1090exporter \\\n          --url=http://192.168.1.201:8080 \\\n          --port=9105 \\\n          --latitude=-34.9285 \\\n          --longitude=138.6007 \\\n          --debug\n\nIn the example above the exporter is instructed to monitor a dump1090\ninstance running on a machine with the IP address 192.168.1.201 using\nthe default port (8080) used by dump1090 tool. The exporter exposes a\nservice for Prometheus to scrape on port 9105 by default but this can\nbe changed by specifying it with the *--port* argument.\n\nThe example above also instructs the exporter to use a specific receiver origin (lat, lon). In this case it is for Adelaide, Australia. In most\ncases the dump1090 tool is not configured with the receivers position.\nBy providing the exporter with the receiver location it can calculate\nranges to aircraft. If the receiver position is already set within the\ndump1090 tool (and accessible from the *data/receivers.json* resource)\nthen the exporter will use that data as the origin.\n\nThe dump1090 exporter accepts a number of command line arguments. These\ncan be found by using the standard command line help request:\n\n.. code-block:: console\n\n    $ dump1090-exporter -h\n\nThe exporter fetches aircraft data (from *data/aircraft.json*) every 10 seconds. This can be modified by specifying a new value with the *--aircraft-interval* argument.\n\nThe exporter fetches statistics data (from *data/stats.json*) every 60 seconds, as the primary metrics being exported are extracted from the\n*last1min* time period. This too can be modified by specifying a new\nvalue with the *--stats-interval* argument.\n\nThe metrics that the dump1090 exporter provides to Prometheus can be\naccessed for debug and viewing using curl or a browser by fetching from\nthe */metrics* url. For example:\n\n.. code-block:: console\n\n    $ curl -s http://0.0.0.0:9001/metrics\n    # HELP messages Number of Mode-S messages accepted\n    # TYPE messages gauge\n    messages{time_period=\"latest\"} 190423\n    # HELP recent_aircraft_observed Number of aircraft recently observed\n    # TYPE recent_aircraft_observed gauge\n    recent_aircraft_observed{time_period=\"latest\"} 1\n    ...\n\n\nThe exporter exposes generalised metrics for statistics and uses the multi\ndimensional label capability of Prometheus metrics to include information\nabout which group the metric is part of.\n\nTo extract information for the peak signal metric that dump1090 aggregated\nover the last 1 minute you would specify the time_period for that group:\n\n.. code-block:: console\n\n    stats_local_peak_signal{job=\"dump1090\", time_period=\"last1min\"}\n\nIn the stats.json data there are 5 top level keys that contain statistics for\na different time period, defined by the \"start\" and \"end\" subkeys. The top\nlevel keys are:\n\n- *latest* which covers the time between the end of the \"last1min\" period and\n  the current time.\n- *last1min* which covers a recent 1-minute period. This may be up to 1 minute\n  out of date (i.e. \"end\" may be up to 1 minute old)\n- *last5min* which covers a recent 5-minute period. As above, this may be up\n  to 1 minute out of date.\n- *last15min* which covers a recent 15-minute period. As above, this may be up\n  to 1 minute out of date.\n- *total* which covers the entire period from when dump1090 was started up to\n  the current time.\n\nBy default only the *last1min* time period is exported.\n\n\n\nPrometheus Configuration\n------------------------\n\nOnce the dump1090 exporter is running then Prometheus can begin scraping it.\nHowever, Prometheus first needs to be told where to fetch the metrics from.\n\nThis can be done by updating the Prometheus configuration file with a new entry under the 'scrape_configs' block, looking something like this:\n\n.. code-block:: yaml\n\n    scrape_configs:\n      - job_name: 'dump1090'\n        scrape_interval: 10s\n        scrape_timeout: 5s\n        static_configs:\n          - targets: ['192.168.1.201:9105']\n            labels:\n              site: 'home'\n\n\nDocker\n------\n\nThe dump1090 exporter has been packaged into a Docker container, which\ncan simplify running it in some environments. The container is configured with an entry point that runs the dump1090 exporter with *--help* as the default arguement.\n\n.. code-block:: console\n\n    $ docker run -it --rm dump1090-exporter\n    usage: dump1090-exporter [-h] [--url <dump1090 url>]\n    ...\n\nTo run the dump1090 exporter container simply pass the standard command\nline arguments to it:\n\n.. code-block:: console\n\n    $ docker run --rm -p 9105:9105 \\\n      dump1090-exporter \\\n      --url=http://192.168.1.201:8080 \\\n      --latitude=-34.9285 \\\n      --longitude=138.6007 \\\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/claws/dump1090-exporter",
    "keywords": "prometheus,monitoring,metrics,dump1090,ADSB",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dump1090exporter",
    "package_url": "https://pypi.org/project/dump1090exporter/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dump1090exporter/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/claws/dump1090-exporter"
    },
    "release_url": "https://pypi.org/project/dump1090exporter/16.10.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Prometheus metrics exporter for the dump1090 Mode S decoder for RTLSDR",
    "version": "16.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13167545,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08ebb312fe6bfb11c88f05b0fa24722958cb267e1e49cb1c8eea6626a94b85f0",
        "md5": "b6489bb4f9cba725a38a720985fd890f",
        "sha256": "a23bbdcb75dd19ea7113490d7feabda6cae928a6de2458becf76eee0e7150bd4"
      },
      "downloads": -1,
      "filename": "dump1090exporter-16.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b6489bb4f9cba725a38a720985fd890f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10895,
      "upload_time": "2016-10-23T09:32:46",
      "upload_time_iso_8601": "2016-10-23T09:32:46.093902Z",
      "url": "https://files.pythonhosted.org/packages/08/eb/b312fe6bfb11c88f05b0fa24722958cb267e1e49cb1c8eea6626a94b85f0/dump1090exporter-16.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}