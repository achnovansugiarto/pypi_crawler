{
  "info": {
    "author": "Matt Maher",
    "author_email": "matt@maher-family.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mbmutils\n\nSimpmle common utilities.\n\n## Installation\n\n```\npip install mbmutils\n```\n\n## f-Functions\n\nThe `f`-functions are simple string utilities of common actions. They have the\nstandard pattern of:\n\n> return string after|before|between the keys\n\nThese all use the \"first found\" index. Meaning if there are more than one\ninstance of the key found, they use the first. Because of this there are functions\nthat look from the front (`f_left | f_right`) and functions that look from the\nback (`f_left_back | f_right_back`).\n\n| function     | Description                                                         |\n|--------------|---------------------------------------------------------------------|\n| f_right      | return everything to the `right` of the key                         |\n| f_left       | return everything to the `left` of the key                          |\n| f_right_back | return everything to the `right` of the key, starting from the back |\n| f_left_back  | return everything to the `left` of the key, starting from the back  |\n| f_between          | return everything between the keys          |\n\nYou will also find a `not_found` parameter to these functions. This\nallows you to define what is returned if the key is not found in the string.\n\n### Examples\n\n```python\n\nfrom mbmutils import mu\n\nmy_string = \"hello there fancy world!\"\n\nprint({mu.f_right(my_string, ' fancy ')})\n# -> world!\n\nprint({mu.f_left(my_string, ' fancy ')})\n# -> hello there \n\nprint({mu.f_left(my_string, 'will not find')})\n# -> None \n\nprint({mu.f_left(my_string, 'will not find',\n                 not_found=\"not here\")})\n# -> not here \n```\n\n## Path functions\n\nThere are also a few _path-finding_ functions that search for a path\ncontaining the `partial_path` provided. These will search the current path\nand then begin looking upward from there.\n\nThere are 2 functions: 1 for files and the other for directories.\n\n```python\n\nfrom mbmutils import mu\n\n# assuming current folder is\n# /path/to/python/code\nmu.find_folder_path('data')\n# will return the first valid:\n#   -> path/to/python/code/data\n#   -> path/to/python/data\n#   -> path/to/data\n#   -> path/data\n\n# again, assuming current folder is\n# /path/to/python/code\nmu.find_folder_path('my_file.json')\n# will return the first valid:\n#   -> path/to/python/code/my_file.json\n#   -> path/to/python/my_file.json\n#   -> path/to/my_file.json\n#   -> path/my_file.json\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bladnman/mbmutils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mbmutils",
    "package_url": "https://pypi.org/project/mbmutils/",
    "platform": null,
    "project_url": "https://pypi.org/project/mbmutils/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bladnman/mbmutils/issues",
      "Homepage": "https://github.com/bladnman/mbmutils"
    },
    "release_url": "https://pypi.org/project/mbmutils/1.2.0/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Developer's tools",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14759449,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9de9755c11c4aa4da433f4357bb468cece8e20e0d43864810915d39021845bb4",
        "md5": "01dbf18fb7eeba73c5c89153a5fec99b",
        "sha256": "a34e20b5366c8ea422b6fcc8429c40a61cad08ae64001ca09fabd55fe796311a"
      },
      "downloads": -1,
      "filename": "mbmutils-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01dbf18fb7eeba73c5c89153a5fec99b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4178,
      "upload_time": "2022-08-15T01:49:32",
      "upload_time_iso_8601": "2022-08-15T01:49:32.749258Z",
      "url": "https://files.pythonhosted.org/packages/9d/e9/755c11c4aa4da433f4357bb468cece8e20e0d43864810915d39021845bb4/mbmutils-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b6c27f358857333019537e584074a5d7154fa4b7ea63ebc27d8e814721dda84",
        "md5": "02f3d195b03084524e47b42fcc9c6774",
        "sha256": "21a89e088e8e5a2fae44b2ef203b708f8a444aa03789ad7823b9ba6c22e53c4f"
      },
      "downloads": -1,
      "filename": "mbmutils-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "02f3d195b03084524e47b42fcc9c6774",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3914,
      "upload_time": "2022-08-15T01:49:34",
      "upload_time_iso_8601": "2022-08-15T01:49:34.666586Z",
      "url": "https://files.pythonhosted.org/packages/1b/6c/27f358857333019537e584074a5d7154fa4b7ea63ebc27d8e814721dda84/mbmutils-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}