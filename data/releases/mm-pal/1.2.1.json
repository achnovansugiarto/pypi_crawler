{
  "info": {
    "author": "Kevin Weiss",
    "author_email": "weiss.kevin604@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![ci Actions Status](https://github.com/riot-appstore/mm_pal/workflows/ci/badge.svg)](https://github.com/riot-appstore/mm_pal/actions)\r\n\r\n# mm_pal (Memory Map Protocol Abstraction Layer)\r\n\r\nPython package for providing an runtime access to embedded devices based\r\non a memory map type interface.\r\n\r\n## Description\r\n\r\nThis package consists of base classes to build interfaces and a mock\r\ndevice used for testing and as an example of implementation.\r\n\r\nDevice connection such as `serial` and parsers such as `json` are used to get\r\nstandard output.\r\n\r\n## Concept\r\n\r\nEmbedded devices are generally constrained and communication with\r\nruntime parameters can take up lots of resources. Since many users of\r\nmicrocontroller are familiar with the concept of a memory map or\r\nregister map the [Memory Map\r\nManager](https://github.com/riot-appstore/memory_map_manager) can be\r\nused as and lightweight way of coordinating a single memory map for\r\ndocumentation, C structures, and python interface. The `mm_pal` provides\r\nthe building blocks for a custom interface. All common functions related\r\nto connecting to the device, parsing output of the registers, and\r\nreading/writing to the registers are handled and only application\r\nspecific functionality needs to be implemented. This can make\r\ndevelopment easier, especially when the registers are changing\r\nfrequently.\r\n\r\n## Architecture\r\n\r\n```\r\n┏━━━━━━━━━━━┓       ┏━━━━━━━━━┓\r\n┃ developer ┃       ┃ script  ┃\r\n┗━━━━━▲━━━━━┛       ┗━━━━▲━━━━┛\r\n      ┃                  ┃\r\n ┏━━━━┸━━━━┓       ┏━━━━━┸━━━━━┓\r\n ┃ my_cli  ◄━━━━━━━┫ my_app_if ┃\r\n ┗━━━━▲━━━━┛       ┗━━━━━▲━━━━━┛\r\n      ┃    ┌────────┐    ┃\r\n      ┃    │ mm_pal │    ┃\r\n┌─────╂────┴────────┴────╂────────┐\r\n│┏━━━━┸━━━┓          ┏━━━┸━━━┓    │\r\n│┃ mm_cmd ◄━━━━━━━━━━┫ mm_if ┃    │\r\n│┗━━━━━━━━┛          ┗━━━▲━━━┛    │\r\n│                        ┃        │\r\n│                ┏━━━━━━━┸━━━━━━━┓│\r\n│                ┃ serial_driver ┃│\r\n│                ┗━━━━━━━▲━━━━━━━┛│\r\n└────────────────────────╂────────┘\r\n                         ┃\r\n              ┏━━━━━━━━━━▼━━━━━━━━━━┓\r\n              ┃ my_embedded_device  ┃\r\n              ┗━━━━━━━━━━━━━━━━━━━━━┛\r\n```\r\n\r\n## Installing package\r\n\r\nTo install `mm_pal` use pip:\r\n\r\n`pip install mm_pal --user`\r\n\r\n_Note: only use python 3 which may require pip3_\r\n\r\n\r\nTo install from sources:\r\n\r\n`./setup.py install --force --user`\r\n\r\n\r\n_Note: setuptools package should be installed._\r\n\r\n## Using the package\r\n\r\nThis package is meant to be built upon. An example implementation is done with\r\nthe [mock_if](mock_pal/mock_if.py) and the [mock_cli](mock_pal/mock_cli.py).\r\n\r\nThe mm_cmd is based on the [cmd2](https://github.com/python-cmd2/cmd2) module\r\nis probably worth reading the [documenation](https://cmd2.readthedocs.io/en/latest/).\r\n\r\n## Useful commands\r\n\r\nTo regenerate documentation use:\r\n`sphinx-apidoc -f -o docs/source/ mm_pal mock_pal; make html -C docs/`\r\n\r\n## Testing\r\n\r\nTo test the package with `pytest` must be installed installed and updated.\r\n\r\nUsing `./setup.py test` or `tox` will perform tests on the\r\nsource package.\r\n\r\nSpecial thanks to [riotctrl](https://github.com/RIOT-OS/riotctrl) as it served as a great example.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/riot-appstore",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mm-pal",
    "package_url": "https://pypi.org/project/mm-pal/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mm-pal/",
    "project_urls": {
      "Homepage": "https://github.com/riot-appstore"
    },
    "release_url": "https://pypi.org/project/mm-pal/1.2.1/",
    "requires_dist": [
      "pyserial",
      "cmd2 (>=2)"
    ],
    "requires_python": ">=3.7.*",
    "summary": "Protocol abstraction and parser for embedded devices",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16125810,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6270d6b514f71a426ddc324008118f91ae2611109023cfc9ab2086c9ed1f4e1a",
        "md5": "04b976b275a9086c3b0c08c40cf9a228",
        "sha256": "d6bcf70b9d32393ba717bccc0ae03aec7c49eabca13686bdbedb73c7abff9e8a"
      },
      "downloads": -1,
      "filename": "mm_pal-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04b976b275a9086c3b0c08c40cf9a228",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.*",
      "size": 27602,
      "upload_time": "2022-12-16T12:36:36",
      "upload_time_iso_8601": "2022-12-16T12:36:36.533005Z",
      "url": "https://files.pythonhosted.org/packages/62/70/d6b514f71a426ddc324008118f91ae2611109023cfc9ab2086c9ed1f4e1a/mm_pal-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b271f01b345f637c50e930eb1fb137565ca92ae9843d571933479c300907a0a",
        "md5": "39ebfefa94a461f9a7cadead0479a8c7",
        "sha256": "537e917b5377d18e08c4f94e0be8cf741f70c6c4d20ea0c52611c9122a03f59e"
      },
      "downloads": -1,
      "filename": "mm_pal-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "39ebfefa94a461f9a7cadead0479a8c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.*",
      "size": 25363,
      "upload_time": "2022-12-16T12:36:38",
      "upload_time_iso_8601": "2022-12-16T12:36:38.325803Z",
      "url": "https://files.pythonhosted.org/packages/9b/27/1f01b345f637c50e930eb1fb137565ca92ae9843d571933479c300907a0a/mm_pal-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}