{
  "info": {
    "author": "Pavan Kumar",
    "author_email": "pavanputhra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Dockdj\n\n#### Django app deployment made easy\n\nDockdj is a command line tool that allows you to deploy any [Django](https://www.djangoproject.com/) app to single Ubuntu server.\n\nThis tool is inspired by [Meteor up](http://meteor-up.com/) tool which is used to deploy [Meteor.js](https://www.meteor.com/) app.\n\nYou can install and use Dockdj on Linux, Mac and Windows. It can deploy to servers running latest Ubuntu.\n\nDockdj is powered by [Docker compose](https://docs.docker.com/compose/overview/), making deployment easy to manage.\n\n\n#### Requirement\n\nThis tool needs Python > 3.6\n\n#### Install\n\nInstall the dockdj using following command\n\n    $ pip install dockdj\n\n\n#### Usage\n\nLets say you have a Django project with channels (asgi) and celery worker. \nAnd celery worker needs rabbit mq.\nDockdj can help to deploy this app easily with following architecture.\nEach box inside server is docker container.\n\n    +-----------------------------------------------------------------------------+\n    |                      Ubuntu server 18.04 LTS                                |\n    |                                                                             |\n    |                                                   +----------------+        |\n    |                                          +--------+   wsgi:80      |        |\n    |        +---------------+                 |        |  (gunicorn)    |        |\n    |        |  nginx:80     +-----------------+        +----------------+        |\n    |        |  static files +-----------------+                                  |\n    |        +---------------+                 |                                  |\n    |           localhost:8000                 |        +----------------+        |\n    |                                          |        |   asgi:80      |        |\n    |                                          +--------+  (daphne)      |        |\n    |                                                   +----------------+        |\n    |                                                                             |\n    |                                                                             |\n    |                                                                             |\n    |                                                                             |\n    |                                                                             |\n    |                                                                             |\n    |         +--------------+                          +----------------+        |\n    |         |  celery      +--------------------------+   rabbit mq    |        |\n    |         |              |                          |                |        |\n    |         +--------------+                          +----------------+        |\n    |                                                                             |\n    |                                                                             |\n    |             Example deployment of django app using dockdj                   |\n    +-----------------------------------------------------------------------------+\n\n###### How to deploy as show in diagram?\n\nCreate a sibling to the django project directory for saving dockdj settings \nfiles which will be used to deploy the django app\n\n    $ mkdir deploy\n\n    parent\n        - hello_world\n        |    -hello_world\n        |        -wsgi.py\n        - deploy\n\n    $ cd deploy\n\n    $ dockdj init\n\nThis will create two files `dockdj.yaml` and `settings.py`\n\n    parent\n        - hello_world\n        |    -hello_world\n        |        -wsgi.py\n        - deploy\n            - dockdj.yaml\n            - settings.py\n\nModify the `dockdj.yaml` file to enter server configuration and app details. \nInitial file looks as follows. \nRemove the optional/unused configuration according to your needs.\n\n    ---\n    server:\n      host: 1.2.3.4\n      # must be sudo without password\n      username: root\n      pem: \"/home/user/.ssh/id_rsa\"\n    app:\n      # Project name used by script to name docker\n      name: hello_world_stage\n      settings: 'hello_world/settings.py'\n      wsgi:\n        app: 'hello_world.wsgi:application'\n      asgi: # optional if app uses agsi like channels\n        app: 'hello_world.asgi:application'\n        paths: # used by nginx to route to asig\n          - /ws\n          - /some_thing_else\n      celery: # optional for celery django app\n        app: 'hello_world'\n      requirements_file: 'requirements.txt'\n      # Django project directory\n      path: \"/path/to/django/code/hello_world\"\n      docker:\n        image: python:3.7\n\n    compose:\n      services:\n        celery:\n          depends_on:\n            - rabbitmq\n        rabbitmq:\n          image: rabbitmq\n\n\n`settings.py` fill contains settings which will be appended to your django app's settings.py file. You can enter production related settings or override development settings here. Initial `settings.py` file looks like as follows.\n\n\n    DEBUG = False\n\n    # Add the your servers host name or ip address\n    ALLOWED_HOSTS = ['1.2.3.4', 'www.example.com']\n\n    CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672//'\n\n\nAfter editing these two files appropriately run following command to setup server. This will install docker in Ubuntu servers if not already installed.\n\n\n    $ dockdj setup\n\n\nTo deploy the django app run following.\n\n    $ dockdj deploy\n\nThis will create docker images of your Django app.\nCollects the static file and adds it to nginx container. \nRuns all required containers as specified in `dockdj.yaml`.\nBinds the port 80 of nginx container to port 8000 of Ubuntu host. \nPort binding can be modified by adding following configuration in `dockdj.yaml'\n\n    compose:\n      services:\n        nginx:\n          ports:\n          - 8004:80\n\n\n\n#### dockdj stop\n\nRun following command to stop all containers\n\n    $ dockdj stop\n\n\n#### dockdj restart\n\nRun following command to restart all containers\n\n    $ dockdj restart\n\n\n#### dockdj logs\n\nRun following command to see logs of all containers\n\n    $ dockdj logs\n\n\n#### dockdj one-off\n\nYou can run one-off script on server using one-off sub command as follows.\n\n    $ dockdj one-off python manage.py migrate\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pavanputhra/dockdj",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dockdj",
    "package_url": "https://pypi.org/project/dockdj/",
    "platform": "",
    "project_url": "https://pypi.org/project/dockdj/",
    "project_urls": {
      "Homepage": "https://github.com/pavanputhra/dockdj"
    },
    "release_url": "https://pypi.org/project/dockdj/2.1.0/",
    "requires_dist": [
      "fabric",
      "PyYAML"
    ],
    "requires_python": "",
    "summary": "Deploy the Django app to Ubuntu server as docker container.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4843973,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdf10b86c7aeff4398d1739325e18c9ecda74726bbfe94b1fd8dd2b1f5da753d",
        "md5": "1e95592aa33fd3dd54f9ee003d38d5e8",
        "sha256": "80974064eba98068b4fd5f0c0e029e235ccd352ca999c04dd7a4bd4202b5f82b"
      },
      "downloads": -1,
      "filename": "dockdj-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e95592aa33fd3dd54f9ee003d38d5e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9293,
      "upload_time": "2019-02-19T11:23:32",
      "upload_time_iso_8601": "2019-02-19T11:23:32.100184Z",
      "url": "https://files.pythonhosted.org/packages/fd/f1/0b86c7aeff4398d1739325e18c9ecda74726bbfe94b1fd8dd2b1f5da753d/dockdj-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e6cde7c8ca9d7e8e8fe3e73b6ac7081bd58d00c7ab4946a76516295e3857c9d",
        "md5": "ee245ac11106bb65abc463852c4a6bad",
        "sha256": "647516e7b8e9b05be7a42441924e68b45f491fbfd84037ebbdaf25ad1dec6bdc"
      },
      "downloads": -1,
      "filename": "dockdj-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee245ac11106bb65abc463852c4a6bad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8867,
      "upload_time": "2019-02-19T11:23:33",
      "upload_time_iso_8601": "2019-02-19T11:23:33.742777Z",
      "url": "https://files.pythonhosted.org/packages/6e/6c/de7c8ca9d7e8e8fe3e73b6ac7081bd58d00c7ab4946a76516295e3857c9d/dockdj-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}