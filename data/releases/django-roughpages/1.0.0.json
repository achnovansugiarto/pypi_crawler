{
  "info": {
    "author": "Alisue",
    "author_email": "lambdalisue@hashnote.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "django-roughpages\n==========================\n.. image:: https://img.shields.io/travis/lambdalisue/django-roughpages/master.svg\n    :target: http://travis-ci.org/lambdalisue/django-roughpages\n    :alt: Build status\n\n.. image:: https://img.shields.io/scrutinizer/g/lambdalisue/django-roughpages/master.svg\n    :target: https://scrutinizer-ci.com/g/lambdalisue/django-roughpages/inspections\n    :alt: Code quality\n\n.. image:: https://img.shields.io/coveralls/jekyll/jekyll/master.svg\n    :target: https://coveralls.io/r/lambdalisue/django-roughpages/\n    :alt: Coverage\n\n.. image:: https://requires.io/github/lambdalisue/django-roughpages/requirements.svg?branch=master\n    :target: https://requires.io/github/lambdalisue/django-roughpages/requirements\n    :alt: Requirements\n\n.. image:: https://img.shields.io/pypi/v/django-roughpages.svg\n    :target: https://pypi.python.org/pypi/django-roughpages/\n    :alt: Version\n\n.. image:: https://img.shields.io/pypi/status/django-roughpages.svg\n    :target: https://pypi.python.org/pypi/django-roughpages/\n    :alt: Status\n\n.. image:: https://img.shields.io/pypi/l/django-roughpages.svg\n    :target: https://pypi.python.org/pypi/django-roughpages/\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/pyversions/django-roughpages.svg\n    :target: https://pypi.python.org/pypi/django-roughpages/\n    :alt: Python versions\n\n.. image:: https://img.shields.io/badge/django-1.7--1.10-blue.svg?style=flat-square\n    :alt: Django versions\n\nAn template based the flatpages_ like app.\nNot like django's flatpages app, django-roughpages render a template file which\ndetermined from the accessed URL.\nIt is quite combinient when you want to render simple static page.\nYou do not need to prepare ``urls.py`` or ``views.py`` anymore for that kind\nof simple static page.\n\ndjango-roughpages call ``roughpages.views.roughpage`` view with the accessed\nURL when django raise ``Http404`` exception.\nThe view automatically find the corresponding template file from ``roughpages``\ndirectory in one of your template directories.\nAssume if the user accessed http://localhost/foo/bar/hoge/.\nIf there is no urls pattern patched with the URL, django-roughpages try to find\ncorresponding template file such as ``templates/roughpages/foo/bar/hoge.html``.\nIf django-roughpages find the corresponding template file, it will render the\ntemplate and return the ``HttpResponse``, otherwise it re-raise ``Http404``\nexception.\n\nYou can complicatedly select the corresponding template file.\ndjango-roughpages determine the filename with a backend system.\nThe default backend is ``roughpages.backends.AuthTemplateFilenameBackend`` and\nit prefer ``hoge.anonymous.html`` or ``hoge.authenticated.html`` than \n``hoge.html`` depends on the accessed user authentication state.\nThus you can simply prepare the page for authenticated user as\n``<something>.authenticated.html`` and for anonymous user as\n``<something>.anonymous.html``.\nNote that the filename which contains ``'.'`` is not allowed thus user cannot \naccess ``hoge.authenticated.html`` with a url like ``/hoge.authenticated`` to prevent unwilling file acccess.\n\nYou can control the backend behavior with making a custom backend.\nTo make a custom backend, you need to inherit\n``roughpages.backends.TemplateFilenameBackendBase`` and override\n``prepare_filenames(self, filename, request)`` method.\nThe method receive an original filename and ``HttpRequest`` instance and\nmust return a filename list.\nThe django-roughpages then try to load template file from the beginning of\nthe list, thus the order of the appearance is the matter.\n\n.. _flatpages: https://docs.djangoproject.com/en/dev/ref/contrib/flatpages/\n\nDocumentation\n-------------\nhttp://django-roughpages.readthedocs.org/en/latest/\n\nInstallation\n------------\nUse pip_ like::\n\n    $ pip install django-roughpages\n\n.. _pip:  https://pypi.python.org/pypi/pip\n\nUsage\n-----\n\nConfiguration\n~~~~~~~~~~~~~\n1.  Add ``roughpages`` to the ``INSTALLED_APPS`` in your settings\n    module\n\n    .. code:: python\n\n        INSTALLED_APPS = (\n            # ...\n            'roughpages',\n        )\n\n2.  Add our extra fallback middleware\n\n    Django >= 1.10\n\n    .. code:: python\n\n        MIDDLEWARE = (\n            # ...\n            'roughpages.middleware.RoughpageFallbackMiddleware',\n        )\n\n    Django < 1.10\n\n    .. code:: python\n\n        MIDDLEWARE_CLASSES = (\n            # ...\n            'roughpages.middleware.RoughpageFallbackMiddleware',\n        )\n\n3.  Create ``roughpages`` directory in one of your template directories\n    specified with ``settings.TEMPLATE_DIRS``\n\n\nQuick tutorial\n~~~~~~~~~~~~~~~\n1.  Create ``roughpages/foo/bar/hoge.html`` as follow\n\n    .. code:: html\n\n        <html>\n        <body>\n            This is Hoge\n        </body>\n        </html>\n\n2.  Run syncdb and Start development server with\n    ``python manage.py syncdb; python manage.py runserver 8000``\n\n3.  Access http://localhost:8000/foo/bar/hoge/ and you will see \"This is Hoge\"\n\n4.  Create ``roughpages/foo/bar/piyo.anonymous.html`` as follow\n\n    .. code:: html\n\n        <html>\n        <body>\n            This is Piyo Anonymous\n        </body>\n        </html>\n\n5.  Create ``roughpages/foo/bar/piyo.authenticated.html`` as follow\n\n    .. code:: html\n\n        <html>\n        <body>\n            This is Piyo Authenticated\n        </body>\n        </html>\n\n6.  Access http://localhost:8000/foo/bar/piyo/ and you will see\n    \"This is Piyo Anonymous\"\n\n7.  Access http://localhost:8000/admin/ and login as admin user.\n\n8.  Access http://localhost:8000/foo/bar/piyo/ and you will see\n    \"This is Piyo Authenticated\"\n\n\n.. Note::\n\n    Any dots ('.') in a last part of URL is replaced to underscore ('_') to prevent a security risk.\n    See https://github.com/lambdalisue/django-roughpages/issues/3",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/lambdalisue/django-roughpages/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lambdalisue/django-roughpages",
    "keywords": "django flatpage template",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-roughpages",
    "package_url": "https://pypi.org/project/django-roughpages/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-roughpages/",
    "project_urls": {
      "Download": "https://github.com/lambdalisue/django-roughpages/tarball/master",
      "Homepage": "https://github.com/lambdalisue/django-roughpages"
    },
    "release_url": "https://pypi.org/project/django-roughpages/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "An template based flatpage like app of Django.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2635352,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b54a4eec005276a52df32a811d2d002f89e60d5d01929af807ff6b73e0dfe7e",
        "md5": "1f6110cb937e41d4199275c4136a8d45",
        "sha256": "755d69bd600d70708fb2cf729ae2a9f5a42cb13d93d72b362ffe55fa2af5965f"
      },
      "downloads": -1,
      "filename": "django-roughpages-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1f6110cb937e41d4199275c4136a8d45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10347,
      "upload_time": "2017-02-11T14:56:57",
      "upload_time_iso_8601": "2017-02-11T14:56:57.856181Z",
      "url": "https://files.pythonhosted.org/packages/7b/54/a4eec005276a52df32a811d2d002f89e60d5d01929af807ff6b73e0dfe7e/django-roughpages-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}