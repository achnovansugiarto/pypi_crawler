{
  "info": {
    "author": "Adam Knight",
    "author_email": "adam@movq.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Security"
    ],
    "description": "drf-httpsig\n-----------\n\nOverview\n--------\n\nProvides `HTTP Signature`_ support for `Django REST framework`_. The HTTP Signature package provides a way to achieve origin authentication and message integrity for HTTP messages. Similar to Amazon's `HTTP Signature scheme`_, used by many of its services. The `HTTP Signature`_ specification is currently an IETF draft.\n\n\n.. contents::\n\nInstallation\n------------\n\nInstalling the package via the repository::\n\n   pip install drf-httpsig\n\nThe current implementation depends on the `httpsig`_ package, which is a modified version of the `http_signature package by David Lehn`_.\n\n\nRunning the tests\n-----------------\n\nTo run the tests for the packages, use the following command on the repository root directory::\n\n  python manage.py test\n\n\nUsage\n-----\n\nTo authenticate HTTP requests via HTTP signature, you need to:\n\n1. Install this package in your Django project, as instructed in `Installation`_.\n2. Add ``drf_httpsig`` to your ``settings.py`` INSTALLED_APPS.\n3. In your app code, extend the ``SignatureAuthentication`` class, as follows::\n\n    # my_api/auth.py\n\n    from drf_httpsig.authentication import SignatureAuthentication\n\n    class MyAPISignatureAuthentication(SignatureAuthentication):\n        # The HTTP header used to pass the consumer key ID.\n\n        # A method to fetch (User instance, user_secret_string) from the\n        # consumer key ID, or None in case it is not found.\n        def fetch_user_data(self, keyId):\n            # ...\n            # example implementation:\n            try:\n                user = User.objects.get(keyId=keyId)\n                return (user, user.secret)\n            except User.DoesNotExist:\n                return (None, None)\n\n\n4. Configure Django REST framework to use you authentication class; e.g.::\n\n    # my_project/settings.py\n\n    # ...\n    REST_FRAMEWORK = {\n        'DEFAULT_AUTHENTICATION_CLASSES': (\n           'my_api.auth.MyAPISignatureAuthentication',\n        ),\n        'DEFAULT_PERMISSION_CLASSES': (\n            'rest_framework.permissions.IsAuthenticated',\n        )\n    }\n    # The above will force HTTP signature for all requests.\n    # ...\n\n\nRoadmap\n-------\n\n- Currently, the library only supports HMAC-SHA256 for signing.\n- Since HTTP Signature uses a HTTP header for the request date and time, the authentication class could deal with request expiry.\n\n\nExample usage & session w/cURL\n------------------------------\n\nAssuming the setup detailed in `Usage`_, a project running on ``localhost:8000`` could be probed with cURL as follows::\n\n  ~$ SSS=Base64(Hmac(SECRET, \"Date: Mon, 17 Feb 2014 06:11:05 GMT\", SHA256))\n  ~$ curl -v -H 'Date: \"Mon, 17 Feb 2014 06:11:05 GMT\"' -H 'Authorization: Signature keyId=\"my-key\",algorithm=\"hmac-sha256\",headers=\"date\",signature=\"SSS\"'\n\nAnd with much less pain, using the modules ``requests`` and ``http_signature``::\n\n  import requests\n  from http_signature.requests_auth import HTTPSignatureAuth\n\n  KEY_ID = 'su-key'\n  SECRET = 'my secret string'\n\n  signature_headers = ['request-line', 'accept', 'date', 'host']\n  headers = {\n      'Host': 'localhost:8000',\n      'Accept': 'application/json',\n      'Date': \"Mon, 17 Feb 2014 06:11:05 GMT\"\n  }\n\n  auth = HTTPSignatureAuth(key_id=KEY_ID, secret=SECRET,\n                           algorithm='hmac-sha256',\n                           headers=signature_headers)\n  req = requests.get('http://localhost:8000/resource/',\n                     auth=auth, headers=headers)\n  print req.content\n\n\n.. References:\n.. _`HTTP Signature`: https://datatracker.ietf.org/doc/draft-cavage-http-signatures/\n.. _`Django REST framework`: http://django-rest-framework.org/\n.. _`HTTP Signature scheme`: http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\n.. _`httpsig`: https://github.com/ahknight/httpsig\n.. _`http_signature package by David Lehn`: https://github.com/digitalbazaar/py-http-signature\n\n\ndrf-httpsig Changes\n-------------------\n\nv1.0b2 (2014-Jul-01)\n~~~~~~~~~~~~~~~~~~~~\n* Added versioneer.\n* Updated requirements to use latest httpsig.\n* Added \"setup.py test\" and tox support.\n* Fixed a unit test.\n\nv1.0b1 (2014-Jun-27)\n~~~~~~~~~~~~~~~~~~~~\n* Renamed to drf-httpsig because I don't hate my hands.\n* Updated requirements versions to be more sane.\n* Switched to a different branch for http_signature.\n* Removed API_KEY_HEADER in favor of the keyId, per spec.\n* Cleaned up the repo a bit.\n* Cleaned up the code a bit.\n\n\ndjangorestframework-httpsignature (previous)\n--------------------------------------------\n\nv0.1.5, 20140613 -- Document installation issue\n\n* Document workaround on installation problems.\n\nv0.1.4, 20140613 -- Improve installation\n\n* Make requirements file comply with docs.\n* Decide on http_signature commit.\n\nv0.1.3, 20140220 -- Upload to PyPI\n\n* Prepare docs to upload package to PyPI\n\nv0.1.2, 20140219 -- Package data and clean up\n\n* Updated package classifiers\n* Cleaned up unused code in authentication.py\n\nv0.1.1, 20140217 -- Documentation and clean up\n\n* The package can be installed.\n* Continuous integration via Travis.\n* Unit tests for the authentication code.\n* General docuementation in the README file.\n\nv0.1.0, 20140217 -- Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ahknight/drf-httpsig",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "drf-httpsig",
    "package_url": "https://pypi.org/project/drf-httpsig/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/drf-httpsig/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/ahknight/drf-httpsig"
    },
    "release_url": "https://pypi.org/project/drf-httpsig/1.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "HTTP Signature support for Django REST framework",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3715254,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76b4b38b10a8118b526fa85bd36da71988c3c9d8156feac1a33bef20d424571b",
        "md5": "bc92857a1bc71de966ac4e1669a5fd24",
        "sha256": "1f6e2dd700d27e47f9a93bd997390c1b0efc294904728fc6aa727bc0574da4a3"
      },
      "downloads": -1,
      "filename": "drf_httpsig-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc92857a1bc71de966ac4e1669a5fd24",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 11142,
      "upload_time": "2014-07-01T21:07:55",
      "upload_time_iso_8601": "2014-07-01T21:07:55.804899Z",
      "url": "https://files.pythonhosted.org/packages/76/b4/b38b10a8118b526fa85bd36da71988c3c9d8156feac1a33bef20d424571b/drf_httpsig-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}