{
  "info": {
    "author": "Thomas Mansencal",
    "author_email": "thomas.mansencal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Utilities"
    ],
    "description": "Manager\n=======\n\n..  image:: https://secure.travis-ci.org/KelSolaar/Manager.png?branch=master\n\nIntroduction\n------------\n\n**Manager** is the Components Manager package of `Umbra <https://github.com/KelSolaar/Umbra>`_, `sIBL_GUI <https://github.com/KelSolaar/sIBL_GUI>`_ and `sIBL_Reporter <https://github.com/KelSolaar/sIBL_Reporter>`_. Components are simple python packages extending capabilities of their host application.\n\nInstallation\n------------\n\nThe following dependencies are needed:\n\n-  **Python 2.7.3**: http://www.python.org/\n-  **PyQt**: http://www.riverbankcomputing.co.uk/\n\nTo install **Manager** from the `Python Package Index <http://pypi.python.org/pypi/Manager>`_ you can issue this command in a shell::\n\n\tpip install Manager\n\nor this alternative command::\n\n\teasy_install Manager\n\nAlternatively, if you want to directly install from `Github <http://github.com/KelSolaar/Manager>`_ source repository::\n\n\tgit clone git://github.com/KelSolaar/Manager.git\n\tpython setup.py install\n\nIf you want to build the documentation you will also need:\n\n-  **Tidy** http://tidy.sourceforge.net/\n\nUsage\n-----\n\nPlease refer to `Manager - Api <http://thomasmansencal.com/Sharing/Manager/Support/Documentation/Api/index.html>`_ for precise usage examples.\n\nA Component package contains at least a resource **.rc** description file and a main module::\n\n\ttestsComponentA\n\t├── __init__.py\n\t├── testsComponentA.py\n\t└── testsComponentA.rc\n\nThe description file is a configuration style file with a structure similar to what you would find in Microsoft Windows INI files::\n\n\t[Component]\n\tName = core.testsComponentA\n\tTitle = Tests Component A\n\tModule = testsComponentA\n\tObject = TestsComponentA\n\tRank = 10\n\tVersion = 1.0\n\n\t[Informations]\n\tAuthor = Thomas Mansencal\n\tEmail = thomas.mansencal@gmail.com\n\tUrl = http://www.hdrlabs.com/\n\tDescription = Core tests Component A.\n\nGiven the following directories structure::\n\n\tcore\n\t├── __init__.py\n\t├── testsComponentA\n\t│   ├── __init__.py\n\t│   ├── testsComponentA.py\n\t│   └── testsComponentA.rc\n\t└── testsComponentB\n\t\t├── __init__.py\n\t\t├── testsComponentB.py\n\t\t└── testsComponentB.rc\n\nInstantiating the Components Manager is done the following way::\n\n\n\t>>> manager = Manager((\"./manager/tests/testsManager/resources/components/core\",))\n\t>>> manager.registerComponents()\n\tTrue\n\t>>> manager.listComponents()\n\t['core.testsComponentA', 'core.testsComponentB']\n\t>>> manager.instantiateComponents()\n\tTrue\n\t>>> manager.getInterface(\"core.testsComponentA\")\n\t<testsComponentA.TestsComponentA object at 0x11dd990>\n\n**manager.componentsManager.Manager.getInterface(name)** method returns the interface of given Component, in the previous example it's the object declared in the description file by this statement: **Object = TestsComponentA**.\n\nThree base Components are provided by default:\n\n-  **manager.component.Component**\n-  **manager.qobjectComponent.QObjectComponent**\n-  **manager.qwidgetComponent.QWidgetComponent**\n\nWhen inheriting from those Components, one have to reimplement the following methods for all the Components types:\n\n-  **activate**\n-  **deactivate**\n\n**activated** attribute has to be set accordingly in the methods implementation.\n\nWhen implementing a **manager.qwidgetComponent.Component** or **manager.qobjectComponent.QObjectComponent**, the following methods are also needed:\n\n-  **initialize**\n-  **uninitialize**\n\n**initialized** attribute has to be set accordingly in the methods implementation.\n\nOr alternatively, those methods when implementing a **manager.qwidgetComponent.QWidgetComponent**:\n\n-  **initializeUi**\n-  **uninitializeUi**\n\n**initializedUi** attribute has to be set accordingly in the methods implementation.\n\nReference Component implementation example class::\n\n\n\tclass TestsComponentA(Component):\n\n\t\tdef __init__(self, name=None):\n\t\t\tComponent.__init__(self, name=name)\n\t\t\t\n\t\t\tself.deactivatable = True\n\n\t\tdef activate(self):\n\t\t\tprint(\"> Activating '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.activated = True\n\t\t\treturn True\n\n\t\tdef deactivate(self):\n\t\t\tprint(\"> Deactivating '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.activated = False\n\t\t\treturn True\n\n\t\tdef initialize(self):\n\t\t\tprint(\"> Initializing '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.initialized = True\n\t\t\treturn True\n\n\t\tdef uninitialize(self):\n\t\t\tprint(\"> Uninitializing '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.initialized = False\n\t\t\treturn True\n\nAbout\n-----\n\n| **Manager** by Thomas Mansencal – 2008 - 2012\n| Copyright© 2008 - 2012 – Thomas Mansencal – `thomas.mansencal@gmail.com <mailto:thomas.mansencal@gmail.com>`_\n| This software is released under terms of GNU GPL V3 license: http://www.gnu.org/licenses/\n| `http://www.thomasmansencal.com/ <http://www.thomasmansencal.com/>`_",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KelSolaar/Manager",
    "keywords": null,
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Manager",
    "package_url": "https://pypi.org/project/Manager/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Manager/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/KelSolaar/Manager"
    },
    "release_url": "https://pypi.org/project/Manager/2.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Manager is the Components Manager package of Umbra, sIBL_GUI and sIBL_Reporter.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1050802,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35f1a0b78c61cb606f5a6be4fd6db0f72ce273e9c8388e839e0b5dbd90d191ea",
        "md5": "cde7ea4d0319f989fcc71a52bf5a8f5f",
        "sha256": "955495f7eaa7d0f747d1b25f73d200e862d4e64b2cb249862ba582fcb531db5f"
      },
      "downloads": -1,
      "filename": "Manager-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cde7ea4d0319f989fcc71a52bf5a8f5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 519582,
      "upload_time": "2012-09-16T14:28:37",
      "upload_time_iso_8601": "2012-09-16T14:28:37.430237Z",
      "url": "https://files.pythonhosted.org/packages/35/f1/a0b78c61cb606f5a6be4fd6db0f72ce273e9c8388e839e0b5dbd90d191ea/Manager-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}