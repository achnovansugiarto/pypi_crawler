{
  "info": {
    "author": "Rafael Alonso",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Python Implementation\n\n## Install\n\npython >=3.5 required\npip >= 19.0.0\n```\npip install lor-deckcodes\n```\n\n## Usage\n\nEver expanding rich API with method to display cards conveniently\n\n```python\nfrom lor_deckcodes import LoRDeck, CardCodeAndCount\n\n\n# Decoding\ndeck = LoRDeck.from_deckcode('CEBAIAIFB4WDANQIAEAQGDAUDAQSIJZUAIAQCBIFAEAQCBAA')\n\n# list all cards with card format 3:01SI001\nlist(deck)\n\ncard = deck.cards[0] # instance of CardCodeAndCount\ncard.faction # SI/FR...\ncard.card_id # 111\ncard.set # 01\n\n\n# Encoding\n# These are equivalent\ndeck = LoRDeck(['3:01SI015', '3:01SI044'])\ndeck = LoRDeck([\n    CardCodeAndCount.from_card_string('3:01SI015'),\n    CardCodeAndCount('01SI015', 3)]\n)\n# returns encoded string\ndeck.encode()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rafalonso/LoRDeckCodesPython",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Rafael Alonso",
    "maintainer_email": "rafalonso.almeida@gmail.com",
    "name": "lor-deckcodes",
    "package_url": "https://pypi.org/project/lor-deckcodes/",
    "platform": "",
    "project_url": "https://pypi.org/project/lor-deckcodes/",
    "project_urls": {
      "Homepage": "https://github.com/Rafalonso/LoRDeckCodesPython"
    },
    "release_url": "https://pypi.org/project/lor-deckcodes/4.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Legends of Runeterra deck coder and decoder",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14162263,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47d6a4715bbf86db3afcdf06111ecca71d289b67cdedfb6a3dd07e71422ff286",
        "md5": "f0dd1cd9bb0efbbe6b5124b8aee219d5",
        "sha256": "02e6deffe248a2623a6abec124a35760849ad101fb8102e549b4bf56d73dec1b"
      },
      "downloads": -1,
      "filename": "lor_deckcodes-4.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0dd1cd9bb0efbbe6b5124b8aee219d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 6095,
      "upload_time": "2021-08-26T11:35:11",
      "upload_time_iso_8601": "2021-08-26T11:35:11.072662Z",
      "url": "https://files.pythonhosted.org/packages/47/d6/a4715bbf86db3afcdf06111ecca71d289b67cdedfb6a3dd07e71422ff286/lor_deckcodes-4.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4f288bbf4bff55c9c3b278eca0bbad0ccb882d56373447c55b6569362d9440b",
        "md5": "0a92d4c32c70a8878d832c1fdad2f819",
        "sha256": "5676541848f3c325a3b09425b020a0aa848407c4e3b47f40c2f0e5773b17a773"
      },
      "downloads": -1,
      "filename": "lor_deckcodes-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0a92d4c32c70a8878d832c1fdad2f819",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 4556,
      "upload_time": "2021-08-26T11:35:19",
      "upload_time_iso_8601": "2021-08-26T11:35:19.754788Z",
      "url": "https://files.pythonhosted.org/packages/f4/f2/88bbf4bff55c9c3b278eca0bbad0ccb882d56373447c55b6569362d9440b/lor_deckcodes-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}