{
  "info": {
    "author": "Matt Field",
    "author_email": "matt.field@zibawa.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# IoT_pki\nPublic Key Infrastructure for IoT devices built in python django\n\n# Functionality\nAPI interface allows clients to:\n\n* Request new X509 certificates (subject to approval)\n* Download new X509 certificates once approved\n* Renew existing valid X509 certificates\n\nAdmin interface allows administrators to:\n\n* Create self signed Certificate Authority to sign certificate requests\n* View and approve X509 certificate requests\n* View and revoke existing X509 certificates\n\n# Documentation\n\nhttps://docs.zibawa.com/doku.php?id=pki:start\n\n\n\n# Quick start\n\nBelow are instructions for installing IoT_pki to an EXISTING django project.\nAlternatively you can install as a stand alone django project as explained in https://docs.zibawa.com\n-----------\n\n1. Add \"IoT_pki\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'IoT_pki',\n        'rest_framework',\n    ]\n\n2. Include the IoT_pki URLconf in your project urls.py like this::\n\n    (see docs.zibawa.com),\n    \n```\n#below required for IoT_pki\nfrom rest_framework import routers\nfrom rest_framework.documentation import include_docs_urls\nfrom IoT_pki import views\nrouter = routers.DefaultRouter()\n\n# add below to your url patterns block\n    \nurlpatterns = [\n    #you already have some url patterns defined so add below..\n\t....   \n    #below are IoT_pki\n    url(r'^IoT_pki/', include('IoT_pki.urls',namespace='IoT_pki')),\n    url(r'^', include(router.urls)),\n    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),\n    url(r'^docs/', include_docs_urls(title='zibawa_PKI'))\n    \n    \n    \n]\n\n\n```\n\n    \n\n3. Run `python manage.py migrate` to create the models.\n\n\n4. Add the following to your project settings.py\n\n```\n#used to create and renew X509 certificates.  The certificate and key used at below location will be used to sign\n#all certificates generated by PKI\n\n\n\nPKI={'host':'secret.myserver.com','port':443,\n     'use_ssl':True,#should always be True except for testing\n     'verify_certs':False,#verify identity of server should be True except for testing\n     'path_to_ca_cert':'/home/jmm/myCA/certs/100.pem',\n     'path_to_ca_key':'/home/jmm/myCA/private/100.key',\n     'path_to_certstore':'/home/jmm/myCA/certs/',#requires trailing slash, place to keep CA certs\n     'path_to_keystore':'/home/jmm/myCA/private/',#requires trailing slash. place to keep ca keys should be permission 400\n     'auto_approve_requests':True,#should be FALSE (true will automatically approve all requests)\n     }\n\nCERT_DEFAULTS={'country_name':\"ES\",#obligatory must be 2 letter country code \n               'state_or_province_name':\"Barcelona\",\n               'valid_days':365,#validity of certificates generated must be integer not string\n               'min_days_remaining_for_renewal':400\n               \n               }\n\n\n#used as part of PKI\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAdminUser',\n    ],\n    'PAGE_SIZE': 10\n}\n\n\n```\n\n\n\n\n5. Start the development server and visit http://127.0.0.1:8000/admin/\n   to administer your certificates (you'll need a superuser and the Admin app enabled).\n\n6. Visit http://docs.zibawa.com for full information.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.zibawa.com/",
    "keywords": "",
    "license": "GNU license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-IoT-pki",
    "package_url": "https://pypi.org/project/django-IoT-pki/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-IoT-pki/",
    "project_urls": {
      "Homepage": "https://www.zibawa.com/"
    },
    "release_url": "https://pypi.org/project/django-IoT-pki/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple public key infrastructure to allow issuing and automatic renewal of X509 certificates",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3047236,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "babf1c47bd21da613a04c4f612d6ab828c3bd1ef26d1efc9709af5bf871f340b",
        "md5": "2b23742bf1e8bcdf2687798a136508fb",
        "sha256": "d4dcdcd9e988ea788dc60dc43ce329c99acbaeb3f0d455841598bd665900fcc7"
      },
      "downloads": -1,
      "filename": "django_IoT_pki-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2b23742bf1e8bcdf2687798a136508fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28314,
      "upload_time": "2017-07-21T08:03:47",
      "upload_time_iso_8601": "2017-07-21T08:03:47.870435Z",
      "url": "https://files.pythonhosted.org/packages/ba/bf/1c47bd21da613a04c4f612d6ab828c3bd1ef26d1efc9709af5bf871f340b/django_IoT_pki-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}