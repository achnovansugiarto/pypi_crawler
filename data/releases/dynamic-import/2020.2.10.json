{
  "info": {
    "author": "STEALTH",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: Public Domain",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Dynamic Import\n==============\n\nLets you dynamically/lazily import python module on run-time, enables easy to use import path name, saves memory. Also makes managing projects easy by not having to worry about nested folder structure producing long import names.\n\n\nInstall, update & uninstall\n---------------------------\n\nUse `pip`_ to:\n\n.. code-block:: text\n\n    pip install dynamic-import\n\n    pip install --upgrade dynamic-import\n\n    pip uninstall dynamic-import\n\n\nExample\n-------\n\n./example/sample/__init__.py\n\n.. code-block:: python\n    \n    from dynamic_import import importer\n\n    # Static/Normal Import\n    from .static import static\n\n    # Dynamic Importer\n    importer(\n        {\n            'one': ('a', 'b', 'c'),  # from .one import a, b, c\n            'two': ('x', 'y', 'z'),  # from .two import x, y, z\n            'local': 'internals',    # from .local import internals\n            'sub': {\n                'page': ('e', 'f', 'g'),  # from .sub.page import e, f, g\n                'name': 'name',           # from .sub.name import name\n            }\n        }\n    )\n\n./example/example.py\n\n.. code-block:: python\n\n    # Static Import #1\n    # ----------------\n    from sample import static\n    # Only \"sample\" & \"sample.static\" modules are loaded at this point.\n    print(static())\n    print()\n\n    # Dynamic Import #1\n    # -----------------\n    from sample import a, b, c\n    # Now \"sample\", \"sample.static\" & \"sample.one\" modules are loaded at this point.\n    print(a())\n    print(b())\n    print(c())\n    print()\n\n    # Dynamic Import #2\n    # -----------------\n    from sample import x, y, z\n    # All \"sample\", \"sample.static\", \"sample.one\" & \"sample.two\" modules are loaded.\n    print(x())\n    print(y())\n    print(z())\n    print()\n\n    # Dynamic Import #3\n    # -----------------\n    from sample import internals\n    # This is to demonstrate you can relatively import one module from another module.\n    print(internals())\n    print()\n\n    # Sub-page Import #1\n    # ------------------\n    from sample import e, f, g\n    # This demonstrates you can use nested sub-dir and use main module to import from.\n    print(e())\n    print(f())\n    print(g())\n    print()\n\n    # Sub-page Import #2\n    # ------------------\n    from sample import name\n    # Another sub-dir example\n    print(name())\n    print()\n\n\nNote\n----\n    - you can still use static/normal import e.g. ``from .module import example`` before ``importer()`` is called.\n    - You can also use ``.`` e.g. ``'.one': ('a', 'b', 'c')``\n    - for 1 word import name you can use ``'module': 'myclass'`` vs ``'module': ('myclass',)``\n    - All import names must be unique.\n\n\nLicense\n-------\nFree, No limit what so ever. `Read more`_\n\n\nTODO\n----\n    - Raise warning if conflicting module.identifier name is found (currently old is overridden)\n\n.. _pip: https://pip.pypa.io/en/stable/quickstart/\n.. _Read more: https://github.com/YoSTEALTH/Dynamic-Import/blob/master/LICENSE.txt",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/YoSTEALTH/Dynamic-Import",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamic-import",
    "package_url": "https://pypi.org/project/dynamic-import/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamic-import/",
    "project_urls": {
      "Homepage": "https://github.com/YoSTEALTH/Dynamic-Import"
    },
    "release_url": "https://pypi.org/project/dynamic-import/2020.2.10/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Dynamically/Lazily import python module on run-time. Also enables easy to use import path name.",
    "version": "2020.2.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6605784,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "680761d6e6261fe1db08d9effc66bb7e97a7ab622cfb7b63d57081eb2f784966",
        "md5": "46a1b1dfa27f5227b04ffacc0fc57522",
        "sha256": "25c5faa65f9f3b9fdc0cb7443e494297e74b0c66c5fc929bf886942f0b511665"
      },
      "downloads": -1,
      "filename": "dynamic_import-2020.2.10.tar.gz",
      "has_sig": false,
      "md5_digest": "46a1b1dfa27f5227b04ffacc0fc57522",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5112,
      "upload_time": "2020-02-10T22:43:04",
      "upload_time_iso_8601": "2020-02-10T22:43:04.334885Z",
      "url": "https://files.pythonhosted.org/packages/68/07/61d6e6261fe1db08d9effc66bb7e97a7ab622cfb7b63d57081eb2f784966/dynamic_import-2020.2.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}