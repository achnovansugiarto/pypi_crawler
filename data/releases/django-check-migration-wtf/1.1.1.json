{
  "info": {
    "author": "Antonio Irizar",
    "author_email": "antonioirizar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# django-check-migration-wtf\n\n## Description\n\n**django-check-migration-wtf** is an extension for Django to check migrations and notify you if their are secure to do \non environments with zero downtime. \n\nIn some situations Django Migration system generate migrations to need do a downtime because they are blocking operation \nor you write custom migration than can block you database.\n\nActually this extension only works for backends of PostgresSQL and Postgis.\n\n**Advise**: this extension notify you for common blocking operations on database. Anyway you should review your migrations and understand their.\n\n## Configuration\n\nIt is really simple\n\n### Installation\n\nInstall the package with the typical tool (pip):\n\n`pip install django-check-migration-wtf`\n\n### Add to your project\n\nAdd app on your settings:\n\n```python\nINSTALLED_APPS = [\n    'django_check_migration_wtf',\n    ...,\n]\n```\n\n### Add some optional vars \n\nAdd some optional setup on your settings:\n\n* `CHECK_MIGRATION_WTF_PSQL_VERSION` It is to know your PostgresSQL Version by default it is 9 \n* The next following vars are for use github integration:\n    * `CHECK_MIGRATION_WTF_GITHUB_TOKEN` Token to can use API of github, It only need permission of reading of repo.\n    * `CHECK_MIGRATION_WTF_REPO_NAME` Name of repository on Github\n\n## Usage\n\nIt is really easy to use. It is execute by a typical django command like `makemigrations` or `migrate`...\nIt has two mode of usage.\n\n### Local\n\nFirst execute your `makemigrations` and you can do your custome modifications. Then **before** execute command `migrate` \nexecute the following command:\n\n`python manage.py check_migration`\n\nIt will search all migrations that are not apply to the system (like `showmigrations`) and it will analyze if they are secure to do.\n\nYou can have two possibilities:\n\n*   When the migration or migrations are **secure**, you get the following response:\n\n    ![image info](./images/migration-ok.png)\n\n* When the migration or migrations are **not secure**, you get the following response:\n\n    ![image info](./images/migration-bad.png)\n\n### Github\n\nThis is reality an option of command to execute it on your continues integration. \nIt will search you migrations comparing the base branch and your current branch and the analyze it\n\n`python manage.py check_migration --github <head_ref> <base_ref>`\n\n## Limitations\n\n* This extension not analyze code inside of `RunPython`\n* Github option to work correctly suppose your migrations are inside of directory **migrations** \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antonioIrizar/django-check-migration-wtf",
    "keywords": "django postgres postgresql migrations",
    "license": "GLP3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-check-migration-wtf",
    "package_url": "https://pypi.org/project/django-check-migration-wtf/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-check-migration-wtf/",
    "project_urls": {
      "Homepage": "https://github.com/antonioIrizar/django-check-migration-wtf"
    },
    "release_url": "https://pypi.org/project/django-check-migration-wtf/1.1.1/",
    "requires_dist": [
      "Django (<3.1,>=2.2)",
      "PyGithub (<2,>=1.50)"
    ],
    "requires_python": ">=3.6",
    "summary": "A line of description",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16150704,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9e0f5e252086df30c57d954d621ff87982dd3d64f7f1fbb08ef3f2672811606",
        "md5": "0abbbb27cfc2106480269fdf8e1f70ba",
        "sha256": "c7b4c4bbb70f887cb1faadcf1fb59ce73deda1b2dee24456042004cca2df387e"
      },
      "downloads": -1,
      "filename": "django_check_migration_wtf-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0abbbb27cfc2106480269fdf8e1f70ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 31461,
      "upload_time": "2020-09-08T15:00:12",
      "upload_time_iso_8601": "2020-09-08T15:00:12.435317Z",
      "url": "https://files.pythonhosted.org/packages/b9/e0/f5e252086df30c57d954d621ff87982dd3d64f7f1fbb08ef3f2672811606/django_check_migration_wtf-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "742a60a622f70e4f25cbc9722eeba7029c6041035d2ca172e2cfe3f25f3ff998",
        "md5": "cb40ebeaff6ed0e9ef48bd2451e832f9",
        "sha256": "0fe64a4cd565876207fa15483d3b61f7e2b714a76b0caad49cda3a9926617a4d"
      },
      "downloads": -1,
      "filename": "django-check-migration-wtf-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cb40ebeaff6ed0e9ef48bd2451e832f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25300,
      "upload_time": "2020-09-08T15:00:13",
      "upload_time_iso_8601": "2020-09-08T15:00:13.609179Z",
      "url": "https://files.pythonhosted.org/packages/74/2a/60a622f70e4f25cbc9722eeba7029c6041035d2ca172e2cfe3f25f3ff998/django-check-migration-wtf-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}