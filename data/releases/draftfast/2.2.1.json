{
  "info": {
    "author": "Ben Brostoff",
    "author_email": "ben.brostoff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Introduction &middot; [![Build Status](https://travis-ci.org/BenBrostoff/draftfast.svg?branch=master)](https://travis-ci.org/BenBrostoff/draftfast) &middot; [![](https://draftfast.herokuapp.com/badge.svg)](https://draftfast.herokuapp.com/) &middot; [![](https://img.shields.io/badge/patreon-donate-yellow.svg)](https://www.patreon.com/user?u=8965834)\n\n![](marketing/NFL_OPTIMIZED.png)\n\nAn incredibly powerful tool that automates and optimizes lineup building, allowing you to enter thousands of lineups in any DraftKings or FanDuel contest in the time it takes you to grab a coffee.\n\n## Installation\n\nRequires Python 3.6.\n\n```bash\npip install draftfast\n```\n\n## Usage\n\nExample usage ([you can experiment with these examples in repl.it](https://repl.it/@BenBrostoff/AllWarlikeDemoware)):\n\n```python\nfrom draftfast import rules\nfrom draftfast.optimize import run\nfrom draftfast.orm import Player\nfrom draftfast.csv_parse import salary_download\nfrom draftfast.lineup_constraints import LineupConstraints\n\n# Create players\nplayer_pool = [\n    Player(name='A1', cost=5500, proj=55, pos='PG'),\n    Player(name='A2', cost=5500, proj=55, pos='PG'),\n    Player(name='A3', cost=5500, proj=55, pos='SG'),\n    Player(name='A4', cost=5500, proj=55, pos='SG'),\n    Player(name='A5', cost=5500, proj=55, pos='SF'),\n    Player(name='A6', cost=5500, proj=55, pos='SF'),\n    Player(name='A7', cost=5500, proj=55, pos='PF'),\n    Player(name='A8', cost=5500, proj=55, pos='PF'),\n    Player(name='A9', cost=5500, proj=55, pos='C'),\n    Player(name='A10', cost=5500, proj=55, pos='C'),\n]\n\nroster = run(\n    rule_set=rules.DK_NBA_RULE_SET,\n    player_pool=player_pool,\n    verbose=True,\n)\n\n# Or, alternatively, generate players from a CSV\nplayers = salary_download.generate_players_from_csvs(\n  salary_file_location='./salaries.csv',\n  game=rules.DRAFT_KINGS,\n)\n\nroster = run(\n  rule_set=rules.DK_NBA_RULE_SET,\n  player_pool=players,\n  verbose=True,\n)\n```\n\nYou can see more examples in the [`examples` directory](https://github.com/BenBrostoff/draftfast/tree/master/examples).\n\n## Game Rules\n\nOptimizing for a particular game is as easy as setting the `RuleSet` (see the example above). Game rules in the library are in the table below:\n\n| League       | Site           | Reference  |\n| ------------- |:-------------:| :-----:|\n| NFL | DraftKings | `DK_NFL_RULE_SET` |\n| NFL | FanDuel | `FD_NFL_RULE_SET` |\n| NBA | DraftKings | `DK_NBA_RULE_SET` |\n| NBA | FanDuel | `FD_NBA_RULE_SET` |\n| MLB | DraftKings | `DK_MLB_RULE_SET` |\n| MLB | FanDuel | `FD_MLB_RULE_SET` |\n| WNBA | DraftKings | `DK_WNBA_RULE_SET` |\n| WNBA | FanDuel | `FD_WNBA_RULE_SET` |\n| PGA | FanDuel | `FD_PGA_RULE_SET` |\n| NASCAR | FanDuel | `FD_NASCAR_RULE_SET` |\n| SOCCER | DraftKings | `DK_SOCCER_RULE_SET` |\n| EuroLeague | DraftKings | `DK_EURO_LEAGUE_RULE_SET` |\n| NHL | DraftKings | `DK_NHL_RULE_SET` |\n\nNote that you can also tune `draftfast` for any game of your choice even if it's not implemented in the library (PRs welcome!). Using the `RuleSet` class, you can generate your own game rules that specific number of players, salary, etc. Example:\n\n```python\nfrom draftfast import rules\n\nnhl_rules = rules.RuleSet(\n    site=rules.DRAFT_KINGS,\n    league='NHL',\n    roster_size='9',\n    position_limits=[['C', 9, 9]],\n    salary_max=50_000,\n)\n```\n\n## Settings\n\nUsage example:\n\n```python\nclass Showdown(Roster):\n    POSITION_ORDER = {\n        'M': 0,\n        'F': 1,\n        'D': 2,\n        'GK': 3,\n    }\n\n\nshowdown_limits = [\n    ['M', 0, 6],\n    ['F', 0, 6],\n    ['D', 0, 6],\n    ['GK', 0, 6],\n]\n\nsoccer_rules = rules.RuleSet(\n    site=rules.DRAFT_KINGS,\n    league='SOCCER_SHOWDOWN',\n    roster_size=6,\n    position_limits=showdown_limits,\n    salary_max=50_000,\n    general_position_limits=[],\n)\nplayer_pool = salary_download.generate_players_from_csvs(\n    salary_file_location=salary_file,\n    game=rules.DRAFT_KINGS,\n)\nroster = run(\n    rule_set=soccer_rules,\n    player_pool=player_pool,\n    verbose=True,\n    roster_gen=Showdown,\n)\n```\n\n`PlayerPoolSettings`\n\n- `min_proj`\n- `max_proj`\n- `min_salary`\n- `max_salary`\n- `min_avg`\n- `max_avg`\n\n`OptimizerSettings`\n\n- `stacks` - A list of `Stack` objects. Example:\n\n```python\nroster = run(\n    rule_set=rules.DK_NHL_RULE_SET,\n    player_pool=player_pool,\n    verbose=True,\n    optimizer_settings=OptimizerSettings(\n        stacks=[\n            Stack(team='PHI', count=3),\n            Stack(team='FLA', count=3),\n            Stack(team='NSH', count=2),\n        ]\n    ),\n)\n```\n\n`LineupConstraints`\n\n- `locked` - list of players to lock\n- `banned` - list of players to ban\n- `groups` - list of player groups constraints. See below\n\n```python\nroster = run(\n    rule_set=rules.DK_NHL_RULE_SET,\n    player_pool=player_pool,\n    verbose=True,\n    constraints=LineupConstraints(\n        locked=['Rob Gronkowski'],\n        banned=['Mark Ingram', 'Doug Martin'],\n        groups=[\n            [('Todd Gurley', 'Melvin Gordon', 'Christian McCaffrey'), (2, 3)],\n            [('Chris Carson', 'Mike Davis'), 1],\n        ]\n    )\n)\n```\n\n- `no_offense_against_defense` - Do not allow offensive players to be matched up against defensive players in the optimized lineup. Currently only implemented for soccer (PRs welcome!)\n\n## CSV Upload\n\n```python\nfrom draftfast.csv_parse import uploaders\n\nuploader = uploaders.DraftKingsNBAUploader(\n    pid_file='./pid_file.csv',\n)\nuploader.write_rosters(rosters)\n\n```\n\n## Support and Consulting\n\nDFS optimization is only one part of a sustainable strategy. Long-term DFS winners have the best:\n\n- Player projections\n- Bankroll management\n- Diversification in contests played\n- Diversification across lineups (see `draftfast.exposure`)\n- Research process\n- 1 hour before gametime lineup changes\n- ...and so much more\n\nDraftFast provides support and consulting services that can help with all of these. [Let's get in touch today](mailto:ben.brostoff@gmail.com).\n\n# Credits\n\nSpecial thanks to [swanson](https://github.com/swanson/), who authored [this repo](https://github.com/swanson/degenerate), which was the inspiration for this one.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BenBrostoff/draft-kings-fun",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "draftfast",
    "package_url": "https://pypi.org/project/draftfast/",
    "platform": "",
    "project_url": "https://pypi.org/project/draftfast/",
    "project_urls": {
      "Homepage": "https://github.com/BenBrostoff/draft-kings-fun"
    },
    "release_url": "https://pypi.org/project/draftfast/2.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tool to automate and optimize DraftKings and FanDuel lineup construction.",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16953031,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "764997cdd150a332945a4b892a974418eef3059966a0d0520ec0c84e01ab3e01",
        "md5": "31df43838168406069d0ba582d0c992d",
        "sha256": "99aad9d4d6089ed4d07ab92dd6d0c74f9440b0e6dbc3ae816340a62ee0be596a"
      },
      "downloads": -1,
      "filename": "draftfast-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "31df43838168406069d0ba582d0c992d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33242,
      "upload_time": "2018-12-27T22:56:04",
      "upload_time_iso_8601": "2018-12-27T22:56:04.184913Z",
      "url": "https://files.pythonhosted.org/packages/76/49/97cdd150a332945a4b892a974418eef3059966a0d0520ec0c84e01ab3e01/draftfast-2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}