{
  "info": {
    "author": "Ben Brostoff",
    "author_email": "ben.brostoff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Introduction &middot; [![Build Status](https://travis-ci.org/BenBrostoff/draft-kings-fun.svg?branch=master)](https://travis-ci.org/BenBrostoff/draft-kings-fun) &middot; [![](https://draftfast.herokuapp.com/badge.svg)](https://draftfast.herokuapp.com/) &middot; [![](https://img.shields.io/badge/patreon-donate-yellow.svg)](https://www.patreon.com/user?u=8965834)\n\n![](marketing/NFL_OPTIMIZED.png)\n\nThis is an incredibly powerful tool that can automate lineup building, allowing you to enter thousands of lineups in any DK contest in the time it takes you to grab a coffee. Works for NFL, NBA, WNBA and MLB on either DraftKings or FanDuel.\n\nThis project allows you to create an unlimited amount of optimized DraftKings lineups based on any projection source of your choice. You can use this repo as a command line application, or import functionality as needed to build your own scripts to construct thousands of DraftKings lineups each week and upload them in seconds using their [CSV upload tool](https://www.draftkings.com/lineup/upload). Examples of how to do the latter are provided in the `examples` directory.\n\nSpecial thanks to [swanson](https://github.com/swanson/), who authored [this repo](https://github.com/swanson/degenerate), which mine is heavily based off of.\n\nPre-reqs:\n\n* Python 3\n* `pip install -r requirements.txt`\n\n## Installation\n\n```bash\npip install draftfast\n```\n\n## Usage\n\nExample usage ([you can experiment with these examples in repl.it](https://repl.it/@BenBrostoff/AllWarlikeDemoware)):\n\n```python\nfrom draftfast import rules\nfrom draftfast.optimize import run\nfrom draftfast.orm import Player\nfrom draftfast.csv_parse import salary_download\n\n\n# Create players\nplayer_pool = [\n    Player(name='A1', cost=5500, proj=55, pos='PG'),\n    Player(name='A2', cost=5500, proj=55, pos='PG'),\n    Player(name='A3', cost=5500, proj=55, pos='SG'),\n    Player(name='A4', cost=5500, proj=55, pos='SG'),\n    Player(name='A5', cost=5500, proj=55, pos='SF'),\n    Player(name='A6', cost=5500, proj=55, pos='SF'),\n    Player(name='A7', cost=5500, proj=55, pos='PF'),\n    Player(name='A8', cost=5500, proj=55, pos='PF'),\n    Player(name='A9', cost=5500, proj=55, pos='C'),\n    Player(name='A10', cost=5500, proj=55, pos='C'),\n]\n\nroster = run(\n    rule_set=rules.DK_NBA_RULE_SET,\n    players=player_pool,\n)\n\n# Or, alternatively, generate players from a CSV\nplayers = salary_download.generate_players_from_csvs(\n  salary_file_location='./salaries.csv',\n  game=rules.DRAFT_KINGS,\n)\n\nroster = run(\n  rule_set=rules.DK_NBA_RULE_SET,\n  players=players,\n  verbose=True,\n)\n```\n\n## Custom Game Rules\n\nOptimizing for a particular game is as easy as setting the `RuleSet` (see the example above).\n\n\nNote that you can also tune `draftfast` for any game of your choice even if it's not implemented in the library (PRs welcome!). Using the `RuleSet` class, you can generate your own game rules that specific number of players, salary, etc. Example:\n\n```python\nfrom draftfast import rules\n\nnhl_rules = rules.RuleSet(\n    site=rules.DRAFT_KINGS,\n    league='NHL',\n    roster_size='9',\n    position_limits=[['C', 9, 9]],\n    salary_max=50_000,\n)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BenBrostoff/draft-kings-fun",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "draftfast",
    "package_url": "https://pypi.org/project/draftfast/",
    "platform": "",
    "project_url": "https://pypi.org/project/draftfast/",
    "project_urls": {
      "Homepage": "https://github.com/BenBrostoff/draft-kings-fun"
    },
    "release_url": "https://pypi.org/project/draftfast/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tool to automate and optimize DraftKings and FanDuel lineup construction.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16953031,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "902025bbb55a0f2ce4e6c87a97f91aa79c3f87556af423f733c2650de82cb737",
        "md5": "6608524003c0a8ae704df0c92347cfb7",
        "sha256": "e341cb0b3ba37588e041e58919271097141dec17220dfa3020d0f5f60bdaf3d4"
      },
      "downloads": -1,
      "filename": "draftfast-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6608524003c0a8ae704df0c92347cfb7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24839,
      "upload_time": "2018-12-02T14:58:45",
      "upload_time_iso_8601": "2018-12-02T14:58:45.463175Z",
      "url": "https://files.pythonhosted.org/packages/90/20/25bbb55a0f2ce4e6c87a97f91aa79c3f87556af423f733c2650de82cb737/draftfast-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}