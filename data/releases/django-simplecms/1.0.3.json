{
  "info": {
    "author": "Jaap Joris Vens",
    "author_email": "jj+cms@rtts.eu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Simple CMS\n\n***A super simple but very extensible content management system for\nDjango websites.***\n\nSimpleCMS provides the reusable Django app `cms` which contains\neverything you need to create websites that can be easily edited by\nend users.\n\n## How does it work?\n\nContrary to 'regular' Django websites, SimpleCMS allows you to write a\nview for each *section*, rather than for each *page* on your website.\nOn which pages these sections appear, and in which order, is left to\nthe content editor rather than the programmer. After authenticating,\nthe user can use the \"Edit\" interface to fill the website with various\ntypes of content.\n\nHere's an example `views.py` of an app using SimpleCMS:\n\n    from cms.views import SectionView\n    from cms.decorators import section_view\n\n    @section_view\n    class HelloWorld(SectionView):\n        verbose_name = 'Hello world section'\n        fields = ['content']\n        template_name = 'hello.html'\n\n        def get_context_data(self, **kwargs):\n            context = super()get_context_data(**kwargs)\n            context['message'] = 'Hello World!'\n            return context\n\nAnd here is the contents of `hello.html`:\n\n    <section type=\"helloworld\">\n      <h1>{{message}}</h1>\n      {{section.content}}\n    </section>\n\nEverytime a section needs to be rendered, SimpleCMS will call the\nappropriate section view and insert the rendered result into the final\nrendered page.\n\nBut that's not all! SimpleCMS is easily extendable. You can add custom\nfields to your Page and Section models. You can even add one-to-many\nfields by defining new models with a foreign key to the Section model,\nand the Edit interface will automagically show the user nested\nformsets to edit the related instances! For a complete example see the\nincluded `example` app.\n\n## The \"Edit\" Interface\n\nSomewhat like the Django Admin site, SimpleCMS comes with its own\nediting environment, albeit much simpler and only suitable for editing\npages and sections. After authenticating, the content editor can click\nthe \"edit\" button on any page of the website to alter, add or\nrearrange sections.\n\nFor each section, the section type can be selected from a dropdown\nmenu. As you can see in `views.py` above, each section type comes with\nits own list of editable fields. Client-side javascript will hide/show\nthe relevant fields based on the selected section type. All sections\nare stored in the same database table.\n\n## Batteries included!\n\nSimpleCMS includes a variety of useful template tags, default *Page*\nand *Section* models, and all the other boilerplate code needed for\nnew projects.\n\nOne notable inclusion is the `eval` template tag. It will pass its\nargument first through Django's templating system and then through\nMarkdown, making for instance the following possible. (Disclaimer: use\nwith caution!)\n\n    Welcome to **{% now 'Y' %}!**\n\nAnother useful feature is the automatic compilation of `SCSS` files to\n`CSS` files using a custom middleware.\n\n## Installation\n\nUse the provided helper command `simplecms` to quickly setup a new\nproject:\n\n    $ pip install https://github.com/rtts/django-simplecms.git\n    $ simplecms mysite\n\nAfter the project files have been created, initialize the database and\ncreate a superuser:\n\n    $ cd mysite\n    $ sudo su postgres -c \"createuser mysite; createdb -O mysite mysite\"\n    $ ./manage.py makemigrations\n    $ ./manage.py migrate\n    $ ./manage.py createsuperuser\n\nFinally, run the development server and visit\nhttp://localhost:8000/login/ in your browser to log in!\n\n    $ ./manage.py runserver",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtts/django-simplecms",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-simplecms",
    "package_url": "https://pypi.org/project/django-simplecms/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-simplecms/",
    "project_urls": {
      "Homepage": "https://github.com/rtts/django-simplecms"
    },
    "release_url": "https://pypi.org/project/django-simplecms/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Simple Django CMS",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16211210,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39b4be38b3c6236b734314789209ffdaf415d6609e9ddaad52bb965295ae0568",
        "md5": "441c320a0974386bd6fd26fa082e78b6",
        "sha256": "b28ca1bdbc29a8bcd981d132b6068e309d3f7255aef029d90bfb6996ee3c6863"
      },
      "downloads": -1,
      "filename": "django-simplecms-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "441c320a0974386bd6fd26fa082e78b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 2360816,
      "upload_time": "2021-01-22T23:33:04",
      "upload_time_iso_8601": "2021-01-22T23:33:04.892446Z",
      "url": "https://files.pythonhosted.org/packages/39/b4/be38b3c6236b734314789209ffdaf415d6609e9ddaad52bb965295ae0568/django-simplecms-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}