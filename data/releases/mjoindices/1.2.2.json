{
  "info": {
    "author": "Christoph G. Hoffmann",
    "author_email": "christoph.hoffmann@uni-greifswald.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "mjoindices - A python package for calculating the Madden-Julian-Oscillation OMI index\n=====================================================================================\n\n[![DOI (paper)](https://img.shields.io/badge/DOI%20%28paper%29-10.5334%2Fjors.331-blue.svg)](https://doi.org/10.5334/jors.331)\n[![DOI](https://zenodo.org/badge/197774253.svg)](https://zenodo.org/badge/latestdoi/197774253)\n\nOverview\n--------\n\nmjoindices is a Python package relevant for users of the atmospheric sciences. It provides functionality to compute an \nindex of the Madden-Julian-Oscillation (MJO), particularly the OLR-based MJO index (OMI).\n\nWhereas the package name has been chosen to indicate that further MJO indices should be included in future, the \nimplementation is currently limited to the OMI algorithm.\n\nA scientific description of the packge is found in [Hoffmann et al. (2021)](https://doi.org/10.5334/jors.331).\n\nCitation\n--------\nIf you use mjoindices in published research, please cite the correspondig paper: Hoffmann, C.G., Kiladis, G.N., Gehne, M. and von Savigny, C., 2021.\nA Python Package to Calculate the OLR-Based Index of the Madden- Julian-Oscillation (OMI) in Climate Science and Weather Forecasting. \nJournal of Open Research Software, 9(1), p.9. DOI: http://doi.org/10.5334/jors.331\n\nIn addition, you can also cite the Zenodo DOI http://dx.doi.org/10.5281/zenodo.3613752.\n\nRequirements\n------------\nmjoindices is written for Python 3 (version > 3.6) and depends on the packages NumPy, Pandas, SciPy, and Matplotlib. It runs on Linux\nand Windows. Other operating systems have not been tested. \n\nInstallation\n------------\nmjoindices is available in the [Python Package Index (PyPI)](https://pypi.org/project/mjoindices/). It can be installed using, \ne.g., pip.\n\n    pip3 install mjoindices\n\nIt can also be installed from the source, which is available on [Zenodo](http://dx.doi.org/10.5281/zenodo.3613752) and [GitHub](https://github.com/cghoffmann/mjoindices). \nDownload the source, move into the directory containing the file setup.py and run\n\n    python3 setup.py install\n\nAPI documentation\n-----------------\nThe API documentation is found on [GitHub Pages](https://cghoffmann.github.io/mjoindices/index.html) and also in the docs\nfolder of the [source](https://github.com/cghoffmann/mjoindices/tree/master/docs).\n\nGetting started / examples\n--------------------------\nAfter you have installed mjoindices, you can download an\n[example](https://github.com/cghoffmann/mjoindices/tree/master/examples) from the source, which consists of two files: \n\n* recalculate_original_omi.py: After downloading some data files, which are mentioned and linked in the source\ndocumentation of the example, you can run this example to recalculate the original OMI values. The script will save\nthe computed Empirical Orthogonal Functions (EOFs) and the Principal Components (PCs) in two individual files, which\ncan also be configured in the source code. In addition, it will save a few plots into a directory, which can\nalso be configured in the source. These plots show the agreement with the original OMI values (slight deviations are \nexpected due to numerical differences. This will be detailed in the corresponding software meta paper).\n\n    Note that you can use this example also as a template to calculate OMI values with your own OLR data. \nIn order to do that, you have to adapt only two parts of the code, which are also marked in the code documentation.\n\n    Note also that this script may run for one or two hours on common personal computer systems.\n\n* evaluate_omi_reproduction.py: This script produces more detailed comparison plots and saves them into a directory.\nThe script recalculate_original_omi.py has to be run before, as the evaluation script is based on the saved results.\nAs for recalculate_original_omi.py, some file and directory names have to be adapted in the beginning of the code.\n\nBoth files are also available as Jupyter notebook files.\n\nAutomated testing\n-----------------\nAfter you have installed mjoindices, you can also download\n[unit and integration tests](https://github.com/cghoffmann/mjoindices/tree/master/tests) from the source to check\nyour installation using pytest.\n\n* Download the complete test directory to you local file system.\n\n* Download some external input and reference data files from  [Zenodo](https://doi.org/10.5281/zenodo.3746562). Details are given in a separate [Readme file](https://github.com/cghoffmann/mjoindices/blob/master/tests/testdata/README). \n\n* Move into your local test directory and run\n\n        pytest\n\nNote that the tests may run for a few hours on a common personal computer.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cghoffmann/mjoindices",
    "keywords": "",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mjoindices",
    "package_url": "https://pypi.org/project/mjoindices/",
    "platform": "",
    "project_url": "https://pypi.org/project/mjoindices/",
    "project_urls": {
      "Homepage": "https://github.com/cghoffmann/mjoindices"
    },
    "release_url": "https://pypi.org/project/mjoindices/1.2.2/",
    "requires_dist": [
      "numpy",
      "pandas",
      "pytest",
      "scipy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Calculation of indices that describe the Madden-Julian-Oscillation (only OMI by now)",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15567055,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eefa88fd0f4858f8aa1f88dd22eef3d95cac5cadc98c9cdd7100d63e473fedab",
        "md5": "6b467bee9f9fd9854d6ce03997698bf8",
        "sha256": "e915fbda52df5f8bd94a594f19ebd6df870bf6855cd221c8e9c8160b4eeb311a"
      },
      "downloads": -1,
      "filename": "mjoindices-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b467bee9f9fd9854d6ce03997698bf8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 79619,
      "upload_time": "2021-05-29T15:52:48",
      "upload_time_iso_8601": "2021-05-29T15:52:48.315738Z",
      "url": "https://files.pythonhosted.org/packages/ee/fa/88fd0f4858f8aa1f88dd22eef3d95cac5cadc98c9cdd7100d63e473fedab/mjoindices-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1444576f4146a4ed35a9b72702972c7b10c6b57369e3fbbcfd9b74c5440f71c6",
        "md5": "b0b353ce2fabba19e5ad46e71c683330",
        "sha256": "c70abb13cfb60a62a451edb7229a66a108d2f23097abf0da349c04ed50d59112"
      },
      "downloads": -1,
      "filename": "mjoindices-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b0b353ce2fabba19e5ad46e71c683330",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 89337,
      "upload_time": "2021-05-29T15:52:49",
      "upload_time_iso_8601": "2021-05-29T15:52:49.733560Z",
      "url": "https://files.pythonhosted.org/packages/14/44/576f4146a4ed35a9b72702972c7b10c6b57369e3fbbcfd9b74c5440f71c6/mjoindices-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}