{
  "info": {
    "author": "Intel Corporation",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "## ``mkl_fft`` --  a NumPy-based Python interface to Intel (R) MKL FFT functionality\n[![Build Status](https://travis-ci.com/IntelPython/mkl_fft.svg?branch=master)](https://travis-ci.com/IntelPython/mkl_fft)\n\n`mkl_fft` started as a part of Intel (R) Distribution for Python* optimizations to NumPy, and is now being released \nas a stand-alone package. It can be installed into conda environment using \n\n```\n   conda install -c intel mkl_fft\n```\n\n---\n\nSince MKL FFT supports performing discrete Fourier transforms over non-contiguously laid out arrays, MKL can be directly\nused on any well-behaved floating point array with no internal overlaps for both in-place and not in-place transforms of \narrays in single and double floating point precision.\n\nThis eliminates the need to copy input array contiguously into an intermediate buffer.\n\n`mkl_fft` directly supports N-dimensional Fourier transforms.\n\nMore details can be found in SciPy 2017 conference proceedings:\n     https://github.com/scipy-conference/scipy_proceedings/tree/2017/papers/oleksandr_pavlyk\n\n---\n\nIt implements the following functions:\n\n### Complex transforms, similar to those in `scipy.fftpack`:\n\n`fft(x, n=None, axis=-1, overwrite_x=False)`\n\n`ifft(x, n=None, axis=-1, overwrite_x=False)`\n\n`fft2(x, shape=None, axes=(-2,-1), overwrite_x=False)`\n\n`ifft2(x, shape=None, axes=(-2,-1), overwrite_x=False)`\n\n`fftn(x, n=None, axes=None, overwrite_x=False)`\n\n`ifftn(x, n=None, axes=None, overwrite_x=False)`\n\n### Real transforms\n\n`rfft(x, n=None, axis=-1, overwrite_x=False)` - real 1D Fourier transform, like `scipy.fftpack.rfft`\n\n`rfft_numpy(x, n=None, axis=-1)` - real 1D Fourier transform, like `numpy.fft.rfft`\n\n`rfft2_numpy(x, s=None, axes=(-2,-1))` - real 2D Fourier transform, like `numpy.fft.rfft2`\n\n`rfftn_numpy(x, s=None, axes=None)` - real 2D Fourier transform, like `numpy.fft.rfftn`\n\n... and similar `irfft*` functions.\n\n\nThe package also provides `mkl_fft._numpy_fft` and `mkl_fft._scipy_fft` interfaces which provide drop-in replacements for equivalent functions in NumPy and SciPy respectively.\n\n--- \n\nTo build ``mkl_fft`` from sources on Linux:\n  - install a recent version of MKL, if necessary;\n  - execute ``source /path/to/mklroot/bin/mklvars.sh intel64`` ; \n  - execute ``pip install .``\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://github.com/IntelPython/mkl_fft",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/IntelPython/mkl_fft",
    "keywords": "",
    "license": "BSD",
    "maintainer": "Intel Corp.",
    "maintainer_email": "scripting@intel.com",
    "name": "mkl-fft",
    "package_url": "https://pypi.org/project/mkl-fft/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/mkl-fft/",
    "project_urls": {
      "Download": "http://github.com/IntelPython/mkl_fft",
      "Homepage": "http://github.com/IntelPython/mkl_fft"
    },
    "release_url": "https://pypi.org/project/mkl-fft/1.2.0/",
    "requires_dist": [
      "numpy==1.19.5",
      "mkl",
      "dpcpp_cpp_rt"
    ],
    "requires_python": ">=3.6",
    "summary": "MKL-based FFT transforms for NumPy arrays",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13701489,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1defe883f978594e49075fe57161a4d0327687f57f47152ebe505fb8e6f276c",
        "md5": "245f0d6dabfed276a36a78411e04c855",
        "sha256": "c292711437ef739dc0e04c4dcaf12298213a0945ba9a5d653acfcc5f58cb9eaf"
      },
      "downloads": -1,
      "filename": "mkl_fft-1.2.0-10-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "245f0d6dabfed276a36a78411e04c855",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 215774,
      "upload_time": "2021-02-19T09:13:52",
      "upload_time_iso_8601": "2021-02-19T09:13:52.602811Z",
      "url": "https://files.pythonhosted.org/packages/e1/de/fe883f978594e49075fe57161a4d0327687f57f47152ebe505fb8e6f276c/mkl_fft-1.2.0-10-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2808f6aeafe4b1d97ecf824f5b5b6986b401242444f5be4a490918ca2ebc162",
        "md5": "9dc08d8d3a49cf219393e4c71088643c",
        "sha256": "a37752d2b0feff19ebc0a858d93cb39ae0ad52f0655082d33a71bc0382ce5328"
      },
      "downloads": -1,
      "filename": "mkl_fft-1.2.0-10-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "9dc08d8d3a49cf219393e4c71088643c",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 224018,
      "upload_time": "2021-02-19T09:17:00",
      "upload_time_iso_8601": "2021-02-19T09:17:00.978773Z",
      "url": "https://files.pythonhosted.org/packages/d2/80/8f6aeafe4b1d97ecf824f5b5b6986b401242444f5be4a490918ca2ebc162/mkl_fft-1.2.0-10-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}