{
  "info": {
    "author": "Olivier Poitrey",
    "author_email": "rs@dailymotion.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: No Input/Output (Daemon)",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Security"
    ],
    "description": "Domcheck: Domain Ownership Validation\n=====================================\n\n.. image:: https://img.shields.io/pypi/v/domcheck.svg\n    :target: https://pypi.python.org/pypi/domcheck\n\n.. image:: https://travis-ci.org/rs/domcheck.svg?branch=master\n    :target: https://travis-ci.org/rs/domcheck\n\nThis Python library implements different strategies to validate the ownership of a domain name.\n\nAvailable strategies\n--------------------\n\nAll strategies takes 3 arguments: the domain to check, a static DNS safe ``prefix`` like \"yourservice-domain-verification\" and a randomly generated ``code``.\n\n- **DNS TXT record**: checks for the ``{prefix}-{code}`` string present in one of the ``TXT`` records on the domain name.\n- **DNS CNAME record**: checks for the existence of ``CNAME` record composed on the static ``{prefix}-{code}`` on the domain pointing to domain (usually yours) which the host is {prefix} (i.e.: {prefix}.yourdomain.com). NOTE: you may want to make sure that {prefix}.yourdomain.com resolves to something as some zone editors may check that.\n- **Meta Tag**: checks for the presence of a ``<meta name=\"{prefix}\" content=\"{code}\">`` tag in the ``<head>`` part of the domain's home page using either HTTP or HTTPs protocols.\n- **HTML File**: checks for the presence of a file named ``{code}.html`` at the root of the domain's website containing the string ``{prefix}={code}`` using either HTTP or HTTPs protocols.\n\nUsage Example\n-------------\n\nSimple usage will check the domain with all available strategies and return ``True`` if the validation passed:\n\n.. code-block:: python\n\n    import domcheck\n\n    domain = \"example.com\"\n    prefix = \"myservice-domain-verification\"\n    code = \"myserviceK2d8a0xdhh\"\n\n    if domcheck.check(domain, prefix, code):\n        print \"This domain is verified\"\n\nYou may filter strategies by passing a coma separated list of strategies:\n\n.. code-block:: python\n\n    domcheck.check(domain, prefix, code, strategies=\"dns_txt,meta_tag\")\n\nInstallation\n------------\n\nTo install domcheck, simply:\n\n    $ pip install domcheck\n\nLicenses\n--------\n\nAll source code is licensed under the `MIT License <https://raw.githubusercontent.com/rs/domcheck/master/LICENSE>`_.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rs/domcheck",
    "keywords": "domain,validation,verification,check,ownership,dns,txt,cname,meta",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "domcheck",
    "package_url": "https://pypi.org/project/domcheck/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/domcheck/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/rs/domcheck"
    },
    "release_url": "https://pypi.org/project/domcheck/1.1.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Domain Ownership Checker",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1695461,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e39e73fe6546b2b66909ef67e67ec0722497fe30b1d74fc842e04d90bbf744b0",
        "md5": "ad1276d988859c76f90d0c1348aaf89f",
        "sha256": "75f8c6d5b99c608a32301d971f4410fcdee67a5b65fb771f88783a787f5c4b66"
      },
      "downloads": -1,
      "filename": "domcheck-1.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad1276d988859c76f90d0c1348aaf89f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 6287,
      "upload_time": "2015-08-26T22:57:34",
      "upload_time_iso_8601": "2015-08-26T22:57:34.379003Z",
      "url": "https://files.pythonhosted.org/packages/e3/9e/73fe6546b2b66909ef67e67ec0722497fe30b1d74fc842e04d90bbf744b0/domcheck-1.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b4a4ad714bf82d3edbee9f04a418461b76383da06cb33bbb118ab5c9fc62b4e",
        "md5": "0716a5309893796e044277cc125dd773",
        "sha256": "0c741b9e409d5165bcbd2eb5ec3cf8b2a0a44570a07c666b1ef8322cce3a1f13"
      },
      "downloads": -1,
      "filename": "domcheck-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "0716a5309893796e044277cc125dd773",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3969,
      "upload_time": "2015-08-26T22:57:30",
      "upload_time_iso_8601": "2015-08-26T22:57:30.317545Z",
      "url": "https://files.pythonhosted.org/packages/7b/4a/4ad714bf82d3edbee9f04a418461b76383da06cb33bbb118ab5c9fc62b4e/domcheck-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}