{
  "info": {
    "author": "Joseph Bylund",
    "author_email": "joseph.bylund@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# locking\n\n![build status](https://jbylund.semaphoreci.com/badges/locking/branches/master.svg?style=semaphore)[view logs](https://jbylund.semaphoreci.com/branches/a07cc01d-abee-46d0-8557-64abee8fbfc2)\n\n\n1. [Overview](#overview)\n1. [Examples](#examples)\n1. [Installation](#installation)\n\n## <a id='overview'>Overview</a>\n\nThese locks provide a similar interface to those in the threading and multiprocessing modules with a different set of tradeoffs.\nThese locks are useable by multiple different processes when those processes agree on a naming scheme.\nThis can be used in order to allow multiple processes running on the same machine to semi-coordinate or in the case of the redis or dynamo backed locks multiple processes running on different machines to coordinate work.\nThis provides a different type of coordination than multiple workers consuming from a single queue and can allow quickly prototyping a solution where workers attempt to grab a job and take a lock on it, grabbing another job if they fail at getting the lock.\nOne benefit of this type of solution is that it allows running on spot hardware in the cloud since if a single job is dropped before it is completed the lock will soon expire and another worker will be able to grab that same piece of work.\n\n## <a id='examples'>Examples</a>\n\n### SocketLock\n\n```python\n# todo\n```\n\n### FileLock\n\n```python\n# todo\n```\n\n### RedisLock\n\n```python\n# todo\n```\n\n### DynamoLock\n\n```python\n# todo\n```\n\n## <a id='installation'>Installation</a>\n\n### From PyPI\n\n```python\n# todo\n```\n\n### From GitHub\n\n```\npython -m pip install --upgrade git+https://git@github.com/jbylund/locking.git\n```",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jbylund/locking",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "locking",
    "package_url": "https://pypi.org/project/locking/",
    "platform": "",
    "project_url": "https://pypi.org/project/locking/",
    "project_urls": {
      "Homepage": "https://github.com/jbylund/locking"
    },
    "release_url": "https://pypi.org/project/locking/1.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provide locks with interface similar to those from threading  and multiprocessing, which are applicable in other situations",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13002171,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2863ca6456bf717800e38e68df04d28e0e7302b41f2c16977c1941fd09ab3ca9",
        "md5": "548a13bc5c7a178ab655264e47f68fa6",
        "sha256": "3a1abb5cc766e859f4bdb5dcb19552fafa8d7662c2abf7dd417c87bcb6eb785d"
      },
      "downloads": -1,
      "filename": "locking-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "548a13bc5c7a178ab655264e47f68fa6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7210,
      "upload_time": "2022-02-24T22:13:03",
      "upload_time_iso_8601": "2022-02-24T22:13:03.085372Z",
      "url": "https://files.pythonhosted.org/packages/28/63/ca6456bf717800e38e68df04d28e0e7302b41f2c16977c1941fd09ab3ca9/locking-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}