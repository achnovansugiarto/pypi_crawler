{
  "info": {
    "author": "Joachim Ungar",
    "author_email": "joachim.ungar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "===============\nmapchete xarray\n===============\n\nThis driver enables mapchete to write multidimensional arrays into a tile directory structure.\n\n.. image:: https://badge.fury.io/py/mapchete-xarray.svg\n    :target: https://badge.fury.io/py/mapchete-xarray\n\n.. image:: https://travis-ci.org/ungarj/mapchete_xarray.svg?branch=master\n    :target: https://travis-ci.org/ungarj/mapchete_xarray\n\n.. image:: https://coveralls.io/repos/github/ungarj/mapchete_xarray/badge.svg?branch=master\n    :target: https://coveralls.io/github/ungarj/mapchete_xarray?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/mapchete_xarray.svg\n    :target: https://pypi.python.org/pypi/mapchete_xarray\n\n\n\n-----\nUsage\n-----\n\nExample ``.mapchete`` file:\n\n.. code-block:: yaml\n\n    process: process.py\n    zoom_levels:\n        min: 0\n        max: 12\n    input:\n    output:\n        format: xarray\n        path: /some/output/path\n        dtype: uint16\n        bands: 3\n        storage: zarr  # or netcdf\n    pyramid:\n        grid: geodetic\n        metatiling: 2\n\n\n\nExample process file:\n\n.. code-block:: python\n\n    from dateutil import parser\n    import numpy as np\n    import xarray as xr\n\n\n    def execute(mp, stack_height=10):\n        # create 4D arrays with current tile shape and dtype\n        arrs = [\n            np.ones((3, ) + mp.tile.shape, dtype=\"uint16\")\n            for _ in range(1, stack_height)\n        ]\n\n        # create timestamps for each array\n        timestamps = [parser.parse(\"2018-04-0%s\" % i) for i in range(1, stack_height)]\n\n        # build xarray with time axis\n        timeseries = xr.DataArray(\n            np.stack(arrs), coords={'time': timestamps}, dims=('time', 'bands', 'x', 'y')\n        )\n\n        # return to write\n        return timeseries\n\n\n------------\nInstallation\n------------\n\n.. code-block:: shell\n\n    # install using pip:\n    pip install mapchete_xarray\n    # verify driver is vailable ('xarray' should be listed as output format):\n    mapchete formats\n\n\n-------------------\nCurrent Limitations\n-------------------\n\n- no reprojection allowed\n- when reading from existing output, process metatiling must be smaller than xarray output metatiling\n\n\n-------\nLicense\n-------\n\nMIT License\n\nCopyright (c) 2019-2020 `EOX IT Services`_\n\n.. _`EOX IT Services`: https://eox.at/\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ungarj/mapchete_xarray",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapchete-xarray",
    "package_url": "https://pypi.org/project/mapchete-xarray/",
    "platform": "",
    "project_url": "https://pypi.org/project/mapchete-xarray/",
    "project_urls": {
      "Homepage": "https://github.com/ungarj/mapchete_xarray"
    },
    "release_url": "https://pypi.org/project/mapchete-xarray/2021.11.0/",
    "requires_dist": [
      "mapchete[s3] (>=2021.11.0)",
      "netCDF4",
      "xarray",
      "zarr"
    ],
    "requires_python": "",
    "summary": "Mapchete xarray output driver",
    "version": "2021.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15487182,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be8b6be6437834e3880892bda343ee71f726969349ffc35a918625a1f7020c84",
        "md5": "f2a305bd607ac04ed6307d540b0dc460",
        "sha256": "8ceb17efa273cbdd43eedd8adb36a5c8d8e6046c1283ba2ee680f30b027b58fd"
      },
      "downloads": -1,
      "filename": "mapchete_xarray-2021.11.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2a305bd607ac04ed6307d540b0dc460",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7925,
      "upload_time": "2021-11-03T16:20:22",
      "upload_time_iso_8601": "2021-11-03T16:20:22.246984Z",
      "url": "https://files.pythonhosted.org/packages/be/8b/6be6437834e3880892bda343ee71f726969349ffc35a918625a1f7020c84/mapchete_xarray-2021.11.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d8f32c5ca54b0d04a8dc9aded78ea2616a259bcd3af7a6750959237de1467b5",
        "md5": "a619f1b6ed9aec03fca8befd6e6af3ce",
        "sha256": "79f421ecad68d70d20f2da45b9e14fc574088da767d4f8c06af49f216da02eaf"
      },
      "downloads": -1,
      "filename": "mapchete_xarray-2021.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a619f1b6ed9aec03fca8befd6e6af3ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7258,
      "upload_time": "2021-11-03T16:20:23",
      "upload_time_iso_8601": "2021-11-03T16:20:23.418525Z",
      "url": "https://files.pythonhosted.org/packages/4d/8f/32c5ca54b0d04a8dc9aded78ea2616a259bcd3af7a6750959237de1467b5/mapchete_xarray-2021.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}