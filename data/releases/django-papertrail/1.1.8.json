{
  "info": {
    "author": "Eran Rundstein / FundersClub Inc.",
    "author_email": "eran@fundersclub.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-papertrail\n\nAn elegant solution for keeping a relational log of chronological events in a Django application.\n\n[![](https://img.shields.io/pypi/l/django-papertrail.svg)](https://pypi.python.org/pypi/django-papertrail)\n[![](https://img.shields.io/pypi/v/django-papertrail.svg)](https://pypi.python.org/pypi/django-papertrail)\n[![](https://circleci.com/gh/FundersClub/django-papertrail.svg?&style=shield)](https://circleci.com/gh/FundersClub/django-papertrail)\n\n\n## Installation\n\nTo install `django-papertrail`:\n```\n$ pip install django-papertrail\n```\n\nTo enable `django-papertrail` in your project you need to add it to `INSTALLED_APPS` in your projects\n`settings.py` file:\n```python\nINSTALLED_APPS = (\n    ...\n    'papertrail',\n    ...\n)\n```\n\n\nAfter that, you should migrate:\n```\n$ python manage.py migrate\n```\n\n## Using it\n\n```python\nimport papertrail\n\n###########################################################################\n# Creating entries\n###########################################################################\n\n# Basic usage. Timestamp defaults to now\npapertrail.log('cache-flushed', 'Cache was flushed!')\n\n# Optional data\npapertrail.log(\n    'periodic-cleanup-ran',\n    'Periodic cleanup task executed.',\n    data={\n        'success': True,\n        'cleaned_objects': 100,\n    }\n)\n\n# Optional targets\npapertrail.log(\n    'user-logged-in',\n    u'{} logged in'.format(request.user.get_full_name()),\n    targets={\n        'user': request.user,\n    }\n)\n\n# Optional timestamp\npapertrail.log(\n    'user-joined',\n    'User joined site',\n    targets={\n        'user': request.user,\n    },\n    timestamp=request.user.date_joined,\n)\n\n# Multiple targets\nuser1 = User.objects.get(...)\nuser2 = User.objects.get(...)\npapertrail.log(\n    'user-followed',\n    'User followed another user',\n    targets={\n        'follower': user1,\n        'following': user2,\n    },\n)\n\n###########################################################################\n# Querying the papertrail\n###########################################################################\n\n# Gettying all papertrail entries that points to user1, without taking\n# into account the target relationship name\nqs = papertrail.related_to(user)\nentry = qs.first()\nprint '[{}] {} ({}) - {}'.format(\n    entry.timestamp, entry.type, entry.message, entry.data\n)\n\n# Get all entry that points to both users\n# (Will only return entries that have both user1 and user2 in their\n#  targets)\nqs = papertrail.related_to(user1, user2)\n\n# Query specific relationships, such as user1 following user2\nqs = papertrail.related_to(follower=user1, following=user2)\n\n# Filtering entry by a specific type (or any Django ORM filter)\nqs = papertrail.filter(type='user-followed')\n\n# And chaining\nqs = papertrail.filter(type='user-followed').related_to(follower=user1)\n\n# Get all the users that have followed a specific user (user1). This might\n# look a bit confusing at first, but can be very useful.\n# The objects_represented filter allows filtering a given queryset to contain\n# only elements that have a specific papertrail entry pointing at them.\nall_users = get_user_model().objects.all()\nusers_who_followed_user1 = (papertrail\n    # Narrow down to only user-followed entries that followed user1\n    .filter(type='user-followed')\n    .related_to(following=user1)\n    # Return a User queryset that only has the users for which we have a\n    # user-followed entry that has a followed target pointing at them\n    .objects_represented(all_users, 'followed')\n)\n\n# objects_not_represented does the same, but returns a queryset that\n# excludes any object that has a papertrail entry pointing at it:\n# Get all users who never logged in\nusers_who_never_logged_in = (papertrail\n    .filter(type='user-logged-in')\n    .objects_not_represented(all_users, 'user')\n)\n```\n\n## Admin integration\n\n`django-papertrail` provides a Django admin integration to both view entries\n(simple Django admin Entry list, usually available under /admin/papertrail/entry/)\nas well as a more advanced intergration for objects you want to keep track of.\n\nThe advanced integration provides two useful functionalities:\n\n1) Change tracking - whenever an object for which the integration is enabled is\n   added/edited/deleted, a papertrail entry will be created\n2) A convenient link to view all papertrail entries pointing to the object\n   being viewed as well as an integrated papertrail viewer:\n\n![](https://raw.githubusercontent.com/FundersClub/django-papertrail/master/docs/scrshots/admin-view-link.png)\n![](https://raw.githubusercontent.com/FundersClub/django-papertrail/master/docs/scrshots/admin-viewer.png)\n\nTo enable the integration, your `ModelAdmin` class needs to inherit from `AdminEventLoggerMixin`:\n\n```python\nfrom papertrail.admin import AdminEventLoggerMixin\n\nclass MyObjectAdmin(AdminEventLoggerMixin, admin.ModelAdmin):\n    pass\n\n    # The admin papertrail viewer can have filters:\n    papertrail_type_filters = {\n        'Login events': (\n            'user-logged-in',\n            'user-logged-out',\n        ),\n        'Social events': (\n            'user-followed',\n            'user-unfollowed',\n        ),\n    }\n```\n\n\nA viewer with filters would look like this:\n\n![](https://raw.githubusercontent.com/FundersClub/django-papertrail/master/docs/scrshots/admin-viewer-filter.png)\n\n\nMaintained by [Eran Rundstein @eranrund](https://www.github.com/eranrund/)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/FundersClub/django-papertrail",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-papertrail",
    "package_url": "https://pypi.org/project/django-papertrail/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-papertrail/",
    "project_urls": {
      "Homepage": "https://www.github.com/FundersClub/django-papertrail"
    },
    "release_url": "https://pypi.org/project/django-papertrail/1.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An elegant solution for keeping a relational log of chronological events in a Django application.",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4181677,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f697c1c69c6893e28dd90cf45df46586ea885b65c7bc4768bd920e63479bab6e",
        "md5": "7c0889e6edcaf50f36a79d9ec9920e34",
        "sha256": "1dfa49558068cb90cb166905533e5790afddd1bc327fdcea031196ceec4a77d5"
      },
      "downloads": -1,
      "filename": "django-papertrail-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "7c0889e6edcaf50f36a79d9ec9920e34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17880,
      "upload_time": "2018-04-18T18:00:10",
      "upload_time_iso_8601": "2018-04-18T18:00:10.764092Z",
      "url": "https://files.pythonhosted.org/packages/f6/97/c1c69c6893e28dd90cf45df46586ea885b65c7bc4768bd920e63479bab6e/django-papertrail-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}