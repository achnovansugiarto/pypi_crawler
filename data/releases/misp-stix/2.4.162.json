{
  "info": {
    "author": "Christian Studer",
    "author_email": "christian.studer@circl.lu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security"
    ],
    "description": "# MISP-STIX - Python library to handle the conversion between MISP standard and STIX\n\n<img src=\"https://raw.githubusercontent.com/MISP/misp-stix/main/documentation/logos/misp-stix.png\" width=\"125\" height=\"125\">\n\n[![Python version](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/release/python-370/)\n[![MISP-STIX version](https://badge.fury.io/gh/MISP%2Fmisp-stix.svg)](https://badge.fury.io/gh/MISP%2Fmisp-stix)\n[![Github Actions](https://github.com/MISP/misp-stix/workflows/misp-stix/badge.svg)](https://github.com/MISP/misp-stix/actions?query=workflow%3Amisp-stix)\n[![License](https://img.shields.io/github/license/MISP/misp-stix.svg)](#License)\n\nMISP-STIX-converter is a Python library (>=3.7) to handle all the conversions between the [MISP standard format](https://www.misp-standard.org/) and STIX formats.\n\nThe package is available as [misp-stix](https://pypi.org/project/misp-stix/) in PyPI.\n\n## Features\n\n- MISP standard format conversion to STIX 1.x (1.1.1 and 1.2)\n- MISP standard format conversion to STIX 2.x (2.0 and 2.1)\n- Maps [MISP Objects](https://github.com/MISP/misp-objects) and [MISP galaxies](https://github.com/misp/misp-galaxy) with [respective semantically similar objects](https://github.com/MISP/misp-stix/tree/main/documentation)\n- STIX to MISP standard format\n- Provides an extendable library for mapping and facilitate extension\n\nThis library is used by the [MISP core software](https://github.com/MISP/MISP) to perform STIX conversion and serving as a useful tool for anyone looking for a clean way of converting between the MISP standard format and various STIX versions (1.1.1, 1.2, 2.0, 2.1).\n\nA complete [documentation is available](/documentation/) including the mappings between the different formats.\n\n## Install from pip\n\n**It is strongly recommended to use a virtual environment**\n\nIf you want to know more about virtual environments, [python has you covered](https://docs.python.org/3/tutorial/venv.html)\n\nFrom the current repository:\n```\npip3 install misp-stix\n```\n\nPackage details at PyPI: [misp-stix](https://pypi.org/project/misp-stix/)\n\n## Install the latest version from the repository for development purposes\n\n**Note**: poetry is required; e.g., \"pip3 install poetry\"\n\n```\ngit clone https://github.com/MISP/misp-stix.git && cd misp-stix\ngit submodule update --init\npoetry install\n```\n\n### Running the tests\n\nTests for MISP format export as STIX 1.1.1 & 1.2:\n```bash\npoetry run pytest tests/test_stix1_export.py\n```\n\nTests for MISP format export as STIX 2.0:\n```bash\npoetry run pytest tests/test_stix20_export.py\n```\n\nTests for MISP format export as STIX 2.1:\n```bash\npoetry run pytest tests/test_stix21_export.py\n```\n\n## Usage\n\n### Command-line Usage\n\n```\nmisp_stix_converter --version 2.1 -f tests/test_events_collection_1.json\n```\n\n#### Parameters\n\n- `--version`: STIX version\n- `--file`: Input file(s)\n\nParameters specific to the case of multiple input file(s):\n- `--single_output`: In case of multiple input files, save the results in on single file\n- `--tmp_files`: Store temporary results in files before gathering the whole conversion result, instead of keeping it on memory\n\nParameters specific to STIX 1 export:\n- `--feature`: MISP data structure level (attribute or event)\n- `--namespace`: Namespace to be used in the STIX 1 header\n- `--org`: Organisation name to be used in the STIX 1 header\n\n### In Python scripts\n\nGiven a MISP Event (with its metadata fields, attributes, objects, galaxies and tags), declared in an `event` variable in JSON format, you can get the result of a conversion into one of the supported STIX versions:\n\n- Convert a MISP Event in STIX1:\n\n```python\nfrom misp_stix_converter import MISPtoSTIX1EventsParser\n\nparser = MISPtoSTIX1EventsParser(\n    'MISP-Project', # Example of Org name\n    '1.1.1' # STIX1 version (1.1.1 or 1.2)\n)\nparser.parse_misp_event(event)\n\nstix_package = parser.stix_package\n```\n\n- Convert a MISP Event in STIX1 using directly its file name:\n\n```python\nfrom misp_stix_converter import misp_to_stix1\n\nresponse = misp_to_stix1(\n    filename, # file name of the file containing a MISP Event\n    'xml', # return format (XML or JSON)\n    '1.1.1' # STIX1 version (1.1.1 or 1.2)\n)\n# response = 1 if everything went well\n```\nThe resulting STIX1 Package is then available in a `filename.out` file\n\n- Convert a MISP Event in STIX2:\n\n```python\n# for STIX 2.0\nfrom misp_stix_converter import MISPtoSTIX20Parser\n# for STIX 2.1\nfrom misp_stix_converter import MISPtoSTIX21Parser\n\nparser20 = MISPtoSTIX20Parser()\nparser20.parse_misp_event(event)\n\nparser21 = MISPtoSTIX21Parser()\nparser21.parse_misp_event(event)\n\n# To get the list of parsed STIX objects\nstix_20_objects = parser20.stix_objects\nstix_21_objects = parser21.stix_objects\n\n# To get the list of parser STIX objects within a STIX 2.0 or 2.1 Bundle\nbundle20 = parser20.bundle\nbundle21 = parser21.bundle\n```\n\n- Convert a MISP Event in STIX2 using directly its file name:\n\n```python\nfrom misp_stix_converter import misp_to_stix2_0, misp_to_stix2_1\n\nresponse_20 = misp_to_stix2_0(filename)\nresponse_21 = misp_to_stix2_1(filename)\n# Again response_20 & response_21 should be 1 if everything went well\n```\nThe resulting STIX2 Bundle is the available in a `filename.out` file\n\nIf you get some MISP collection of data, it is also possible to convert it straight into some STIX format:\n\n```python\nfrom misp_stix_converter import MISPtoSTIX1EventsParser, MISPtoSTIX20Parser, MISPtoSTIX21Parser\n\nfilename = _PATH_TO_YOUR_FILE_CONTAINING_MISP_FORMAT_\n\nparser1 = MISPtoSTIX1EventsParser('MISP', '1.1.1')\nparser1.parse_json_content(filename)\nstix_package = parser1.stix_package\n\nparser20 = MISPtoSTIX20Parser()\nparser20.parse_json_content(filename)\nstix_20_objects = parser20.stix_objects\nbundle20 = parser20.bundle\n\nparser21 = MISPtoSTIX21Parser()\nparser21.parse_json_content(filename)\nstix_21_objects = parser21.stix_objects\nbundle21 = parser21.bundle\n```\n\nBut in order to parse multiple data collections, you can also use the following helpers:\n\n```python\nfrom misp_stix_converter import misp_event_collection_to_stix1, misp_event_collection_to_stix2_0, misp_event_collection_to_stix2_1\n\ninput_filenames = [filename for filename in Path(_PATH_TO_YOUR_MISP_FILES_).glob('*.json')]\n\nstix1_response = misp_event_collection_to_stix1(\n    output_filename, # path to the file where the results are going to be written\n    'xml', # STIX1 return format (XML or JSON)\n    '1.1.1', # STIX1 version (1.1.1 or 1.2)\n    *input_filenames\n)\n\nstix20_response = misp_event_collection_to_stix2_0(\n    output_filename, # path to the file where the results are going to be written\n    *input_filenames\n)\n\nstix21_response = misp_event_collection_to_stix2_1(\n    output_filename, # path to the file where the results are going to be written\n    *input_filenames\n)\n```\nAgain, all the response variables should be `1` and the resulting STIX1 Package and STIX 2.0 & 2.1 Bundles are available in the specific output file names.\n\n### Samples and examples\n\nVarious examples are provided and used by the different tests scripts in the [tests](tests/) directory.\nThose example files are showing the results of MISP format exported in the various supported STIX formats.\n\n## MISP <--> STIX Mapping\n\nA specific documentation concerning the mapping between MISP and the various supported STIX versions is also provided in the [documentation](documentation/) directory.\nYou can find there all the different cases illustrated with examples.\n\n# License\n\nmisp-stix is released under a BSD 2-Clause \"Simplified\" License allow easy reuse with other libraries.\n\n~~~\nCopyright 2019-2022 Christian Studer\nCopyright 2019-2022 CIRCL - Computer Incident Response Center Luxembourg c/o \"security made in LÃ«tzebuerg\" (SMILE) g.i.e.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n~~~\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MISP/misp-stix",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "Christian Studer",
    "maintainer_email": "christian.studer@circl.lu",
    "name": "misp-stix",
    "package_url": "https://pypi.org/project/misp-stix/",
    "platform": null,
    "project_url": "https://pypi.org/project/misp-stix/",
    "project_urls": {
      "Bug Tracker": "https://github.com/MISP/misp-stix/issues",
      "Documentation": "https://misp.github.io/misp-stix/",
      "Homepage": "https://github.com/MISP/misp-stix",
      "Repository": "https://github.com/MISP/misp-stix",
      "Source": "https://github.com/MISP/misp-stix"
    },
    "release_url": "https://pypi.org/project/misp-stix/2.4.162/",
    "requires_dist": [
      "pymisp (>=2.4.157,<3.0.0)",
      "stix (>=1.2.0,<2.0.0)",
      "cybox (>=2.1.0,<3.0.0)",
      "mixbox (>=1.0.3,<2.0.0)",
      "maec (>=4.1.0,<5.0.0)",
      "misp-lib-stix2 (>=3.0.1,<4.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Python scripts used by MISP to export MISP format into STIX and to import STIX into MISP format.",
    "version": "2.4.162",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17285572,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f42382b39f49db5ad02577b146b1cb16c24d3cebebc6b31b020875a6c5a42996",
        "md5": "cee5227331d7a489d6dd050cab193617",
        "sha256": "a9661eff048973ab68bab7f8c205fd278c8d88074275c329b488d33aaeafd3f5"
      },
      "downloads": -1,
      "filename": "misp_stix-2.4.162-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cee5227331d7a489d6dd050cab193617",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 34308569,
      "upload_time": "2022-09-19T21:27:06",
      "upload_time_iso_8601": "2022-09-19T21:27:06.802732Z",
      "url": "https://files.pythonhosted.org/packages/f4/23/82b39f49db5ad02577b146b1cb16c24d3cebebc6b31b020875a6c5a42996/misp_stix-2.4.162-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ee4588e85045fdd97bfb6877ba33aed5f62e7a76c57e8c6c488802f43494e4a",
        "md5": "40f25e399d8cc6c50957d596c0b6782e",
        "sha256": "74feea03d405c914b33cb391e6a3808a65d474e8ebf83c22be825f12a14890d9"
      },
      "downloads": -1,
      "filename": "misp-stix-2.4.162.tar.gz",
      "has_sig": false,
      "md5_digest": "40f25e399d8cc6c50957d596c0b6782e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 17814255,
      "upload_time": "2022-09-19T21:26:50",
      "upload_time_iso_8601": "2022-09-19T21:26:50.360617Z",
      "url": "https://files.pythonhosted.org/packages/2e/e4/588e85045fdd97bfb6877ba33aed5f62e7a76c57e8c6c488802f43494e4a/misp-stix-2.4.162.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}