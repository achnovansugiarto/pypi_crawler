{
  "info": {
    "author": "Fr√∂jd",
    "author_email": "martin@marteinn.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Utilities"
    ],
    "description": "|Build Status| |PyPI version|\n\nDjango-React-Templatetags\n=========================\n\nThis extension allows you to add React components into your django\ntemplates.\n\nRequirements\n------------\n\n-  Python 2.7 / Python 3.4 / PyPy\n-  Django 1.8+\n\nInstallation\n------------\n\nInstall the library with pip:\n\n::\n\n    $ pip install django_react_templatetags\n\nQuick Setup\n-----------\n\nMake sure django\\_react\\_templatetags is added to your\n``INSTALLED_APPS``.\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        # ...\n        'django_react_templatetags',\n    )\n\nYou also need to add the ``react_context_processor`` into the\n``context_middleware``:\n\n.. code:: python\n\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [\n                'templates...',\n            ],\n            'APP_DIRS': True,\n            'OPTIONS': {\n                'debug': True,\n                'context_processors': [\n                    ...\n                    'django_react_templatetags.context_processors.react_context_processor',\n                ],\n            },\n        },\n    ]\n\nThis should be enough to get started.\n\nUsage\n-----\n\n1. Load the ``{% load react %}``\n2. Insert component anywhere in your template:\n   ``{% react_render component=\"Component\" data=my_data %}``. This will\n   create a placeholder.\n3. Put ``{% react_print %}`` in the end of your template. (This will\n   output the ReactDom.render javascript).\n\nFull example\n------------\n\nThis template:\n\n::\n\n    {% load react %}\n    <html>\n        <head>...</head>\n\n        <body>\n            <nav>\n                {% react_render component=\"Menu\" data=menu_data %}\n            </nav>\n        </body>\n\n        {% react_print %}\n    </html>\n\nWill transform into this:\n\n::\n\n    {% load react %}\n    <html>\n        <head>...</head>\n\n        <body>\n            <nav>\n                <div id=\"Menu_1\"></div>\n            </nav>\n        </body>\n\n        <script>\n            ReactDOM.render(\n                React.createElement(Menu, {'example', 1}),\n                document.getElementById('Menu_1')\n            );\n        </script>\n    </html>\n\nSettings\n--------\n\n-  ``REACT_COMPONENT_PREFIX``: Adds a prefix to your React.createElement\n   include.\n\n   -  Example using (``REACT_COMPONENT_PREFIX=\"Cookie.\"``)\n   -  ...Becomes: ``React.createElement(Cookie.MenuComponent, {})``\n\nQ&A\n---\n\n-  How do I override the markup generated by ``react_print``?\n\n   -  Simple! Just override the template ``react_print.html``\n\n-  This library only contains templatetags, where is the react js\n   library?\n\n   -  This library only covers the template parts (that is: placeholder\n      and js render).\n\n-  I dont like the autogenerated element id, can I supply my own\n   element?\n\n   -  Sure! Just add the param ``identifier=\"yourid\"`` in\n      ``react_render``\n\n-  How do I apply my own css class to the autogenerated element?\n\n   -  Add ``class=yourclassname`` to your ``react_render``\n\nTests\n-----\n\nThis library include tests, just run ``python runtests.py``.\n\nYou can also run separate test cases:\n``runtests.py tests.ReactIncludeComponentTest``\n\nContributing\n------------\n\nWant to contribute? Awesome. Just send a pull request.\n\nLicense\n-------\n\nDjango-React-Templatetags is released under the `MIT\nLicense <http://www.opensource.org/licenses/MIT>`__.\n\n.. |Build Status| image:: https://travis-ci.org/Frojd/django-react-templatetags.svg?branch=master\n   :target: https://travis-ci.org/Frojd/django-react-templatetags\n.. |PyPI version| image:: https://badge.fury.io/py/django-react-templatetags.svg\n   :target: https://badge.fury.io/py/django-react-templatetags\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/frojd/django-react-templatetags",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-react-templatetags",
    "package_url": "https://pypi.org/project/django-react-templatetags/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-react-templatetags/",
    "project_urls": {
      "Homepage": "https://github.com/frojd/django-react-templatetags"
    },
    "release_url": "https://pypi.org/project/django-react-templatetags/2.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Easy react components within your django templates",
    "version": "2.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16339563,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93d2b3794c2600c00993e03a4c295d401624dda85c8f82b09f0c6b9a80d7f94c",
        "md5": "dc9cf1495e67a3cc0e65847f855cde17",
        "sha256": "34e4a5bb4e55b0afbd4cd36d375eb2884c75564348248dd9bb4e411b218f655e"
      },
      "downloads": -1,
      "filename": "django_react_templatetags-2.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dc9cf1495e67a3cc0e65847f855cde17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7154,
      "upload_time": "2016-11-07T10:33:55",
      "upload_time_iso_8601": "2016-11-07T10:33:55.414763Z",
      "url": "https://files.pythonhosted.org/packages/93/d2/b3794c2600c00993e03a4c295d401624dda85c8f82b09f0c6b9a80d7f94c/django_react_templatetags-2.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}