{
  "info": {
    "author": "Brandon Taylor",
    "author_email": "alsoicode@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Utilities"
    ],
    "description": "# django-maintenancemode-2\n\n[![Build Status](https://travis-ci.org/alsoicode/django-maintenancemode-2.svg)](https://travis-ci.org/alsoicode/django-maintenancemode-2)\n\nCurrent Version: 1.1.2\n\nThis project makes it easy to put your Django site into \"maintenance mode\", or more technically, return an HTTP 503 response.\n\nThis project differs slightly from other implementations in that the maintenance mode flag is stored in your database versus settings or an environment variable. If your site is deployed to multiple servers, the centralized database-based maintenance flag makes it a snap to bring them all up or down at once.\n\n## Requirements\n- [django](https://www.djangoproject.com/download/)\n- [django.contrib.sites](https://docs.djangoproject.com/en/1.8/ref/contrib/sites/)\n\n## Pre-Requisites\nYou must have at least one Site entry in your database **before** installing django-maintenancemode-2.\n\n## Supported Django Versions\n- 1.9\n- 1.8\n- 1.7\n- 1.6\n- 1.5 or below *should* work, but come on, it's time to upgrade :)\n\n## Installation\n1. `pip install django-maintenancemode-2`\n\n-- or --\n\n1. Download django-maintenancemode-2 from [source](https://github.com/alsoicode/django-maintenancemode-2/archive/master.zip)\n2. *optional: Enable a virtualenv\n3. Run `python setup.py install` or add `maintenancemode` to your PYTHONPATH\n\n## Settings and Required Values\n- Ensure the [Sites Framework](https://docs.djangoproject.com/en/1.8/ref/contrib/sites/) is enabled and that you have at least one entry in the Sites table.\n- Add `maintenancemode.middleware.MaintenanceModeMiddleware` to your `MIDDLEWARE_CLASSES`\n- Add `maintenancemode` to your `INSTALLED_APPS`\n- Run `python manage.py syncdb` to create the maintenancemode tables.\n- Run your project to automatically add the maintenancemode database records.\n- Add a 503.html template to the root of your templates directory, or optionally add a `MAINTENANCE_503_TEMPLATE` path to your 503.html file's location in settings.\n\n## Usage\n\n![Image of django-maintenancemode-2](http://res.cloudinary.com/alsoicode/image/upload/v1449537052/django-maintenancemode-2/maintenancemode.jpg)\n\nTo put a site into \"Maintenance Mode\", just check the \"In Maintenance Mode\" checkbox and save in Django Admin under the \"Maintenancemode\" section. The next time you visit the public side of the site it will return a 503 if:\n\n- You are not a superuser / staff\n- You are not viewing a URL in the ignored patterns list\n- Your `REMOTE_ADDR` does not appear in the `INTERNAL_IPS` setting\n\nMaintenance mode will create a database record per site in the Sites app. This allows you to bring each domain down independently if your project serves multiple domains.\n\nPatterns to ignore are registered as an inline model for each maintenance record. Patterns are defined exactly the same way you write Django URLs normally.\n\n## Testing and Sample Application\nA \"testproject\" application is included which also contains unit and functional tests you can run via `python manage.py test` from the `testproject` directory.\n\nThe admin username/password is: admin\n\nThere are only two views in the testproject:\n- /\n- ignored-page\n\nTo see `maintenancemode` in action, log into Django admin, and set the maintenance mode to true. Log out, then visit the home page and instead, you'll be greeted with the maintenance page.\n\nTo have `maintenancemode` ignore the \"ignnored-page\" view, simply add it's url pattern to the Ignored URLs as:\n\n    /ignored-page\n\nNow you should be able to visit the `/ignored-page` view regardless of the maintenancemode status. This is useful for contact or help pages that you still want people to be able to access while you're working on other parts of the site.\n\n### Database migrations\nLegacy support for South migrations is supported, otherwise `manage.py syncdb` should add the necessary tables.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alsoicode/django-maintenancemode-2",
    "keywords": null,
    "license": "APL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-maintenancemode-2",
    "package_url": "https://pypi.org/project/django-maintenancemode-2/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-maintenancemode-2/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/alsoicode/django-maintenancemode-2"
    },
    "release_url": "https://pypi.org/project/django-maintenancemode-2/1.1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Database-driven way to put your Django site into maintenance mode.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15579284,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5d87c39d82a958a7a8f7b069fc1221d2e9b6e4fce9b8c600fd61513fb0ed1ad",
        "md5": "2cae57fc8267752a0cea37b1b75c1fb4",
        "sha256": "852205fee397d3fbaa0e1f95f4bb7903f4c1478589ff483d064edabb2d5d6549"
      },
      "downloads": -1,
      "filename": "django-maintenancemode-2-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2cae57fc8267752a0cea37b1b75c1fb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14824,
      "upload_time": "2015-12-08T12:53:44",
      "upload_time_iso_8601": "2015-12-08T12:53:44.068970Z",
      "url": "https://files.pythonhosted.org/packages/a5/d8/7c39d82a958a7a8f7b069fc1221d2e9b6e4fce9b8c600fd61513fb0ed1ad/django-maintenancemode-2-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}