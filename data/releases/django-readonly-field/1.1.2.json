{
  "info": {
    "author": "PeopleDoc",
    "author_email": "peopledoc-python@ukg.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=============================\nDjango Readonly Field\n=============================\n\n.. image:: https://badge.fury.io/py/django-readonly-field.png\n    :target: https://pypi.org/pypi/django-readonly-field\n\n.. image:: https://travis-ci.org/peopledoc/django-readonly-field.png?branch=master\n    :target: https://travis-ci.org/peopledoc/django-readonly-field\n\n.. image:: https://img.shields.io/codecov/c/github/peopledoc/django-readonly-field/master.svg\n    :target: https://codecov.io/github/peopledoc/django-readonly-field?branch=master\n\nMake some Django model fields readonly. In other words, it lets you tell Django to\nread some fields from your database, but never try to write those back. It can be\nuseful if your fields are populated by triggers or something.\n\nRequirements\n------------\n\n+ **Postgresql only**\n+ Django, tested from 2.2 to 4.1\n+ With Python, tested from 3.7 to 3.11\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-readonly-field.readthedocs.org.\n\nQuickstart\n----------\n\nInstall Django Readonly Field::\n\n    pip install django-readonly-field\n\nIn your ``settings.py`` :\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # ...\n        \"django_readonly_field\",\n    ]\n\nIn the model where you want some fields to be read-only:\n\n.. code-block:: python\n\n    class Spaceship(models.Model):\n        name = models.CharField(max_length=100)\n        color = models.CharField(max_length=16)\n\n        class ReadonlyMeta:\n            readonly = [\"color\"]\n\nThat's it. Now, Django won't try to write the ``color`` field on the database.\n\n\nWarning\n-------\n\nDjango won't try to write those fields. Consequence is that your Database\n**must** be ok with Django not writing those fields. They should either\nbe nullable or have a database default or be filled by a trigger, otherwise\nyou will get an ``IntegrityError``.\n\nDon't forget that Django model field defaults won't become database defaults.\nYou might have to write an SQL migration for this.\n\n\nRunning Tests\n--------------\n\nYou will need a usable Postgresql database in order to test the project.\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    export DATABASE_URL=postgres://USER:PASSWORD@HOST:PORT/NAME\n    (myenv) $ pip install -r requirements.txt\n\nRun tests for a specific version\n\n::\n\n    (myenv) $ pytest\n\n\nRun tests for all versions (if tox is installed globally, you don't need a\nvirtual environment)\n\n::\n\n    $ tox\n\n\nCredits\n---------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peopledoc/django-readonly-field",
    "keywords": "django posgresql read-only",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-readonly-field",
    "package_url": "https://pypi.org/project/django-readonly-field/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-readonly-field/",
    "project_urls": {
      "Homepage": "https://github.com/peopledoc/django-readonly-field"
    },
    "release_url": "https://pypi.org/project/django-readonly-field/1.1.2/",
    "requires_dist": [
      "Django",
      "build ; extra == 'dev'",
      "dj-database-url ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "psycopg2 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-django ; extra == 'dev'",
      "requests ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Make Django model fields readonly",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16420035,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7282a626b805498850e5a6f1075b9d91c712481a97a4f2d52812cafc81853470",
        "md5": "230b9b06556b425edeb45c56f50537c1",
        "sha256": "5e7e9f492ea88390a92dfb6a3a3c7ead456b9536e3e8f7bd1c6482eaeadf568f"
      },
      "downloads": -1,
      "filename": "django_readonly_field-1.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "230b9b06556b425edeb45c56f50537c1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11803,
      "upload_time": "2023-01-13T17:22:20",
      "upload_time_iso_8601": "2023-01-13T17:22:20.207152Z",
      "url": "https://files.pythonhosted.org/packages/72/82/a626b805498850e5a6f1075b9d91c712481a97a4f2d52812cafc81853470/django_readonly_field-1.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92417f0742d7c5b1b871cd4eddb8abce313bb6c0d5377105d274866eaaafb4ff",
        "md5": "159e600004337e0480b37b49456650ba",
        "sha256": "cc22ec25fbead0cc33753b876d2632c84633f7f42df7510d448f7245d8878675"
      },
      "downloads": -1,
      "filename": "django-readonly-field-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "159e600004337e0480b37b49456650ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21036,
      "upload_time": "2023-01-13T17:22:21",
      "upload_time_iso_8601": "2023-01-13T17:22:21.931737Z",
      "url": "https://files.pythonhosted.org/packages/92/41/7f0742d7c5b1b871cd4eddb8abce313bb6c0d5377105d274866eaaafb4ff/django-readonly-field-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}