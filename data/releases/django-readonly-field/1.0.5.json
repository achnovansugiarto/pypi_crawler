{
  "info": {
    "author": "Joachim Jablon",
    "author_email": "joachim.jablon@people-doc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "=============================\nDjango Readonly Field\n=============================\n\n.. image:: https://badge.fury.io/py/django-readonly-field.png\n    :target: https://pypi.org/pypi/django-readonly-field\n\n.. image:: https://travis-ci.org/peopledoc/django-readonly-field.png?branch=master\n    :target: https://travis-ci.org/peopledoc/django-readonly-field\n\n.. image:: https://img.shields.io/codecov/c/github/peopledoc/django-readonly-field/master.svg\n    :target: https://codecov.io/github/peopledoc/django-readonly-field?branch=master\n\nMake Django model fields readonly. In other words, make it so that Django will\nread from your fields in your database, but never try to write them. It can be\nuseful if your fields are populated by triggers or something.\n\nRequirements\n------------\n\n+ **Postgresql only**\n+ Django, obviously. v1.11+ (until proven otherwise)\n+ Running under Python 2.7 or 3.5+\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-readonly-field.readthedocs.org.\n\nQuickstart\n----------\n\nInstall Django Readonly Field::\n\n    pip install django-readonly-field\n\nIn your ``settings.py`` :\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # ...\n        \"django_readonly_field\",\n    ]\n\nIn the model where you want some fields to be read-only:\n\n.. code-block:: python\n\n    class Spaceship(models.Model):\n        name = models.CharField(max_length=100)\n        color = models.CharField(max_length=16)\n\n        class ReadonlyMeta:\n            readonly = [\"color\"]\n\nThat's it. Now, Django won't try to write the ``color`` field on the database.\n\n\nWarning\n-------\n\nDjango won't try to write those fields. Consequence is that your Database\n**must** be ok with Django not writing those fields. They should either\nbe nullable or have a database default or be filled by a trigger, otherwise\nyou will get an ``IntegrityError``.\n\nDon't forget that Django model field defaults won't become database defaults.\nYou might have to write an SQL migration for this.\n\n\nRunning Tests\n--------------\n\nYou will need an usable Postgresql database in ordre to test the project.\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    export DATABASE_URL=postgres://USER:PASSWORD@HOST:PORT/NAME\n    (myenv) $ pip install -r requirements_test.txt\n\nRun tests for a specific version\n\n::\n\n    (myenv) $ python runtests.py\n\n\nRun tests for all versions (if tox is installed globally, you don't need a\nvirtual environment)\n\n::\n\n    $ tox\n\nUsing the project\n-----------------\n\nMany operations are documented in the Makefile. For more information, use:\n\n::\n\n    $ make help\n\n\nCredits\n---------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n1.0.5 (2019-04-23)\n++++++++++++++++++\n\n- Run tests for Django 2.2 and Python 3.5, 3.6 and 3.7\n\n1.0.4 (2018-12-17)\n++++++++++++++++++\n\n- Drop support of Python 3.4\n- Confirm support of Python 3.7\n- Drop support of Django 1.8\n- Drop support of Django 1.9\n- Drop support of Django 1.10\n- Confirm support of Django 2.0\n- Confirm support of Django 2.1\n\n\n1.0.3 (2018-04-26)\n++++++++++++++++++\n\n- Python 3.6 support\n- Multiple databases support\n- Github organization changed to \"peopledoc\"\n\n\n1.0.2 (2017-09-22)\n++++++++++++++++++\n\n* Added tests for Django 1.11\n\n1.0.1 (2016-10-19)\n++++++++++++++++++\n\n* Added support for Python 3.4 and current Django stable\n* Fix a thread bug that would make the package usable only for test and not for real :/\n\n1.0.0 (2016-09-15)\n++++++++++++++++++\n\n* First stable version\n\n0.2.0 (2016-09-14)\n++++++++++++++++++\n\n* Rationalized the writing of readonly (vs read-only)\n* Defined default app config\n\n0.1.1 (2016-09-13)\n++++++++++++++++++\n\n* CI improvements\n* Code linting\n\n\n0.1.0 (2016-09-02)\n++++++++++++++++++\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peopledoc/django-readonly-field",
    "keywords": "django-readonly-field",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-readonly-field",
    "package_url": "https://pypi.org/project/django-readonly-field/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-readonly-field/",
    "project_urls": {
      "Homepage": "https://github.com/peopledoc/django-readonly-field"
    },
    "release_url": "https://pypi.org/project/django-readonly-field/1.0.5/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Make Django model fields readonly",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16420035,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "feb10a18c9545dc0d9538d27e08e70e02df2f77d37afd8536d6dde71b9c90e88",
        "md5": "64590f36040aeaac95975c94478eed29",
        "sha256": "d8b7eb152a01c37ec0515b0f1de5657ce9cce733045a74fd661ca55528126e38"
      },
      "downloads": -1,
      "filename": "django_readonly_field-1.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "64590f36040aeaac95975c94478eed29",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6026,
      "upload_time": "2019-04-23T09:19:39",
      "upload_time_iso_8601": "2019-04-23T09:19:39.493690Z",
      "url": "https://files.pythonhosted.org/packages/fe/b1/0a18c9545dc0d9538d27e08e70e02df2f77d37afd8536d6dde71b9c90e88/django_readonly_field-1.0.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2829ccc82beb29e3fd911232cba0aab520f6a5b71b3f92fb6ca4ee0e0a8f273b",
        "md5": "787dee8b08dee22a8cccbe9a6e8f375e",
        "sha256": "eeaca19a20abc48c0a3b323b9f909b9cc6b9bf803ef3a2b4f382c302400c840d"
      },
      "downloads": -1,
      "filename": "django-readonly-field-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "787dee8b08dee22a8cccbe9a6e8f375e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7072,
      "upload_time": "2019-04-23T09:19:41",
      "upload_time_iso_8601": "2019-04-23T09:19:41.602979Z",
      "url": "https://files.pythonhosted.org/packages/28/29/ccc82beb29e3fd911232cba0aab520f6a5b71b3f92fb6ca4ee0e0a8f273b/django-readonly-field-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}