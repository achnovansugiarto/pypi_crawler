{
  "info": {
    "author": "OpenStack",
    "author_email": "openstack-discuss@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: OpenStack",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "Team and repository tags\n========================\n\n.. image:: https://governance.openstack.org/tc/badges/monasca-transform.svg\n    :target: https://governance.openstack.org/tc/reference/tags/index.html\n\n-  `Monasca Transform`_\n\n   -  `Use Cases handled by Monasca Transform`_\n   -  `Operation`_\n   -  `Architecture`_\n   -  `To set up the development environment`_\n   -  `Generic aggregation components`_\n   -  `Create a new aggregation pipeline example`_\n   -  `Original proposal and blueprint`_\n\nMonasca Transform\n=================\n\nmonasca-transform is a data driven aggregation engine which collects,\ngroups and aggregates existing individual Monasca metrics according to\nbusiness requirements and publishes new transformed (derived) metrics to\nthe Monasca Kafka queue.\n\n-  Since the new transformed metrics are published as any other metric\n   in Monasca, alarms can be set and triggered on the transformed\n   metric.\n\n-  Monasca Transform uses `Apache Spark`_ to aggregate data. `Apache\n   Spark`_ is a highly scalable, fast, in-memory, fault tolerant and\n   parallel data processing framework. All monasca-transform components\n   are implemented in Python and use Sparkâ€™s `PySpark Python API`_ to\n   interact with Spark.\n\n-  Monasca Transform does transformation and aggregation of incoming\n   metrics in two phases.\n\n   -  In the first phase spark streaming application is set to retrieve\n      in data from kafka at a configurable *stream interval* (default\n      *stream_inteval* is 10 minutes) and write the data aggregated for\n      *stream interval* to *pre_hourly_metrics* topic in kafka.\n\n   -  In the second phase, which is kicked off every hour, all metrics\n      in *metrics_pre_hourly* topic in Kafka are aggregated again, this\n      time over a larger interval of an hour. These hourly aggregated\n      metrics published to *metrics* topic in kafka.\n\nUse Cases handled by Monasca Transform\n--------------------------------------\n\nPlease refer to **Problem Description** section on the\n`Monasca/Transform wiki`_\n\nOperation\n---------\n\nPlease refer to **How Monasca Transform Operates** section on the\n`Monasca/Transform wiki`_\n\nArchitecture\n------------\n\nPlease refer to **Architecture** and **Logical processing data flow**\nsections on the `Monasca/Transform wiki`_\n\nTo set up the development environment\n-------------------------------------\n\nThe monasca-transform uses `DevStack`_ as a common dev environment. See\nthe `README.md`_ in the devstack directory for details on how to include\nmonasca-transform in a DevStack deployment.\n\nGeneric aggregation components\n------------------------------\n\nMonasca Transform uses a set of generic aggregation components which can\nbe assembled in to an aggregation pipeline.\n\nPlease refer to the\n`generic-aggregation-components`_\ndocument for information on list of generic aggregation components\navailable.\n\nCreate a new aggregation pipeline example\n-----------------------------------------\n\nGeneric aggregation components make it easy to build new aggregation\npipelines for different Monasca metrics.\n\nThis create a `new aggregation pipeline`_ example shows how to create\n*pre_transform_specs* and *transform_specs* to create an aggregation\npipeline for a new set of Monasca metrics, while leveraging existing set\nof generic aggregation components.\n\nOriginal proposal and blueprint\n-------------------------------\n\nOriginal proposal: `Monasca/Transform-proposal`_\n\nBlueprint: `monasca-transform blueprint`_\n\n.. _Apache Spark: https://spark.apache.org\n.. _generic-aggregation-components: docs/generic-aggregation-components.md\n.. _PySpark Python API: https://spark.apache.org/docs/latest/api/python/index.html\n.. _Monasca/Transform wiki: https://wiki.openstack.org/wiki/Monasca/Transform\n.. _DevStack: https://docs.openstack.org/devstack/latest/\n.. _README.md: devstack/README.md\n.. _new aggregation pipeline: docs/create-new-aggregation-pipeline.md\n.. _Monasca/Transform-proposal: https://wiki.openstack.org/wiki/Monasca/Transform-proposal\n.. _monasca-transform blueprint: https://blueprints.launchpad.net/monasca/+spec/monasca-transform\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://wiki.openstack.org/wiki/Monasca/Transform",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "monasca-transform",
    "package_url": "https://pypi.org/project/monasca-transform/",
    "platform": "",
    "project_url": "https://pypi.org/project/monasca-transform/",
    "project_urls": {
      "Homepage": "https://wiki.openstack.org/wiki/Monasca/Transform"
    },
    "release_url": "https://pypi.org/project/monasca-transform/2.0.0/",
    "requires_dist": [
      "PyMySQL (>=0.7.6)",
      "SQLAlchemy (!=1.1.5,!=1.1.6,!=1.1.7,!=1.1.8,>=1.0.10)",
      "monasca-common (>=2.7.0)",
      "oslo.config (>=5.2.0)",
      "oslo.log (>=3.36.0)",
      "oslo.service (!=1.28.1,>=1.24.0)",
      "pbr (!=2.1.0,>=2.0.0)",
      "psutil (>=3.2.2)",
      "six (>=1.10.0)",
      "stevedore (>=1.20.0)",
      "tooz (>=1.58.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Data Aggregation and Transformation component for Monasca",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8409371,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92a5b510e3eb30fb9688510ee0faed76e111711eb4b3f284aa3b783d9e0a6ae4",
        "md5": "239ac60dcfe4f37c1d85be5dfb954974",
        "sha256": "1240dbedd0ea2bf794a52c035b90bff4671e4bcb34e065be68ef2d11411013d2"
      },
      "downloads": -1,
      "filename": "monasca_transform-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "239ac60dcfe4f37c1d85be5dfb954974",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 76179,
      "upload_time": "2020-10-14T10:21:36",
      "upload_time_iso_8601": "2020-10-14T10:21:36.842049Z",
      "url": "https://files.pythonhosted.org/packages/92/a5/b510e3eb30fb9688510ee0faed76e111711eb4b3f284aa3b783d9e0a6ae4/monasca_transform-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40d85c207ba71cdde7250990fdc48354086af9a27f2f62da04b2beaf3023d425",
        "md5": "be4163a8ddd2a9cd1e832d676765a242",
        "sha256": "87697223d17d93d01ccef710b117bd8915569d2c6bcc63afe74966529aff0cf6"
      },
      "downloads": -1,
      "filename": "monasca_transform-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be4163a8ddd2a9cd1e832d676765a242",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 141344,
      "upload_time": "2020-10-14T10:21:38",
      "upload_time_iso_8601": "2020-10-14T10:21:38.171805Z",
      "url": "https://files.pythonhosted.org/packages/40/d8/5c207ba71cdde7250990fdc48354086af9a27f2f62da04b2beaf3023d425/monasca_transform-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}