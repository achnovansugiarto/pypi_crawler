{
  "info": {
    "author": "Joey Wilhelm",
    "author_email": "tarkatronic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===============\ndjango-ssl-auth\n===============\n\n.. image:: https://img.shields.io/pypi/v/django-ssl-auth.svg\n   :target: https://pypi.python.org/pypi/django-ssl-auth\n   :alt: Latest Version\n\n.. image:: https://travis-ci.org/tarkatronic/django-ssl-auth.svg?branch=master\n   :target: https://travis-ci.org/tarkatronic/django-ssl-auth\n   :alt: Test/build status\n\n.. image:: https://codecov.io/gh/tarkatronic/django-ssl-auth/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/tarkatronic/django-ssl-auth\n   :alt: Code coverage\n\nSSL authentication backend and middleware for Django for authenticating users\nwith SSL client certificates\n\nLicense\n=======\n\nMIT license, see LICENSE.txt for full text.\n\nSetup\n=====\n\nSSL\n---\n\nSet up nginx and create SSL certificates for your server and set up the paths\nto server private key, server certificate and CA certificate used to sign\nthe client certificates. Example configuration file is in samples/nginx.conf\n\nIf you are on OS X, I suggest OS X KeyChain access for doing this for\ntesting, as it will automatically make your client certificates available in\nall both Google chrome & Safari. Instructions can be found e.g.\nhttp://www.dummies.com/how-to/content/how-to-become-a-certificate-authority-using-lion-s.html\n\nOn other platforms, there are many tutorials on how to do this with OpenSSL\ne.g. http://pages.cs.wisc.edu/~zmiller/ca-howto/\n\nRestart your ngninx (sudo nginx -s restart), make sure your green unicorn is\nrunning and check that your https:// url loads your application and the\n*server certificate is valid*.\n\nThis module\n-----------\n\n1. run setup.py (sudo python setup.py install) or install the latest release\n   using ``pip install django_ssl_auth``\n\n2. edit your ``settings.py``\n\n   1. add ``\"django_ssl_auth.SSLClientAuthMiddleware\"`` to your ``MIDDLEWARE_CLASSES``\n   2. add ``\"django_ssl_auth.SSLClientAuthBackend\"`` to your ``AUTHENTICATION_BACKENDS``\n\nConfiguration\n~~~~~~~~~~~~~\n\nThere are two things you need to do in ``settings.py``\n\n1. Define a function that can return a dictionary with fields that are required\n   by your user model, e.g.\n   ``USER_DATA_FN = 'django_ssl_auth.fineid.user_dict_from_dn`` is a sample\n   implementation that takes the required fields from the DN of a Finnish\n   government issued ID smart card for the ``contrib.auth.models.User``.\n2. To automatically create ``User``s for all valid certificate holders, set\n   ``AUTOCREATE_VALID_SSL_USERS = True``. Auto-created users will be set to\n   inactive by default, consider using the `User.is_active`_ field in your\n   `LOGIN_REDIRECT_URL`_ view to notifying the user of their status.\n\nFor details, see ``testapp/ssltest/settings.py``\n\nSmart Card support\n~~~~~~~~~~~~~~~~~~\n\nFor (Finnish) instructions see ``doc/fineid/FINEID.md``\n\n\nTODO\n====\n\n* Active directory integration.\n\nHow to get help\n===============\n\nPlease do ask your questions on http://stackoverflow.com/\nI am active there, and more likely to answer you publicly.\nAlso, you can try catching TheJoey on #django@freenode\n\n.. _User.is_active: https://docs.djangoproject.com/en/stable/ref/contrib/auth/#django.contrib.auth.models.User.is_active\n.. _LOGIN_REDIRECT_URL: https://docs.djangoproject.com/en/stable/ref/settings/#login-redirect-url",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/tarkatronic/django-ssl-auth/archive/master.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tarkatronic/django-ssl-auth/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ssl-auth",
    "package_url": "https://pypi.org/project/django-ssl-auth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-ssl-auth/",
    "project_urls": {
      "Download": "https://github.com/tarkatronic/django-ssl-auth/archive/master.tar.gz",
      "Homepage": "https://github.com/tarkatronic/django-ssl-auth/"
    },
    "release_url": "https://pypi.org/project/django-ssl-auth/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django SSL Client Authentication",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7084221,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c59afa7ecb21fc15b4d267944a730b1a9adb0c01c160614a8b62f9f43b371e2b",
        "md5": "55479c1857f3e6b54f112314051ecdd6",
        "sha256": "8f88c7c2da7a7f92f25b226958edf4101efbd2465ba3b95f2701581556615880"
      },
      "downloads": -1,
      "filename": "django-ssl-auth-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "55479c1857f3e6b54f112314051ecdd6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5767,
      "upload_time": "2017-10-16T19:28:19",
      "upload_time_iso_8601": "2017-10-16T19:28:19.579516Z",
      "url": "https://files.pythonhosted.org/packages/c5/9a/fa7ecb21fc15b4d267944a730b1a9adb0c01c160614a8b62f9f43b371e2b/django-ssl-auth-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}