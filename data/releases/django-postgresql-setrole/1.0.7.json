{
  "info": {
    "author": "GoPythonGo.com",
    "author_email": "info@gopythongo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "django-postgresql-setrole\n=========================\n\nA Django application that executes `SET ROLE` on every connection to PostgreSQL\nopened by Django. This is useful if you're using external authentication\nmanagers like `Hashicorp Vault <http://vaultproject.io/>`__\\ .\n\nPostgreSQL's user model (\"roles\") assigns every object created in a database/\ntablespace/schema an \"owner\". Said owner is the *only* user that can modify or\ndrop the object. This means that using a user leased from Vault that expires\nafter a while can't be used to create or migrate tables unless you use the same\nuser every time.\n\nThe solution is to create an \"owner role\". In layman's terms \"a group that has\nall necessary permissions on the database and the INHERIT attribute and will\nact as the 'sudo' user for leased users from the authentication manager\". All\nusers created by the authentication manager will then be assigned this group\nand when they connect to the database execute \"SET ROLE <owner role>\", thereby\nmaking all objects created owned by the owner role.\n\n\nHow do I use this Django application?\n-------------------------------------\nAdd `postgresql_setrole` to `INSTALLED_APPS`. Then in `settings.DATABASES` add\n\n.. code-block:: python\n\n    DATABASES = {\n        \"default\": {\n            ...,  # other settings\n            \"SET_ROLE\": \"mydatabaseowner\",\n        }.\n    }\n\n\nWhy is SET ROLE necessary?\n--------------------------\nThe `INHERIT` attribute is not bidirectional. So if a (user) role is assigned\na (group) role it inherits the group's permissions, but the group does not\ngain any rights on objects created by the user role.\n\nSo what you want is the (group) owner role to own everything.\n\n\nHow do I set this up?\n---------------------\nOn your shell as the `postgres` superuser:\n\n.. code-block:: shell\n\n    # --- create an admin role for Vault\n    # no create database\n    # encrypt password\n    # do not inherit rights\n    # can create roles\n    # not a superuser\n    createuser -D -E -I -l -r -S vaultadmin\n\n    # --- create an owner role for your database\n    # no create database\n    # encrypt password\n    # do not inherit rights\n    # can't create roles\n    # not a superuser\n    createuser -D -E -I -L -R -S mydatabaseowner\n    createdb -E utf8 -O mydatabaseowner mydatabase\n\nThen configure Vault to create roles like this:\n\n.. code-block:: shell\n\n    $ vault mount -path=mydatabase-auth postgresql\n    $ vault write mydatabase-auth/roles/fullaccess sql=-\n    CREATE ROLE \"{{name}}\" WITH LOGIN PASSWORD '{{password}}' VALID\n    UNTIL '{{expiration}}' IN ROLE \"mydatabaseowner\" INHERIT NOCREATEROLE\n    NOCREATEDB NOSUPERUSER NOREPLICATION NOBYPASSRLS;\n\nThen users created by Vault when they log in must run\n\n.. code-block:: sql\n\n    SET ROLE \"mydatabaseowner\";\n\nThis ensures that all created tables and other objects belong to\n`mydatabaseowner`.\n\n\nLicense\n=======\n\nCopyright (c) 2016, Jonas Maurus\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jdelic/django-postgresql-setrole/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-postgresql-setrole",
    "package_url": "https://pypi.org/project/django-postgresql-setrole/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-postgresql-setrole/",
    "project_urls": {
      "Homepage": "https://github.com/jdelic/django-postgresql-setrole/"
    },
    "release_url": "https://pypi.org/project/django-postgresql-setrole/1.0.7/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Execute SET ROLE on every PostgreSQL connection in the Django ORM",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14990285,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b511e515640809a8a19bc82195cc681bf05a9abc03a1047f5c0f6d032b25cca3",
        "md5": "a540f6244444027b1e06429fc7a24110",
        "sha256": "97bc1859cac76605704cd7fea60631d21edbe1b6147f8dc79a5538ea192623ab"
      },
      "downloads": -1,
      "filename": "django_postgresql_setrole-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a540f6244444027b1e06429fc7a24110",
      "packagetype": "bdist_wheel",
      "python_version": "3.4",
      "requires_python": null,
      "size": 6863,
      "upload_time": "2016-09-25T20:10:57",
      "upload_time_iso_8601": "2016-09-25T20:10:57.172390Z",
      "url": "https://files.pythonhosted.org/packages/b5/11/e515640809a8a19bc82195cc681bf05a9abc03a1047f5c0f6d032b25cca3/django_postgresql_setrole-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}