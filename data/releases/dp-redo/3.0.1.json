{
  "info": {
    "author": "Shengqiu Li",
    "author_email": "lishengqiu.hit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dp-redo\n\nA python variant of the [redo](http://cr.yp.to/redo.html) build system, with which You Can (Not) Redo.\n\n## Example\n\nLet's say we have a build process where we read `test.c` and generate `test.o`:\n\n```python\nimport os, sys\nsource_tree = os.path.dirname(os.path.abspath(sys.argv[0]))\n\ndef test():\n    source = os.path.join(source_tree, \"test.c\")\n\n    # The simplest compiler 😁\n    os.system(\"cat {} > {}\".format(source, \"test.o\"))\n\nif __name__ == \"__main__\":\n    test()\n```\n\n`test` will be run every time no matter whether `test.c` gets an update or not, which wastes much time. Now let's add some magic:\n\n```python\nfrom dp_redo import *\nimport os, sys\n\nsource_tree = os.path.dirname(os.path.abspath(sys.argv[0]))\n\n@do(\"test.o\")\ndef test(target_name, target_base_name, output_path):\n    redo_ifchange(\"test.c\")\n    source = os.path.join(source_tree, \"test.c\")\n    os.system(\"cat {} > {}\".format(source, output_path))\n\nif __name__ == \"__main__\":\n    redo_ifchange(test)\n```\n\nIf you run it multiple times:\n\n```\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> python ..\\test2.py\nRedoing target: test\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> python ..\\test2.py\nSkipping target test: it's up to date.\n```\n\nFantastic, isn't it? If you changed `test.c`, modified the `test` method itself, or deleted `test.o`, `test` will be executed again:\n\n```\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> python ..\\test2.py\nRedoing target: test. Reason: It's python code has changed\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> python ..\\test2.py\nRedoing target: test. Reason: The target file doesn't exist\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> python ..\\test2.py\nRedoing target: test. Reason: test.c has been modified\nPS C:\\Users\\lishengq\\source\\repos\\dp-redo\\build> \n```\n\n---\n\nA target method can also depend on another method, which is rather simple:\n\n```python\nfrom dp_redo import *\nimport os, sys\n\nsource_tree = os.path.dirname(os.path.abspath(sys.argv[0]))\n\n@do(\"test2.o\")\ndef test2(target_name, target_base_name, output_path):\n    os.system(\"echo test2 > \" + output_path)\n\n@do(\"test.o\")\ndef test(target_name, target_base_name, output_path):\n    redo_ifchange(test2, \"test.c\")\n    source = os.path.join(source_tree, \"test.c\")\n    os.system(\"cat {} > {}\".format(source, output_path))\n\nif __name__ == \"__main__\":\n    redo_ifchange(test)\n```\n\n---\n\nWhat makes redo more interesting is that, you can call `redo_ifchange` to add dependencies at any time, even after your compilation:\n\n```python\nfrom dp_redo import *\nimport os, sys, re\n\nsource_tree = os.path.dirname(os.path.abspath(sys.argv[0]))\n\n@do(\"test2.o\")\ndef test2(target_name, target_base_name, output_path):\n    print(\"In test2\")\n    os.system(\"echo test2 > \" + output_path)\n\n@do(\"test.o\")\ndef test(target_name, target_base_name, output_path):\n    redo_ifchange(test2)\n    source = os.path.join(source_tree, \"test.c\")\n    os.system(\"gcc -M -MF test.c.dep -o {} {}\".format(output_path, source))\n\n    # Dependent headers given by gcc\n    deps = open('test.c.dep', 'r').read().split(\": \")[1].strip().split(\"\\\\\\n\")\n    redo_ifchange(*deps)\n\nif __name__ == \"__main__\":\n    redo_ifchange(test)\n```\n\nNow when any headers are changed, the build process will be run again.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dontpanic92/dp-redo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dp-redo",
    "package_url": "https://pypi.org/project/dp-redo/",
    "platform": "",
    "project_url": "https://pypi.org/project/dp-redo/",
    "project_urls": {
      "Homepage": "https://github.com/dontpanic92/dp-redo"
    },
    "release_url": "https://pypi.org/project/dp-redo/3.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python variant of the redo build system, with which You Can (Not) Redo.",
    "version": "3.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6261061,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34bdb5b4f9959c75e7e8cf2fa8a519417024fdff7a8c2611d4dabdd02418f5c6",
        "md5": "bf6a21b41f8ef39a9f962dd058cf9e9a",
        "sha256": "40754fa30a350cd6af1747d48325e2c241a409f52b5c485606a98cd267fe8246"
      },
      "downloads": -1,
      "filename": "dp_redo-3.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf6a21b41f8ef39a9f962dd058cf9e9a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5843,
      "upload_time": "2019-12-07T16:56:18",
      "upload_time_iso_8601": "2019-12-07T16:56:18.269783Z",
      "url": "https://files.pythonhosted.org/packages/34/bd/b5b4f9959c75e7e8cf2fa8a519417024fdff7a8c2611d4dabdd02418f5c6/dp_redo-3.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d99a1ab0db122582d8fbd96852519587025567689b1cadeb686573335c8bccb",
        "md5": "16a8f1669cc392e8d05a0e61526eb309",
        "sha256": "15a375587c7282a2e6c557f89b8db9cb539ec35d0132fd631a5f4aa1e2b71c4b"
      },
      "downloads": -1,
      "filename": "dp-redo-3.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "16a8f1669cc392e8d05a0e61526eb309",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4373,
      "upload_time": "2019-12-07T16:56:19",
      "upload_time_iso_8601": "2019-12-07T16:56:19.991802Z",
      "url": "https://files.pythonhosted.org/packages/2d/99/a1ab0db122582d8fbd96852519587025567689b1cadeb686573335c8bccb/dp-redo-3.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}