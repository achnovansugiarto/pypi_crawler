{
  "info": {
    "author": "Jaap Joris Vens",
    "author_email": "jj@rtts.eu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DjHTML\n\n***A pure-Python Django/Jinja template indenter without dependencies.***\n\nDjHTML is a fully automatic template indenter that works with mixed\nHTML/CSS/Javascript templates that contain\n[Django](https://docs.djangoproject.com/en/stable/ref/templates/language/)\nor [Jinja](https://jinja.palletsprojects.com/templates/) template\ntags. It works similar to other code-formatting tools such as\n[Black](https://github.com/psf/black) and interoperates nicely with\n[pre-commit](https://pre-commit.com/).\n\nDjHTML is an _indenter_ and not a _formatter_: it will only add/remove\nwhitespace at the beginning of lines. It will not insert newlines or\nother characters. The goal is to correctly indent already\nwell-structured templates, not to fix broken ones.\n\nFor example, consider the following incorrectly indented template:\n\n```jinja\n<!doctype html>\n<html>\n    <body>\n        {% block content %}\n        Hello, world!\n        {% endblock %}\n        <script>\n            $(function() {\n            console.log('Hi mom!');\n            });\n        </script>\n    </body>\n</html>\n```\n\nThis is what it will look like after processing by DjHTML:\n\n```jinja\n<!doctype html>\n<html>\n    <body>\n        {% block content %}\n            Hello, world!\n        {% endblock %}\n        <script>\n            $(function() {\n                console.log('Hi mom!');\n            });\n        </script>\n    </body>\n</html>\n```\n\n\n## Installation\n\nInstall DjHTML with the following command:\n\n    $ pip install djhtml\n\n\n## Usage\n\nAfter installation you can indent templates using the `djhtml`\ncommand. The default is to write the indented output to standard out.\nTo modify the source file in-place, use the `-i` / `--in-place`\noption:\n\n    $ djhtml -i template.html\n    reindented template.html\n    1 template has been reindented.\n\nNormally, the exit status of 0 means everything went well, regardless\nof whether any files were changed. If any errors were encountered, the\nexit status indicated the number of problematic files. However, when\nthe option `-c` / `--check` is used, the exit status is the number of\nfiles that would have changed, but no changes are actually made.\n\nAll available options are:\n\n- `-h` / `--help`: show overview of available options\n- `-i` / `--in-place`: modify files in-place\n- `-c` / `--check`: don't modify files; the exit status is the number\n    of files that would have changed\n- `-q` / `--quiet`: don't print any output\n- `-t` / `--tabwidth`: set tabwidth (default is 4)\n- `-o` / `--output-file`: write output to specified file\n\n\n## `fmt:off` and `fmt:on`\n\nYou can exclude specific lines from being processed with the\n`{# fmt:off #}` and `{# fmt:on #}` operators:\n\n```jinja\n<div class=\"\n    {# fmt:off #}\n      ,-._|\\\n     /     .\\\n     \\_,--._/\n    {# fmt:on #}\n\"/>\n```\n\nContents inside `<pre> ... </pre>`, `<!-- ... --->`, `/* ... */`, and\n`{% comment %} ... {% endcomment %}` tags are also ignored (depending\non the current mode).\n\n\n## Modes\n\nThe indenter operates in one of three different modes:\n\n- DjHTML mode: the default mode. Invoked by using the `djhtml` command\n  or the pre-commit hook.\n\n- DjCSS mode. Will be entered when a `<style>` tag is encountered in\n  DjHTML mode. It can also be invoked directly with the command\n  `djcss`.\n\n- DjJS mode. Will be entered when a `<script>` tag is encountered in\n  DjHTML mode. It can also be invoked directly with the command\n  `djjs`.\n\n\n## pre-commit configuration\n\nYou can use DjHTML as a [pre-commit](https://pre-commit.com/) hook to\nautomatically indent your templates upon each commit.\n\nFirst, install pre-commit:\n\n    $ pip install pre-commit\n    $ pre-commit install\n\nThen, add the following to your `.pre-commit-config.yaml`:\n\n```yml\nrepos:\n- repo: https://github.com/rtts/djhtml\n  rev: main\n  hooks:\n    - id: djhtml\n```\n\nFinally, run the following command:\n\n    $ pre-commit autoupdate\n\nNow when you run `git commit` you will see something like the\nfollowing output:\n\n    $ git commit\n\n    djhtml...................................................................Failed\n    - hook id: djhtml\n    - files were modified by this hook\n\n    reindented template.html\n    1 template has been reindented.\n\nTo inspect the changes that were made, use `git diff`. If you are\nhappy with the changes, you can commit them normally. If you are not\nhappy, please do the following:\n\n1. Run `SKIP=djhtml git commit` to commit anyway, skipping the\n   `djhtml` hook.\n\n2. Consider [opening an issue](https://github.com/rtts/djhtml/issues)\n   with the relevant part of the input file that was incorrectly\n   formatted, and an example of how it should have been formatted.\n\nYour feedback for improving DjHTML is very welcome!\n\n## Development\n\nUse your preferred system for setting up a virtualenv, docker environment,\nor whatever else, then run the following:\n\n```sh\npython -m pip install -e .[dev]\npre-commit install --install-hooks\n```\n\nTests can then be run quickly in that environment:\n\n```sh\npython -m unittest discover -v\n```\n\nOr testing in all available supported environments and linting can be run\nwith [`nox`](https://nox.thea.codes):\n\n```sh\nnox\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtts/djhtml",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djhtml",
    "package_url": "https://pypi.org/project/djhtml/",
    "platform": "",
    "project_url": "https://pypi.org/project/djhtml/",
    "project_urls": {
      "Homepage": "https://github.com/rtts/djhtml"
    },
    "release_url": "https://pypi.org/project/djhtml/1.4.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django/Jinja template indenter",
    "version": "1.4.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17324920,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89e9c75017d0d8ea0c8a7eb00c0839a65266f5a7c525caa875cb343e1d209977",
        "md5": "02415de625d0919fe4055b7a0f181d43",
        "sha256": "9b82f1717a2830d478b14defb95dad9a8fe35e780462ed90202f23ce94892383"
      },
      "downloads": -1,
      "filename": "djhtml-1.4.8.tar.gz",
      "has_sig": false,
      "md5_digest": "02415de625d0919fe4055b7a0f181d43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23528,
      "upload_time": "2021-06-07T11:31:56",
      "upload_time_iso_8601": "2021-06-07T11:31:56.956574Z",
      "url": "https://files.pythonhosted.org/packages/89/e9/c75017d0d8ea0c8a7eb00c0839a65266f5a7c525caa875cb343e1d209977/djhtml-1.4.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}