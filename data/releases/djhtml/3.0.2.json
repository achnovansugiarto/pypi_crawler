{
  "info": {
    "author": "Jaap Joris Vens",
    "author_email": "jj@rtts.eu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DjHTML\n\n***A pure-Python Django/Jinja template indenter without dependencies.***\n\nDjHTML indents mixed HTML/CSS/JavaScript templates that contain\n[Django](https://docs.djangoproject.com/en/stable/ref/templates/language/)\nor [Jinja](https://jinja.palletsprojects.com/templates/) template\ntags. It works similar to other code-formatting tools such as\n[Black](https://github.com/psf/black) and interoperates nicely with\n[pre-commit](https://pre-commit.com/).\n\nDjHTML is an _indenter_ and not a _formatter_: it will only add/remove\nwhitespace at the beginning of lines. It will not insert newlines or\nother characters. The goal is to correctly indent already\nwell-structured templates, not to fix broken ones.\n\n\n### New! Multi-line HTML elements\n\nAs of version 3, DjHTML indents multi-line HTML elements and\nmulti-line attribute values like this:\n\n```jinja\n<blockquote cite=\"Guido Van Rossum\"\n            style=\"font-style: italic;\n                   {% if dark_mode %}\n                       background: black;\n                   {% endif %}\n                  \">\n    Don't you hate code that's not properly indented?\n</blockquote>\n```\n\n\n### New! Multi-line CSS indentation\n\nMulti-line CSS values are now continued at the same indentation level:\n\n```jinja\n<style>\n    @font-face {\n        font-family: Helvetica;\n        src: {% for format, filename in licensed_fonts %}\n                 url('{% static filename %}') format('{{ format }}'),\n             {% endfor %}\n             url('Arial.woff2') format('woff2'),\n             url('Arial.woff') format('woff');\n    }\n</style>\n```\n\n\n### New! Improved JavaScript indentation\n\nMany new JavaScript indention rules have been added, such as the\nindentation of method chaining:\n\n```jinja\n<script>\n    window.fetch('/test.html')\n        .then((html) => {\n            document.body.innerHTML = html;\n            {% block extra_statements %}\n            {% endblock %}\n        });\n</script>\n```\n\n\n### New! Tabwidth guessing\n\nWithout the `-t` / `--tabwidth` argument, DjHTML no longer defaults to\na tabwidth of 4 but instead guesses the correct tabwidth.\n\n\n## Installation\n\nDjHTML requires Python 3.8 or higher and is compatible with all\noperating systems supported by Python. Install DjHTML with the\nfollowing command:\n\n    $ pip install djhtml\n\nNote that\n[Windows still uses legacy code pages](https://docs.python.org/3/using/windows.html#win-utf8-mode)\ninstead of UTF-8. It is highly advised to set the environment variable\n`PYTHONUTF8` to `1` with the\n[setx](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx)\ncommand:\n\n    C:\\> setx /m PYTHONUTF8 1\n\n\n## Usage\n\nAfter installation you can indent templates using the `djhtml`\ncommand:\n\n    $ djhtml template.html\n    reindented template.html\n    1 template has been reindented.\n\nYou can also run `djhtml .` to indent all HTML files beneath the\ncurrent directory.\n\nAn exit status of 0 means that everything went well, regardless of\nwhether any files were changed. When the option `-c` / `--check` is\nused, the exit status is 1 when one or more files would have changed,\nbut no changes are actually made. All available options are given by\n`djthml -h` / `djthml --help`.\n\n\n## `fmt:off` and `fmt:on`\n\nYou can exclude specific lines from being processed with the\n`{# fmt:off #}` and `{# fmt:on #}` operators:\n\n```jinja\n{# fmt:off #}\n   ,-._|\\\n  /     .\\\n  \\_,--._/\n{# fmt:on #}\n```\n\nContents inside `<pre> ... </pre>`, `<!-- ... --->`, `/* ... */`, and\n`{% comment %} ... {% endcomment %}` tags are also ignored (depending\non the current mode).\n\n\n## Modes\n\nThe indenter operates in one of three different modes:\n\n- DjHTML mode: the default mode. Invoked by using the `djhtml` command\n  or the pre-commit hook.\n\n- DjCSS mode. Will be entered when a `<style>` tag is encountered in\n  DjHTML mode. It can also be invoked directly with the command\n  `djcss`.\n\n- DjJS mode. Will be entered when a `<script>` tag is encountered in\n  DjHTML mode. It can also be invoked directly with the command\n  `djjs`.\n\n\n## pre-commit configuration\n\nA great way to use DjHTML is as a [pre-commit](https://pre-commit.com/)\nhook, so all your HTML, CSS and JavaScript files will automatically be\nindented upon every commit.\n\nFirst, install pre-commit:\n\n    $ pip install pre-commit\n    $ pre-commit install\n\nThen, add the following to your `.pre-commit-config.yaml`:\n\n```yml\nrepos:\n  - repo: https://github.com/rtts/djhtml\n    rev: 'main'  # replace with the latest tag on GitHub\n    hooks:\n      - id: djhtml\n      - id: djcss\n      - id: djjs\n```\n\nNow run `pre-commit autoupdate` to automatically replace `main` with\nthe latest tag on GitHub,\n[as recommended by pre-commit](https://pre-commit.com/#using-the-latest-version-for-a-repository).\n\nIf you want to override a command-line option, for example to change\nthe default tabwidth, you change the `entry` point of these hooks:\n\n```yml\n    hooks:\n      - id: djhtml\n        # Use a tabwidth of 2 for HTML files\n        entry: djhtml --tabwidth 2\n      - id: djcss\n      - id: djjs\n```\n\nIf you want to limit the files these hooks operate on, you can use\n[pre-commit mechanisms for filtering](https://pre-commit.com/#filtering-files-with-types).\nFor example:\n\n```yml\n    hooks:\n      - id: djhtml\n        # Indent only HTML files in template directories\n        files: .*/templates/.*\\.html$\n      - id: djcss\n        # Run this hook only on SCSS files (CSS and SCSS is the default)\n        types: [scss]\n      - id: djjs\n        # Exclude JavaScript files in vendor directories\n        exclude: .*/vendor/.*\n```\n\nNow when you run `git commit` you will see something like the\nfollowing output:\n\n    $ git commit\n\n    DjHTML...................................................................Failed\n    - hook id: djhtml\n    - files were modified by this hook\n\n    reindented template.html\n    1 template has been reindented.\n\nTo inspect the changes that were made, use `git diff`. If you are\nhappy with the changes, you can commit them normally. If you are not\nhappy, please do the following:\n\n1. Run `SKIP=djhtml git commit` to commit anyway, skipping the\n   `djhtml` hook.\n\n2. Consider [opening an issue](https://github.com/rtts/djhtml/issues)\n   with the relevant part of the input file that was incorrectly\n   formatted, and an example of how it should have been formatted.\n\nYour feedback for improving DjHTML is very welcome!\n\n\n## Development\n\nFirst of all, clone this repository:\n\n    $ git clone https://github.com/rtts/djhtml\n    $ cd djhtml\n\nThen, create a Python virtualenv and activate it:\n\n    $ python -m venv ~/.virtualenvs/djhtml\n    $ . ~/.virtualenvs/djhtml/bin/activate\n\nThen, install the package in [development\nmode](https://setuptools.pypa.io/en/latest/userguide/development_mode.html)\nincluding the `dev` dependencies, and install the pre-commit hooks:\n\n    $ python -m pip install -e '.[dev]'\n    $ pre-commit install --install-hooks\n\nYou can run the unittests with:\n\n    $ python -m unittest\n\nOr use [`nox`](https://nox.thea.codes) to test all supported Python\ninterpreters:\n\n    $ nox\n\nFinally, to get a little insight into the tokenization step of the\nindenting algorithm, you can run DjHTML with the `-d` / `--debug`\nargument. You will see a Python representation of the tokens that are\ncreated.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtts/djhtml",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djhtml",
    "package_url": "https://pypi.org/project/djhtml/",
    "platform": null,
    "project_url": "https://pypi.org/project/djhtml/",
    "project_urls": {
      "Homepage": "https://github.com/rtts/djhtml"
    },
    "release_url": "https://pypi.org/project/djhtml/3.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django/Jinja template indenter",
    "version": "3.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17324920,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b60f5be9e91f5e9d1c9b46831987cb0087ad760827b239359c8d1e33174183e5",
        "md5": "52b1a8d8be5e6c790dade24876ca0821",
        "sha256": "f260cdfe7033b21ebc01961db7e1c8832fd5830ec9af1b0e57f3e1f58deb1bd0"
      },
      "downloads": -1,
      "filename": "djhtml-3.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "52b1a8d8be5e6c790dade24876ca0821",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27530,
      "upload_time": "2023-02-24T07:55:23",
      "upload_time_iso_8601": "2023-02-24T07:55:23.065693Z",
      "url": "https://files.pythonhosted.org/packages/b6/0f/5be9e91f5e9d1c9b46831987cb0087ad760827b239359c8d1e33174183e5/djhtml-3.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}