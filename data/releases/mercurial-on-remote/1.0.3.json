{
  "info": {
    "author": "Marcin Kasperski",
    "author_email": "Marcin.Kasperski@mekk.waw.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Version Control"
    ],
    "description": ".. -*- mode: rst; compile-command: \"rst2html README.rst README.html\" -*-\n\n====================================\nMercurial OnRemote extension\n====================================\n\nExecute some Mercurial command on remote repository (ssh/local repositories only).\n\n.. contents::\n   :local:\n   :depth: 2\n\n.. sectnum::\n\nExample\n=====================\n\nMy two main use cases:\n\n- update remote directory after pushing::\n\n    hg push staging\n    hg onremote staging update -r tip \n\n- check status and possibly commit in remote directory::\n\n    hg onremote rhdevel status\n    hg onremote rhdevel commit -m 'Forgotten typo'\n\nIn those examples ``staging`` and ``rhdevel`` are remote paths, mapped\nto urls like ``ssh://some.machine.net/repos/myrepo`` (local paths work\ntoo). \n\nExplicit path works too, but is much less handy::\n\n    hg onremote ssh://euler.mydev.net/repos/myrepo   status\n\nArguments\n======================\n\nGeneral command syntax::\n\n    hg onremote «remote» «command» «arguments»\n\nwhere ``«remote»`` is remote repository alias or path, and remaining arguments\nconstitute normal mercurial command.\n\nOption ``--ssh`` can be used just like with push or pull::\n \n    hg onremote --ssh /custom/ssh staging status\n\n\nHow does it work\n=================================================\n\nThe extension simply resolves the specified path, and:\n\n- if it maps to local directory, executes ``hg --cwd that/directory «command» «arguments»``\n\n- if it maps to ssh path, executes ``ssh that/machine hg --cwd that/directory «command» «arguments»``\n\n- elsewhere (``http`` or other remote) it refuses to work.\n\nThere is nothing particularly magical, the extension is intended to\nsave some keystrokes and avoid flow interruption (I wrote it mainly\nto stop writing various *push and update* shell scripts).\n\n.. caution::\n\n   You need true ssh access to have it working. Remote repositories,\n   from ``bitbucket`` to ``mercurial-server`` installations will usually\n   reject attempts to run commands (as one could expect).\n\n\nConfiguration\n=================================================\n\nThere is currently no dedicated configuration. \n\nStandard mercurial settings are used to decide how to call\n``ssh`` and which remote command to call to spawn Mercurial (see\n``ssh`` and ``remotecmd`` settings in ``[ui]`` section). \nThis way ``onremote`` uses the same ``ssh`` command\nwhich is used by ``hg push`` and ``hg pull``, and the same\nmercurial name.\n\n\nProblems and limitations\n=================================================\n\nInteractive commands may fail to work properly due to lack\nof fully working console. \nI recommend avoiding commands which trigger interactive prompts\nor editor spawns. If you try ``hg onremote commit`` add ``-m \"Some message\"``.\n\n.. note::\n\n   At the moment OnRemote doesn't initialize full terminal support\n   (technically, doesn't add ``ssh -t`` or similar). It may\n   change in the future.\n\nInstallation\n=================================================\n\nMercurial ≥ 3.4 is required (attempts to run on older version will\nresult in crashes) and Mercurial ≥ 4.5 is strongly recommended\n(versions 3.4-4.4 involve some hacks which may fail for more\ncomplicated arguments).\n\nLinux/Unix (from PyPI)\n~~~~~~~~~~~~~~~~~~~~~~\n\nIf you have working ``pip`` or ``easy_install``::\n\n    pip install --user mercurial_on_remote\n\nor maybe::\n\n    sudo pip install mercurial_on_remote\n\n(or use ``easy_install`` instead of ``pip``). Then activate by::\n\n    [extensions]\n    mercurial_on_remote =\n\nTo upgrade, repeat the same command with ``--upgrade`` option, for\nexample::\n\n    pip install --user --upgrade mercurial_on_remote\n\nLinux/Unix (from source)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you don't have ``pip``, or wish to follow development more closely:\n\n- clone both this repository and `mercurial_extension_utils`_ and put\n  them in the same directory, for example::\n\n    cd ~/sources\n    hg clone https://foss.heptapod.net/mercurial/mercurial-extension_utils/\n    hg clone https://foss.heptapod.net/mercurial/mercurial-on_remote/\n\n- update to newest tags,\n\n- activate by::\n\n    [extensions]\n    mercurial_on_remote = ~/sources/mercurial-on_remote/mercurial_on_remote.py\n\nTo upgrade, pull and update.\n\nSee `mercurial_extension_utils`_ for longer description of this kind\nof installation.\n\nWindows\n~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you have any Python installed, you may install with ``pip``::\n\n    pip install mercurial_on_remote\n\nStill, as Mercurial (whether taken from TortoiseHg_, or own package)\nuses it's own bundled Python, you must activate by specifying the path::\n\n    [extensions]\n    mercurial_on_remote = C:/Python27/Lib/site-packages/mercurial_on_remote.py\n    ;; Or wherever pip installed it\n\nTo upgrade to new version::\n\n    pip --upgrade mercurial_on_remote\n\nIf you don't have any Python, clone repositories::\n\n    cd c:\\hgplugins\n    hg clone https://foss.heptapod.net/mercurial/mercurial-extension_utils/\n    hg clone https://foss.heptapod.net/mercurial/mercurial-on_remote/\n\nupdate to tagged versions and activate by path::\n\n    [extensions]\n    mercurial_on_remote = C:/hgplugins/mercurial-on_remote/mercurial_on_remote.py\n    ;; Or wherever you cloned\n\nSee `mercurial_extension_utils`_ documentation for more details on\nWindows installation. \n\nHistory\n==================================================\n\nSee `HISTORY.rst`_\n\nRepository, bug reports, enhancement suggestions\n===================================================\n\nDevelopment is tracked on HeptaPod, see \nhttps://foss.heptapod.net/mercurial/mercurial-on_remote/\n\nUse issue tracker there for bug reports and enhancement\nsuggestions.\n\nThanks to Octobus_ and `Clever Cloud`_ for hosting this service.\n\nAdditional notes\n================\n\nInformation about this extension is also available\non Mercurial Wiki: http://mercurial.selenic.com/wiki/OnRemoteExtension\n\nCheck also `other Mercurial extensions I wrote`_.\n\n.. _Octobus: https://octobus.net/\n.. _Clever Cloud: https://www.clever-cloud.com/\n\n.. _other Mercurial extensions I wrote: http://code.mekk.waw.pl/mercurial.html\n\n.. _Mercurial: http://mercurial.selenic.com\n.. _HISTORY.rst: https://foss.heptapod.net/mercurial/mercurial-on_remote/src/tip/HISTORY.rst\n.. _mercurial_extension_utils: https://pypi.org/project/mercurial-extension_utils/\n\n.. _TortoiseHg: http://tortoisehg.bitbucket.org/\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://foss.heptapod.net/mercurial/mercurial-on_remote",
    "keywords": "mercurial subdirs multi alias",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mercurial_on_remote",
    "package_url": "https://pypi.org/project/mercurial_on_remote/",
    "platform": "",
    "project_url": "https://pypi.org/project/mercurial_on_remote/",
    "project_urls": {
      "Homepage": "https://foss.heptapod.net/mercurial/mercurial-on_remote"
    },
    "release_url": "https://pypi.org/project/mercurial_on_remote/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mercurial OnRemote Extension",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15063813,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3188900cd3d9f2b6a071045072fbbf73a09dad841e31108518bcb8bb702f909",
        "md5": "5a84f983fd39d9d78279c95b78d50297",
        "sha256": "cfd991f053b55ab1d1f98543f48bc6bd64a95261f05345207155e9a45490a454"
      },
      "downloads": -1,
      "filename": "mercurial_on_remote-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5a84f983fd39d9d78279c95b78d50297",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16285,
      "upload_time": "2021-04-02T07:37:36",
      "upload_time_iso_8601": "2021-04-02T07:37:36.115445Z",
      "url": "https://files.pythonhosted.org/packages/c3/18/8900cd3d9f2b6a071045072fbbf73a09dad841e31108518bcb8bb702f909/mercurial_on_remote-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}